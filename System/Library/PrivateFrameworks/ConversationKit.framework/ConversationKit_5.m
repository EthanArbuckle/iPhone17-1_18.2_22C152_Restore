unint64_t lazy protocol witness table accessor for type Features.CallUI and conformance Features.CallUI()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.CallUI and conformance Features.CallUI;
  if (!lazy protocol witness table cache variable for type Features.CallUI and conformance Features.CallUI)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.CallUI and conformance Features.CallUI);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Features.CallUI and conformance Features.CallUI;
  if (!lazy protocol witness table cache variable for type Features.CallUI and conformance Features.CallUI)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.CallUI and conformance Features.CallUI);
  }
  return result;
}

uint64_t Features.isHeroImageEnabled.getter()
{
  return Features.isHeroImageEnabled.getter(0);
}

uint64_t Features.isHeroTitleEnabled.getter()
{
  return OUTLINED_FUNCTION_3_90((uint64_t)&unk_1F1EA3C48, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.CallUI and conformance Features.CallUI);
}

uint64_t Features.fullScreenOutgoingFTAEnabled.getter()
{
  return OUTLINED_FUNCTION_5_80((uint64_t)&unk_1F1EA3BB8, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.ConversationKit and conformance Features.ConversationKit);
}

uint64_t Features.isModernMePiPEnabled.getter()
{
  return OUTLINED_FUNCTION_2_81((uint64_t)&unk_1F1EA3BB8, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.ConversationKit and conformance Features.ConversationKit);
}

uint64_t Features.isPoorConnectionLabelsEnabled.getter()
{
  return OUTLINED_FUNCTION_3_90((uint64_t)&unk_1F1EA3BB8, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.ConversationKit and conformance Features.ConversationKit);
}

uint64_t Features.isEnhancedEmergencyEnabled.getter()
{
  return OUTLINED_FUNCTION_1_97((uint64_t)&unk_1F1EA3BB8, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.ConversationKit and conformance Features.ConversationKit);
}

uint64_t Features.isSADMessagesEnabled.getter()
{
  return Features.isHeroTitleEnabled.getter((uint64_t)&unk_1F1EA3BB8, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.ConversationKit and conformance Features.ConversationKit, 3);
}

uint64_t Features.isDialPadEnabled.getter()
{
  return Features.isHeroImageEnabled.getter(3u);
}

uint64_t Features.isButtonLayoutEnabled.getter()
{
  return Features.isHeroImageEnabled.getter(2u);
}

uint64_t Features.isHeroImageEnabled.getter(unsigned __int8 a1)
{
  id v2 = objc_msgSend(self, sel_currentDevice);
  id v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  lazy protocol witness table accessor for type Features.CallUI and conformance Features.CallUI();
  uint64_t v4 = isFeatureEnabled(_:)();
  OUTLINED_FUNCTION_6_74(v4);
  return a1 & (v3 != (id)1);
}

uint64_t Features.isScreeningLiveActivityEnabled.getter()
{
  return Features.isScreeningLiveActivityEnabled.getter((uint64_t)&unk_1F1EA3B28, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.CallScreening and conformance Features.CallScreening);
}

uint64_t Features.shouldEmbedSwapBanner.getter()
{
  if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xA0))())
  {
    lazy protocol witness table accessor for type Features.CallUI and conformance Features.CallUI();
    uint64_t v2 = OUTLINED_FUNCTION_7_69();
    OUTLINED_FUNCTION_6_74(v2);
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t Features.isFaceTimeMyselfEnabled.getter()
{
  uint64_t result = (uint64_t)objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    v1 = (void *)result;
    char v2 = FTServerBag.isServerFaceTimeMyselfEnabled.getter();

    if (v2)
    {
      lazy protocol witness table accessor for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities();
      uint64_t v3 = OUTLINED_FUNCTION_7_69();
      OUTLINED_FUNCTION_6_74(v3);
      return 1;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Features.shouldShowFullScreenCallWaiting.getter()
{
  OUTLINED_FUNCTION_10_1();
  char v2 = *(uint64_t (**)(void))(v1 + 80);
  if (v2())
  {
    OUTLINED_FUNCTION_10_1();
    if ((*(uint64_t (**)(void))(v3 + 216))()) {
      return 0;
    }
  }
  OUTLINED_FUNCTION_10_1();
  if ((*(uint64_t (**)(void))(v4 + 88))())
  {
    OUTLINED_FUNCTION_10_1();
    if ((*(uint64_t (**)(void))(v5 + 176))()) {
      return 0;
    }
  }
  if (((lazy protocol witness table accessor for type Features.CallUI and conformance Features.CallUI(),
         uint64_t v6 = OUTLINED_FUNCTION_7_69(),
         uint64_t v7 = OUTLINED_FUNCTION_6_74(v6),
         (v0 & 1) != 0)
     || (OUTLINED_FUNCTION_10_1(), uint64_t v7 = (*(uint64_t (**)(void))(v8 + 216))(), (v7 & 1) != 0))
    && (((uint64_t (*)(uint64_t))v2)(v7) & 1) != 0)
  {
    return 0;
  }
  else
  {
    return 1;
  }
}

uint64_t Features.isDominoEnabled.getter()
{
  return Features.isScreeningLiveActivityEnabled.getter((uint64_t)&unk_1F1EA3A08, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.SpringBoard and conformance Features.SpringBoard);
}

uint64_t Features.callManagerEnabled.getter()
{
  uint64_t v1 = (__CFString *)MEMORY[0x1C87730B0](0xD000000000000012, 0x80000001C37A2D50);
  char v2 = (__CFString *)MEMORY[0x1C87730B0](0xD000000000000017, 0x80000001C37A2D70);
  CFPropertyListRef v3 = CFPreferencesCopyValue(v1, v2, (CFStringRef)*MEMORY[0x1E4F1D3F8], (CFStringRef)*MEMORY[0x1E4F1D3E8]);

  if (v3)
  {
    self;
    uint64_t v4 = (void *)swift_dynamicCastObjCClass();
    if (!v4) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))() & 1) != 0
    && (v9 = &unk_1F1EA3A98,
        unint64_t v10 = lazy protocol witness table accessor for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities(),
        char v5 = OUTLINED_FUNCTION_7_69(),
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v8),
        (v5 & 1) != 0))
  {
    if (v4)
    {
      id v6 = objc_msgSend(v4, sel_BOOLValue);
    }
    else
    {
      return 1;
    }
  }
  else
  {

    return 0;
  }
  return (uint64_t)v6;
}

uint64_t Features.hudActivityManagerEnabled.getter()
{
  OUTLINED_FUNCTION_4_13();
  if ((*(uint64_t (**)(void))(v0 + 216))()) {
    return 1;
  }
  OUTLINED_FUNCTION_4_13();
  if ((*(uint64_t (**)(void))(v1 + 232))()) {
    return 1;
  }
  OUTLINED_FUNCTION_4_13();
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 240);
  return v4();
}

uint64_t Features.requestToScreenShareEnabled.getter()
{
  return OUTLINED_FUNCTION_1_97((uint64_t)&unk_1F1EA3A98, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities);
}

uint64_t Features.usesModernScreenSharingFromMessages.getter()
{
  return Features.isScreeningLiveActivityEnabled.getter((uint64_t)&unk_1F1EA3978, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.Messages and conformance Features.Messages);
}

uint64_t Features.isAppProtectionEnabled.getter()
{
  return Features.isScreeningLiveActivityEnabled.getter((uint64_t)&unk_1F1EA38E8, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.AppProtection and conformance Features.AppProtection);
}

uint64_t Features.buttonRemoteControlEnabled.getter()
{
  return Features.isScreeningLiveActivityEnabled.getter((uint64_t)&unk_1F1EA3858, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.DockKit and conformance Features.DockKit);
}

uint64_t Features.callRecordingEnabled.getter()
{
  return OUTLINED_FUNCTION_5_80((uint64_t)&unk_1F1EA3A98, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.TelephonyUtilities and conformance Features.TelephonyUtilities);
}

uint64_t Features.callRecordingDominoEnabled.getter()
{
  return Features.isHeroTitleEnabled.getter((uint64_t)&unk_1F1EA3BB8, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.ConversationKit and conformance Features.ConversationKit, 5);
}

uint64_t Features.lvm_stopEnabled.getter()
{
  return OUTLINED_FUNCTION_2_81((uint64_t)&unk_1F1EA3738, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.LVM and conformance Features.LVM);
}

uint64_t Features.lvm_allowLockScreenSleepEnabled.getter()
{
  return OUTLINED_FUNCTION_3_90((uint64_t)&unk_1F1EA3738, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.LVM and conformance Features.LVM);
}

uint64_t Features.lvm_endCallImmediately.getter()
{
  return OUTLINED_FUNCTION_1_97((uint64_t)&unk_1F1EA3738, (uint64_t (*)(void))lazy protocol witness table accessor for type Features.LVM and conformance Features.LVM);
}

const char *Features.CallUI.feature.getter(char a1)
{
  uint64_t result = "CallUI_HeroImage";
  switch(a1)
  {
    case 1:
      uint64_t result = "CallUI_HeroTitle";
      break;
    case 2:
      uint64_t result = "CallUI_ButtonLayout";
      break;
    case 3:
      uint64_t result = "CallUI_DialPad";
      break;
    case 4:
      uint64_t result = "CallUI_Banners";
      break;
    case 5:
      uint64_t result = "CallUI_EmbedSwapBanner";
      break;
    case 6:
      uint64_t result = "CallUI_DynamicIsland_IncomingBannerOverSixUp";
      break;
    default:
      return result;
  }
  return result;
}

const char *protocol witness for FeatureFlagsKey.feature.getter in conformance Features.CallUI()
{
  return Features.CallUI.feature.getter(*v0);
}

const char *Features.CallScreening.domain.getter()
{
  return "ConversationKit";
}

const char *Features.CallScreening.feature.getter()
{
  return "Experimental_CallScreening_LiveActivity";
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Features.CallScreening()
{
  return Features.CallScreening.hashValue.getter();
}

const char *Features.LVM.feature.getter(char a1)
{
  if (!a1) {
    return "LVM_Stop";
  }
  if (a1 == 1) {
    return "LVM_AllowLockScreenSleep";
  }
  return "LVM_EndCallImmediately";
}

const char *protocol witness for FeatureFlagsKey.domain.getter in conformance Features.LVM()
{
  return Features.CallScreening.domain.getter();
}

const char *protocol witness for FeatureFlagsKey.feature.getter in conformance Features.LVM()
{
  return Features.LVM.feature.getter(*v0);
}

const char *Features.ConversationKit.feature.getter(char a1)
{
  uint64_t result = "FullScreenOutgoingFTA";
  switch(a1)
  {
    case 1:
      uint64_t result = "PoorConnectionLabels";
      break;
    case 2:
      uint64_t result = "EnhancedEmergency";
      break;
    case 3:
      uint64_t result = "SADMessages";
      break;
    case 4:
      return result;
    case 5:
      uint64_t result = "CallRecordingDomino";
      break;
    default:
      uint64_t result = "ModernMePiP";
      break;
  }
  return result;
}

const char *protocol witness for FeatureFlagsKey.feature.getter in conformance Features.ConversationKit()
{
  return Features.ConversationKit.feature.getter(*v0);
}

const char *Features.SpringBoard.domain.getter()
{
  return "SpringBoard";
}

const char *Features.SpringBoard.feature.getter()
{
  return "Domino";
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Features.TelephonyUtilities()
{
  return ConversationControlsContext.hashValue.getter(*v0);
}

const char *Features.Messages.domain.getter()
{
  return "Messages";
}

const char *Features.Messages.feature.getter()
{
  return "usesModernScreenSharingFromMessages";
}

const char *Features.AppProtection.domain.getter()
{
  return "AppProtection";
}

const char *Features.AppProtection.feature.getter()
{
  return "protected_apps";
}

const char *Features.DockKit.domain.getter()
{
  return "DockKit";
}

const char *Features.DockKit.feature.getter()
{
  return "ButtonRemoteControl";
}

Swift::Int Features.CallScreening.hashValue.getter()
{
  return Hasher._finalize()();
}

id Features.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Features();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t lazy protocol witness table accessor for type Features.ConversationKit and conformance Features.ConversationKit()
{
  unint64_t result = lazy protocol witness table cache variable for type Features.ConversationKit and conformance Features.ConversationKit;
  if (!lazy protocol witness table cache variable for type Features.ConversationKit and conformance Features.ConversationKit)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.ConversationKit and conformance Features.ConversationKit);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Features.ConversationKit and conformance Features.ConversationKit;
  if (!lazy protocol witness table cache variable for type Features.ConversationKit and conformance Features.ConversationKit)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.ConversationKit and conformance Features.ConversationKit);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Features.CallScreening and conformance Features.CallScreening()
{
  unint64_t result = lazy protocol witness table cache variable for type Features.CallScreening and conformance Features.CallScreening;
  if (!lazy protocol witness table cache variable for type Features.CallScreening and conformance Features.CallScreening)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.CallScreening and conformance Features.CallScreening);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Features.CallScreening and conformance Features.CallScreening;
  if (!lazy protocol witness table cache variable for type Features.CallScreening and conformance Features.CallScreening)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.CallScreening and conformance Features.CallScreening);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Features.SpringBoard and conformance Features.SpringBoard()
{
  unint64_t result = lazy protocol witness table cache variable for type Features.SpringBoard and conformance Features.SpringBoard;
  if (!lazy protocol witness table cache variable for type Features.SpringBoard and conformance Features.SpringBoard)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.SpringBoard and conformance Features.SpringBoard);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Features.SpringBoard and conformance Features.SpringBoard;
  if (!lazy protocol witness table cache variable for type Features.SpringBoard and conformance Features.SpringBoard)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.SpringBoard and conformance Features.SpringBoard);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Features.Messages and conformance Features.Messages()
{
  unint64_t result = lazy protocol witness table cache variable for type Features.Messages and conformance Features.Messages;
  if (!lazy protocol witness table cache variable for type Features.Messages and conformance Features.Messages)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.Messages and conformance Features.Messages);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Features.Messages and conformance Features.Messages;
  if (!lazy protocol witness table cache variable for type Features.Messages and conformance Features.Messages)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.Messages and conformance Features.Messages);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Features.AppProtection and conformance Features.AppProtection()
{
  unint64_t result = lazy protocol witness table cache variable for type Features.AppProtection and conformance Features.AppProtection;
  if (!lazy protocol witness table cache variable for type Features.AppProtection and conformance Features.AppProtection)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.AppProtection and conformance Features.AppProtection);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Features.AppProtection and conformance Features.AppProtection;
  if (!lazy protocol witness table cache variable for type Features.AppProtection and conformance Features.AppProtection)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.AppProtection and conformance Features.AppProtection);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Features.DockKit and conformance Features.DockKit()
{
  unint64_t result = lazy protocol witness table cache variable for type Features.DockKit and conformance Features.DockKit;
  if (!lazy protocol witness table cache variable for type Features.DockKit and conformance Features.DockKit)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.DockKit and conformance Features.DockKit);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Features.DockKit and conformance Features.DockKit;
  if (!lazy protocol witness table cache variable for type Features.DockKit and conformance Features.DockKit)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.DockKit and conformance Features.DockKit);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Features.LVM and conformance Features.LVM()
{
  unint64_t result = lazy protocol witness table cache variable for type Features.LVM and conformance Features.LVM;
  if (!lazy protocol witness table cache variable for type Features.LVM and conformance Features.LVM)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.LVM and conformance Features.LVM);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Features.LVM and conformance Features.LVM;
  if (!lazy protocol witness table cache variable for type Features.LVM and conformance Features.LVM)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Features.LVM and conformance Features.LVM);
  }
  return result;
}

uint64_t method lookup function for Features(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Features);
}

uint64_t dispatch thunk of Features.isSystemApertureEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of Features.isIncomingCallBannerEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of Features.isHeroImageEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of Features.isHeroTitleEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of Features.fullScreenOutgoingFTAEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of Features.isModernMePiPEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of Features.isPoorConnectionLabelsEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of Features.isEnhancedEmergencyEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of Features.isSADMessagesEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of Features.isDialPadEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of Features.isButtonLayoutEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of Features.isScreeningLiveActivityEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of Features.shouldEmbedSwapBanner.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of Features.isFaceTimeMyselfEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of Features.shouldShowFullScreenCallWaiting.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of Features.isDominoEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of Features.isNameAndPhotoC3Enabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of Features.callManagerEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of Features.hudActivityManagerEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of Features.requestToScreenShareEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of Features.usesModernScreenSharingFromMessages.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of Features.isAppProtectionEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of Features.buttonRemoteControlEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of Features.isUIFluidTransitionsEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of Features.callRecordingEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of Features.callRecordingDominoEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of Features.lvm_stopEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of Features.lvm_allowLockScreenSleepEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of Features.lvm_endCallImmediately.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

unsigned char *storeEnumTagSinglePayload for Features.LVM(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3247304);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void *type metadata accessor for Features.LVM()
{
  return &unk_1F1EA3738;
}

void *type metadata accessor for Features.UIKit()
{
  return &unk_1F1EA37C8;
}

void *type metadata accessor for Features.DockKit()
{
  return &unk_1F1EA3858;
}

void *type metadata accessor for Features.AppProtection()
{
  return &unk_1F1EA38E8;
}

void *type metadata accessor for Features.Messages()
{
  return &unk_1F1EA3978;
}

void *type metadata accessor for Features.SpringBoard()
{
  return &unk_1F1EA3A08;
}

unsigned char *storeEnumTagSinglePayload for Features.TelephonyUtilities(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C324745CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void *type metadata accessor for Features.TelephonyUtilities()
{
  return &unk_1F1EA3A98;
}

unsigned char *storeEnumTagSinglePayload for Features.UIKit(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C3247530);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *type metadata accessor for Features.CallScreening()
{
  return &unk_1F1EA3B28;
}

unsigned char *storeEnumTagSinglePayload for Features.ConversationKit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3247634);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void *type metadata accessor for Features.ConversationKit()
{
  return &unk_1F1EA3BB8;
}

unsigned char *storeEnumTagSinglePayload for Features.CallUI(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3247738);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void *type metadata accessor for Features.CallUI()
{
  return &unk_1F1EA3C48;
}

uint64_t getEnumTagSinglePayload for AnsweringMachineError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AnsweringMachineError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t getEnumTag for AnsweringMachineError(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *destructiveInjectEnumTag for AnsweringMachineError(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnsweringMachineError()
{
  return &type metadata for AnsweringMachineError;
}

id AudioVisualizationRingLayer.__allocating_init(opacityMultiple:)(float a1)
{
  id v3 = objc_allocWithZone(v1);
  return AudioVisualizationRingLayer.init(opacityMultiple:)(a1);
}

id AudioVisualizationRingLayer.__allocating_init(layer:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v4 = objc_msgSend(v3, sel_initWithLayer_, _bridgeAnythingToObjectiveC<A>(_:)());
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v4;
}

float AudioVisualizationRingLayer.opacityMultiple.getter()
{
  return *(float *)(v0 + OBJC_IVAR____TtC15ConversationKit27AudioVisualizationRingLayer_opacityMultiple);
}

id AudioVisualizationRingLayer.init(opacityMultiple:)(float a1)
{
  *(float *)&v1[OBJC_IVAR____TtC15ConversationKit27AudioVisualizationRingLayer_opacityMultiple] = a1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for AudioVisualizationRingLayer();
  id v2 = objc_msgSendSuper2(&v5, sel_init);
  objc_msgSend(v2, sel_setAllowsGroupBlending_, 1);
  LODWORD(v3) = 1.0;
  objc_msgSend(v2, sel_setOpacity_, v3);

  return v2;
}

uint64_t type metadata accessor for AudioVisualizationRingLayer()
{
  return self;
}

uint64_t AudioVisualizationRingLayer.init(layer:)(uint64_t a1)
{
  outlined init with copy of Any(a1, (uint64_t)v10);
  double v3 = (objc_class *)type metadata accessor for AudioVisualizationRingLayer();
  id v4 = v1;
  if (swift_dynamicCast())
  {
    objc_super v5 = v9;
    *(_DWORD *)&v4[OBJC_IVAR____TtC15ConversationKit27AudioVisualizationRingLayer_opacityMultiple] = *(_DWORD *)&v9[OBJC_IVAR____TtC15ConversationKit27AudioVisualizationRingLayer_opacityMultiple];

    v8.receiver = v4;
    v8.super_class = v3;
    id v6 = objc_msgSendSuper2(&v8, sel_initWithLayer_, v5);

    __swift_destroy_boxed_opaque_existential_1(a1);
    return (uint64_t)v6;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

id AudioVisualizationRingLayer.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void AudioVisualizationRingLayer.init(coder:)()
{
}

float AudioVisualizationRingLayer.opacity.getter()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for AudioVisualizationRingLayer();
  objc_msgSendSuper2(&v3, sel_opacity);
  return v1 / *(float *)&v0[OBJC_IVAR____TtC15ConversationKit27AudioVisualizationRingLayer_opacityMultiple];
}

id AudioVisualizationRingLayer.opacity.setter(float a1)
{
  float v2 = *(float *)&v1[OBJC_IVAR____TtC15ConversationKit27AudioVisualizationRingLayer_opacityMultiple] * a1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for AudioVisualizationRingLayer();
  *(float *)&double v3 = v2;
  return objc_msgSendSuper2(&v5, sel_setOpacity_, v3);
}

id AudioVisualizationRingLayer.bounds.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioVisualizationRingLayer();
  return objc_msgSendSuper2(&v2, sel_bounds);
}

id AudioVisualizationRingLayer.bounds.setter(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for AudioVisualizationRingLayer();
  objc_msgSendSuper2(&v10, sel_setBounds_, a1, a2, a3, a4);
  return AudioVisualizationRingLayer.bounds.didset();
}

id AudioVisualizationRingLayer.bounds.didset()
{
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v0, sel_setCornerRadius_, v1 * 0.5);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v0, sel_setBorderWidth_, v2 * 0.06);
  objc_msgSend(v0, sel_bounds);
  double v4 = v3 * 0.5;
  objc_msgSend(v0, sel_bounds);
  return objc_msgSend(v0, sel_setPosition_, v4, v5 * 0.5);
}

Swift::Void __swiftcall AudioVisualizationRingLayer.addBoundsSizeAnimation(_:forKey:)(CABasicAnimation _, Swift::String forKey)
{
  double v3 = v2;
  uint64_t v4 = *(void *)&_.super.super._flags;
  attr = _.super.super._attr;
  Class isa = _.super.super.super.isa;
  -[objc_class setRemovedOnCompletion:](_.super.super.super.isa, sel_setRemovedOnCompletion_, 1, forKey._countAndFlagsBits, forKey._object);
  outlined bridged method (mnbgnn) of @objc CALayer.add(_:forKey:)((uint64_t)isa, (uint64_t)attr, v4, v3);
  if ([(objc_class *)isa fromValue])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  outlined init with take of Any?((uint64_t)&v23, (uint64_t)v25);
  if (!v26) {
    goto LABEL_14;
  }
  type metadata accessor for NSValue();
  if ((OUTLINED_FUNCTION_0_79() & 1) == 0) {
    return;
  }
  if ([(objc_class *)isa toValue])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  outlined init with take of Any?((uint64_t)&v23, (uint64_t)v25);
  if (!v26)
  {

LABEL_14:
    outlined destroy of Any?((uint64_t)v25);
    return;
  }
  if (OUTLINED_FUNCTION_0_79())
  {
    objc_msgSend(v22, sel_CGSizeValue);
    objc_msgSend(v22, sel_CGSizeValue);
    uint64_t v7 = (void *)CABasicAnimation.animationCopy()();
    outlined bridged method (mbnn) of @objc CAPropertyAnimation.keyPath.setter(0x615272656E726F63, 0xEC00000073756964, v7);
    Class v8 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v7, sel_setFromValue_, v8);

    Class v9 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v7, sel_setToValue_, v9);

    objc_super v10 = (void *)CABasicAnimation.animationCopy()();
    outlined bridged method (mbnn) of @objc CAPropertyAnimation.keyPath.setter(0x6957726564726F62, 0xEB00000000687464, v10);
    Class v11 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v10, sel_setFromValue_, v11);

    Class v12 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v10, sel_setToValue_, v12);

    v13 = (void *)CABasicAnimation.animationCopy()();
    outlined bridged method (mbnn) of @objc CAPropertyAnimation.keyPath.setter(0x6E6F697469736F70, 0xE800000000000000, v13);
    Class v14 = CGPoint._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v13, sel_setFromValue_, v14);

    Class v15 = CGPoint._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v13, sel_setToValue_, v15);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C3769F40;
    *(void *)(inited + 32) = v7;
    *(void *)(inited + 40) = v10;
    *(void *)(inited + 48) = v13;
    v25[0] = inited;
    specialized Array._endMutation()();
    unint64_t v17 = v25[0];
    id v18 = v3;
    swift_bridgeObjectRetain();
    id v19 = v7;
    id v20 = v10;
    id v21 = v13;
    specialized Sequence.forEach(_:)(v17, v18, (uint64_t)attr, v4);
    swift_bridgeObjectRelease();
  }
}

id AudioVisualizationRingLayer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AudioVisualizationRingLayer.init()()
{
}

id AudioVisualizationRingLayer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioVisualizationRingLayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void outlined bridged method (mnbgnn) of @objc CALayer.add(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = (id)MEMORY[0x1C87730B0](a2, a3);
  objc_msgSend(a4, sel_addAnimation_forKey_, a1, v6);
}

unint64_t type metadata accessor for NSValue()
{
  unint64_t result = lazy cache variable for type metadata for NSValue;
  if (!lazy cache variable for type metadata for NSValue)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSValue);
  }
  return result;
}

void outlined bridged method (mbnn) of @objc CAPropertyAnimation.keyPath.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setKeyPath_, v4);
}

uint64_t method lookup function for AudioVisualizationRingLayer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudioVisualizationRingLayer);
}

uint64_t dispatch thunk of AudioVisualizationRingLayer.__allocating_init(opacityMultiple:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AudioVisualizationRingLayer.addBoundsSizeAnimation(_:forKey:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t outlined bridged method (pb) of @objc CAPropertyAnimation.keyPath.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_keyPath);
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t _runTaskForBridgedAsyncMethod(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_21();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  Class v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  objc_super v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = &_sIeghH_IeAgH_TRTATu;
  v10[5] = v9;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgmq5(v7, (uint64_t)&_sIeAgH_ytIeAgHr_TRTATu, (uint64_t)v10);
  return swift_release();
}

uint64_t CallScreening.MainAnsweringMachine.enabled.getter()
{
  id v1 = *(uint64_t (**)(uint64_t))(v0
                                         + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_isAnsweringMachineAvailable);
  uint64_t v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  return v1 & 1;
}

uint64_t CallScreening.MainAnsweringMachine.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_logger;
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  return v6(a1, v3, v4);
}

uint64_t CallScreening.MainAnsweringMachine.stateMachine.getter()
{
  return swift_retain();
}

uint64_t CallScreening.MainAnsweringMachine.callServices.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of IDSLookupManager(v1 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices, a1);
}

uint64_t CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:));
}

uint64_t CallScreening.MainAnsweringMachine.init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized CallScreening.MainAnsweringMachine.init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:));
}

uint64_t CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v16 = *(void *)(a4 + 24);
  uint64_t v15 = *(void *)(a4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a4, v16);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_21();
  uint64_t v20 = v19 - v18;
  (*(void (**)(uint64_t))(v21 + 16))(v19 - v18);
  uint64_t v22 = a9(a1, a2, a3, v20, a5, a6, a7, a8, v9, v16, v15);
  __swift_destroy_boxed_opaque_existential_1(a4);
  return v22;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CallScreening.MainAnsweringMachine.start()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v1 - 8);
  OUTLINED_FUNCTION_21();
  uint64_t v4 = v3 - v2;
  static TaskPriority.userInitiated.getter();
  uint64_t v5 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v5);
  uint64_t v6 = one-time initialization token for shared;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = static CKStateMachineActor.shared;
  uint64_t v8 = lazy protocol witness table accessor for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType((unint64_t *)&lazy protocol witness table cache variable for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType, (void (*)(uint64_t))type metadata accessor for CKStateMachineActor.ActorType);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v7;
  v9[3] = v8;
  v9[4] = v0;
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v4, (uint64_t)&async function pointer to partial apply for closure #1 in CallScreening.MainAnsweringMachine.start(), (uint64_t)v9);
  swift_release();
}

uint64_t closure #1 in CallScreening.MainAnsweringMachine.start()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v5 = static CKStateMachineActor.shared;
  return MEMORY[0x1F4188298](closure #1 in CallScreening.MainAnsweringMachine.start(), v5, 0);
}

uint64_t closure #1 in CallScreening.MainAnsweringMachine.start()()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&async function pointer to specialized CKStateMachine.transition(with:reason:validation:)
                             + async function pointer to specialized CKStateMachine.transition(with:reason:validation:));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = closure #1 in CallScreening.MainAnsweringMachine.start();
  return v3();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v3();
}

void closure #1 in closure #1 in CallScreening.MainAnsweringMachine.start()(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 48);
  lazy protocol witness table accessor for type CKStateMachineError and conformance CKStateMachineError();
  uint64_t v2 = (void *)swift_allocError();
  if (v1 >> 61) {
    swift_willThrow();
  }
  else {
}
  }

uint64_t CallScreening.MainAnsweringMachine.open(_:)()
{
  OUTLINED_FUNCTION_17_2();
  v1[2] = v2;
  v1[3] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v1[4] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[5] = static MainActor.shared.getter();
  uint64_t v4 = OUTLINED_FUNCTION_47_4();
  v1[6] = v4;
  v1[7] = v3;
  return MEMORY[0x1F4188298](CallScreening.MainAnsweringMachine.open(_:), v4, v3);
}

{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;

  type metadata accessor for OS_os_log();
  unint64_t v1 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  uint64_t v2 = CallScreening.MainAnsweringMachine.enabled.getter();
  *(unsigned char *)(v0 + 80) = v2 & 1;
  if ((v2 & 1) == 0)
  {
    swift_release();
    uint64_t v18 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_task_dealloc();
    OUTLINED_FUNCTION_24_5();
    __asm { BRAA            X2, X16 }
  }
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 16);
  static TaskPriority.userInitiated.getter();
  uint64_t v5 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v5);
  uint64_t v6 = type metadata accessor for URL();
  OUTLINED_FUNCTION_5_3();
  uint64_t v8 = v7;
  uint64_t v9 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v4, v6);
  objc_super v10 = one-time initialization token for shared;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  Class v11 = *(void *)(v0 + 24);
  Class v12 = static CallScreeningActor.shared;
  v13 = lazy protocol witness table accessor for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType((unint64_t *)&lazy protocol witness table cache variable for type CallScreeningActor.ActorType and conformance CallScreeningActor.ActorType, (void (*)(uint64_t))type metadata accessor for CallScreeningActor.ActorType);
  Class v14 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = v12;
  *((void *)v15 + 3) = v13;
  *((void *)v15 + 4) = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(&v15[v14], v9, v6);
  swift_task_dealloc();
  swift_retain();
  *(void *)(v0 + 64) = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v16;
  *uint64_t v16 = v0;
  v16[1] = CallScreening.MainAnsweringMachine.open(_:);
  OUTLINED_FUNCTION_24_5();
  return MEMORY[0x1F4187DC0]();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_28_0();
  unint64_t v1 = *v0;
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_release();
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 48);
  return MEMORY[0x1F4188298](CallScreening.MainAnsweringMachine.open(_:), v5, v4);
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 80);
  return v1(v2);
}

uint64_t closure #1 in CallScreening.MainAnsweringMachine.open(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v6 = static CallScreeningActor.shared;
  v5[7] = static CallScreeningActor.shared;
  return MEMORY[0x1F4188298](closure #1 in CallScreening.MainAnsweringMachine.open(_:), v6, 0);
}

uint64_t closure #1 in CallScreening.MainAnsweringMachine.open(_:)()
{
  long long v24 = v0;
  uint64_t v1 = v0[6];
  v0[8] = OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_logger;
  uint64_t v2 = type metadata accessor for URL();
  OUTLINED_FUNCTION_5_3();
  uint64_t v4 = v3;
  uint64_t v5 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v1, v2);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v23 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v8 = 136315138;
    lazy protocol witness table accessor for type URL and conformance URL();
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[4] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v11 = OUTLINED_FUNCTION_15_43();
    v12(v11);
    _os_log_impl(&dword_1C2F90000, v6, v7, "Openning url for Screening: %s", v8, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    uint64_t v13 = OUTLINED_FUNCTION_15_43();
    v14(v13);
  }
  uint64_t v15 = v0[5];
  swift_task_dealloc();
  uint64_t v16 = OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices;
  v0[9] = OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices;
  uint64_t v17 = (void *)(v15 + v16);
  uint64_t v18 = *(void *)(v15 + v16 + 24);
  v0[10] = v18;
  uint64_t v19 = *(void *)(v15 + v16 + 32);
  v0[11] = v19;
  v0[12] = __swift_project_boxed_opaque_existential_1(v17, v18);
  v0[13] = *(void *)(v19 + 72);
  v0[14] = (v19 + 72) & 0xFFFFFFFFFFFFLL | 0xF3FE000000000000;
  v0[15] = type metadata accessor for MainActor();
  v0[16] = static MainActor.shared.getter();
  uint64_t v21 = OUTLINED_FUNCTION_47_4();
  return MEMORY[0x1F4188298](closure #1 in CallScreening.MainAnsweringMachine.open(_:), v21, v20);
}

{
  void *v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_49_0();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  swift_release();
  v0[17] = v1(v3, v2);
  return MEMORY[0x1F4188298](closure #1 in CallScreening.MainAnsweringMachine.open(_:), v4, 0);
}

{
  void *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  void *v23;

  uint64_t v23 = v0;
  uint64_t v1 = (void *)v0[17];
  if (!v1)
  {
    uint64_t v9 = Logger.logObject.getter();
    unint64_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1C2F90000, v9, v10, "No call can be screened", v11, 2u);
      OUTLINED_FUNCTION_3();
    }

    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_24_5();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v2 = v1;
  uint64_t v3 = Logger.logObject.getter();
  uint64_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v22 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v5 = 136446210;
    v0[2] = v2;
    uint64_t v6 = v2;
    os_log_type_t v7 = String.init<A>(reflecting:)();
    v0[3] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v3, v4, "Attempting to screen request: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  Class v14 = (void *)(v0[5] + v0[9]);
  uint64_t v15 = v14[3];
  v0[18] = v15;
  uint64_t v16 = v14[4];
  v0[19] = v16;
  v0[20] = __swift_project_boxed_opaque_existential_1(v14, v15);
  v0[21] = *(void *)(v16 + 32);
  v0[22] = (v16 + 32) & 0xFFFFFFFFFFFFLL | 0xE247000000000000;
  v0[23] = static MainActor.shared.getter();
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_24_5();
  return MEMORY[0x1F4188298](v17, v18, v19);
}

{
  void *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[21];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[7];
  swift_release();
  v1(v4, v3, v2);
  return MEMORY[0x1F4188298](closure #1 in CallScreening.MainAnsweringMachine.open(_:), v5, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_17_2();

  OUTLINED_FUNCTION_6();
  return v1();
}

uint64_t @objc closure #1 in CallScreening.MainAnsweringMachine.open(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for MainActor();
  v3[5] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](@objc closure #1 in CallScreening.MainAnsweringMachine.open(_:), v5, v4);
}

uint64_t @objc closure #1 in CallScreening.MainAnsweringMachine.open(_:)()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = (const void *)v0[3];
  swift_release();
  v0[6] = _Block_copy(v1);
  uint64_t v2 = type metadata accessor for URL();
  v0[7] = v2;
  v0[8] = *(void *)(v2 - 8);
  v0[9] = swift_task_alloc();
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  *uint64_t v3 = v0;
  v3[1] = @objc closure #1 in DelayedAnsweringMachine.open(_:);
  return CallScreening.MainAnsweringMachine.open(_:)();
}

uint64_t CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)()
{
  OUTLINED_FUNCTION_17_2();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  *(unsigned char *)(v1 + 56) = v3;
  *(void *)(v1 + 24) = v4;
  type metadata accessor for MainActor();
  *(void *)(v1 + 48) = static MainActor.shared.getter();
  uint64_t v6 = OUTLINED_FUNCTION_47_4();
  return MEMORY[0x1F4188298](CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:), v6, v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  BOOL v11;
  unint64_t v12;
  uint8_t *v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[2];
  uint64_t v25;
  uint64_t v26;

  uint64_t v25 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 32);
  swift_release();
  uint64_t v6 = (void *)(v3 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices);
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices + 24);
  uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices), v7);
  LOBYTE(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 48))(v2, v5, v4, v7, v8);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  unint64_t v10 = static os_log_type_t.default.getter();
  uint64_t v11 = os_log_type_enabled(v9, v10);
  Class v12 = *(void *)(v0 + 32);
  if (v8)
  {
    if (v11)
    {
      uint64_t v22 = *v1;
      uint64_t v13 = (uint8_t *)OUTLINED_FUNCTION_37();
      v24[0] = OUTLINED_FUNCTION_9_0();
      *(_DWORD *)uint64_t v13 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v12, v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2F90000, v9, v10, "Attempting to screen call with uuid: %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v16 = *(void *)(v0 + 24);
    uint64_t v15 = *(void *)(v0 + 32);
    uint64_t v17 = v6[3];
    uint64_t v18 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v17);
    uint64_t v19 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 24))(v16, v15, 1, v17, v18);
  }
  else
  {
    if (v11)
    {
      uint64_t v23 = *v1;
      Class v14 = (uint8_t *)OUTLINED_FUNCTION_37();
      v24[0] = OUTLINED_FUNCTION_9_0();
      *(_DWORD *)Class v14 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v12, v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2F90000, v9, v10, "Cannot screen call with uuid as its not screenable: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v19 = 0;
  }
  uint64_t v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v20(v19);
}

uint64_t @objc closure #1 in CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = a4;
  *(unsigned char *)(v4 + 72) = a2;
  *(void *)(v4 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v4 + 40) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](@objc closure #1 in CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:), v6, v5);
}

uint64_t @objc closure #1 in CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = (const void *)v0[3];
  swift_release();
  v0[6] = _Block_copy(v1);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v0[7] = v2;
  swift_retain();
  char v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *char v3 = v0;
  v3[1] = @objc closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:);
  OUTLINED_FUNCTION_16_5();
  return CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)();
}

uint64_t CallScreening.MainAnsweringMachine.deinit()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_observers)
                 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    uint64_t v3 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v4 = MEMORY[0x1E4FBC248];
    uint64_t v5 = MEMORY[0x1E4FBC278];
    do
    {
      ++v2;
      uint64_t v6 = swift_retain();
      MEMORY[0x1C8773690](v6, v3, v4, v5);
      swift_release();
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = v0 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_logger;
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v8 + 8))(v7);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t CallScreening.MainAnsweringMachine.__deallocating_deinit()
{
  CallScreening.MainAnsweringMachine.deinit();
  return swift_deallocClassInstance();
}

void protocol witness for AnsweringMachine.start() in conformance CallScreening.MainAnsweringMachine()
{
}

uint64_t _sIeghH_IeAgH_TR(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return v6();
}

uint64_t _sIeAgH_ytIeAgHr_TR(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return v7();
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgmq5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    outlined destroy of TaskPriority?(a1);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TQ0_;
  return v6(a1);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TQ0_()
{
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v3();
}

uint64_t *specialized CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t v23 = a6;
  uint64_t v16 = *(void *)(a10 - 8);
  MEMORY[0x1F4188790](a9);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a4, a10);
  uint64_t v20 = specialized CallScreening.MainAnsweringMachine.init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(a1, a2, a3, (uint64_t)v18, a5, v23, v24, v25, v19, a10, a11);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a4, a10);
  return v20;
}

uint64_t *specialized CallScreening.MainAnsweringMachine.init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v45 = a7;
  uint64_t v46 = a6;
  uint64_t v44 = a5;
  uint64_t v47 = a3;
  uint64_t v48 = a1;
  uint64_t v40 = *a9;
  uint64_t v41 = type metadata accessor for CallScreening.MachineStateObserver(0) - 8;
  MEMORY[0x1F4188790](v41);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CallScreening.CallStateObserver();
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51[3] = a10;
  v51[4] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v51);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(boxed_opaque_existential_1, a4, a10);
  uint64_t v21 = (char *)a9 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_logger;
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v42 = *(void *)(v22 - 8);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  uint64_t v24 = v21;
  uint64_t v25 = v48;
  v23(v24, v48, v22);
  *(uint64_t *)((char *)a9 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_stateMachine) = a2;
  outlined init with copy of IDSLookupManager((uint64_t)v51, (uint64_t)a9 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_callServices);
  uint64_t v26 = (uint64_t *)((char *)a9
                  + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_isAnsweringMachineAvailable);
  *uint64_t v26 = v45;
  v26[1] = a8;
  v23(v19, v25, v22);
  *(void *)&v19[*(int *)(v17 + 28)] = a2;
  uint64_t v27 = *(int *)(v17 + 32);
  uint64_t v28 = v47;
  *(void *)&v19[v27] = v47;
  swift_retain_n();
  uint64_t v45 = a8;
  swift_retain();
  swift_retain();
  uint64_t v29 = CallScreening.CallStateObserver.start(onCallStatusUpdate:)(v44, v46);
  outlined destroy of CallScreening.CallStateObserver((uint64_t)v19, (void (*)(void))type metadata accessor for CallScreening.CallStateObserver);
  uint64_t v43 = v22;
  v23(v15, v25, v22);
  uint64_t v30 = v41;
  *(void *)&v15[*(int *)(v41 + 28)] = a2;
  *(void *)&v15[*(int *)(v30 + 32)] = v28;
  uint64_t v44 = a2;
  swift_retain();
  swift_retain();
  uint64_t v31 = CallScreening.MachineStateObserver.start()();
  outlined destroy of CallScreening.CallStateObserver((uint64_t)v15, (void (*)(void))type metadata accessor for CallScreening.MachineStateObserver);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Task<(), Never>>);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1C37696D0;
  *(void *)(v32 + 32) = v29;
  *(void *)(v32 + 40) = v31;
  *(uint64_t *)((char *)a9 + OBJC_IVAR____TtCO15ConversationKit13CallScreening20MainAnsweringMachine_observers) = v32;
  swift_retain_n();
  swift_retain();
  swift_retain();
  v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v49 = (uint64_t)a9;
    uint64_t v50 = v36;
    *(_DWORD *)v35 = 136446210;
    swift_retain();
    uint64_t v37 = String.init<A>(reflecting:)();
    uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v33, v34, "Created MainAnsweringMachine %{public}s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v36, -1, -1);
    MEMORY[0x1C87760E0](v35, -1, -1);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release_n();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v48, v43);
  return a9;
}

uint64_t sub_1C324B42C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CallScreening.MainAnsweringMachine.start()()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_10(v6);
  *uint64_t v7 = v8;
  v7[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return closure #1 in CallScreening.MainAnsweringMachine.start()(v2, v3, v4, v5);
}

uint64_t lazy protocol witness table accessor for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C324B55C()
{
  uint64_t v1 = type metadata accessor for URL();
  OUTLINED_FUNCTION_5_3();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CallScreening.MainAnsweringMachine.open(_:)()
{
  OUTLINED_FUNCTION_49_0();
  type metadata accessor for URL();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_34_4();
  return closure #1 in CallScreening.MainAnsweringMachine.open(_:)(v3, v4, v5, v6, v7);
}

uint64_t ObjC metadata update function for CallScreening.MainAnsweringMachine()
{
  return type metadata accessor for CallScreening.MainAnsweringMachine();
}

uint64_t type metadata accessor for CallScreening.MainAnsweringMachine()
{
  uint64_t result = type metadata singleton initialization cache for CallScreening.MainAnsweringMachine;
  if (!type metadata singleton initialization cache for CallScreening.MainAnsweringMachine) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for CallScreening.MainAnsweringMachine()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CallScreening.MainAnsweringMachine(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CallScreening.MainAnsweringMachine);
}

uint64_t dispatch thunk of CallScreening.MainAnsweringMachine.__allocating_init(logger:stateMachine:statusService:callServices:onCallStatusUpdate:isAnsweringMachineAvailable:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1C324B828()
{
  _Block_release(*(const void **)(v0 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for @objc closure #1 in CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v2 = *(void *)(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  uint64_t v7 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t))((char *)&async function pointer to @objc closure #1 in CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:)
                                                               + async function pointer to @objc closure #1 in CallScreening.MainAnsweringMachine.screenCall(withUUID:manualScreening:));
  return v7(v2, v3, v5, v4);
}

uint64_t _sIeghH_IeAgH_TRTA()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v2 = OUTLINED_FUNCTION_16_5();
  return v3(v2);
}

uint64_t objectdestroy_15Tm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t _sIeAgH_ytIeAgHr_TRTA()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_34_4();
  return v4(v3);
}

uint64_t sub_1C324BAD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TA()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_10(v4);
  *uint64_t v5 = v6;
  v5[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5Tu
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5Tu);
  return v7(v2, v3);
}

uint64_t sub_1C324BBBC()
{
  _Block_release(*(const void **)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for @objc closure #1 in CallScreening.MainAnsweringMachine.open(_:)()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v2 = OUTLINED_FUNCTION_16_5();
  return v3(v2);
}

uint64_t outlined destroy of CallScreening.CallStateObserver(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t specialized _ArrayProtocol.filter(_:)(unint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9)
  {
    while (1)
    {
      unint64_t v10 = 0;
      uint64_t v17 = v9;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v11 = (id)MEMORY[0x1C87744F0](v10, a1);
LABEL_7:
        Class v12 = v11;
        unint64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_17;
        }
        uint64_t v18 = v11;
        char v14 = closure #1 in ClarityUICallHistory.recentCalls.getter(&v18, a2);
        if (v5)
        {
          swift_bridgeObjectRelease();

          uint64_t v15 = v19;
          swift_release();

          swift_release();
          return v15;
        }
        if (v14)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          uint64_t v5 = 0;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v9 = v17;
        }
        else
        {
        }
        ++v10;
        if (v13 == v9)
        {
          uint64_t v15 = v19;
          goto LABEL_20;
        }
      }
      if (v10 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      if (!v9) {
        goto LABEL_19;
      }
    }
    id v11 = *(id *)(a1 + 8 * v10 + 32);
    goto LABEL_7;
  }
LABEL_19:
  uint64_t v15 = MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();

  swift_release();
  return v15;
}

uint64_t *ClarityUICallHistory.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static ClarityUICallHistory.shared;
}

Swift::Int __swiftcall ClarityUICallHistory.badgeCount(for:)(ConversationKit::ClarityUIContact a1)
{
  Class isa = a1.cnContact.super.isa;
  uint64_t v3 = *((void *)a1.cnContact.super.isa + 2);
  uint64_t v4 = *((void *)a1.cnContact.super.isa + 3);
  swift_getKeyPath();
  lazy protocol witness table accessor for type ObservableNotificationHandler and conformance ObservableNotificationHandler();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_callHistoryManager);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSCompoundPredicate);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C3769610;
  long long v12 = *(_OWORD *)isa;
  ClarityUIContact.callHistoryPredicate.getter();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = objc_msgSend(self, sel_predicateForCallsWithStatusRead_, 0, v12, v3, v4);
  specialized Array._endMutation()();
  id v8 = @nonobjc NSCompoundPredicate.__allocating_init(andPredicateWithSubpredicates:)();
  id v9 = objc_msgSend(v5, sel_recentCallsWithPredicate_, v8, v6);

  if (v9)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CHRecentCall);
    unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      id v9 = (id)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v9 = *(id *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  return (Swift::Int)v9;
}

uint64_t static ClarityUICallHistory.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return swift_retain();
}

id ClarityUICallHistory.contactStore.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_contactStore);
}

uint64_t ClarityUICallHistory.().init()()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_contactStore;
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1B980]);
  swift_retain();
  *(void *)(v0 + v1) = objc_msgSend(v2, sel_init);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_preferences;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  *(void *)(v0 + v3) = static ClarityUIPreferences.shared;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_favoritesList;
  uint64_t v5 = one-time initialization token for shared;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  *(void *)(v0 + v4) = static ClarityUIFavoritesList.shared;
  uint64_t v6 = *(void *)(v0 + v1);
  id v7 = objc_allocWithZone(MEMORY[0x1E4F57C80]);
  swift_retain();
  id v8 = objc_msgSend(v7, sel_initWithContactStore_, v6);
  *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_callHistoryManager) = v8;
  swift_release();
  uint64_t v9 = ObservableNotificationHandler.init(name:)((id)*MEMORY[0x1E4F57D18]);
  unint64_t v10 = *(void **)(v9 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_callHistoryManager);
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  outlined bridged method (mbnn) of @objc CHManager.coalescingStrategy.setter(v11, v12, v10);
  return v9;
}

uint64_t ClarityUICallHistory.recentCalls.getter()
{
  uint64_t v1 = v0;
  id v2 = ClarityUIPreferences.outgoingCommunicationLimit.getter();
  swift_getKeyPath();
  lazy protocol witness table accessor for type ObservableNotificationHandler and conformance ObservableNotificationHandler();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_callHistoryManager), sel_recentCalls);
  if (v3)
  {
    uint64_t v4 = v3;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CHRecentCall);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v5 = MEMORY[0x1E4FBC860];
  }
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F57C70]), sel_initWithDataSource_, *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_contactStore));
  swift_retain();
  return specialized _ArrayProtocol.filter(_:)(v5, v6, v1, v2);
}

uint64_t closure #1 in ClarityUICallHistory.recentCalls.getter(void **a1, void *a2)
{
  v66[1] = *(id *)MEMORY[0x1E4F143B8];
  id v3 = *a1;
  uint64_t v4 = outlined bridged method (pb) of @objc CHRecentCall.serviceProvider.getter(*a1);
  uint64_t v6 = v5;
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v6)
  {
    if (v4 == v7 && v6 == v8)
    {
LABEL_16:
      swift_bridgeObjectRelease();
LABEL_17:
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_17;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v6)
  {
LABEL_52:
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
  if (v4 == v11 && v6 == v12) {
    goto LABEL_16;
  }
  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
LABEL_42:
    LOBYTE(v6) = 0;
    return v6 & 1;
  }
LABEL_18:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C3769830;
  *(void *)(v15 + 32) = v3;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CHRecentCall);
  id v16 = v3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  Class v18 = Array._bridgeToObjectiveC()().super.isa;
  v66[0] = 0;
  id v19 = objc_msgSend(a2, sel_contactsByHandleForCalls_keyDescriptors_error_, isa, v18, v66);

  id v20 = v66[0];
  if (!v19)
  {
    id v42 = v66[0];
    uint64_t v43 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (one-time initialization token for clarityUI != -1) {
      swift_once();
    }
    uint64_t v44 = type metadata accessor for Logger();
    __swift_project_value_buffer(v44, (uint64_t)static Log.clarityUI);
    id v45 = v16;
    id v46 = v43;
    id v47 = v45;
    id v48 = v43;
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.error.getter();
    log = v49;
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      v52 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 138412546;
      v66[0] = v47;
      id v53 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v52 = v47;

      *(_WORD *)(v51 + 12) = 2112;
      id v54 = v43;
      v55 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v66[0] = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v52[1] = v55;

      _os_log_impl(&dword_1C2F90000, log, v50, "Unable to get contacts by handle for recent call: %@. Error: %@", (uint8_t *)v51, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v52, -1, -1);
      MEMORY[0x1C87760E0](v51, -1, -1);
    }
    else
    {
    }
    goto LABEL_45;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CHHandle);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [CNContact]);
  lazy protocol witness table accessor for type CHHandle and conformance NSObject();
  uint64_t v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  id v22 = v20;

  uint64_t v23 = specialized Collection.first.getter(v21);
  unint64_t v25 = v24;
  swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_45:
    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v59 = v58;
    if (v57 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v59 == v60) {
      LOBYTE(v6) = 1;
    }
    else {
      LOBYTE(v6) = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }

  if (!(v25 >> 62))
  {
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_22;
    }
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v56)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
LABEL_22:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v25 & 0xC000000000000001) == 0, v25);
  if ((v25 & 0xC000000000000001) != 0) {
    id v26 = (id)MEMORY[0x1C87744F0](0, v25);
  }
  else {
    id v26 = *(id *)(v25 + 32);
  }
  id v63 = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = ClarityUIFavoritesList.favorites.getter();
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    swift_bridgeObjectRetain();
    for (i = (uint64_t *)(v27 + 80); ; i += 7)
    {
      uint64_t v64 = v28;
      uint64_t v31 = (void *)*(i - 3);
      uint64_t v30 = (void *)*(i - 2);
      uint64_t v33 = *(i - 1);
      uint64_t v32 = *i;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v34 = v31;
      id v35 = v30;
      swift_bridgeObjectRetain();
      id v36 = objc_msgSend(v63, sel_identifier);
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v39 = v38;

      if (v33 == v37 && v32 == v39) {
        break;
      }
      char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_41;
      }
      uint64_t v28 = v64 - 1;
      if (v64 == 1)
      {

        swift_bridgeObjectRelease_n();
        LOBYTE(v6) = 1;
        return v6 & 1;
      }
    }
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_41:
    swift_bridgeObjectRelease_n();

    goto LABEL_42;
  }

  swift_bridgeObjectRelease();
  LOBYTE(v6) = 1;
  return v6 & 1;
}

id @nonobjc NSCompoundPredicate.__allocating_init(andPredicateWithSubpredicates:)()
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSPredicate);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_andPredicateWithSubpredicates_, isa);

  return v1;
}

Swift::Void __swiftcall ClarityUICallHistory.markRecentCallsAsRead(for:)(ConversationKit::ClarityUIContact a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_callHistoryManager);
  ClarityUIContact.callHistoryPredicate.getter();
  id v4 = v3;
  objc_msgSend(v2, sel_setRead_forCallsWithPredicate_, 1, v3);
}

void ClarityUICallHistory.__allocating_init(name:)()
{
}

void ClarityUICallHistory.init(name:)()
{
}

uint64_t ClarityUICallHistory.__ivar_destroyer()
{
  swift_release();
  return swift_release();
}

uint64_t ClarityUICallHistory.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ObservableNotificationHandler___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_release();
  return v0;
}

uint64_t ClarityUICallHistory.__deallocating_deinit()
{
  ClarityUICallHistory.deinit();
  return swift_deallocClassInstance();
}

uint64_t key path getter for ObservableNotificationHandler.trackingProperty : ObservableNotificationHandler@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = ObservableNotificationHandler.trackingProperty.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C324CE50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = ObservableNotificationHandler.trackingProperty.getter();
  *a1 = result & 1;
  return result;
}

uint64_t key path setter for ObservableNotificationHandler.trackingProperty : ObservableNotificationHandler()
{
  return ObservableNotificationHandler.trackingProperty.setter();
}

uint64_t sub_1C324CEA8()
{
  return ObservableNotificationHandler.trackingProperty.setter();
}

uint64_t ObjC metadata update function for ClarityUICallHistory()
{
  return type metadata accessor for ClarityUICallHistory();
}

uint64_t type metadata accessor for ClarityUICallHistory()
{
  uint64_t result = type metadata singleton initialization cache for ClarityUICallHistory;
  if (!type metadata singleton initialization cache for ClarityUICallHistory) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for ClarityUICallHistory()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for ClarityUICallHistory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClarityUICallHistory);
}

unint64_t lazy protocol witness table accessor for type CHHandle and conformance NSObject()
{
  unint64_t result = lazy protocol witness table cache variable for type CHHandle and conformance NSObject;
  if (!lazy protocol witness table cache variable for type CHHandle and conformance NSObject)
  {
    type metadata accessor for NSObject(255, (unint64_t *)&lazy cache variable for type metadata for CHHandle);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CHHandle and conformance NSObject);
  }
  return result;
}

void outlined bridged method (mbnn) of @objc CHManager.coalescingStrategy.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setCoalescingStrategy_, v4);
}

BOOL static ControlShape.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t UIContextMenuConfiguration.init(provider:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return specialized UIContextMenuConfiguration.init(provider:)(a1, v2, ObjectType, a2);
}

uint64_t protocol witness for ControlMenuDataSource.attachmentPoint(for:configuration:) in conformance InCallControlsView()
{
  return specialized ControlMenuDataSource.attachmentPoint(for:configuration:)();
}

uint64_t specialized ControlMenuDataSource.attachmentPoint(for:configuration:)()
{
  return 0;
}

uint64_t ControlMenuDataSource.attachmentPoint(for:configuration:)()
{
  return 0;
}

void *specialized ControlMenuDataSource.menuStyle(for:existingStyle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  return a3;
}

void *ControlMenuDataSource.menuStyle(for:existingStyle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  return a3;
}

uint64_t ControlMenuDataSource.menu(for:)()
{
  return 0;
}

void ControlShape.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int ControlShape.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ControlShape(char *a1, char *a2)
{
  return static ControlShape.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ControlShape()
{
  return ControlShape.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ControlShape(uint64_t a1)
{
  ControlShape.hash(into:)(a1, *v1);
}

uint64_t closure #1 in UIContextMenuConfiguration.init(provider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  if (!MEMORY[0x1C8776240](v5)) {
    return 0;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
  uint64_t v10 = v9;
  swift_unknownObjectRelease();
  if (!v8) {
    return 0;
  }
  swift_beginAccess();
  if (MEMORY[0x1C8776240](a3 + 16))
  {
    uint64_t v11 = *(void *)(a3 + 24);
    uint64_t v12 = swift_getObjectType();
    uint64_t v13 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v11 + 8))(v8, v10, v12, v11);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }

  return v13;
}

uint64_t specialized UIContextMenuConfiguration.init(provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4))
  {
    uint64_t v6 = v5;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 24) = v6;
    swift_unknownObjectWeakInit();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 24) = a4;
    swift_unknownObjectWeakInit();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = v7;
    swift_retain();
    swift_retain();
    UIContextMenuConfiguration.init(identifier:previewProvider:actionProvider:)();
    uint64_t v11 = v10;
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v11;
}

unint64_t lazy protocol witness table accessor for type ControlShape and conformance ControlShape()
{
  unint64_t result = lazy protocol witness table cache variable for type ControlShape and conformance ControlShape;
  if (!lazy protocol witness table cache variable for type ControlShape and conformance ControlShape)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ControlShape and conformance ControlShape);
  }
  return result;
}

uint64_t dispatch thunk of Control.cnkContentAlpha.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Control.cnkContentAlpha.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Control.cnkContentAlpha.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of Control.shape.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ControlMenuDataSource.menu(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ControlMenuDataSource.attachmentPoint(for:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ControlMenuDataSource.menuStyle(for:existingStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of ControlMenuPresenter.menuDataSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ControlMenuPresenter.presentingControl.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unsigned char *storeEnumTagSinglePayload for ControlShape(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C324D618);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlShape()
{
  return &type metadata for ControlShape;
}

uint64_t sub_1C324D650()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C324D688()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t specialized Sequence.forEach(_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a4)
  {
    uint64_t v6 = a3;
    if (a4 >= a3)
    {
      uint64_t v7 = (uint64_t (*)(uint64_t *))result;
      while (v6 < a4)
      {
        uint64_t v8 = v6;
        unint64_t result = v7(&v8);
        if (!v4 && a4 != ++v6) {
          continue;
        }
        return result;
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void specialized Sequence.forEach(_:)(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_13;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87744F0](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v11 = v8;
      a1(&v11);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
}

void ShareCardViewModel.__allocating_init(didTapScreenShareButton:didTapAskToScreenShareButton:didTapCollaborateButton:didTapEndSharePlay:)()
{
}

uint64_t ShareCardControlsView.init(shareCardViewModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t result = type metadata accessor for ShareCardControlsView(0);
  uint64_t v7 = (char *)a3 + *(int *)(result + 20);
  *(void *)uint64_t v7 = a1;
  *((void *)v7 + 1) = a2;
  v7[16] = 0;
  return result;
}

uint64_t ShareCardButton.title.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t ShareCardButton.title.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*ShareCardButton.title.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareCardButton.subtitle.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t ShareCardButton.subtitle.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*ShareCardButton.subtitle.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareCardButton.systemImage.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t ShareCardButton.systemImage.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  return result;
}

uint64_t (*ShareCardButton.systemImage.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareCardButton.tightLayout.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ShareCardButton.tightLayout.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t (*ShareCardButton.tightLayout.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for ShareCardButton.action : ShareCardButton@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = partial apply for thunk for @callee_guaranteed () -> ();
  a2[1] = (uint64_t (*)())v5;
  return swift_retain();
}

uint64_t key path setter for ShareCardButton.action : ShareCardButton(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 56) = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  *(void *)(a2 + 64) = v5;
  return result;
}

uint64_t ShareCardButton.action.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t ShareCardButton.action.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t result = swift_release();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v0;
  return result;
}

uint64_t (*ShareCardButton.action.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ShareCardButton.body.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = type metadata accessor for ShareCardButton(0);
  uint64_t v2 = OUTLINED_FUNCTION_1(v1);
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_60();
  outlined init with copy of ShareCardButton(v0, (uint64_t)&v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (void (*)(void))type metadata accessor for ShareCardButton);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  outlined init with take of ShareCardButton((uint64_t)&v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v9 + v8, (void (*)(void))type metadata accessor for ShareCardButton);
  uint64_t v13 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
  Button.init(action:label:)();
  uint64_t KeyPath = swift_getKeyPath();
  char v15 = 0;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>>);
  lazy protocol witness table accessor for type ShareCardButtonStyle and conformance ShareCardButtonStyle();
  View.buttonStyle<A>(_:)();
  swift_release();
  uint64_t v10 = OUTLINED_FUNCTION_41_0();
  v11(v10);
  OUTLINED_FUNCTION_28();
}

void closure #2 in ShareCardButton.body.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
  closure #1 in closure #2 in ShareCardButton.body.getter();
}

uint64_t closure #1 in closure #1 in closure #2 in ShareCardButton.body.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  MEMORY[0x1F4188790](v53);
  uint64_t v56 = (uint64_t *)((char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for Image.Scale();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
  uint64_t v7 = MEMORY[0x1F4188790](v58);
  v52 = (uint64_t *)((char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v51 = (uint64_t)&v51 - v9;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>?);
  MEMORY[0x1F4188790](v59);
  uint64_t v57 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DynamicTypeSize();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  char v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v51 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v51 - v22;
  type metadata accessor for ShareCardButton(0);
  specialized Environment.wrappedValue.getter();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E4F3CB38], v11);
  char v24 = static DynamicTypeSize.< infix(_:_:)();
  unint64_t v25 = *(void (**)(char *, uint64_t))(v12 + 8);
  v25(v15, v11);
  v25(v17, v11);
  if (v24)
  {
    if (a1[5])
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = Image.init(systemName:)();
      uint64_t v28 = v54;
      uint64_t v27 = v55;
      uint64_t v29 = (unsigned int *)MEMORY[0x1E4F3EC60];
      if (!*((unsigned char *)a1 + 48)) {
        uint64_t v29 = (unsigned int *)MEMORY[0x1E4F3EC48];
      }
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v6, *v29, v55);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v31 = v56;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))((char *)v56 + *(int *)(v53 + 28), v6, v27);
      *uint64_t v31 = KeyPath;
      uint64_t v32 = v58;
      uint64_t v33 = v52;
      outlined init with copy of FeatureEligibility?((uint64_t)v31, (uint64_t)v52 + *(int *)(v58 + 36), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
      uint64_t *v33 = v26;
      swift_retain();
      outlined destroy of SystemUpdateNotice?((uint64_t)v31, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v27);
      swift_release();
      uint64_t v34 = (uint64_t)v33;
      uint64_t v35 = v51;
      outlined init with take of Any?(v34, v51, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
      uint64_t v36 = v35;
      uint64_t v37 = v57;
      outlined init with take of Any?(v36, v57, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v38 = 1;
      uint64_t v37 = v57;
      uint64_t v32 = v58;
    }
    __swift_storeEnumTagSinglePayload(v37, v38, 1, v32);
    outlined init with take of Any?(v37, (uint64_t)v23, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>?);
    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v39 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v23, v39, 1, v59);
  uint64_t v40 = a1[1];
  uint64_t v61 = *a1;
  uint64_t v62 = v40;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v41 = Text.init<A>(_:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  char v47 = v46 & 1;
  outlined init with copy of FeatureEligibility?((uint64_t)v23, (uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  uint64_t v48 = v60;
  outlined init with copy of FeatureEligibility?((uint64_t)v21, v60, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  uint64_t v49 = v48
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>))
               + 48);
  *(void *)uint64_t v49 = v41;
  *(void *)(v49 + 8) = v43;
  *(unsigned char *)(v49 + 16) = v47;
  *(void *)(v49 + 24) = v45;
  *(_WORD *)(v49 + 32) = 257;
  outlined copy of Text.Storage(v41, v43, v47);
  swift_bridgeObjectRetain();
  outlined destroy of SystemUpdateNotice?((uint64_t)v23, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  outlined consume of Text.Storage(v41, v43, v47);
  swift_bridgeObjectRelease();
  return outlined destroy of SystemUpdateNotice?((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
}

uint64_t static PrimitiveButtonStyle<>.shareCard.getter()
{
  return swift_getKeyPath();
}

uint64_t default argument 3 of ShareCardButton.init(title:subtitle:systemImage:tightLayout:action:)()
{
  return 0;
}

uint64_t ShareCardButton.init(title:subtitle:systemImage:tightLayout:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  OUTLINED_FUNCTION_72_1(a1, a2, a3, a4, a5, a6, a7);
  *(void *)(a8 + 56) = v9;
  *(void *)(a8 + 64) = v10;
  uint64_t v11 = (uint64_t *)(a8 + *(int *)(type metadata accessor for ShareCardButton(0) + 36));
  *uint64_t v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  return swift_storeEnumTagMultiPayload();
}

uint64_t (*ShareCardMenuButton.title.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*ShareCardMenuButton.subtitle.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*ShareCardMenuButton.systemImage.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*ShareCardMenuButton.tightLayout.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareCardMenuButton.menuItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShareCardMenuButton.menuItems.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*ShareCardMenuButton.menuItems.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for ShareCardMenuButton.action : ShareCardMenuButton@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CNComposeRecipient) -> ();
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for ShareCardMenuButton.action : ShareCardMenuButton(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 64) = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CNComposeRecipient) -> (@out ());
  *(void *)(a2 + 72) = v5;
  return result;
}

uint64_t ShareCardMenuButton.action.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t ShareCardMenuButton.action.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t result = swift_release();
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v0;
  return result;
}

uint64_t (*ShareCardMenuButton.action.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ShareCardMenuButton.body.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v126 = v5;
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
  OUTLINED_FUNCTION_4();
  uint64_t v120 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2_3();
  uint64_t v119 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.menuStyle<A>(_:)>>.0);
  OUTLINED_FUNCTION_4();
  uint64_t v122 = v10;
  uint64_t v123 = v9;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v118 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  v121 = (char *)&v101 - v13;
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, <<opaque return type of View.menuStyle<A>(_:)>>.0>.Storage);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_63();
  uint64_t v15 = type metadata accessor for ShareCardMenuButton(0);
  uint64_t v16 = OUTLINED_FUNCTION_1(v15);
  uint64_t v111 = v17;
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x1F4188790](v16);
  uint64_t v112 = (uint64_t)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>>);
  OUTLINED_FUNCTION_4();
  uint64_t v114 = v21;
  uint64_t v115 = v20;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_2_3();
  uint64_t v113 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  OUTLINED_FUNCTION_4();
  uint64_t v116 = v24;
  uint64_t v117 = v23;
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_17_0();
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
  OUTLINED_FUNCTION_0();
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v101 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v101 - v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v32 = OUTLINED_FUNCTION_8(v31);
  MEMORY[0x1F4188790](v32);
  uint64_t v33 = OUTLINED_FUNCTION_21_1();
  uint64_t v34 = type metadata accessor for Participant(v33);
  OUTLINED_FUNCTION_4();
  uint64_t v36 = MEMORY[0x1F4188790](v35);
  uint64_t v37 = MEMORY[0x1F4188790](v36);
  uint64_t v38 = MEMORY[0x1F4188790](v37);
  MEMORY[0x1F4188790](v38);
  OUTLINED_FUNCTION_65_3();
  MEMORY[0x1F4188790](v39);
  uint64_t updated = *(void *)(v1 + 56);
  if (*(void *)(updated + 16) != 1) {
    goto LABEL_4;
  }
  uint64_t v102 = v40;
  uint64_t v103 = v44;
  uint64_t v104 = v43;
  uint64_t v105 = v42;
  uint64_t v106 = (uint64_t)&v101 - v41;
  v107 = v28;
  uint64_t v108 = v0;
  v109 = v30;
  uint64_t v110 = v1;
  uint64_t v46 = v127;
  specialized Collection.first.getter(updated, v4);
  if (__swift_getEnumTagSinglePayload(v4, 1, v34) != 1)
  {
    uint64_t v122 = v3;
    uint64_t v57 = v106;
    uint64_t v58 = outlined init with take of ShareCardButton(v4, v106, (void (*)(void))type metadata accessor for Participant);
    uint64_t v59 = (uint64_t (*)(uint64_t))v57;
    Participant.isRequestToScreenShareAvailable.getter(v58, v60, v61, v62, v63, v64, v65, v66, v101, v102, v103, v104, v105, v106, (uint64_t)v107, v108, (uint64_t)v109, v110, v111,
      v112);
    char v68 = v67;
    outlined init with copy of ShareCardButton(v57, v2, (void (*)(void))type metadata accessor for Participant);
    if (v68)
    {
      uint64_t v59 = (uint64_t (*)(uint64_t))v2;
      char v69 = Participant.screenState.getter();
      uint64_t v70 = v102;
      outlined init with copy of ShareCardButton(v2, v102, (void (*)(void))type metadata accessor for Participant);
      if (v69 == 2)
      {
        _s15ConversationKit11ParticipantVWOhTm_2(v70, (void (*)(void))type metadata accessor for Participant);
        uint64_t v71 = _s15ConversationKit11ParticipantVWOhTm_2(v2, (void (*)(void))type metadata accessor for Participant);
        OUTLINED_FUNCTION_38_12(v71, v72, (void (*)(void))type metadata accessor for Participant);
        uint64_t v73 = v111;
        uint64_t v74 = v112;
LABEL_11:
        LODWORD(v121) = Participant.screenState.getter() != 2;
        goto LABEL_12;
      }
      char v77 = Participant.isReceivingScreenFrames.getter();
      uint64_t v59 = type metadata accessor for Participant;
      _s15ConversationKit11ParticipantVWOhTm_2(v70, (void (*)(void))type metadata accessor for Participant);
      uint64_t v78 = _s15ConversationKit11ParticipantVWOhTm_2(v2, (void (*)(void))type metadata accessor for Participant);
      OUTLINED_FUNCTION_38_12(v78, v79, (void (*)(void))type metadata accessor for Participant);
      uint64_t v73 = v111;
      uint64_t v74 = v112;
      if ((v77 & 1) == 0) {
        goto LABEL_11;
      }
      LODWORD(v121) = 1;
    }
    else
    {
      uint64_t v75 = _s15ConversationKit11ParticipantVWOhTm_2(v2, (void (*)(void))type metadata accessor for Participant);
      OUTLINED_FUNCTION_38_12(v75, v76, (void (*)(void))type metadata accessor for Participant);
      LODWORD(v121) = 1;
      uint64_t v73 = v111;
      uint64_t v74 = v112;
    }
LABEL_12:
    _s15ConversationKit11ParticipantVWOhTm_2((uint64_t)v59, (void (*)(void))type metadata accessor for Participant);
    uint64_t v80 = v110;
    outlined init with copy of ShareCardButton(v110, v74, (void (*)(void))type metadata accessor for ShareCardMenuButton);
    uint64_t v81 = v105;
    outlined init with copy of ShareCardButton(v57, v105, (void (*)(void))type metadata accessor for Participant);
    unint64_t v82 = (*(unsigned __int8 *)(v73 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    uint64_t v83 = *(unsigned __int8 *)(v104 + 80);
    unint64_t v84 = v19 + v83 + v82;
    uint64_t v85 = v57;
    unint64_t v86 = v84 & ~v83;
    uint64_t v87 = swift_allocObject();
    outlined init with take of ShareCardButton(v74, v87 + v82, (void (*)(void))type metadata accessor for ShareCardMenuButton);
    uint64_t v88 = outlined init with take of ShareCardButton(v81, v87 + v86, (void (*)(void))type metadata accessor for Participant);
    MEMORY[0x1F4188790](v88);
    *(&v101 - 2) = v80;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
    Button.init(action:label:)();
    uint64_t KeyPath = swift_getKeyPath();
    LOBYTE(v129) = 0;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>>);
    lazy protocol witness table accessor for type ShareCardButtonStyle and conformance ShareCardButtonStyle();
    uint64_t v89 = v108;
    View.buttonStyle<A>(_:)();
    swift_release();
    OUTLINED_FUNCTION_26_2();
    v90();
    uint64_t v91 = swift_getKeyPath();
    uint64_t v92 = swift_allocObject();
    *(unsigned char *)(v92 + 16) = (_BYTE)v121;
    uint64_t v94 = v116;
    uint64_t v93 = v117;
    uint64_t v95 = (uint64_t)v107;
    OUTLINED_FUNCTION_2_1();
    v96();
    v97 = (uint64_t *)(v95 + *(int *)(v124 + 36));
    uint64_t *v97 = v91;
    v97[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
    v97[2] = v92;
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v89, v93);
    uint64_t v98 = (uint64_t)v109;
    outlined init with take of Any?(v95, (uint64_t)v109, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    outlined init with copy of FeatureEligibility?(v98, v122, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    uint64_t v99 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
    unint64_t v100 = lazy protocol witness table accessor for type ShareCardMenuStyle and conformance ShareCardMenuStyle();
    uint64_t KeyPath = v46;
    v129 = &type metadata for ShareCardMenuStyle;
    uint64_t v130 = v99;
    unint64_t v131 = v100;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of SystemUpdateNotice?(v98, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    _s15ConversationKit11ParticipantVWOhTm_2(v85, (void (*)(void))type metadata accessor for Participant);
    goto LABEL_13;
  }
  uint64_t updated = outlined destroy of SystemUpdateNotice?(v4, &demangling cache variable for type metadata for Participant?);
  uint64_t v1 = v110;
LABEL_4:
  uint64_t v47 = MEMORY[0x1F4188790](updated);
  *(&v101 - 2) = v1;
  MEMORY[0x1F4188790](v47);
  *(&v101 - 2) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
  lazy protocol witness table accessor for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>((unint64_t *)&lazy protocol witness table cache variable for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>, &demangling cache variable for type metadata for ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  Menu.init(content:label:)();
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v129) = 0;
  uint64_t v48 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
  unint64_t v49 = lazy protocol witness table accessor for type ShareCardMenuStyle and conformance ShareCardMenuStyle();
  os_log_type_t v50 = v118;
  uint64_t v51 = v127;
  View.menuStyle<A>(_:)();
  swift_release();
  OUTLINED_FUNCTION_26_2();
  v52();
  uint64_t v54 = v121;
  uint64_t v53 = v122;
  uint64_t v55 = v123;
  (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v121, v50, v123);
  OUTLINED_FUNCTION_2_1();
  v56();
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  uint64_t KeyPath = v51;
  v129 = &type metadata for ShareCardMenuStyle;
  uint64_t v130 = v48;
  unint64_t v131 = v49;
  swift_getOpaqueTypeConformance2();
  _ConditionalContent<>.init(storage:)();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
LABEL_13:
  OUTLINED_FUNCTION_28();
}

uint64_t closure #3 in ShareCardMenuButton.body.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShareCardMenuButton(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  v8[1] = *(void *)(a1 + 56);
  swift_getKeyPath();
  outlined init with copy of ShareCardButton(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ShareCardMenuButton);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  outlined init with take of ShareCardButton((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (void (*)(void))type metadata accessor for ShareCardMenuButton);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [Participant] and conformance [A], &demangling cache variable for type metadata for [Participant]);
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type Participant and conformance Participant, (void (*)(uint64_t))type metadata accessor for Participant);
  lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  return ForEach<>.init(_:id:content:)();
}

uint64_t closure #1 in closure #3 in ShareCardMenuButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v48 = a3;
  uint64_t v4 = type metadata accessor for ShareCardMenuButton(0);
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v49 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Participant(0);
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v50 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v46 - v21;
  Participant.isRequestToScreenShareAvailable.getter(v20, v23, v24, v25, v26, v27, v28, v29, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56,
    v57);
  char v31 = v30;
  outlined init with copy of ShareCardButton(a1, (uint64_t)v22, (void (*)(void))type metadata accessor for Participant);
  if (v31)
  {
    char v32 = Participant.screenState.getter();
    outlined init with copy of ShareCardButton((uint64_t)v22, (uint64_t)v19, (void (*)(void))type metadata accessor for Participant);
    if (v32 == 2)
    {
      _s15ConversationKit11ParticipantVWOhTm_2((uint64_t)v19, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOhTm_2((uint64_t)v22, (void (*)(void))type metadata accessor for Participant);
      outlined init with copy of ShareCardButton(a1, (uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
      uint64_t v33 = v48;
LABEL_7:
      BOOL v34 = Participant.screenState.getter() != 2;
      goto LABEL_8;
    }
    HIDWORD(v47) = Participant.isReceivingScreenFrames.getter();
    _s15ConversationKit11ParticipantVWOhTm_2((uint64_t)v19, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_2((uint64_t)v22, (void (*)(void))type metadata accessor for Participant);
    outlined init with copy of ShareCardButton(a1, (uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
    uint64_t v33 = v48;
    if ((v47 & 0x100000000) == 0) {
      goto LABEL_7;
    }
    BOOL v34 = 1;
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_2((uint64_t)v22, (void (*)(void))type metadata accessor for Participant);
    outlined init with copy of ShareCardButton(a1, (uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
    BOOL v34 = 1;
    uint64_t v33 = v48;
  }
LABEL_8:
  uint64_t v35 = v49;
  _s15ConversationKit11ParticipantVWOhTm_2((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
  outlined init with copy of ShareCardButton(v51, (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ShareCardMenuButton);
  outlined init with copy of ShareCardButton(a1, (uint64_t)v13, (void (*)(void))type metadata accessor for Participant);
  unint64_t v36 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v37 = (v5 + *(unsigned __int8 *)(v50 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v38 = swift_allocObject();
  outlined init with take of ShareCardButton((uint64_t)v6, v38 + v36, (void (*)(void))type metadata accessor for ShareCardMenuButton);
  uint64_t v39 = outlined init with take of ShareCardButton((uint64_t)v13, v38 + v37, (void (*)(void))type metadata accessor for Participant);
  MEMORY[0x1F4188790](v39);
  *(&v46 - 2) = a1;
  Button.init(action:label:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = swift_allocObject();
  *(unsigned char *)(v41 + 16) = v34;
  uint64_t v43 = v52;
  uint64_t v42 = v53;
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v33, v9, v53);
  uint64_t v44 = (uint64_t *)(v33
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>)
                           + 36));
  *uint64_t v44 = KeyPath;
  v44[1] = (uint64_t)closure #1 in View.disabled(_:)partial apply;
  v44[2] = v41;
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v9, v42);
}

void closure #1 in ShareCardMenuButton.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void (**)(void *))(a1 + 64);
  uint64_t v3 = *(void **)(a2 + *(int *)(type metadata accessor for Participant(0) + 28));
  id v5 = v3;
  if (v3)
  {
    id v4 = v3;
    uint64_t v3 = v5;
  }
  v2(v3);
}

uint64_t closure #2 in closure #1 in closure #3 in ShareCardMenuButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  Participant.contactDetails.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  Participant.name(_:)();
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

void closure #2 in ShareCardMenuButton.body.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>);
  closure #1 in closure #2 in ShareCardButton.body.getter();
}

void closure #1 in closure #2 in ShareCardButton.body.getter()
{
  OUTLINED_FUNCTION_31();
  char v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>);
  uint64_t v10 = OUTLINED_FUNCTION_8(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_60();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>);
  uint64_t v12 = OUTLINED_FUNCTION_8(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_13_13();
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v41 - v15;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_65_3();
  if (*(unsigned char *)(v6 + 48)) {
    uint64_t v17 = 0x4018000000000000;
  }
  else {
    uint64_t v17 = 0x4022000000000000;
  }
  *(void *)uint64_t v0 = static VerticalAlignment.center.getter();
  *(void *)(v0 + 8) = v17;
  *(unsigned char *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>);
  v4(v6);
  static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>);
  outlined init with take of Any?((uint64_t)v16, v2, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>);
  uint64_t v18 = *(void *)(v6 + 24);
  if (v18)
  {
    v41[2] = *(void *)(v6 + 16);
    v41[3] = v18;
    lazy protocol witness table accessor for type String and conformance String();
    swift_bridgeObjectRetain();
    uint64_t v19 = Text.init<A>(_:)();
    uint64_t v21 = v20;
    v41[0] = v1;
    char v23 = v22 & 1;
    static Font.Weight.semibold.getter();
    uint64_t v18 = Text.fontWeight(_:)();
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    uint64_t v29 = v28 & 1;
    outlined consume of Text.Storage(v19, v21, v23);
    uint64_t v1 = v41[0];
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v29 = 0;
    uint64_t v27 = 0;
  }
  outlined init with copy of FeatureEligibility?(v2, v1, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>);
  outlined init with copy of FeatureEligibility?(v1, v8, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>);
  char v30 = (uint64_t *)(v8
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?))
                           + 48));
  *char v30 = v18;
  v30[1] = v25;
  v30[2] = v29;
  v30[3] = v27;
  uint64_t v31 = OUTLINED_FUNCTION_73_3();
  outlined copy of Text?(v31, v32, v33, v34);
  outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>);
  uint64_t v35 = OUTLINED_FUNCTION_73_3();
  outlined consume of Text?(v35, v36, v37, v38);
  uint64_t v39 = OUTLINED_FUNCTION_30_15();
  outlined destroy of SystemUpdateNotice?(v39, v40);
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in closure #1 in ShareCardMenuButton.buttonLabel.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  MEMORY[0x1F4188790](v53);
  uint64_t v56 = (uint64_t *)((char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for Image.Scale();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
  uint64_t v7 = MEMORY[0x1F4188790](v58);
  uint64_t v52 = (uint64_t *)((char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v51 = (uint64_t)&v51 - v9;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>?);
  MEMORY[0x1F4188790](v59);
  uint64_t v57 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DynamicTypeSize();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v51 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  char v23 = (char *)&v51 - v22;
  type metadata accessor for ShareCardMenuButton(0);
  specialized Environment.wrappedValue.getter();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E4F3CB38], v11);
  char v24 = static DynamicTypeSize.< infix(_:_:)();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v12 + 8);
  v25(v15, v11);
  v25(v17, v11);
  if (v24)
  {
    if (a1[5])
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = Image.init(systemName:)();
      uint64_t v28 = v54;
      uint64_t v27 = v55;
      uint64_t v29 = (unsigned int *)MEMORY[0x1E4F3EC60];
      if (!*((unsigned char *)a1 + 48)) {
        uint64_t v29 = (unsigned int *)MEMORY[0x1E4F3EC48];
      }
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v6, *v29, v55);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v31 = v56;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))((char *)v56 + *(int *)(v53 + 28), v6, v27);
      *uint64_t v31 = KeyPath;
      uint64_t v32 = v58;
      char v33 = v52;
      outlined init with copy of FeatureEligibility?((uint64_t)v31, (uint64_t)v52 + *(int *)(v58 + 36), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
      uint64_t *v33 = v26;
      swift_retain();
      outlined destroy of SystemUpdateNotice?((uint64_t)v31, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v27);
      swift_release();
      uint64_t v34 = (uint64_t)v33;
      uint64_t v35 = v51;
      outlined init with take of Any?(v34, v51, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
      uint64_t v36 = v35;
      uint64_t v37 = v57;
      outlined init with take of Any?(v36, v57, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v38 = 1;
      uint64_t v37 = v57;
      uint64_t v32 = v58;
    }
    __swift_storeEnumTagSinglePayload(v37, v38, 1, v32);
    outlined init with take of Any?(v37, (uint64_t)v23, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>?);
    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v39 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v23, v39, 1, v59);
  uint64_t v40 = a1[1];
  uint64_t v61 = *a1;
  uint64_t v62 = v40;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v41 = Text.init<A>(_:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  char v47 = v46 & 1;
  outlined init with copy of FeatureEligibility?((uint64_t)v23, (uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  uint64_t v48 = v60;
  outlined init with copy of FeatureEligibility?((uint64_t)v21, v60, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  uint64_t v49 = v48
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>))
               + 48);
  *(void *)uint64_t v49 = v41;
  *(void *)(v49 + 8) = v43;
  *(unsigned char *)(v49 + 16) = v47;
  *(void *)(v49 + 24) = v45;
  *(_WORD *)(v49 + 32) = 257;
  outlined copy of Text.Storage(v41, v43, v47);
  swift_bridgeObjectRetain();
  outlined destroy of SystemUpdateNotice?((uint64_t)v23, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
  outlined consume of Text.Storage(v41, v43, v47);
  swift_bridgeObjectRelease();
  return outlined destroy of SystemUpdateNotice?((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??);
}

uint64_t default argument 3 of ShareCardMenuButton.init(title:subtitle:systemImage:tightLayout:menuItems:action:)()
{
  return 0;
}

uint64_t ShareCardMenuButton.init(title:subtitle:systemImage:tightLayout:menuItems:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, void *a8@<X8>)
{
  OUTLINED_FUNCTION_72_1(a1, a2, a3, a4, a5, a6, a7);
  a8[7] = v9;
  a8[8] = v10;
  a8[9] = v11;
  uint64_t v12 = (void *)((char *)a8 + *(int *)(type metadata accessor for ShareCardMenuButton(0) + 40));
  *uint64_t v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  return swift_storeEnumTagMultiPayload();
}

uint64_t static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(void *a1, void (*a2)(void), uint64_t a3)
{
  MEMORY[0x1F4188790](a1);
  OUTLINED_FUNCTION_16_0();
  uint64_t v6 = type metadata accessor for CurrentValueSubject();
  a2();
  uint64_t v7 = v6;
  uint64_t v8 = CurrentValueSubject.__allocating_init(_:)();
  uint64_t v9 = type metadata accessor for NSNotificationCenter.Publisher();
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_60();
  id v13 = objc_msgSend(self, sel_defaultCenter);
  OUTLINED_FUNCTION_70_2((uint64_t)a1);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v8;
  v14[3] = a2;
  v14[4] = a3;
  lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v9);
  swift_release();
  return v8;
}

uint64_t specialized closure #1 in static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v4);
  return CurrentValueSubject.send(_:)();
}

uint64_t closure #1 in static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(*a2 + *MEMORY[0x1E4F1ABB8]);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v9 - v5;
  v7(v4);
  CurrentValueSubject.send(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t ShareCardViewModel.didTapScreenShareButton.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t ShareCardViewModel.didTapAskToScreenShareButton.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t ShareCardViewModel.didTapCollaborateButton.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t ShareCardViewModel.didTapEndSharePlay.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t ShareCardViewModel.collaborateButtonTitle.getter()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_11_1(0x524F42414C4C4F43, 0xEB00000000455441);
  OUTLINED_FUNCTION_60_5();
  return OUTLINED_FUNCTION_41_0();
}

uint64_t ShareCardViewModel.collaborateButtonImage.getter()
{
  return 0x322E6E6F73726570;
}

uint64_t ShareCardViewModel.endSharePlayButtonTitle.getter()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_11_1(0x7261685320646E45, 0xED000079616C5065);
  OUTLINED_FUNCTION_60_5();
  return OUTLINED_FUNCTION_41_0();
}

uint64_t ShareCardViewModel.endSharePlayButtonImage.getter()
{
  return 0x616C706572616873;
}

uint64_t ShareCardViewModel.shareScreenButtonTitle.getter()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  uint64_t v1 = OUTLINED_FUNCTION_46_10();
  OUTLINED_FUNCTION_11_1(v1 & 0xFFFFFFFFFFFFLL | 0x794D000000000000, 0xEF6E656572635320);
  OUTLINED_FUNCTION_60_5();
  return OUTLINED_FUNCTION_41_0();
}

uint64_t ShareCardViewModel.shareScreenButtonShortTitle.getter()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  uint64_t v1 = OUTLINED_FUNCTION_46_10();
  OUTLINED_FUNCTION_11_1(v1 & 0xFFFFFFFFFFFFLL | 0x6353000000000000, 0xEC0000006E656572);
  OUTLINED_FUNCTION_60_5();
  return OUTLINED_FUNCTION_41_0();
}

unint64_t ShareCardViewModel.shareScreenButtonImage.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  if ((*(uint64_t (**)(void))(v0 + 168))()) {
    return 0;
  }
  else {
    return 0xD000000000000028;
  }
}

uint64_t ShareCardViewModel.requestScreenShareButtonTitle.getter()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_11_1(0xD000000000000013, 0x80000001C37A3650);
  OUTLINED_FUNCTION_60_5();
  return OUTLINED_FUNCTION_41_0();
}

uint64_t ShareCardViewModel.collaborateSubtitle.getter()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_62();
  uint64_t v5 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_17_0();
  uint64_t v7 = MEMORY[0x1C8776240](v1 + 16);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = (void *)v7;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v20 = 11;
  long long v21 = 0u;
  long long v22 = 0u;
  char v23 = 6;
  OUTLINED_FUNCTION_50();
  (*(void (**)(void, uint64_t *, void *))(v9 + 96))(0, &v20, v8);
  outlined destroy of ConversationControlsType((uint64_t)&v20);
  if (__swift_getEnumTagSinglePayload(v2, 1, v5) == 1)
  {

    outlined destroy of SystemUpdateNotice?(v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    return 0;
  }
  outlined init with take of ShareCardButton(v2, v0, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  unint64_t v11 = *(void *)(v0 + 88);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_9;
    }
LABEL_13:

    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOhTm_2(v0, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
    return 0;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v12) {
    goto LABEL_13;
  }
LABEL_9:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v11 & 0xC000000000000001) == 0, v11);
  if ((v11 & 0xC000000000000001) != 0) {
    id v13 = (id)MEMORY[0x1C87744F0](0, v11);
  }
  else {
    id v13 = *(id *)(v11 + 32);
  }
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v14, sel_string);

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  uint64_t v20 = v16;
  *(void *)&long long v21 = v18;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v10 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();

  _s15ConversationKit11ParticipantVWOhTm_2(v0, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t key path getter for ShareCardViewModel.shouldShowEndActivity : ShareCardViewModel@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 264))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShareCardViewModel.shouldShowEndActivity : ShareCardViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 272))(*a1);
}

uint64_t ShareCardViewModel.shouldShowEndActivity.getter()
{
  return ShareCardViewModel.shouldShowEndActivity.getter();
}

{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_41_0();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t ShareCardViewModel.shouldShowEndActivity.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*ShareCardViewModel.shouldShowEndActivity.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShareCardViewModel.$shouldShowEndActivity : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 296))(v6);
}

uint64_t ShareCardViewModel.$shouldShowEndActivity.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowEndActivity, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShareCardViewModel.$shouldShowEndActivity.setter(uint64_t a1)
{
  return ShareCardViewModel.$shouldShowEndActivity.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowEndActivity, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void (*ShareCardViewModel.$shouldShowEndActivity.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(void *)(v0 + 32) = v2;
  OUTLINED_FUNCTION_1(v2);
  *(void *)(v0 + 40) = v3;
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = OUTLINED_FUNCTION_44_0((uint64_t)v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShareCardViewModel.$shouldShowEndActivity.modify;
}

void ShareCardViewModel.$shouldShowEndActivity.modify(uint64_t a1, char a2)
{
}

uint64_t key path getter for ShareCardViewModel.shouldShowCollaboration : ShareCardViewModel@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 312))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShareCardViewModel.shouldShowCollaboration : ShareCardViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 320))(*a1);
}

uint64_t ShareCardViewModel.shouldShowCollaboration.getter()
{
  return ShareCardViewModel.shouldShowEndActivity.getter();
}

uint64_t ShareCardViewModel.shouldShowCollaboration.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

uint64_t (*ShareCardViewModel.shouldShowCollaboration.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShareCardViewModel.$shouldShowCollaboration : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 344))(v6);
}

uint64_t ShareCardViewModel.$shouldShowCollaboration.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowCollaboration, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShareCardViewModel.$shouldShowCollaboration.setter(uint64_t a1)
{
  return ShareCardViewModel.$shouldShowEndActivity.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowCollaboration, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void (*ShareCardViewModel.$shouldShowCollaboration.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(void *)(v0 + 32) = v2;
  OUTLINED_FUNCTION_1(v2);
  *(void *)(v0 + 40) = v3;
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = OUTLINED_FUNCTION_44_0((uint64_t)v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShareCardViewModel.$shouldShowCollaboration.modify;
}

void ShareCardViewModel.$shouldShowCollaboration.modify(uint64_t a1, char a2)
{
}

void ShareCardViewModel.$shouldShowEndActivity.modify(uint64_t a1, char a2, void (*a3)(void *))
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)(*(void *)a1 + 48);
  uint64_t v6 = *(void **)(*(void *)a1 + 56);
  if (a2)
  {
    uint64_t v7 = v4[4];
    uint64_t v8 = v4[5];
    OUTLINED_FUNCTION_2_1();
    v9();
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    a3(*(void **)(*(void *)a1 + 56));
  }
  free(v6);
  free(v5);
  free(v4);
}

uint64_t ShareCardViewModel.shareScreenEnabled.getter()
{
  OUTLINED_FUNCTION_50();
  if ((*(uint64_t (**)(void))(v0 + 472))())
  {
    OUTLINED_FUNCTION_50();
    if (((*(uint64_t (**)(void))(v1 + 520))() & 1) == 0) {
      return 1;
    }
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v2 + 216))() & 1;
}

uint64_t key path getter for ShareCardViewModel.isAVLess : ShareCardViewModel@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 368))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShareCardViewModel.isAVLess : ShareCardViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 376))(*a1);
}

uint64_t ShareCardViewModel.isAVLess.getter()
{
  return ShareCardViewModel.shouldShowEndActivity.getter();
}

uint64_t ShareCardViewModel.isAVLess.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

uint64_t (*ShareCardViewModel.isAVLess.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShareCardViewModel.$isAVLess : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 400))(v6);
}

uint64_t ShareCardViewModel.$isAVLess.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__isAVLess, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShareCardViewModel.$isAVLess.setter(uint64_t a1)
{
  return ShareCardViewModel.$shouldShowEndActivity.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__isAVLess, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void (*ShareCardViewModel.$isAVLess.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(void *)(v0 + 32) = v2;
  OUTLINED_FUNCTION_1(v2);
  *(void *)(v0 + 40) = v3;
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = OUTLINED_FUNCTION_44_0((uint64_t)v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShareCardViewModel.$isAVLess.modify;
}

void ShareCardViewModel.$isAVLess.modify(uint64_t a1, char a2)
{
}

BOOL ShareCardViewModel.askToShareScreenEnabled.getter()
{
  OUTLINED_FUNCTION_50();
  return ((*(uint64_t (**)(void))(v0 + 368))() & 1) == 0;
}

uint64_t key path getter for ShareCardViewModel.remoteParticipants : ShareCardViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 424))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ShareCardViewModel.remoteParticipants : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 432);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t ShareCardViewModel.remoteParticipants.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t ShareCardViewModel.remoteParticipants.setter()
{
  return static Published.subscript.setter();
}

uint64_t (*ShareCardViewModel.remoteParticipants.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShareCardViewModel.$remoteParticipants : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Participant]>.Publisher);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 456))(v6);
}

uint64_t ShareCardViewModel.$remoteParticipants.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__remoteParticipants, &demangling cache variable for type metadata for Published<[Participant]>);
}

uint64_t ShareCardViewModel.$remoteParticipants.setter(uint64_t a1)
{
  return ShareCardViewModel.$shouldShowEndActivity.setter(a1, &demangling cache variable for type metadata for Published<[Participant]>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__remoteParticipants, &demangling cache variable for type metadata for Published<[Participant]>);
}

void (*ShareCardViewModel.$remoteParticipants.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Participant]>.Publisher);
  *(void *)(v0 + 32) = v2;
  OUTLINED_FUNCTION_1(v2);
  *(void *)(v0 + 40) = v3;
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = OUTLINED_FUNCTION_44_0((uint64_t)v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Participant]>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShareCardViewModel.$remoteParticipants.modify;
}

void ShareCardViewModel.$remoteParticipants.modify(uint64_t a1, char a2)
{
}

uint64_t key path getter for ShareCardViewModel.screenSharingAvailable : ShareCardViewModel@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 472))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShareCardViewModel.screenSharingAvailable : ShareCardViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 480))(*a1);
}

uint64_t ShareCardViewModel.screenSharingAvailable.getter()
{
  return ShareCardViewModel.shouldShowEndActivity.getter();
}

uint64_t ShareCardViewModel.screenSharingAvailable.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

uint64_t (*ShareCardViewModel.screenSharingAvailable.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShareCardViewModel.$screenSharingAvailable : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 504))(v6);
}

uint64_t ShareCardViewModel.$screenSharingAvailable.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenSharingAvailable, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShareCardViewModel.$screenSharingAvailable.setter(uint64_t a1)
{
  return ShareCardViewModel.$shouldShowEndActivity.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenSharingAvailable, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void (*ShareCardViewModel.$screenSharingAvailable.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(void *)(v0 + 32) = v2;
  OUTLINED_FUNCTION_1(v2);
  *(void *)(v0 + 40) = v3;
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = OUTLINED_FUNCTION_44_0((uint64_t)v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShareCardViewModel.$screenSharingAvailable.modify;
}

void ShareCardViewModel.$screenSharingAvailable.modify(uint64_t a1, char a2)
{
}

uint64_t key path getter for ShareCardViewModel.screenCaptured : ShareCardViewModel@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 520))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShareCardViewModel.screenCaptured : ShareCardViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 528))(*a1);
}

uint64_t ShareCardViewModel.screenCaptured.getter()
{
  return ShareCardViewModel.shouldShowEndActivity.getter();
}

uint64_t ShareCardViewModel.screenCaptured.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

uint64_t (*ShareCardViewModel.screenCaptured.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_49(KeyPath);
  uint64_t v3 = swift_getKeyPath();
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_16_4(v3);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for ShareCardViewModel.$screenCaptured : ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 552))(v6);
}

uint64_t ShareCardViewModel.$screenCaptured.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenCaptured, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShareCardViewModel.$shouldShowEndActivity.getter(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t ShareCardViewModel.$screenCaptured.setter(uint64_t a1)
{
  return ShareCardViewModel.$shouldShowEndActivity.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenCaptured, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShareCardViewModel.$shouldShowEndActivity.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_2_1();
  v10();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v6);
}

void (*ShareCardViewModel.$screenCaptured.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(void *)(v0 + 32) = v2;
  OUTLINED_FUNCTION_1(v2);
  *(void *)(v0 + 40) = v3;
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = OUTLINED_FUNCTION_44_0((uint64_t)v5);
  OUTLINED_FUNCTION_48_2((uint64_t)v6);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ShareCardViewModel.$screenCaptured.modify;
}

void ShareCardViewModel.$screenCaptured.modify(uint64_t a1, char a2)
{
}

void ShareCardViewModel.init(didTapScreenShareButton:didTapAskToScreenShareButton:didTapCollaborateButton:didTapEndSharePlay:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v25 = v2;
  uint64_t v26 = v3;
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  uint64_t v21 = v6;
  uint64_t v22 = v7;
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Participant]>);
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_4();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_16_0();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_61_4();
  uint64_t v17 = *(void (**)(void))(v15 + 32);
  OUTLINED_FUNCTION_15_44();
  v17();
  OUTLINED_FUNCTION_61_4();
  OUTLINED_FUNCTION_15_44();
  v17();
  OUTLINED_FUNCTION_61_4();
  OUTLINED_FUNCTION_15_44();
  v17();
  uint64_t v18 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__remoteParticipants;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v18, v1, v10);
  OUTLINED_FUNCTION_61_4();
  OUTLINED_FUNCTION_15_44();
  v17();
  OUTLINED_FUNCTION_61_4();
  OUTLINED_FUNCTION_15_44();
  v17();
  v0[3] = v19;
  v0[4] = v20;
  v0[5] = v21;
  v0[6] = v22;
  v0[7] = v23;
  v0[8] = v24;
  v0[9] = v25;
  v0[10] = v26;
  OUTLINED_FUNCTION_28();
}

void ShareCardViewModel.configure(with:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  uint64_t v3 = OUTLINED_FUNCTION_3_24();
  v4(v3);
  OUTLINED_FUNCTION_50_2();
  v5();
  OUTLINED_FUNCTION_24_26();
  uint64_t v6 = OUTLINED_FUNCTION_3_24();
  v7(v6);
  OUTLINED_FUNCTION_50_2();
  v8();
  OUTLINED_FUNCTION_24_26();
  uint64_t v9 = OUTLINED_FUNCTION_3_24();
  v10(v9);
  OUTLINED_FUNCTION_50_2();
  v11();
  OUTLINED_FUNCTION_24_26();
  uint64_t v12 = OUTLINED_FUNCTION_3_24();
  v13(v12);
  OUTLINED_FUNCTION_50_2();
  v14();
  OUTLINED_FUNCTION_24_26();
  uint64_t v15 = OUTLINED_FUNCTION_3_24();
  uint64_t v37 = v16(v15);
  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_50_2();
  uint64_t v18 = (void (*)(_DWORD *, void))v17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, (uint64_t *)&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  Publisher<>.assign(to:)();
  swift_release();
  v18(v36, 0);
  uint64_t v19 = (void *)*MEMORY[0x1E4FB2EB8];
  id v20 = objc_msgSend(self, sel_mainScreen);
  unsigned __int8 v21 = objc_msgSend(v20, sel_isCaptured);

  LOBYTE(v36[0]) = v21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = CurrentValueSubject.init(_:)();
  uint64_t v24 = type metadata accessor for NSNotificationCenter.Publisher();
  OUTLINED_FUNCTION_4();
  uint64_t v26 = v25;
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_60();
  id v28 = objc_msgSend(self, sel_defaultCenter);
  OUTLINED_FUNCTION_70_2((uint64_t)v19);
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = v23;
  v29[3] = closure #1 in ShareCardViewModel.configure(with:);
  v29[4] = 0;
  lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v22, v24);
  swift_release();
  uint64_t v37 = v23;
  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_50_2();
  uint64_t v31 = (void (*)(_DWORD *, void))v30();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  Publisher<>.assign(to:)();
  swift_release();
  v31(v36, 0);
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  __swift_project_value_buffer(v32, (uint64_t)static Logger.conversationControls);
  swift_retain();
  char v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 67109120;
    LOBYTE(v36[0]) = (*(uint64_t (**)(void))(*(void *)v1 + 360))() & 1;
    v36[0] = LOBYTE(v36[0]);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl(&dword_1C2F90000, v33, v34, "ShareCardControlsView: shareScreenEnabled: %{BOOL}d", v35, 8u);
    MEMORY[0x1C87760E0](v35, -1, -1);
  }
  else
  {

    swift_release();
  }
  OUTLINED_FUNCTION_28();
}

void closure #1 in ShareCardViewModel.configure(with:)(unsigned __int8 *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_mainScreen);
  unsigned __int8 v3 = objc_msgSend(v2, sel_isCaptured);

  *a1 = v3;
}

uint64_t ShareCardViewModel.deinit()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_0();
  id v2 = *(void (**)(uint64_t))(v1 + 8);
  uint64_t v3 = OUTLINED_FUNCTION_30_15();
  v2(v3);
  uint64_t v4 = OUTLINED_FUNCTION_25_27(OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__shouldShowCollaboration);
  v2(v4);
  uint64_t v5 = OUTLINED_FUNCTION_25_27(OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__isAVLess);
  v2(v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Participant]>);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v6();
  uint64_t v7 = OUTLINED_FUNCTION_25_27(OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenSharingAvailable);
  v2(v7);
  uint64_t v8 = OUTLINED_FUNCTION_25_27(OBJC_IVAR____TtC15ConversationKit18ShareCardViewModel__screenCaptured);
  v2(v8);
  return v0;
}

uint64_t ShareCardViewModel.__deallocating_deinit()
{
  ShareCardViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance ShareCardViewModel@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ShareCardViewModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

id ConversationControlsManager.shouldShowEndActivity.getter()
{
  (*(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x8C8))(v6);
  id v1 = v7;
  if (v7)
  {
    uint64_t v2 = v8;
    __swift_project_boxed_opaque_existential_1(v6, (uint64_t)v7);
    uint64_t v3 = (void *)(*(uint64_t (**)(id, uint64_t))(v2 + 104))(v1, v2);
    if (v3)
    {
      uint64_t v4 = v3;
      id v1 = objc_msgSend(v3, sel_shouldShowEndActivity);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
      return 0;
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Activity?);
  }
  return v1;
}

uint64_t ConversationControlsManager.shouldShowCollaboration.getter()
{
  type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_13_13();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_65_3();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x930))();
  OUTLINED_FUNCTION_30_15();
  swift_storeEnumTagMultiPayload();
  char v5 = static ConversationControlsAppLaunchButtonType.== infix(_:_:)(v2, v1);
  _s15ConversationKit11ParticipantVWOhTm_2(v1, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
  _s15ConversationKit11ParticipantVWOhTm_2(v2, (void (*)(void))type metadata accessor for ConversationControlsAppLaunchButtonType);
  if (v5) {
    char v6 = ConversationControlsManager.shouldShowEndActivity.getter() ^ 1;
  }
  else {
    char v6 = 0;
  }
  return v6 & 1;
}

unint64_t protocol witness for ShareCardViewModelProviding.shouldShowEndActivity.getter in conformance ConversationControlsManager()
{
  return (unint64_t)ConversationControlsManager.shouldShowEndActivity.getter() & 1;
}

uint64_t protocol witness for ShareCardViewModelProviding.shouldShowCollaboration.getter in conformance ConversationControlsManager()
{
  return ConversationControlsManager.shouldShowCollaboration.getter() & 1;
}

BOOL @objc TUConversationActivitySession.shouldShowEndActivity.getter(void *a1)
{
  id v1 = a1;
  BOOL v2 = TUConversationActivitySession.shouldShowEndActivity.getter();

  return v2;
}

BOOL TUConversationActivitySession.shouldShowEndActivity.getter()
{
  if (objc_msgSend(v0, sel_state) != (id)1) {
    return 0;
  }
  TUConversationActivitySession.generateType.getter(&v2);
  return v2 != 6;
}

uint64_t ShareCardControlsView.shareCardViewModel.getter()
{
  return ShareCardControlsView.shareCardViewModel.getter(MEMORY[0x1E4F3C670]);
}

uint64_t ShareCardControlsView.$shareCardViewModel.getter()
{
  return ShareCardControlsView.shareCardViewModel.getter(MEMORY[0x1E4F3C678]);
}

uint64_t ShareCardControlsView.shareCardViewModel.getter(uint64_t (*a1)(uint64_t))
{
  type metadata accessor for ShareCardControlsView(0);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  uint64_t v1 = OUTLINED_FUNCTION_35();
  return a1(v1);
}

uint64_t button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v30 = a4;
  uint64_t v25 = a3;
  uint64_t v31 = a5;
  uint64_t v32 = a2;
  uint64_t v29 = a1;
  uint64_t v5 = type metadata accessor for ShareCardControlsView(0);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v26 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = type metadata accessor for ShareCardButton(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for ShareCardViewModel(0);
  uint64_t v27 = lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  swift_bridgeObjectRetain();
  uint64_t v11 = StateObject.wrappedValue.getter();
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 240))(v11);
  uint64_t v14 = v13;
  swift_release();
  outlined init with copy of ShareCardButton(v25, (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ShareCardControlsView);
  unint64_t v15 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v16 = swift_allocObject();
  outlined init with take of ShareCardButton((uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (void (*)(void))type metadata accessor for ShareCardControlsView);
  uint64_t v17 = v32;
  *(void *)uint64_t v10 = v29;
  *((void *)v10 + 1) = v17;
  *((void *)v10 + 2) = 0;
  *((void *)v10 + 3) = 0;
  *((void *)v10 + 4) = v12;
  *((void *)v10 + 5) = v14;
  v10[48] = v30;
  *((void *)v10 + 7) = partial apply for closure #1 in button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:);
  *((void *)v10 + 8) = v16;
  uint64_t v18 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  *uint64_t v18 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = *(void *)StateObject.wrappedValue.getter();
  LOBYTE(v18) = (*(uint64_t (**)(void))(v19 + 360))();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = (v18 & 1) == 0;
  uint64_t v22 = v31;
  outlined init with copy of ShareCardButton((uint64_t)v10, v31, (void (*)(void))type metadata accessor for ShareCardButton);
  uint64_t v23 = (uint64_t *)(v22
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)
                           + 36));
  *uint64_t v23 = KeyPath;
  v23[1] = (uint64_t)closure #1 in View.disabled(_:)partial apply;
  v23[2] = v21;
  return _s15ConversationKit11ParticipantVWOhTm_2((uint64_t)v10, (void (*)(void))type metadata accessor for ShareCardButton);
}

uint64_t closure #1 in button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:)()
{
  type metadata accessor for ShareCardControlsView(0);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  uint64_t v0 = *(void (**)(uint64_t))(StateObject.wrappedValue.getter() + 24);
  swift_retain();
  uint64_t v1 = swift_release();
  v0(v1);
  return swift_release();
}

uint64_t closure #1 in ShareCardControlsView.shareScreenButton(tightLayout:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>);
  MEMORY[0x1F4188790](v41);
  uint64_t v35 = (uint64_t)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>.Storage);
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (uint64_t)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
  uint64_t v7 = MEMORY[0x1F4188790](v38);
  uint64_t v33 = (uint64_t)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v32 = (uint64_t)v31 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v34 = (uint64_t)v31 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v31 - v13;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  int v36 = (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 168))();
  int v15 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for ShareCardControlsView(0) + 20) + 16);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  v31[3] = v15;
  uint64_t v16 = StateObject.wrappedValue.getter();
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 224))(v16);
  uint64_t v19 = v18;
  swift_release();
  int v20 = a2 & 1;
  button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:)(v17, v19, a1, v20, (uint64_t)v14);
  swift_bridgeObjectRelease();
  if (v36)
  {
    outlined init with copy of FeatureEligibility?((uint64_t)v14, v39, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v21 = StateObject.wrappedValue.getter();
    uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 232))(v21);
    uint64_t v24 = v23;
    swift_release();
    uint64_t v25 = v34;
    button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:)(v22, v24, a1, v20, v34);
    swift_bridgeObjectRelease();
    uint64_t v26 = v32;
    outlined init with copy of FeatureEligibility?((uint64_t)v14, v32, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    uint64_t v27 = v33;
    outlined init with copy of FeatureEligibility?(v25, v33, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    uint64_t v28 = v35;
    outlined init with copy of FeatureEligibility?(v26, v35, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>));
    outlined init with copy of FeatureEligibility?(v27, v28 + *(int *)(v29 + 48), &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    outlined destroy of SystemUpdateNotice?(v27, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    outlined destroy of SystemUpdateNotice?(v26, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    outlined init with copy of FeatureEligibility?(v28, v39, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of SystemUpdateNotice?(v28, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    outlined destroy of SystemUpdateNotice?(v25, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
  }
  return outlined destroy of SystemUpdateNotice?((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
}

uint64_t ShareCardControlsView.askToShareScreenMenu(participants:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v3 = type metadata accessor for ShareCardMenuButton(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShareCardControlsView(0);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  uint64_t v7 = StateObject.wrappedValue.getter();
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 248))(v7);
  uint64_t v22 = v9;
  uint64_t v23 = v8;
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v10 = StateObject.wrappedValue.getter();
  uint64_t v12 = *(void *)(v10 + 40);
  uint64_t v11 = *(void *)(v10 + 48);
  swift_retain();
  swift_release();
  uint64_t v13 = v22;
  *(void *)uint64_t v6 = v23;
  *((void *)v6 + 1) = v13;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  v6[48] = 1;
  *((void *)v6 + 7) = a1;
  *((void *)v6 + 8) = v12;
  *((void *)v6 + 9) = v11;
  uint64_t v14 = (uint64_t *)&v6[*(int *)(v4 + 48)];
  *uint64_t v14 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = *(void *)StateObject.wrappedValue.getter();
  LOBYTE(v14) = (*(uint64_t (**)(void))(v15 + 416))();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = (v14 & 1) == 0;
  uint64_t v18 = v24;
  outlined init with copy of ShareCardButton((uint64_t)v6, v24, (void (*)(void))type metadata accessor for ShareCardMenuButton);
  uint64_t v19 = (uint64_t *)(v18
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)
                           + 36));
  *uint64_t v19 = KeyPath;
  v19[1] = (uint64_t)closure #1 in View.disabled(_:)partial apply;
  v19[2] = v17;
  return _s15ConversationKit11ParticipantVWOhTm_2((uint64_t)v6, (void (*)(void))type metadata accessor for ShareCardMenuButton);
}

uint64_t closure #1 in ShareCardControlsView.topShelfButtons(tightLayout:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v69 = a2;
  uint64_t v70 = a3;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>.Storage);
  MEMORY[0x1F4188790](v73);
  uint64_t v75 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>);
  MEMORY[0x1F4188790](v74);
  uint64_t v66 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v63 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v65 = (uint64_t)&v61 - v9;
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
  uint64_t v10 = MEMORY[0x1F4188790](v72);
  char v67 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v68 = (uint64_t)&v61 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v62 = (uint64_t)&v61 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v61 = (char *)&v61 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v64 = (uint64_t)&v61 - v18;
  uint64_t v19 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Participant(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v78 = (uint64_t)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v61 - v26;
  type metadata accessor for ShareCardControlsView(0);
  uint64_t v71 = a1;
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  uint64_t v28 = *(void *)StateObject.wrappedValue.getter();
  uint64_t v29 = (*(uint64_t (**)(void))(v28 + 424))();
  swift_release();
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v79 = MEMORY[0x1E4FBC860];
  uint64_t v31 = *(void *)(v29 + 16);
  if (v31)
  {
    unint64_t v32 = 0;
    uint64_t v76 = *(void *)(v29 + 16);
    uint64_t v77 = v19;
    while (v32 < *(void *)(v29 + 16))
    {
      unint64_t v33 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v34 = *(void *)(v23 + 72);
      uint64_t v30 = v32 + 1;
      outlined init with copy of ShareCardButton(v29 + v33 + v34 * v32, (uint64_t)v27, (void (*)(void))type metadata accessor for Participant);
      outlined init with copy of ShareCardButton((uint64_t)v27, (uint64_t)v21, (void (*)(void))type metadata accessor for Participant.State);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v37 = (uint64_t)&v21[*(int *)(v36 + 48)];
          outlined consume of Participant.CopresenceInfo?(*(void *)&v21[*(int *)(v36 + 64)], *(void *)&v21[*(int *)(v36 + 64) + 8]);
          outlined destroy of Participant.MediaInfo(v37);
          uint64_t v38 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v21, v38);
          outlined init with take of ShareCardButton((uint64_t)v27, v78, (void (*)(void))type metadata accessor for Participant);
          uint64_t v39 = v79;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v39 + 16) + 1, 1);
            uint64_t v39 = v79;
          }
          unint64_t v41 = *(void *)(v39 + 16);
          unint64_t v40 = *(void *)(v39 + 24);
          if (v41 >= v40 >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
            uint64_t v39 = v79;
          }
          *(void *)(v39 + 16) = v41 + 1;
          outlined init with take of ShareCardButton(v78, v39 + v33 + v41 * v34, (void (*)(void))type metadata accessor for Participant);
          uint64_t v31 = v76;
          break;
        case 6u:
          goto LABEL_6;
        default:
          uint64_t v35 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v21, v35);
LABEL_6:
          _s15ConversationKit11ParticipantVWOhTm_2((uint64_t)v27, (void (*)(void))type metadata accessor for Participant);
          break;
      }
      unint64_t v32 = v30;
      if (v31 == v30)
      {
        uint64_t v30 = v79;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  if (one-time initialization token for shared != -1) {
LABEL_29:
  }
    swift_once();
  if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 168))() & 1) != 0 && *(void *)(v30 + 16))
  {
    unsigned __int8 v42 = static Axis.Set.horizontal.getter();
    unsigned __int8 v43 = static Axis.Set.vertical.getter();
    char v44 = Axis.Set.init(rawValue:)();
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v42) {
      char v44 = Axis.Set.init(rawValue:)();
    }
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v43) {
      char v44 = Axis.Set.init(rawValue:)();
    }
    uint64_t v45 = (uint64_t)v61;
    *uint64_t v61 = v44;
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_SizeFittingRoot, _ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    closure #1 in ShareCardControlsView.shareScreenButton(tightLayout:)(v71, 0, v45 + *(int *)(v46 + 44));
    uint64_t v47 = v64;
    outlined init with take of Any?(v45, v64, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    uint64_t v48 = v65;
    ShareCardControlsView.askToShareScreenMenu(participants:)(v30, v65);
    swift_release();
    uint64_t v49 = v62;
    outlined init with copy of FeatureEligibility?(v47, v62, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    uint64_t v50 = v63;
    outlined init with copy of FeatureEligibility?(v48, v63, &demangling cache variable for type metadata for ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>);
    uint64_t v51 = v66;
    outlined init with copy of FeatureEligibility?(v49, v66, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>));
    outlined init with copy of FeatureEligibility?(v50, v51 + *(int *)(v52 + 48), &demangling cache variable for type metadata for ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>);
    outlined destroy of SystemUpdateNotice?(v50, &demangling cache variable for type metadata for ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>);
    outlined destroy of SystemUpdateNotice?(v49, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    outlined init with copy of FeatureEligibility?(v51, v75, &demangling cache variable for type metadata for TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>> and conformance ViewThatFits<A>, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of SystemUpdateNotice?(v51, &demangling cache variable for type metadata for TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    outlined destroy of SystemUpdateNotice?(v48, &demangling cache variable for type metadata for ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>);
    uint64_t v53 = v47;
  }
  else
  {
    swift_release();
    unsigned __int8 v54 = static Axis.Set.horizontal.getter();
    unsigned __int8 v55 = static Axis.Set.vertical.getter();
    char v56 = Axis.Set.init(rawValue:)();
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v54) {
      char v56 = Axis.Set.init(rawValue:)();
    }
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v55) {
      char v56 = Axis.Set.init(rawValue:)();
    }
    uint64_t v57 = (uint64_t)v67;
    *char v67 = v56;
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_SizeFittingRoot, _ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    closure #1 in ShareCardControlsView.shareScreenButton(tightLayout:)(v71, v69 & 1, v57 + *(int *)(v58 + 44));
    uint64_t v59 = v68;
    outlined init with take of Any?(v57, v68, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    outlined init with copy of FeatureEligibility?(v59, v75, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>> and conformance ViewThatFits<A>, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    _ConditionalContent<>.init(storage:)();
    uint64_t v53 = v59;
  }
  return outlined destroy of SystemUpdateNotice?(v53, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
}

uint64_t closure #1 in ShareCardControlsView.collaborateButton.getter()
{
  type metadata accessor for ShareCardControlsView(0);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  uint64_t v0 = *(void (**)(uint64_t))(StateObject.wrappedValue.getter() + 56);
  swift_retain();
  uint64_t v1 = swift_release();
  v0(v1);
  return swift_release();
}

uint64_t closure #1 in ShareCardControlsView.endSharePlayButton.getter()
{
  type metadata accessor for ShareCardControlsView(0);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  uint64_t v0 = *(void (**)(uint64_t))(StateObject.wrappedValue.getter() + 72);
  swift_retain();
  uint64_t v1 = swift_release();
  v0(v1);
  return swift_release();
}

uint64_t closure #1 in ShareCardControlsView.buttons.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, Modifi);
  MEMORY[0x1F4188790](v71);
  uint64_t v73 = (uint64_t)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardB);
  MEMORY[0x1F4188790](v64);
  uint64_t v67 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>);
  MEMORY[0x1F4188790](v66);
  uint64_t v65 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardB);
  MEMORY[0x1F4188790](v72);
  uint64_t v68 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ShareCardControlsView(0);
  uint64_t v58 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v59 = v8;
  uint64_t v60 = (uint64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for ShareCardButton(0);
  uint64_t v9 = MEMORY[0x1F4188790](v61);
  uint64_t v63 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v55 - v11;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
  uint64_t v13 = MEMORY[0x1F4188790](v69);
  uint64_t v62 = (uint64_t)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v55 - v15;
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  uint64_t v17 = *(void *)StateObject.wrappedValue.getter();
  char v18 = (*(uint64_t (**)(void))(v17 + 264))();
  swift_release();
  if (v18)
  {
    uint64_t v57 = v16;
    closure #1 in ShareCardControlsView.topShelfButtons(tightLayout:)(a1, 1, (uint64_t)v16);
    uint64_t v19 = StateObject.wrappedValue.getter();
    uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 208))(v19);
    uint64_t v22 = v21;
    swift_release();
    uint64_t v23 = StateObject.wrappedValue.getter();
    uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)v23 + 216))(v23);
    uint64_t v26 = v25;
    swift_release();
    uint64_t v27 = v60;
    outlined init with copy of ShareCardButton(a1, v60, (void (*)(void))type metadata accessor for ShareCardControlsView);
    unint64_t v28 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    uint64_t v29 = swift_allocObject();
    outlined init with take of ShareCardButton(v27, v29 + v28, (void (*)(void))type metadata accessor for ShareCardControlsView);
    *(void *)uint64_t v12 = v20;
    *((void *)v12 + 1) = v22;
    *((void *)v12 + 2) = 0;
    *((void *)v12 + 3) = 0;
    *((void *)v12 + 4) = v24;
    *((void *)v12 + 5) = v26;
    v12[48] = 1;
    *((void *)v12 + 7) = partial apply for closure #1 in ShareCardControlsView.endSharePlayButton.getter;
    *((void *)v12 + 8) = v29;
    uint64_t v30 = (uint64_t *)&v12[*(int *)(v61 + 36)];
    *uint64_t v30 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = (uint64_t)v57;
    uint64_t v32 = v62;
    outlined init with copy of FeatureEligibility?((uint64_t)v57, v62, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    uint64_t v33 = v63;
    outlined init with copy of ShareCardButton((uint64_t)v12, v63, (void (*)(void))type metadata accessor for ShareCardButton);
    uint64_t v34 = v65;
    outlined init with copy of FeatureEligibility?(v32, v65, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton));
    outlined init with copy of ShareCardButton(v33, v34 + *(int *)(v35 + 48), (void (*)(void))type metadata accessor for ShareCardButton);
    _s15ConversationKit11ParticipantVWOhTm_2(v33, (void (*)(void))type metadata accessor for ShareCardButton);
    outlined destroy of SystemUpdateNotice?(v32, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    outlined init with copy of FeatureEligibility?(v34, v67, &demangling cache variable for type metadata for TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>);
  }
  else
  {
    uint64_t v36 = *(void *)StateObject.wrappedValue.getter();
    char v37 = (*(uint64_t (**)(void))(v36 + 312))();
    swift_release();
    if ((v37 & 1) == 0)
    {
      uint64_t v31 = (uint64_t)v16;
      closure #1 in ShareCardControlsView.topShelfButtons(tightLayout:)(a1, 0, (uint64_t)v16);
      outlined init with copy of FeatureEligibility?((uint64_t)v16, v73, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardBut();
      lazy protocol witness table accessor for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>(&lazy protocol witness table cache variable for type Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>> and conformance <A> Group<A>, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>> and conformance <> _ConditionalContent<A, B>);
      _ConditionalContent<>.init(storage:)();
      return outlined destroy of SystemUpdateNotice?(v31, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    }
    closure #1 in ShareCardControlsView.topShelfButtons(tightLayout:)(a1, 1, (uint64_t)v16);
    uint64_t v38 = StateObject.wrappedValue.getter();
    uint64_t v39 = (*(uint64_t (**)(uint64_t))(*(void *)v38 + 192))(v38);
    uint64_t v55 = v40;
    uint64_t v56 = v39;
    swift_release();
    uint64_t v31 = (uint64_t)v16;
    uint64_t v41 = StateObject.wrappedValue.getter();
    uint64_t v42 = (*(uint64_t (**)(uint64_t))(*(void *)v41 + 200))(v41);
    uint64_t v44 = v43;
    swift_release();
    uint64_t v45 = v60;
    outlined init with copy of ShareCardButton(a1, v60, (void (*)(void))type metadata accessor for ShareCardControlsView);
    unint64_t v46 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    uint64_t v47 = swift_allocObject();
    outlined init with take of ShareCardButton(v45, v47 + v46, (void (*)(void))type metadata accessor for ShareCardControlsView);
    uint64_t v48 = v55;
    *(void *)uint64_t v12 = v56;
    *((void *)v12 + 1) = v48;
    *((void *)v12 + 2) = 0;
    *((void *)v12 + 3) = 0;
    *((void *)v12 + 4) = v42;
    *((void *)v12 + 5) = v44;
    v12[48] = 1;
    *((void *)v12 + 7) = partial apply for closure #1 in ShareCardControlsView.collaborateButton.getter;
    *((void *)v12 + 8) = v47;
    uint64_t v49 = (uint64_t *)&v12[*(int *)(v61 + 36)];
    *uint64_t v49 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    swift_storeEnumTagMultiPayload();
    uint64_t v50 = v62;
    outlined init with copy of FeatureEligibility?((uint64_t)v16, v62, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    uint64_t v51 = v63;
    outlined init with copy of ShareCardButton((uint64_t)v12, v63, (void (*)(void))type metadata accessor for ShareCardButton);
    uint64_t v34 = v65;
    outlined init with copy of FeatureEligibility?(v50, v65, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton));
    outlined init with copy of ShareCardButton(v51, v34 + *(int *)(v52 + 48), (void (*)(void))type metadata accessor for ShareCardButton);
    _s15ConversationKit11ParticipantVWOhTm_2(v51, (void (*)(void))type metadata accessor for ShareCardButton);
    outlined destroy of SystemUpdateNotice?(v50, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
    outlined init with copy of FeatureEligibility?(v34, v67, &demangling cache variable for type metadata for TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>);
  }
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>);
  uint64_t v53 = (uint64_t)v68;
  _ConditionalContent<>.init(storage:)();
  outlined destroy of SystemUpdateNotice?(v34, &demangling cache variable for type metadata for TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>);
  outlined init with copy of FeatureEligibility?(v53, v73, &demangling cache variable for type metadata for _ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardB);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type _ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardBut();
  lazy protocol witness table accessor for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>(&lazy protocol witness table cache variable for type Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>> and conformance <A> Group<A>, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>> and conformance <> _ConditionalContent<A, B>);
  _ConditionalContent<>.init(storage:)();
  outlined destroy of SystemUpdateNotice?(v53, &demangling cache variable for type metadata for _ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardB);
  _s15ConversationKit11ParticipantVWOhTm_2((uint64_t)v12, (void (*)(void))type metadata accessor for ShareCardButton);
  return outlined destroy of SystemUpdateNotice?(v31, &demangling cache variable for type metadata for Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>);
}

uint64_t ShareCardControlsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _Environment);
  return closure #1 in ShareCardControlsView.body.getter(v1, a1 + *(int *)(v3 + 44));
}

uint64_t closure #1 in ShareCardControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v59 = type metadata accessor for Font.Leading();
  uint64_t v56 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modif);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v55 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v55 - v11;
  *uint64_t v10 = static Axis.Set.horizontal.getter();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_SizeFittingRoot, TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<);
  closure #1 in closure #1 in ShareCardControlsView.body.getter(a1, (uint64_t)&v10[*(int *)(v13 + 44)]);
  uint64_t v60 = v12;
  outlined init with take of Any?((uint64_t)v10, (uint64_t)v12, &demangling cache variable for type metadata for ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modif);
  type metadata accessor for ShareCardControlsView(0);
  type metadata accessor for ShareCardViewModel(0);
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type ShareCardViewModel and conformance ShareCardViewModel, (void (*)(uint64_t))type metadata accessor for ShareCardViewModel);
  uint64_t v14 = *(void *)StateObject.wrappedValue.getter();
  uint64_t v15 = (*(uint64_t (**)(void))(v14 + 256))();
  uint64_t v17 = v16;
  swift_release();
  if (!v17)
  {
    uint64_t v59 = 0;
    uint64_t v34 = 0;
    uint64_t v49 = 0;
    uint64_t v48 = 0;
    uint64_t v47 = 0;
LABEL_8:
    uint64_t v43 = 0;
    uint64_t v45 = 0;
    uint64_t v56 = 0;
    goto LABEL_9;
  }
  uint64_t v18 = *(void *)StateObject.wrappedValue.getter();
  char v19 = (*(uint64_t (**)(void))(v18 + 312))();
  swift_release();
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v59 = 0;
    uint64_t v34 = 0;
    uint64_t v49 = 0;
    uint64_t v48 = 0;
    uint64_t v47 = 0;
    uint64_t v17 = 0;
    goto LABEL_8;
  }
  uint64_t v61 = v15;
  uint64_t v62 = v17;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v20 = Text.init<A>(_:)();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  static Font.caption.getter();
  uint64_t v25 = v56;
  uint64_t v26 = v59;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v4, *MEMORY[0x1E4F3E0F8], v59);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
  uint64_t v27 = Text.font(_:)();
  uint64_t v29 = v28;
  char v31 = v30;
  swift_release();
  char v32 = v31 & 1;
  outlined consume of Text.Storage(v20, v22, v24);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v59 = Text.foregroundColor(_:)();
  uint64_t v34 = v33;
  char v36 = v35;
  uint64_t v38 = v37;
  swift_release();
  uint64_t v39 = v36 & 1;
  outlined consume of Text.Storage(v27, v29, v32);
  swift_bridgeObjectRelease();
  unsigned __int8 v40 = static Edge.Set.top.getter();
  if (one-time initialization token for collaborateSubtitleBuffer != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v17 = v41;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v56 = v46;
  uint64_t v47 = v40;
  uint64_t v48 = v38;
  uint64_t v49 = v39;
LABEL_9:
  uint64_t v50 = v58;
  outlined init with copy of FeatureEligibility?((uint64_t)v60, v58, &demangling cache variable for type metadata for ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modif);
  uint64_t v51 = v57;
  outlined init with copy of FeatureEligibility?(v50, v57, &demangling cache variable for type metadata for ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modif);
  uint64_t v52 = v51
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modi)
               + 48);
  uint64_t v53 = v59;
  *(void *)uint64_t v52 = v59;
  *(void *)(v52 + 8) = v34;
  *(void *)(v52 + 16) = v49;
  *(void *)(v52 + 24) = v48;
  *(void *)(v52 + 32) = v47;
  *(void *)(v52 + 40) = v17;
  *(void *)(v52 + 48) = v43;
  *(void *)(v52 + 56) = v45;
  *(void *)(v52 + 64) = v56;
  *(unsigned char *)(v52 + 72) = 0;
  outlined copy of Text?(v53, v34, v49, v48);
  outlined destroy of SystemUpdateNotice?((uint64_t)v60, &demangling cache variable for type metadata for ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modif);
  outlined consume of Text?(v53, v34, v49, v48);
  return outlined destroy of SystemUpdateNotice?(v50, &demangling cache variable for type metadata for ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(Modif);
}

uint64_t closure #1 in closure #1 in ShareCardControlsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<B);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButt);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v19 - v14;
  closure #1 in ShareCardControlsView.buttons.getter(a1, (uint64_t)&v19 - v14);
  *(void *)uint64_t v9 = static HorizontalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _Enviro);
  closure #1 in ShareCardControlsView.buttons.getter(a1, (uint64_t)&v9[*(int *)(v16 + 44)]);
  outlined init with copy of FeatureEligibility?((uint64_t)v15, (uint64_t)v13, &demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButt);
  outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)v7, &demangling cache variable for type metadata for VStack<Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<B);
  outlined init with copy of FeatureEligibility?((uint64_t)v13, a2, &demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButt);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardBut);
  outlined init with copy of FeatureEligibility?((uint64_t)v7, a2 + *(int *)(v17 + 48), &demangling cache variable for type metadata for VStack<Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<B);
  outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for VStack<Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<B);
  outlined destroy of SystemUpdateNotice?((uint64_t)v15, &demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButt);
  outlined destroy of SystemUpdateNotice?((uint64_t)v7, &demangling cache variable for type metadata for VStack<Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<B);
  return outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButt);
}

uint64_t type metadata accessor for ShareCardControlsView(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ShareCardControlsView);
}

uint64_t type metadata accessor for ShareCardButton(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ShareCardButton);
}

uint64_t sub_1C3255E34()
{
  type metadata accessor for ShareCardButton(0);
  OUTLINED_FUNCTION_1_6();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v0();
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ShareCardButton.body.getter()
{
  uint64_t v1 = type metadata accessor for ShareCardButton(0);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v1);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
                                            + 56))(v2);
}

void partial apply for closure #2 in ShareCardButton.body.getter(uint64_t a1@<X8>)
{
}

void ShareCardButtonStyle.makeBody(configuration:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_58_5(v4, v5, v6, v7);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_41_13(v9, v44);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_39_15(v11, v45);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_21_1();
  type metadata accessor for PrimitiveButtonStyleConfiguration();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_17_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_60();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_62();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_63();
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>)
      - 8;
  MEMORY[0x1F4188790](v49);
  OUTLINED_FUNCTION_61();
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>)
      - 8;
  MEMORY[0x1F4188790](v50);
  OUTLINED_FUNCTION_54_5(v17, v46);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>)
      - 8;
  MEMORY[0x1F4188790](v51);
  OUTLINED_FUNCTION_40_13(v18, v47);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = OUTLINED_FUNCTION_18_39(v20, v48);
  v22(v21);
  Button<>.init(_:)();
  BorderedProminentButtonStyle.init()();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<PrimitiveButtonStyleConfiguration.Label> and conformance Button<A>, &demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type BorderedProminentButtonStyle and conformance BorderedProminentButtonStyle, MEMORY[0x1E4F3DEB8]);
  OUTLINED_FUNCTION_37_12();
  OUTLINED_FUNCTION_26_2();
  v23();
  OUTLINED_FUNCTION_26_2();
  v24();
  uint64_t v25 = OUTLINED_FUNCTION_34_15();
  v26(v25);
  swift_getKeyPath();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ControlSize>);
  uint64_t v28 = OUTLINED_FUNCTION_31_21(v27);
  v29(v28);
  uint64_t v30 = OUTLINED_FUNCTION_30_20();
  v31(v30);
  OUTLINED_FUNCTION_26_2();
  v32();
  uint64_t v33 = OUTLINED_FUNCTION_42_13();
  v34(v33);
  static Font.body.getter();
  uint64_t v35 = OUTLINED_FUNCTION_33_20();
  v36(v35);
  Font.leading(_:)();
  swift_release();
  OUTLINED_FUNCTION_26_2();
  v37();
  swift_getKeyPath();
  outlined init with copy of FeatureEligibility?(v1, v3, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
  OUTLINED_FUNCTION_55_6();
  swift_getKeyPath();
  uint64_t v38 = OUTLINED_FUNCTION_71_3();
  outlined init with copy of FeatureEligibility?(v38, v39, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>);
  OUTLINED_FUNCTION_32_20();
  id v40 = objc_msgSend(self, sel_labelColor);
  id v41 = objc_msgSend(v40, sel_colorWithAlphaComponent_, 0.8);

  LOBYTE(v40) = MEMORY[0x1C87725F0](v41);
  swift_getKeyPath();
  swift_retain();
  uint64_t v42 = AnyShapeStyle.init<A>(_:)();
  outlined init with copy of FeatureEligibility?(v2, v0, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>);
  swift_release();
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_51_6();
  LOBYTE(v41) = v43;
  outlined consume of Environment<CGFloat>.Content(v42, (char)v40);
  if (v41) {
    static Color.black.getter();
  }
  else {
    static Color.secondary.getter();
  }
  swift_getKeyPath();
  OUTLINED_FUNCTION_76_2();
  OUTLINED_FUNCTION_43_9();
  outlined init with take of Any?((uint64_t)&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_28();
}

void protocol witness for PrimitiveButtonStyle.makeBody(configuration:) in conformance ShareCardButtonStyle()
{
}

uint64_t ShareCardMenuStyle.init()()
{
  return swift_getKeyPath();
}

void ShareCardMenuStyle.makeBody(configuration:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_58_5(v4, v5, v6, v7);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_41_13(v9, v44);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_39_15(v11, v45);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_21_1();
  type metadata accessor for MenuStyleConfiguration();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_17_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<MenuStyleConfiguration.Label, MenuStyleConfiguration.Content>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_60();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_62();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_63();
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>)
      - 8;
  MEMORY[0x1F4188790](v49);
  OUTLINED_FUNCTION_61();
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>)
      - 8;
  MEMORY[0x1F4188790](v50);
  OUTLINED_FUNCTION_54_5(v17, v46);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>)
      - 8;
  MEMORY[0x1F4188790](v51);
  OUTLINED_FUNCTION_40_13(v18, v47);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = OUTLINED_FUNCTION_18_39(v20, v48);
  v22(v21);
  Menu<>.init(_:)();
  BorderedProminentButtonStyle.init()();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<MenuStyleConfiguration.Label, MenuStyleConfiguration.Content> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<MenuStyleConfiguration.Label, MenuStyleConfiguration.Content>);
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type BorderedProminentButtonStyle and conformance BorderedProminentButtonStyle, MEMORY[0x1E4F3DEB8]);
  OUTLINED_FUNCTION_37_12();
  OUTLINED_FUNCTION_26_2();
  v23();
  OUTLINED_FUNCTION_26_2();
  v24();
  uint64_t v25 = OUTLINED_FUNCTION_34_15();
  v26(v25);
  swift_getKeyPath();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ControlSize>);
  uint64_t v28 = OUTLINED_FUNCTION_31_21(v27);
  v29(v28);
  uint64_t v30 = OUTLINED_FUNCTION_30_20();
  v31(v30);
  OUTLINED_FUNCTION_26_2();
  v32();
  uint64_t v33 = OUTLINED_FUNCTION_42_13();
  v34(v33);
  static Font.body.getter();
  uint64_t v35 = OUTLINED_FUNCTION_33_20();
  v36(v35);
  Font.leading(_:)();
  swift_release();
  OUTLINED_FUNCTION_26_2();
  v37();
  swift_getKeyPath();
  outlined init with copy of FeatureEligibility?(v1, v3, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
  OUTLINED_FUNCTION_55_6();
  swift_getKeyPath();
  uint64_t v38 = OUTLINED_FUNCTION_71_3();
  outlined init with copy of FeatureEligibility?(v38, v39, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>);
  OUTLINED_FUNCTION_32_20();
  id v40 = objc_msgSend(self, sel_labelColor);
  id v41 = objc_msgSend(v40, sel_colorWithAlphaComponent_, 0.8);

  LOBYTE(v40) = MEMORY[0x1C87725F0](v41);
  swift_getKeyPath();
  swift_retain();
  uint64_t v42 = AnyShapeStyle.init<A>(_:)();
  outlined init with copy of FeatureEligibility?(v2, v0, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>);
  swift_release();
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_51_6();
  LOBYTE(v41) = v43;
  outlined consume of Environment<CGFloat>.Content(v42, (char)v40);
  if (v41) {
    static Color.black.getter();
  }
  else {
    static Color.secondary.getter();
  }
  swift_getKeyPath();
  OUTLINED_FUNCTION_76_2();
  OUTLINED_FUNCTION_43_9();
  outlined init with take of Any?((uint64_t)&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_28();
}

void protocol witness for MenuStyle.makeBody(configuration:) in conformance ShareCardMenuStyle()
{
}

void SplitHStack.SizeInfo.maxSize.setter(double a1, double a2)
{
  *uint64_t v2 = a1;
  v2[1] = a2;
}

uint64_t (*SplitHStack.SizeInfo.maxSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SplitHStack.SizeInfo.spacing.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SplitHStack.SizeInfo.spacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SplitHStack.SizeInfo.totalSpacing.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0.0;
  }
  uint64_t v2 = (double *)(a1 + 32);
  double result = 0.0;
  do
  {
    double v4 = *v2++;
    double result = result + v4;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t SplitHStack.SizeInfo.init(subviews:proposal:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v10 = specialized RandomAccessCollection<>.indices.getter();
  v20[2] = a1;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSnySiG_12CoreGraphics7CGFloatVs5NeverOTg5((void (*)(void))partial apply for closure #1 in SplitHStack.SizeInfo.spacing(subviews:), (uint64_t)v20, v10, v11);
  uint64_t v13 = v12;
  double v14 = 10.0;
  if (a3) {
    double v15 = 10.0;
  }
  else {
    double v15 = *(double *)&a2;
  }
  double v16 = SplitHStack.SizeInfo.totalSpacing.getter(v12);
  if ((a5 & 1) == 0) {
    double v14 = *(double *)&a4;
  }
  double v17 = v15 - v16;
  swift_bridgeObjectRetain();
  SplitHStack.SizeInfo.maxSize(subviews:proposal:)(a1, v17, v14);
  swift_bridgeObjectRelease();
  type metadata accessor for LayoutSubviews();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v18();
  return v13;
}

uint64_t SplitHStack.SizeInfo.maxSize(subviews:proposal:)(uint64_t a1, double a2, double a3)
{
  uint64_t v27 = type metadata accessor for LayoutSubview();
  uint64_t v6 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v28 = a2;
  double v29 = a3;
  uint64_t v30 = a1;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF7SwiftUI14LayoutSubviewsV_12CoreGraphics7CGFloatVs5NeverOTg5();
  uint64_t v10 = specialized Sequence<>.max()(v9);
  int v12 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for LayoutSubviews();
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel((unint64_t *)&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, MEMORY[0x1E4F3C980]);
  uint64_t v13 = dispatch thunk of Collection.count.getter();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (!v13)
  {
LABEL_9:
    specialized Sequence<>.max()(v14);
    return swift_bridgeObjectRelease();
  }
  uint64_t v15 = v13;
  uint64_t v33 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if ((v15 & 0x8000000000000000) == 0)
  {
    v24[1] = v12;
    uint64_t v25 = v10;
    uint64_t v26 = a1;
    do
    {
      double v17 = (void (*)(unsigned char *, void))dispatch thunk of Collection.subscript.read();
      uint64_t v18 = v27;
      (*(void (**)(char *))(v6 + 16))(v8);
      v17(v32, 0);
      static ProposedViewSize.unspecified.getter();
      v32[0] = v19 & 1;
      char v31 = v20 & 1;
      LayoutSubview.sizeThatFits(_:)();
      uint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
      uint64_t v14 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v14 = v33;
      }
      unint64_t v23 = *(void *)(v14 + 16);
      if (v23 >= *(void *)(v14 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v14 = v33;
      }
      *(void *)(v14 + 16) = v23 + 1;
      *(void *)(v14 + 8 * v23 + 32) = v22;
      dispatch thunk of Collection.formIndex(after:)();
      --v15;
    }
    while (v15);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t closure #1 in SplitHStack.SizeInfo.maxSize(subviews:proposal:)@<X0>(void *a1@<X8>)
{
  type metadata accessor for LayoutSubviews();
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel((unint64_t *)&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, MEMORY[0x1E4F3C980]);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  dispatch thunk of Collection.distance(from:to:)();
  uint64_t result = LayoutSubview.sizeThatFits(_:)();
  *a1 = v3;
  return result;
}

uint64_t specialized RandomAccessCollection<>.indices.getter()
{
  type metadata accessor for LayoutSubviews();
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel((unint64_t *)&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, MEMORY[0x1E4F3C980]);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t result = v2;
  if (v1 < v2) {
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in SplitHStack.SizeInfo.spacing(subviews:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  double v28 = a2;
  uint64_t v3 = type metadata accessor for ViewSpacing();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v25 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v24 = type metadata accessor for LayoutSubview();
  uint64_t v8 = *(void *)(v24 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v24);
  int v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = *a1;
  type metadata accessor for LayoutSubviews();
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel((unint64_t *)&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, MEMORY[0x1E4F3C980]);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t result = dispatch thunk of Collection.distance(from:to:)();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = 0;
    if (v14 < result - 1)
    {
      LayoutSubviews.subscript.getter();
      LayoutSubview.spacing.getter();
      double v17 = *(void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v18 = v13;
      uint64_t v19 = v24;
      v17(v18, v24);
      LayoutSubviews.subscript.getter();
      char v20 = v25;
      LayoutSubview.spacing.getter();
      v17(v11, v19);
      ViewSpacing.distance(to:along:)();
      uint64_t v16 = v21;
      uint64_t v22 = v27;
      unint64_t v23 = *(void (**)(char *, uint64_t))(v26 + 8);
      v23(v20, v27);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v23)(v7, v22);
    }
    *double v28 = v16;
  }
  return result;
}

double SplitHStack.sizeThatFits(proposal:subviews:cache:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for LayoutSubviews();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v13, a5, v10);
  v19[8] = a2 & 1;
  v19[0] = a4 & 1;
  SplitHStack.SizeInfo.init(subviews:proposal:)((uint64_t)v13, a1, a2 & 1, a3, a4 & 1);
  double v16 = v15;
  lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel((unint64_t *)&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, MEMORY[0x1E4F3C980]);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v17 = dispatch thunk of Collection.distance(from:to:)();
  swift_bridgeObjectRelease();
  return v16 * (double)v17;
}

uint64_t SplitHStack.placeSubviews(in:proposal:subviews:cache:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  type metadata accessor for LayoutSubviews();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_64();
  (*(void (**)(uint64_t, uint64_t))(v20 + 16))(v9, a5);
  char v46 = a4 & 1;
  uint64_t v21 = SplitHStack.SizeInfo.init(subviews:proposal:)(v9, a1, a2 & 1, a3, a4 & 1);
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v26 = v21;
  double v45 = a6;
  uint64_t v27 = specialized RandomAccessCollection<>.indices.getter();
  uint64_t v31 = a5;
  char v32 = &v45;
  double v33 = a6;
  double v34 = a7;
  double v35 = a8;
  double v36 = a9;
  uint64_t v37 = v23;
  char v38 = 0;
  uint64_t v39 = v25;
  char v40 = 0;
  uint64_t v41 = v23;
  uint64_t v42 = v23;
  uint64_t v43 = v25;
  uint64_t v44 = v26;
  specialized Sequence.forEach(_:)((uint64_t)partial apply for closure #1 in SplitHStack.placeSubviews(in:proposal:subviews:cache:), (uint64_t)v30, v27, v28);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in SplitHStack.placeSubviews(in:proposal:subviews:cache:)(unint64_t *a1, double a2, double a3, double a4, double a5, double a6, uint64_t a7, double *a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13)
{
  v26[2] = a9;
  v26[3] = a11;
  uint64_t v19 = type metadata accessor for LayoutSubview();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = *a1;
  LayoutSubviews.subscript.getter();
  static UnitPoint.topLeading.getter();
  char v28 = a10 & 1;
  char v27 = a12 & 1;
  uint64_t result = LayoutSubview.place(at:anchor:proposal:)();
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v23 < *(void *)(a13 + 16))
  {
    double v25 = *(double *)(a13 + 8 * v23 + 32);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    *a8 = v25 + a6 + *a8;
    return result;
  }
  __break(1u);
  return result;
}

double protocol witness for Layout.sizeThatFits(proposal:subviews:cache:) in conformance SplitHStack(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return SplitHStack.sizeThatFits(proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t protocol witness for Layout.placeSubviews(in:proposal:subviews:cache:) in conformance SplitHStack(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  return SplitHStack.placeSubviews(in:proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9);
}

unint64_t lazy protocol witness table accessor for type ShareCardButtonStyle and conformance ShareCardButtonStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type ShareCardButtonStyle and conformance ShareCardButtonStyle;
  if (!lazy protocol witness table cache variable for type ShareCardButtonStyle and conformance ShareCardButtonStyle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareCardButtonStyle and conformance ShareCardButtonStyle);
  }
  return result;
}

uint64_t type metadata accessor for ShareCardMenuButton(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ShareCardMenuButton);
}

uint64_t partial apply for closure #3 in ShareCardMenuButton.body.getter()
{
  return closure #3 in ShareCardMenuButton.body.getter(*(void *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShareCardMenuStyle and conformance ShareCardMenuStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type ShareCardMenuStyle and conformance ShareCardMenuStyle;
  if (!lazy protocol witness table cache variable for type ShareCardMenuStyle and conformance ShareCardMenuStyle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareCardMenuStyle and conformance ShareCardMenuStyle);
  }
  return result;
}

uint64_t outlined init with take of ShareCardButton(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_90();
  v5(v4);
  return a2;
}

uint64_t outlined init with copy of ShareCardButton(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_89_0();
  v5(v4);
  return a2;
}

void partial apply for closure #2 in ShareCardMenuButton.body.getter(uint64_t a1@<X8>)
{
}

uint64_t key path getter for EnvironmentValues.controlSize : EnvironmentValues, serialized()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t key path setter for EnvironmentValues.controlSize : EnvironmentValues, serialized()
{
  type metadata accessor for ControlSize();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_16_0();
  uint64_t v2 = OUTLINED_FUNCTION_30_15();
  v3(v2);
  return MEMORY[0x1C8771340](v0);
}

uint64_t partial apply for closure #1 in static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(uint64_t a1)
{
  return closure #1 in static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(a1, *(void **)(v1 + 16));
}

uint64_t _s15ConversationKit11ParticipantVWOhTm_2(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

uint64_t sub_1C3257D50()
{
  OUTLINED_FUNCTION_5_9();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 264))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C3257D9C()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t sub_1C3257DE8()
{
  OUTLINED_FUNCTION_5_9();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 312))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C3257E34()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t sub_1C3257E80()
{
  OUTLINED_FUNCTION_5_9();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 368))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C3257ECC()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t sub_1C3257F18@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 424))();
  *a1 = result;
  return result;
}

uint64_t sub_1C3257F68()
{
  OUTLINED_FUNCTION_5_9();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 472))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C3257FB4()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t sub_1C3258000()
{
  OUTLINED_FUNCTION_5_9();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 520))();
  return OUTLINED_FUNCTION_36_3(v1);
}

uint64_t sub_1C325804C()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 528))();
}

uint64_t partial apply for specialized closure #1 in static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(uint64_t a1)
{
  return specialized closure #1 in static NSNotificationCenter.Publisher.publisher<A>(name:updateFetcher:)(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
}

uint64_t type metadata accessor for ShareCardViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ShareCardViewModel);
}

uint64_t lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3258110()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t key path getter for EnvironmentValues.tint : EnvironmentValues, serialized@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C3258174@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for EnvironmentValues.tint : EnvironmentValues, serialized()
{
  return EnvironmentValues.tint.setter();
}

uint64_t partial apply for closure #1 in SplitHStack.SizeInfo.spacing(subviews:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return closure #1 in SplitHStack.SizeInfo.spacing(subviews:)(a1, a2);
}

uint64_t partial apply for closure #1 in SplitHStack.placeSubviews(in:proposal:subviews:cache:)(unint64_t *a1)
{
  return closure #1 in SplitHStack.placeSubviews(in:proposal:subviews:cache:)(a1, *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 96), *(void *)(v1 + 16), *(double **)(v1 + 24), *(void *)(v1 + 64), *(unsigned char *)(v1 + 72), *(void *)(v1 + 80), *(unsigned char *)(v1 + 88), *(void *)(v1 + 120));
}

uint64_t associated type witness table accessor for View.Body : View in ShareCardButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in ShareCardMenuButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in ShareCardControlsView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for PrimitiveButtonStyle.Body : View in ShareCardButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for MenuStyle.Body : View in ShareCardMenuStyle()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type SplitHStack and conformance SplitHStack()
{
  unint64_t result = lazy protocol witness table cache variable for type SplitHStack and conformance SplitHStack;
  if (!lazy protocol witness table cache variable for type SplitHStack and conformance SplitHStack)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SplitHStack and conformance SplitHStack);
  }
  return result;
}

uint64_t sub_1C3258334()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t sub_1C325837C()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t sub_1C32583C4()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 392))();
}

uint64_t sub_1C325840C()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t sub_1C3258454()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 496))();
}

uint64_t sub_1C325849C()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 544))();
}

uint64_t initializeBufferWithCopyOfBuffer for ShareCardButton(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v8 = a2[8];
    uint64_t v9 = *(int *)(a3 + 36);
    uint64_t v10 = (uint64_t *)((char *)a2 + v9);
    uint64_t v11 = (void *)(a1 + v9);
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
    }
    else
    {
      *uint64_t v11 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ShareCardButton(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for ShareCardButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (void *)(a2 + v8);
  uint64_t v10 = (void *)(a1 + v8);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v9, v11);
  }
  else
  {
    *uint64_t v10 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ShareCardButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    outlined destroy of SystemUpdateNotice?(a1 + v7, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ShareCardButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for ShareCardButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 36);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    outlined destroy of SystemUpdateNotice?(a1 + v9, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareCardButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3258BAC);
}

uint64_t sub_1C3258BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_67_2();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  uint64_t v8 = a1 + *(int *)(a3 + 36);
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ShareCardButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3258C3C);
}

void sub_1C3258C3C()
{
  OUTLINED_FUNCTION_5();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    uint64_t v6 = v1 + *(int *)(v4 + 36);
    __swift_storeEnumTagSinglePayload(v6, v0, v0, v5);
  }
}

void type metadata completion function for ShareCardButton()
{
  type metadata accessor for Environment<DynamicTypeSize>.Content(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, MEMORY[0x1E4F3CB98]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ShareCardMenuButton(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v8 = a2[9];
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    *(void *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ShareCardMenuButton(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for ShareCardMenuButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    void *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ShareCardMenuButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    outlined destroy of SystemUpdateNotice?(a1 + v7, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ShareCardMenuButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for ShareCardMenuButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    outlined destroy of SystemUpdateNotice?(a1 + v9, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareCardMenuButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C32594CC);
}

uint64_t sub_1C32594CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_67_2();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  uint64_t v8 = a1 + *(int *)(a3 + 40);
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ShareCardMenuButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C325955C);
}

void sub_1C325955C()
{
  OUTLINED_FUNCTION_5();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    uint64_t v6 = v1 + *(int *)(v4 + 40);
    __swift_storeEnumTagSinglePayload(v6, v0, v0, v5);
  }
}

void type metadata completion function for ShareCardMenuButton()
{
  type metadata accessor for Environment<DynamicTypeSize>.Content(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, MEMORY[0x1E4F3CB98]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t dispatch thunk of ShareCardViewModelProviding.shouldShowEndActivity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ShareCardViewModelProviding.shouldShowCollaboration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ShareCardViewModelProviding.screenSharingAvailablePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ShareCardViewModelProviding.remoteParticipants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ShareCardViewModelProviding.conversationIsAVLess.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t ObjC metadata update function for ShareCardViewModel()
{
  return type metadata accessor for ShareCardViewModel(0);
}

void type metadata completion function for ShareCardViewModel()
{
  type metadata accessor for Published<Bool>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<[Participant]>();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for ShareCardViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ShareCardViewModel);
}

uint64_t dispatch thunk of ShareCardViewModel.collaborateButtonTitle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of ShareCardViewModel.collaborateButtonImage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of ShareCardViewModel.endSharePlayButtonTitle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of ShareCardViewModel.endSharePlayButtonImage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ShareCardViewModel.shareScreenButtonTitle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ShareCardViewModel.shareScreenButtonShortTitle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of ShareCardViewModel.shareScreenButtonImage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of ShareCardViewModel.requestScreenShareButtonTitle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of ShareCardViewModel.collaborateSubtitle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of ShareCardViewModel.shouldShowEndActivity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of ShareCardViewModel.shouldShowEndActivity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of ShareCardViewModel.shouldShowEndActivity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of ShareCardViewModel.$shouldShowEndActivity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of ShareCardViewModel.$shouldShowEndActivity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of ShareCardViewModel.$shouldShowEndActivity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of ShareCardViewModel.shouldShowCollaboration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of ShareCardViewModel.shouldShowCollaboration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of ShareCardViewModel.shouldShowCollaboration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of ShareCardViewModel.$shouldShowCollaboration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of ShareCardViewModel.$shouldShowCollaboration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of ShareCardViewModel.$shouldShowCollaboration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of ShareCardViewModel.shareScreenEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of ShareCardViewModel.isAVLess.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of ShareCardViewModel.isAVLess.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of ShareCardViewModel.isAVLess.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of ShareCardViewModel.$isAVLess.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of ShareCardViewModel.$isAVLess.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of ShareCardViewModel.$isAVLess.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of ShareCardViewModel.askToShareScreenEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of ShareCardViewModel.remoteParticipants.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of ShareCardViewModel.remoteParticipants.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of ShareCardViewModel.remoteParticipants.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of ShareCardViewModel.$remoteParticipants.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of ShareCardViewModel.$remoteParticipants.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of ShareCardViewModel.$remoteParticipants.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of ShareCardViewModel.screenSharingAvailable.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of ShareCardViewModel.screenSharingAvailable.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of ShareCardViewModel.screenSharingAvailable.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of ShareCardViewModel.$screenSharingAvailable.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of ShareCardViewModel.$screenSharingAvailable.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of ShareCardViewModel.$screenSharingAvailable.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of ShareCardViewModel.screenCaptured.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of ShareCardViewModel.screenCaptured.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of ShareCardViewModel.screenCaptured.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of ShareCardViewModel.$screenCaptured.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of ShareCardViewModel.$screenCaptured.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of ShareCardViewModel.$screenCaptured.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of ShareCardViewModel.__allocating_init(didTapScreenShareButton:didTapAskToScreenShareButton:didTapCollaborateButton:didTapEndSharePlay:)()
{
  return (*(uint64_t (**)(void))(v0 + 568))();
}

uint64_t dispatch thunk of ShareCardViewModel.configure(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

void type metadata accessor for Published<[Participant]>()
{
  if (!lazy cache variable for type metadata for Published<[Participant]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [Participant]);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<[Participant]>);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ShareCardControlsView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *((void *)v11 + 1);
    char v14 = v11[16];
    outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
    *(void *)uint64_t v10 = v12;
    *((void *)v10 + 1) = v13;
    v10[16] = v14;
  }
  return a1;
}

uint64_t destroy for ShareCardControlsView(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  return outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
}

void *initializeWithCopy for ShareCardControlsView(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  char v12 = v9[16];
  outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  v8[16] = v12;
  return a1;
}

void *assignWithCopy for ShareCardControlsView(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)a1, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  char v12 = v9[16];
  outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  v8[16] = v12;
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return a1;
}

char *initializeWithTake for ShareCardControlsView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  v9[16] = v10[16];
  return a1;
}

char *assignWithTake for ShareCardControlsView(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)a1, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  char v11 = v10[16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  v9[16] = v11;
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareCardControlsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C325A698);
}

uint64_t sub_1C325A698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
    if (v9 > 1) {
      return (v9 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for ShareCardControlsView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C325A73C);
}

void sub_1C325A73C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 16) = -(char)a2;
  }
}

void type metadata completion function for ShareCardControlsView()
{
  type metadata accessor for Environment<DynamicTypeSize>.Content(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DismissAction>.Content, MEMORY[0x1E4F3C820]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for Environment<DynamicTypeSize>.Content(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void type metadata accessor for ShareCardButtonStyle()
{
}

uint64_t initializeBufferWithCopyOfBuffer for ShareCardMenuStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for ShareCardMenuStyle(uint64_t a1)
{
  return outlined consume of Environment<CGFloat>.Content(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for ShareCardButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  outlined consume of Environment<CGFloat>.Content(v5, v6);
  return a1;
}

uint64_t assignWithTake for ShareCardMenuStyle(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  outlined consume of Environment<CGFloat>.Content(v5, v6);
  return a1;
}

void type metadata accessor for ShareCardMenuStyle()
{
}

void type metadata accessor for SplitHStack()
{
}

uint64_t initializeBufferWithCopyOfBuffer for SplitHStack.SizeInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SplitHStack.SizeInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SplitHStack.SizeInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SplitHStack.SizeInfo(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SplitHStack.SizeInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SplitHStack.SizeInfo()
{
}

uint64_t sub_1C325AB30()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, <<opaque return type of View.menuStyle<A>(_:)>>.0> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, <<opaque return type of View.menuStyle<A>(_:)>>.0> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, <<opaque return type of View.menuStyle<A>(_:)>>.0> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, <<opaque return type of View.menuStyle<A>(_:)>>.0>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
    lazy protocol witness table accessor for type ShareCardMenuStyle and conformance ShareCardMenuStyle();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, <<opaque return type of View.menuStyle<A>(_:)>>.0> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t sub_1C325ACB8()
{
  return lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bo, &demangling cache variable for type metadata for VStack<TupleView<(ViewThatFits<TupleView<(_VariadicView.Tree<_LayoutRoot<SplitHStack>, Group<_ConditionalContent<_ConditionalContent<TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>>, ShareCardButton)>, TupleView<(Group<_ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<AnyShapeStyle?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<AnyShapeStyle?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<AnyShapeStyle?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<AnyShapeStyle?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
    type metadata accessor for BorderedProminentButtonStyle();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<PrimitiveButtonStyleConfiguration.Label> and conformance Button<A>, &demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
    lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type BorderedProminentButtonStyle and conformance BorderedProminentButtonStyle, MEMORY[0x1E4F3DEB8]);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ControlSize> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ControlSize>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Menu<MenuStyleConfiguration.Label, MenuStyleConfiguration.Content>);
    type metadata accessor for BorderedProminentButtonStyle();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<MenuStyleConfiguration.Label, MenuStyleConfiguration.Content> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<MenuStyleConfiguration.Label, MenuStyleConfiguration.Content>);
    lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type BorderedProminentButtonStyle and conformance BorderedProminentButtonStyle, MEMORY[0x1E4F3DEB8]);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ControlSize> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ControlSize>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1C325B48C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SplitHStack.SizeInfo.maxSize(subviews:proposal:)@<X0>(void *a1@<X8>)
{
  return closure #1 in SplitHStack.SizeInfo.maxSize(subviews:proposal:)(a1);
}

uint64_t lazy protocol witness table accessor for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>> and conformance ViewThatFits<A>, &demangling cache variable for type metadata for ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<TupleView<(ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>, ModifiedContent<ShareCardMenuButton, _EnvironmentKeyTransformModifier<Bool>>)>, ViewThatFits<_ConditionalContent<ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, TupleView<(ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>, ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>)>>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in ShareCardControlsView.collaborateButton.getter()
{
  return partial apply for closure #1 in ShareCardControlsView.collaborateButton.getter((uint64_t (*)(uint64_t))closure #1 in ShareCardControlsView.collaborateButton.getter);
}

uint64_t objectdestroy_138Tm()
{
  type metadata accessor for ShareCardControlsView(0);
  OUTLINED_FUNCTION_19_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DismissAction();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v0();
  }
  else
  {
    swift_release();
  }
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ShareCardControlsView.endSharePlayButton.getter()
{
  return partial apply for closure #1 in ShareCardControlsView.collaborateButton.getter((uint64_t (*)(uint64_t))closure #1 in ShareCardControlsView.endSharePlayButton.getter);
}

uint64_t partial apply for closure #1 in ShareCardControlsView.collaborateButton.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for ShareCardControlsView(0);
  OUTLINED_FUNCTION_1_1(v2);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a1(v4);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type ShareCardViewModel and conformance ShareCardViewModel(&lazy protocol witness table cache variable for type ShareCardButton and conformance ShareCardButton, (void (*)(uint64_t))type metadata accessor for ShareCardButton);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ShareCardButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:)()
{
  return partial apply for closure #1 in ShareCardControlsView.collaborateButton.getter((uint64_t (*)(uint64_t))closure #1 in button #1 (title:) in ShareCardControlsView.shareScreenButton(tightLayout:));
}

uint64_t sub_1C325B928()
{
  type metadata accessor for ShareCardMenuButton(0);
  OUTLINED_FUNCTION_1_6();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v0();
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #3 in ShareCardMenuButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ShareCardMenuButton(0);
  OUTLINED_FUNCTION_1_1(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return closure #1 in closure #3 in ShareCardMenuButton.body.getter(a1, v7, a2);
}

uint64_t objectdestroy_13Tm()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = *(void *)(type metadata accessor for ShareCardMenuButton(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_19_4();
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v7();
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v1 + v6;
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      (*(void (**)(unint64_t))(v9 + 8))(v1 + v6);
      break;
    case 4u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v17();
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v19 = v8 + *(int *)(v18 + 48);
      swift_bridgeObjectRelease();
      if (*(void *)(v19 + 120) >= 2uLL) {
        __swift_destroy_boxed_opaque_existential_1(v19 + 96);
      }
      if (*(void *)(v19 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v8 + *(int *)(v18 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v10();
  char v11 = (id *)(v8 + v0[7]);
  if (*v11)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v12 = v8 + v0[14];
  uint64_t v13 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  uint64_t v14 = v12 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v14, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v14, v13);
  }
  swift_release();
  OUTLINED_FUNCTION_28();
  return swift_deallocObject();
}

void partial apply for closure #1 in ShareCardMenuButton.body.getter()
{
  uint64_t v1 = type metadata accessor for ShareCardMenuButton(0);
  OUTLINED_FUNCTION_1(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1(v6);
  closure #1 in ShareCardMenuButton.body.getter(v0 + v3, v0 + ((v3 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
}

uint64_t partial apply for closure #2 in closure #1 in closure #3 in ShareCardMenuButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in closure #1 in closure #3 in ShareCardMenuButton.body.getter(a1);
}

uint64_t OUTLINED_FUNCTION_41_13@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for ControlSize();
}

uint64_t OUTLINED_FUNCTION_76_2()
{
  uint64_t v4 = *(void *)(v2 - 144);
  return outlined init with copy of FeatureEligibility?(v1, v4, v0);
}

uint64_t InCallControlsToggleCaptionsCell.ViewModel.isCaptioned.getter(char a1)
{
  return a1 & 1;
}

ConversationKit::InCallControlsToggleCaptionsCell::ViewModel __swiftcall InCallControlsToggleCaptionsCell.ViewModel.init(isCaptioned:)(Swift::Bool isCaptioned)
{
  return (ConversationKit::InCallControlsToggleCaptionsCell::ViewModel)isCaptioned;
}

uint64_t key path getter for InCallControlsToggleCaptionsCell.delegate : InCallControlsToggleCaptionsCell@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x70))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for InCallControlsToggleCaptionsCell.delegate : InCallControlsToggleCaptionsCell(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x78);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t InCallControlsToggleCaptionsCell.delegate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell_delegate;
  swift_beginAccess();
  return MEMORY[0x1C8776240](v1);
}

uint64_t InCallControlsToggleCaptionsCell.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*InCallControlsToggleCaptionsCell.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id InCallControlsToggleCaptionsCell.toggleCaptionsSwitch.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___toggleCaptionsSwitch;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___toggleCaptionsSwitch);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___toggleCaptionsSwitch);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1CD0]), sel_init);
    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_didToggleCaptions, 4096);
    outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD00000000000001CLL, 0x80000001C37A38D0, v4);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t InCallControlsToggleCaptionsCell.accessoryView.getter@<X0>(uint64_t a1@<X8>)
{
  return InCallControlsToggleCaptionsCell.accessoryView.getter(&demangling cache variable for type metadata for UICellAccessory?, &OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___accessoryView, MEMORY[0x1E4FB0E68], (void (*)(uint64_t))closure #1 in InCallControlsToggleCaptionsCell.accessoryView.getter, a1);
}

uint64_t closure #1 in InCallControlsToggleCaptionsCell.accessoryView.getter@<X0>(uint64_t a1@<X8>)
{
  v19[1] = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = InCallControlsToggleCaptionsCell.toggleCaptionsSwitch.getter();
  uint64_t v13 = (uint64_t (**)())&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                   + 48)];
  uint64_t v14 = *MEMORY[0x1E4FB0E18];
  uint64_t v15 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v7, v14, v15);
  unsigned char *v13 = OUTLINED_FUNCTION_17_1;
  v13[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FB0E60], v4);
  uint64_t v16 = type metadata accessor for UICellAccessory.LayoutDimension();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v16);
  id v17 = v12;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t InCallControlsToggleCaptionsCell.cellContentConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return InCallControlsToggleCaptionsCell.accessoryView.getter(&demangling cache variable for type metadata for UIListContentConfiguration?, &OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___cellContentConfiguration, MEMORY[0x1E4FB0F90], (void (*)(uint64_t))closure #1 in InCallControlsToggleCaptionsCell.cellContentConfiguration.getter, a1);
}

uint64_t InCallControlsToggleCaptionsCell.accessoryView.getter@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = &v22[-v15];
  uint64_t v17 = v5 + *a2;
  swift_beginAccess();
  outlined init with copy of LinkShareCoordinatorProtocol?(v17, (uint64_t)v16, a1);
  uint64_t v18 = a3(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18) == 1)
  {
    outlined destroy of Any?((uint64_t)v16, a1);
    a4(v5);
    OUTLINED_FUNCTION_48();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 16))(v14, a5, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v18);
    swift_beginAccess();
    outlined assign with take of UIListContentConfiguration?((uint64_t)v14, v17, a1);
    return swift_endAccess();
  }
  else
  {
    OUTLINED_FUNCTION_48();
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v21 + 32))(a5, v16, v18);
  }
}

uint64_t closure #1 in InCallControlsToggleCaptionsCell.cellContentConfiguration.getter(void *a1)
{
  MEMORY[0x1C8773D30]();
  id v2 = objc_msgSend(self, sel_conversationKit);
  v17._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001C37A38B0;
  v3._countAndFlagsBits = 0xD000000000000016;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v17);

  UIListContentConfiguration.text.setter();
  if (one-time initialization token for tableViewCellTitleLabel != -1) {
    swift_once();
  }
  id v6 = (id)static Colors.InCallControls.tableViewCellTitleLabel;
  uint64_t v7 = (void (*)(unsigned char *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v7(v16, 0);
  uint64_t v8 = self;
  uint64_t v9 = *MEMORY[0x1E4FB28C8];
  id v10 = objc_msgSend(v8, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  UIFont.caseSensitive()();

  uint64_t v11 = (void (*)(unsigned char *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v11(v16, 0);
  objc_msgSend(a1, sel_effectiveUserInterfaceLayoutDirection);
  uint64_t v12 = (void (*)(unsigned char *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.adjustsFontForContentSizeCategory.setter();
  v12(v16, 0);
  id v13 = objc_msgSend(v8, sel_preferredFontForTextStyle_, v9);
  Class isa = UIFont.caseSensitive()().super.isa;

  InCallControlsToggleCaptionsCell.verticalInset(_:scaledToFont:)(isa, 18.5);
  return UIListContentConfiguration.directionalLayoutMargins.setter();
}

id InCallControlsToggleCaptionsCell.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

id InCallControlsToggleCaptionsCell.init(frame:)()
{
  OUTLINED_FUNCTION_7();
  *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v0
            + OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___toggleCaptionsSwitch) = 0;
  uint64_t v1 = type metadata accessor for UICellAccessory();
  OUTLINED_FUNCTION_0_53(v1);
  uint64_t v2 = type metadata accessor for UIListContentConfiguration();
  OUTLINED_FUNCTION_0_53(v2);
  uint64_t v8 = type metadata accessor for InCallControlsToggleCaptionsCell();
  double v3 = OUTLINED_FUNCTION_6_2();
  id v6 = objc_msgSendSuper2(v4, v5, v3, v0, v8);
  InCallControlsToggleCaptionsCell.configureContent()();

  return v6;
}

uint64_t type metadata accessor for InCallControlsToggleCaptionsCell()
{
  uint64_t result = type metadata singleton initialization cache for InCallControlsToggleCaptionsCell;
  if (!type metadata singleton initialization cache for InCallControlsToggleCaptionsCell) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id InCallControlsToggleCaptionsCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsToggleCaptionsCell.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit32InCallControlsToggleCaptionsCell____lazy_storage___toggleCaptionsSwitch] = 0;
  uint64_t v1 = type metadata accessor for UICellAccessory();
  OUTLINED_FUNCTION_0_53(v1);
  uint64_t v2 = type metadata accessor for UIListContentConfiguration();
  OUTLINED_FUNCTION_0_53(v2);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t InCallControlsToggleCaptionsCell.configureContent()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.listGroupedCell()();
  id v4 = objc_msgSend(self, sel_whiteColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  type metadata accessor for UIVibrancyEffect();
  static UIVibrancyEffect.inCallControlsEffect.getter();
  UIBackgroundConfiguration.visualEffect.setter();
  uint64_t v5 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v5);
  MEMORY[0x1C8773CE0](v3);
  objc_msgSend(v0, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  v12[3] = type metadata accessor for UIListContentConfiguration();
  v12[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  InCallControlsToggleCaptionsCell.cellContentConfiguration.getter((uint64_t)boxed_opaque_existential_1);
  MEMORY[0x1C8773CD0](v12);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
  uint64_t v7 = *(void *)(type metadata accessor for UICellAccessory() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C3769620;
  InCallControlsToggleCaptionsCell.accessoryView.getter(v9 + v8);
  return UICollectionViewListCell.accessories.setter();
}

Swift::Void __swiftcall InCallControlsToggleCaptionsCell.configure(with:)(ConversationKit::InCallControlsToggleCaptionsCell::ViewModel with)
{
  id v2 = InCallControlsToggleCaptionsCell.toggleCaptionsSwitch.getter();
  objc_msgSend(v2, sel_setOn_animated_, with.isCaptioned, 0);
}

double InCallControlsToggleCaptionsCell.verticalInset(_:scaledToFont:)(void *a1, double a2)
{
  id v3 = objc_msgSend(a1, sel_fontDescriptor);
  id v4 = objc_msgSend(v3, sel_objectForKey_, *MEMORY[0x1E4FB0948]);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  outlined init with take of Any?((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    type metadata accessor for UIFontTextStyle(0);
    if (swift_dynamicCast())
    {
      id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, v8);
      objc_msgSend(v5, sel_scaledValueForValue_, a2);
      a2 = v6;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)v10, &demangling cache variable for type metadata for Any?);
  }
  return a2;
}

Swift::Void __swiftcall InCallControlsToggleCaptionsCell.didToggleCaptions()()
{
  if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))())
  {
    uint64_t v2 = v1;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v2 + 8))(v0, ObjectType, v2);
    swift_unknownObjectRelease();
  }
}

id InCallControlsToggleCaptionsCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsToggleCaptionsCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of InCallControlsToggleCaptionsCellDelegate.inCallControlsDidToggleCaptionsCell(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t ObjC metadata update function for InCallControlsToggleCaptionsCell()
{
  return type metadata accessor for InCallControlsToggleCaptionsCell();
}

void type metadata completion function for InCallControlsToggleCaptionsCell()
{
  type metadata accessor for UICellAccessory?(319, &lazy cache variable for type metadata for UICellAccessory?, MEMORY[0x1E4FB0E68]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UICellAccessory?(319, (unint64_t *)&lazy cache variable for type metadata for UIListContentConfiguration?, MEMORY[0x1E4FB0F90]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for InCallControlsToggleCaptionsCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InCallControlsToggleCaptionsCell);
}

uint64_t dispatch thunk of InCallControlsToggleCaptionsCell.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InCallControlsToggleCaptionsCell.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of InCallControlsToggleCaptionsCell.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of InCallControlsToggleCaptionsCell.configure(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of InCallControlsToggleCaptionsCell.didToggleCaptions()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

unsigned char *storeEnumTagSinglePayload for InCallControlsToggleCaptionsCell.ViewModel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C325D430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsToggleCaptionsCell.ViewModel()
{
  return &type metadata for InCallControlsToggleCaptionsCell.ViewModel;
}

uint64_t CollaborationInitiationManager.__allocating_init(conversationManager:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)()
{
  OUTLINED_FUNCTION_17_2();
  v1[20] = v2;
  v1[21] = v0;
  v1[18] = v3;
  v1[19] = v4;
  v1[16] = v5;
  v1[17] = v6;
  v1[15] = v7;
  v1[22] = type metadata accessor for MainActor();
  v1[23] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[24] = v9;
  v1[25] = v8;
  return MEMORY[0x1F4188298](CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:), v9, v8);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  Class isa;
  uint64_t v4;
  uint64_t v6;

  unint64_t v1 = v0[16];
  uint64_t v2 = *(void **)(v0[21] + 16);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  v0[26] = isa;
  v0[2] = v0;
  v0[7] = v0 + 31;
  v0[3] = CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:);
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned Bool, @unowned NSError?) -> () with result type Bool;
  v0[13] = &block_descriptor_1;
  v0[14] = v4;
  objc_msgSend(v2, sel_getNeedsDisclosureOfCollaborationInitiator_forConversationUUID_completionHandler_, v1, isa, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v9;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_13_1();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  uint64_t v4 = v3[6];
  *(void *)(v1 + 216) = v4;
  uint64_t v5 = v3[25];
  uint64_t v6 = v3[24];
  if (v4) {
    uint64_t v7 = CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:);
  }
  else {
    uint64_t v7 = CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:);
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  long long v10;
  long long v11;
  uint64_t v12;

  unint64_t v1 = *(unsigned __int8 *)(v0 + 248);

  if (v1 == 1)
  {
    uint64_t v2 = *(void *)(v0 + 144);
    id v10 = *(_OWORD *)(v0 + 128);
    uint64_t v11 = *(_OWORD *)(v0 + 152);
    uint64_t v3 = static MainActor.shared.getter();
    *(void *)(v0 + 224) = v3;
    uint64_t v4 = swift_task_alloc();
    *(void *)(v0 + 232) = v4;
    *(_OWORD *)(v4 + 16) = v11;
    *(_OWORD *)(v4 + 32) = v10;
    *(void *)(v4 + 48) = v2;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v5;
    *uint64_t v5 = v0;
    v5[1] = CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:);
    uint64_t v6 = MEMORY[0x1E4FBCFD8];
    uint64_t v7 = MEMORY[0x1E4FBB390];
    return MEMORY[0x1F41880D8](v0 + 249, v3, v6, 0xD000000000000061, 0x80000001C37A38F0, partial apply for closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:), v4, v7);
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_4_21();
    return v8(1);
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_28_0();
  unint64_t v1 = *v0;
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v1 + 200);
  uint64_t v5 = *(void *)(v1 + 192);
  return MEMORY[0x1F4188298](CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:), v5, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  unint64_t v1 = *(unsigned __int8 *)(v0 + 249);
  if (v1 == 1) {
    CollaborationInitiationManager.addDisclosedInitiator(_:toConversationUUID:)(*(void *)(v0 + 128));
  }
  OUTLINED_FUNCTION_4_21();
  return v2(v1);
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_28_0();
  unint64_t v1 = *(void **)(v0 + 208);
  swift_release();
  swift_willThrow();

  OUTLINED_FUNCTION_4_21();
  return v2(0);
}

id CollaborationInitiationManager.conversationManager.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t CollaborationInitiationManager.init(conversationManager:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:itemProvider:itemTitle:alertHostWindow:viewController:)()
{
  OUTLINED_FUNCTION_17_2();
  v1[6] = v2;
  v1[7] = v0;
  v1[4] = v3;
  v1[5] = v4;
  v1[2] = v5;
  v1[3] = v6;
  v1[8] = type metadata accessor for MainActor();
  v1[9] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  v1[10] = v7;
  *uint64_t v7 = v1;
  v7[1] = CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:itemProvider:itemTitle:alertHostWindow:viewController:);
  return NSItemProvider.collaborationInitiator.getter();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;

  OUTLINED_FUNCTION_28_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_5();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v8 = v7;
  v5[11] = v3;
  v5[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v10 = dispatch thunk of Actor.unownedExecutor.getter();
    return MEMORY[0x1F4188298](CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:itemProvider:itemTitle:alertHostWindow:viewController:), v10, v9);
  }
  else
  {
    uint64_t v11 = (void *)swift_task_alloc();
    v5[13] = v11;
    *uint64_t v11 = v7;
    v11[1] = CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:itemProvider:itemTitle:alertHostWindow:viewController:);
    return CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t v15;

  OUTLINED_FUNCTION_28_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_5();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v8 = v7;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v11 = v10;
    uint64_t v12 = CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:itemProvider:itemTitle:alertHostWindow:viewController:);
  }
  else
  {

    *(unsigned char *)(v5 + 120) = v3 & 1;
    uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v11 = v13;
    uint64_t v12 = CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:itemProvider:itemTitle:alertHostWindow:viewController:);
  }
  return MEMORY[0x1F4188298](v12, v9, v11);
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  OUTLINED_FUNCTION_4_21();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 120);
  return v1(v2);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_17_2();

  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned Bool, @unowned NSError?) -> () with result type Bool(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    id v4 = a3;
    return specialized _resumeUnsafeThrowingContinuationWithError<A>(_:_:)(v3, v4);
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 32);
    return specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(v6, a2);
  }
}

uint64_t closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = a5;
  uint64_t v17 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Never>);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  type metadata accessor for PlatformAlert();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  static PlatformAlert.confirmStartCollaboration(in:from:initiator:itemTitle:_:)(a2, a3, a4, v16, v17, (void (*)(void))partial apply for closure #1 in closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:), v14);
  return swift_release();
}

uint64_t partial apply for closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)(uint64_t a1)
{
  return closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t closure #1 in closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)()
{
  return CheckedContinuation.resume(returning:)();
}

void CollaborationInitiationManager.addDisclosedInitiator(_:toConversationUUID:)(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, sel_addDisclosedCollaborationInitiator_toConversationUUID_, a1, isa);
}

uint64_t CollaborationInitiationManager.deinit()
{
  return v0;
}

uint64_t CollaborationInitiationManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CollaborationInitiationManager()
{
  return self;
}

uint64_t method lookup function for CollaborationInitiationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CollaborationInitiationManager);
}

uint64_t dispatch thunk of CollaborationInitiationManager.__allocating_init(conversationManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1C325E318()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Never>);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Never>);
  return closure #1 in closure #1 in CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)();
}

ConversationKit::ImageNames::Drawer_optional __swiftcall ImageNames.Drawer.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ImageNames.Drawer.init(rawValue:), v3);
  OUTLINED_FUNCTION_11();
  if (v1 >= 8) {
    return (ConversationKit::ImageNames::Drawer_optional)8;
  }
  else {
    return (ConversationKit::ImageNames::Drawer_optional)v1;
  }
}

void ImageNames.Drawer.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 2:
      OUTLINED_FUNCTION_47();
      break;
    case 4:
      OUTLINED_FUNCTION_0_33(22);
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ImageNames.Drawer()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ImageNames.Drawer()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ImageNames.Drawer()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ImageNames.Drawer(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::ImageNames::Drawer_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.Drawer@<W0>(Swift::String *a1@<X0>, ConversationKit::ImageNames::Drawer_optional *a2@<X8>)
{
  result.value = ImageNames.Drawer.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.Drawer()
{
  char v1 = OUTLINED_FUNCTION_5_81();
  ImageNames.Drawer.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

void protocol witness for ImageName.rawValue.getter in conformance ImageNames.Drawer()
{
  ImageNames.Drawer.rawValue.getter(*v0);
}

ConversationKit::ImageNames::Staging_optional __swiftcall ImageNames.Staging.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ImageNames.Staging.init(rawValue:), v3);
  OUTLINED_FUNCTION_11();
  if (v1 >= 7) {
    return (ConversationKit::ImageNames::Staging_optional)7;
  }
  else {
    return (ConversationKit::ImageNames::Staging_optional)v1;
  }
}

unint64_t ImageNames.Staging.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
    case 4:
      unint64_t result = OUTLINED_FUNCTION_0_33(17);
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = OUTLINED_FUNCTION_0_80();
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ImageNames.Staging(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ImageNames.Staging()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ImageNames.Staging(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ImageNames.Staging(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::ImageNames::Staging_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.Staging@<W0>(Swift::String *a1@<X0>, ConversationKit::ImageNames::Staging_optional *a2@<X8>)
{
  result.value = ImageNames.Staging.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.Staging()
{
  char v1 = OUTLINED_FUNCTION_5_81();
  unint64_t result = ImageNames.Staging.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

unint64_t protocol witness for ImageName.rawValue.getter in conformance ImageNames.Staging()
{
  return ImageNames.Staging.rawValue.getter(*v0);
}

ConversationKit::ImageNames::InCall_optional __swiftcall ImageNames.InCall.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of ImageNames.InCall.init(rawValue:);
  return (ConversationKit::ImageNames::InCall_optional)ImageNames.InCall.init(rawValue:)(rawValue, v1);
}

uint64_t ImageNames.InCall.rawValue.getter(char a1)
{
  uint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000013;
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_0_80();
      break;
    case 4:
      uint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ImageNames.InCall(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ImageNames.InCall()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ImageNames.InCall(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ImageNames.InCall(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::ImageNames::InCall_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.InCall@<W0>(Swift::String *a1@<X0>, ConversationKit::ImageNames::InCall_optional *a2@<X8>)
{
  result.value = ImageNames.InCall.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.InCall()
{
  char v1 = OUTLINED_FUNCTION_5_81();
  uint64_t result = ImageNames.InCall.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t protocol witness for ImageName.rawValue.getter in conformance ImageNames.InCall()
{
  return ImageNames.InCall.rawValue.getter(*v0);
}

ConversationKit::ImageNames::ConversationControls_optional __swiftcall ImageNames.ConversationControls.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of ImageNames.ConversationControls.init(rawValue:);
  return (ConversationKit::ImageNames::ConversationControls_optional)ImageNames.InCall.init(rawValue:)(rawValue, v1);
}

uint64_t ImageNames.InCall.init(rawValue:)(Swift::String a1, Swift::OpaquePointer a2)
{
  OUTLINED_FUNCTION_6_75(a1, a2);
  OUTLINED_FUNCTION_11();
  if (v2 >= 5) {
    return 5;
  }
  else {
    return v2;
  }
}

void ImageNames.ConversationControls.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
      OUTLINED_FUNCTION_0_33(21);
      break;
    case 3:
      OUTLINED_FUNCTION_47();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ImageNames.ConversationControls(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ImageNames.ConversationControls()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ImageNames.ConversationControls(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ImageNames.ConversationControls(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::ImageNames::ConversationControls_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.ConversationControls@<W0>(Swift::String *a1@<X0>, ConversationKit::ImageNames::ConversationControls_optional *a2@<X8>)
{
  result.value = ImageNames.ConversationControls.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.ConversationControls()
{
  char v1 = OUTLINED_FUNCTION_5_81();
  ImageNames.ConversationControls.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

void protocol witness for ImageName.rawValue.getter in conformance ImageNames.ConversationControls()
{
  ImageNames.ConversationControls.rawValue.getter(*v0);
}

BOOL ImageNames.Roster.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of ImageNames.Roster.init(rawValue:);
  return ImageNames.Roster.init(rawValue:)(a1, v1);
}

unint64_t ImageNames.Roster.rawValue.getter()
{
  return OUTLINED_FUNCTION_0_33(16);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.Roster@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = ImageNames.Roster.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.Roster@<X0>(void *a1@<X8>)
{
  unint64_t result = ImageNames.Roster.rawValue.getter();
  *a1 = 0xD000000000000010;
  a1[1] = v3;
  return result;
}

unint64_t protocol witness for ImageName.rawValue.getter in conformance ImageNames.Roster()
{
  return 0xD000000000000010;
}

ConversationKit::ImageNames::ParticipantView_optional __swiftcall ImageNames.ParticipantView.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ImageNames.ParticipantView.init(rawValue:), v3);
  OUTLINED_FUNCTION_11();
  if (v1 >= 0xB) {
    return (ConversationKit::ImageNames::ParticipantView_optional)11;
  }
  else {
    return (ConversationKit::ImageNames::ParticipantView_optional)v1;
  }
}

void ImageNames.ParticipantView.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 6:
      OUTLINED_FUNCTION_47();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ImageNames.ParticipantView(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ImageNames.ParticipantView()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ImageNames.ParticipantView(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ImageNames.ParticipantView(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::ImageNames::ParticipantView_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.ParticipantView@<W0>(Swift::String *a1@<X0>, ConversationKit::ImageNames::ParticipantView_optional *a2@<X8>)
{
  result.value = ImageNames.ParticipantView.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.ParticipantView()
{
  char v1 = OUTLINED_FUNCTION_5_81();
  ImageNames.ParticipantView.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

void protocol witness for ImageName.rawValue.getter in conformance ImageNames.ParticipantView()
{
  ImageNames.ParticipantView.rawValue.getter(*v0);
}

BOOL ImageNames.CallRecording.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of ImageNames.CallRecording.init(rawValue:);
  return ImageNames.Roster.init(rawValue:)(a1, v1);
}

BOOL ImageNames.Roster.init(rawValue:)(Swift::String a1, Swift::OpaquePointer a2)
{
  OUTLINED_FUNCTION_6_75(a1, a2);
  OUTLINED_FUNCTION_11();
  return v2 != 0;
}

unint64_t ImageNames.CallRecording.rawValue.getter()
{
  return OUTLINED_FUNCTION_0_33(31);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance ImageNames.CallRecording@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = ImageNames.CallRecording.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ImageNames.CallRecording@<X0>(void *a1@<X8>)
{
  unint64_t result = ImageNames.CallRecording.rawValue.getter();
  *a1 = 0xD00000000000001FLL;
  a1[1] = v3;
  return result;
}

unint64_t protocol witness for ImageName.rawValue.getter in conformance ImageNames.CallRecording()
{
  return 0xD00000000000001FLL;
}

unint64_t lazy protocol witness table accessor for type ImageNames.Drawer and conformance ImageNames.Drawer()
{
  unint64_t result = lazy protocol witness table cache variable for type ImageNames.Drawer and conformance ImageNames.Drawer;
  if (!lazy protocol witness table cache variable for type ImageNames.Drawer and conformance ImageNames.Drawer)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.Drawer and conformance ImageNames.Drawer);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImageNames.Staging and conformance ImageNames.Staging()
{
  unint64_t result = lazy protocol witness table cache variable for type ImageNames.Staging and conformance ImageNames.Staging;
  if (!lazy protocol witness table cache variable for type ImageNames.Staging and conformance ImageNames.Staging)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.Staging and conformance ImageNames.Staging);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImageNames.InCall and conformance ImageNames.InCall()
{
  unint64_t result = lazy protocol witness table cache variable for type ImageNames.InCall and conformance ImageNames.InCall;
  if (!lazy protocol witness table cache variable for type ImageNames.InCall and conformance ImageNames.InCall)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.InCall and conformance ImageNames.InCall);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImageNames.ConversationControls and conformance ImageNames.ConversationControls()
{
  unint64_t result = lazy protocol witness table cache variable for type ImageNames.ConversationControls and conformance ImageNames.ConversationControls;
  if (!lazy protocol witness table cache variable for type ImageNames.ConversationControls and conformance ImageNames.ConversationControls)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.ConversationControls and conformance ImageNames.ConversationControls);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImageNames.Roster and conformance ImageNames.Roster()
{
  unint64_t result = lazy protocol witness table cache variable for type ImageNames.Roster and conformance ImageNames.Roster;
  if (!lazy protocol witness table cache variable for type ImageNames.Roster and conformance ImageNames.Roster)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.Roster and conformance ImageNames.Roster);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImageNames.ParticipantView and conformance ImageNames.ParticipantView()
{
  unint64_t result = lazy protocol witness table cache variable for type ImageNames.ParticipantView and conformance ImageNames.ParticipantView;
  if (!lazy protocol witness table cache variable for type ImageNames.ParticipantView and conformance ImageNames.ParticipantView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.ParticipantView and conformance ImageNames.ParticipantView);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImageNames.CallRecording and conformance ImageNames.CallRecording()
{
  unint64_t result = lazy protocol witness table cache variable for type ImageNames.CallRecording and conformance ImageNames.CallRecording;
  if (!lazy protocol witness table cache variable for type ImageNames.CallRecording and conformance ImageNames.CallRecording)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImageNames.CallRecording and conformance ImageNames.CallRecording);
  }
  return result;
}

uint64_t dispatch thunk of ImageName.rawValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static NamedImageProviding.image(named:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void type metadata accessor for ImageNames()
{
}

uint64_t getEnumTagSinglePayload for ImageNames.Drawer(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ImageNames.Drawer(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C325F1B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for ImageNames.Drawer()
{
}

unsigned char *storeEnumTagSinglePayload for ImageNames.Staging(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C325F2B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for ImageNames.Staging()
{
}

void type metadata accessor for ImageNames.InCall()
{
}

unsigned char *storeEnumTagSinglePayload for ImageNames.InCall(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C325F3C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for ImageNames.ConversationControls()
{
}

void type metadata accessor for ImageNames.Roster()
{
}

uint64_t getEnumTagSinglePayload for ImageNames.ParticipantView(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 10) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v5 = v6 - 11;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ImageNames.ParticipantView(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C325F560);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

void type metadata accessor for ImageNames.ParticipantView()
{
}

unsigned char *storeEnumTagSinglePayload for ImageNames.Roster(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C325F630);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for ImageNames.CallRecording()
{
}

uint64_t key path getter for EffectsControlsViewController.effectsBrowserViewController : EffectsControlsViewController@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x90))();
  *a2 = result;
  return result;
}

uint64_t key path setter for EffectsControlsViewController.effectsBrowserViewController : EffectsControlsViewController(id *a1, void **a2)
{
  id v2 = *a1;
  int v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x98);
  id v4 = *a1;
  return v3(v2);
}

void EffectsControlsViewController.effectsBrowserViewController.didset(void *a1)
{
  int v3 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserViewController);
  swift_beginAccess();
  id v4 = *v3;
  if (!*v3)
  {
    if (!a1) {
      return;
    }
    goto LABEL_6;
  }
  if (!a1
    || (type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIViewController), id v5 = v4, v6 = a1, v7 = static NSObject.== infix(_:_:)(), v5, v6, (v7 & 1) == 0))
  {
LABEL_6:
    EffectsControlsViewController.removeEmbeddedBrowserViewController(_:)(a1);
    id v8 = *v3;
    id v9 = *v3;
    EffectsControlsViewController.embedBrowserViewController(_:)(v8);
  }
}

void *EffectsControlsViewController.effectsBrowserViewController.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  id v2 = v1;
  return v1;
}

void EffectsControlsViewController.effectsBrowserViewController.setter(void *a1)
{
  OUTLINED_FUNCTION_4_10();
  int v3 = *v1;
  void *v1 = a1;
  id v4 = a1;
  EffectsControlsViewController.effectsBrowserViewController.didset(v3);
}

void (*EffectsControlsViewController.effectsBrowserViewController.modify(void *a1))(uint64_t a1, char a2)
{
  int v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  OUTLINED_FUNCTION_6_44();
  id v4 = *v1;
  v3[3] = *v1;
  id v5 = v4;
  return EffectsControlsViewController.effectsBrowserViewController.modify;
}

void EffectsControlsViewController.effectsBrowserViewController.modify(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  id v4 = (id *)(*(void *)a1 + 24);
  id v3 = *v4;
  if (a2)
  {
    id v5 = v3;
    EffectsControlsViewController.effectsBrowserViewController.setter(v3);
  }
  else
  {
    EffectsControlsViewController.effectsBrowserViewController.setter(*(void **)(*(void *)a1 + 24));
  }
  free(v2);
}

uint64_t key path getter for EffectsControlsViewController.effectsEnabled : EffectsControlsViewController@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xA8))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for EffectsControlsViewController.effectsEnabled : EffectsControlsViewController(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xB0))(*a1);
}

id EffectsControlsViewController.effectsEnabled.didset()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton);
  id v2 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsEnabled);
  swift_beginAccess();
  return objc_msgSend(v1, sel_setSelected_, *v2);
}

uint64_t EffectsControlsViewController.effectsEnabled.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

id EffectsControlsViewController.effectsEnabled.setter(char a1)
{
  OUTLINED_FUNCTION_4_10();
  unsigned char *v1 = a1;
  return EffectsControlsViewController.effectsEnabled.didset();
}

id (*EffectsControlsViewController.effectsEnabled.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return EffectsControlsViewController.effectsEnabled.modify;
}

id EffectsControlsViewController.effectsEnabled.modify(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return EffectsControlsViewController.effectsEnabled.didset();
  }
  return result;
}

void key path getter for EffectsControlsViewController.effectsBrowserHeight : EffectsControlsViewController(void **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xC0))();
}

uint64_t key path setter for EffectsControlsViewController.effectsBrowserHeight : EffectsControlsViewController(double *a1, void **a2)
{
  return (*(uint64_t (**)(double))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xC8))(*a1);
}

void EffectsControlsViewController.effectsBrowserHeight.didset(double a1)
{
  id v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserHeight);
  swift_beginAccess();
  if (*v3 != a1) {
    EffectsControlsViewController.updateViews()();
  }
}

double EffectsControlsViewController.effectsBrowserHeight.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *(double *)v0;
}

void EffectsControlsViewController.effectsBrowserHeight.setter(double a1)
{
  id v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserHeight);
  swift_beginAccess();
  double v4 = *v3;
  *id v3 = a1;
  EffectsControlsViewController.effectsBrowserHeight.didset(v4);
}

void (*EffectsControlsViewController.effectsBrowserHeight.modify(void *a1))(uint64_t a1)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  OUTLINED_FUNCTION_6_44();
  v3[3] = *v1;
  return EffectsControlsViewController.effectsBrowserHeight.modify;
}

void EffectsControlsViewController.effectsBrowserHeight.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  EffectsControlsViewController.effectsBrowserHeight.setter(*(double *)(*(void *)a1 + 24));
  free(v1);
}

uint64_t EffectsControlsViewController.effectsButtonIsVisible.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

void EffectsControlsViewController.effectsButtonIsVisible.setter(char a1)
{
  OUTLINED_FUNCTION_4_10();
  char v3 = *v1;
  char *v1 = a1;
  EffectsControlsViewController.effectsButtonIsVisible.didset(v3);
}

uint64_t key path getter for EffectsControlsViewController.effectsButtonIsVisible : EffectsControlsViewController@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xD8))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for EffectsControlsViewController.effectsButtonIsVisible : EffectsControlsViewController(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xE0))(*a1);
}

void EffectsControlsViewController.effectsButtonIsVisible.didset(char a1)
{
  int v2 = a1 & 1;
  char v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButtonIsVisible);
  swift_beginAccess();
  if (*v3 != v2)
  {
    double v4 = 0.0;
    if (*v3) {
      double v4 = 1.0;
    }
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton), sel_setAlpha_, v4);
    EffectsControlsViewController.updateViews()();
  }
}

void (*EffectsControlsViewController.effectsButtonIsVisible.modify(void *a1))(uint64_t a1)
{
  char v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  OUTLINED_FUNCTION_6_44();
  *((unsigned char *)v3 + 32) = *v1;
  return EffectsControlsViewController.effectsButtonIsVisible.modify;
}

void EffectsControlsViewController.effectsButtonIsVisible.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  EffectsControlsViewController.effectsButtonIsVisible.setter(*(unsigned char *)(*(void *)a1 + 32));
  free(v1);
}

uint64_t EffectsControlsViewController.constraintsToUpdate.setter(uint64_t a1)
{
  char v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_constraintsToUpdate);
  swift_beginAccess();
  *char v3 = a1;
  return swift_bridgeObjectRelease();
}

id EffectsControlsViewController.effectsButton.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton);
}

Swift::Bool __swiftcall EffectsControlsViewController._canShowWhileLocked()()
{
  return 1;
}

char *EffectsControlsViewController.__allocating_init(delegate:)()
{
  id v1 = objc_allocWithZone(v0);
  swift_getObjectType();
  uint64_t v2 = OUTLINED_FUNCTION_8_10();
  return specialized EffectsControlsViewController.init(delegate:)(v2, v3, v4, v5);
}

char *EffectsControlsViewController.init(delegate:)()
{
  swift_getObjectType();
  uint64_t v0 = OUTLINED_FUNCTION_8_10();
  return specialized EffectsControlsViewController.init(delegate:)(v0, v1, v2, v3);
}

id EffectsControlsViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void EffectsControlsViewController.init(coder:)()
{
  id v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserViewController] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsEnabled] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserHeight] = 0x404D000000000000;
  v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButtonIsVisible] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_constraintsToUpdate] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton;
  type metadata accessor for InCallControlButton();
  char v7 = &type metadata for SymbolImageDescribers.LocalParticipantView;
  id v8 = &protocol witness table for SymbolImageDescribers.LocalParticipantView;
  v6[0] = 3;
  *(void *)&v0[v2] = InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(1, (uint64_t)v6, 0, 0, 0, 1, 0, 0, 56.0, 1);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView;
  id v4 = objc_msgSend(self, sel_effectWithStyle_, 8);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v4);

  *(void *)&v1[v3] = v5;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void EffectsControlsViewController.setupViews()()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  id v5 = OUTLINED_FUNCTION_6_10();
  if (!v5)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v6 = v5;
  char v7 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton];
  objc_msgSend(v5, sel_addSubview_, v7);

  id v8 = OUTLINED_FUNCTION_6_10();
  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v9 = v8;
  uint64_t v10 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView;
  objc_msgSend(v8, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView]);

  id v11 = objc_msgSend(*(id *)&v1[v10], sel_layer);
  objc_msgSend(v11, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

  id v12 = objc_msgSend(*(id *)&v1[v10], sel_layer);
  objc_msgSend(v12, sel_setCornerRadius_, 20.0);

  objc_msgSend(*(id *)&v1[v10], sel_setClipsToBounds_, 1);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  UIControl.addAction(for:handler:)(64, (uint64_t)partial apply for closure #1 in EffectsControlsViewController.setupViews(), v13);
  swift_release_n();
  objc_msgSend(*(id *)&v1[v10], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C3771690;
  id v15 = objc_msgSend(v7, sel_widthAnchor);
  Layout.LocalParticipantViewCameraControls.init()((uint64_t)v48);
  double v16 = v49;
  static Platform.current.getter();
  id v17 = objc_msgSend(v15, sel_constraintEqualToConstant_, v16);

  *(void *)(v14 + 32) = v17;
  id v18 = objc_msgSend(v7, sel_heightAnchor);
  Layout.LocalParticipantViewCameraControls.init()((uint64_t)v50);
  double v19 = v51;
  static Platform.current.getter();
  id v20 = objc_msgSend(v18, sel_constraintEqualToConstant_, v19);

  *(void *)(v14 + 40) = v20;
  id v21 = objc_msgSend(v7, sel_leadingAnchor);
  id v22 = OUTLINED_FUNCTION_6_10();
  if (!v22)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v23 = v22;
  id v24 = objc_msgSend(v22, sel_leadingAnchor);

  id v25 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v24);
  *(void *)(v14 + 48) = v25;
  id v26 = objc_msgSend(v7, sel_centerYAnchor);
  id v27 = OUTLINED_FUNCTION_6_10();
  if (!v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v28 = v27;
  id v29 = objc_msgSend(v27, sel_centerYAnchor);

  id v30 = OUTLINED_FUNCTION_6_76();
  *(void *)(v14 + 56) = v30;
  id v31 = objc_msgSend(*(id *)&v1[v10], sel_topAnchor);
  id v32 = OUTLINED_FUNCTION_6_10();
  if (!v32)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double v33 = v32;
  id v34 = objc_msgSend(v32, sel_topAnchor);

  id v35 = OUTLINED_FUNCTION_6_76();
  *(void *)(v14 + 64) = v35;
  id v36 = objc_msgSend(*(id *)&v1[v10], sel_bottomAnchor);
  id v37 = OUTLINED_FUNCTION_6_10();
  if (!v37)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  char v38 = v37;
  id v39 = objc_msgSend(v37, sel_bottomAnchor);

  id v40 = OUTLINED_FUNCTION_6_76();
  *(void *)(v14 + 72) = v40;
  id v41 = objc_msgSend(*(id *)&v1[v10], sel_trailingAnchor);
  id v42 = OUTLINED_FUNCTION_6_10();
  if (!v42)
  {
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v43 = v42;
  uint64_t v44 = self;
  id v45 = objc_msgSend(v43, sel_trailingAnchor);

  id v46 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v45);
  *(void *)(v14 + 80) = v46;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_activateConstraints_, isa);

  EffectsControlsViewController.updateViews()();
}

void closure #1 in EffectsControlsViewController.setupViews()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    id v4 = (void *)v3;
    uint64_t v5 = v3 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate;
    uint64_t v6 = MEMORY[0x1C8776240](v3 + OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate);
    uint64_t v7 = *(void *)(v5 + 8);

    if (v6)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
      swift_unknownObjectRelease();
    }
  }
}

void EffectsControlsViewController.updateViews()()
{
  id v1 = v0;
  uint64_t v2 = self;
  uint64_t v3 = &v0[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_constraintsToUpdate];
  swift_beginAccess();
  char v38 = v3;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, isa);

  EffectsControlsViewController.constraintsToUpdate.setter(MEMORY[0x1E4FBC860]);
  OUTLINED_FUNCTION_7_5();
  uint64_t v6 = (void *)(*(uint64_t (**)(void))(v5 + 144))();
  id v7 = objc_msgSend(v6, sel_view);

  if (v7)
  {
    id v8 = objc_msgSend(v7, sel_centerYAnchor);
    uint64_t v9 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView;
    id v10 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView], sel_contentView);
    id v11 = objc_msgSend(v10, sel_centerYAnchor);

    id v37 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);
    id v12 = objc_msgSend(v7, (SEL)&selRef_shouldShowCallDetailsWhenReady + 2);
    id v13 = objc_msgSend(*(id *)&v1[v9], sel_contentView);
    id v14 = objc_msgSend(v13, (SEL)&selRef_shouldShowCallDetailsWhenReady + 2);

    id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
    id v16 = objc_msgSend(v7, sel_trailingAnchor);
    id v17 = objc_msgSend(*(id *)&v1[v9], sel_contentView);
    id v18 = objc_msgSend(v17, sel_trailingAnchor);

    id v19 = objc_msgSend(v16, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v18);
    OUTLINED_FUNCTION_5_11();
    if (*(void *)v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (__OFADD__(v20, 3))
    {
      __break(1u);
      goto LABEL_13;
    }
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v20 + 3, 1);
    specialized Array._endMutation()();
    id v21 = v37;
    MEMORY[0x1C87733A0]();
    OUTLINED_FUNCTION_3_91();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v22 = v15;
    MEMORY[0x1C87733A0]();
    OUTLINED_FUNCTION_3_91();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v23 = v19;
    MEMORY[0x1C87733A0]();
    OUTLINED_FUNCTION_3_91();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  OUTLINED_FUNCTION_7_5();
  char v25 = (*(uint64_t (**)(void))(v24 + 216))();
  id v26 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView], sel_leadingAnchor);
  if (v25)
  {
    id v27 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton], sel_trailingAnchor);
    id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, 10.0);

    id v29 = v38;
    OUTLINED_FUNCTION_5_11();
    id v30 = v28;
LABEL_10:
    id v35 = v30;
    MEMORY[0x1C87733A0]();
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((*(void *)v29 & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x10));
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

    swift_bridgeObjectRetain();
    Class v36 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_activateConstraints_, v36);

    return;
  }
  id v31 = objc_msgSend(v1, sel_view);
  id v29 = v38;
  if (v31)
  {
    id v32 = v31;
    id v33 = objc_msgSend(v31, sel_leadingAnchor);

    id v34 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v33);
    OUTLINED_FUNCTION_5_11();
    id v30 = v34;
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
}

void EffectsControlsViewController.embedBrowserViewController(_:)(void *a1)
{
  if (a1)
  {
    id v6 = a1;
    id v2 = objc_msgSend(v6, sel_view);
    if (v2)
    {
      uint64_t v3 = v2;
      objc_msgSend(v1, sel_addChildViewController_, v6);
      objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      id v4 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView], sel_contentView);
      objc_msgSend(v4, sel_addSubview_, v3);

      objc_msgSend(v6, sel_didMoveToParentViewController_, v1);
      EffectsControlsViewController.updateViews()();

      uint64_t v5 = v3;
    }
    else
    {
      uint64_t v5 = v6;
    }
  }
}

void EffectsControlsViewController.removeEmbeddedBrowserViewController(_:)(void *a1)
{
  if (a1)
  {
    id v3 = a1;
    objc_msgSend(v3, sel_willMoveToParentViewController_, 0);
    objc_msgSend(v3, sel_removeFromParentViewController);
    if (objc_msgSend(v3, sel_isViewLoaded))
    {
      id v1 = objc_msgSend(v3, sel_view);
      if (!v1)
      {
        __break(1u);
        return;
      }
      id v2 = v1;
      objc_msgSend(v1, sel_removeFromSuperview);
    }
  }
}

id EffectsControlsViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    id v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EffectsControlsViewController.init(nibName:bundle:)()
{
}

id EffectsControlsViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EffectsControlsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *specialized EffectsControlsViewController.init(delegate:)(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserViewController] = 0;
  a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsEnabled] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserHeight] = 0x404D000000000000;
  a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButtonIsVisible] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_constraintsToUpdate] = MEMORY[0x1E4FBC860];
  *(void *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton;
  type metadata accessor for InCallControlButton();
  id v16 = &type metadata for SymbolImageDescribers.LocalParticipantView;
  id v17 = &protocol witness table for SymbolImageDescribers.LocalParticipantView;
  v15[0] = 3;
  id v7 = a2;
  *(void *)&a2[v6] = InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(1, (uint64_t)v15, 0, 0, 0, 1, 0, 0, 56.0, 1);
  uint64_t v8 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView;
  id v9 = objc_msgSend(self, sel_effectWithStyle_, 8);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v9);

  *(void *)&v7[v8] = v10;
  v14.receiver = v7;
  v14.super_class = (Class)type metadata accessor for EffectsControlsViewController();
  id v11 = (char *)objc_msgSendSuper2(&v14, sel_initWithNibName_bundle_, 0, 0);
  *(void *)&v11[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate + 8] = a4;
  swift_unknownObjectWeakAssign();
  id v12 = v11;
  EffectsControlsViewController.setupViews()();

  swift_unknownObjectRelease();
  return v12;
}

uint64_t type metadata accessor for EffectsControlsViewController()
{
  return self;
}

uint64_t dispatch thunk of EffectsControlsViewControllerDelegate.didTapEffectsButton()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for EffectsControlsViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EffectsControlsViewController);
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsBrowserViewController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsBrowserViewController.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsBrowserViewController.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsBrowserHeight.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsBrowserHeight.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsBrowserHeight.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsButtonIsVisible.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsButtonIsVisible.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of EffectsControlsViewController.effectsButtonIsVisible.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of EffectsControlsViewController.__allocating_init(delegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t sub_1C326174C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in EffectsControlsViewController.setupViews()(uint64_t a1)
{
  closure #1 in EffectsControlsViewController.setupViews()(a1, v1);
}

uint64_t SmallMultiwayControllerLayoutFactory.init(containingView:participantListView:conversationBannerControlsAreaLayoutGuide:controlsView:gridView:localParticipantView:effectsControlsView:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:reactionsView:reactionPickerTipView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSLayoutConstraint]);
  lazy protocol witness table accessor for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState();
  uint64_t v18 = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v11 + 104) = a11;
  *(void *)(v11 + 112) = v18;
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = a3;
  *(void *)(v11 + 40) = a4;
  *(void *)(v11 + 48) = a5;
  *(void *)(v11 + 56) = a6;
  *(void *)(v11 + 64) = a7;
  *(void *)(v11 + 72) = a8;
  *(_OWORD *)(v11 + 80) = a9;
  *(void *)(v11 + 96) = a10;
  return v11;
}

char **SmallMultiwayControllerLayoutFactory.layoutConstraints(for:using:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v5 = a1[16];
  uint64_t v6 = a1[17];
  int v7 = a1[18];
  uint64_t v8 = a1[19];
  int v9 = a1[20];
  int v10 = a1[21];
  int v11 = a1[22];
  swift_beginAccess();
  char v54 = v5;
  uint64_t v12 = v5 | (v6 << 8);
  char v57 = v11;
  uint64_t v13 = 0x10000;
  if (!v7) {
    uint64_t v13 = 0;
  }
  char v14 = v8;
  uint64_t v15 = v12 | v13 | (v8 << 24);
  char v16 = v9;
  uint64_t v17 = 0x100000000;
  if (!v9) {
    uint64_t v17 = 0;
  }
  uint64_t v18 = 0x10000000000;
  if (!v10) {
    uint64_t v18 = 0;
  }
  uint64_t v19 = 0x1000000000000;
  if (!v11) {
    uint64_t v19 = 0;
  }
  uint64_t v20 = v15 | v17 | v18 | v19;
  unsigned int v56 = v3;
  uint64_t v55 = v4;
  uint64_t v21 = specialized Dictionary.subscript.getter(v3, v4, v20, *(void *)(v2 + 112));
  char v53 = v10;
  if (v21)
  {
    id v22 = (char **)v21;
    swift_endAccess();
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)static Logger.conversationKit);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v58 = v27;
      *(_DWORD *)uint64_t v26 = 136446466;
      uint64_t v28 = _typeName(_:qualified:)();
      uint64_t v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      LOBYTE(v59) = v3;
      uint64_t v60 = v55;
      char v61 = v54;
      char v62 = v6;
      char v63 = v7;
      char v64 = v14;
      char v65 = v16;
      char v66 = v53;
      char v67 = v57;
      uint64_t v30 = String.init<A>(reflecting:)();
      uint64_t v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v24, v25, "[%{public}s] using cached layout constraints for state: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v27, -1, -1);
      MEMORY[0x1C87760E0](v26, -1, -1);
    }
  }
  else
  {
    swift_endAccess();
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v50 = v20;
    char v51 = v16;
    uint64_t v32 = type metadata accessor for Logger();
    __swift_project_value_buffer(v32, (uint64_t)static Logger.conversationKit);
    id v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v58 = v49;
      *(_DWORD *)uint64_t v35 = 136446466;
      uint64_t v36 = _typeName(_:qualified:)();
      uint64_t v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      LOBYTE(v59) = v3;
      uint64_t v60 = v55;
      char v61 = v54;
      char v38 = v6;
      char v62 = v6;
      char v39 = v7;
      char v63 = v7;
      char v40 = v14;
      char v64 = v14;
      id v41 = v33;
      char v42 = v51;
      char v65 = v51;
      os_log_type_t v43 = v34;
      char v44 = v10;
      char v66 = v10;
      char v67 = v57;
      uint64_t v45 = String.init<A>(reflecting:)();
      uint64_t v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v41, v43, "[%{public}s] making layout constraints for state: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v49, -1, -1);
      MEMORY[0x1C87760E0](v35, -1, -1);
    }
    else
    {

      char v44 = v10;
      char v38 = v6;
      char v40 = v14;
      char v39 = v7;
      char v42 = v51;
    }
    LOBYTE(v59) = v56;
    uint64_t v60 = v55;
    char v61 = v54;
    char v62 = v38;
    char v63 = v39;
    char v64 = v40;
    char v65 = v42;
    char v66 = v44;
    char v67 = v57;
    id v22 = SmallMultiwayControllerLayoutFactory.makeConstraints(for:using:)((unsigned __int8 *)&v59, a2);
    swift_beginAccess();
    uint64_t v47 = swift_bridgeObjectRetain();
    specialized Dictionary._Variant.setValue(_:forKey:)(v47, v56, v55, v50);
    swift_endAccess();
  }
  return v22;
}

char **SmallMultiwayControllerLayoutFactory.makeConstraints(for:using:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = (void *)v2;
  int v254 = *a1;
  unint64_t v252 = *((void *)a1 + 1);
  int v4 = a1[16];
  unsigned int v257 = a1[17];
  uint64_t v5 = (void *)a1[18];
  int v6 = a1[19];
  unsigned __int8 v250 = a1[21];
  int v251 = a1[20];
  unsigned __int8 v249 = a1[22];
  v268 = (char **)MEMORY[0x1E4FBC860];
  int v256 = v6;
  int v253 = v4;
  if (v6 && v4)
  {
    id v7 = objc_msgSend(*(id *)(v2 + 32), sel_bottomAnchor);
    if (one-time initialization token for margin != -1) {
      swift_once();
    }
    id v255 = v7;
    double v8 = *(double *)&static Layout.Captions.margin;
  }
  else
  {
    id v9 = objc_msgSend(*(id *)(v2 + 16), sel_safeAreaLayoutGuide);
    id v255 = objc_msgSend(v9, sel_topAnchor);

    double v8 = 0.0;
  }
  int v10 = v5;
  int v11 = *(void **)(v2 + 88);
  id v12 = objc_msgSend(v11, sel_leadingAnchor);
  uint64_t v13 = (void *)v3[2];
  id v14 = objc_msgSend(v13, sel_leadingAnchor);
  if (one-time initialization token for margin != -1) {
    swift_once();
  }
  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, *(double *)&static Layout.Captions.margin);

  v246 = (char **)v11;
  id v16 = objc_msgSend(v11, sel_trailingAnchor);
  id v17 = objc_msgSend(v13, sel_trailingAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, -*(double *)&static Layout.Captions.margin);

  uint64_t v19 = MEMORY[0x1E4FBC860] >> 62;
  if (MEMORY[0x1E4FBC860] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v21 = v246;
  if (__OFADD__(v20, 2))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v20 + 2, 1);
    specialized Array._endMutation()();
    id v15 = v15;
    MEMORY[0x1C87733A0]();
    if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      goto LABEL_13;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_13:
  uint64_t v240 = v19;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v22 = v18;
  MEMORY[0x1C87733A0]();
  if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v23 = (SEL *)&selRef_ringButton;
  uint64_t v24 = &selRef_ringButton;
  int v248 = (int)v10;
  if (!v256)
  {
    id v31 = objc_msgSend(v246, sel_topAnchor);
    id v30 = v255;
    uint64_t v23 = (SEL *)objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v255, v8);

    id v32 = objc_msgSend(v246, sel_heightAnchor);
    id v33 = objc_msgSend(v32, (SEL)&selRef_isInRoster + 2, 0.0);

    uint64_t v24 = v268;
    if ((unint64_t)v268 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v35 = (char *)(v34 + 2);
    if (!__OFADD__(v34, 2))
    {
LABEL_32:
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v35, 1);
      specialized Array._endMutation()();
      char v39 = v23;
      MEMORY[0x1C87733A0]();
      if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      id v40 = v33;
      MEMORY[0x1C87733A0]();
      if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      goto LABEL_37;
    }
    __break(1u);
LABEL_27:
    id v36 = [v246 v24[208]];
    if (one-time initialization token for transcriptVerticalSize != -1) {
      swift_once();
    }
    uint64_t v23 = (SEL *)objc_msgSend(v36, v23[292], *(double *)&static Layout.Captions.transcriptVerticalSize);

    id v37 = objc_msgSend(v246, sel_topAnchor);
    id v30 = v255;
    id v33 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v255, v8);

    if ((unint64_t)v268 >> 62)
    {
      swift_bridgeObjectRetain();
      char v38 = (char *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v38 = *(char **)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v35 = v38 + 2;
    if (__OFADD__(v38, 2))
    {
      __break(1u);
      goto LABEL_246;
    }
    goto LABEL_32;
  }
  if (v256 != 1) {
    goto LABEL_27;
  }
  int v25 = static Platform.current.getter();
  id v26 = objc_msgSend(v246, sel_bottomAnchor);
  if (v25 == 2)
  {
    if (v10)
    {
      id v27 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
      id v28 = objc_msgSend(v27, sel_bottomAnchor);

      id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, -3.0);
      MEMORY[0x1C87733A0]();
      id v30 = v255;
      if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      goto LABEL_39;
    }
    id v70 = objc_msgSend((id)v3[7], sel_topAnchor);
    id v71 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v70, -static Layout.MediaPip.padding.getter());

    MEMORY[0x1C87733A0]();
    id v30 = v255;
    if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
LABEL_72:
    id v255 = v30;
    uint64_t v55 = &selRef_ringButton;
    id v41 = objc_msgSend(v13, sel_topAnchor);
    char v54 = &selRef_ringButton;
    id v56 = objc_msgSend(v13, sel_bottomAnchor);
    double v51 = 0.0;
    double v48 = 0.0;
    double v42 = 0.0;
    goto LABEL_73;
  }
  id v57 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
  id v58 = objc_msgSend(v57, sel_bottomAnchor);

  id v59 = objc_msgSend(v26, sel_constraintLessThanOrEqualToAnchor_, v58);
  MEMORY[0x1C87733A0]();
  if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v60 = objc_msgSend(v246, sel_topAnchor);
  char v61 = v60;
  if ((v257 & 0x80) == 0)
  {
    id v30 = v255;
    id v62 = objc_msgSend(v60, sel_constraintGreaterThanOrEqualToAnchor_constant_, v255, v8);

    char v63 = *(void **)(a2 + 88);
    if ((unint64_t)v268 >> 62)
    {
      id v238 = v63;
      swift_bridgeObjectRetain();
      uint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v64 = *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v65 = v63;
    }
    if (__OFADD__(v64, 2))
    {
      __break(1u);
    }
    else
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v64 + 2, 1);
      specialized Array._endMutation()();
      id v62 = v62;
      MEMORY[0x1C87733A0]();
      if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
      {
LABEL_59:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v66 = v63;
        MEMORY[0x1C87733A0]();
        if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        goto LABEL_37;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_59;
  }
  id v30 = v255;
  id v228 = objc_msgSend(v60, sel_constraintEqualToAnchor_constant_, v255, v8);

  MEMORY[0x1C87733A0]();
  if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_37:
  if ((v10 & 1) == 0) {
    goto LABEL_72;
  }
  if (v256)
  {
LABEL_39:
    id v41 = objc_msgSend(v246, sel_bottomAnchor);
    double v42 = *(double *)&static Layout.Captions.margin;
LABEL_40:
    unint64_t v43 = v252;
    goto LABEL_41;
  }
  if (!v253)
  {
    id v233 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
    id v41 = objc_msgSend(v233, sel_topAnchor);

    double v42 = 0.0;
    goto LABEL_40;
  }
  id v41 = objc_msgSend((id)v3[4], sel_bottomAnchor);
  static Layout.MediaPip.padding.getter();
  unint64_t v43 = v252;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v67 = static Defaults.shared;
  (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
  uint64_t v68 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(void *)v67 + 488))(v68);
  double v42 = 16.0;
LABEL_41:
  if (v254)
  {
    id v44 = objc_msgSend((id)v3[3], sel_topAnchor);
LABEL_43:
    id v45 = v44;
    static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v46 = static Defaults.shared;
    (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
    uint64_t v47 = static Platform.current.getter();
    (*(void (**)(uint64_t))(*(void *)v46 + 488))(v47);
    double v48 = 16.0;
    goto LABEL_49;
  }
  LOBYTE(v259) = 0;
  unint64_t v260 = v43;
  char v261 = v253;
  char v262 = v257;
  char v263 = 1;
  char v264 = v256;
  char v265 = v251;
  unsigned __int8 v266 = v250;
  unsigned __int8 v267 = v249;
  uint64_t v49 = SmallMultiwayControllerLayoutFactory.safeReactionPickerTipView(for:)((uint64_t)&v259);
  if (v49)
  {
    uint64_t v50 = v49;
    id v45 = objc_msgSend(v49, sel_topAnchor);

LABEL_48:
    double v48 = 10.0;
    goto LABEL_49;
  }
  if (v251)
  {
    uint64_t v69 = (void *)v3[12];
    if (v69)
    {
      id v45 = objc_msgSend(v69, sel_topAnchor);
      goto LABEL_48;
    }
  }
  if (v253)
  {
    id v44 = objc_msgSend((id)v3[9], sel_topAnchor);
    goto LABEL_43;
  }
  id v235 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
  id v45 = objc_msgSend(v235, sel_bottomAnchor);

  double v48 = 0.0;
LABEL_49:
  id v255 = v30;
  double v51 = static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v52 = static Defaults.shared;
  (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
  uint64_t v53 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(void *)v52 + 488))(v53);
  char v54 = &selRef_ringButton;
  uint64_t v55 = &selRef_ringButton;
  id v56 = v45;
LABEL_73:
  uint64_t v72 = v13;
  v245 = v3;
  uint64_t v73 = (void *)v3[6];
  id v74 = objc_msgSend(v73, sel_leadingAnchor);
  id v75 = objc_msgSend(v72, sel_leadingAnchor);
  id v244 = objc_msgSend(v74, sel_constraintEqualToAnchor_constant_, v75, v51);

  id v76 = objc_msgSend(v73, sel_trailingAnchor);
  uint64_t v77 = v72;
  id v78 = objc_msgSend(v72, sel_trailingAnchor);
  id v79 = objc_msgSend(v76, sel_constraintEqualToAnchor_constant_, v78, -v51);

  id v80 = [v73 v55[180]];
  v241 = v41;
  id v81 = objc_msgSend(v80, sel_constraintEqualToAnchor_constant_, v41, v42);

  id v239 = v73;
  id v82 = [v73 v54[184]];
  v242 = v56;
  id v83 = objc_msgSend(v82, sel_constraintEqualToAnchor_constant_, v56, -v48);

  if ((unint64_t)v268 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v84 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v84 = *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v84, 4))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v84 + 4, 1);
    specialized Array._endMutation()();
    id v41 = v244;
    MEMORY[0x1C87733A0]();
    if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      goto LABEL_77;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_77:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v85 = v79;
  MEMORY[0x1C87733A0]();
  uint64_t v13 = v77;
  if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v86 = v81;
  MEMORY[0x1C87733A0]();
  uint64_t v3 = v245;
  if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v87 = v83;
  MEMORY[0x1C87733A0]();
  if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v21 = &selRef_ringButton;
  if (v254)
  {
    LOBYTE(v259) = 1;
    unint64_t v260 = v252;
    char v261 = v253;
    char v262 = v257;
    char v263 = v248;
    char v264 = v256;
    char v265 = v251;
    unsigned __int8 v266 = v250;
    unsigned __int8 v267 = v249;
    uint64_t v88 = SmallMultiwayControllerLayoutFactory.safeReactionPickerTipView(for:)((uint64_t)&v259);
    if (v88)
    {
      id v89 = v88;
      int v10 = (void *)v245[3];
      id v90 = objc_msgSend(v10, sel_bottomAnchor);
      id v91 = objc_msgSend(v89, sel_topAnchor);
      id v92 = objc_msgSend(v90, sel_constraintEqualToAnchor_constant_, v91, -10.0);
LABEL_86:
      id v93 = v92;

      id v94 = v93;
      MEMORY[0x1C87733A0]();
      if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      goto LABEL_97;
    }
    uint64_t v99 = (void *)v245[12];
    if (v99)
    {
      LOBYTE(v259) = 1;
      unint64_t v260 = v252;
      char v261 = v253;
      char v262 = v257;
      char v263 = v248;
      char v264 = v256;
      char v265 = v251;
      unsigned __int8 v266 = v250;
      unsigned __int8 v267 = v249;
      if (SmallMultiwayControllerLayout.shouldConstrainListViewToRecationsView(for:)((uint64_t)&v259))
      {
        int v10 = (void *)v245[3];
        id v89 = v99;
        id v90 = objc_msgSend(v10, sel_bottomAnchor);
        id v91 = objc_msgSend(v89, sel_topAnchor);
        id v92 = objc_msgSend(v90, sel_constraintEqualToAnchor_constant_, v91, -10.0);
        goto LABEL_86;
      }
    }
    int v10 = (void *)v245[3];
    id v100 = objc_msgSend(v10, sel_bottomAnchor);
    id v101 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
    id v102 = objc_msgSend(v101, sel_bottomAnchor);

    id v103 = objc_msgSend(v100, sel_constraintEqualToAnchor_, v102);
    id v98 = v103;
  }
  else
  {
    int v10 = (void *)v245[3];
    id v95 = objc_msgSend(v10, sel_topAnchor);
    id v96 = objc_msgSend(v13, sel_bottomAnchor);
    id v97 = objc_msgSend(v95, sel_constraintEqualToAnchor_, v96);

    id v98 = v97;
  }
  id v94 = v98;
  MEMORY[0x1C87733A0]();
  if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_97:
  uint64_t v104 = MEMORY[0x1E4FBC860];

  uint64_t v258 = v104;
  unsigned int v243 = v257 >> 6;
  if (!(v257 >> 6))
  {
    uint64_t v113 = *(void **)(a2 + 40);
    uint64_t v114 = *(void **)(a2 + 80);
    id v33 = *(id *)(a2 + 32);
    id v115 = v113;
    id v116 = v114;
    if ((v104 & 0xC000000000000000) != 0) {
      uint64_t v117 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v117 = 0;
    }
    BOOL v108 = __OFADD__(v117, 3);
    uint64_t v118 = v117 + 3;
    if (v108)
    {
      __break(1u);
    }
    else
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v118, 1);
      specialized Array._endMutation()();
      id v33 = v33;
      MEMORY[0x1C87733A0]();
      if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_112:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v110 = (SEL *)v115;
        MEMORY[0x1C87733A0]();
        if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v112 = (char *)v116;
        MEMORY[0x1C87733A0]();
        if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        int v111 = v257;
LABEL_117:
        specialized Array._endMutation()();

        unint64_t v119 = v252;
        switch(v111)
        {
          case 1:
          case 3:
            uint64_t v120 = (void *)v3[7];
            id v121 = objc_msgSend(v120, sel_rightAnchor);
            id v122 = objc_msgSend(v13, sel_rightAnchor);
            double v139 = static Layout.MediaPip.padding.getter();
            if (one-time initialization token for shared != -1) {
              swift_once();
            }
            uint64_t v140 = static Defaults.shared;
            (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
            uint64_t v141 = static Platform.current.getter();
            (*(void (**)(uint64_t))(*(void *)v140 + 488))(v141);
            id v126 = objc_msgSend(v121, sel_constraintEqualToAnchor_constant_, v122, -v139);
            break;
          default:
            uint64_t v120 = (void *)v3[7];
            id v121 = objc_msgSend(v120, sel_leftAnchor);
            id v122 = objc_msgSend(v13, sel_leftAnchor);
            double v123 = static Layout.MediaPip.padding.getter();
            if (one-time initialization token for shared != -1) {
              swift_once();
            }
            uint64_t v124 = static Defaults.shared;
            (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
            uint64_t v125 = static Platform.current.getter();
            (*(void (**)(uint64_t))(*(void *)v124 + 488))(v125);
            id v126 = objc_msgSend(v121, sel_constraintEqualToAnchor_constant_, v122, v123);
            break;
        }
        id v142 = v126;

        id v143 = v142;
        MEMORY[0x1C87733A0]();
        if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        if ((v111 & 0xFE) == 2)
        {
          if (v254)
          {
            id v144 = objc_msgSend(v120, sel_bottomAnchor);
            id v145 = objc_msgSend(v10, sel_bottomAnchor);
            static Platform.current.getter();
            id v146 = objc_msgSend(v144, sel_constraintEqualToAnchor_constant_, v145, -3.0);

            id v138 = v146;
            MEMORY[0x1C87733A0]();
            if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v134 = v255;
            goto LABEL_175;
          }
          LOBYTE(v259) = 0;
          unint64_t v260 = v252;
          char v261 = v253;
          char v262 = v257;
          char v263 = v248;
          char v264 = v256;
          char v265 = v251;
          unsigned __int8 v266 = v250;
          unsigned __int8 v267 = v249;
          v178 = SmallMultiwayControllerLayoutFactory.safeReactionPickerTipView(for:)((uint64_t)&v259);
          if (v178)
          {
            id v148 = v178;
            id v149 = objc_msgSend(v120, sel_bottomAnchor);
            id v150 = objc_msgSend(v148, sel_topAnchor);
            id v151 = objc_msgSend(v149, sel_constraintGreaterThanOrEqualToAnchor_constant_, v150, -10.0);
LABEL_168:
            id v179 = v151;

            id v138 = v179;
            MEMORY[0x1C87733A0]();
            v134 = v255;
            if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            {
LABEL_169:
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();

LABEL_175:
              goto LABEL_176;
            }
LABEL_222:
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            goto LABEL_169;
          }
          v229 = (void *)v3[12];
          v134 = v255;
          if (v229 && v251)
          {
            id v148 = v229;
            id v230 = objc_msgSend(v120, sel_bottomAnchor);
            id v231 = objc_msgSend(v148, sel_topAnchor);
            id v232 = objc_msgSend(v230, sel_constraintGreaterThanOrEqualToAnchor_constant_, v231, -10.0);

            id v138 = v232;
            MEMORY[0x1C87733A0]();
            if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              goto LABEL_169;
            }
            goto LABEL_222;
          }
          if (static Platform.current.getter() == 2)
          {
            id v152 = objc_msgSend(v120, sel_bottomAnchor);
            if (v256 == 1 && v248)
            {
              id v180 = objc_msgSend(v246, sel_topAnchor);
              id v181 = objc_msgSend(v152, sel_constraintEqualToAnchor_constant_, v180, -static Layout.MediaPip.padding.getter());
            }
            else
            {
              id v237 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
              id v180 = objc_msgSend(v237, sel_bottomAnchor);

              if (one-time initialization token for tvSplitViewBottomOffset != -1) {
                swift_once();
              }
              id v181 = objc_msgSend(v152, sel_constraintEqualToAnchor_constant_, v180, -*(double *)&static Layout.LocalParticipantView.tvSplitViewBottomOffset);
            }
            goto LABEL_171;
          }
          id v152 = objc_msgSend(v120, sel_bottomAnchor);
          id v236 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
          id v154 = objc_msgSend(v236, sel_bottomAnchor);

          id v157 = objc_msgSend(v152, v21[181], v154);
        }
        else
        {
          v147 = (void *)v3[12];
          if (v147 && v251)
          {
            id v148 = v147;
            id v149 = objc_msgSend(v120, sel_topAnchor);
            id v150 = objc_msgSend(v148, sel_bottomAnchor);
            id v151 = objc_msgSend(v149, sel_constraintGreaterThanOrEqualToAnchor_constant_, v150, 10.0);
            goto LABEL_168;
          }
          id v152 = objc_msgSend(v120, sel_topAnchor);
          v153 = (void *)v3[4];
          v134 = v255;
          if (!v253)
          {
            id v180 = objc_msgSend(v153, sel_topAnchor);
            id v181 = objc_msgSend(v152, v21[181], v180);
LABEL_171:
            id v182 = v181;

            id v159 = v182;
            goto LABEL_172;
          }
          id v154 = objc_msgSend(v153, sel_bottomAnchor);
          static Layout.MediaPip.padding.getter();
          if (one-time initialization token for shared != -1) {
            swift_once();
          }
          uint64_t v155 = static Defaults.shared;
          (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
          uint64_t v156 = static Platform.current.getter();
          (*(void (**)(uint64_t))(*(void *)v155 + 488))(v156);
          id v157 = objc_msgSend(v152, sel_constraintEqualToAnchor_constant_, v154, 16.0);
        }
LABEL_152:
        id v158 = v157;

        id v159 = v158;
LABEL_172:
        id v138 = v159;
        MEMORY[0x1C87733A0]();
        if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        goto LABEL_175;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_112;
  }
  if (v257 >> 6 == 1)
  {
    uint64_t v105 = *(void **)(a2 + 56);
    uint64_t v106 = *(void **)(a2 + 80);
    id v33 = *(id *)(a2 + 48);
    uint64_t v23 = v105;
    char v38 = v106;
    if ((v104 & 0xC000000000000000) == 0)
    {
      uint64_t v107 = 0;
      goto LABEL_101;
    }
LABEL_246:
    uint64_t v107 = _CocoaArrayWrapper.endIndex.getter();
LABEL_101:
    BOOL v108 = __OFADD__(v107, 3);
    uint64_t v109 = v107 + 3;
    if (v108)
    {
      __break(1u);
    }
    else
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v109, 1);
      specialized Array._endMutation()();
      id v33 = v33;
      MEMORY[0x1C87733A0]();
      if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_103:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v110 = v23;
        MEMORY[0x1C87733A0]();
        if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        int v111 = v257 & 0x3F;
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v112 = v38;
        MEMORY[0x1C87733A0]();
        if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        goto LABEL_117;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_103;
  }
  if (v257 == 128)
  {
    uint64_t v127 = *(void **)(a2 + 72);
    v128 = (void *)v245[7];
    id v129 = *(id *)(a2 + 64);
    id v130 = v127;
    id v131 = objc_msgSend(v128, sel_centerXAnchor);
    id v132 = objc_msgSend(v239, sel_centerXAnchor);
    id v133 = objc_msgSend(v131, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v132);

    v134 = v255;
    if (v240)
    {
      swift_bridgeObjectRetain();
      uint64_t v135 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v135 = *(void *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (__OFADD__(v135, 3))
    {
      __break(1u);
    }
    else
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v135 + 3, 1);
      specialized Array._endMutation()();
      id v129 = v129;
      MEMORY[0x1C87733A0]();
      if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_126:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v136 = v130;
        MEMORY[0x1C87733A0]();
        if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v137 = v133;
        MEMORY[0x1C87733A0]();
        if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        unint64_t v119 = v252;
        if (v252 <= 6 && ((1 << v252) & 0x6C) != 0)
        {
          id v138 = *(id *)(a2 + 80);
          MEMORY[0x1C87733A0]();
          if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v21 = &selRef_ringButton;
          goto LABEL_175;
        }
        id v152 = objc_msgSend(v128, sel_bottomAnchor);
        id v234 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
        id v154 = objc_msgSend(v234, sel_bottomAnchor);

        uint64_t v21 = &selRef_ringButton;
        id v157 = objc_msgSend(v152, sel_constraintEqualToAnchor_, v154);
        goto LABEL_152;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_126;
  }
  v160 = (char *)v245[7];
  id v161 = objc_msgSend(v160, sel_leadingAnchor);
  id v162 = objc_msgSend(v13, sel_leadingAnchor);
  id v163 = objc_msgSend(v161, sel_constraintEqualToAnchor_, v162);

  id v164 = objc_msgSend(v160, sel_trailingAnchor);
  id v165 = objc_msgSend(v13, sel_trailingAnchor);
  id v166 = objc_msgSend(v164, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v165);

  id v167 = objc_msgSend(v160, sel_topAnchor);
  id v168 = objc_msgSend(v13, sel_topAnchor);
  id v169 = objc_msgSend(v167, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v168);

  id v170 = objc_msgSend(v160, (SEL)&selRef_canOpenURL_ + 5);
  id v171 = objc_msgSend(v13, (SEL)&selRef_canOpenURL_ + 5);
  id v172 = objc_msgSend(v170, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v171);

  if (v240)
  {
    id v171 = (id)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    uint64_t v173 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v173 = *(void *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v173, 4))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v173 + 4, 1);
    specialized Array._endMutation()();
    id v171 = v163;
    MEMORY[0x1C87733A0]();
    if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_157;
    }
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_157:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v174 = v166;
  MEMORY[0x1C87733A0]();
  if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v175 = v169;
  MEMORY[0x1C87733A0]();
  if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v176 = v172;
  MEMORY[0x1C87733A0]();
  v134 = v255;
  if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  unint64_t v119 = v252;
  uint64_t v21 = &selRef_ringButton;
  if (v252 > 6 || ((1 << v252) & 0x6C) == 0)
  {
    id v152 = objc_msgSend(*(id *)&v160[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView], sel_bottomAnchor);
    id v177 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
    id v154 = objc_msgSend(v177, sel_bottomAnchor);

    id v157 = objc_msgSend(v152, sel_constraintEqualToAnchor_, v154);
    goto LABEL_152;
  }
LABEL_176:
  specialized Array.append<A>(contentsOf:)();
  v183 = (void *)v3[8];
  if (v183 && v119 <= 6 && ((1 << v119) & 0x6C) != 0)
  {
    id v184 = v183;
    id v185 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
    id v186 = objc_msgSend(v185, sel_bottomAnchor);

    id v187 = objc_msgSend(v184, sel_bottomAnchor);
    id v188 = objc_msgSend(v186, v21[181], v187);

    MEMORY[0x1C87733A0]();
    if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (((1 << v119) & 0x6C) != 0)
    {
      id v189 = objc_msgSend(v184, sel_bottomAnchor);
      id v190 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
      id v191 = objc_msgSend(v190, sel_bottomAnchor);

      id v192 = objc_msgSend(v189, v21[181], v191);
      MEMORY[0x1C87733A0]();
      if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  v193 = (void *)v3[12];
  if (v193)
  {
    v194 = v134;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v195 = swift_allocObject();
    *(_OWORD *)(v195 + 16) = xmmword_1C3769830;
    id v196 = v193;
    id v197 = objc_msgSend(v196, sel_centerXAnchor);
    id v198 = objc_msgSend(v13, sel_centerXAnchor);
    v199 = v21;
    id v200 = objc_msgSend(v197, v21[181], v198);

    *(void *)(v195 + 32) = v200;
    uint64_t v259 = v195;
    specialized Array._endMutation()();
    char v201 = v257;
    if (v243)
    {
      uint64_t v21 = v199;
      if (v243 != 1)
      {
LABEL_199:
        specialized Array.append<A>(contentsOf:)();

        v134 = v194;
        unint64_t v119 = v252;
        goto LABEL_200;
      }
      char v201 = v257 & 0x3F;
    }
    if ((v201 & 0xFE) == 2)
    {
      id v202 = objc_msgSend(v196, sel_bottomAnchor);
      id v203 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
      id v204 = objc_msgSend(v203, sel_bottomAnchor);

      uint64_t v21 = v199;
      id v205 = objc_msgSend(v202, (SEL)v199 + 750, v204);

      id v206 = v205;
    }
    else
    {
      id v207 = objc_msgSend(v196, sel_topAnchor);
      v208 = (void *)v3[4];
      uint64_t v21 = v199;
      if (v253)
      {
        id v209 = objc_msgSend(v208, sel_bottomAnchor);
        id v210 = objc_msgSend(v207, sel_constraintEqualToAnchor_constant_, v209, 13.0);
      }
      else
      {
        id v209 = objc_msgSend(v208, sel_topAnchor);
        id v210 = objc_msgSend(v207, (SEL)v199 + 750, v209);
      }
      id v211 = v210;

      id v206 = v211;
    }
    v212 = v206;
    MEMORY[0x1C87733A0]();
    if (*(void *)((v259 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v259 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    goto LABEL_199;
  }
LABEL_200:
  LOBYTE(v259) = v254;
  unint64_t v260 = v119;
  char v261 = v253;
  char v262 = v257;
  char v263 = v248;
  char v264 = v256;
  char v265 = v251;
  unsigned __int8 v266 = v250;
  unsigned __int8 v267 = v249;
  v213 = SmallMultiwayControllerLayoutFactory.safeReactionPickerTipView(for:)((uint64_t)&v259);
  if (!v213)
  {
    id v217 = v241;
    id v226 = v242;
    id v225 = v134;
    goto LABEL_213;
  }
  v214 = v213;
  id v215 = objc_msgSend(v213, sel_centerXAnchor);
  id v216 = objc_msgSend(v13, sel_centerXAnchor);
  id v217 = objc_msgSend(v215, v21[181], v216);

  id v218 = objc_msgSend(v214, sel_bottomAnchor);
  id v219 = objc_msgSend(v13, sel_safeAreaLayoutGuide);
  id v220 = objc_msgSend(v219, sel_bottomAnchor);

  id v221 = objc_msgSend(v218, v21[181], v220);
  id v222 = objc_msgSend(v214, sel_widthAnchor);
  if (one-time initialization token for defaultTipWidth != -1) {
    swift_once();
  }
  id v223 = objc_msgSend(v222, sel_constraintEqualToConstant_, *(double *)&static Layout.Reactions.defaultTipWidth);

  if ((unint64_t)v268 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v224 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v224 = *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v224, 3))
  {
    __break(1u);
    goto LABEL_242;
  }
  specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v224 + 3, 1);
  specialized Array._endMutation()();
  id v217 = v217;
  MEMORY[0x1C87733A0]();
  if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
LABEL_242:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v225 = v221;
  MEMORY[0x1C87733A0]();
  if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v226 = v223;
  MEMORY[0x1C87733A0]();
  if (*(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v268 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

LABEL_213:
  return v268;
}

void *SmallMultiwayControllerLayoutFactory.safeReactionPickerTipView(for:)(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 21) != 1) {
    return 0;
  }
  uint64_t v2 = *(void **)(v1 + 104);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v3, sel_superview);

    if (!v4)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationKit);
      int v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v6, v7))
      {
        double v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v8 = 0;
        _os_log_impl(&dword_1C2F90000, v6, v7, "ReactionPickerTip: UI State is out of sync. Can't create constraints.", v8, 2u);
        MEMORY[0x1C87760E0](v8, -1, -1);
      }

      return 0;
    }
  }
  return v2;
}

BOOL SmallMultiwayControllerLayout.shouldConstrainListViewToRecationsView(for:)(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 20) == 1)
  {
    char v1 = *(unsigned char *)(a1 + 22);
    char v2 = *(unsigned char *)(a1 + 21);
    char v3 = *(unsigned char *)(a1 + 19);
    char v4 = *(unsigned char *)(a1 + 18);
    __int16 v5 = *(_WORD *)(a1 + 16);
    uint64_t v6 = *(void *)(a1 + 8);
    v9[0] = *(unsigned char *)a1;
    uint64_t v10 = v6;
    __int16 v11 = v5;
    char v12 = v4;
    char v13 = v3;
    char v14 = 1;
    char v15 = v2;
    char v16 = v1;
    return SmallMultiwayControllerLayout.localParticipantViewIsAtBottom(for:)((uint64_t)v9);
  }
  else
  {
    return 0;
  }
}

id *SmallMultiwayControllerLayoutFactory.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SmallMultiwayControllerLayoutFactory.__deallocating_deinit()
{
  SmallMultiwayControllerLayoutFactory.deinit();
  return swift_deallocClassInstance();
}

void SmallMultiwayControllerLayout.displayScale.getter()
{
  char v1 = (void *)MEMORY[0x1C8776240](v0 + 192);
  if (v1)
  {
    char v2 = v1;
    objc_msgSend(v1, sel_displayScale);
  }
  else
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
    static UIView.screenScale.getter();
  }
}

uint64_t SmallMultiwayControllerLayout.__allocating_init(containingView:participantListView:participantListState:gridView:participantGridState:controlsViewController:inCallControlsState:inCallBannerHostViewController:callControlsViewController:inCallBannerControlsAreaLayoutGuide:inCallBannerDodgingLayoutGuide:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:)(void *a1, void *a2, char a3, void *a4, char a5, void *a6, uint64_t a7, void *a8, void *a9, uint64_t a10, void *a11, void *a12, unsigned __int8 *a13, char *a14, unsigned __int8 a15, char *a16, void *a17, uint64_t a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,char **a25,unsigned __int8 *a26,char **a27,unsigned __int8 *a28,void *a29,unsigned __int8 *a30)
{
  int v33 = a3 & 1;
  int v34 = a5 & 1;
  uint64_t v35 = swift_allocObject();
  SmallMultiwayControllerLayout.init(containingView:participantListView:participantListState:gridView:participantGridState:controlsViewController:inCallControlsState:inCallBannerHostViewController:callControlsViewController:inCallBannerControlsAreaLayoutGuide:inCallBannerDodgingLayoutGuide:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:)(a1, a2, v33, a4, v34, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30);
  return v35;
}

void *SmallMultiwayControllerLayout.init(containingView:participantListView:participantListState:gridView:participantGridState:controlsViewController:inCallControlsState:inCallBannerHostViewController:callControlsViewController:inCallBannerControlsAreaLayoutGuide:inCallBannerDodgingLayoutGuide:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:)(void *a1, void *a2, int a3, void *a4, int a5, void *a6, uint64_t a7, void *a8, void *a9, uint64_t a10, void *a11, void *a12, unsigned __int8 *a13, char *a14, unsigned __int8 a15, char *a16, void *a17, uint64_t a18, id a19, void *a20,void *a21,void *a22,id a23,void *a24,char **a25,unsigned __int8 *a26,char **a27,unsigned __int8 *a28,void *a29,unsigned __int8 *a30)
{
  uint64_t v332 = a7;
  LODWORD(v320) = a5;
  id v335 = a4;
  LODWORD(v319) = a3;
  id v338 = a2;
  OUTLINED_FUNCTION_3_2();
  uint64_t v336 = v37;
  char v38 = (char **)type metadata accessor for FloatingPointRoundingRule();
  OUTLINED_FUNCTION_4();
  v334 = v39;
  MEMORY[0x1F4188790](v40);
  v312 = (char *)v289 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v328 = *a13;
  int v330 = *a26;
  int v329 = *a28;
  v30[21] = 0;
  int v327 = *a30;
  *((_OWORD *)v30 + 6) = 0u;
  *((_OWORD *)v30 + 7) = 0u;
  v30[22] = 0;
  id v321 = v30 + 23;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v42 = (uint64_t)(v30 + 25);
  swift_unknownObjectWeakInit();
  v30[26] = MEMORY[0x1E4FBC860];
  v331 = v30 + 26;
  *((unsigned char *)v30 + 216) = 1;
  v341 = v30;
  v30[28] = 0;
  v289[0] = v30 + 28;
  v339 = a1;
  objc_msgSend(a1, sel_displayScale);
  uint64_t v44 = v43;
  id v313 = a6;
  uint64_t result = objc_msgSend(a6, sel_view);
  id v337 = result;
  if (!result)
  {
    __break(1u);
    goto LABEL_96;
  }
  v309 = v38;
  v310 = v30 + 21;
  id v311 = a8;
  uint64_t result = objc_msgSend(a8, sel_view);
  if (!result)
  {
LABEL_96:
    __break(1u);
    return result;
  }
  id v46 = result;
  uint64_t v47 = a29;
  double v48 = a25;
  id v49 = a19;
  uint64_t v50 = a14;
  id v317 = objc_msgSend(a19, sel_view);
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C376BA20;
  id v52 = v335;
  *(void *)(inited + 32) = v338;
  *(void *)(inited + 40) = v52;
  *(void *)(inited + 48) = v337;
  *(void *)(inited + 56) = v46;
  v340 = a14;
  *(void *)(inited + 64) = a14;
  *(void *)(inited + 72) = a25;
  v333 = a25;
  v326 = a27;
  *(void *)(inited + 80) = a27;
  *(void *)(inited + 88) = a29;
  v354[0] = inited;
  specialized Array._endMutation()();
  uint64_t v53 = (void *)v354[0];
  if (*(void *)(v354[0] + 16) < 8uLL)
  {
    __break(1u);
LABEL_82:
    swift_once();
    goto LABEL_23;
  }
  id v308 = a19;
  char v54 = *(void **)(v354[0] + 32);
  id v55 = a29;
  uint64_t v50 = v338;
  id v56 = v338;
  id v57 = v335;
  id v58 = v337;
  id v59 = v46;
  id v60 = v340;
  char v61 = v333;
  id v62 = v326;
  if (v54) {
    objc_msgSend(v54, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  }
  char v63 = (void *)v53[5];
  if (v63) {
    OUTLINED_FUNCTION_5_82(v63);
  }
  uint64_t v64 = (void *)v53[6];
  if (v64) {
    OUTLINED_FUNCTION_5_82(v64);
  }
  id v65 = (void *)v53[7];
  if (v65) {
    OUTLINED_FUNCTION_5_82(v65);
  }
  id v66 = (void *)v53[8];
  if (v66) {
    OUTLINED_FUNCTION_5_82(v66);
  }
  uint64_t v67 = (void *)v53[9];
  if (v67) {
    OUTLINED_FUNCTION_5_82(v67);
  }
  id v316 = v46;
  uint64_t v68 = (void *)v53[10];
  if (v68) {
    OUTLINED_FUNCTION_5_82(v68);
  }
  id v325 = a20;
  uint64_t v69 = (void *)v53[11];
  id v307 = a29;
  if (v69) {
    OUTLINED_FUNCTION_5_82(v69);
  }
  swift_bridgeObjectRelease();
  if (a17) {
    objc_msgSend(a17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  }
  id v323 = a17;
  id v324 = a21;
  type metadata accessor for MultiwayViewConstraintsController();
  uint64_t v47 = v339;
  objc_msgSend(v339, sel_bounds);
  CGRectGetWidth(v357);
  static MultiwayViewConstraintsController.listItemWidth(for:displayScale:configurableRosterCellWidth:)(0, 1);
  double v32 = v70;
  v322 = a16;
  double v31 = static SmallMultiwayControllerLayout.localParticipantWidth(for:aspectRatio:displayScale:)(v70, *(double *)&v44);
  uint64_t v306 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v42 = swift_allocObject();
  long long v305 = xmmword_1C3769580;
  *(_OWORD *)(v42 + 16) = xmmword_1C3769580;
  double v48 = &selRef_ringButton;
  id v49 = objc_msgSend(v50, sel_leadingAnchor);
  id v46 = objc_msgSend(v47, sel_leadingAnchor);
  double v33 = static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1) {
    goto LABEL_82;
  }
LABEL_23:
  (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
  static Platform.current.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v71 + 488))();
  id v72 = objc_msgSend(v49, sel_constraintEqualToAnchor_constant_, v46, v33);

  *(void *)(v42 + 32) = v72;
  id v73 = objc_msgSend(v50, sel_trailingAnchor);
  id v74 = objc_msgSend(v47, (SEL)&selRef_supportsDynamicSystemUI + 4);
  double v75 = static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v76 + 384))();
  static Platform.current.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v77 + 488))();
  id v78 = objc_msgSend(v73, sel_constraintEqualToAnchor_constant_, v74, -(v32 + v75));

  *(void *)(v42 + 40) = v78;
  id v79 = v337;
  id v80 = [v337 v48[182]];
  id v81 = [v47 v48[182]];
  id v82 = OUTLINED_FUNCTION_8_51((uint64_t)v81, sel_constraintEqualToAnchor_);

  *(void *)(v42 + 48) = v82;
  id v83 = objc_msgSend(v79, (SEL)&selRef_supportsDynamicSystemUI + 4);
  id v84 = objc_msgSend(v47, (SEL)&selRef_supportsDynamicSystemUI + 4);
  id v85 = OUTLINED_FUNCTION_8_51((uint64_t)v84, sel_constraintEqualToAnchor_);

  *(void *)(v42 + 56) = v85;
  v354[0] = v42;
  specialized Array._endMutation()();
  unint64_t v86 = v354[0];
  unint64_t v353 = v354[0];
  swift_unknownObjectWeakAssign();
  if (!v324) {
    goto LABEL_31;
  }
  id v87 = v324;
  id v88 = objc_msgSend(v87, sel_bottomAnchor);
  id v89 = objc_msgSend(v47, sel_bottomAnchor);
  id v90 = objc_msgSend(v88, sel_constraintEqualToAnchor_, v89);

  id v91 = objc_msgSend(v87, sel_centerXAnchor);
  id v92 = objc_msgSend(v47, sel_centerXAnchor);
  id v93 = objc_msgSend(v91, sel_constraintEqualToAnchor_, v92);

  if (v86 >> 62)
  {
    OUTLINED_FUNCTION_67_0();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_5_2();
  }
  else
  {
    OUTLINED_FUNCTION_18_40();
  }
  if (__OFADD__(v91, 2))
  {
    __break(1u);
    goto LABEL_88;
  }
  OUTLINED_FUNCTION_17_35((uint64_t)v91 + 2);
  specialized Array._endMutation()();
  id v94 = v90;
  OUTLINED_FUNCTION_23_31();
  if (*(void *)((v353 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v353 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_88:
  }
    OUTLINED_FUNCTION_1_98();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v95 = v93;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_2_82();
  if (v96) {
    OUTLINED_FUNCTION_1_98();
  }
  OUTLINED_FUNCTION_11_40();
  specialized Array._endMutation()();

  uint64_t v47 = v339;
LABEL_31:
  id v318 = a22;
  if (!a22) {
    goto LABEL_45;
  }
  id v97 = v318;
  id v98 = objc_msgSend(v97, sel_leadingAnchor);
  id v99 = objc_msgSend(v47, sel_leadingAnchor);
  static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v100 + 384))();
  static Platform.current.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v101 + 488))();
  id v102 = objc_msgSend(v98, sel_constraintEqualToAnchor_constant_, v99, 20.0);

  id v103 = objc_msgSend(v97, sel_bottomAnchor);
  id v104 = objc_msgSend(v47, sel_safeAreaLayoutGuide);
  id v105 = objc_msgSend(v104, sel_bottomAnchor);

  id v106 = objc_msgSend(v103, sel_constraintEqualToAnchor_, v105);
  id v107 = objc_msgSend(v97, sel_bottomAnchor);
  id v108 = objc_msgSend(v333, sel_topAnchor);
  static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v109 + 384))();
  static Platform.current.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v110 + 488))();
  id v111 = objc_msgSend(v107, sel_constraintEqualToAnchor_constant_, v108, -20.0);

  LODWORD(v112) = 1.0;
  objc_msgSend(v111, sel_setPriority_, v112);
  uint64_t v113 = v341;
  uint64_t v114 = (void *)v341[14];
  v341[14] = v102;
  id v115 = v102;

  id v116 = (void *)v113[12];
  v113[12] = v106;
  id v117 = v106;

  uint64_t v118 = (void *)v113[13];
  v113[13] = v111;
  id v119 = v111;

  id v120 = v115;
  id v121 = v117;
  id v122 = v119;
  id v123 = objc_msgSend(v97, sel_widthAnchor);
  static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v124 + 384))();
  static Platform.current.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v125 + 488))();
  id v126 = objc_msgSend(v123, sel_constraintEqualToConstant_, 50.0);

  id v127 = objc_msgSend(v97, sel_heightAnchor);
  id v128 = objc_msgSend(v97, sel_widthAnchor);
  id v129 = OUTLINED_FUNCTION_8_51((uint64_t)v128, sel_constraintEqualToAnchor_);

  if (v353 >> 62)
  {
    OUTLINED_FUNCTION_67_0();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_5_2();
  }
  else
  {
    OUTLINED_FUNCTION_18_40();
  }
  if (__OFADD__(v128, 5))
  {
    __break(1u);
    goto LABEL_91;
  }
  OUTLINED_FUNCTION_17_35((uint64_t)v128 + 5);
  specialized Array._endMutation()();
  id v120 = v120;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_16_33();
  if (v96) {
LABEL_91:
  }
    OUTLINED_FUNCTION_1_98();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v130 = v121;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_16_33();
  if (v96) {
    OUTLINED_FUNCTION_1_98();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v131 = v122;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_2_82();
  if (v96) {
    OUTLINED_FUNCTION_1_98();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v132 = v126;
  OUTLINED_FUNCTION_23_31();
  OUTLINED_FUNCTION_2_82();
  if (v96) {
    OUTLINED_FUNCTION_1_98();
  }
  OUTLINED_FUNCTION_10_51();
  specialized Array._endMutation()();
  id v133 = v129;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_2_82();
  if (v96) {
    OUTLINED_FUNCTION_1_98();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v47 = v339;
LABEL_45:
  id v134 = a23;
  id v135 = objc_msgSend(a23, sel_leadingAnchor);
  id v136 = objc_msgSend(v47, sel_leadingAnchor);
  static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v137 + 384))();
  static Platform.current.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v138 + 488))();
  id v321 = objc_msgSend(v135, sel_constraintEqualToAnchor_constant_, v136, 10.0);

  id v139 = objc_msgSend(a23, sel_bottomAnchor);
  id v140 = objc_msgSend(v47, sel_safeAreaLayoutGuide);
  id v141 = objc_msgSend(v140, sel_bottomAnchor);

  static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v142 + 384))();
  static Platform.current.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v143 + 488))();
  id v144 = objc_msgSend(v139, sel_constraintEqualToAnchor_constant_, v141, -8.0);

  id v304 = a23;
  id v145 = objc_msgSend(a23, sel_heightAnchor);
  Layout.LocalParticipantViewCameraControls.init()((uint64_t)v354);
  double v146 = *(double *)&v354[6];
  static Platform.current.getter();
  id v147 = objc_msgSend(v145, sel_constraintEqualToConstant_, v146);

  if (v353 >> 62)
  {
    OUTLINED_FUNCTION_67_0();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_5_2();
  }
  else
  {
    OUTLINED_FUNCTION_18_40();
  }
  if (__OFADD__(&selRef_ringButton, 3))
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_17_35((uint64_t)&selRef_ringButton + 3);
    specialized Array._endMutation()();
    id v134 = v321;
    MEMORY[0x1C87733A0]();
    OUTLINED_FUNCTION_2_82();
    if (!v96) {
      goto LABEL_49;
    }
  }
  OUTLINED_FUNCTION_1_98();
LABEL_49:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v148 = v144;
  OUTLINED_FUNCTION_23_31();
  OUTLINED_FUNCTION_2_82();
  if (v96) {
    OUTLINED_FUNCTION_1_98();
  }
  OUTLINED_FUNCTION_10_51();
  specialized Array._endMutation()();
  id v149 = v147;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_2_82();
  if (v96) {
    OUTLINED_FUNCTION_1_98();
  }
  OUTLINED_FUNCTION_11_40();
  specialized Array._endMutation()();

  id v303 = a24;
  if (!a24) {
    goto LABEL_65;
  }
  id v150 = a24;
  id v151 = objc_msgSend(v150, sel_heightAnchor);
  id v152 = v338;
  id v153 = objc_msgSend(v338, sel_heightAnchor);
  id v154 = OUTLINED_FUNCTION_8_51((uint64_t)v153, sel_constraintEqualToAnchor_);

  id v155 = objc_msgSend(v150, sel_widthAnchor);
  id v156 = OUTLINED_FUNCTION_7_70((uint64_t)objc_msgSend(v152, sel_widthAnchor));

  id v157 = objc_msgSend(v150, sel_bottomAnchor);
  id v158 = OUTLINED_FUNCTION_7_70((uint64_t)objc_msgSend(v152, sel_bottomAnchor));

  id v159 = objc_msgSend(v150, sel_leadingAnchor);
  id v160 = OUTLINED_FUNCTION_7_70((uint64_t)objc_msgSend(v152, sel_leadingAnchor));

  if (v353 >> 62)
  {
    OUTLINED_FUNCTION_67_0();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_5_2();
  }
  else
  {
    OUTLINED_FUNCTION_18_40();
  }
  if (__OFADD__(v153, 4))
  {
    __break(1u);
    goto LABEL_94;
  }
  OUTLINED_FUNCTION_17_35((uint64_t)v153 + 4);
  specialized Array._endMutation()();
  id v161 = v154;
  OUTLINED_FUNCTION_23_31();
  OUTLINED_FUNCTION_2_82();
  if (v96) {
LABEL_94:
  }
    OUTLINED_FUNCTION_1_98();
  OUTLINED_FUNCTION_10_51();
  specialized Array._endMutation()();
  id v162 = v156;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_2_82();
  if (v96) {
    OUTLINED_FUNCTION_1_98();
  }
  OUTLINED_FUNCTION_11_40();
  specialized Array._endMutation()();
  id v163 = v158;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_2_82();
  if (v96) {
    OUTLINED_FUNCTION_1_98();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v164 = v160;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_2_82();
  if (v96) {
    OUTLINED_FUNCTION_1_98();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

LABEL_65:
  id v314 = a12;
  id v290 = a11;
  int v301 = v320 & 1;
  int v302 = v319 & 1;
  int v300 = a15;
  id v321 = a9;
  id v165 = objc_msgSend(v338, sel_heightAnchor);
  id v166 = objc_msgSend(v165, sel_constraintEqualToConstant_, v32);

  id v167 = v166;
  MEMORY[0x1C87733A0]();
  if (*(void *)((v353 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v353 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    OUTLINED_FUNCTION_1_98();
  }
  uint64_t v315 = a18;
  id v296 = v167;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v168 = v340;
  id v169 = objc_msgSend(v340, sel_widthAnchor);
  id v295 = objc_msgSend(v169, sel_constraintEqualToConstant_, v31);

  uint64_t v170 = (uint64_t)v322;
  outlined init with take of AspectRatio((uint64_t)v322, (uint64_t)(v341 + 16));
  outlined init with take of AspectRatio(v170, (uint64_t)v355);
  double v171 = *(double *)v355;
  double v172 = *(double *)&v355[1];
  if (v356)
  {
    double v172 = 1.0;
    double v171 = 1.0;
  }
  if (v171 > v172) {
    double v173 = v171;
  }
  else {
    double v173 = v172;
  }
  if (v172 < v171) {
    double v171 = v172;
  }
  double v174 = v173 / v171;
  id v175 = objc_msgSend(v168, sel_heightAnchor);
  id v176 = v334;
  id v177 = (char *)(v334 + 13);
  v178 = (void (*)(void, void, void))v334[13];
  uint64_t v179 = (uint64_t)v312;
  id v180 = v309;
  v178(v312, *MEMORY[0x1E4FBBEA8], v309);
  double v181 = CGFloat.rounded(_:toScale:)(v179, *(double *)&v44, v31 * v174 * 0.5);
  double v182 = v181 + v181;
  v183 = (void (*)(void))v176[1];
  uint64_t v184 = OUTLINED_FUNCTION_22_29();
  v183(v184);
  v334 = v176 + 1;
  id v294 = v183;
  id v297 = objc_msgSend(v175, (SEL)&selRef_isInRoster + 2, v182);

  static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v185 + 384))();
  static Platform.current.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v186 + 488))();
  uint64_t v187 = *MEMORY[0x1E4FBBE98];
  v178(v179, v187, v180);
  v298 = v178;
  id v299 = v177;
  double v188 = CGFloat.rounded(_:toScale:)(v179, *(double *)&v44, 138.0);
  uint64_t v189 = OUTLINED_FUNCTION_22_29();
  v183(v189);
  id v190 = v340;
  id v191 = objc_msgSend(v340, sel_widthAnchor);
  id v293 = objc_msgSend(v191, (SEL)&selRef_isInRoster + 2, v188);

  id v192 = objc_msgSend(v190, sel_heightAnchor);
  v178(v179, v187, v180);
  double v193 = CGFloat.rounded(_:toScale:)(v179, *(double *)&v44, v174 * v188);
  v194 = (void (*)(void, void))v294;
  ((void (*)(uint64_t, char **))v294)(v179, v180);
  id v320 = objc_msgSend(v192, (SEL)&selRef_isInRoster + 2, v193);

  uint64_t v195 = v339;
  double v196 = static SmallMultiwayControllerLayout.expandedLocalParticipantHeight(for:containingView:displayScale:)((uint64_t)v322, v339, v44, 0);
  id v197 = v340;
  id v198 = objc_msgSend(v340, sel_heightAnchor);
  id v319 = objc_msgSend(v198, (SEL)&selRef_isInRoster + 2, v196);

  id v199 = objc_msgSend(v197, sel_widthAnchor);
  ((void (*)(uint64_t, void, char **))v298)(v179, *MEMORY[0x1E4FBBEB0], v180);
  double v200 = CGFloat.rounded(_:toScale:)(v179, *(double *)&v44, v196 / v174 * 0.5);
  double v201 = v200 + v200;
  v194(v179, v180);
  id v202 = objc_msgSend(v199, (SEL)&selRef_isInRoster + 2, v201);
  id v291 = v202;

  id v203 = objc_msgSend(*(id *)&v197[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView], sel_bottomAnchor);
  id v204 = objc_msgSend(v197, (SEL)&selRef_canOpenURL_ + 5);
  id v205 = objc_msgSend(v203, sel_constraintEqualToAnchor_, v204);
  id v292 = v205;

  id v206 = v333;
  id v207 = objc_msgSend(v333, sel_centerYAnchor);
  id v208 = objc_msgSend(v195, sel_safeAreaLayoutGuide);
  id v209 = objc_msgSend(v208, sel_topAnchor);

  id v210 = objc_msgSend(v207, sel_constraintEqualToAnchor_, v209);
  LODWORD(v211) = 1132068864;
  objc_msgSend(v210, sel_setPriority_, v211);
  v212 = v341;
  id v214 = v295;
  id v213 = v296;
  v341[3] = v296;
  v212[4] = v214;
  id v215 = v297;
  id v216 = v293;
  v212[5] = v297;
  v212[6] = v216;
  v212[7] = v320;
  v212[8] = v202;
  v212[9] = v319;
  v212[10] = v205;
  v212[11] = v210;
  type metadata accessor for SmallMultiwayControllerLayoutFactory();
  v289[1] = swift_allocObject();
  v312 = (char *)v323;
  v334 = v338;
  id v335 = v335;
  id v338 = v337;
  v322 = v340;
  id v217 = v206;
  uint64_t v218 = (uint64_t)v326;
  v309 = v326;
  uint64_t v219 = (uint64_t)v307;
  id v299 = v307;
  id v220 = v303;
  v298 = v303;
  id v296 = v213;
  id v297 = v215;
  id v294 = v214;
  id v295 = v216;
  id v320 = v320;
  id v319 = v319;
  id v293 = v291;
  id v292 = v292;
  id v291 = v210;
  id v221 = v339;
  id v222 = (char **)v290;
  id v223 = v304;
  v326 = v217;
  *(void *)&long long v288 = v220;
  *((void *)&v288 + 1) = v217;
  v333 = v222;
  uint64_t v224 = (uint64_t)v323;
  id v323 = v223;
  uint64_t v225 = SmallMultiwayControllerLayoutFactory.init(containingView:participantListView:conversationBannerControlsAreaLayoutGuide:controlsView:gridView:localParticipantView:effectsControlsView:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:reactionsView:reactionPickerTipView:)((uint64_t)v221, (uint64_t)v334, (uint64_t)v222, (uint64_t)v338, (uint64_t)v335, (uint64_t)v322, v224, (uint64_t)v223, v288, v218, v219);
  v341[2] = v225;
  id v226 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1940]), sel_init);
  objc_msgSend(v221, sel_addLayoutGuide_, v226);
  id v337 = self;
  uint64_t v227 = swift_allocObject();
  *(_OWORD *)(v227 + 16) = v305;
  id v228 = objc_msgSend(v226, sel_leadingAnchor);
  id v229 = objc_msgSend(v221, sel_leadingAnchor);
  double v230 = static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v231 + 384))();
  static Platform.current.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v232 + 488))();
  id v233 = objc_msgSend(v228, sel_constraintEqualToAnchor_constant_, v229, v230);

  *(void *)(v227 + 32) = v233;
  id v234 = objc_msgSend(v226, sel_trailingAnchor);
  id v235 = objc_msgSend(v221, sel_trailingAnchor);
  double v236 = static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v237 + 384))();
  static Platform.current.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v238 + 488))();
  id v239 = objc_msgSend(v234, sel_constraintEqualToAnchor_constant_, v235, -v236);

  *(void *)(v227 + 40) = v239;
  id v240 = objc_msgSend(v226, sel_topAnchor);
  id v241 = objc_msgSend(v221, sel_safeAreaLayoutGuide);
  id v242 = objc_msgSend(v241, sel_topAnchor);

  id v243 = objc_msgSend(v240, sel_constraintEqualToAnchor_, v242);
  *(void *)(v227 + 48) = v243;
  id v244 = objc_msgSend(v226, sel_bottomAnchor);
  v339 = v221;
  id v245 = objc_msgSend(v221, sel_safeAreaLayoutGuide);
  id v246 = objc_msgSend(v245, sel_bottomAnchor);

  id v247 = objc_msgSend(v244, sel_constraintEqualToAnchor_, v246);
  *(void *)(v227 + 56) = v247;
  v346[0] = v227;
  specialized Array._endMutation()();
  uint64_t v306 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Array._bridgeToObjectiveC()();
  OUTLINED_FUNCTION_5_2();
  objc_msgSend(v337, sel_activateConstraints_, v247);

  char v248 = v301;
  LOBYTE(v346[0]) = v302;
  v346[1] = v332;
  char v347 = v328;
  char v249 = v300;
  char v348 = v300;
  char v349 = v301;
  char v350 = v330;
  char v351 = v329;
  __int16 v352 = v327;
  unsigned __int8 v250 = v341;
  int v251 = SmallMultiwayControllerLayoutFactory.layoutConstraints(for:using:)((unsigned __int8 *)v346, (uint64_t)v341);
  swift_beginAccess();
  v250[26] = v251;
  swift_bridgeObjectRelease();
  id v252 = v321;
  id v307 = v226;
  if (v321)
  {
    uint64_t ObjectType = swift_getObjectType();
    int v254 = *(uint64_t (**)(void, void, void, void, void))(a10 + 120);
    id v255 = v252;
    int v256 = v322;

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ViewConstraintManager>);
    uint64_t v257 = swift_allocObject();
    *(_OWORD *)(v257 + 16) = xmmword_1C3769620;
    *(void *)(v257 + 56) = ObjectType;
    *(void *)(v257 + 64) = *(void *)(a10 + 8);
    *(void *)(v257 + 32) = v255;
    id v258 = v316;
  }
  else
  {
    v345[0] = 1;
    *(void *)&long long v305 = type metadata accessor for InCallBannerViewConstraintManager();
    swift_allocObject();
    id v259 = v316;
    id v260 = v316;
    char v261 = v249;
    char v262 = v248;
    char v263 = v339;
    char v264 = v333;
    id v265 = v226;
    id v266 = v314;
    unsigned __int8 v267 = v263;
    char v248 = v262;
    char v249 = v261;
    uint64_t v268 = InCallBannerViewConstraintManager.init(layoutIdiom:containingGuide:containingView:visibleGuide:bannerView:bannerDodgingGuide:)(v345, v265, v267, v264, v260, v266);
    v269 = (uint64_t *)v289[0];
    swift_beginAccess();
    uint64_t *v269 = v268;
    swift_retain();
    id v258 = v259;
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ViewConstraintManager>);
    uint64_t v257 = swift_allocObject();
    *(_OWORD *)(v257 + 16) = xmmword_1C3769620;
    *(void *)(v257 + 56) = v305;
    *(void *)(v257 + 64) = &protocol witness table for InCallBannerViewConstraintManager;
    *(void *)(v257 + 32) = v268;
    int v256 = v322;
  }
  uint64_t *v310 = v257;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_12_44();
  char v343 = v249;
  char v344 = v248;
  OUTLINED_FUNCTION_9_57();
  swift_bridgeObjectRetain();
  double v270 = OUTLINED_FUNCTION_6_77();
  static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(v271, v272, v273, v270, v274);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_1();
  specialized Array.append<A>(contentsOf:)();
  swift_endAccess();
  v275 = v317;
  v276 = (void *)v315;
  if (v315)
  {
    if (v317)
    {
      v342[0] = 1;
      v277 = v256;
      v278 = v276;
      v322 = v278;
      v310 = v275;
      char v279 = v249;
      uint64_t v280 = static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:)(v339, v342, v338, v340, v278, v310);

      v341[22] = v280;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_12_44();
      char v343 = v279;
      char v344 = v248;
      OUTLINED_FUNCTION_9_57();
      swift_bridgeObjectRetain();
      double v281 = OUTLINED_FUNCTION_6_77();
      v276 = (void *)v315;
      static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(v282, v283, v284, v281, v285);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_1();
      id v258 = v316;
      specialized Array.append<A>(contentsOf:)();
      swift_endAccess();

      v275 = v317;
    }
  }
  v286 = v341;
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v337, sel_activateConstraints_, isa);

  return v286;
}

double static SmallMultiwayControllerLayout.localParticipantWidth(for:aspectRatio:displayScale:)(double a1, double a2)
{
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  os_log_type_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Platform.current.getter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBBEA8], v4);
  double v8 = CGFloat.rounded(_:toScale:)((uint64_t)v7, a2, (a1 + -3.0) * 0.5);
  double v9 = v8 + v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

double static SmallMultiwayControllerLayout.expandedLocalParticipantHeight(for:containingView:displayScale:)(uint64_t a1, void *a2, uint64_t a3, int a4)
{
  LODWORD(v4) = a4;
  uint64_t v8 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with take of AspectRatio(a1, (uint64_t)&v39);
  if (((v41 & 1) != 0 || ((double v12 = v39, v13 = v40, v39 == 1.0) ? (v14 = v40 == 1.0) : (v14 = 0), v14))
    && ((outlined init with take of AspectRatio(a1, (uint64_t)v35), (v38 & 1) != 0)
     || ((double v12 = v36, v13 = v37, v36 == 1.0) ? (v15 = v37 == 1.0) : (v15 = 0), v15)))
  {
    objc_msgSend(a2, sel_frame);
    double Width = CGRectGetWidth(v43);
    double v26 = static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v27 = static Defaults.shared;
    (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
    uint64_t v28 = static Platform.current.getter();
    (*(void (**)(uint64_t))(*(void *)v27 + 488))(v28);
    double v24 = Width - (v26 + v26);
  }
  else
  {
    int v34 = v4;
    uint64_t v4 = a3;
    objc_msgSend(a2, sel_safeAreaInsetFrame, v12, v13);
    double Height = CGRectGetHeight(v42);
    static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v17 = static Defaults.shared;
    id v18 = (void (**)(double))(*(void *)static Defaults.shared + 384);
    uint64_t v19 = *v18;
    ((void (*)(void))*v18)();
    uint64_t v20 = static Platform.current.getter();
    uint64_t v21 = *(void (**)(uint64_t))(*(void *)v17 + 488);
    v21(v20);
    double v22 = static Layout.MediaPip.padding.getter();
    v19(v22);
    uint64_t v23 = static Platform.current.getter();
    v21(v23);
    double v24 = Height + -157.0 + -100.0;
    a3 = v4;
    LOBYTE(v4) = v34;
  }
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBBEB0], v8);
  if (v4) {
    objc_msgSend(a2, sel_displayScale);
  }
  else {
    double v29 = *(double *)&a3;
  }
  double v30 = CGFloat.rounded(_:toScale:)((uint64_t)v11, v29, v24 * 0.5);
  double v31 = v30 + v30;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v31;
}

uint64_t SmallMultiwayControllerLayout.handlesLocalParticipantConstraints.getter()
{
  return *(unsigned __int8 *)(v0 + 216);
}

uint64_t SmallMultiwayControllerLayout.bannerViewConstraintManager.getter()
{
  return swift_retain();
}

id SmallMultiwayControllerLayout.localParticipantViewRegularWidth.getter()
{
  return objc_msgSend(*(id *)(v0 + 32), sel_constant);
}

void SmallMultiwayControllerLayout.update(for:with:deviceOrientation:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3_2();
  type metadata accessor for MultiwayViewConstraintsController();
  v16.origin.x = a1;
  v16.origin.y = a2;
  v16.size.width = a3;
  v16.size.height = a4;
  CGRectGetWidth(v16);
  SmallMultiwayControllerLayout.displayScale.getter();
  static MultiwayViewConstraintsController.listItemWidth(for:displayScale:configurableRosterCellWidth:)(0, 1);
  double v11 = v10;
  objc_msgSend(*(id *)(v4 + 24), sel_setConstant_);
  double v12 = *(void **)(v4 + 32);
  outlined init with take of AspectRatio(v5 + 128, (uint64_t)v15);
  id v13 = v12;
  SmallMultiwayControllerLayout.displayScale.getter();
  objc_msgSend(v13, sel_setConstant_, static SmallMultiwayControllerLayout.localParticipantWidth(for:aspectRatio:displayScale:)(v11, v14));

  SmallMultiwayControllerLayout.updateLocalParticipantHeightContraints()();
}

void SmallMultiwayControllerLayout.updateLocalParticipantHeightContraints()()
{
  uint64_t v1 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  SmallMultiwayControllerLayout.displayScale.getter();
  double v6 = v5;
  double v7 = 1.0;
  double v8 = 1.0;
  if ((*(unsigned char *)(v0 + 160) & 1) == 0)
  {
    double v8 = *(double *)(v0 + 128);
    double v7 = *(double *)(v0 + 136);
  }
  if (v8 > v7) {
    double v9 = v8;
  }
  else {
    double v9 = v7;
  }
  if (v7 >= v8) {
    double v7 = v8;
  }
  double v10 = v9 / v7;
  double v11 = *(void **)(v0 + 32);
  id v12 = *(id *)(v0 + 40);
  objc_msgSend(v11, sel_constant);
  double v14 = v10 * v13;
  (*(void (**)(unsigned char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBBEA8], v1);
  double v15 = CGFloat.rounded(_:toScale:)((uint64_t)v4, v6, v14 * 0.5);
  double v16 = v15 + v15;
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v12, sel_setConstant_, v16);

  outlined init with take of AspectRatio(v0 + 128, (uint64_t)v18);
  SmallMultiwayControllerLayout.updateEnlargedAndExpandedLocalParticipantConstraints(with:)((uint64_t)v18);
}

void SmallMultiwayControllerLayout.update(localParticipantAspectRatio:layoutState:)(uint64_t a1)
{
  outlined init with take of AspectRatio(a1, v1 + 128);
  SmallMultiwayControllerLayout.updateLocalParticipantHeightContraints()();
}

Swift::Void __swiftcall SmallMultiwayControllerLayout.update(isDisplayedInBanner:containingView:)(Swift::Bool isDisplayedInBanner, UIView *containingView)
{
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_2();
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  double v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *double v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E4FBCBE8], v6);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v11, v6);
  if (v12)
  {
    double v13 = (void *)MEMORY[0x1C8776240](v3 + 184);
    if (v13)
    {
      double v14 = v13;
      objc_msgSend(v13, sel_setFrame_, static ViewControllerLayout.participantLabelsViewFrame(isDisplayedInBanner:isDisplayedInAmbient:containingView:participantLabelsView:)(isDisplayedInBanner, 0, containingView, v13));
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SmallMultiwayControllerLayout.addEffectsConstraints(with:controlsView:localParticipantView:effectsView:effectsBrowserView:)(UIView *with, UIView *controlsView, UIView_optional *localParticipantView, UIView *effectsView, UIView *effectsBrowserView)
{
  OUTLINED_FUNCTION_3_2();
  char v11 = 1;
  *(void *)(v5 + 176) = static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:)(v6, &v11, v7, v8, v9, v10);
  swift_bridgeObjectRelease();
}

void SmallMultiwayControllerLayout.updateLayoutWith(_:)()
{
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_3_2();
  unsigned __int8 v3 = *(unsigned char *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  char v5 = *(unsigned char *)(v2 + 16);
  char v6 = *(unsigned char *)(v2 + 17);
  char v24 = *(unsigned char *)(v2 + 19);
  char v21 = *(unsigned char *)(v2 + 20);
  char v22 = *(unsigned char *)(v2 + 18);
  char v19 = *(unsigned char *)(v2 + 22);
  char v20 = *(unsigned char *)(v2 + 21);
  id v23 = self;
  swift_beginAccess();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_deactivateConstraints_, isa);

  v25[0] = v3;
  uint64_t v26 = v4;
  char v27 = v5;
  char v28 = v6;
  char v29 = v22;
  char v30 = v24;
  char v31 = v21;
  char v32 = v20;
  char v33 = v19;
  *(void *)(v1 + 208) = SmallMultiwayControllerLayoutFactory.layoutConstraints(for:using:)(v25, v1);
  swift_bridgeObjectRelease();
  v25[0] = v3;
  uint64_t v26 = v4;
  char v27 = v5;
  char v28 = v6;
  char v29 = v22;
  char v30 = v24;
  OUTLINED_FUNCTION_21_28();
  double v8 = OUTLINED_FUNCTION_6_77();
  static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(v9, v10, v11, v8, v12);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_1();
  specialized Array.append<A>(contentsOf:)();
  swift_endAccess();
  v25[0] = v3;
  uint64_t v26 = v4;
  char v27 = v5;
  char v28 = v6;
  char v29 = v22;
  char v30 = v24;
  OUTLINED_FUNCTION_21_28();
  double v13 = OUTLINED_FUNCTION_6_77();
  static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(v14, v15, v16, v13, v17);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_1();
  specialized Array.append<A>(contentsOf:)();
  swift_endAccess();
  swift_bridgeObjectRetain();
  Class v18 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_activateConstraints_, v18);
}

Swift::Void __swiftcall SmallMultiwayControllerLayout.updateShutterButton(with:)(ConversationKit::MultiwayViewConstraintsController::ShutterButtonState with)
{
  uint64_t v2 = *(void **)(v1 + 112);
  if (with)
  {
    if (!v2) {
      return;
    }
    uint64_t v4 = (void *)MEMORY[0x1C8776240](v1 + 192);
    id v12 = v2;
    if (v4)
    {
      objc_msgSend(v4, sel_frame);
      OUTLINED_FUNCTION_38();

      v14.origin.x = OUTLINED_FUNCTION_41();
      double v5 = CGRectGetWidth(v14) + -20.0 + -50.0;
    }
    else
    {
      double v5 = -70.0;
    }
    static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    char v6 = (void (**)(double))(*(void *)static Defaults.shared + 384);
    uint64_t v7 = *v6;
    ((void (*)(void))*v6)();
    static Platform.current.getter();
    OUTLINED_FUNCTION_3_2();
    uint64_t v9 = *(void (**)(void))(v8 + 488);
    v9();
    double v10 = static Layout.MediaPip.padding.getter();
    v7(v10);
    uint64_t v11 = static Platform.current.getter();
    ((void (*)(uint64_t))v9)(v11);
    objc_msgSend(v12, sel_setConstant_, v5);
  }
  else
  {
    if (!v2) {
      return;
    }
    id v12 = v2;
    static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
    static Platform.current.getter();
    OUTLINED_FUNCTION_3_2();
    (*(void (**)(void))(v3 + 488))();
    objc_msgSend(v12, sel_setConstant_, 20.0);
  }
}

Swift::Void __swiftcall SmallMultiwayControllerLayout.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:)(CGPoint forPosition, Swift::Bool withSnapping)
{
  double y = forPosition.y;
  uint64_t v6 = MEMORY[0x1C8776240](v2 + 192, (__n128)__PAIR128__(v5, *(unint64_t *)&forPosition.x));
  if (!v6) {
    return;
  }
  uint64_t v7 = (void *)v6;
  if (!withSnapping)
  {
LABEL_9:
    id v19 = *(id *)(v2 + 88);
    objc_msgSend(OUTLINED_FUNCTION_25_28(), sel_layoutFrame);
    OUTLINED_FUNCTION_24_27();
    objc_msgSend(v19, sel_setConstant_, y - OUTLINED_FUNCTION_19_33());

    goto LABEL_10;
  }
  id v8 = OUTLINED_FUNCTION_25_28();
  objc_msgSend(v8, sel_layoutFrame);
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;

  double v15 = OUTLINED_FUNCTION_19_33();
  if (one-time initialization token for bubbleSnapDistance != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (v15 + *(double *)&static Layout.Captions.bubbleSnapDistance <= y)
  {
    objc_msgSend(OUTLINED_FUNCTION_25_28(), sel_layoutFrame);
    OUTLINED_FUNCTION_24_27();
    v27.origin.x = v15;
    v27.origin.double y = v10;
    v27.size.width = v12;
    v27.size.height = v14;
    if (CGRectGetMaxY(v27) - *(double *)&static Layout.Captions.bubbleSnapDistance < y)
    {
      id v16 = *(id *)(v2 + 88);
      id v17 = OUTLINED_FUNCTION_25_28();
      objc_msgSend(v17, sel_layoutFrame);
      OUTLINED_FUNCTION_38();

      v28.origin.x = OUTLINED_FUNCTION_41();
      objc_msgSend(v16, sel_setConstant_, CGRectGetMaxY(v28));

      int v18 = 1;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  objc_msgSend(*(id *)(v2 + 88), sel_setConstant_, 0.0);
LABEL_10:
  int v18 = 0;
LABEL_11:
  char v20 = *(void **)(v2 + 96);
  if (v20)
  {
    char v21 = *(void **)(v2 + 104);
    if (v21)
    {
      id v22 = v20;
      id v23 = v21;
      if (v18) {
        *(float *)&double v24 = 1.0;
      }
      else {
        *(float *)&double v24 = 1000.0;
      }
      if (v18) {
        float v25 = 1000.0;
      }
      else {
        float v25 = 1.0;
      }
      objc_msgSend(v22, sel_setPriority_, v24);
      *(float *)&double v26 = v25;
      objc_msgSend(v23, sel_setPriority_, v26);
    }
  }
}

Swift::Void __swiftcall SmallMultiwayControllerLayout.resetCaptionsBubbleViewConstraints()()
{
  objc_msgSend(*(id *)(v0 + 88), sel_setConstant_, 0.0);
}

Swift::Void __swiftcall SmallMultiwayControllerLayout.removeEffectsConstraints()()
{
  *(void *)(v0 + 176) = 0;
  swift_bridgeObjectRelease();
}

void SmallMultiwayControllerLayout.updateEnlargedAndExpandedLocalParticipantConstraints(with:)(uint64_t a1)
{
  uint64_t v2 = (id *)v1;
  outlined init with take of AspectRatio(a1, (uint64_t)v37);
  double v4 = v38;
  uint64_t v5 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = (void *)MEMORY[0x1C8776240](v1 + 192);
  if (v9)
  {
    double v36 = v9;
    SmallMultiwayControllerLayout.displayScale.getter();
    uint64_t v11 = v10;
    outlined init with take of AspectRatio(a1, (uint64_t)v41);
    double v12 = v41[0];
    if (v42) {
      double v13 = 1.0;
    }
    else {
      double v13 = v4;
    }
    if (v42) {
      double v12 = 1.0;
    }
    if (v12 > v13) {
      double v14 = v12;
    }
    else {
      double v14 = v13;
    }
    outlined init with take of AspectRatio(a1, (uint64_t)v39);
    double v15 = v39[0];
    if (v40) {
      double v16 = 1.0;
    }
    else {
      double v16 = v4;
    }
    if (v40) {
      double v15 = 1.0;
    }
    if (v16 < v15) {
      double v15 = v16;
    }
    double v17 = v14 / v15;
    int v18 = *(void **)(v1 + 48);
    id v19 = v2[7];
    objc_msgSend(v18, sel_constant);
    double v21 = v17 * v20;
    uint64_t v22 = *MEMORY[0x1E4FBBE98];
    int v34 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
    v34(v8, v22, v5);
    double v23 = CGFloat.rounded(_:toScale:)((uint64_t)v8, *(double *)&v11, v21);
    uint64_t v35 = *(void (**)(char *, uint64_t))(v6 + 8);
    v35(v8, v5);
    objc_msgSend(v19, sel_setConstant_, v23);

    id v24 = v2[9];
    uint64_t v25 = a1;
    double v26 = v36;
    objc_msgSend(v24, sel_setConstant_, static SmallMultiwayControllerLayout.expandedLocalParticipantHeight(for:containingView:displayScale:)(v25, v36, v11, 0));

    id v27 = v2[9];
    id v28 = v2[8];
    objc_msgSend(v27, sel_constant);
    double v30 = v29 / v17;
    v34(v8, *MEMORY[0x1E4FBBEB0], v5);
    double v31 = CGFloat.rounded(_:toScale:)((uint64_t)v8, *(double *)&v11, v30 * 0.5);
    double v32 = v31 + v31;
    v35(v8, v5);
    objc_msgSend(v28, sel_setConstant_, v32);
  }
}

BOOL SmallMultiwayControllerLayout.localParticipantViewIsAtBottom(for:)(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 17);
  if (!(v1 >> 6)) {
    return (v1 & 0xFE) == 2;
  }
  if (v1 >> 6 == 1)
  {
    LOBYTE(v1) = v1 & 0x3F;
    return (v1 & 0xFE) == 2;
  }
  return 0;
}

id *SmallMultiwayControllerLayout.deinit()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t SmallMultiwayControllerLayout.__deallocating_deinit()
{
  SmallMultiwayControllerLayout.deinit();
  return swift_deallocClassInstance();
}

void protocol witness for ViewControllerLayout.update(for:with:deviceOrientation:) in conformance SmallMultiwayControllerLayout(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
}

void protocol witness for ViewControllerLayout.update(localParticipantAspectRatio:layoutState:) in conformance SmallMultiwayControllerLayout(uint64_t a1)
{
}

void protocol witness for ViewControllerLayout.update(isDisplayedInBanner:containingView:) in conformance SmallMultiwayControllerLayout(Swift::Bool a1, UIView *a2)
{
}

void protocol witness for ViewControllerLayout.addEffectsConstraints(with:controlsView:localParticipantView:effectsView:effectsBrowserView:) in conformance SmallMultiwayControllerLayout(UIView *a1, UIView *a2, UIView_optional *a3, UIView *a4, UIView *a5)
{
}

void protocol witness for ViewControllerLayout.updateLayoutWith(_:) in conformance SmallMultiwayControllerLayout()
{
}

void protocol witness for ViewControllerLayout.updateShutterButton(with:) in conformance SmallMultiwayControllerLayout(char a1)
{
}

void protocol witness for ViewControllerLayout.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:) in conformance SmallMultiwayControllerLayout(Swift::Bool a1, double a2, double a3)
{
}

void protocol witness for ViewControllerLayout.resetCaptionsBubbleViewConstraints() in conformance SmallMultiwayControllerLayout()
{
}

void protocol witness for ViewControllerLayout.removeEffectsConstraints() in conformance SmallMultiwayControllerLayout()
{
}

uint64_t protocol witness for ViewControllerLayout.handlesLocalParticipantConstraints.getter in conformance SmallMultiwayControllerLayout()
{
  return SmallMultiwayControllerLayout.handlesLocalParticipantConstraints.getter() & 1;
}

uint64_t protocol witness for ViewControllerLayout.bannerViewConstraintManager.getter in conformance SmallMultiwayControllerLayout()
{
  return SmallMultiwayControllerLayout.bannerViewConstraintManager.getter();
}

id protocol witness for ViewControllerLayout.localParticipantViewRegularWidth.getter in conformance SmallMultiwayControllerLayout()
{
  return SmallMultiwayControllerLayout.localParticipantViewRegularWidth.getter();
}

uint64_t type metadata accessor for SmallMultiwayControllerLayoutFactory()
{
  return self;
}

uint64_t type metadata accessor for SmallMultiwayControllerLayout()
{
  return self;
}

uint64_t method lookup function for SmallMultiwayControllerLayout(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SmallMultiwayControllerLayout);
}

uint64_t dispatch thunk of SmallMultiwayControllerLayout.__allocating_init(containingView:participantListView:participantListState:gridView:participantGridState:controlsViewController:inCallControlsState:inCallBannerHostViewController:callControlsViewController:inCallBannerControlsAreaLayoutGuide:inCallBannerDodgingLayoutGuide:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(v5 + 264))(a1, a2, a3 & 1, a4, a5 & 1);
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState()
{
  unint64_t result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState);
  }
  return result;
}

uint64_t AccessibilityVoiceOverModifier.toSpeak.getter(uint64_t a1)
{
  return a1;
}

uint64_t AccessibilityVoiceOverModifier.voiceOverEnabled.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = a4 & 1;
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a3, a4 & 1);
  specialized Environment.wrappedValue.getter();
  char v7 = v6;
  outlined consume of Environment<CGFloat>.Content(a3, v5);
  return v7 & 1;
}

uint64_t AccessibilityVoiceOverModifier.body(content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  OUTLINED_FUNCTION_0_81();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v5;
  *(void *)(v11 + 32) = a4;
  char v12 = a5 & 1;
  *(unsigned char *)(v11 + 40) = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<AccessibilityVoiceOverModifier>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v7, v13);
  double v14 = (void (**)())(v8
                    + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<AccessibilityVoiceOverModifier>, _AppearanceActionModifier>)
                             + 36));
  *double v14 = partial apply for closure #1 in AccessibilityVoiceOverModifier.body(content:);
  v14[1] = (void (*)())v11;
  v14[2] = 0;
  v14[3] = 0;
  swift_bridgeObjectRetain();
  return outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a4, v12);
}

void closure #1 in AccessibilityVoiceOverModifier.body(content:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7 = a4 & 1;
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a3, a4 & 1);
  specialized Environment.wrappedValue.getter();
  char v9 = v8;
  outlined consume of Environment<CGFloat>.Content(a3, v7);
  if (v9)
  {
    UIAccessibilityNotifications v10 = *MEMORY[0x1E4FB2418];
    id v11 = (id)MEMORY[0x1C87730B0](a1, a2);
    UIAccessibilityPostNotification(v10, v11);
  }
}

uint64_t sub_1C326891C()
{
  swift_bridgeObjectRelease();
  outlined consume of Environment<CGFloat>.Content(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return swift_deallocObject();
}

void partial apply for closure #1 in AccessibilityVoiceOverModifier.body(content:)()
{
  closure #1 in AccessibilityVoiceOverModifier.body(content:)(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t default argument 1 of AccessibilityVoiceOverModifier.init(toSpeak:voiceOverEnabled:)()
{
  return swift_getKeyPath();
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance AccessibilityVoiceOverModifier(uint64_t a1)
{
  return AccessibilityVoiceOverModifier.body(content:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t View.voiceOver(toSpeak:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_0_81();
  uint64_t v9 = v6;
  uint64_t v10 = v5;
  uint64_t KeyPath = swift_getKeyPath();
  char v12 = 0;
  MEMORY[0x1C87723E0](&v9, v4, &type metadata for AccessibilityVoiceOverModifier, a4);
  return swift_release();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in AccessibilityVoiceOverModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for AccessibilityVoiceOverModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  return outlined consume of Environment<CGFloat>.Content(v2, v3);
}

uint64_t initializeWithCopy for AccessibilityVoiceOverModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, v5);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for AccessibilityVoiceOverModifier(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[2];
  LOBYTE(v2) = *((unsigned char *)v2 + 24);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = (_BYTE)v2;
  outlined consume of Environment<CGFloat>.Content(v5, v6);
  return a1;
}

uint64_t assignWithTake for AccessibilityVoiceOverModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilityVoiceOverModifier(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilityVoiceOverModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityVoiceOverModifier()
{
  return &type metadata for AccessibilityVoiceOverModifier;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<AccessibilityVoiceOverModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<AccessibilityVoiceOverModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<AccessibilityVoiceOverModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<AccessibilityVoiceOverModifier>, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type _ViewModifier_Content<AccessibilityVoiceOverModifier> and conformance _ViewModifier_Content<A>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<AccessibilityVoiceOverModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ViewModifier_Content<AccessibilityVoiceOverModifier> and conformance _ViewModifier_Content<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ViewModifier_Content<AccessibilityVoiceOverModifier> and conformance _ViewModifier_Content<A>;
  if (!lazy protocol witness table cache variable for type _ViewModifier_Content<AccessibilityVoiceOverModifier> and conformance _ViewModifier_Content<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ViewModifier_Content<AccessibilityVoiceOverModifier>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ViewModifier_Content<AccessibilityVoiceOverModifier> and conformance _ViewModifier_Content<A>);
  }
  return result;
}

uint64_t sub_1C3268D18()
{
  return swift_getWitnessTable();
}

unint64_t lazy protocol witness table accessor for type AccessibilityVoiceOverModifier and conformance AccessibilityVoiceOverModifier()
{
  unint64_t result = lazy protocol witness table cache variable for type AccessibilityVoiceOverModifier and conformance AccessibilityVoiceOverModifier;
  if (!lazy protocol witness table cache variable for type AccessibilityVoiceOverModifier and conformance AccessibilityVoiceOverModifier)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AccessibilityVoiceOverModifier and conformance AccessibilityVoiceOverModifier);
  }
  return result;
}

uint64_t PreCallButtonsViewModel.currentPreCallContext.getter()
{
  PreCallButtonsViewModel.contextSubject.getter();
  CurrentValueSubject.value.getter();
  return swift_release();
}

uint64_t PreCallButtonsViewModel.preCallDelegate.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t key path getter for PreCallButtonsViewModel.preCallDelegate : PreCallButtonsViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PreCallButtonsViewModel.preCallDelegate.getter();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t key path setter for PreCallButtonsViewModel.preCallDelegate : PreCallButtonsViewModel()
{
  return PreCallButtonsViewModel.preCallDelegate.setter();
}

uint64_t PreCallButtonsViewModel.preCallDelegate.setter()
{
  return swift_unknownObjectRelease();
}

uint64_t PreCallButtonsViewModel.preCallDelegate.init@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t PreCallButtonsViewModel.access<A>(keyPath:)()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t closure #1 in PreCallButtonsViewModel.preCallDelegate.setter(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  a1[2] = a2;
  a1[3] = a3;
  a1[4] = a4;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t specialized PreCallButtonsViewModel.withMutation<A, B>(keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t PreCallButtonsViewModel.withMutation<A, B>(keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void (*PreCallButtonsViewModel.preCallDelegate.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_getKeyPath();
  v3[4] = OBJC_IVAR____TtC15ConversationKit23PreCallButtonsViewModel___observationRegistrar;
  *uint64_t v3 = v1;
  v3[5] = lazy protocol witness table accessor for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return PreCallButtonsViewModel.preCallDelegate.modify;
}

void PreCallButtonsViewModel.preCallDelegate.modify(void **a1)
{
  uint64_t v1 = *a1;
  swift_endAccess();
  void *v1 = v1[3];
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  free(v1);
}

uint64_t PreCallButtonsViewModel.__allocating_init(preCallDelegate:)()
{
  uint64_t v0 = swift_allocObject();
  PreCallButtonsViewModel.init(preCallDelegate:)();
  return v0;
}

void *PreCallButtonsViewModel.init(preCallDelegate:)()
{
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<PreCallControlsContext?, Never>);
  swift_allocObject();
  v0[5] = CurrentValueSubject.init(_:)();
  ObservationRegistrar.init()();
  PreCallButtonsViewModel.preCallDelegate.setter();
  return v0;
}

uint64_t PreCallButtonsViewModel.contextSubject.init@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t PreCallButtonsViewModel.contextSubject.setter()
{
  return swift_release();
}

uint64_t PreCallButtonsViewModel.contextSubject.getter()
{
  return swift_retain();
}

unint64_t lazy protocol witness table accessor for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel()
{
  unint64_t result = lazy protocol witness table cache variable for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel;
  if (!lazy protocol witness table cache variable for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel)
  {
    type metadata accessor for PreCallButtonsViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel);
  }
  return result;
}

uint64_t type metadata accessor for PreCallButtonsViewModel()
{
  uint64_t result = type metadata singleton initialization cache for PreCallButtonsViewModel;
  if (!type metadata singleton initialization cache for PreCallButtonsViewModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t partial apply for closure #1 in PreCallButtonsViewModel.preCallDelegate.setter()
{
  return closure #1 in PreCallButtonsViewModel.preCallDelegate.setter(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t PreCallButtonsViewModel.preCallContexts.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<PreCallControlsContext?, Never>>);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[1] = PreCallButtonsViewModel.contextSubject.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<PreCallControlsContext?, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<PreCallControlsContext?, Never>);
  lazy protocol witness table accessor for type PreCallControlsContext? and conformance <A> A?();
  Publisher<>.removeDuplicates()();
  swift_release();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<PreCallControlsContext?, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<PreCallControlsContext?, Never>>);
  uint64_t v4 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void PreCallButtonsViewModel.setPreCallContext(_:)(void **a1)
{
  uint64_t v1 = *a1;
  PreCallButtonsViewModel.contextSubject.getter();
  outlined copy of PreCallControlsContext(v1);
  CurrentValueSubject.send(_:)();
  swift_release();
  outlined consume of PreCallControlsContext(v1);
}

Swift::Void __swiftcall PreCallButtonsViewModel.clearPreCallContext()()
{
}

uint64_t key path setter for PreCallButtonsViewModel.contextSubject : PreCallButtonsViewModel()
{
  return PreCallButtonsViewModel.contextSubject.setter();
}

uint64_t closure #1 in PreCallButtonsViewModel.contextSubject.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = a2;
  swift_retain();
  return swift_release();
}

uint64_t PreCallButtonsViewModel.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit23PreCallButtonsViewModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t PreCallButtonsViewModel.__deallocating_deinit()
{
  PreCallButtonsViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for PreCallContextProviding.currentPreCallContext.getter in conformance PreCallButtonsViewModel()
{
  return PreCallButtonsViewModel.currentPreCallContext.getter();
}

uint64_t protocol witness for PreCallContextProviding.preCallContexts.getter in conformance PreCallButtonsViewModel()
{
  return PreCallButtonsViewModel.preCallContexts.getter();
}

void protocol witness for PreCallContextProviding.setPreCallContext(_:) in conformance PreCallButtonsViewModel(void **a1)
{
}

void protocol witness for PreCallContextProviding.clearPreCallContext() in conformance PreCallButtonsViewModel()
{
}

uint64_t ObjC metadata update function for PreCallButtonsViewModel()
{
  return type metadata accessor for PreCallButtonsViewModel();
}

uint64_t type metadata completion function for PreCallButtonsViewModel()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PreCallButtonsViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PreCallButtonsViewModel);
}

uint64_t dispatch thunk of PreCallButtonsViewModel.__allocating_init(preCallDelegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C3269A8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PreCallButtonsViewModel.contextSubject.getter();
  *a1 = result;
  return result;
}

uint64_t partial apply for closure #1 in PreCallButtonsViewModel.contextSubject.setter()
{
  return closure #1 in PreCallButtonsViewModel.contextSubject.setter(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

Swift::Void __swiftcall UIActivityViewController.setHeader(_:)(UIViewController *a1)
{
  objc_msgSend(v1, sel_setCustomViewController_, a1);
  objc_msgSend(v1, sel_setHideHeaderView_, 1);
}

uint64_t dispatch thunk of RecentCallDetailControllerFactoryProtocol.makeRecentCallDetailController(forRecentsCallItem:customInfoButtonAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of RecentCallDetailControllerFactoryProtocol.makeContactDetailController(forContact:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of RecentCallDetailControllerFactoryProtocol.makeUnknownContactDetailController(forContact:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of RecentCallDetailControllerFactoryProtocol.makeDetailControllerForRecentCall(_:recentCallTitle:customInfoButtonAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

id UIHostingAutoResizableController.__allocating_init(rootView:canShowWhileLocked:)(uint64_t a1, char a2)
{
  id v5 = objc_allocWithZone(v2);
  return UIHostingAutoResizableController.init(rootView:canShowWhileLocked:)(a1, a2);
}

uint64_t UIHostingAutoResizableController.lastViewSize.getter()
{
  OUTLINED_FUNCTION_0_3();
  return *(void *)(v0 + *(void *)(class metadata base offset for UIHostingAutoResizableController + v1 + 16));
}

void UIHostingAutoResizableController.lastViewSize.setter()
{
  OUTLINED_FUNCTION_0_3();
  uint64_t v2 = v0 + *(void *)(class metadata base offset for UIHostingAutoResizableController + v1 + 16);
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v4;
  *(unsigned char *)(v2 + 16) = v5 & 1;
}

id UIHostingAutoResizableController.init(rootView:canShowWhileLocked:)(uint64_t a1, char a2)
{
  uint64_t v23 = a1;
  OUTLINED_FUNCTION_0_3();
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for UIHostingControllerSizingOptions();
  v22[1] = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = *(void *)(v6 + class metadata base offset for UIHostingAutoResizableController);
  OUTLINED_FUNCTION_5_3();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v22 - v12;
  uint64_t v15 = v2 + *(void *)(v14 + 16);
  *(void *)uint64_t v15 = 0;
  *(void *)(v15 + 8) = 0;
  *(unsigned char *)(v15 + 16) = 1;
  OUTLINED_FUNCTION_0_3();
  *(unsigned char *)(v2 + *(void *)(*(void *)(v16 + 456) + v17 + 24)) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v8);
  int v18 = (void *)UIHostingController.init(rootView:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIHostingControllerSizingOptions>);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C37696D0;
  id v20 = v18;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  static UIHostingControllerSizingOptions.preferredContentSize.getter();
  uint64_t v24 = v19;
  lazy protocol witness table accessor for type UIHostingControllerSizingOptions and conformance UIHostingControllerSizingOptions();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UIHostingControllerSizingOptions]);
  lazy protocol witness table accessor for type [UIHostingControllerSizingOptions] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  dispatch thunk of UIHostingController.sizingOptions.setter();

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v23, v8);
  return v20;
}

unint64_t lazy protocol witness table accessor for type [UIHostingControllerSizingOptions] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [UIHostingControllerSizingOptions] and conformance [A];
  if (!lazy protocol witness table cache variable for type [UIHostingControllerSizingOptions] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [UIHostingControllerSizingOptions]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [UIHostingControllerSizingOptions] and conformance [A]);
  }
  return result;
}

void UIHostingAutoResizableController.init(coder:)()
{
  OUTLINED_FUNCTION_0_3();
  uint64_t v2 = &v0[*(void *)(class metadata base offset for UIHostingAutoResizableController + v1 + 16)];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  v2[16] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void @objc UIHostingAutoResizableController.init(coder:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  UIHostingAutoResizableController.init(coder:)();
}

Swift::Void __swiftcall UIHostingAutoResizableController.viewDidLayoutSubviews()()
{
  OUTLINED_FUNCTION_0_3();
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for UIHostingAutoResizableController();
  objc_msgSendSuper2(&v16, sel_viewDidLayoutSubviews);
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v2 = v1;
  objc_msgSend(v1, sel_frame);
  double v4 = v3;
  double v6 = v5;

  double v7 = COERCE_DOUBLE(UIHostingAutoResizableController.lastViewSize.getter());
  if ((v9 & 1) != 0 || (v4 == v7 ? (BOOL v10 = v6 == v8) : (BOOL v10 = 0), !v10))
  {
    id v11 = objc_msgSend(v0, sel_view);
    if (v11)
    {
      uint64_t v12 = v11;
      objc_msgSend(v11, sel_frame);

      UIHostingAutoResizableController.lastViewSize.setter();
      id v13 = objc_msgSend(v0, sel_parentViewController);
      if (!v13) {
        return;
      }
      uint64_t v14 = v13;
      id v15 = objc_msgSend(v13, sel_view);

      if (v15)
      {
        objc_msgSend(v15, sel_setNeedsLayout);

        return;
      }
LABEL_14:
      __break(1u);
      return;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
}

uint64_t type metadata accessor for UIHostingAutoResizableController()
{
  return __swift_instantiateGenericMetadata();
}

void @objc UIHostingAutoResizableController.viewDidLayoutSubviews()(void *a1)
{
  id v1 = a1;
  UIHostingAutoResizableController.viewDidLayoutSubviews()();
}

Swift::Bool __swiftcall UIHostingAutoResizableController._canShowWhileLocked()()
{
  OUTLINED_FUNCTION_0_3();
  return *(unsigned char *)(v0 + *(void *)(class metadata base offset for UIHostingAutoResizableController + v1 + 24));
}

BOOL @objc UIHostingAutoResizableController._canShowWhileLocked()()
{
  return UIHostingAutoResizableController._canShowWhileLocked()();
}

void UIHostingAutoResizableController.__allocating_init(rootView:)()
{
  id v1 = objc_allocWithZone(v0);
  UIHostingAutoResizableController.init(rootView:)();
}

void UIHostingAutoResizableController.init(rootView:)()
{
}

void UIHostingAutoResizableController.__allocating_init(coder:rootView:)()
{
  id v1 = objc_allocWithZone(v0);
  UIHostingAutoResizableController.init(coder:rootView:)();
}

void UIHostingAutoResizableController.init(coder:rootView:)()
{
}

id UIHostingAutoResizableController.__deallocating_deinit()
{
  return UIHostingAutoResizableController.__deallocating_deinit(&class metadata base offset for UIHostingAutoResizableController, (uint64_t (*)(void, void, void))type metadata accessor for UIHostingAutoResizableController);
}

Swift::Void __swiftcall SelfSizingHostingView.layoutSubviews()()
{
  OUTLINED_FUNCTION_0_3();
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for SelfSizingHostingView();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  objc_msgSend(v0, sel_invalidateIntrinsicContentSize);
}

uint64_t type metadata accessor for SelfSizingHostingView()
{
  return __swift_instantiateGenericMetadata();
}

void @objc SelfSizingHostingView.layoutSubviews()(void *a1)
{
  id v1 = a1;
  SelfSizingHostingView.layoutSubviews()();
}

uint64_t SelfSizingHostingView.__allocating_init(rootView:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return SelfSizingHostingView.init(rootView:)(a1);
}

uint64_t SelfSizingHostingView.init(rootView:)(uint64_t a1)
{
  OUTLINED_FUNCTION_0_3();
  uint64_t v3 = *(void *)(v2 + class metadata base offset for SelfSizingHostingView);
  OUTLINED_FUNCTION_5_3();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - v7, a1, v3);
  uint64_t v8 = _UIHostingView.init(rootView:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  return v8;
}

id SelfSizingHostingView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id SelfSizingHostingView.init(coder:)(void *a1)
{
  OUTLINED_FUNCTION_0_3();
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SelfSizingHostingView();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id @objc SelfSizingHostingView.init(coder:)(uint64_t a1, uint64_t a2, void *a3)
{
  return SelfSizingHostingView.init(coder:)(a3);
}

id SelfSizingHostingView.__deallocating_deinit()
{
  return UIHostingAutoResizableController.__deallocating_deinit(&class metadata base offset for SelfSizingHostingView, (uint64_t (*)(void, void, void))type metadata accessor for SelfSizingHostingView);
}

id UIHostingAutoResizableController.__deallocating_deinit(void *a1, uint64_t (*a2)(void, void, void))
{
  id v3 = (objc_class *)a2(0, *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + *a1), *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + *a1 + 8));
  v5.receiver = v2;
  v5.super_class = v3;
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t type metadata completion function for UIHostingAutoResizableController()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for UIHostingAutoResizableController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UIHostingAutoResizableController);
}

uint64_t dispatch thunk of UIHostingAutoResizableController.__allocating_init(rootView:canShowWhileLocked:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UIHostingAutoResizableController + v0 + 56))();
}

uint64_t type metadata completion function for SelfSizingHostingView()
{
  return swift_initClassMetadata2();
}

uint64_t specialized Sequence.compactMap<A>(_:)(void *a1, char *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Participant(0);
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v54 = (uint64_t)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  id v13 = (char *)v41 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v43 = (uint64_t)v41 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v15 - 8);
  id v55 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a1[2];
  v41[1] = a1;
  uint64_t v42 = v2;
  v41[0] = a2;
  if (v53)
  {
    uint64_t v17 = type metadata accessor for UUID();
    uint64_t v18 = *(void *)(v17 - 8);
    id v52 = (char *)a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v19 = &a2[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants];
    uint64_t v20 = v17;
    swift_bridgeObjectRetain();
    id v46 = v19;
    swift_beginAccess();
    uint64_t v21 = 0;
    uint64_t v51 = *(void *)(v18 + 72);
    id v49 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 16);
    uint64_t v50 = v18 + 16;
    uint64_t v47 = v18;
    uint64_t v44 = (void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v45 = v18 + 32;
    uint64_t v57 = MEMORY[0x1E4FBC860];
    uint64_t v22 = (uint64_t)v55;
    uint64_t v48 = v20;
    while (1)
    {
      v49(v22, &v52[v51 * v21], v20);
      __swift_storeEnumTagSinglePayload(v22, 0, 1, v20);
      uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v22, 1, v20);
      if (EnumTagSinglePayload == 1) {
        break;
      }
      uint64_t v24 = (uint64_t)v7;
      id v58 = v41;
      MEMORY[0x1F4188790](EnumTagSinglePayload);
      double v26 = (char *)v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v26, v22, v20);
      uint64_t v28 = *(void *)(*(void *)v46 + 16);
      if (v28)
      {
        uint64_t v29 = v56;
        uint64_t v30 = *(void *)v46
            + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
        swift_bridgeObjectRetain();
        uint64_t v31 = *(void *)(v29 + 72);
        while (1)
        {
          _s15ConversationKit11ParticipantVWOcTm_5(v30, (uint64_t)v13);
          if (static UUID.== infix(_:_:)()) {
            break;
          }
          _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v13, (void (*)(void))type metadata accessor for Participant);
          v30 += v31;
          if (!--v28) {
            goto LABEL_10;
          }
        }
        uint64_t v7 = (char *)v24;
        _s15ConversationKit11ParticipantVWObTm_2((uint64_t)v13, v24);
        uint64_t v32 = v24;
        uint64_t v33 = 0;
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_10:
        uint64_t v7 = (char *)v24;
        uint64_t v32 = v24;
        uint64_t v33 = 1;
      }
      __swift_storeEnumTagSinglePayload(v32, v33, 1, v8);
      uint64_t v22 = (uint64_t)v55;
      swift_bridgeObjectRelease();
      uint64_t v20 = v48;
      (*v44)(v26, v48);
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        uint64_t v34 = v43;
        _s15ConversationKit11ParticipantVWObTm_2((uint64_t)v7, v43);
        _s15ConversationKit11ParticipantVWObTm_2(v34, v54);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v57 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v57 + 16) + 1, 1, v57);
        }
        unint64_t v36 = *(void *)(v57 + 16);
        unint64_t v35 = *(void *)(v57 + 24);
        if (v36 >= v35 >> 1) {
          uint64_t v57 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1, v57);
        }
        uint64_t v37 = v56;
        uint64_t v38 = v57;
        *(void *)(v57 + 16) = v36 + 1;
        _s15ConversationKit11ParticipantVWObTm_2(v54, v38+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v36);
      }
      if (++v21 == v53) {
        goto LABEL_22;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = MEMORY[0x1E4FBC860];
    uint64_t v22 = (uint64_t)v55;
LABEL_22:
    uint64_t v39 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload(v22, 1, 1, v39);
  }

  swift_bridgeObjectRelease();
  return v57;
}

uint64_t specialized _ArrayProtocol.filter(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v49 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v45 = v7;
  uint64_t v48 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t result = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v4;
  if (v4)
  {
    unint64_t v12 = 0;
    uint64_t v47 = (uint64_t (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v42 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v43 = v6 + 16;
    uint64_t v35 = v3;
    uint64_t v36 = a2;
    uint64_t v34 = v6;
    while (v12 < *(void *)(v3 + 16))
    {
      unint64_t v41 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v44 = *(void *)(v6 + 72);
      id v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      v13(v11, v3 + v41 + v44 * v12, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v5);
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5) == 1) {
        goto LABEL_21;
      }
      char v40 = &v33;
      id v46 = *v47;
      uint64_t v14 = v46(v48, v11, v5);
      uint64_t v38 = &v33;
      MEMORY[0x1F4188790](v14);
      uint64_t v15 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v16 = a2;
      uint64_t v17 = *(void *)(a2 + 16);
      unint64_t v39 = v12;
      if (v17)
      {
        unint64_t v18 = v16 + v41;
        swift_bridgeObjectRetain();
        while (1)
        {
          v13(v15, v18, v5);
          __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v5);
          uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v5);
          if (EnumTagSinglePayload == 1) {
            break;
          }
          MEMORY[0x1F4188790](EnumTagSinglePayload);
          uint64_t v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
          v46(v21, v15, v5);
          lazy protocol witness table accessor for type UUID and conformance UUID();
          char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v23 = *v42;
          (*v42)(v21, v5);
          if (v22)
          {
            a2 = v36;
            swift_bridgeObjectRelease();
            uint64_t v30 = ((uint64_t (*)(char *, uint64_t))v23)(v48, v5);
            uint64_t v6 = v34;
            goto LABEL_19;
          }
          v18 += v44;
          if (!--v17) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v5);
      }
      a2 = v36;
      uint64_t v24 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v24);
      double v26 = (char *)&v33 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      v46(v26, v48, v5);
      uint64_t v27 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v27 + 16) + 1, 1);
        uint64_t v27 = v49;
      }
      uint64_t v6 = v34;
      unint64_t v29 = *(void *)(v27 + 16);
      unint64_t v28 = *(void *)(v27 + 24);
      if (v29 >= v28 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
        uint64_t v27 = v49;
      }
      *(void *)(v27 + 16) = v29 + 1;
      uint64_t v30 = v46((char *)(v27 + v41 + v29 * v44), v26, v5);
      uint64_t v49 = v27;
LABEL_19:
      unint64_t v12 = v39 + 1;
      MEMORY[0x1F4188790](v30);
      uint64_t v48 = (char *)&v33 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v9 = *(void *)(*(void *)(v32 - 8) + 64);
      uint64_t result = MEMORY[0x1F4188790](v32 - 8);
      uint64_t v11 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v3 = v35;
      if (v12 == v37) {
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v5);
LABEL_21:
    swift_bridgeObjectRelease();
    outlined destroy of SystemUpdateNotice?((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    swift_bridgeObjectRelease();
    return v49;
  }
  return result;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t EnumTagSinglePayload;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  unint64_t v40;
  void (**v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, char *, uint64_t);
  uint64_t (**v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;

  uint64_t v3 = a1;
  uint64_t v48 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v43 = v7;
  uint64_t v47 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t result = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v4;
  if (v4)
  {
    unint64_t v12 = 0;
    uint64_t v44 = v6 + 16;
    id v46 = (uint64_t (**)(char *, char *, uint64_t))(v6 + 32);
    unint64_t v41 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v36 = a2;
    uint64_t v33 = v6;
    uint64_t v34 = v3;
    while (v12 < *(void *)(v3 + 16))
    {
      uint64_t v37 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      id v13 = *(void *)(v6 + 72);
      char v40 = v12;
      uint64_t v42 = v13;
      uint64_t v14 = v3 + v37 + v13 * v12;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      v15(v11, v14, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v5);
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5) == 1) {
        goto LABEL_21;
      }
      unint64_t v39 = &v32;
      uint64_t v45 = *v46;
      uint64_t v16 = v45(v47, v11, v5);
      uint64_t v38 = &v32;
      MEMORY[0x1F4188790](v16);
      uint64_t v17 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      unint64_t v18 = *(void *)(a2 + 16);
      if (v18)
      {
        uint64_t v19 = a2 + v37;
        swift_bridgeObjectRetain();
        while (1)
        {
          v15(v17, v19, v5);
          __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v5);
          uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v5);
          if (EnumTagSinglePayload == 1) {
            break;
          }
          MEMORY[0x1F4188790](EnumTagSinglePayload);
          char v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
          v45((char *)&v32 - v22, v17, v5);
          lazy protocol witness table accessor for type UUID and conformance UUID();
          uint64_t v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          (*v41)((char *)&v32 - v22, v5);
          if (v23)
          {
            double v26 = swift_bridgeObjectRelease();
            MEMORY[0x1F4188790](v26);
            v45((char *)&v32 - v22, v47, v5);
            uint64_t v27 = v48;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v27 + 16) + 1, 1);
              uint64_t v27 = v48;
            }
            uint64_t v25 = v40;
            unint64_t v29 = *(void *)(v27 + 16);
            unint64_t v28 = *(void *)(v27 + 24);
            if (v29 >= v28 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
              uint64_t v27 = v48;
            }
            *(void *)(v27 + 16) = v29 + 1;
            uint64_t v24 = v45((char *)(v27 + v37 + v29 * v42), (char *)&v32 - v22, v5);
            uint64_t v48 = v27;
            a2 = v36;
            goto LABEL_19;
          }
          v19 += v42;
          if (!--v18) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v5);
      }
      a2 = v36;
      swift_bridgeObjectRelease();
      uint64_t v24 = ((uint64_t (*)(char *, uint64_t))*v41)(v47, v5);
      uint64_t v25 = v40;
LABEL_19:
      unint64_t v12 = v25 + 1;
      MEMORY[0x1F4188790](v24);
      uint64_t v47 = (char *)&v32 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v9 = *(void *)(*(void *)(v31 - 8) + 64);
      uint64_t result = MEMORY[0x1F4188790](v31 - 8);
      uint64_t v11 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v3 = v34;
      uint64_t v6 = v33;
      if (v12 == v35) {
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v5);
LABEL_21:
    swift_bridgeObjectRelease();
    outlined destroy of SystemUpdateNotice?((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    swift_bridgeObjectRelease();
    return v48;
  }
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t EnumTagSinglePayload;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  unint64_t v45;
  void (**v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  void (**v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;

  unint64_t v39 = a2;
  uint64_t v2 = a1;
  uint64_t v53 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v48 = v6;
  id v52 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t result = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v3;
  if (v3)
  {
    uint64_t v11 = 0;
    uint64_t v49 = v5 + 16;
    uint64_t v51 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    id v46 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v36 = v2;
    uint64_t v37 = v5;
    while (v11 < *(void *)(v2 + 16))
    {
      char v40 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      unint64_t v12 = *(void *)(v5 + 72);
      uint64_t v45 = v11;
      uint64_t v47 = v12;
      id v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      v13(v10, v2 + v40 + v12 * v11, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v4);
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4) == 1) {
        goto LABEL_21;
      }
      uint64_t v44 = &v35;
      uint64_t v50 = *v51;
      v50(v52, v10, v4);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<InCallControlsCollectionViewController.CollectionViewSection, UUID>);
      uint64_t v43 = &v35;
      uint64_t v15 = *(void *)(v14 - 8);
      MEMORY[0x1F4188790](v14);
      uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v39, v14);
      unint64_t v18 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
      uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      unint64_t v41 = &v35;
      MEMORY[0x1F4188790](v19);
      uint64_t v20 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v21 = *(void *)(v18 + 16);
      uint64_t v42 = v18;
      if (v21)
      {
        char v22 = v18 + v40;
        swift_bridgeObjectRetain();
        while (1)
        {
          v13(v20, v22, v4);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v4);
          uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v4);
          if (EnumTagSinglePayload == 1) {
            break;
          }
          MEMORY[0x1F4188790](EnumTagSinglePayload);
          uint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
          v50((char *)&v35 - v25, v20, v4);
          _s10Foundation4UUIDVACSHAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
          double v26 = dispatch thunk of static Equatable.== infix(_:_:)();
          (*v46)((char *)&v35 - v25, v4);
          if (v26)
          {
            unint64_t v28 = swift_bridgeObjectRelease_n();
            MEMORY[0x1F4188790](v28);
            unint64_t v29 = (char *)&v35 - v25;
            v50((char *)&v35 - v25, v52, v4);
            uint64_t v30 = v53;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v30 + 16) + 1, 1);
              uint64_t v30 = v53;
            }
            uint64_t v5 = v37;
            uint64_t v32 = *(void *)(v30 + 16);
            uint64_t v31 = *(void *)(v30 + 24);
            if (v32 >= v31 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
              uint64_t v30 = v53;
            }
            *(void *)(v30 + 16) = v32 + 1;
            uint64_t v27 = ((uint64_t (*)(unint64_t, char *, uint64_t))v50)(v30 + v40 + v32 * v47, v29, v4);
            uint64_t v53 = v30;
            goto LABEL_19;
          }
          v22 += v47;
          if (!--v21) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        __swift_storeEnumTagSinglePayload((uint64_t)v20, 1, 1, v4);
      }
      swift_bridgeObjectRelease_n();
      uint64_t v27 = ((uint64_t (*)(char *, uint64_t))*v46)(v52, v4);
      uint64_t v5 = v37;
LABEL_19:
      uint64_t v11 = v45 + 1;
      MEMORY[0x1F4188790](v27);
      id v52 = (char *)&v35 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v8 = *(void *)(*(void *)(v34 - 8) + 64);
      uint64_t result = MEMORY[0x1F4188790](v34 - 8);
      uint64_t v10 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v2 = v36;
      if (v11 == v38) {
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v4);
LABEL_21:
    swift_bridgeObjectRelease();
    outlined destroy of SystemUpdateNotice?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    return v53;
  }
  return result;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t EnumTagSinglePayload;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  unint64_t v41;
  void (**v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, char *, uint64_t);
  uint64_t (**v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;

  uint64_t v3 = a1;
  uint64_t v49 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v44 = v7;
  uint64_t v48 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t result = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v4;
  if (v4)
  {
    unint64_t v12 = 0;
    uint64_t v45 = v6 + 16;
    uint64_t v47 = (uint64_t (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v42 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v37 = a2;
    uint64_t v34 = v6;
    uint64_t v35 = v3;
    while (v12 < *(void *)(v3 + 16))
    {
      uint64_t v38 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      id v13 = *(void *)(v6 + 72);
      unint64_t v41 = v12;
      uint64_t v43 = v13;
      uint64_t v14 = v3 + v38 + v13 * v12;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      v15(v11, v14, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v5);
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5) == 1) {
        goto LABEL_21;
      }
      unint64_t v39 = &v33;
      id v46 = *v47;
      uint64_t v16 = v46(v48, v11, v5);
      char v40 = &v33;
      MEMORY[0x1F4188790](v16);
      uint64_t v17 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      unint64_t v18 = *(void *)(a2 + 16);
      if (v18)
      {
        uint64_t v19 = a2 + v38;
        swift_bridgeObjectRetain();
        while (1)
        {
          v15(v17, v19, v5);
          __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v5);
          uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v5);
          if (EnumTagSinglePayload == 1) {
            break;
          }
          MEMORY[0x1F4188790](EnumTagSinglePayload);
          char v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
          v46((char *)&v33 - v22, v17, v5);
          _s10Foundation4UUIDVACSHAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
          uint64_t v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          (*v42)((char *)&v33 - v22, v5);
          if (v23)
          {
            uint64_t v25 = swift_bridgeObjectRelease();
            MEMORY[0x1F4188790](v25);
            double v26 = (char *)&v33 - v22;
            v46((char *)&v33 - v22, v48, v5);
            uint64_t v27 = v49;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v27 + 16) + 1, 1);
              uint64_t v27 = v49;
            }
            uint64_t v3 = v35;
            unint64_t v29 = *(void *)(v27 + 16);
            unint64_t v28 = *(void *)(v27 + 24);
            if (v29 >= v28 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
              uint64_t v27 = v49;
            }
            *(void *)(v27 + 16) = v29 + 1;
            uint64_t v24 = v46((char *)(v27 + v38 + v29 * v43), v26, v5);
            uint64_t v49 = v27;
            a2 = v37;
            goto LABEL_19;
          }
          v19 += v43;
          if (!--v18) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v5);
      }
      a2 = v37;
      swift_bridgeObjectRelease();
      uint64_t v24 = ((uint64_t (*)(char *, uint64_t))*v42)(v48, v5);
      uint64_t v3 = v35;
LABEL_19:
      uint64_t v30 = v41 + 1;
      MEMORY[0x1F4188790](v24);
      uint64_t v48 = (char *)&v33 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v9 = *(void *)(*(void *)(v32 - 8) + 64);
      uint64_t result = MEMORY[0x1F4188790](v32 - 8);
      unint64_t v12 = v30;
      uint64_t v11 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v6 = v34;
      if (v30 == v36) {
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v5);
LABEL_21:
    swift_bridgeObjectRelease();
    outlined destroy of SystemUpdateNotice?((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    swift_bridgeObjectRelease();
    return v49;
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (**v20)(char *, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  uint64_t v27 = type metadata accessor for Participant(0);
  uint64_t v30 = *(void *)(v27 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v27);
  uint64_t v31 = (uint64_t)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v35 = (uint64_t)&v26 - v7;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v41 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(a1 + 16);
  char v40 = a2;
  unint64_t v29 = v9;
  if (v9)
  {
    uint64_t v10 = 0;
    uint64_t v38 = a2 + 56;
    unint64_t v28 = a1;
    while (v10 < *(void *)(a1 + 16))
    {
      uint64_t v11 = *(void *)(v30 + 72);
      uint64_t v33 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v34 = v10;
      uint64_t v32 = v11;
      _s15ConversationKit11ParticipantVWOcTm_11(a1 + v33 + v11 * v10, v35, (void (*)(void))type metadata accessor for Participant);
      if (*(void *)(v40 + 16)
        && (unint64_t v12 = v35 + *(int *)(v27 + 20),
            id v13 = type metadata accessor for UUID(),
            _s10Foundation4UUIDVACSHAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID),
            unint64_t v39 = v12,
            uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)(),
            uint64_t v15 = -1 << *(unsigned char *)(v40 + 32),
            uint64_t v16 = v14 & ~v15,
            ((*(void *)(v38 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0))
      {
        uint64_t v36 = ~v15;
        uint64_t v17 = *(void **)(v13 - 8);
        uint64_t v37 = (void (*)(char *, unint64_t, uint64_t))v17[2];
        unint64_t v18 = v17[8];
        uint64_t v19 = v17[9];
        uint64_t v20 = (uint64_t (**)(char *, uint64_t))(v17 + 1);
        while (1)
        {
          MEMORY[0x1F4188790](v14);
          v37((char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v21 + 48) + v19 * v16, v13);
          _s10Foundation4UUIDVACSHAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
          char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v14 = (*v20)((char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
          if (v22) {
            break;
          }
          uint64_t v16 = (v16 + 1) & v36;
          if (((*(void *)(v38 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
            goto LABEL_9;
          }
        }
        uint64_t result = _s15ConversationKit11ParticipantV5StateOWOhTm_0(v35, (void (*)(void))type metadata accessor for Participant);
      }
      else
      {
LABEL_9:
        _s15ConversationKit11ParticipantVWObTm_4(v35, v31, (void (*)(void))type metadata accessor for Participant);
        uint64_t v23 = v41;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v23 + 16) + 1, 1);
          uint64_t v23 = v41;
        }
        uint64_t v25 = *(void *)(v23 + 16);
        uint64_t v24 = *(void *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
          uint64_t v23 = v41;
        }
        *(void *)(v23 + 16) = v25 + 1;
        uint64_t result = _s15ConversationKit11ParticipantVWObTm_4(v31, v23 + v33 + v25 * v32, (void (*)(void))type metadata accessor for Participant);
      }
      uint64_t v10 = v34 + 1;
      a1 = v28;
      if (v34 + 1 == v29)
      {
        uint64_t v8 = v41;
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t specialized Collection.prefix(_:)(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = specialized Array.index(_:offsetBy:limitedBy:)(0, result, v3);
  if (v4) {
    unint64_t v5 = v3;
  }
  else {
    unint64_t v5 = result;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5)
  {
    type metadata accessor for Participant(0);
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = OUTLINED_FUNCTION_77_2(result, a2);
  if (v4) {
    unint64_t v5 = result;
  }
  else {
    unint64_t v5 = v3;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5) {
    return v2;
  }
LABEL_10:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = OUTLINED_FUNCTION_77_2(result, a2);
  if (v4) {
    unint64_t v5 = result;
  }
  else {
    unint64_t v5 = v3;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    OUTLINED_FUNCTION_22_0();
    return v2;
  }
LABEL_10:
  __break(1u);
  return result;
}

void specialized Array.remove(at:)()
{
}

{
  specialized Array.remove(at:)();
}

{
  uint64_t *v0;
  void (*v1)(void);
  void (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t (*v4)(void);
  uint64_t (*v5)(uint64_t);
  uint64_t (*v6)(uint64_t);
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  char v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = *v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = v6(v9);
  }
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 <= v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v4(0);
    OUTLINED_FUNCTION_1(v11);
    uint64_t v14 = *(void *)(v13 + 72);
    uint64_t v15 = v9 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)) + v14 * v8;
    uint64_t v16 = OUTLINED_FUNCTION_48_3();
    _s15ConversationKit11ParticipantVWObTm_2(v16, v17);
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v15 + v14, v10 - 1 - v8, v15, v2);
    *(void *)(v9 + 16) = v10 - 1;
    *uint64_t v0 = v9;
    OUTLINED_FUNCTION_28();
  }
}

{
  uint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  long long *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_14();
  uint64_t v2 = v1;
  unint64_t v3 = *v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew()();
    unint64_t v3 = v7;
  }
  char v4 = *(void *)(v3 + 16);
  if (v4 <= v2)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = (long long *)OUTLINED_FUNCTION_29_0();
    outlined init with take of Notice(v5, v6);
    specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(v3 + 40 * v2 + 72), v4 - 1 - v2, (char *)(v3 + 40 * v2 + 32));
    *(void *)(v3 + 16) = v4 - 1;
    *uint64_t v0 = v3;
    OUTLINED_FUNCTION_15_0();
  }
}

uint64_t specialized Array.remove(at:)(unint64_t a1)
{
  return specialized Array.remove(at:)(a1, specialized _ArrayBuffer._consumeAndCreateNew());
}

uint64_t specialized Array.remove(at:)(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v5;
  if (!result || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    uint64_t result = a2(v5);
    uint64_t v5 = result;
    *uint64_t v2 = result;
  }
  uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v9 = v8 - 1;
    uint64_t v10 = v8 - 1 - a1;
    uint64_t v11 = v7 + 8 * a1;
    uint64_t v12 = *(void *)(v11 + 32);
    specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(v11 + 40), v10, (char *)(v11 + 32));
    *(void *)(v7 + 16) = v9;
    specialized Array._endMutation()();
    return v12;
  }
  return result;
}

uint64_t ParticipantGridViewController.participants.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL ParticipantGridViewController.hasOtherInvitedParticipants.getter()
{
  uint64_t v1 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Participant(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4 - 8);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants);
  swift_beginAccess();
  uint64_t v12 = *v11;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v35 = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  uint64_t v34 = v14;
  if (v14)
  {
    unint64_t v15 = 0;
    uint64_t v32 = v8;
    uint64_t v33 = v1;
    uint64_t v16 = v34;
    do
    {
      if (v15 >= *(void *)(v12 + 16))
      {
        __break(1u);
        JUMPOUT(0x1C326BF5CLL);
      }
      unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v18 = *(void *)(v5 + 72);
      unint64_t v19 = v15 + 1;
      _s15ConversationKit11ParticipantVWOcTm_5(v12 + v17 + v18 * v15, (uint64_t)v10);
      _s15ConversationKit11ParticipantVWOcTm_5((uint64_t)v10, (uint64_t)v3);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          goto LABEL_11;
        case 4u:
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          double v26 = &v3[*(int *)(v25 + 48)];
          outlined consume of Participant.CopresenceInfo?(*(void *)&v3[*(int *)(v25 + 64)], *(void *)&v3[*(int *)(v25 + 64) + 8]);
          uint64_t v27 = (uint64_t)v26;
          uint64_t v16 = v34;
          outlined destroy of Participant.MediaInfo(v27);
LABEL_11:
          uint64_t v28 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v3, v28);
          goto LABEL_12;
        case 6u:
LABEL_12:
          _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
          break;
        default:
          uint64_t v20 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v3, v20);
          _s15ConversationKit11ParticipantVWObTm_2((uint64_t)v10, (uint64_t)v8);
          uint64_t v21 = v35;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v21 + 16) + 1, 1);
            uint64_t v21 = v35;
          }
          unint64_t v23 = *(void *)(v21 + 16);
          unint64_t v22 = *(void *)(v21 + 24);
          if (v23 >= v22 >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
            uint64_t v21 = v35;
          }
          *(void *)(v21 + 16) = v23 + 1;
          uint64_t v24 = v21 + v17 + v23 * v18;
          unint64_t v8 = v32;
          _s15ConversationKit11ParticipantVWObTm_2((uint64_t)v32, v24);
          uint64_t v16 = v34;
          break;
      }
      unint64_t v15 = v19;
    }
    while (v16 != v19);
    uint64_t v13 = v35;
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v13 + 16);
  swift_release();
  return v29 != 0;
}

id ParticipantGridViewController.gridView.getter()
{
  if (!objc_msgSend(v0, sel_isViewLoaded)) {
    return 0;
  }
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for ParticipantGridView(0);
    id result = (id)swift_dynamicCastClass();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

uint64_t ParticipantGridViewController.participantViews.getter()
{
  id v0 = ParticipantGridViewController.gridView.getter();
  uint64_t v1 = (unint64_t *)MEMORY[0x1E4FBC860];
  if (!v0) {
    return (uint64_t)v1;
  }
  uint64_t v2 = v0;
  id v3 = objc_msgSend(v0, sel_subviews);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v10 = (unint64_t)v1;
  if (!((unint64_t)v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_4;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v1 = (unint64_t *)MEMORY[0x1E4FBC860];
LABEL_21:
    swift_bridgeObjectRelease();

    return (uint64_t)v1;
  }
  if (v4 < 0) {
    uint64_t v1 = (unint64_t *)v4;
  }
  else {
    uint64_t v1 = (unint64_t *)(v4 & 0xFFFFFFFFFFFFFF8);
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_4:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = OUTLINED_FUNCTION_43();
        MEMORY[0x1C87744F0](v8);
      }
      else
      {
        id v9 = *(id *)(v4 + 8 * i + 32);
      }
      OUTLINED_FUNCTION_89();
      type metadata accessor for ParticipantView();
      if (swift_dynamicCastClass())
      {
        MEMORY[0x1C87733A0]();
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        OUTLINED_FUNCTION_48_3();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        uint64_t v1 = &v10;
        specialized Array._endMutation()();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v1 = (unint64_t *)v10;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

id ParticipantGridViewController.forceAudioPriorityButton.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_forceAudioPriorityButton));
}

uint64_t ParticipantGridViewController.focusedParticipant.getter@<X0>(uint64_t a1@<X8>)
{
  return ParticipantGridViewController.focusedParticipant.getter(&OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant, a1);
}

uint64_t ParticipantGridViewController.focusedParticipant.didset(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v68 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = a1;
  _s15ConversationKit11ParticipantVSgWOcTm_0(a1, (uint64_t)v7, &demangling cache variable for type metadata for Participant?);
  uint64_t v11 = type metadata accessor for Participant(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v11);
  uint64_t v76 = v5;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
    uint64_t v13 = type metadata accessor for UUID();
    uint64_t v14 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = 1;
  }
  else
  {
    uint64_t v16 = &v7[*(int *)(v11 + 20)];
    uint64_t v17 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))((char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v16, v17);
    _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
    uint64_t v14 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = 0;
    uint64_t v13 = v17;
  }
  uint64_t v18 = __swift_storeEnumTagSinglePayload((uint64_t)v14, v15, 1, v13);
  MEMORY[0x1F4188790](v18);
  unint64_t v19 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v78 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
  swift_beginAccess();
  int v21 = __swift_getEnumTagSinglePayload(v20, 1, v11);
  uint64_t v77 = v11;
  if (v21)
  {
    uint64_t v22 = type metadata accessor for UUID();
    unint64_t v23 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = 1;
  }
  else
  {
    uint64_t v25 = v20 + *(int *)(v11 + 20);
    uint64_t v22 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))((char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v22);
    unint64_t v23 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v23, v24, 1, v22);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  uint64_t v27 = MEMORY[0x1F4188790](v26 - 8);
  uint64_t v29 = (char *)&v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = (uint64_t)&v29[*(int *)(v27 + 56)];
  _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v30, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  type metadata accessor for UUID();
  uint64_t v31 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v22);
  if (v31 == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v30, 1, v22) == 1) {
      return outlined destroy of SystemUpdateNotice?((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    }
    goto LABEL_12;
  }
  id v73 = &v68;
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v29, (uint64_t)v33, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v34 = __swift_getEnumTagSinglePayload(v30, 1, v22);
  if (v34 == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))((char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
LABEL_12:
    uint64_t v74 = v20;
    outlined destroy of SystemUpdateNotice?((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    uint64_t v35 = *(void *)(v22 - 8);
    goto LABEL_13;
  }
  uint64_t v74 = v20;
  uint64_t v68 = v9;
  double v70 = &v68;
  uint64_t v71 = &v68;
  uint64_t v35 = *(void *)(v22 - 8);
  id v72 = &v68;
  MEMORY[0x1F4188790](v34);
  id v46 = (char *)&v68 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v46, v30, v22);
  lazy protocol witness table accessor for type UUID and conformance UUID();
  int v69 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v35 + 8);
  v47(v46, v22);
  outlined destroy of SystemUpdateNotice?((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of SystemUpdateNotice?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v47(v33, v22);
  uint64_t result = outlined destroy of SystemUpdateNotice?((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (v69) {
    return result;
  }
  uint64_t v9 = v68;
LABEL_13:
  uint64_t v36 = v35;
  uint64_t v37 = *(void *)(v35 + 64);
  uint64_t v38 = MEMORY[0x1F4188790](v75);
  char v40 = (char *)&v68 - v39;
  uint64_t v41 = MEMORY[0x1F4188790](v38);
  uint64_t v42 = (uint64_t)v76;
  _s15ConversationKit11ParticipantVSgWOcTm_0(v41, (uint64_t)v76, &demangling cache variable for type metadata for Participant?);
  uint64_t v43 = v77;
  if (__swift_getEnumTagSinglePayload(v42, 1, v77) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v42, &demangling cache variable for type metadata for Participant?);
    __swift_storeEnumTagSinglePayload((uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v22);
LABEL_16:
    uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for UUID?);
    goto LABEL_23;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))((char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v42 + *(int *)(v43 + 20), v22);
  _s15ConversationKit11ParticipantVWOhTm_3(v42, (void (*)(void))type metadata accessor for Participant);
  __swift_storeEnumTagSinglePayload((uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v22) == 1) {
    goto LABEL_16;
  }
  uint64_t v48 = v9;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v40, (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
  id v49 = ParticipantGridViewController.gridView.getter();
  if (v49)
  {
    uint64_t v50 = v49;
    type metadata accessor for ParticipantView();
    ParticipantGridView.tile(for:ofAClass:)();
    id v52 = v51;
    uint64_t v54 = v53;

    if (v52)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void, uint64_t, uint64_t))(v54 + 64))(0, ObjectType, v54);
    }
  }
  uint64_t updated = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v40, v22);
  uint64_t v9 = v48;
LABEL_23:
  uint64_t v56 = MEMORY[0x1F4188790](updated);
  uint64_t v57 = (char *)&v68 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v56);
  id v58 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = v74;
  uint64_t v60 = v77;
  if (__swift_getEnumTagSinglePayload(v74, 1, v77))
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v58, 1, 1, v22);
    return outlined destroy of SystemUpdateNotice?((uint64_t)v58, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v58, v59 + *(int *)(v60 + 20), v22);
  __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v22) == 1) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)v58, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v57, v58, v22);
  id v61 = ParticipantGridViewController.gridView.getter();
  if (v61)
  {
    id v62 = v61;
    type metadata accessor for ParticipantView();
    ParticipantGridView.tile(for:ofAClass:)();
    uint64_t v64 = v63;
    uint64_t v66 = v65;

    if (v64)
    {
      uint64_t v67 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 64))(1, v67, v66);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v57, v22);
}

uint64_t ParticipantGridViewController.sashedParticipant.getter@<X0>(uint64_t a1@<X8>)
{
  return ParticipantGridViewController.focusedParticipant.getter(&OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant, a1);
}

uint64_t ParticipantGridViewController.focusedParticipant.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  OUTLINED_FUNCTION_2();
  return _s15ConversationKit11ParticipantVSgWOcTm_0(v4, a2, &demangling cache variable for type metadata for Participant?);
}

uint64_t ParticipantGridViewController.fullScreenFocusedParticipant.getter@<X0>(uint64_t a1@<X8>)
{
  return ParticipantGridViewController.focusedParticipant.getter(&OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant, a1);
}

uint64_t key path getter for ParticipantGridViewController.focusedParticipant : ParticipantGridViewController@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  OUTLINED_FUNCTION_2();
  return _s15ConversationKit11ParticipantVSgWOcTm_0(v4, a3, &demangling cache variable for type metadata for Participant?);
}

uint64_t key path setter for ParticipantGridViewController.focusedParticipant : ParticipantGridViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t))
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v11 = OUTLINED_FUNCTION_8(v10);
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_64();
  _s15ConversationKit11ParticipantVSgWOcTm_0(a1, v6, &demangling cache variable for type metadata for Participant?);
  return ParticipantGridViewController.focusedParticipant.setter(v6, a5, a6);
}

uint64_t ParticipantGridViewController.focusedParticipant.setter(uint64_t a1, void *a2, void (*a3)(uint64_t))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_64();
  uint64_t v10 = v3 + *a2;
  OUTLINED_FUNCTION_2();
  _s15ConversationKit11ParticipantVSgWOcTm_0(v10, v4, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_6_1();
  uint64_t v11 = OUTLINED_FUNCTION_69_0();
  outlined assign with copy of Participant?(v11, v12);
  swift_endAccess();
  a3(v4);
  outlined destroy of SystemUpdateNotice?(a1, &demangling cache variable for type metadata for Participant?);
  return outlined destroy of SystemUpdateNotice?(v4, &demangling cache variable for type metadata for Participant?);
}

uint64_t ParticipantGridViewController.fullScreenFocusedParticipant.didset(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v24[-v10];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant?, Participant?));
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = &v24[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
  swift_beginAccess();
  uint64_t v17 = (uint64_t)&v15[*(int *)(v13 + 56)];
  _s15ConversationKit11ParticipantVSgWOcTm_0(a1, (uint64_t)v15, &demangling cache variable for type metadata for Participant?);
  _s15ConversationKit11ParticipantVSgWOcTm_0(v16, v17, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v3) == 1)
  {
    if (__swift_getEnumTagSinglePayload(v17, 1, v3) == 1) {
      return outlined destroy of SystemUpdateNotice?((uint64_t)v15, &demangling cache variable for type metadata for Participant?);
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v15, (uint64_t)v11, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v17, 1, v3) != 1)
    {
      _s15ConversationKit11ParticipantVWObTm_2(v17, (uint64_t)v5);
      static Participant.== infix(_:_:)();
      char v19 = v18;
      _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v11, (void (*)(void))type metadata accessor for Participant);
      uint64_t result = outlined destroy of SystemUpdateNotice?((uint64_t)v15, &demangling cache variable for type metadata for Participant?);
      if (v19) {
        return result;
      }
      goto LABEL_8;
    }
    _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v11, (void (*)(void))type metadata accessor for Participant);
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v15, &demangling cache variable for type metadata for (Participant?, Participant?));
LABEL_8:
  uint64_t v21 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v21);
  if (!result) {
    return result;
  }
  uint64_t v22 = *(void *)(v21 + 8);
  uint64_t ObjectType = swift_getObjectType();
  _s15ConversationKit11ParticipantVSgWOcTm_0(v16, (uint64_t)v9, &demangling cache variable for type metadata for Participant?);
  (*(void (**)(uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t))(v22 + 48))(v1, a1, v9, ObjectType, v22);
  swift_unknownObjectRelease();
  uint64_t v15 = v9;
  return outlined destroy of SystemUpdateNotice?((uint64_t)v15, &demangling cache variable for type metadata for Participant?);
}

uint64_t ParticipantGridViewController.participantsViewControllerDelegate.getter()
{
  return ParticipantGridViewController.participantsViewControllerDelegate.getter(&OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate);
}

uint64_t ParticipantGridViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  return ParticipantGridViewController.participantsViewControllerDelegate.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate);
}

uint64_t (*ParticipantGridViewController.participantsViewControllerDelegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  OUTLINED_FUNCTION_6_1();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return ParticipantGridViewController.participantsViewControllerDelegate.modify;
}

uint64_t key path getter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  OUTLINED_FUNCTION_2();
  uint64_t result = MEMORY[0x1C8776240](v4);
  uint64_t v6 = *(void *)(v4 + 8);
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t key path setter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *a2 + *a5;
  OUTLINED_FUNCTION_1_21();
  *(void *)(v6 + 8) = v5;
  return swift_unknownObjectWeakAssign();
}

uint64_t ParticipantGridViewController.participantGridViewControllerDelegate.getter()
{
  return ParticipantGridViewController.participantsViewControllerDelegate.getter(&OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate);
}

uint64_t ParticipantGridViewController.participantsViewControllerDelegate.getter(void *a1)
{
  uint64_t v2 = v1 + *a1;
  OUTLINED_FUNCTION_2();
  return MEMORY[0x1C8776240](v2);
}

uint64_t ParticipantGridViewController.participantGridViewControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  return ParticipantGridViewController.participantsViewControllerDelegate.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate);
}

uint64_t ParticipantGridViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3 + *a3;
  OUTLINED_FUNCTION_1_21();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*ParticipantGridViewController.participantGridViewControllerDelegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  OUTLINED_FUNCTION_6_1();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return ParticipantGridViewController.participantsViewControllerDelegate.modify;
}

void ParticipantGridViewController.__allocating_init(participants:layoutStyle:isLocalMemberAuthorizedToChangeGroupMembership:captionsLayoutState:)()
{
  id v1 = objc_allocWithZone(v0);
  OUTLINED_FUNCTION_29_0();
  ParticipantGridViewController.init(participants:layoutStyle:isLocalMemberAuthorizedToChangeGroupMembership:captionsLayoutState:)();
}

void ParticipantGridViewController.init(participants:layoutStyle:isLocalMemberAuthorizedToChangeGroupMembership:captionsLayoutState:)()
{
  OUTLINED_FUNCTION_31();
  id v1 = v0;
  uint64_t v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_10_5();
  uint64_t v42 = v14;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v36 - v16;
  int v18 = *v7;
  int v37 = *v3;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsBeforeFocus] = 0;
  uint64_t v19 = OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_forceAudioPriorityButton;
  uint64_t v20 = self;
  uint64_t v21 = v1;
  *(void *)&v1[v19] = objc_msgSend(v20, sel_buttonWithType_, 1);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  *(void *)&v21[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_nonFullScreenConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v21[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenConstraints] = v22;
  OUTLINED_FUNCTION_49_8(OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant);
  OUTLINED_FUNCTION_49_8(OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant);
  OUTLINED_FUNCTION_49_8(OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant);
  uint64_t v41 = v10;
  __swift_storeEnumTagSinglePayload((uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant], 1, 1, v10);
  OUTLINED_FUNCTION_7_0((uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate]);
  OUTLINED_FUNCTION_7_0((uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate]);
  int v38 = v18;
  v21[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle] = v18;
  uint64_t v39 = v21;
  v21[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_isLocalMemberAuthorizedToChangeGroupMembership] = v5;
  uint64_t v45 = v22;
  uint64_t v23 = *(void *)(v9 + 16);
  if (v23)
  {
    unint64_t v24 = 0;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    while (v24 < *(void *)(v9 + 16))
    {
      unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v27 = *(void *)(v12 + 72);
      _s15ConversationKit11ParticipantVWOcTm_5(v9 + v26 + v27 * v24, (uint64_t)v17);
      if (*(void *)&v17[*(int *)(v41 + 28)])
      {
        _s15ConversationKit11ParticipantVWObTm_2((uint64_t)v17, v42);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v25 + 16) + 1, 1);
        }
        uint64_t v25 = v45;
        unint64_t v29 = *(void *)(v45 + 16);
        unint64_t v28 = *(void *)(v45 + 24);
        if (v29 >= v28 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
          uint64_t v25 = v45;
        }
        *(void *)(v25 + 16) = v29 + 1;
        _s15ConversationKit11ParticipantVWObTm_2(v42, v25 + v26 + v29 * v27);
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v17, (void (*)(void))type metadata accessor for Participant);
      }
      if (v23 == ++v24)
      {
        uint64_t v22 = v45;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    uint64_t v31 = v39;
    uint64_t v30 = (objc_class *)ObjectType;
    char v33 = v37;
    char v32 = v38;
    swift_bridgeObjectRelease();
    LOBYTE(v45) = v32;
    char v44 = v33;
    Swift::Int v34 = MultiwayViewController.LayoutStyle.maximumParticipantCount(portraitAspect:mediaPipIsVisible:captionsLayoutState:)(0, 0, (ConversationKit::CaptionsLayoutState_optional)&v44);
    specialized Collection.prefix(_:)(v34, v22);
    specialized Array.init<A>(_:)();
    *(void *)&v31[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants] = v35;

    v43.receiver = v31;
    v43.super_class = v30;
    objc_msgSendSuper2(&v43, sel_initWithNibName_bundle_, 0, 0);
    OUTLINED_FUNCTION_28();
  }
}

id ParticipantGridViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantGridViewController.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsBeforeFocus] = 0;
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_forceAudioPriorityButton;
  *(void *)&v0[v1] = objc_msgSend(self, sel_buttonWithType_, 1);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_nonFullScreenConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenConstraints] = v2;
  uint64_t v3 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant];
  uint64_t v4 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  OUTLINED_FUNCTION_47_9(OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant);
  OUTLINED_FUNCTION_47_9(OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant);
  OUTLINED_FUNCTION_47_9(OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant);
  OUTLINED_FUNCTION_7_0((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate]);
  OUTLINED_FUNCTION_7_0((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate]);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ParticipantGridViewController.loadView()()
{
  id v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantGridView(0)), sel_init);
  objc_msgSend(v0, sel_setView_, v1);
}

Swift::Void __swiftcall ParticipantGridViewController.viewDidLoad()()
{
  OUTLINED_FUNCTION_14();
  uint64_t v3 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  uint64_t v7 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_63();
  v34.receiver = v0;
  v34.super_class = ObjectType;
  objc_msgSendSuper2(&v34, sel_viewDidLoad);
  uint64_t v9 = (char *)ParticipantGridViewController.gridView.getter();
  if (!v9) {
    goto LABEL_15;
  }
  uint64_t v10 = v9;
  uint64_t v11 = &v9[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_delegate];
  OUTLINED_FUNCTION_1_21();
  *((void *)v11 + 1) = &protocol witness table for ParticipantGridViewController;
  swift_unknownObjectWeakAssign();
  char v12 = v3[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_isLocalMemberAuthorizedToChangeGroupMembership];
  uint64_t v13 = &v10[OBJC_IVAR____TtC15ConversationKit19ParticipantGridView_isLocalMemberAuthorizedToChangeGroupMembership];
  OUTLINED_FUNCTION_1_21();
  char *v13 = v12;
  OUTLINED_FUNCTION_2();
  uint64_t v14 = swift_bridgeObjectRetain();
  ParticipantGridView.setParticipants(_:)((Swift::OpaquePointer)v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant];
  OUTLINED_FUNCTION_2();
  _s15ConversationKit11ParticipantVSgWOcTm_0(v15, v1, &demangling cache variable for type metadata for Participant?);
  uint64_t v16 = OUTLINED_FUNCTION_85_2();
  OUTLINED_FUNCTION_33_0(v16, v17, v7);
  if (v18)
  {
    outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    _s15ConversationKit11ParticipantVWObTm_2(v1, v2);
    ParticipantGridViewController.fullScreenFocus(on:)();
    _s15ConversationKit11ParticipantVWOhTm_3(v2, (void (*)(void))type metadata accessor for Participant);
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 128))() & 1) == 0)
  {
LABEL_14:

LABEL_15:
    OUTLINED_FUNCTION_15_0();
    return;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v19 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_forceAudioPriorityButton];
  outlined bridged method (mbnnn) of @objc UIButton.setTitle(_:for:)(0x7561206563726F46, 0xEB000000006F6964, 0, v19);
  id v20 = objc_msgSend(self, sel_whiteColor);
  objc_msgSend(v19, sel_setTintColor_, v20);

  objc_msgSend(v19, sel_addTarget_action_forControlEvents_, v3, sel_forceBumpPriority, 64);
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v21 = objc_msgSend(v3, sel_view);
  if (!v21)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v22 = v21;
  objc_msgSend(v21, sel_addSubview_, v19);

  id v23 = objc_msgSend(v19, sel_topAnchor);
  id v24 = objc_msgSend(v3, sel_view);
  if (!v24)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v25 = v24;
  id v26 = objc_msgSend(v24, sel_safeAreaLayoutGuide);

  id v27 = objc_msgSend(v26, sel_topAnchor);
  id v28 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v27, 16.0);

  objc_msgSend(v28, sel_setActive_, 1);
  id v29 = objc_msgSend(v19, sel_trailingAnchor);
  id v30 = objc_msgSend(v3, sel_view);
  if (v30)
  {
    uint64_t v31 = v30;
    id v32 = objc_msgSend(v30, sel_trailingAnchor);

    id v33 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v32, -16.0);
    objc_msgSend(v33, sel_setActive_, 1);

    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void ParticipantGridViewController.fullScreenFocus(on:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v70 = v0;
  uint64_t v71 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_5_1();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = OUTLINED_FUNCTION_53_6();
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_64();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v13();
  char v14 = _dispatchPreconditionTest(_:)();
  uint64_t v16 = *(void (**)(uint64_t *, uint64_t))(v11 + 8);
  uint64_t v15 = v11 + 8;
  v16(v2, v9);
  if (v14)
  {
    uint64_t v68 = v3;
    if (one-time initialization token for conversationKit == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v17 = OUTLINED_FUNCTION_25_15();
  long long v69 = xmmword_1C3769620;
  *(_OWORD *)(v17 + 16) = xmmword_1C3769620;
  uint64_t v18 = v71;
  _s15ConversationKit11ParticipantVWOcTm_5(v71, v1);
  uint64_t v19 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_89_1();
  uint64_t v20 = specialized >> prefix<A>(_:)();
  uint64_t v22 = v21;
  outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
  *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v17 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v17 + 32) = v20;
  *(void *)(v17 + 40) = v22;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  OUTLINED_FUNCTION_33_21();
  uint64_t v23 = OUTLINED_FUNCTION_73_4();
  *(_OWORD *)(v23 + 16) = v69;
  _s15ConversationKit11ParticipantVWOcTm_5(v18, v23 + v15);
  uint64_t v24 = v70;
  uint64_t v25 = (uint64_t *)(v70 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants);
  swift_beginAccess();
  *uint64_t v25 = v23;
  swift_bridgeObjectRelease();
  uint64_t v26 = OUTLINED_FUNCTION_66_3();
  __swift_storeEnumTagSinglePayload(v26, v27, v28, v19);
  ParticipantGridViewController.select(_:forFocusing:)();
  outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
  id v29 = ParticipantGridViewController.gridView.getter();
  if (v29)
  {
    id v66 = v29;
    *(void *)&long long v69 = *v25;
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v67 = v60;
    uint64_t v31 = OUTLINED_FUNCTION_8(v30);
    uint64_t v33 = *(void *)(v32 + 64);
    MEMORY[0x1F4188790](v31);
    unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v35 = type metadata accessor for UUID();
    uint64_t v36 = 1;
    uint64_t v65 = (char *)v60 - v34;
    uint64_t v37 = OUTLINED_FUNCTION_64_2((uint64_t)v60 - v34, 1);
    uint64_t v64 = v60;
    MEMORY[0x1F4188790](v37);
    int v38 = (char *)v60 - v34;
    uint64_t v39 = v24 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
    OUTLINED_FUNCTION_2();
    if (!__swift_getEnumTagSinglePayload(v39, 1, v19))
    {
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_124();
      v40();
      uint64_t v36 = 0;
    }
    uint64_t v41 = OUTLINED_FUNCTION_64_2((uint64_t)v60 - v34, v36);
    MEMORY[0x1F4188790](v41);
    uint64_t v42 = (char *)v60 - v34;
    uint64_t v43 = v24 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
    OUTLINED_FUNCTION_2();
    uint64_t v44 = OUTLINED_FUNCTION_85_2();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v44, v45, v19);
    id v62 = v60;
    char v63 = v38;
    id v61 = v42;
    if (EnumTagSinglePayload)
    {
      uint64_t v47 = OUTLINED_FUNCTION_64_2((uint64_t)v42, 1);
      uint64_t v48 = *(void *)(v35 - 8);
    }
    else
    {
      uint64_t v48 = *(void *)(v35 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v42, v43 + *(int *)(v19 + 20), v35);
      uint64_t v47 = OUTLINED_FUNCTION_64_2((uint64_t)v42, 0);
    }
    v60[1] = v60;
    uint64_t v49 = v71;
    MEMORY[0x1F4188790](v47);
    uint64_t v51 = (char *)v60 - v50;
    OUTLINED_FUNCTION_2_1();
    v52();
    swift_bridgeObjectRetain();
    ParticipantGridViewController.aspectRatio(for:in:)(0, (uint64_t)v73);
    uint64_t v53 = ParticipantGridViewController.orientation(for:in:)(v49, 0);
    Participant.videoInfo.getter();
    outlined init with take of Any?((uint64_t)v74, (uint64_t)v75, &demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v75[0])
    {
      char v54 = v76;
      outlined release of LinearGradient((uint64_t)v74);
    }
    else
    {
      char v54 = 0;
    }
    uint64_t v55 = v68;
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v68, v51, v35);
    uint64_t v56 = (int *)type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
    outlined init with take of AspectRatio((uint64_t)v73, v55 + v56[5]);
    *(void *)(v55 + v56[6]) = v53;
    *(unsigned char *)(v55 + v56[7]) = v54;
    OUTLINED_FUNCTION_29_22(v55);
    char v72 = *(unsigned char *)(v70 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle);
    uint64_t v57 = v66;
    uint64_t v58 = (uint64_t)v63;
    uint64_t v59 = (uint64_t)v61;
    ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)();

    swift_bridgeObjectRelease();
    outlined destroy of SystemUpdateNotice?(v55, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    outlined destroy of SystemUpdateNotice?(v59, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?(v58, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_86_2();
  }
  _s15ConversationKit11ParticipantVWOcTm_5(v71, v1);
  OUTLINED_FUNCTION_89_1();
  ParticipantGridViewController.focusedParticipant.setter(v1, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant, (void (*)(uint64_t))ParticipantGridViewController.fullScreenFocusedParticipant.didset);
  OUTLINED_FUNCTION_28();
}

Swift::Bool __swiftcall ParticipantGridViewController._canShowWhileLocked()()
{
  return 1;
}

void ParticipantGridViewController.forceBumpPriority()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB20]);
  id v1 = @nonobjc NSUserDefaults.init(suiteName:)(0xD000000000000019, 0x80000001C37A43D0);
  if (v1)
  {
    id v4 = v1;
    uint64_t v2 = (void *)MEMORY[0x1C87730B0](0xD000000000000019, 0x80000001C37A4440);
    objc_msgSend(v4, sel_setBool_forKey_, 1, v2);

    uint64_t v3 = (void *)MEMORY[0x1C87730B0](0xD000000000000017, 0x80000001C37A4460);
    objc_msgSend(v4, sel_setInteger_forKey_, 255, v3);

    objc_msgSend(v4, sel_synchronize);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
}

void ParticipantGridViewController.select(_:forFocusing:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v58 = v3;
  uint64_t v59 = v0;
  int v55 = v4;
  uint64_t v5 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_10_5();
  uint64_t v57 = v7;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_8_4();
  uint64_t v56 = v9;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v10);
  char v54 = &v52[-v11];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant?, Participant?));
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_21();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v18 = OUTLINED_FUNCTION_8(v17);
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_10_5();
  uint64_t v61 = v19;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_53_1();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_8_4();
  uint64_t v60 = v22;
  OUTLINED_FUNCTION_8_1();
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = &v52[-v25];
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = &v52[-v27];
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_64();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v30();
  char v31 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_139();
  v32();
  if ((v31 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v33 = v59 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
  OUTLINED_FUNCTION_2();
  _s15ConversationKit11ParticipantVSgWOcTm_0(v33, (uint64_t)v28, &demangling cache variable for type metadata for Participant?);
  uint64_t v34 = v16 + *(int *)(v12 + 48);
  _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v28, v16, &demangling cache variable for type metadata for Participant?);
  uint64_t v35 = v58;
  _s15ConversationKit11ParticipantVSgWOcTm_0(v58, v34, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_33_0(v16, 1, v5);
  if (v36)
  {
    OUTLINED_FUNCTION_33_0(v34, 1, v5);
    if (v36)
    {
      outlined destroy of SystemUpdateNotice?(v16, &demangling cache variable for type metadata for Participant?);
      goto LABEL_12;
    }
LABEL_10:
    outlined destroy of SystemUpdateNotice?(v16, &demangling cache variable for type metadata for (Participant?, Participant?));
LABEL_14:
    _s15ConversationKit11ParticipantVSgWOcTm_0(v35, v60, &demangling cache variable for type metadata for Participant?);
    goto LABEL_15;
  }
  _s15ConversationKit11ParticipantVSgWOcTm_0(v16, (uint64_t)v26, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_33_0(v34, 1, v5);
  if (v36)
  {
    _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v26, (void (*)(void))type metadata accessor for Participant);
    goto LABEL_10;
  }
  uint64_t v37 = v34;
  int v38 = v54;
  _s15ConversationKit11ParticipantVWObTm_2(v37, (uint64_t)v54);
  static Participant.== infix(_:_:)();
  int v53 = v39;
  _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v38, (void (*)(void))type metadata accessor for Participant);
  uint64_t v40 = OUTLINED_FUNCTION_162();
  _s15ConversationKit11ParticipantVWOhTm_3(v40, v41);
  outlined destroy of SystemUpdateNotice?(v16, &demangling cache variable for type metadata for Participant?);
  if ((v53 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_12:
  if (v55) {
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_82_2(v60, 1);
LABEL_15:
  OUTLINED_FUNCTION_6_1();
  uint64_t v42 = OUTLINED_FUNCTION_34_9();
  outlined assign with take of Participant?(v42, v43);
  swift_endAccess();
  _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v28, v2, &demangling cache variable for type metadata for Participant?);
  uint64_t v44 = OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_33_0(v44, v45, v5);
  if (v36)
  {
    outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    uint64_t v46 = v56;
    _s15ConversationKit11ParticipantVWObTm_2(v2, v56);
    ParticipantGridViewController.update(participant:broadcastingState:)();
    _s15ConversationKit11ParticipantVWOhTm_3(v46, (void (*)(void))type metadata accessor for Participant);
  }
  uint64_t v47 = v33;
  uint64_t v48 = v61;
  _s15ConversationKit11ParticipantVSgWOcTm_0(v47, v61, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_33_0(v48, 1, v5);
  if (v36)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v28, &demangling cache variable for type metadata for Participant?);
    outlined destroy of SystemUpdateNotice?(v48, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    uint64_t v49 = v48;
    uint64_t v50 = v57;
    _s15ConversationKit11ParticipantVWObTm_2(v49, v57);
    ParticipantGridViewController.update(participant:broadcastingState:)();
    id v51 = ParticipantGridViewController.gridView.getter();
    outlined destroy of SystemUpdateNotice?((uint64_t)v28, &demangling cache variable for type metadata for Participant?);

    _s15ConversationKit11ParticipantVWOhTm_3(v50, (void (*)(void))type metadata accessor for Participant);
  }
  OUTLINED_FUNCTION_28();
}

void ParticipantGridViewController.update(participant:broadcastingState:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v5 = v4;
  uint64_t v118 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_118();
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_16_0();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v15();
  char v16 = _dispatchPreconditionTest(_:)();
  uint64_t v18 = *(void (**)(uint64_t *, uint64_t))(v13 + 8);
  uint64_t v17 = (uint64_t *)(v13 + 8);
  v18(v1, v11);
  if (v16)
  {
    uint64_t v17 = (uint64_t *)&v118[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants];
    uint64_t v19 = OUTLINED_FUNCTION_2();
    uint64_t v20 = *v17;
    MEMORY[0x1F4188790](v19);
    v100[2] = v5;
    swift_bridgeObjectRetain();
    uint64_t v21 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for closure #1 in ParticipantGridViewController.update(participant:broadcastingState:), (uint64_t)v100, v20);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if (v23)
    {
LABEL_43:
      OUTLINED_FUNCTION_28();
      return;
    }
    uint64_t v110 = (uint64_t *)v21;
    double v112 = (void *)v3;
    uint64_t v113 = v9;
    uint64_t v105 = ObjectType;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v109 = v101;
    uint64_t v25 = OUTLINED_FUNCTION_8(v24);
    uint64_t v27 = *(void *)(v26 + 64);
    MEMORY[0x1F4188790](v25);
    uint64_t v28 = (char *)v101 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v29 = v5 + *(int *)(v7 + 20);
    uint64_t ObjectType = type metadata accessor for UUID();
    OUTLINED_FUNCTION_10_0();
    uint64_t v106 = v30;
    uint64_t v32 = v30 + 16;
    char v31 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    uint64_t v115 = v29;
    id v116 = v31;
    v31(v28, (char *)v29, ObjectType);
    uint64_t v33 = 1;
    uint64_t v34 = __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, ObjectType);
    id v108 = v101;
    uint64_t v117 = v27;
    MEMORY[0x1F4188790](v34);
    uint64_t v35 = &v118[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant];
    OUTLINED_FUNCTION_2();
    uint64_t v36 = OUTLINED_FUNCTION_70_3();
    if (!__swift_getEnumTagSinglePayload(v36, v37, v7))
    {
      v116(v28, &v35[*(int *)(v7 + 20)], ObjectType);
      uint64_t v33 = 0;
    }
    uint64_t v111 = v32;
    __swift_storeEnumTagSinglePayload((uint64_t)v28, v33, 1, ObjectType);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    id v107 = v101;
    OUTLINED_FUNCTION_0();
    uint64_t v39 = MEMORY[0x1F4188790](v38);
    uint64_t v103 = v40;
    uint64_t v41 = (char *)v101 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v104 = v39;
    uint64_t v42 = (uint64_t)&v41[*(int *)(v39 + 48)];
    uint64_t v43 = OUTLINED_FUNCTION_43();
    _s15ConversationKit11ParticipantVSgWOcTm_0(v43, v44, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v28, v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v45 = OUTLINED_FUNCTION_70_3();
    uint64_t v47 = OUTLINED_FUNCTION_33_0(v45, v46, ObjectType);
    uint64_t v114 = v5;
    if (v52)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_33_0(v42, 1, ObjectType);
      if (v48) {
        uint64_t v49 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      }
      else {
        uint64_t v49 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
      }
      if (v48) {
        LODWORD(v9) = -1;
      }
      else {
        LODWORD(v9) = 0;
      }
    }
    else
    {
      MEMORY[0x1F4188790](v47);
      OUTLINED_FUNCTION_5_10();
      _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v41, v50 - v51, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_33_0(v42, 1, ObjectType);
      if (v52)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_91_0();
        uint64_t v53 = OUTLINED_FUNCTION_99_2();
        v54(v53);
        uint64_t v49 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
        LODWORD(v9) = 0;
      }
      else
      {
        v101[1] = v101;
        uint64_t v102 = v7;
        uint64_t v55 = v106;
        OUTLINED_FUNCTION_102_0();
        MEMORY[0x1F4188790](v56);
        OUTLINED_FUNCTION_21();
        v101[0] = v101;
        uint64_t v58 = OUTLINED_FUNCTION_39_16(v57);
        v59(v58);
        lazy protocol witness table accessor for type UUID and conformance UUID();
        int v60 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v61 = *(void (**)(void))(v55 + 8);
        LODWORD(v9) = v60;
        OUTLINED_FUNCTION_139();
        v61();
        uint64_t v49 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
        outlined destroy of SystemUpdateNotice?((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_91_0();
        OUTLINED_FUNCTION_99_2();
        OUTLINED_FUNCTION_139();
        v61();
        uint64_t v7 = v102;
        uint64_t v5 = v114;
        OUTLINED_FUNCTION_52_0();
        OUTLINED_FUNCTION_52_0();
      }
    }
    uint64_t v2 = v113;
    outlined destroy of SystemUpdateNotice?((uint64_t)v41, v49);
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_52_0();
    char v62 = Participant.screenState.getter();
    uint64_t v63 = (uint64_t)v112;
    _s15ConversationKit11ParticipantVWOcTm_5(v5, (uint64_t)v112);
    if (v62 == 2)
    {
      LODWORD(v109) = 0;
    }
    else
    {
      if (Participant.isReceivingScreenFrames.getter()) {
        int v64 = 256;
      }
      else {
        int v64 = 0;
      }
      LODWORD(v109) = v64;
    }
    id v1 = v110;
    _s15ConversationKit11ParticipantVWOhTm_3(v63, (void (*)(void))type metadata accessor for Participant);
    OUTLINED_FUNCTION_6_1();
    uint64_t v65 = *v17;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v17 = v65;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (((unint64_t)v1 & 0x8000000000000000) == 0) {
        goto LABEL_24;
      }
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t v65 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *uint64_t v17 = v65;
  if (((unint64_t)v1 & 0x8000000000000000) != 0) {
    goto LABEL_46;
  }
LABEL_24:
  if ((unint64_t)v1 < *(void *)(v65 + 16))
  {
    OUTLINED_FUNCTION_22_0();
    outlined assign with copy of Participant(v5, v65 + v67 + v2[9] * (void)v1);
    uint64_t v68 = swift_endAccess();
    uint64_t v69 = v117;
    MEMORY[0x1F4188790](v68);
    uint64_t v70 = (char *)v101 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v71 = v116;
    v116(v70, (char *)v115, ObjectType);
    uint64_t v72 = 1;
    uint64_t v73 = __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, ObjectType);
    uint64_t v113 = v101;
    MEMORY[0x1F4188790](v73);
    uint64_t v74 = v70;
    uint64_t v75 = &v118[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant];
    OUTLINED_FUNCTION_2();
    if (!__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v7))
    {
      v71(v70, &v75[*(int *)(v7 + 20)], ObjectType);
      uint64_t v72 = 0;
    }
    uint64_t v76 = __swift_storeEnumTagSinglePayload((uint64_t)v70, v72, 1, ObjectType);
    MEMORY[0x1F4188790](v76);
    OUTLINED_FUNCTION_5_10();
    uint64_t v79 = v77 - v78;
    uint64_t v80 = v77 - v78 + *(int *)(v104 + 48);
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v70, v77 - v78, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v70, v80, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v81 = OUTLINED_FUNCTION_33_0(v79, 1, ObjectType);
    if (v52)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v70, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v82 = OUTLINED_FUNCTION_69_0();
      outlined destroy of SystemUpdateNotice?(v82, v83);
      OUTLINED_FUNCTION_33_0(v80, 1, ObjectType);
      if (v52)
      {
        outlined destroy of SystemUpdateNotice?(v79, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_36_14();
LABEL_37:
        ParticipantGridViewController.updateFullScreenInfo(with:)();
        goto LABEL_38;
      }
    }
    else
    {
      MEMORY[0x1F4188790](v81);
      OUTLINED_FUNCTION_5_10();
      _s15ConversationKit11ParticipantVSgWOcTm_0(v79, v84 - v85, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_33_0(v80, 1, ObjectType);
      if (!v86)
      {
        double v112 = v101;
        id v116 = (void (*)(char *, char *, uint64_t))v101;
        uint64_t v88 = v106;
        OUTLINED_FUNCTION_102_0();
        MEMORY[0x1F4188790](v89);
        OUTLINED_FUNCTION_21();
        LODWORD(v117) = v9;
        uint64_t v91 = OUTLINED_FUNCTION_39_16(v90);
        v92(v91);
        lazy protocol witness table accessor for type UUID and conformance UUID();
        LODWORD(v111) = dispatch thunk of static Equatable.== infix(_:_:)();
        id v93 = *(void (**)(void))(v88 + 8);
        OUTLINED_FUNCTION_48_3();
        OUTLINED_FUNCTION_139();
        v93();
        outlined destroy of SystemUpdateNotice?((uint64_t)v70, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of SystemUpdateNotice?((uint64_t)v70, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_162();
        OUTLINED_FUNCTION_139();
        v93();
        OUTLINED_FUNCTION_52_0();
        outlined destroy of SystemUpdateNotice?(v79, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_52_0();
        uint64_t v74 = (char *)v105;
        if ((v111 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_37;
      }
      OUTLINED_FUNCTION_86_2();
      outlined destroy of SystemUpdateNotice?((uint64_t)v70, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_162();
      OUTLINED_FUNCTION_26_2();
      v87();
    }
    outlined destroy of SystemUpdateNotice?(v79, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    OUTLINED_FUNCTION_36_14();
LABEL_38:
    id v94 = ParticipantGridViewController.gridView.getter();
    if (v94)
    {
      id v95 = v94;
      ParticipantGridViewController.hasOtherInvitedParticipants.getter();
      ParticipantGridView.updateParticipantView(for:with:hasOtherInvitedParticipants:)();
    }
    if (Participant.isReceivingVideoFrames.getter())
    {
      char v96 = &v118[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate];
      OUTLINED_FUNCTION_2();
      if (MEMORY[0x1C8776240](v96))
      {
        uint64_t v97 = OUTLINED_FUNCTION_43_10();
        v119[3] = v74;
        v119[4] = &protocol witness table for ParticipantGridViewController;
        v119[0] = v118;
        id v98 = (void (*)(void *, uint64_t, uint64_t, char *))*((void *)v96 + 8);
        id v99 = v118;
        v98(v119, v115, v97, v96);
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v119);
      }
    }
    goto LABEL_43;
  }
LABEL_47:
  __break(1u);
}

void ParticipantGridViewController.select(_:)()
{
}

void ParticipantGridViewController.isSelected(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_71_4();
  uint64_t v7 = v5 - v6;
  uint64_t v8 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
  OUTLINED_FUNCTION_2();
  uint64_t v9 = type metadata accessor for Participant(0);
  if (OUTLINED_FUNCTION_94_0(v9))
  {
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = v7;
    uint64_t v12 = 1;
  }
  else
  {
    uint64_t v1 = v8 + *(int *)(v1 + 20);
    uint64_t v10 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_34_9();
    OUTLINED_FUNCTION_124();
    v13();
    uint64_t v11 = v7;
    uint64_t v12 = 0;
  }
  __swift_storeEnumTagSinglePayload(v11, v12, 1, v10);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  uint64_t v15 = OUTLINED_FUNCTION_8(v14);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_41_14();
  uint64_t v16 = OUTLINED_FUNCTION_34_9();
  _s15ConversationKit11ParticipantVSgWOcTm_0(v16, v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v18 = OUTLINED_FUNCTION_162();
  _s15ConversationKit11ParticipantVSgWOcTm_0(v18, v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  type metadata accessor for UUID();
  uint64_t v20 = OUTLINED_FUNCTION_69(v1);
  if (v24)
  {
    outlined destroy of SystemUpdateNotice?(v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_69(v2);
    if (v24) {
      uint64_t v21 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
    }
    else {
      uint64_t v21 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    }
  }
  else
  {
    MEMORY[0x1F4188790](v20);
    OUTLINED_FUNCTION_71_4();
    _s15ConversationKit11ParticipantVSgWOcTm_0(v1, v22 - v23, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_69(v2);
    if (v24)
    {
      outlined destroy of SystemUpdateNotice?(v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_26_2();
      v25();
      uint64_t v21 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    }
    else
    {
      v31[1] = v31;
      OUTLINED_FUNCTION_5_3();
      uint64_t v27 = v26;
      MEMORY[0x1F4188790](v28);
      OUTLINED_FUNCTION_5_1();
      OUTLINED_FUNCTION_48_3();
      OUTLINED_FUNCTION_38_13();
      v29();
      lazy protocol witness table accessor for type UUID and conformance UUID();
      dispatch thunk of static Equatable.== infix(_:_:)();
      v31[2] = v31;
      uint64_t v30 = *(void (**)(void))(v27 + 8);
      OUTLINED_FUNCTION_139();
      v30();
      uint64_t v21 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      OUTLINED_FUNCTION_105_0();
      OUTLINED_FUNCTION_139();
      v30();
    }
  }
  outlined destroy of SystemUpdateNotice?(v1, v21);
  OUTLINED_FUNCTION_28();
}

void ParticipantGridViewController.aspectRatio(for:in:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  id v4 = a1;
  if (a1 || (id v4 = ParticipantGridViewController.gridView.getter()) != 0)
  {
    id v5 = a1;
    ParticipantGridView.aspectRatio(for:default:)();
    char v6 = v11;

    long long v8 = v10;
    long long v7 = v9;
  }
  else
  {
    long long v7 = 0uLL;
    char v6 = 1;
    long long v8 = 0uLL;
  }
  *(_OWORD *)a2 = v7;
  *(_OWORD *)(a2 + 16) = v8;
  *(unsigned char *)(a2 + 32) = v6;
}

uint64_t ParticipantGridViewController.orientation(for:in:)(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!a2)
  {
    id v3 = ParticipantGridViewController.gridView.getter();
    if (!v3) {
      return 1;
    }
  }
  id v4 = a2;
  ParticipantGridView.orientation(for:default:)();
  uint64_t v6 = v5;

  return v6;
}

void ParticipantGridViewController.updateFullScreenInfo(with:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2_3();
  uint64_t v103 = v8;
  uint64_t v9 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_21();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v15 = OUTLINED_FUNCTION_8(v14);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_61();
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_62();
  char v18 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v19();
  _dispatchPreconditionTest(_:)();
  uint64_t v20 = OUTLINED_FUNCTION_1_18();
  v21(v20);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_28:
    swift_once();
    goto LABEL_19;
  }
  char v96 = (unsigned char *)v2;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  id v107 = v90;
  uint64_t v23 = OUTLINED_FUNCTION_8(v22);
  uint64_t v25 = *(void *)(v24 + 64);
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_71_4();
  uint64_t v28 = v26 - v27;
  OUTLINED_FUNCTION_2();
  uint64_t v29 = type metadata accessor for Participant(0);
  int v30 = OUTLINED_FUNCTION_94_0(v29);
  uint64_t v102 = (int *)v9;
  uint64_t v104 = v13;
  uint64_t v97 = v3;
  if (v30)
  {
    uint64_t v2 = type metadata accessor for UUID();
    uint64_t v31 = v28;
    uint64_t v32 = 1;
  }
  else
  {
    uint64_t v2 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_124();
    v33();
    uint64_t v31 = v28;
    uint64_t v32 = 0;
  }
  uint64_t v34 = __swift_storeEnumTagSinglePayload(v31, v32, 1, v2);
  *(void *)&long long v106 = v90;
  MEMORY[0x1F4188790](v34);
  unint64_t v35 = (v25 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v100 = v16;
  uint64_t v101 = (unsigned char *)v5;
  uint64_t v36 = v5 + *(int *)(v16 + 20);
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_10_0();
  uint64_t v38 = v37;
  uint64_t v39 = *(void *)(v37 + 16);
  uint64_t v95 = v36;
  uint64_t v98 = v39;
  uint64_t v99 = v37 + 16;
  OUTLINED_FUNCTION_2_1();
  v40();
  OUTLINED_FUNCTION_42_14((uint64_t)&v90[-v35], 0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  uint64_t v105 = v90;
  uint64_t v42 = OUTLINED_FUNCTION_8(v41);
  uint64_t v43 = MEMORY[0x1F4188790](v42);
  uint64_t v45 = &v90[-((v44 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = (uint64_t)&v45[*(int *)(v43 + 56)];
  uint64_t v47 = OUTLINED_FUNCTION_43();
  _s15ConversationKit11ParticipantVSgWOcTm_0(v47, v48, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)&v90[-v35], v46, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v49 = OUTLINED_FUNCTION_70_3();
  uint64_t v51 = OUTLINED_FUNCTION_33_0(v49, v50, v2);
  uint64_t v94 = v25;
  if (v53)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v90[-v35], (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?(v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_33_0(v46, 1, v2);
    if (v53)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v45, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_57_4();
      uint64_t v52 = v38;
      uint64_t v13 = v104;
      goto LABEL_15;
    }
LABEL_13:
    outlined destroy of SystemUpdateNotice?((uint64_t)v45, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_25;
  }
  id v93 = v90;
  MEMORY[0x1F4188790](v51);
  _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v45, (uint64_t)&v90[-v35], (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_33_0(v46, 1, v2);
  if (v53)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v90[-v35], (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_91_0();
    OUTLINED_FUNCTION_139();
    v54();
    goto LABEL_13;
  }
  id v92 = v90;
  uint64_t v52 = v38;
  OUTLINED_FUNCTION_102_0();
  MEMORY[0x1F4188790](v55);
  OUTLINED_FUNCTION_64();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 32))(v35, v46, v2);
  lazy protocol witness table accessor for type UUID and conformance UUID();
  OUTLINED_FUNCTION_99_2();
  int v91 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v56 = *(void (**)(void))(v38 + 8);
  OUTLINED_FUNCTION_139();
  v56();
  OUTLINED_FUNCTION_96_0();
  uint64_t v57 = OUTLINED_FUNCTION_162();
  outlined destroy of SystemUpdateNotice?(v57, v58);
  OUTLINED_FUNCTION_139();
  v56();
  uint64_t v13 = v104;
  outlined destroy of SystemUpdateNotice?((uint64_t)v45, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_57_4();
  if ((v91 & 1) == 0) {
    goto LABEL_25;
  }
LABEL_15:
  uint64_t v59 = (uint64_t)v101;
  uint64_t v60 = (uint64_t)v96;
  _s15ConversationKit11ParticipantVWOcTm_5((uint64_t)v101, (uint64_t)v96);
  __swift_storeEnumTagSinglePayload(v60, 0, 1, v100);
  uint64_t v9 = v97;
  uint64_t v61 = ParticipantGridViewController.focusedParticipant.setter(v60, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant, (void (*)(uint64_t))ParticipantGridViewController.fullScreenFocusedParticipant.didset);
  MEMORY[0x1F4188790](v61);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_2_1();
  v62();
  ParticipantGridViewController.aspectRatio(for:in:)(0, (uint64_t)v109);
  uint64_t v63 = ParticipantGridViewController.orientation(for:in:)(v59, 0);
  Participant.videoInfo.getter();
  outlined init with take of Any?((uint64_t)v110, (uint64_t)v111, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v111[0])
  {
    char v64 = v112;
    outlined release of LinearGradient((uint64_t)v110);
  }
  else
  {
    char v64 = 0;
  }
  uint64_t v65 = v102;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v52 + 32))(v13, v45, v2);
  outlined init with take of AspectRatio((uint64_t)v109, v13 + v65[5]);
  *(void *)(v13 + v65[6]) = v63;
  *(unsigned char *)(v13 + v65[7]) = v64;
  if (one-time initialization token for conversationKit != -1) {
    goto LABEL_28;
  }
LABEL_19:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v66 = OUTLINED_FUNCTION_25_15();
  long long v106 = xmmword_1C3769620;
  *(_OWORD *)(v66 + 16) = xmmword_1C3769620;
  uint64_t v67 = v103;
  _s15ConversationKit11ParticipantVWOcTm_5(v13, v103);
  OUTLINED_FUNCTION_64_2(v67, 0);
  uint64_t v68 = specialized >> prefix<A>(_:)();
  uint64_t v70 = v69;
  outlined destroy of SystemUpdateNotice?(v67, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  *(void *)(v66 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v66 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v66 + 32) = v68;
  *(void *)(v66 + 40) = v70;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  id v107 = ParticipantGridViewController.gridView.getter();
  if (v107)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
    uint64_t v71 = v100;
    OUTLINED_FUNCTION_33_21();
    uint64_t v72 = OUTLINED_FUNCTION_73_4();
    *(_OWORD *)(v72 + 16) = v106;
    uint64_t v73 = _s15ConversationKit11ParticipantVWOcTm_5((uint64_t)v101, v72 + v66);
    *(void *)&long long v106 = v90;
    uint64_t v74 = v94;
    MEMORY[0x1F4188790](v73);
    unint64_t v75 = (v74 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v76 = 1;
    uint64_t v105 = &v90[-v75];
    uint64_t v77 = __swift_storeEnumTagSinglePayload((uint64_t)&v90[-v75], 1, 1, v2);
    uint64_t v101 = v90;
    MEMORY[0x1F4188790](v77);
    uint64_t v78 = &v90[-v75];
    uint64_t v79 = v9;
    uint64_t v80 = v9 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
    OUTLINED_FUNCTION_2();
    if (!__swift_getEnumTagSinglePayload(v80, 1, v71))
    {
      OUTLINED_FUNCTION_2_1();
      v81();
      uint64_t v76 = 0;
    }
    uint64_t v82 = 1;
    uint64_t v83 = __swift_storeEnumTagSinglePayload((uint64_t)&v90[-v75], v76, 1, v2);
    char v96 = v90;
    MEMORY[0x1F4188790](v83);
    uint64_t v84 = &v90[-v75];
    uint64_t v85 = v79 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
    OUTLINED_FUNCTION_2();
    if (!__swift_getEnumTagSinglePayload(v85, 1, v71))
    {
      OUTLINED_FUNCTION_2_1();
      v86();
      uint64_t v82 = 0;
    }
    OUTLINED_FUNCTION_42_14((uint64_t)v84, v82);
    uint64_t v88 = v103;
    uint64_t v87 = v104;
    _s15ConversationKit11ParticipantVWOcTm_5(v104, v103);
    __swift_storeEnumTagSinglePayload(v88, 0, 1, (uint64_t)v102);
    char v108 = *(unsigned char *)(v79 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle);
    uint64_t v89 = v107;
    ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)();

    swift_bridgeObjectRelease();
    outlined destroy of SystemUpdateNotice?(v88, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v84, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v78, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_86_2();
    _s15ConversationKit11ParticipantVWOhTm_3(v87, (void (*)(void))type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_3(v13, (void (*)(void))type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo);
  }
LABEL_25:
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ParticipantGridViewController.fullScreenDefocus(to:animationStyle:)(Swift::OpaquePointer to, ConversationKit::ParticipantGridView::AnimationStyle animationStyle)
{
  OUTLINED_FUNCTION_14();
  int v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_53_6();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v3 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v11();
  char v12 = _dispatchPreconditionTest(_:)();
  uint64_t v13 = OUTLINED_FUNCTION_48_3();
  v14(v13);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (one-time initialization token for conversationKit != -1) {
LABEL_5:
  }
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v15 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v15 + 16) = xmmword_1C3769620;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  uint64_t v16 = String.init<A>(reflecting:)();
  uint64_t v18 = v17;
  *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v15 + 32) = v16;
  *(void *)(v15 + 40) = v18;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  type metadata accessor for Participant(0);
  uint64_t v19 = OUTLINED_FUNCTION_66_3();
  __swift_storeEnumTagSinglePayload(v19, v20, v21, v22);
  ParticipantGridViewController.focusedParticipant.setter(v2, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant, (void (*)(uint64_t))ParticipantGridViewController.fullScreenFocusedParticipant.didset);
  ParticipantGridViewController.update(with:animationStyle:forced:)(v7, v5, 0);
  OUTLINED_FUNCTION_15_0();
}

uint64_t ParticipantGridViewController.update(with:animationStyle:forced:)(uint64_t a1, int a2, int a3)
{
  int v255 = a3;
  int v256 = a2;
  uint64_t v260 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  int v251 = (char *)&v238 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v259 = (uint64_t)&v238 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CollectionOfOne<Participant>);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v248 = (uint64_t)&v238 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v278 = type metadata accessor for Participant.State(0);
  uint64_t v9 = MEMORY[0x1F4188790](v278);
  uint64_t v274 = (uint64_t)&v238 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  char v263 = (char *)&v238 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v272 = (uint64_t)&v238 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v257 = (uint64_t)&v238 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v258 = (uint64_t)&v238 - v18;
  MEMORY[0x1F4188790](v17);
  unsigned __int8 v267 = (char *)&v238 - v19;
  uint64_t v20 = type metadata accessor for Participant(0);
  uint64_t v262 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v270 = (uint64_t)&v238 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  v269 = (char *)&v238 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v250 = (uint64_t)&v238 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v247 = (uint64_t)&v238 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v271 = (uint64_t)&v238 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  v276 = (uint64_t *)((char *)&v238 - v32);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v273 = (char *)&v238 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v265 = (uint64_t)&v238 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v39 = (char *)&v238 - v38;
  uint64_t v40 = MEMORY[0x1F4188790](v37);
  uint64_t v252 = (uint64_t)&v238 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  id v266 = (char *)&v238 - v43;
  MEMORY[0x1F4188790](v42);
  uint64_t v268 = (char *)&v238 - v44;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v46 = MEMORY[0x1F4188790](v45 - 8);
  uint64_t v48 = (uint64_t *)((char *)&v238 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = MEMORY[0x1F4188790](v46);
  uint64_t v254 = (uint64_t)&v238 - v50;
  uint64_t v51 = MEMORY[0x1F4188790](v49);
  uint64_t v253 = (uint64_t)&v238 - v52;
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  uint64_t v55 = (char *)&v238 - v54;
  MEMORY[0x1F4188790](v53);
  uint64_t v57 = (char *)&v238 - v56;
  uint64_t v58 = type metadata accessor for DispatchPredicate();
  uint64_t v59 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v61 = (uint64_t *)((char *)&v238 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v61 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v59 + 104))(v61, *MEMORY[0x1E4FBCBE8], v58);
  char v62 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v59 + 8))(v61, v58);
  if ((v62 & 1) == 0)
  {
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  uint64_t v63 = v264;
  uint64_t v64 = (uint64_t)&v264[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant];
  swift_beginAccess();
  uint64_t v261 = v64;
  _s15ConversationKit11ParticipantVSgWOcTm_0(v64, (uint64_t)v57, &demangling cache variable for type metadata for Participant?);
  LODWORD(v64) = __swift_getEnumTagSinglePayload((uint64_t)v57, 1, v20);
  outlined destroy of SystemUpdateNotice?((uint64_t)v57, &demangling cache variable for type metadata for Participant?);
  if (v64 != 1)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_32:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v115 = swift_allocObject();
      *(_OWORD *)(v115 + 16) = xmmword_1C3769620;
      _s15ConversationKit11ParticipantVSgWOcTm_0(v261, (uint64_t)v48, &demangling cache variable for type metadata for Participant?);
      uint64_t v116 = specialized >> prefix<A>(_:)();
      uint64_t v118 = v117;
      outlined destroy of SystemUpdateNotice?((uint64_t)v48, &demangling cache variable for type metadata for Participant?);
      *(void *)(v115 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v115 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v115 + 32) = v116;
      *(void *)(v115 + 40) = v118;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      return swift_bridgeObjectRelease();
    }
LABEL_108:
    swift_once();
    goto LABEL_32;
  }
  uint64_t v65 = v63;
  uint64_t v66 = v20;
  uint64_t v67 = (uint64_t)&v63[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant];
  swift_beginAccess();
  uint64_t v48 = &demangling cache variable for type metadata for Participant?;
  _s15ConversationKit11ParticipantVSgWOcTm_0(v67, (uint64_t)v55, &demangling cache variable for type metadata for Participant?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v55, 1, v20);
  uint64_t result = outlined destroy of SystemUpdateNotice?((uint64_t)v55, &demangling cache variable for type metadata for Participant?);
  if (EnumTagSinglePayload != 1) {
    return result;
  }
  uint64_t v70 = (uint64_t *)&v63[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants];
  swift_beginAccess();
  uint64_t v71 = *v70;
  swift_bridgeObjectRetain();
  id v72 = ParticipantGridViewController.filterAndTruncate(_:)();
  id v246 = v70;
  *uint64_t v70 = (uint64_t)v72;
  swift_bridgeObjectRelease();
  id v242 = ParticipantGridViewController.gridView.getter();
  if (!v242) {
    goto LABEL_98;
  }
  uint64_t v239 = v67;
  uint64_t v73 = *v246;
  uint64_t v74 = *(void *)(*v246 + 16);
  uint64_t v277 = v66;
  uint64_t v249 = v71;
  if (v74)
  {
    uint64_t v75 = v74;
    uint64_t v76 = v262;
    unint64_t v77 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    int64_t v275 = v73 + v77;
    uint64_t v241 = v71 + v77;
    uint64_t v78 = swift_bridgeObjectRetain();
    unint64_t v79 = 0;
    uint64_t v240 = MEMORY[0x1E4FBC860];
    uint64_t v80 = (uint64_t)v268;
    uint64_t v81 = (uint64_t)v269;
    uint64_t v82 = v267;
    while (v79 < *(void *)(v78 + 16))
    {
      unint64_t v83 = v79;
      uint64_t v84 = *(void *)(v76 + 72);
      ++v79;
      _s15ConversationKit11ParticipantVWOcTm_5(v275 + v84 * v83, v80);
      _s15ConversationKit11ParticipantVWOcTm_5(v80, (uint64_t)v82);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v87 = (uint64_t)&v82[*(int *)(v86 + 48)];
          outlined consume of Participant.CopresenceInfo?(*(void *)&v82[*(int *)(v86 + 64)], *(void *)&v82[*(int *)(v86 + 64) + 8]);
          outlined destroy of Participant.MediaInfo(v87);
          uint64_t v88 = type metadata accessor for Date();
          uint64_t v89 = *(void *)(v88 - 8);
          uint64_t v90 = *(uint64_t **)(v89 + 8);
          uint64_t v243 = v88;
          uint64_t v244 = v89 + 8;
          id v245 = v90;
          ((void (*)(char *))v90)(v82);
          uint64_t v91 = *(void *)(v249 + 16);
          if (!v91) {
            goto LABEL_19;
          }
          id v92 = &v268[*(int *)(v277 + 20)];
          swift_bridgeObjectRetain();
          uint64_t v93 = v241;
          while (1)
          {
            _s15ConversationKit11ParticipantVWOcTm_5(v93, (uint64_t)v39);
            if (static UUID.== infix(_:_:)()) {
              break;
            }
            _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v39, (void (*)(void))type metadata accessor for Participant);
            v93 += v84;
            if (!--v91)
            {
              swift_bridgeObjectRelease();
              uint64_t v81 = (uint64_t)v269;
              uint64_t v82 = v267;
LABEL_19:
              uint64_t v80 = (uint64_t)v268;
              _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v268, (void (*)(void))type metadata accessor for Participant);
              uint64_t v76 = v262;
              goto LABEL_11;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v94 = v252;
          _s15ConversationKit11ParticipantVWObTm_2((uint64_t)v39, v252);
          uint64_t v95 = v94;
          char v96 = v266;
          _s15ConversationKit11ParticipantVWObTm_2(v95, (uint64_t)v266);
          _s15ConversationKit11ParticipantVWOcTm_5((uint64_t)v96, v258);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v48 = v276;
          uint64_t v98 = v268;
          switch(EnumCaseMultiPayload)
          {
            case 4:
              uint64_t v102 = v258;
              uint64_t v103 = v258 + *(int *)(v86 + 48);
              outlined consume of Participant.CopresenceInfo?(*(void *)(v258 + *(int *)(v86 + 64)), *(void *)(v258 + *(int *)(v86 + 64) + 8));
              uint64_t v104 = v103;
              uint64_t v80 = (uint64_t)v268;
              outlined destroy of Participant.MediaInfo(v104);
              ((void (*)(uint64_t, uint64_t))v245)(v102, v243);
              _s15ConversationKit11ParticipantVWOcTm_5(v80, v265);
              uint64_t v82 = v267;
LABEL_24:
              _s15ConversationKit11ParticipantVWOhTm_3(v265, (void (*)(void))type metadata accessor for Participant);
              _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v266, (void (*)(void))type metadata accessor for Participant);
              _s15ConversationKit11ParticipantVWOhTm_3(v80, (void (*)(void))type metadata accessor for Participant);
              uint64_t v81 = (uint64_t)v269;
              uint64_t v76 = v262;
              break;
            case 6:
              goto LABEL_22;
            default:
              ((void (*)(uint64_t, uint64_t))v245)(v258, v243);
LABEL_22:
              uint64_t v99 = (uint64_t)v98;
              uint64_t v100 = v265;
              _s15ConversationKit11ParticipantVWOcTm_5(v99, v265);
              _s15ConversationKit11ParticipantVWOcTm_5(v100, v257);
              int v101 = swift_getEnumCaseMultiPayload();
              uint64_t v82 = v267;
              uint64_t v80 = (uint64_t)v268;
              switch(v101)
              {
                case 4:
                  uint64_t v105 = v257;
                  uint64_t v106 = v257 + *(int *)(v86 + 48);
                  outlined consume of Participant.CopresenceInfo?(*(void *)(v257 + *(int *)(v86 + 64)), *(void *)(v257 + *(int *)(v86 + 64) + 8));
                  outlined destroy of Participant.MediaInfo(v106);
                  ((void (*)(uint64_t, uint64_t))v245)(v105, v243);
                  _s15ConversationKit11ParticipantVWOhTm_3(v265, (void (*)(void))type metadata accessor for Participant);
                  uint64_t v107 = type metadata accessor for UUID();
                  uint64_t v108 = *(void *)(v107 - 8);
                  MEMORY[0x1F4188790](v107);
                  uint64_t v110 = (char *)&v238 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
                  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v110, v92, v107);
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  id v245 = &v238;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                    uint64_t v240 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v240 + 16) + 1, 1, v240);
                  }
                  unint64_t v113 = *(void *)(v240 + 16);
                  unint64_t v112 = *(void *)(v240 + 24);
                  if (v113 >= v112 >> 1) {
                    uint64_t v240 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v112 > 1, v113 + 1, 1, v240);
                  }
                  uint64_t v114 = v240;
                  *(void *)(v240 + 16) = v113 + 1;
                  (*(void (**)(unint64_t, char *, uint64_t))(v108 + 32))(v114+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ *(void *)(v108 + 72) * v113, v110, v107);
                  _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v266, (void (*)(void))type metadata accessor for Participant);
                  uint64_t v80 = (uint64_t)v268;
                  _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v268, (void (*)(void))type metadata accessor for Participant);
                  uint64_t v81 = (uint64_t)v269;
                  uint64_t v76 = v262;
                  uint64_t v48 = v276;
                  uint64_t v82 = v267;
                  break;
                case 6:
                  goto LABEL_24;
                default:
                  ((void (*)(uint64_t, uint64_t))v245)(v257, v243);
                  goto LABEL_24;
              }
              break;
          }
          break;
        case 6u:
          goto LABEL_10;
        default:
          uint64_t v85 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(void *)(v85 - 8) + 8))(v82, v85);
LABEL_10:
          _s15ConversationKit11ParticipantVWOhTm_3(v80, (void (*)(void))type metadata accessor for Participant);
LABEL_11:
          uint64_t v48 = v276;
          break;
      }
      uint64_t v78 = v73;
      if (v79 == v75)
      {
        swift_bridgeObjectRelease();
        uint64_t v66 = v277;
        goto LABEL_35;
      }
    }
    __break(1u);
    goto LABEL_107;
  }
  uint64_t v240 = MEMORY[0x1E4FBC860];
  uint64_t v81 = (uint64_t)v269;
  uint64_t v48 = v276;
LABEL_35:
  ParticipantGridView.participantIdentifiers.getter();
  uint64_t v120 = v119;
  uint64_t v121 = *v246;
  uint64_t v122 = *(void *)(*v246 + 16);
  uint64_t v123 = MEMORY[0x1E4FBC860];
  uint64_t v124 = v264;
  if (v122)
  {
    uint64_t v258 = v119;
    v281[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v122, 0);
    uint64_t v125 = v262;
    unint64_t v126 = (*(unsigned __int8 *)(v262 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v262 + 80);
    uint64_t v257 = v121;
    uint64_t v127 = v121 + v126;
    uint64_t v128 = type metadata accessor for UUID();
    uint64_t v129 = v128;
    uint64_t v130 = *(void *)(v128 - 8);
    uint64_t v268 = *(char **)(v130 + 64);
    id v131 = *(char **)(v125 + 72);
    id v266 = (char *)(v130 + 16);
    unsigned __int8 v267 = v131;
    uint64_t v265 = v130 + 32;
    do
    {
      int64_t v275 = (int64_t)&v238;
      MEMORY[0x1F4188790](v128);
      id v133 = (char *)&v238 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v134 = v273;
      _s15ConversationKit11ParticipantVWOcTm_5(v127, (uint64_t)v273);
      (*(void (**)(char *, char *, uint64_t))v266)(v133, &v134[*(int *)(v66 + 20)], v129);
      _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v134, (void (*)(void))type metadata accessor for Participant);
      uint64_t v123 = v281[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v123 + 16) + 1, 1);
        uint64_t v123 = v281[0];
      }
      unint64_t v136 = *(void *)(v123 + 16);
      unint64_t v135 = *(void *)(v123 + 24);
      if (v136 >= v135 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v135 > 1, v136 + 1, 1);
        uint64_t v123 = v281[0];
      }
      *(void *)(v123 + 16) = v136 + 1;
      uint64_t v128 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v130 + 32))(v123+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(void *)(v130 + 72) * v136, v133, v129);
      v281[0] = v123;
      uint64_t v48 = v276;
      v127 += (uint64_t)v267;
      --v122;
      uint64_t v66 = v277;
    }
    while (v122);
    swift_bridgeObjectRelease();
    uint64_t v124 = v264;
    uint64_t v81 = (uint64_t)v269;
    uint64_t v120 = v258;
  }
  uint64_t v137 = specialized Array<A>.arrayCloselyMatching(_:)(v123, v120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v284 = v137;
  uint64_t v138 = *(void *)&v124[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsBeforeFocus];
  uint64_t v139 = (uint64_t)v263;
  if (v138)
  {
    uint64_t v140 = *(void *)(v138 + 16);
    uint64_t v141 = MEMORY[0x1E4FBC860];
    if (v140)
    {
      v281[0] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v140, 0);
      uint64_t v142 = v262;
      unint64_t v143 = (*(unsigned __int8 *)(v262 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v262 + 80);
      uint64_t v258 = v138;
      uint64_t v144 = v138 + v143;
      uint64_t v145 = type metadata accessor for UUID();
      uint64_t v146 = v145;
      uint64_t v147 = *(void *)(v145 - 8);
      uint64_t v268 = *(char **)(v147 + 64);
      id v148 = *(char **)(v142 + 72);
      id v266 = (char *)(v147 + 16);
      unsigned __int8 v267 = v148;
      uint64_t v265 = v147 + 32;
      do
      {
        int64_t v275 = (int64_t)&v238;
        MEMORY[0x1F4188790](v145);
        id v150 = (char *)&v238 - ((v149 + 15) & 0xFFFFFFFFFFFFFFF0);
        id v151 = v273;
        _s15ConversationKit11ParticipantVWOcTm_5(v144, (uint64_t)v273);
        (*(void (**)(char *, char *, uint64_t))v266)(v150, &v151[*(int *)(v277 + 20)], v146);
        _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v151, (void (*)(void))type metadata accessor for Participant);
        uint64_t v141 = v281[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v141 + 16) + 1, 1);
          uint64_t v141 = v281[0];
        }
        unint64_t v153 = *(void *)(v141 + 16);
        unint64_t v152 = *(void *)(v141 + 24);
        if (v153 >= v152 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v152 > 1, v153 + 1, 1);
          uint64_t v141 = v281[0];
        }
        *(void *)(v141 + 16) = v153 + 1;
        uint64_t v145 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v147 + 32))(v141+ ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80))+ *(void *)(v147 + 72) * v153, v150, v146);
        v281[0] = v141;
        v144 += (uint64_t)v267;
        --v140;
        uint64_t v81 = (uint64_t)v269;
      }
      while (v140);
      swift_bridgeObjectRelease();
      uint64_t v139 = (uint64_t)v263;
      uint64_t v124 = v264;
    }
    specialized Array<A>.sortToMatch(_:)(v141);
    swift_bridgeObjectRelease();
    uint64_t v48 = v276;
    uint64_t v66 = v277;
  }
  id v154 = v124;
  id v155 = (void *)swift_bridgeObjectRetain();
  id v266 = v154;
  uint64_t v156 = specialized Sequence.compactMap<A>(_:)(v155, v154);
  swift_bridgeObjectRelease();
  uint64_t v283 = v156;
  uint64_t v157 = *(void *)(v156 + 16);
  if (!v157) {
    goto LABEL_71;
  }
  unint64_t v158 = (*(unsigned __int8 *)(v262 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v262 + 80);
  int64_t v275 = *(void *)(v262 + 72);
  uint64_t v273 = (char *)&v281[12];
  unsigned __int8 v267 = &v279[32];
  uint64_t v268 = (char *)&v282[4];
  swift_bridgeObjectRetain();
  unint64_t v159 = 0;
  while (1)
  {
    _s15ConversationKit11ParticipantVWOcTm_5(v156 + v158, (uint64_t)v48);
    uint64_t v160 = v272;
    _s15ConversationKit11ParticipantVWOcTm_5((uint64_t)v48, v272);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      id v162 = (const void *)(v160 + *(int *)(v161 + 48));
      outlined consume of Participant.CopresenceInfo?(*(void *)(v160 + *(int *)(v161 + 64)), *(void *)(v160 + *(int *)(v161 + 64) + 8));
      memcpy(v281, v162, sizeof(v281));
      uint64_t v163 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v163 - 8) + 8))(v160, v163);
      _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v273, (uint64_t)v282, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of Participant.MediaInfo((uint64_t)v281);
      if (v282[3] != 1)
      {
        memcpy(v281, v282, 0xD1uLL);
        char v164 = v281[5];
        outlined destroy of Participant.ScreenInfo((uint64_t)v281);
        uint64_t v139 = (uint64_t)v263;
        uint64_t v48 = v276;
        goto LABEL_60;
      }
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_3(v160, (void (*)(void))type metadata accessor for Participant.State);
      memset(v282, 0, 24);
      v282[3] = 1;
      bzero(v268, 0xB1uLL);
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v282, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    char v164 = 2;
LABEL_60:
    uint64_t v165 = v271;
    _s15ConversationKit11ParticipantVWOcTm_5((uint64_t)v48, v271);
    if (v164 == 2) {
      goto LABEL_67;
    }
    _s15ConversationKit11ParticipantVWOcTm_5(v165, v139);
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      _s15ConversationKit11ParticipantVWOhTm_3(v139, (void (*)(void))type metadata accessor for Participant.State);
      memset(v279, 0, 24);
      *(void *)&v279[24] = 1;
      bzero(v267, 0xB1uLL);
LABEL_66:
      outlined destroy of SystemUpdateNotice?((uint64_t)v279, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
LABEL_67:
      _s15ConversationKit11ParticipantVWOhTm_3(v165, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v48, (void (*)(void))type metadata accessor for Participant);
      goto LABEL_68;
    }
    uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    id v167 = (const void *)(v139 + *(int *)(v166 + 48));
    outlined consume of Participant.CopresenceInfo?(*(void *)(v139 + *(int *)(v166 + 64)), *(void *)(v139 + *(int *)(v166 + 64) + 8));
    memcpy(v281, v167, sizeof(v281));
    uint64_t v168 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v168 - 8) + 8))(v139, v168);
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v273, (uint64_t)v279, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of Participant.MediaInfo((uint64_t)v281);
    if (*(void *)&v279[24] == 1) {
      goto LABEL_66;
    }
    memcpy(v282, v279, 0xD1uLL);
    uint64_t v169 = v165;
    char v170 = v282[5];
    outlined destroy of Participant.ScreenInfo((uint64_t)v282);
    uint64_t v171 = v169;
    uint64_t v48 = v276;
    _s15ConversationKit11ParticipantVWOhTm_3(v171, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v48, (void (*)(void))type metadata accessor for Participant);
    if (v170) {
      break;
    }
LABEL_68:
    ++v159;
    v158 += v275;
    if (v157 == v159)
    {
      swift_bridgeObjectRelease();
      goto LABEL_70;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v234 = v283;
  char v235 = swift_isUniquelyReferenced_nonNull_native();
  if ((v235 & 1) == 0) {
    uint64_t v234 = specialized _ArrayBuffer._consumeAndCreateNew()();
  }
  unint64_t v236 = *(void *)(v234 + 16);
  if (v236 <= v159)
  {
    __break(1u);
    JUMPOUT(0x1C3272888);
  }
  uint64_t v237 = v247;
  _s15ConversationKit11ParticipantVWObTm_2(v234 + v158, v247);
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v234 + v158 + v275, ~v159 + v236, v234 + v158, (void (*)(void))type metadata accessor for Participant);
  *(void *)(v234 + 16) = v236 - 1;
  uint64_t v283 = v234;
  _s15ConversationKit11ParticipantVWOcTm_5(v237, v248);
  specialized Array.replaceSubrange<A>(_:with:)();
  _s15ConversationKit11ParticipantVWOhTm_3(v237, (void (*)(void))type metadata accessor for Participant);
LABEL_70:
  uint64_t v66 = v277;
  uint64_t v81 = (uint64_t)v269;
LABEL_71:
  *id v246 = v283;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v172 = v253;
  _s15ConversationKit11ParticipantVSgWOcTm_0(v239, v253, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v172, 1, v66) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v172, &demangling cache variable for type metadata for Participant?);
    uint64_t v173 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
    __swift_storeEnumTagSinglePayload(v259, 1, 1, v173);
  }
  else
  {
    uint64_t v174 = v250;
    _s15ConversationKit11ParticipantVWObTm_2(v172, v250);
    uint64_t v175 = v174 + *(int *)(v66 + 20);
    uint64_t v176 = type metadata accessor for UUID();
    uint64_t v177 = *(void *)(v176 - 8);
    MEMORY[0x1F4188790](v176);
    uint64_t v179 = (char *)&v238 - ((v178 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v177 + 16))(v179, v175, v176);
    id v180 = v242;
    id v181 = v242;
    ParticipantGridViewController.aspectRatio(for:in:)(v180, (uint64_t)v279);
    uint64_t v182 = ParticipantGridViewController.orientation(for:in:)(v174, v180);

    Participant.videoInfo.getter();
    _s15ConversationKit11ParticipantVWOhTm_3(v174, (void (*)(void))type metadata accessor for Participant);
    outlined init with take of Any?((uint64_t)v282, (uint64_t)v281, &demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v281[0])
    {
      char v183 = v281[4];
      outlined release of LinearGradient((uint64_t)v282);
    }
    else
    {
      char v183 = 0;
    }
    uint64_t v184 = (uint64_t)v251;
    (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v251, v179, v176);
    uint64_t v185 = (int *)type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
    outlined init with take of AspectRatio((uint64_t)v279, v184 + v185[5]);
    *(void *)(v184 + v185[6]) = v182;
    *(unsigned char *)(v184 + v185[7]) = v183;
    __swift_storeEnumTagSinglePayload(v184, 0, 1, (uint64_t)v185);
    outlined init with take of Any?(v184, v259, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    uint64_t v81 = (uint64_t)v269;
  }
  uint64_t v186 = (void *)v283;
  uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v276 = &v238;
  uint64_t v188 = *(void *)(*(void *)(v187 - 8) + 64);
  MEMORY[0x1F4188790](v187 - 8);
  uint64_t v189 = (char *)&v238 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = *(void *)(v260 + 16);
  int64_t v275 = (int64_t)v186;
  if (v190)
  {
    uint64_t v191 = v260 + ((*(unsigned __int8 *)(v262 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v262 + 80));
    uint64_t v192 = *(void *)(v262 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v193 = v270;
    while (2)
    {
      _s15ConversationKit11ParticipantVWOcTm_5(v191, v81);
      _s15ConversationKit11ParticipantVWOcTm_5(v81, v274);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v197 = v274;
          uint64_t v198 = v274 + *(int *)(v196 + 48);
          outlined consume of Participant.CopresenceInfo?(*(void *)(v274 + *(int *)(v196 + 64)), *(void *)(v274 + *(int *)(v196 + 64) + 8));
          outlined destroy of Participant.MediaInfo(v198);
          uint64_t v199 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v199 - 8) + 8))(v197, v199);
          _s15ConversationKit11ParticipantVWOcTm_5(v81, v193);
          uint64_t v200 = *(void *)(v193 + *(int *)(v277 + 28));
          _s15ConversationKit11ParticipantVWOhTm_3(v193, (void (*)(void))type metadata accessor for Participant);
          if (!v200) {
            goto LABEL_82;
          }
          swift_bridgeObjectRelease();
          uint64_t v201 = v254;
          _s15ConversationKit11ParticipantVWObTm_2(v81, v254);
          uint64_t v202 = v201;
          uint64_t v203 = 0;
          uint64_t v66 = v277;
          goto LABEL_88;
        case 6u:
          goto LABEL_81;
        default:
          uint64_t v194 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v194 - 8) + 8))(v274, v194);
LABEL_81:
          uint64_t v195 = v270;
          _s15ConversationKit11ParticipantVWOcTm_5(v81, v270);
          _s15ConversationKit11ParticipantVWOhTm_3(v195, (void (*)(void))type metadata accessor for Participant);
LABEL_82:
          _s15ConversationKit11ParticipantVWOhTm_3(v81, (void (*)(void))type metadata accessor for Participant);
          v191 += v192;
          if (--v190) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v66 = v277;
          break;
      }
      break;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v201 = v254;
  uint64_t v202 = v254;
  uint64_t v203 = 1;
LABEL_88:
  __swift_storeEnumTagSinglePayload(v202, v203, 1, v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v201, 1, v66) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v201, &demangling cache variable for type metadata for Participant?);
    uint64_t v204 = type metadata accessor for UUID();
    id v205 = (char *)&v238 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v206 = 1;
  }
  else
  {
    uint64_t v207 = v201 + *(int *)(v66 + 20);
    uint64_t v208 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v208 - 8) + 16))((char *)&v238 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0), v207, v208);
    _s15ConversationKit11ParticipantVWOhTm_3(v201, (void (*)(void))type metadata accessor for Participant);
    id v205 = (char *)&v238 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v206 = 0;
    uint64_t v204 = v208;
  }
  uint64_t v209 = __swift_storeEnumTagSinglePayload((uint64_t)v205, v206, 1, v204);
  uint64_t v210 = v261;
  MEMORY[0x1F4188790](v209);
  double v211 = (char *)&v238 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v212 = __swift_getEnumTagSinglePayload(v210, 1, v66);
  id v213 = v266;
  if (v212)
  {
    uint64_t v214 = type metadata accessor for UUID();
    id v215 = (char *)&v238 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v216 = 1;
  }
  else
  {
    uint64_t v217 = v210 + *(int *)(v66 + 20);
    uint64_t v218 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v218 - 8) + 16))((char *)&v238 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0), v217, v218);
    id v215 = (char *)&v238 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v216 = 0;
    uint64_t v214 = v218;
  }
  uint64_t v219 = __swift_storeEnumTagSinglePayload((uint64_t)v215, v216, 1, v214);
  MEMORY[0x1F4188790](v219);
  id v220 = (char *)&v238 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = (uint64_t)&v213[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant];
  swift_beginAccess();
  if (__swift_getEnumTagSinglePayload(v221, 1, v66))
  {
    uint64_t v222 = type metadata accessor for UUID();
    uint64_t v223 = (uint64_t)v220;
    uint64_t v224 = 1;
  }
  else
  {
    uint64_t v225 = v221 + *(int *)(v66 + 20);
    uint64_t v226 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v226 - 8) + 16))(v220, v225, v226);
    uint64_t v223 = (uint64_t)v220;
    uint64_t v224 = 0;
    uint64_t v222 = v226;
  }
  __swift_storeEnumTagSinglePayload(v223, v224, 1, v222);
  char v280 = v213[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle];
  uint64_t v227 = v259;
  id v228 = v242;
  ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)();

  swift_bridgeObjectRelease();
  outlined destroy of SystemUpdateNotice?((uint64_t)v220, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of SystemUpdateNotice?((uint64_t)v211, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of SystemUpdateNotice?((uint64_t)v189, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of SystemUpdateNotice?(v227, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  uint64_t v65 = v264;
  uint64_t v71 = v249;
LABEL_98:
  id v229 = &v65[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate];
  swift_beginAccess();
  if (!MEMORY[0x1C8776240](v229)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v230 = *((void *)v229 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v232 = *v246;
  id v233 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v230 + 32);
  swift_bridgeObjectRetain();
  v233(v65, v71, v232, ObjectType, v230);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

void ParticipantGridViewController.focus(on:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v94 = v0;
  id v92 = (long long *)v4;
  uint64_t v5 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v89 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_54_6(v8, v86);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  uint64_t v10 = OUTLINED_FUNCTION_8(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_36();
  uint64_t v13 = v11 - v12;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_98_1(v15, v16, v17, v18, v19, v20, v21, v22, v86);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v24 = OUTLINED_FUNCTION_8(v23);
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_55_0();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_53_1();
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v86 - v27;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v30();
  char v31 = _dispatchPreconditionTest(_:)();
  uint64_t v32 = OUTLINED_FUNCTION_48_3();
  v33(v32);
  if (v31)
  {
    uint64_t v87 = v13;
    if (one-time initialization token for conversationKit == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v34 = OUTLINED_FUNCTION_25_15();
  long long v86 = xmmword_1C3769620;
  *(_OWORD *)(v34 + 16) = xmmword_1C3769620;
  _s15ConversationKit11ParticipantVWOcTm_5((uint64_t)v92, (uint64_t)v28);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v5);
  uint64_t v35 = specialized >> prefix<A>(_:)();
  uint64_t v91 = (long long *)v5;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  outlined destroy of SystemUpdateNotice?((uint64_t)v28, &demangling cache variable for type metadata for Participant?);
  *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v34 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v34 + 32) = v36;
  *(void *)(v34 + 40) = v38;
  uint64_t v39 = (uint64_t)v91;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v40 = v94;
  uint64_t v41 = v94 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
  OUTLINED_FUNCTION_2();
  uint64_t v90 = (long long *)v41;
  _s15ConversationKit11ParticipantVSgWOcTm_0(v41, v2, &demangling cache variable for type metadata for Participant?);
  uint64_t v42 = OUTLINED_FUNCTION_100();
  LODWORD(v41) = __swift_getEnumTagSinglePayload(v42, v43, v39);
  outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
  if (v41 == 1)
  {
    uint64_t v44 = (void *)(v40 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants);
    OUTLINED_FUNCTION_2();
    *(void *)(v40 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsBeforeFocus) = *v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v45 = (uint64_t)v92;
  _s15ConversationKit11ParticipantVWOcTm_5((uint64_t)v92, (uint64_t)v28);
  OUTLINED_FUNCTION_42_14((uint64_t)v28, 0);
  ParticipantGridViewController.focusedParticipant.setter((uint64_t)v28, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant, (void (*)(uint64_t))ParticipantGridViewController.focusedParticipant.didset);
  uint64_t v46 = v94;
  _s15ConversationKit11ParticipantVWOcTm_5(v45, (uint64_t)v28);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v39);
  OUTLINED_FUNCTION_85_2();
  ParticipantGridViewController.select(_:forFocusing:)();
  outlined destroy of SystemUpdateNotice?((uint64_t)v28, &demangling cache variable for type metadata for Participant?);
  uint64_t v47 = v46 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
  OUTLINED_FUNCTION_2();
  _s15ConversationKit11ParticipantVSgWOcTm_0(v47, v3, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_33_0(v3, 1, v39);
  if (v48)
  {
    outlined destroy of SystemUpdateNotice?(v3, &demangling cache variable for type metadata for Participant?);
    uint64_t v49 = (uint64_t *)(v46 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants);
    OUTLINED_FUNCTION_2();
    uint64_t v50 = *v49;
    uint64_t v51 = type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
    __swift_storeEnumTagSinglePayload(v93, 1, 1, v51);
    uint64_t v89 = v50;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v52 = v88;
    _s15ConversationKit11ParticipantVWObTm_2(v3, v88);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
    unint64_t v53 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = v86;
    uint64_t v89 = v54;
    _s15ConversationKit11ParticipantVWOcTm_5(v52, v54 + v53);
    uint64_t v55 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_4();
    uint64_t v57 = v56;
    MEMORY[0x1F4188790](v58);
    OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_99_2();
    OUTLINED_FUNCTION_2_1();
    v59();
    ParticipantGridViewController.aspectRatio(for:in:)(0, (uint64_t)v96);
    uint64_t v60 = ParticipantGridViewController.orientation(for:in:)(v52, 0);
    Participant.videoInfo.getter();
    _s15ConversationKit11ParticipantVWOhTm_3(v52, (void (*)(void))type metadata accessor for Participant);
    outlined init with take of Any?((uint64_t)v97, (uint64_t)v98, &demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v98[0])
    {
      char v61 = v99;
      outlined release of LinearGradient((uint64_t)v97);
    }
    else
    {
      char v61 = 0;
    }
    uint64_t v62 = v87;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v87, v2, v55);
    uint64_t v63 = (int *)type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
    outlined init with take of AspectRatio((uint64_t)v96, v62 + v63[5]);
    *(void *)(v62 + v63[6]) = v60;
    *(unsigned char *)(v62 + v63[7]) = v61;
    OUTLINED_FUNCTION_29_22(v62);
    outlined init with take of Any?(v62, v93, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    uint64_t v39 = (uint64_t)v91;
  }
  id v64 = ParticipantGridViewController.gridView.getter();
  if (v64)
  {
    uint64_t v65 = v64;
    uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    id v92 = &v86;
    uint64_t v67 = v39;
    uint64_t v68 = *(void *)(*(void *)(v66 - 8) + 64);
    MEMORY[0x1F4188790](v66 - 8);
    unint64_t v69 = (v68 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v70 = type metadata accessor for UUID();
    uint64_t v71 = 1;
    uint64_t v72 = OUTLINED_FUNCTION_85_2();
    uint64_t v74 = __swift_storeEnumTagSinglePayload(v72, v73, 1, v70);
    uint64_t v91 = &v86;
    MEMORY[0x1F4188790](v74);
    uint64_t v75 = (char *)&v86 - v69;
    uint64_t v76 = OUTLINED_FUNCTION_100();
    if (!__swift_getEnumTagSinglePayload(v76, v77, v67))
    {
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_124();
      v78();
      uint64_t v71 = 0;
    }
    uint64_t v79 = 1;
    uint64_t v80 = __swift_storeEnumTagSinglePayload((uint64_t)&v86 - v69, v71, 1, v70);
    uint64_t v90 = &v86;
    MEMORY[0x1F4188790](v80);
    uint64_t v81 = (char *)&v86 - v69;
    uint64_t v82 = v94;
    uint64_t v83 = v94 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
    OUTLINED_FUNCTION_2();
    if (!__swift_getEnumTagSinglePayload(v83, 1, v67))
    {
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_124();
      v84();
      uint64_t v79 = 0;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v81, v79, 1, v70);
    char v95 = *(unsigned char *)(v82 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle);
    OUTLINED_FUNCTION_29_0();
    uint64_t v85 = v93;
    ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)();
    swift_bridgeObjectRelease();

    outlined destroy of SystemUpdateNotice?((uint64_t)v81, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v75, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_86_2();
    outlined destroy of SystemUpdateNotice?(v85, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?(v93, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ParticipantGridViewController.defocus(to:)(Swift::OpaquePointer to)
{
  OUTLINED_FUNCTION_31();
  uint64_t v138 = v1;
  uint64_t v4 = (uint64_t)v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_54_6(v7, v127);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_10_5();
  uint64_t v137 = v10;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_8_4();
  uint64_t v136 = v12;
  OUTLINED_FUNCTION_8_1();
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_98_1(v14, v15, v16, v17, v18, v19, v20, v21, v127);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CollectionOfOne<Participant>);
  uint64_t v23 = OUTLINED_FUNCTION_8(v22);
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_2_3();
  uint64_t v127 = v24;
  uint64_t v25 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v134 = v26;
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_10_5();
  uint64_t v132 = v28;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_8_4();
  uint64_t v133 = v30;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v31);
  uint64_t v131 = (uint64_t)&v127 - v32;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v33);
  OUTLINED_FUNCTION_62();
  char v34 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v35();
  _dispatchPreconditionTest(_:)();
  uint64_t v36 = OUTLINED_FUNCTION_1_18();
  v37(v36);
  if ((v34 & 1) == 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v2 = v155;
  if (one-time initialization token for conversationKit != -1) {
LABEL_43:
  }
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v38 = OUTLINED_FUNCTION_25_15();
  long long v129 = xmmword_1C3769620;
  *(_OWORD *)(v38 + 16) = xmmword_1C3769620;
  *uint64_t v2 = v4;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  uint64_t v39 = String.init<A>(reflecting:)();
  uint64_t v41 = v40;
  *(void *)(v38 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v38 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v38 + 32) = v39;
  *(void *)(v38 + 40) = v41;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v152 = v4;
  uint64_t v144 = *(uint64_t **)(v4 + 16);
  uint64_t v145 = v25;
  if (!v144)
  {
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  uint64_t v42 = v134;
  unint64_t v43 = (*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
  uint64_t v44 = v138;
  uint64_t v45 = (uint64_t)&v138[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant];
  swift_bridgeObjectRetain();
  id v128 = v44;
  OUTLINED_FUNCTION_2();
  uint64_t v46 = 0;
  uint64_t v47 = *(uint64_t **)(v42 + 72);
  uint64_t v141 = v45;
  uint64_t v142 = v47;
  char v48 = (char *)v43;
  unint64_t v143 = (char *)v4;
  while (1)
  {
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v149 = &v127;
    uint64_t v50 = OUTLINED_FUNCTION_8(v49);
    uint64_t v52 = *(void *)(v51 + 64);
    MEMORY[0x1F4188790](v50);
    unint64_t v53 = (char *)&v127 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v45, 1, v25);
    uint64_t v146 = v46;
    if (EnumTagSinglePayload)
    {
      uint64_t v55 = type metadata accessor for UUID();
      uint64_t v56 = (char *)OUTLINED_FUNCTION_100();
    }
    else
    {
      uint64_t v55 = type metadata accessor for UUID();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_124();
      v58();
      uint64_t v56 = (char *)&v127 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v57 = 0;
    }
    uint64_t v59 = __swift_storeEnumTagSinglePayload((uint64_t)v56, v57, 1, v55);
    id v148 = &v127;
    MEMORY[0x1F4188790](v59);
    unint64_t v60 = (v52 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v61 = *(int *)(v25 + 20);
    id v150 = v48;
    uint64_t v62 = (uint64_t)&v48[v4 + v61];
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_10_0();
    uint64_t v4 = (uint64_t)v63;
    OUTLINED_FUNCTION_2_1();
    v64();
    OUTLINED_FUNCTION_29_22((uint64_t)&v127 - v60);
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    uint64_t v147 = &v127;
    uint64_t v66 = OUTLINED_FUNCTION_8(v65);
    MEMORY[0x1F4188790](v66);
    OUTLINED_FUNCTION_41_14();
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)&v127 - v60, v62, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)&v127 - v60, v25, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v67 = OUTLINED_FUNCTION_69(v62);
    if (v71) {
      break;
    }
    uint64_t v140 = &v127;
    MEMORY[0x1F4188790](v67);
    uint64_t v69 = OUTLINED_FUNCTION_69_0();
    _s15ConversationKit11ParticipantVSgWOcTm_0(v69, v70, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v72 = OUTLINED_FUNCTION_69(v25);
    if (v71)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v127 - v60, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v53, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v4 += 8;
      OUTLINED_FUNCTION_28_21();
      v73();
      uint64_t v68 = v146;
LABEL_16:
      outlined destroy of SystemUpdateNotice?(v62, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
      OUTLINED_FUNCTION_27_25();
      goto LABEL_18;
    }
    MEMORY[0x1F4188790](v72);
    OUTLINED_FUNCTION_61();
    OUTLINED_FUNCTION_38_13();
    v74();
    lazy protocol witness table accessor for type UUID and conformance UUID();
    int v139 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v75 = *(void (**)(void))(v4 + 8);
    v4 += 8;
    uint64_t v25 = (uint64_t)v75;
    OUTLINED_FUNCTION_28_21();
    v75();
    outlined destroy of SystemUpdateNotice?((uint64_t)&v127 - v60, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v53, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_28_21();
    v75();
    outlined destroy of SystemUpdateNotice?(v62, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v68 = v146;
    OUTLINED_FUNCTION_27_25();
    if (v139) {
      goto LABEL_21;
    }
LABEL_18:
    uint64_t v46 = (uint64_t *)((char *)v68 + 1);
    uint64_t v45 = v141;
    char v48 = (char *)v142 + (void)v150;
    if (v144 == v46)
    {

      goto LABEL_26;
    }
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)&v127 - v60, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of SystemUpdateNotice?((uint64_t)&v127 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_69(v25);
  uint64_t v68 = v146;
  if (!v71) {
    goto LABEL_16;
  }
  outlined destroy of SystemUpdateNotice?(v62, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_27_25();
LABEL_21:

  uint64_t v76 = v150;
  if (v68)
  {
    if (v68 >= v144)
    {
      __break(1u);
    }
    else
    {
      _s15ConversationKit11ParticipantVWOcTm_5((uint64_t)v150 + v4, v131);
      uint64_t v77 = v152;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_24;
      }
    }
    uint64_t v77 = specialized _ArrayBuffer._consumeAndCreateNew()();
    uint64_t v152 = v77;
LABEL_24:
    unint64_t v78 = *(void *)(v77 + 16);
    if (v78 > (unint64_t)v68)
    {
      uint64_t v79 = (uint64_t)v76 + v77;
      _s15ConversationKit11ParticipantVWOhTm_3(v79, (void (*)(void))type metadata accessor for Participant);
      specialized UnsafeMutablePointer.moveInitialize(from:count:)((uint64_t)v142 + v79, ~(unint64_t)v68 + v78, v79, (void (*)(void))type metadata accessor for Participant);
      *(void *)(v77 + 16) = v78 - 1;
      uint64_t v152 = v77;
      uint64_t v80 = v131;
      _s15ConversationKit11ParticipantVWOcTm_5(v131, v127);
      specialized Array.replaceSubrange<A>(_:with:)();
      _s15ConversationKit11ParticipantVWOhTm_3(v80, (void (*)(void))type metadata accessor for Participant);
      uint64_t v25 = v145;
      goto LABEL_26;
    }
    __break(1u);
  }
  else
  {
LABEL_26:
    uint64_t v81 = v138;
    uint64_t v82 = (uint64_t)&v138[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant];
    OUTLINED_FUNCTION_2();
    uint64_t v83 = v82;
    uint64_t v84 = v135;
    _s15ConversationKit11ParticipantVSgWOcTm_0(v83, v135, &demangling cache variable for type metadata for Participant?);
    uint64_t v85 = (uint64_t)&v81[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant];
    OUTLINED_FUNCTION_6_1();
    outlined assign with take of Participant?(v84, v85);
    swift_endAccess();
    uint64_t v86 = OUTLINED_FUNCTION_66_3();
    __swift_storeEnumTagSinglePayload(v86, v87, v88, v25);
    uint64_t v89 = OUTLINED_FUNCTION_29_0();
    uint64_t v90 = v81;
    ParticipantGridViewController.focusedParticipant.setter(v89, v91, v92);
    uint64_t v93 = (uint64_t)&v81[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant];
    OUTLINED_FUNCTION_2();
    uint64_t v94 = v93;
    uint64_t v95 = v136;
    _s15ConversationKit11ParticipantVSgWOcTm_0(v94, v136, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_33_0(v95, 1, v25);
    if (v71)
    {
      outlined destroy of SystemUpdateNotice?(v95, &demangling cache variable for type metadata for Participant?);
      uint64_t v96 = OUTLINED_FUNCTION_70_3();
      ParticipantGridViewController.update(with:animationStyle:forced:)(v96, v97, 0);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v98 = v133;
      _s15ConversationKit11ParticipantVWObTm_2(v95, v133);
      id v99 = ParticipantGridViewController.gridView.getter();
      if (v99)
      {
        id v100 = v99;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
        unint64_t v101 = (*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
        uint64_t v102 = swift_allocObject();
        *(_OWORD *)(v102 + 16) = v129;
        id v148 = (uint64_t *)v102;
        _s15ConversationKit11ParticipantVWOcTm_5(v98, v102 + v101);
        uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v104 = OUTLINED_FUNCTION_8(v103);
        uint64_t v106 = *(void *)(v105 + 64);
        MEMORY[0x1F4188790](v104);
        unint64_t v107 = (v106 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v108 = type metadata accessor for UUID();
        uint64_t v147 = (uint64_t *)((char *)&v127 - v107);
        uint64_t v109 = __swift_storeEnumTagSinglePayload((uint64_t)&v127 - v107, 1, 1, v108);
        uint64_t v146 = &v127;
        MEMORY[0x1F4188790](v109);
        unint64_t v143 = (char *)&v127 - v107;
        uint64_t v110 = __swift_storeEnumTagSinglePayload((uint64_t)&v127 - v107, 1, 1, v108);
        uint64_t v144 = &v127;
        MEMORY[0x1F4188790](v110);
        uint64_t v111 = (char *)&v127 - v107;
        int v112 = __swift_getEnumTagSinglePayload(v85, 1, v25);
        id v150 = v100;
        if (v112)
        {
          uint64_t v113 = OUTLINED_FUNCTION_82_2((uint64_t)&v127 - v107, 1);
          uint64_t v114 = *(void *)(v108 - 8);
        }
        else
        {
          uint64_t v114 = *(void *)(v108 - 8);
          OUTLINED_FUNCTION_124();
          v115();
          uint64_t v113 = OUTLINED_FUNCTION_82_2((uint64_t)v111, 0);
        }
        uint64_t v142 = &v127;
        MEMORY[0x1F4188790](v113);
        uint64_t v117 = (char *)&v127 - v116;
        OUTLINED_FUNCTION_2_1();
        v118();
        ParticipantGridViewController.aspectRatio(for:in:)(0, (uint64_t)v153);
        uint64_t v119 = ParticipantGridViewController.orientation(for:in:)(v98, 0);
        Participant.videoInfo.getter();
        outlined init with take of Any?((uint64_t)v154, (uint64_t)v155, &demangling cache variable for type metadata for Participant.VideoInfo?);
        uint64_t v149 = &v127;
        if (v155[0])
        {
          char v120 = v156;
          outlined release of LinearGradient((uint64_t)v154);
        }
        else
        {
          char v120 = 0;
        }
        uint64_t v121 = v130;
        (*(void (**)(uint64_t, char *, uint64_t))(v114 + 32))(v130, v117, v108);
        uint64_t v122 = (int *)type metadata accessor for ParticipantGridView.FullScreenFocusedParticipantInfo(0);
        outlined init with take of AspectRatio((uint64_t)v153, v121 + v122[5]);
        *(void *)(v121 + v122[6]) = v119;
        *(unsigned char *)(v121 + v122[7]) = v120;
        OUTLINED_FUNCTION_29_22(v121);
        uint64_t v90 = v138;
        char v151 = v138[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle];
        OUTLINED_FUNCTION_69_0();
        uint64_t v123 = (uint64_t)v143;
        uint64_t v124 = v150;
        ParticipantGridView.transition(to:mostProminentParticipantIdentifier:focusedParticipantIdentifier:selectedParticipantIdentifier:fullScreenFocusedParticipantInfo:layoutStyle:animationStyle:forced:)();

        swift_bridgeObjectRelease();
        outlined destroy of SystemUpdateNotice?(v121, &demangling cache variable for type metadata for ParticipantGridView.FullScreenFocusedParticipantInfo?);
        outlined destroy of SystemUpdateNotice?((uint64_t)v111, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of SystemUpdateNotice?(v123, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_91_0();
        _s15ConversationKit11ParticipantVWOhTm_3(v133, (void (*)(void))type metadata accessor for Participant);
        uint64_t v25 = v145;
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_3(v98, (void (*)(void))type metadata accessor for Participant);
      }
    }
    *(void *)&v90[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsBeforeFocus] = 0;
    swift_bridgeObjectRelease();
    uint64_t v125 = v137;
    _s15ConversationKit11ParticipantVSgWOcTm_0(v85, v137, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_33_0(v125, 1, v25);
    if (v71)
    {
      outlined destroy of SystemUpdateNotice?(v125, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      uint64_t v126 = v132;
      _s15ConversationKit11ParticipantVWObTm_2(v125, v132);
      ParticipantGridViewController.update(participant:broadcastingState:)();
      _s15ConversationKit11ParticipantVWOhTm_3(v126, (void (*)(void))type metadata accessor for Participant);
    }
    OUTLINED_FUNCTION_28();
  }
}

id ParticipantGridViewController.filterAndTruncate(_:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v27[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Participant(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant];
  swift_beginAccess();
  _s15ConversationKit11ParticipantVSgWOcTm_0(v8, (uint64_t)v3, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) != 1)
  {
    _s15ConversationKit11ParticipantVWObTm_2((uint64_t)v3, (uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
    unint64_t v26 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C3769620;
    _s15ConversationKit11ParticipantVWObTm_2((uint64_t)v7, v25 + v26);
    return (id)v25;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v3, &demangling cache variable for type metadata for Participant?);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = Date.init()();
  MEMORY[0x1F4188790](v13);
  *(void *)&v27[-16] = v12;
  swift_bridgeObjectRetain();
  specialized _ArrayProtocol.filter(_:)();
  uint64_t v15 = v14;
  v28[1] = v0[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle];
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v17 = result;
    objc_msgSend(result, sel_frame);
    double v19 = v18;
    double v21 = v20;

    unsigned __int8 v22 = ParticipantGridViewController.mediaPipIsVisible.getter();
    ParticipantGridViewController.captionsLayoutState.getter(v28);
    Swift::Int v23 = MultiwayViewController.LayoutStyle.maximumParticipantCount(portraitAspect:mediaPipIsVisible:captionsLayoutState:)(v19 < v21, v22 & 1, (ConversationKit::CaptionsLayoutState_optional)v28);
    specialized Collection.prefix(_:)(v23, v15);
    specialized Array.init<A>(_:)();
    uint64_t v25 = v24;
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    return (id)v25;
  }
  __break(1u);
  return result;
}

uint64_t closure #1 in ParticipantGridViewController.filterAndTruncate(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + *(int *)(v5 + 28)))
  {
    v25[1] = a2;
    v25[2] = v2;
    uint64_t v11 = type metadata accessor for Date();
    void v25[3] = v25;
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)(v11 - 8);
    uint64_t v14 = *(void *)(v13 + 64);
    MEMORY[0x1F4188790](v11);
    _s15ConversationKit11ParticipantVWOcTm_5(a1, (uint64_t)v10);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch((int)EnumCaseMultiPayload)
    {
      case 2:
        (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
        char v18 = 0;
        return v18 & 1;
      case 3:
        goto LABEL_8;
      case 4:
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v20 = (uint64_t)&v10[*(int *)(v19 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(void *)&v10[*(int *)(v19 + 64)], *(void *)&v10[*(int *)(v19 + 64) + 8]);
        outlined destroy of Participant.MediaInfo(v20);
LABEL_8:
        (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
        goto LABEL_9;
      case 5:
        MEMORY[0x1F4188790](EnumCaseMultiPayload);
        double v21 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v10, v12);
        Date.timeIntervalSince(_:)();
        double v23 = v22;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
        char v18 = v23 < 7.0;
        return v18 & 1;
      case 6:
LABEL_9:
        char v18 = 1;
        break;
      default:
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v10, v12);
        Date.timeIntervalSince(_:)();
        double v17 = v16;
        (*(void (**)(char *, uint64_t))(v13 + 8))((char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
        _s15ConversationKit11ParticipantVWOcTm_5(a1, (uint64_t)v7);
        if (v17 >= 45.0) {
          char v18 = 0;
        }
        else {
          char v18 = v7[*(int *)(v5 + 52)] ^ 1;
        }
        _s15ConversationKit11ParticipantVWOhTm_3((uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
        break;
    }
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

id ParticipantGridViewController.mediaPipIsVisible.getter()
{
  id result = ParticipantGridViewController.gridView.getter();
  if (result)
  {
    uint64_t v1 = result;
    char v2 = ParticipantGridView.mediaPipIsVisible.getter();

    return (id)(v2 & 1);
  }
  return result;
}

uint64_t ParticipantGridViewController.captionsLayoutState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  uint64_t result = MEMORY[0x1C8776240](v3);
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 72))(ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  else
  {
    *a1 = 3;
  }
  return result;
}

void ParticipantGridViewController.effectiveLayoutStyle.getter(char *a1@<X8>)
{
  id v3 = ParticipantGridViewController.gridView.getter();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants;
    OUTLINED_FUNCTION_2();
    ParticipantGridView.effectiveLayoutStyle(for:)(*(void *)(*(void *)v5 + 16));

    char v6 = v7;
  }
  else
  {
    char v6 = 2;
  }
  *a1 = v6;
}

uint64_t ParticipantGridViewController.participantCount.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants;
  OUTLINED_FUNCTION_2();
  return *(void *)(*(void *)v1 + 16);
}

uint64_t ParticipantGridViewController.mediaPipInfo.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  if (!MEMORY[0x1C8776240](v1)) {
    return 5;
  }
  OUTLINED_FUNCTION_43_10();
  OUTLINED_FUNCTION_56_5();
  unsigned __int8 v3 = v2();
  swift_unknownObjectRelease();
  return v3;
}

void ParticipantGridViewController.overlappingInsets.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  if (MEMORY[0x1C8776240](v1))
  {
    OUTLINED_FUNCTION_43_10();
    OUTLINED_FUNCTION_56_5();
    v2();
    OUTLINED_FUNCTION_38();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_41();
}

Swift::Void __swiftcall ParticipantGridViewController.dodgeMediaPip(with:)(Swift::OpaquePointer_optional with)
{
  uint64_t v3 = v1;
  rawValue = with.value._rawValue;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v6();
  char v7 = _dispatchPreconditionTest(_:)();
  uint64_t v8 = OUTLINED_FUNCTION_29_0();
  v9(v8);
  if (v7)
  {
    if (rawValue)
    {
      uint64_t v10 = OUTLINED_FUNCTION_70_3();
      ParticipantGridViewController.update(with:animationStyle:forced:)(v10, v11, 1);
      uint64_t v12 = v3 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
      OUTLINED_FUNCTION_2();
      if (MEMORY[0x1C8776240](v12))
      {
        swift_getObjectType();
        uint64_t v13 = OUTLINED_FUNCTION_34_9();
        v14(v13);
        swift_unknownObjectRelease();
      }
    }
    else
    {
      id v15 = ParticipantGridViewController.gridView.getter();
      if (v15)
      {
        double v16 = v15;
        ParticipantGridView.updateMediaPipDodgingFrame(withAnimationStyle:)(ConversationKit_ParticipantGridView_AnimationStyle_fast);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

id ParticipantGridViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    char v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void ParticipantGridViewController.init(nibName:bundle:)()
{
}

id ParticipantGridViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ParticipantGridViewController.participantIdentifiers.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v24 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16_0();
  uint64_t v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants);
  OUTLINED_FUNCTION_2();
  uint64_t v6 = *v5;
  uint64_t v7 = *(void *)(*v5 + 16);
  if (v7)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v7, 0);
    OUTLINED_FUNCTION_22_0();
    uint64_t v9 = v6 + v8;
    uint64_t v10 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_4();
    uint64_t v13 = v12;
    uint64_t v23 = v11;
    uint64_t v14 = (void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    uint64_t v22 = *(void *)(v3 + 72);
    do
    {
      MEMORY[0x1F4188790](v11);
      OUTLINED_FUNCTION_5_10();
      uint64_t v17 = v15 - v16;
      _s15ConversationKit11ParticipantVWOcTm_5(v9, v1);
      (*v14)(v17, v1 + *(int *)(v24 + 20), v10);
      _s15ConversationKit11ParticipantVWOhTm_3(v1, (void (*)(void))type metadata accessor for Participant);
      uint64_t v18 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v18 = v25;
      }
      unint64_t v20 = *(void *)(v18 + 16);
      unint64_t v19 = *(void *)(v18 + 24);
      if (v20 >= v19 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
        uint64_t v18 = v25;
      }
      *(void *)(v18 + 16) = v20 + 1;
      OUTLINED_FUNCTION_22_0();
      uint64_t v10 = v23;
      uint64_t v11 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 32))(v18 + v21 + *(void *)(v13 + 72) * v20, v17, v23);
      uint64_t v25 = v18;
      v9 += v22;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28();
}

void ParticipantGridViewController.update(participant:localParticipantOrientation:)()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_81_2();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_64();
  char v4 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  uint64_t v5 = OUTLINED_FUNCTION_19_3();
  v6(v5);
  _dispatchPreconditionTest(_:)();
  uint64_t v7 = OUTLINED_FUNCTION_21_2();
  v8(v7);
  if (v4)
  {
    id v9 = ParticipantGridViewController.gridView.getter();
    if (v9)
    {
      uint64_t v10 = v9;
      ParticipantGridView.updateViews(for:localParticipantOrientation:)(v1, v0);
    }
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ParticipantGridViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::OpaquePointer a1, Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  OUTLINED_FUNCTION_14();
  uint64_t v5 = v3;
  char v7 = v6;
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_64();
  char v9 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v4 = static OS_dispatch_queue.main.getter();
  uint64_t v10 = OUTLINED_FUNCTION_19_3();
  v11(v10);
  _dispatchPreconditionTest(_:)();
  uint64_t v12 = OUTLINED_FUNCTION_21_2();
  v13(v12);
  if (v9)
  {
    Swift::Bool v14 = v7 & 1;
    *(unsigned char *)(v5
             + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_isLocalMemberAuthorizedToChangeGroupMembership) = v14;
    id v15 = ParticipantGridViewController.gridView.getter();
    if (v15)
    {
      uint64_t v16 = v15;
      ParticipantGridView.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(v2, v14);
    }
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    __break(1u);
  }
}

void ParticipantGridViewController.update(participant:isKickingAvailable:)()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_64();
  char v2 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v0 = static OS_dispatch_queue.main.getter();
  uint64_t v3 = OUTLINED_FUNCTION_19_3();
  v4(v3);
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = OUTLINED_FUNCTION_21_2();
  v6(v5);
  if (v2)
  {
    id v7 = ParticipantGridViewController.gridView.getter();
    if (v7)
    {
      uint64_t v8 = v7;
      ParticipantGridView.updateKickingAvailable(for:isKickingAvailable:)();
    }
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t ParticipantGridViewController.update(with:updateReason:)(Swift::OpaquePointer with, char *a2)
{
  if (a2[1])
  {
    char v4 = *a2;
    if (a2[1] == 1)
    {
      *(unsigned char *)(v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_layoutStyle) = v4 & 1;
      unsigned int v5 = 1;
    }
    else
    {
      unsigned int v5 = 0x20301u >> (8 * v4);
    }
  }
  else
  {
    unsigned int v5 = 3;
  }
  ParticipantGridViewController.updateSelectedParticipant(with:)(with);
  return ParticipantGridViewController.update(with:animationStyle:forced:)((uint64_t)with._rawValue, v5, 0);
}

Swift::Void __swiftcall ParticipantGridViewController.updateSelectedParticipant(with:)(Swift::OpaquePointer with)
{
  OUTLINED_FUNCTION_31();
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_16_0();
  uint64_t v8 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_55_0();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = *(void *)(v5 + 16);
  if (!v16) {
    goto LABEL_19;
  }
  uint64_t v48 = (uint64_t)&v48 - v14;
  uint64_t v49 = v15;
  uint64_t v50 = v2;
  uint64_t v51 = v5;
  OUTLINED_FUNCTION_22_0();
  uint64_t v18 = v5 + v17;
  uint64_t v19 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_2();
  uint64_t v55 = *(void *)(v10 + 72);
  uint64_t v56 = v3;
  uint64_t v57 = v19;
  uint64_t v58 = v8;
  while (1)
  {
    uint64_t v59 = v16;
    _s15ConversationKit11ParticipantVWOcTm_5(v18, v3);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v21 = OUTLINED_FUNCTION_8(v20);
    uint64_t v23 = *(void *)(v22 + 64);
    MEMORY[0x1F4188790](v21);
    int v24 = OUTLINED_FUNCTION_68_4(v19);
    uint64_t v62 = &v48;
    if (v24)
    {
      uint64_t v25 = type metadata accessor for UUID();
      unint64_t v26 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v27 = 1;
    }
    else
    {
      uint64_t v25 = type metadata accessor for UUID();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_124();
      v28();
      unint64_t v26 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v27 = 0;
    }
    uint64_t v29 = __swift_storeEnumTagSinglePayload((uint64_t)v26, v27, 1, v25);
    uint64_t v61 = &v48;
    MEMORY[0x1F4188790](v29);
    unint64_t v30 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v8 = v3 + *(int *)(v8 + 20);
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_10_0();
    uint64_t v3 = v31;
    OUTLINED_FUNCTION_2_1();
    v32();
    OUTLINED_FUNCTION_29_22((uint64_t)&v48 - v30);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    unint64_t v60 = &v48;
    uint64_t v34 = OUTLINED_FUNCTION_8(v33);
    MEMORY[0x1F4188790](v34);
    OUTLINED_FUNCTION_62();
    uint64_t v36 = v8 + *(int *)(v35 + 56);
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)&v48 - v30, v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)&v48 - v30, v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v37 = OUTLINED_FUNCTION_69(v8);
    if (v38) {
      break;
    }
    uint64_t v54 = &v48;
    MEMORY[0x1F4188790](v37);
    _s15ConversationKit11ParticipantVSgWOcTm_0(v8, (uint64_t)&v48 - v30, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_69(v36);
    if (v38)
    {
      OUTLINED_FUNCTION_105_0();
      OUTLINED_FUNCTION_96_0();
      v3 += 8;
      OUTLINED_FUNCTION_139();
      v39();
      uint64_t v19 = v57;
LABEL_14:
      outlined destroy of SystemUpdateNotice?(v8, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
      OUTLINED_FUNCTION_40_14();
      goto LABEL_16;
    }
    unint64_t v53 = &v48;
    OUTLINED_FUNCTION_102_0();
    MEMORY[0x1F4188790](v40);
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_38_13();
    v41();
    lazy protocol witness table accessor for type UUID and conformance UUID();
    int v52 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v42 = *(void (**)(void))(v3 + 8);
    OUTLINED_FUNCTION_139();
    v42();
    OUTLINED_FUNCTION_105_0();
    OUTLINED_FUNCTION_96_0();
    OUTLINED_FUNCTION_139();
    v42();
    outlined destroy of SystemUpdateNotice?(v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_44_9();
    uint64_t v19 = v57;
    uint64_t v8 = v58;
    uint64_t v3 = v56;
    if (v52) {
      goto LABEL_18;
    }
LABEL_16:
    _s15ConversationKit11ParticipantVWOhTm_3(v3, (void (*)(void))type metadata accessor for Participant);
    v18 += v55;
    uint64_t v16 = v59 - 1;
    if (v59 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_69(v36);
  uint64_t v19 = v57;
  if (!v38) {
    goto LABEL_14;
  }
  outlined destroy of SystemUpdateNotice?(v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_40_14();
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v43 = v49;
  _s15ConversationKit11ParticipantVWObTm_2(v3, v49);
  uint64_t v44 = v43;
  uint64_t v45 = v48;
  _s15ConversationKit11ParticipantVWObTm_2(v44, v48);
  uint64_t v46 = v45;
  uint64_t v47 = v50;
  _s15ConversationKit11ParticipantVWObTm_2(v46, v50);
  OUTLINED_FUNCTION_82_2(v47, 0);
  OUTLINED_FUNCTION_6_1();
  outlined assign with take of Participant?(v47, v19);
  swift_endAccess();
LABEL_19:
  OUTLINED_FUNCTION_28();
}

uint64_t specialized Array<A>.arrayCloselyMatching(_:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = specialized _ArrayProtocol.filter(_:)(v3, a2);
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = specialized _ArrayProtocol.filter(_:)(v5, a2);
  uint64_t v85 = MEMORY[0x1E4FBC860];
  uint64_t v71 = *(void *)(a2 + 16);
  if (!v71)
  {
LABEL_68:
    uint64_t v84 = v6;
    specialized Array.append<A>(contentsOf:)();
    specialized Array.append<A>(contentsOf:)();
    return v85;
  }
  uint64_t v72 = v4;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v8 + 16);
  uint64_t v80 = v8 + 16;
  uint64_t v81 = v9;
  unint64_t v76 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v70[0] = a2;
  v70[1] = a2 + v76;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v10 = *(void *)(v8 + 72);
  unint64_t v78 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v79 = v11;
  uint64_t v73 = (void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v12 = v10;
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  uint64_t v77 = v12;
  while (1)
  {
    uint64_t v74 = v70;
    uint64_t v75 = v14;
    MEMORY[0x1F4188790](v13);
    uint64_t v83 = (char *)v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v17 = v81(v83, v16);
    uint64_t v82 = v6;
    uint64_t v18 = *(void *)(v6 + 16);
    if (!v18) {
      break;
    }
    unint64_t v19 = 0;
    uint64_t v20 = -1;
    unint64_t v21 = v76;
    while (1)
    {
      MEMORY[0x1F4188790](v17);
      unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
      ((void (*)(char *, unint64_t, uint64_t))v81)((char *)v70 - v23, v82 + v21, v7);
      lazy protocol witness table accessor for type UUID and conformance UUID();
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v25 = *v78;
      uint64_t v17 = (*v78)((char *)v70 - v23, v7);
      if (v24) {
        break;
      }
      ++v19;
      uint64_t v12 = v77;
      v21 += v77;
      --v20;
      if (v18 == v19) {
        goto LABEL_7;
      }
    }
    MEMORY[0x1F4188790](v17);
    uint64_t v39 = (char *)v70 - v23;
    ((void (*)(char *, char *, uint64_t))v81)((char *)v70 - v23, v83, v7);
    uint64_t v40 = v85;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v40 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v40 + 16) + 1, 1, v40);
    }
    uint64_t v6 = v82;
    unint64_t v42 = *(void *)(v40 + 16);
    unint64_t v41 = *(void *)(v40 + 24);
    uint64_t v43 = v42 + 1;
    if (v42 >= v41 >> 1)
    {
      uint64_t v82 = v42 + 1;
      uint64_t v68 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1, v40);
      uint64_t v43 = v82;
      uint64_t v40 = v68;
    }
    *(void *)(v40 + 16) = v43;
    unint64_t v44 = v40 + v76 + v42 * v77;
    uint64_t v12 = v77;
    (*v73)(v44, v39, v7);
    uint64_t v85 = v40;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = specialized _ArrayBuffer._consumeAndCreateNew()();
    }
    unint64_t v45 = *(void *)(v6 + 16);
    if (v45 <= v19) {
      goto LABEL_70;
    }
    v25((char *)(v6 + v21), v7);
    if ((uint64_t)(~v19 + v45) < 0) {
      goto LABEL_74;
    }
    if (v12 > 0 || v6 + v21 >= v6 + v12 + v21 + v12 * (v45 + v20))
    {
      swift_arrayInitWithTakeFrontToBack();
      uint64_t v47 = v75;
    }
    else
    {
      uint64_t v47 = v75;
      if (v12) {
        swift_arrayInitWithTakeBackToFront();
      }
    }
    *(void *)(v6 + 16) = v45 - 1;
    uint64_t v13 = v25(v83, v7);
LABEL_66:
    uint64_t v14 = v47 + 1;
    if (v14 == v71)
    {
      swift_bridgeObjectRelease();
      goto LABEL_68;
    }
  }
LABEL_7:
  uint64_t v26 = v72;
  if (!*(void *)(v72 + 16))
  {
    uint64_t v6 = v82;
    if (*(void *)(v82 + 16))
    {
      MEMORY[0x1F4188790](v17);
      uint64_t v49 = (char *)v70 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      MEMORY[0x1F4188790](v50 - 8);
      int v52 = (char *)v70 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
      ((void (*)(char *, unint64_t, uint64_t))v81)(v52, v6 + v76, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v7);
      if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v7) == 1) {
        goto LABEL_73;
      }
      unint64_t v53 = *v73;
      (*v73)((unint64_t)v49, v52, v7);
      uint64_t v54 = *(void *)(v6 + 16);
      if (!v54) {
        goto LABEL_71;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || (unint64_t)(v54 - 1) > *(void *)(v6 + 24) >> 1) {
        uint64_t v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v54, 1, v6);
      }
      unint64_t v56 = v6 + v76;
      swift_arrayDestroy();
      uint64_t v57 = *(void *)(v6 + 16);
      if (!v57) {
        goto LABEL_74;
      }
      unint64_t v58 = v56 + v12 + (v57 - 1) * v12;
      if (v12 > 0 || v56 >= v58)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v12)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      --*(void *)(v6 + 16);
      uint64_t v64 = v85;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v64 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v64 + 16) + 1, 1, v64);
      }
      unint64_t v66 = *(void *)(v64 + 16);
      unint64_t v65 = *(void *)(v64 + 24);
      if (v66 >= v65 >> 1) {
        uint64_t v64 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1, v64);
      }
      *(void *)(v64 + 16) = v66 + 1;
      unint64_t v67 = v64 + v76 + v66 * v77;
      uint64_t v12 = v77;
      v53(v67, v49, v7);
      uint64_t v85 = v64;
      uint64_t v13 = (*v78)(v83, v7);
    }
    else
    {
      uint64_t v13 = (*v78)(v83, v7);
    }
    goto LABEL_65;
  }
  MEMORY[0x1F4188790](v17);
  uint64_t v28 = (char *)v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)v70 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(char *, unint64_t, uint64_t))v81)(v31, v26 + v76, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v7) == 1) {
    goto LABEL_72;
  }
  uint64_t v32 = *v73;
  (*v73)((unint64_t)v28, v31, v7);
  uint64_t v33 = *(void *)(v26 + 16);
  if (v33)
  {
    int v34 = swift_isUniquelyReferenced_nonNull_native();
    if (!v34 || (unint64_t)(v33 - 1) > *(void *)(v26 + 24) >> 1) {
      uint64_t v26 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v34, v33, 1, v26);
    }
    unint64_t v35 = v26 + v76;
    swift_arrayDestroy();
    uint64_t v36 = *(void *)(v26 + 16);
    if (!v36) {
      goto LABEL_74;
    }
    unint64_t v37 = v35 + v12 + (v36 - 1) * v12;
    if (v12 > 0 || v35 >= v37)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v12)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    --*(void *)(v26 + 16);
    uint64_t v60 = v85;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v60 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v60 + 16) + 1, 1, v60);
    }
    unint64_t v62 = *(void *)(v60 + 16);
    unint64_t v61 = *(void *)(v60 + 24);
    uint64_t v72 = v26;
    if (v62 >= v61 >> 1) {
      uint64_t v60 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1, v60);
    }
    *(void *)(v60 + 16) = v62 + 1;
    unint64_t v63 = v60 + v76 + v62 * v77;
    uint64_t v12 = v77;
    v32(v63, v28, v7);
    uint64_t v85 = v60;
    uint64_t v13 = (*v78)(v83, v7);
    uint64_t v6 = v82;
LABEL_65:
    uint64_t v47 = v75;
    goto LABEL_66;
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized Array<A>.sortToMatch(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: UUID)?);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v72 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v73 = v3;
  uint64_t v4 = (uint64_t *)((char *)&v63 - v72);
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v85 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v85 - 8);
  uint64_t v84 = *(void *)(v6 + 64);
  uint64_t v81 = v6 + 16;
  uint64_t v71 = (void (**)(void))(v6 + 32);
  uint64_t v7 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t v75 = v6;
  uint64_t v64 = (uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 40);
  uint64_t v67 = a1;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v66 = 0;
  unint64_t v9 = 0;
  unint64_t v70 = v5;
  uint64_t v82 = v7;
  uint64_t v68 = v4;
  while (1)
  {
    while (1)
    {
LABEL_2:
      uint64_t v10 = MEMORY[0x1F4188790](v8);
      uint64_t v11 = (uint64_t *)((char *)&v63 - v72);
      MEMORY[0x1F4188790](v10);
      uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t result = MEMORY[0x1F4188790](v14 - 8);
      unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v18 = (char *)&v63 - v17;
      if (v9 == v5)
      {
        __swift_storeEnumTagSinglePayload((uint64_t)&v63 - v17, 1, 1, v85);
        unint64_t v79 = v5;
LABEL_7:
        outlined destroy of SystemUpdateNotice?((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: UUID));
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v21);
        uint64_t v22 = v71;
        goto LABEL_10;
      }
      if (v9 >= v5)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      uint64_t v19 = v85;
      (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(v18, v67+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v9, v85);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v19);
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19);
      unint64_t v79 = v9 + 1;
      if (EnumTagSinglePayload == 1)
      {
        uint64_t v7 = v82;
        goto LABEL_7;
      }
      uint64_t v83 = (char *)&v63;
      uint64_t v22 = v71;
      unint64_t v23 = *v71;
      ((void (*)(char *, char *, uint64_t))*v71)(v13, v18, v19);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: UUID));
      uint64_t v25 = MEMORY[0x1F4188790](v24);
      uint64_t v27 = (char *)&v63 + *(int *)(v25 + 48) - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v23)(v27, v13, v19);
      uint64_t v28 = v66 + 1;
      if (__OFADD__(v66, 1)) {
        goto LABEL_31;
      }
      uint64_t v29 = (char *)v11 + *(int *)(v24 + 48);
      *uint64_t v11 = v66;
      ((void (*)(char *, char *, uint64_t))v23)(v29, v27, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v24);
      uint64_t v66 = v28;
      unint64_t v5 = v70;
      uint64_t v7 = v82;
LABEL_10:
      outlined init with take of Any?((uint64_t)v11, (uint64_t)v4, &demangling cache variable for type metadata for (offset: Int, element: UUID)?);
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: UUID));
      uint64_t v31 = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v30);
      if (v31 == 1) {
        return swift_bridgeObjectRelease();
      }
      MEMORY[0x1F4188790](v31);
      unint64_t v77 = *v4;
      uint64_t v33 = *v22;
      uint64_t v83 = (char *)&v63 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v34 = v85;
      v33();
      uint64_t v35 = *v78;
      uint64_t v36 = *(void *)(*v78 + 16);
      if (v36) {
        break;
      }
      unint64_t v9 = v79;
      uint64_t v8 = (*v7)(v83, v34);
    }
    uint64_t v74 = (unint64_t)v7 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    unint64_t v76 = &v63;
    unint64_t v37 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
    uint64_t v80 = *(char **)(v75 + 72);
    char v38 = *(uint64_t (**)(void))(v75 + 16);
    uint64_t v39 = swift_bridgeObjectRetain();
    unint64_t v40 = 0;
    unint64_t v69 = v37;
    while (1)
    {
      MEMORY[0x1F4188790](v39);
      unint64_t v42 = (char *)&v63 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v43 = v85;
      unint64_t v44 = v38;
      ((void (*)(char *, unint64_t, uint64_t))v38)(v42, v35 + v37, v85);
      lazy protocol witness table accessor for type UUID and conformance UUID();
      char v45 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v46 = *v82;
      uint64_t v39 = (*v82)(v42, v43);
      if (v45) {
        break;
      }
      ++v40;
      v37 += (unint64_t)v80;
      char v38 = v44;
      if (v36 == v40)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v68;
        unint64_t v5 = v70;
        uint64_t v47 = v85;
        uint64_t v7 = v82;
        unint64_t v9 = v79;
        goto LABEL_28;
      }
    }
    uint64_t v48 = swift_bridgeObjectRelease();
    uint64_t v49 = *v78;
    unint64_t v50 = *(void *)(*v78 + 16);
    unint64_t v9 = v79;
    if ((uint64_t)v77 < (uint64_t)v50) {
      break;
    }
    uint64_t v4 = v68;
    unint64_t v5 = v70;
    uint64_t v47 = v85;
    uint64_t v7 = v82;
LABEL_28:
    uint64_t v8 = v46(v83, v47);
  }
  uint64_t v4 = v68;
  if (v77 == v40)
  {
LABEL_26:
    uint64_t v7 = v82;
    uint64_t v8 = v46(v83, v85);
    unint64_t v5 = v70;
    goto LABEL_2;
  }
  MEMORY[0x1F4188790](v48);
  uint64_t result = (uint64_t)&v63 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v52 < 0) {
    goto LABEL_32;
  }
  uint64_t v74 = v53;
  uint64_t v54 = (void)v80 * v52;
  uint64_t v80 = (char *)&v63 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v44();
  if (v40 >= v50) {
    goto LABEL_33;
  }
  unint64_t v65 = &v63;
  MEMORY[0x1F4188790](result);
  unint64_t v56 = (char *)&v63 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(char *))v44)(v56);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v57 = v78;
  *unint64_t v78 = v49;
  if ((result & 1) == 0)
  {
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
    uint64_t v49 = result;
    *uint64_t v57 = result;
  }
  if (v77 < *(void *)(v49 + 16))
  {
    unint64_t v58 = v49 + v69 + v54;
    uint64_t v59 = *v64;
    uint64_t v60 = v56;
    uint64_t v61 = v85;
    uint64_t result = (*v64)(v58, v60, v85);
    uint64_t v62 = *v57;
    *uint64_t v57 = *v57;
    if (v40 >= *(void *)(v62 + 16)) {
      goto LABEL_35;
    }
    v59(v62 + v37, v80, v61);
    unint64_t v9 = v79;
    goto LABEL_26;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

void ParticipantGridViewController.update(participant:audioPower:)(Swift::Float a1)
{
  uint64_t v4 = v2;
  unint64_t v6 = OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_63();
  uint64_t v8 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v3 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v9();
  _dispatchPreconditionTest(_:)();
  uint64_t v10 = OUTLINED_FUNCTION_61_5();
  v11(v10);
  if (v8)
  {
    uint64_t v8 = v4 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants;
    uint64_t v12 = OUTLINED_FUNCTION_2();
    uint64_t v13 = *(void *)v8;
    MEMORY[0x1F4188790](v12);
    OUTLINED_FUNCTION_72_2();
    unint64_t v6 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for closure #1 in ParticipantGridViewController.update(participant:broadcastingState:), v6, v13);
    char v15 = v14;
    swift_bridgeObjectRelease();
    if (v15) {
      return;
    }
    OUTLINED_FUNCTION_6_1();
    uint64_t v16 = *(void *)v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v8 = v16;
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v6 & 0x8000000000000000) == 0) {
        goto LABEL_5;
      }
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t v16 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *(void *)uint64_t v8 = v16;
  if ((v6 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
LABEL_5:
  if (v6 >= *(void *)(v16 + 16))
  {
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v18 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1(v18);
  outlined assign with copy of Participant(v1, v16+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v20 + 72) * v6);
  swift_endAccess();
  id v21 = ParticipantGridViewController.gridView.getter();
  if (v21)
  {
    uint64_t v22 = v21;
    ParticipantGridView.updateAudioPower(for:audioPower:)(a1);
  }
}

void ParticipantGridViewController.update(participant:gradientOverlayAlpha:)()
{
  id v0 = ParticipantGridViewController.gridView.getter();
  if (v0)
  {
    id v1 = v0;
    ParticipantGridView.updateGradientOverlayView(for:isHidden:alpha:)();
  }
}

void ParticipantGridViewController.update(participant:visibleCameraPosition:)(uint64_t a1, char a2)
{
  id v4 = ParticipantGridViewController.gridView.getter();
  if (v4)
  {
    id v5 = v4;
    ParticipantGridView.updateVisibleCameraPosition(for:visibleCameraPosition:animated:)(a1, a2, 0);
  }
}

Swift::Void __swiftcall ParticipantGridViewController.removeAllParticipants()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_36();
  uint64_t v5 = v3 - v4;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  unint64_t v9 = &v24[-v8];
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = &v24[-v11];
  MEMORY[0x1F4188790](v10);
  char v14 = &v24[-v13];
  uint64_t v15 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
  OUTLINED_FUNCTION_2();
  _s15ConversationKit11ParticipantVSgWOcTm_0(v15, (uint64_t)v14, &demangling cache variable for type metadata for Participant?);
  type metadata accessor for Participant(0);
  int v16 = OUTLINED_FUNCTION_68_4((uint64_t)v14);
  outlined destroy of SystemUpdateNotice?((uint64_t)v14, &demangling cache variable for type metadata for Participant?);
  if (v16 == 1
    && (OUTLINED_FUNCTION_2(),
        uint64_t v17 = OUTLINED_FUNCTION_48_3(),
        _s15ConversationKit11ParticipantVSgWOcTm_0(v17, v18, &demangling cache variable for type metadata for Participant?), int v19 = OUTLINED_FUNCTION_68_4((uint64_t)v12), outlined destroy of SystemUpdateNotice?((uint64_t)v12, &demangling cache variable for type metadata for Participant?), v19 == 1))
  {
    ParticipantGridViewController.update(with:animationStyle:forced:)(MEMORY[0x1E4FBC860], 1, 0);
  }
  else
  {
    uint64_t v20 = OUTLINED_FUNCTION_43();
    _s15ConversationKit11ParticipantVSgWOcTm_0(v20, v21, &demangling cache variable for type metadata for Participant?);
    int v22 = OUTLINED_FUNCTION_68_4((uint64_t)v9);
    outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
    if (v22 != 1) {
      ParticipantGridViewController.fullScreenDefocus(to:animationStyle:)(MEMORY[0x1E4FBC860], ConversationKit_ParticipantGridView_AnimationStyle_fast);
    }
    uint64_t v23 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
    OUTLINED_FUNCTION_2();
    _s15ConversationKit11ParticipantVSgWOcTm_0(v23, v5, &demangling cache variable for type metadata for Participant?);
    LODWORD(v23) = OUTLINED_FUNCTION_68_4(v5);
    outlined destroy of SystemUpdateNotice?(v5, &demangling cache variable for type metadata for Participant?);
    if (v23 != 1) {
      ParticipantGridViewController.defocus(to:)(MEMORY[0x1E4FBC860]);
    }
  }
  OUTLINED_FUNCTION_28();
}

void ParticipantGridViewController.spatialPosition(for:relativeTo:)()
{
  OUTLINED_FUNCTION_81_2();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_64();
  char v4 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  uint64_t v5 = OUTLINED_FUNCTION_19_3();
  v6(v5);
  _dispatchPreconditionTest(_:)();
  uint64_t v7 = OUTLINED_FUNCTION_21_2();
  v8(v7);
  if (v4)
  {
    if (ParticipantGridViewController.gridView.getter())
    {
      uint64_t v9 = OUTLINED_FUNCTION_89();
      type metadata accessor for Participant(v9);
      type metadata accessor for ParticipantView();
      ParticipantGridView.tile(for:ofAClass:)();
      if (v10)
      {
        uint64_t v11 = v10;
        objc_msgSend(v10, sel_frame);
        objc_msgSend(v1, sel_convertRect_toCoordinateSpace_, v0);
        OUTLINED_FUNCTION_38();
      }
      else
      {
      }
    }
    OUTLINED_FUNCTION_41();
  }
  else
  {
    __break(1u);
  }
}

uint64_t protocol witness for ParticipantsViewController.participantsViewControllerDelegate.getter in conformance ParticipantGridViewController()
{
  return ParticipantGridViewController.participantsViewControllerDelegate.getter();
}

uint64_t protocol witness for ParticipantsViewController.participantsViewControllerDelegate.setter in conformance ParticipantGridViewController(uint64_t a1, uint64_t a2)
{
  return ParticipantGridViewController.participantsViewControllerDelegate.setter(a1, a2);
}

uint64_t (*protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance ParticipantGridViewController(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C8776240](v6);
  uint64_t v8 = *(void *)(v6 + 8);
  v3[3] = v7;
  v3[4] = v8;
  return ParticipantGridViewController.participantsViewControllerDelegate.modify;
}

void protocol witness for ParticipantsViewController.participantIdentifiers.getter in conformance ParticipantGridViewController()
{
}

uint64_t protocol witness for ParticipantsViewController.participantCount.getter in conformance ParticipantGridViewController()
{
  return ParticipantGridViewController.participantCount.getter();
}

void protocol witness for ParticipantsViewController.update(participant:broadcastingState:) in conformance ParticipantGridViewController()
{
}

void protocol witness for ParticipantsViewController.update(participant:localParticipantOrientation:) in conformance ParticipantGridViewController()
{
}

void protocol witness for ParticipantsViewController.update(participant:isKickingAvailable:) in conformance ParticipantGridViewController()
{
}

uint64_t protocol witness for ParticipantsViewController.update(with:updateReason:) in conformance ParticipantGridViewController(Swift::OpaquePointer a1, char *a2)
{
  return ParticipantGridViewController.update(with:updateReason:)(a1, a2);
}

void protocol witness for ParticipantsViewController.update(participant:audioPower:) in conformance ParticipantGridViewController(Swift::Float a1)
{
}

void protocol witness for ParticipantsViewController.update(participant:gradientOverlayAlpha:) in conformance ParticipantGridViewController()
{
}

void protocol witness for ParticipantsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:) in conformance ParticipantGridViewController(Swift::OpaquePointer a1, Swift::Bool a2)
{
}

void protocol witness for ParticipantsViewController.removeAllParticipants() in conformance ParticipantGridViewController()
{
}

void protocol witness for ParticipantsViewController.spatialPosition(for:relativeTo:) in conformance ParticipantGridViewController()
{
}

uint64_t ParticipantGridViewController.participantGridViewDelegateDidFinishAnimatingTiles(_:)()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  uint64_t result = MEMORY[0x1C8776240](v1);
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 24))(v0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

#error "1C32771B4: call analysis failed (funcsize=35)"

#error "1C3277244: call analysis failed (funcsize=35)"

#error "1C32772D4: call analysis failed (funcsize=35)"

#error "1C3277364: call analysis failed (funcsize=35)"

void ParticipantGridViewController.participantGridViewDelegate(_:didUpdateParticipantIdentifier:with:)()
{
  OUTLINED_FUNCTION_31();
  char v3 = v2;
  uint64_t v86 = (uint64_t *)v4;
  uint64_t v5 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_5_1();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v10 = OUTLINED_FUNCTION_8(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_36();
  uint64_t v13 = v11 - v12;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v76 - v16;
  MEMORY[0x1F4188790](v15);
  int v19 = (char *)&v76 - v18;
  if ((v3 & 1) == 0)
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v88 = &v76;
    uint64_t v45 = OUTLINED_FUNCTION_8(v44);
    uint64_t v47 = *(void *)(v46 + 64);
    MEMORY[0x1F4188790](v45);
    uint64_t v48 = (char *)&v76 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v49 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
    OUTLINED_FUNCTION_2();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v49, 1, v5);
    unint64_t v78 = v17;
    uint64_t v79 = v0;
    if (EnumTagSinglePayload)
    {
      uint64_t v51 = type metadata accessor for UUID();
      uint64_t v52 = (char *)&v76 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v53 = 1;
    }
    else
    {
      uint64_t v51 = type metadata accessor for UUID();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_124();
      v54();
      uint64_t v52 = (char *)&v76 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v53 = 0;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v52, v53, 1, v51);
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    uint64_t v56 = OUTLINED_FUNCTION_8(v55);
    MEMORY[0x1F4188790](v56);
    OUTLINED_FUNCTION_5_1();
    uint64_t v58 = v1 + *(int *)(v57 + 56);
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v86, v1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)&v76 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0), v58, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    type metadata accessor for UUID();
    uint64_t v59 = OUTLINED_FUNCTION_69(v1);
    if (v38)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v76 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_69(v58);
      if (v38)
      {
        outlined destroy of SystemUpdateNotice?(v1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_97_0();
LABEL_32:
        OUTLINED_FUNCTION_42_14(v58, 1);
        uint64_t v71 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant;
        OUTLINED_FUNCTION_6_1();
        outlined assign with take of Participant?(v58, v71);
        swift_endAccess();
        OUTLINED_FUNCTION_42_14(v58, 1);
        OUTLINED_FUNCTION_6_1();
        uint64_t v64 = v58;
        uint64_t v65 = v49;
LABEL_33:
        outlined assign with take of Participant?(v64, v65);
        swift_endAccess();
        uint64_t v72 = v1
            + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
        OUTLINED_FUNCTION_2();
        if (MEMORY[0x1C8776240](v72))
        {
          uint64_t v73 = OUTLINED_FUNCTION_43_10();
          _s15ConversationKit11ParticipantVSgWOcTm_0(v49, v58, &demangling cache variable for type metadata for Participant?);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 40))(v1, v58, v73, v72);
          swift_unknownObjectRelease();
          outlined destroy of SystemUpdateNotice?(v58, &demangling cache variable for type metadata for Participant?);
        }
        goto LABEL_37;
      }
    }
    else
    {
      MEMORY[0x1F4188790](v59);
      _s15ConversationKit11ParticipantVSgWOcTm_0(v1, (uint64_t)&v76 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_69(v58);
      if (!v60)
      {
        uint64_t v85 = v5;
        uint64_t v86 = &v76;
        OUTLINED_FUNCTION_5_3();
        uint64_t v87 = &v76;
        uint64_t v67 = v66;
        MEMORY[0x1F4188790](v68);
        OUTLINED_FUNCTION_21();
        uint64_t v84 = &v76;
        OUTLINED_FUNCTION_38_13();
        v69();
        lazy protocol witness table accessor for type UUID and conformance UUID();
        LODWORD(v83) = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v70 = *(void (**)(void))(v67 + 8);
        OUTLINED_FUNCTION_139();
        v70();
        outlined destroy of SystemUpdateNotice?((uint64_t)v48, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_139();
        v70();
        uint64_t v5 = v85;
        outlined destroy of SystemUpdateNotice?(v1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_44_9();
        uint64_t v58 = (uint64_t)v78;
        uint64_t v1 = v79;
        if (v83) {
          goto LABEL_32;
        }
LABEL_29:
        _s15ConversationKit11ParticipantVSgWOcTm_0(v49, v13, &demangling cache variable for type metadata for Participant?);
        int v62 = __swift_getEnumTagSinglePayload(v13, 1, v5);
        outlined destroy of SystemUpdateNotice?(v13, &demangling cache variable for type metadata for Participant?);
        if (v62 != 1) {
          goto LABEL_37;
        }
        OUTLINED_FUNCTION_42_14(v58, 1);
        uint64_t v63 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant;
        OUTLINED_FUNCTION_6_1();
        uint64_t v64 = v58;
        uint64_t v65 = v63;
        goto LABEL_33;
      }
      outlined destroy of SystemUpdateNotice?((uint64_t)v48, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_26_2();
      v61();
    }
    outlined destroy of SystemUpdateNotice?(v1, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    OUTLINED_FUNCTION_97_0();
    goto LABEL_29;
  }
  uint64_t v20 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants);
  OUTLINED_FUNCTION_2();
  uint64_t v21 = *v20;
  uint64_t v22 = *(void *)(*v20 + 16);
  if (!v22)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = 1;
    goto LABEL_36;
  }
  unint64_t v77 = v19;
  unint64_t v78 = v17;
  uint64_t v79 = v0;
  OUTLINED_FUNCTION_22_0();
  uint64_t v24 = v21 + v23;
  uint64_t v83 = *(void *)(v7 + 72);
  uint64_t v76 = v21;
  swift_bridgeObjectRetain();
  uint64_t v84 = (uint64_t *)v1;
  uint64_t v85 = v5;
  while (1)
  {
    _s15ConversationKit11ParticipantVWOcTm_5(v24, v1);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v88 = &v76;
    uint64_t v26 = OUTLINED_FUNCTION_8(v25);
    uint64_t v28 = *(void *)(v27 + 64);
    MEMORY[0x1F4188790](v26);
    unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_10_0();
    uint64_t v31 = v30;
    OUTLINED_FUNCTION_2_1();
    v32();
    OUTLINED_FUNCTION_29_22((uint64_t)&v76 - v29);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    uint64_t v87 = &v76;
    uint64_t v34 = OUTLINED_FUNCTION_8(v33);
    MEMORY[0x1F4188790](v34);
    OUTLINED_FUNCTION_61();
    uint64_t v36 = v5 + *(int *)(v35 + 56);
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)&v76 - v29, v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    _s15ConversationKit11ParticipantVSgWOcTm_0((uint64_t)v86, v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v37 = OUTLINED_FUNCTION_69(v5);
    if (v38) {
      break;
    }
    uint64_t v82 = &v76;
    MEMORY[0x1F4188790](v37);
    _s15ConversationKit11ParticipantVSgWOcTm_0(v5, (uint64_t)&v76 - v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v39 = OUTLINED_FUNCTION_69(v36);
    if (v38)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v76 - v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_28_21();
      v40();
      uint64_t v1 = (uint64_t)v84;
LABEL_12:
      outlined destroy of SystemUpdateNotice?(v5, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
      uint64_t v5 = v85;
      goto LABEL_14;
    }
    uint64_t v81 = &v76;
    MEMORY[0x1F4188790](v39);
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_38_13();
    v41();
    lazy protocol witness table accessor for type UUID and conformance UUID();
    int v80 = dispatch thunk of static Equatable.== infix(_:_:)();
    unint64_t v42 = *(void (**)(void))(v31 + 8);
    OUTLINED_FUNCTION_28_21();
    v42();
    outlined destroy of SystemUpdateNotice?((uint64_t)&v76 - v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_28_21();
    v42();
    outlined destroy of SystemUpdateNotice?(v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_44_9();
    uint64_t v1 = (uint64_t)v84;
    uint64_t v5 = v85;
    if (v80) {
      goto LABEL_35;
    }
LABEL_14:
    _s15ConversationKit11ParticipantVWOhTm_3(v1, (void (*)(void))type metadata accessor for Participant);
    v24 += v83;
    if (!--v22)
    {
      uint64_t v43 = 1;
      uint64_t v17 = v78;
      uint64_t v0 = v79;
      int v19 = v77;
      goto LABEL_36;
    }
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)&v76 - v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_69(v36);
  uint64_t v1 = (uint64_t)v84;
  if (!v38) {
    goto LABEL_12;
  }
  outlined destroy of SystemUpdateNotice?(v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_35:
  int v19 = v77;
  _s15ConversationKit11ParticipantVWObTm_2(v1, (uint64_t)v77);
  uint64_t v43 = 0;
  uint64_t v17 = v78;
  uint64_t v0 = v79;
LABEL_36:
  OUTLINED_FUNCTION_42_14((uint64_t)v19, v43);
  swift_bridgeObjectRelease();
  uint64_t v74 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant;
  OUTLINED_FUNCTION_6_1();
  outlined assign with take of Participant?((uint64_t)v19, v74);
  swift_endAccess();
  _s15ConversationKit11ParticipantVSgWOcTm_0(v74, (uint64_t)v17, &demangling cache variable for type metadata for Participant?);
  uint64_t v75 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_selectedParticipant;
  OUTLINED_FUNCTION_6_1();
  outlined assign with take of Participant?((uint64_t)v17, v75);
  swift_endAccess();
LABEL_37:
  OUTLINED_FUNCTION_28();
}

uint64_t ParticipantGridViewController.isOneToOneModeEnabled.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  if (MEMORY[0x1C8776240](v1))
  {
    OUTLINED_FUNCTION_43_10();
    OUTLINED_FUNCTION_56_5();
    char v3 = v2();
    swift_unknownObjectRelease();
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t ParticipantGridViewController.hasConnectedToCall.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  if (MEMORY[0x1C8776240](v1))
  {
    OUTLINED_FUNCTION_43_10();
    OUTLINED_FUNCTION_56_5();
    char v3 = v2();
    swift_unknownObjectRelease();
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t ParticipantGridViewController.shouldShowLastFrameUI.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  if (MEMORY[0x1C8776240](v1))
  {
    OUTLINED_FUNCTION_43_10();
    OUTLINED_FUNCTION_56_5();
    char v3 = v2();
    swift_unknownObjectRelease();
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t ParticipantGridViewController.layoutIdiom.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  uint64_t result = MEMORY[0x1C8776240](v3);
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 24))(&v8, ObjectType, v5);
    uint64_t result = swift_unknownObjectRelease();
    char v7 = v8;
  }
  else
  {
    char v7 = 2;
  }
  *a1 = v7;
  return result;
}

uint64_t ParticipantGridViewController.supportedDeviceOrientations.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  if (!MEMORY[0x1C8776240](v1)) {
    return 0;
  }
  swift_getObjectType();
  OUTLINED_FUNCTION_56_5();
  uint64_t v3 = v2();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t ParticipantGridViewController.participantGridViewDelegate(_:didSetOverlayHidden:)(uint64_t a1, char a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate;
  OUTLINED_FUNCTION_2();
  uint64_t result = MEMORY[0x1C8776240](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 64))(v2, a2 & 1, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t protocol witness for ParticipantGridViewDelegate.supportedDeviceOrientations.getter in conformance ParticipantGridViewController()
{
  return ParticipantGridViewController.supportedDeviceOrientations.getter();
}

void ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:)(float a1, float a2, float a3)
{
  uint64_t v6 = v4;
  unint64_t v10 = OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_63();
  uint64_t v12 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v13();
  _dispatchPreconditionTest(_:)();
  uint64_t v14 = OUTLINED_FUNCTION_61_5();
  v15(v14);
  if (v12)
  {
    uint64_t v12 = v6 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants;
    uint64_t v16 = OUTLINED_FUNCTION_2();
    uint64_t v17 = *(void *)v12;
    MEMORY[0x1F4188790](v16);
    OUTLINED_FUNCTION_72_2();
    unint64_t v10 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:), v10, v17);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      return;
    }
    OUTLINED_FUNCTION_6_1();
    uint64_t v20 = *(void *)v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v12 = v20;
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v10 & 0x8000000000000000) == 0) {
        goto LABEL_5;
      }
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t v20 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *(void *)uint64_t v12 = v20;
  if ((v10 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
LABEL_5:
  if (v10 >= *(void *)(v20 + 16))
  {
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v22 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1(v22);
  outlined assign with copy of Participant(v3, v20+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v24 + 72) * v10);
  swift_endAccess();
  id v25 = ParticipantGridViewController.gridView.getter();
  if (v25)
  {
    uint64_t v27 = v25;
    *(float *)&double v26 = a1;
    ParticipantGridView.updateEMA(for:ema:audioPriority:videoPriority:)(v3, v26, a2, a3);
  }
}

uint64_t closure #1 in ParticipantGridViewController.update(participant:broadcastingState:)()
{
  return static UUID.== infix(_:_:)() & 1;
}

unint64_t specialized UnsafeMutablePointer.moveInitialize(from:count:)(unint64_t result, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    uint64_t result = OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 >= result && result + 16 * a2 > a3)
  {
    if (a3 != result)
    {
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  else
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  return result;
}

void specialized UnsafeMutablePointer.moveInitialize(from:count:)(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_4_79();
    OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_84_1();
    if (v5
      && (__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails),
          OUTLINED_FUNCTION_0(),
          v3 + *(void *)(v6 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        OUTLINED_FUNCTION_32_21();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      OUTLINED_FUNCTION_32_21();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

char *specialized UnsafeMutablePointer.moveInitialize(from:count:)(char *result, size_t a2, char *a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_4_79();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_92();
    __break(1u);
  }
  else if (a3 != result || &result[a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_45_8(a3, result, a2);
  }
  return result;
}

uint64_t outlined assign with take of Participant?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:)()
{
  return closure #1 in ParticipantGridViewController.update(participant:broadcastingState:)() & 1;
}

uint64_t sub_1C3278A74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return key path getter for ParticipantGridViewController.focusedParticipant : ParticipantGridViewController(a1, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant, a2);
}

uint64_t sub_1C3278A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ParticipantGridViewController.focusedParticipant : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant, (void (*)(uint64_t))ParticipantGridViewController.focusedParticipant.didset);
}

uint64_t sub_1C3278AC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return key path getter for ParticipantGridViewController.focusedParticipant : ParticipantGridViewController(a1, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant, a2);
}

uint64_t sub_1C3278AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ParticipantGridViewController.focusedParticipant : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant, (void (*)(uint64_t))ParticipantGridViewController.fullScreenFocusedParticipant.didset);
}

uint64_t sub_1C3278B1C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate, a2);
}

uint64_t sub_1C3278B3C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate);
}

uint64_t sub_1C3278B5C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate, a2);
}

uint64_t sub_1C3278B7C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate);
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.mediaPipInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.overlappingInsets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.participantGridViewControllerDidFinishAnimatingTiles(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.participantGridViewController(_:didUpdateVisibleParticipantsFrom:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.participantGridViewController(_:participantDidHideSash:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.participantGridViewController(_:didUpdateFullScreenFocusedParticipantFrom:newParticipant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.participantGridViewController(_:didDodgeMediaPipWithActiveParticipants:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.participantGridViewController(_:didSetOverlayHidden:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.captionsLayoutState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.isOneToOneModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.hasConnectedToCall.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ParticipantGridViewControllerDelegate.shouldShowLastFrameUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t ObjC metadata update function for ParticipantGridViewController()
{
  return type metadata accessor for ParticipantGridViewController();
}

uint64_t type metadata accessor for ParticipantGridViewController()
{
  uint64_t result = type metadata singleton initialization cache for ParticipantGridViewController;
  if (!type metadata singleton initialization cache for ParticipantGridViewController) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void type metadata completion function for ParticipantGridViewController()
{
  type metadata accessor for Participant?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ParticipantGridViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ParticipantGridViewController);
}

uint64_t dispatch thunk of ParticipantGridViewController.__allocating_init(participants:layoutStyle:isLocalMemberAuthorizedToChangeGroupMembership:captionsLayoutState:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t _s15ConversationKit11ParticipantVWObTm_2(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_89();
  v4(v3);
  OUTLINED_FUNCTION_0();
  uint64_t v5 = OUTLINED_FUNCTION_90();
  v6(v5);
  return a2;
}

uint64_t _s15ConversationKit11ParticipantVWOcTm_5(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_89();
  v4(v3);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_124();
  v5();
  return a2;
}

uint64_t _s15ConversationKit11ParticipantVWOhTm_3(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

uint64_t partial apply for closure #1 in ParticipantGridViewController.filterAndTruncate(_:)(uint64_t a1)
{
  return closure #1 in ParticipantGridViewController.filterAndTruncate(_:)(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t specialized Array.index(_:offsetBy:limitedBy:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2) {
      return 0;
    }
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  BOOL v5 = __OFADD__(result, a2);
  result += a2;
  if (v5) {
    goto LABEL_14;
  }
  return result;
}

uint64_t partial apply for closure #1 in ParticipantGridViewController.update(participant:broadcastingState:)()
{
  return partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:)() & 1;
}

uint64_t OUTLINED_FUNCTION_81_2()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t OUTLINED_FUNCTION_82_2(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_86_2()
{
  return outlined destroy of SystemUpdateNotice?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_87_2()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return outlined destroy of SystemUpdateNotice?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_96_0()
{
  return outlined destroy of SystemUpdateNotice?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_99_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_105_0()
{
  return outlined destroy of SystemUpdateNotice?(v0, v1);
}

void specialized Sequence.forEach(_:)(uint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
    lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue(&lazy protocol witness table cache variable for type TUScreenSharingRequest and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v19;
    uint64_t v18 = v20;
    uint64_t v5 = v21;
    int64_t v4 = v22;
    unint64_t v6 = v23;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v5 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v4 = 0;
  }
  int64_t v17 = (unint64_t)(v5 + 64) >> 6;
  if (v3 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v6)
    {
      uint64_t v10 = (v6 - 1) & v6;
      unint64_t v11 = __clz(__rbit64(v6)) | (v4 << 6);
      int64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v17) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v18 + 8 * v14);
    int64_t v12 = v4 + 1;
    if (!v15)
    {
      int64_t v12 = v4 + 2;
      if (v4 + 2 >= v17) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (!v15)
      {
        int64_t v12 = v4 + 3;
        if (v4 + 3 >= v17) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v12);
        if (!v15)
        {
          int64_t v12 = v4 + 4;
          if (v4 + 4 >= v17) {
            goto LABEL_32;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            int64_t v12 = v4 + 5;
            if (v4 + 5 >= v17) {
              goto LABEL_32;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              int64_t v16 = v4 + 6;
              while (v16 < v17)
              {
                unint64_t v15 = *(void *)(v18 + 8 * v16++);
                if (v15)
                {
                  int64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();

              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      ConversationController.declineOrCancelScreenShareRequest(for:)();

      int64_t v4 = v12;
      unint64_t v6 = v10;
      if ((v3 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v24;
        swift_unknownObjectRelease();
        int64_t v12 = v4;
        uint64_t v10 = v6;
        if (v24) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void specialized Sequence.first(where:)(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
    lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue(&lazy protocol witness table cache variable for type TUScreenSharingRequest and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    int64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  uint64_t v16 = v2;
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    int64_t v11 = v3;
    goto LABEL_29;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 < v8)
    {
      unint64_t v14 = *(void *)(v17 + 8 * v13);
      int64_t v11 = v3 + 1;
      if (v14) {
        goto LABEL_28;
      }
      int64_t v11 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (v14) {
        goto LABEL_28;
      }
      int64_t v11 = v3 + 3;
      if (v3 + 3 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (v14) {
        goto LABEL_28;
      }
      int64_t v11 = v3 + 4;
      if (v3 + 4 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (v14)
      {
LABEL_28:
        uint64_t v9 = (v14 - 1) & v14;
        unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
LABEL_29:
        id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
        if (v12)
        {
          do
          {
            if (objc_msgSend(v12, sel_type, v16) == (id)4) {
              break;
            }

            int64_t v3 = v11;
            unint64_t v4 = v9;
            if ((v1 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (!__CocoaSet.Iterator.next()()) {
              break;
            }
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v12 = v23;
            swift_unknownObjectRelease();
            int64_t v11 = v3;
            uint64_t v9 = v4;
          }
          while (v23);
        }
        goto LABEL_33;
      }
      int64_t v11 = v3 + 5;
      if (v3 + 5 < v8)
      {
        unint64_t v14 = *(void *)(v17 + 8 * v11);
        if (!v14)
        {
          int64_t v15 = v3 + 6;
          while (v15 < v8)
          {
            unint64_t v14 = *(void *)(v17 + 8 * v15++);
            if (v14)
            {
              int64_t v11 = v15 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall ConversationControlsManager.stopScreenShare()()
{
  ConversationController.stopScreenSharingSession()();
  ConversationControlsManager.screenShareCountdownTimer.setter(0);
  OUTLINED_FUNCTION_1_12();
  uint64_t v1 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(v0 + 1616))(v3);
  *(unsigned char *)(v2 + 1) = 0;
  v1(v3, 0);
}

Swift::Void __swiftcall ConversationControlsManager.declineIncomingScreenShareRequests()()
{
  uint64_t v2 = v0;
  OUTLINED_FUNCTION_0_20();
  unint64_t v4 = (void *)(*(uint64_t (**)(void))(v3 + 656))();
  if (!v4)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    uint64_t v36 = OUTLINED_FUNCTION_30(v20, (uint64_t)static Logger.conversationControls);
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_4_14(v21, v22, v23, v24, v25, v26, v27, v28, v35, v36))
    {
      unint64_t v29 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_24(v29);
      OUTLINED_FUNCTION_6_7(&dword_1C2F90000, v37, v30, "No incoming screen share requests to decline");
      OUTLINED_FUNCTION_3();
    }

    return;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_screenSharingRequests);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue(&lazy protocol witness table cache variable for type TUScreenSharingRequest and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
  OUTLINED_FUNCTION_39();
  uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v7 & 0xC000000000000001) == 0)
  {
    uint64_t v8 = specialized _NativeSet.filter(_:)(v7);
LABEL_30:
    if (one-time initialization token for conversationControls != -1) {
      goto LABEL_35;
    }
    goto LABEL_31;
  }
  uint64_t v8 = MEMORY[0x1E4FBC870];
  uint64_t v39 = MEMORY[0x1E4FBC870];
  LOBYTE(v6) = __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()())
  {
LABEL_21:
    swift_release();
    goto LABEL_30;
  }
  uint64_t v8 = MEMORY[0x1E4FBC838] + 8;
  while (1)
  {
    swift_dynamicCast();
    if (objc_msgSend(v38, sel_type) == (id)4) {
      break;
    }

LABEL_19:
    if (!__CocoaSet.Iterator.next()())
    {
      uint64_t v8 = v39;
      goto LABEL_21;
    }
  }
  uint64_t v1 = v39;
  unint64_t v9 = *(void *)(v39 + 16);
  if (*(void *)(v39 + 24) <= v9)
  {
    specialized _NativeSet.resize(capacity:)(v9 + 1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUScreenSharingRequest>);
    uint64_t v1 = v39;
  }
  Swift::Int v10 = NSObject._rawHashValue(seed:)(*(void *)(v1 + 40));
  uint64_t v11 = v1 + 56;
  uint64_t v12 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v13 = v10 & ~v12;
  unint64_t v14 = v13 >> 6;
  if (((-1 << v13) & ~*(void *)(v1 + 56 + 8 * (v13 >> 6))) != 0)
  {
    unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v1 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
LABEL_18:
    *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v1 + 48) + 8 * v15) = v38;
    ++*(void *)(v1 + 16);
    goto LABEL_19;
  }
  char v16 = 0;
  unint64_t v17 = (unint64_t)(63 - v12) >> 6;
  while (++v14 != v17 || (v16 & 1) == 0)
  {
    BOOL v18 = v14 == v17;
    if (v14 == v17) {
      unint64_t v14 = 0;
    }
    v16 |= v18;
    uint64_t v19 = *(void *)(v11 + 8 * v14);
    if (v19 != -1)
    {
      unint64_t v15 = __clz(__rbit64(~v19)) + (v14 << 6);
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_35:
  swift_once();
LABEL_31:
  uint64_t v31 = type metadata accessor for Logger();
  uint64_t v32 = OUTLINED_FUNCTION_30(v31, (uint64_t)static Logger.conversationControls);
  os_log_type_t v33 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_105(v33))
  {
    uint64_t v34 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_363(v34);
    _os_log_impl(&dword_1C2F90000, v32, (os_log_type_t)v6, "Declining all incoming screen share requests", (uint8_t *)v1, 2u);
    OUTLINED_FUNCTION_3();
  }

  specialized Sequence.forEach(_:)(v8, v2);
  swift_release();
}

#error "1C327A700: call analysis failed (funcsize=460)"

uint64_t ConversationControlsManager.isShownAboveCoverSheet.getter()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 1072))();
  if (result)
  {
    OUTLINED_FUNCTION_106_0();
    OUTLINED_FUNCTION_56_5();
    v3();
    OUTLINED_FUNCTION_338();
    return v0 & 1;
  }
  return result;
}

void ConversationControlsManager.startScreenShareWithCountdown(completion:)()
{
  uint64_t v3 = v0;
  OUTLINED_FUNCTION_3_74();
  swift_getObjectType();
  OUTLINED_FUNCTION_178();
  if (v4())
  {
    uint64_t v5 = OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_337();
    id v6 = (void *)OUTLINED_FUNCTION_3_0();
    void v6[2] = v5;
    void v6[3] = v2;
    v6[4] = v1;
    swift_retain();
    uint64_t v7 = OUTLINED_FUNCTION_39();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v7);
    specialized ConversationControlsManager.promptForReplaceAlertIfNeeded(_:)(v3, (void (*)(void))partial apply for closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:), (uint64_t)v6);
    OUTLINED_FUNCTION_12_2();
    swift_release();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    osloga = OUTLINED_FUNCTION_30(v9, (uint64_t)static Logger.conversationControls);
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_4_14(v10, v11, v12, v13, v14, v15, v16, v17, v22, osloga))
    {
      BOOL v18 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_24(v18);
      OUTLINED_FUNCTION_6_7(&dword_1C2F90000, oslog, v19, "Ignoring starting screen sharing. Screen sharing is not allowed.");
      OUTLINED_FUNCTION_3();
    }
    OUTLINED_FUNCTION_12_2();
  }
}

void ConversationControlsManager.requestScreenSharingPicker(with:)()
{
  OUTLINED_FUNCTION_260();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_30(v1, (uint64_t)static Logger.conversationControls);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_105(v3))
  {
    unint64_t v4 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_180(v4);
    OUTLINED_FUNCTION_35_1(&dword_1C2F90000, v5, v6, "requesting screen share picker.");
    OUTLINED_FUNCTION_3();
  }

  ConversationController.requestScreenSharingPicker(with:)(v0);
}

void ConversationControlsManager.requestScreenSharingSession(for:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_260();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = OUTLINED_FUNCTION_221();
  uint64_t v6 = type metadata accessor for Participant(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_62();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.conversationControls);
  _s15ConversationKit11ParticipantVWOcTm_6(v0, v1);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    int v11 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v16 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)int v11 = 136315138;
    _s15ConversationKit11ParticipantVWOcTm_6(v1, v2);
    __swift_storeEnumTagSinglePayload(v2, 0, 1, v6);
    uint64_t v12 = specialized >> prefix<A>(_:)();
    unint64_t v14 = v13;
    outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
    uint64_t v15 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, &v16);
    OUTLINED_FUNCTION_257(v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOhTm_4();
    _os_log_impl(&dword_1C2F90000, v9, v10, "requesting screen share for participant %s.", v11, 0xCu);
    OUTLINED_FUNCTION_264();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_4();
  }

  ConversationController.requestScreenSharingSession(for:)();
  OUTLINED_FUNCTION_28();
}

void ConversationControlsManager.heldCalls()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t a1, void *a2), void *a12, uint64_t (*a13)(), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_254();
  a21 = v23;
  a22 = v24;
  int v25 = *(void **)(v22 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
  uint64_t v26 = OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_29_23();
  uint64_t v27 = OUTLINED_FUNCTION_26();
  *(void *)(v27 + 16) = partial apply for closure #1 in ConversationControlsManager.heldCalls();
  *(void *)(v27 + 24) = v26;
  a13 = partial apply for thunk for @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool);
  a14 = v27;
  a9 = MEMORY[0x1E4F143A8];
  a10 = 1107296256;
  a11 = thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool);
  a12 = &block_descriptor_49;
  int v28 = _Block_copy(&a9);
  swift_retain();
  swift_release();
  id v29 = objc_msgSend(v25, sel_callsPassingTest_, v28);
  _Block_release(v28);
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v28)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    swift_release();

    OUTLINED_FUNCTION_252();
  }
}

void specialized RangeReplaceableCollection<>.removeLast()(uint64_t a1@<X8>)
{
  if (*(void *)(*(void *)v1 + 16))
  {
    specialized Array._customRemoveLast()((uint64_t)&v3);
    if (v4)
    {
      outlined init with take of Notice(&v3, a1);
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v3, &demangling cache variable for type metadata for Notice?);
      specialized Array.remove(at:)();
    }
  }
  else
  {
    __break(1u);
  }
}

void ConversationControlsManager.participant(with:)()
{
}

{
  ConversationController.participant(with:)();
}

uint64_t ConversationControlsManager.maximumLayoutMode.getter()
{
  OUTLINED_FUNCTION_3_16();
  v2 += 78;
  long long v3 = *v2;
  (*v2)();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_74_2();
  v4();
  OUTLINED_FUNCTION_85_3();
  if (v1) {
    return 3;
  }
  OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_83_0();
  if (v5())
  {
    OUTLINED_FUNCTION_3_16();
    if (((*(uint64_t (**)(void))(v6 + 216))() & 1) == 0) {
      return 3;
    }
  }
  OUTLINED_FUNCTION_3_16();
  if (((*(uint64_t (**)(void))(v7 + 216))() & 1) == 0) {
    return 4;
  }
  OUTLINED_FUNCTION_170_0();
  v3();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_74_2();
  v8();
  OUTLINED_FUNCTION_85_3();
  if ((&static ActivityType.Icon.exploreTogether & 1) == 0) {
    return 4;
  }
  id v9 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_currentCallGroups);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v11 == 1) {
    return 3;
  }
  else {
    return 4;
  }
}

uint64_t ConversationControlsManager.visibleParticipants.getter()
{
  return ConversationController.visibleParticipants.getter();
}

void ConversationControlsManager.isOneToOneConversation.getter()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_5_13();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 656))();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    OUTLINED_FUNCTION_5_13();
    if (((*(uint64_t (**)(void))(v3 + 184))() & 1) == 0) {
      goto LABEL_6;
    }
    unsigned int v4 = objc_msgSend(v2, sel_isOneToOneFaceTimeMyself);
    id v5 = objc_msgSend(v2, sel_mergedRemoteMembers);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    OUTLINED_FUNCTION_351();
    uint64_t v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v7 = specialized Set.count.getter(v6);
    swift_bridgeObjectRelease();
    if (v7 || !v4)
    {
LABEL_6:
      id v8 = objc_msgSend(v2, sel_mergedRemoteMembers);
      OUTLINED_FUNCTION_301();
      lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
      uint64_t v9 = OUTLINED_FUNCTION_294();

      uint64_t v10 = specialized Set.count.getter(v9);
      swift_bridgeObjectRelease();
      if (v10 == 1)
      {
        id v11 = objc_msgSend(v2, sel_mergedActiveRemoteParticipants);
        OUTLINED_FUNCTION_301();
        lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
        uint64_t v12 = OUTLINED_FUNCTION_294();

        specialized Set.count.getter(v12);
        swift_bridgeObjectRelease();
      }
    }
  }
  OUTLINED_FUNCTION_15_0();
}

void thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ()(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t specialized _resumeUnsafeContinuation<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  **(void **)(*(void *)(a1 + 64) + 40) = a2;
  return MEMORY[0x1F41881F8]();
}

uint64_t specialized _resumeUnsafeContinuation<A>(_:_:)(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(a1 + 64) + 40) = a2;
  return MEMORY[0x1F41881F8]();
}

Swift::Void __swiftcall ConversationControlsManager.openPTTApp()()
{
  OUTLINED_FUNCTION_0_20();
  v1 += 78;
  uint64_t v2 = *v1;
  (*v1)();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_156_0();
  v3();
  OUTLINED_FUNCTION_85_3();
  if (v0)
  {
    OUTLINED_FUNCTION_170_0();
    v2();
    OUTLINED_FUNCTION_27_26();
    OUTLINED_FUNCTION_80_1();
    v4();
    OUTLINED_FUNCTION_85_3();
    uint64_t v5 = outlined bridged method (ob) of @objc TUConversationActivity.concatenatedMetadataDescription.getter(v0, (SEL *)&selRef_bundleIdentifier);
    if (v6)
    {
      ConversationControlsManager.openApp(withBundleIdentifier:)(*(Swift::String *)&v5);
      swift_bridgeObjectRelease();
    }
  }
}

void ConduitLagunaNoticeManager.pushSession(lightweightHandoff:selectedActivity:completion:)(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = (void *)MEMORY[0x1C8776240](v4 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager);
  if (v10
    && (id v11 = v10,
        uint64_t v12 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x290))(),
        v11,
        v12))
  {

    uint64_t v13 = v5 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo;
    OUTLINED_FUNCTION_2();
    uint64_t v14 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
    uint64_t v15 = OUTLINED_FUNCTION_287();
    if (__swift_getEnumTagSinglePayload(v15, v16, v14))
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      BOOL v18 = (void *)OUTLINED_FUNCTION_30(v17, (uint64_t)static Logger.conversationControls);
      os_log_type_t v19 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_12(v19))
      {
        uint64_t v20 = (_WORD *)OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_23_1(v20);
        OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v21, v22, "pushSession - no notice information available. Unsure where to push to.");
        OUTLINED_FUNCTION_3();
      }
    }
    else
    {
      id v29 = *(void **)(v13 + *(int *)(v14 + 20));
      uint64_t v30 = one-time initialization token for conversationControls;
      id v31 = v29;
      if (v30 != -1) {
        swift_once();
      }
      uint64_t v32 = type metadata accessor for Logger();
      __swift_project_value_buffer(v32, (uint64_t)static Logger.conversationControls);
      id v33 = a2;
      id v34 = v31;
      uint64_t v35 = v33;
      id v36 = v34;
      uint64_t v37 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_12_4(v38))
      {
        uint64_t v39 = swift_slowAlloc();
        uint64_t v56 = (void *)OUTLINED_FUNCTION_327();
        aBlock[0] = OUTLINED_FUNCTION_9_0();
        *(_DWORD *)uint64_t v39 = 138412802;
        os_log_t osloga = v35;
        id v40 = objc_msgSend(v36, sel_deviceHandle);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v56 = v40;

        *(_WORD *)(v39 + 12) = 1024;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v39 + 18) = 2080;
        uint64_t v41 = osloga;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TUConversationActivity?);
        uint64_t v42 = String.init<A>(describing:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        uint64_t v35 = osloga;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v37, (os_log_type_t)v33, "pushSession - deviceHandle %@ - lightweightHandoff %{BOOL}d - selectedActivity %s", (uint8_t *)v39, 0x1Cu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
      }
      char v44 = a1 & 1;
      if (a1) {
        uint64_t v45 = 1;
      }
      else {
        uint64_t v45 = 2;
      }
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUNearbySuggestionResult);
      id v46 = v36;
      uint64_t v47 = v35;
      uint64_t v48 = (void *)OUTLINED_FUNCTION_102();
      id v50 = TUNearbySuggestionResult.__allocating_init(suggestion:selectedActivity:type:)(v48, v49, v45);
      id v51 = objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_callCenter), sel_neighborhoodActivityConduit);
      uint64_t v52 = OUTLINED_FUNCTION_12_6();
      *(void *)(v52 + 16) = v46;
      *(unsigned char *)(v52 + 24) = v44;
      *(void *)(v52 + 32) = a3;
      *(void *)(v52 + 40) = a4;
      aBlock[4] = (uint64_t)partial apply for closure #1 in ConduitLagunaNoticeManager.pushSession(lightweightHandoff:selectedActivity:completion:);
      aBlock[5] = v52;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
      aBlock[3] = (uint64_t)&block_descriptor_13_0;
      uint64_t v53 = _Block_copy(aBlock);
      id v54 = v46;
      uint64_t v55 = OUTLINED_FUNCTION_30_15();
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v55);
      swift_release();
      objc_msgSend(v51, sel_respondToSuggestionWithResult_completion_, v50, v53);
      _Block_release(v53);
    }
    OUTLINED_FUNCTION_249();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    oslog = OUTLINED_FUNCTION_30(v23, (uint64_t)static Logger.conversationControls);
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v24))
    {
      int v25 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_24(v25);
      OUTLINED_FUNCTION_6_7(&dword_1C2F90000, oslog, v26, "pushSession - no conversation available .-.");
      OUTLINED_FUNCTION_3();
    }
    OUTLINED_FUNCTION_249();
  }
}

void ConversationControlsManager.approveAuthorizationRequest(for:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v0 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v4();
  char v5 = _dispatchPreconditionTest(_:)();
  uint64_t v6 = OUTLINED_FUNCTION_29_0();
  v7(v6);
  if (v5)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.conversationControls);
  OUTLINED_FUNCTION_297();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_272();
  OUTLINED_FUNCTION_233();
  OUTLINED_FUNCTION_2_1();
  v10();
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = OUTLINED_FUNCTION_37();
    v24[3] = v2;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = OUTLINED_FUNCTION_9_0();
    _DWORD v24[2] = v24;
    uint64_t v25 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    v24[1] = v14 + 4;
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v18 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v25);
    OUTLINED_FUNCTION_256(v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v19 = OUTLINED_FUNCTION_324();
    v20(v19);
    _os_log_impl(&dword_1C2F90000, v11, v12, "approveLetMeInButtonTapped for participant with ID %s", v14, 0xCu);
    OUTLINED_FUNCTION_264();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    uint64_t v21 = OUTLINED_FUNCTION_324();
    v22(v21);
  }

  ConversationController.approve(_:)();
  OUTLINED_FUNCTION_383();
  OUTLINED_FUNCTION_1_12();
  (*(void (**)(void))(v23 + 2480))();
  OUTLINED_FUNCTION_28();
}

void ConversationControlsManager.rejectAuthorizationRequest(for:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v0;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_80();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_64();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v10();
  char v11 = _dispatchPreconditionTest(_:)();
  uint64_t v12 = OUTLINED_FUNCTION_102();
  v13(v12);
  if (v11)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static Logger.conversationControls);
  uint64_t v15 = OUTLINED_FUNCTION_297();
  OUTLINED_FUNCTION_4();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_2_1();
  v19();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = OUTLINED_FUNCTION_37();
    uint64_t v33 = v1;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = OUTLINED_FUNCTION_9_0();
    v32[0] = v32;
    uint64_t v35 = v24;
    v32[1] = v6;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v34 = v4;
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, &v35);
    OUTLINED_FUNCTION_257(v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v28 = OUTLINED_FUNCTION_21_3();
    v29(v28);
    _os_log_impl(&dword_1C2F90000, v20, v21, "dismissLetMeInButtonTapped for participant with ID %s", v23, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    uint64_t v1 = v33;
    OUTLINED_FUNCTION_3();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v3, v15);
  }

  ConversationController.dismiss(_:)();
  ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1);
  uint64_t v30 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_24_6(v30);
  OUTLINED_FUNCTION_0_62();
  (*(void (**)(uint64_t))(v31 + 2456))(v1);
  outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_28();
}

char *ConversationControlsManager.__allocating_init(activeCall:)()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)static PlaceholderCallCenter.shared;
  id v2 = objc_allocWithZone((Class)type metadata accessor for CallCenter());
  id v3 = v1;
  uint64_t v4 = (void *)OUTLINED_FUNCTION_361();
  CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v4, v5, v6, v7);
  uint64_t v8 = (void *)OUTLINED_FUNCTION_350();
  return specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(v8, v9, v10);
}

{
  uint64_t vars8;

  OUTLINED_FUNCTION_4_15();
  swift_getObjectType();
  return specialized ConversationControlsManager.__allocating_init(activeCall:)();
}

uint64_t ConversationControlsManager.participantStateDidChange.getter()
{
  return OUTLINED_FUNCTION_280();
}

void ConversationControlsManager.setLocalAudio(muted:bluetoothAudioFormat:)()
{
  OUTLINED_FUNCTION_31();
  char v2 = v1;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_5_1();
  char v4 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *id v0 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v5();
  _dispatchPreconditionTest(_:)();
  uint64_t v6 = OUTLINED_FUNCTION_39_12();
  v7(v6);
  if (v4)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = OUTLINED_FUNCTION_30(v8, (uint64_t)static Logger.conversationControls);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_12_4(v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v14 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v11 = 67109378;
    OUTLINED_FUNCTION_314(v2 & 1);
    *(_WORD *)(v11 + 8) = 2080;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Int?);
    uint64_t v12 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v9, (os_log_type_t)v0, "setLocalAudio, muted:%{BOOL}d, bluetoothAudioFormat:%s", (uint8_t *)v11, 0x12u);
    OUTLINED_FUNCTION_119();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  ConversationController.setLocalAudio(muted:bluetoothAudioFormat:)();
  OUTLINED_FUNCTION_28();
}

#error "1C327C5B8: call analysis failed (funcsize=129)"

void ConversationControlsManager.viewActivity(_:)()
{
  OUTLINED_FUNCTION_31();
  char v4 = v0;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = OUTLINED_FUNCTION_80();
  uint64_t v10 = type metadata accessor for Collaboration(v9);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_221();
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_61();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v3 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v16();
  char v17 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v3, v12);
  if (v17)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = OUTLINED_FUNCTION_30(v18, (uint64_t)static Logger.conversationControls);
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_12_4(v20))
  {
    os_log_type_t v21 = (uint8_t *)OUTLINED_FUNCTION_8_0();
    *(_WORD *)os_log_type_t v21 = 0;
    _os_log_impl(&dword_1C2F90000, v19, (os_log_type_t)v12, "viewCurrentActivity", v21, 2u);
    OUTLINED_FUNCTION_3();
  }

  outlined init with copy of IDSLookupManager(v6, (uint64_t)&v31);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload(v1, 0, 1, v10);
    outlined init with take of Collaboration(v1, v2);
    ConversationControlsManager.presentCollaboration(_:completion:)(v2, 0, 0);
    _s15ConversationKit11ParticipantVWOhTm_4();
  }
  else
  {
    OUTLINED_FUNCTION_218();
    __swift_storeEnumTagSinglePayload(v22, v23, v24, v10);
    outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Collaboration?);
    uint64_t v25 = OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_337();
    uint64_t v26 = *(void *)(v6 + 24);
    uint64_t v27 = *(void *)(v6 + 32);
    uint64_t v28 = (void *)OUTLINED_FUNCTION_24_2();
    uint64_t v30 = __swift_project_boxed_opaque_existential_1(v28, v29);
    swift_retain();
    specialized ConversationControlsManager.presentActivity(activity:completion:)((uint64_t)v30, (uint64_t)partial apply for closure #1 in ConversationControlsManager.viewActivity(_:), v25, v4, v26, v27);
    swift_release_n();
  }
  OUTLINED_FUNCTION_28();
}

void ConversationControlsManager.buzz(participantIdentifier:)()
{
}

{
  uint64_t *v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  const char *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(void);
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;

  OUTLINED_FUNCTION_14();
  uint64_t v2 = v1;
  char v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_5_1();
  uint64_t v9 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *id v0 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v10();
  _dispatchPreconditionTest(_:)();
  uint64_t v11 = OUTLINED_FUNCTION_39_12();
  v12(v11);
  if (v9)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = OUTLINED_FUNCTION_30(v13, (uint64_t)static Logger.conversationControls);
  uint64_t v15 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_21_0(v15))
  {
    uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_8_0();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_1C2F90000, v14, v7, v4, v16, 2u);
    OUTLINED_FUNCTION_3();
  }

  v2(v6);
  OUTLINED_FUNCTION_15_0();
}

void ConversationControlsManager.approve(participantIdentifier:)()
{
}

void ConversationControlsManager.dismiss(participantIdentifier:)()
{
}

uint64_t ConversationControlsManager.canKick(participantIdentifier:)()
{
  OUTLINED_FUNCTION_260();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  char v4 = (void *)OUTLINED_FUNCTION_30(v3, (uint64_t)static Logger.conversationControls);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_107(v5))
  {
    uint64_t v6 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_363(v6);
    OUTLINED_FUNCTION_168(&dword_1C2F90000, v7, v8, "kickParticipant");
    OUTLINED_FUNCTION_3();
  }

  ConversationController.participant(with:)();
  ConversationController.canKick(_:)();
  char v10 = v9;
  outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for Participant?);
  return v10 & 1;
}

Swift::Void __swiftcall ConversationControlsManager.toggleMultiwayLayout()()
{
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_62();
  char v2 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v0 = static OS_dispatch_queue.main.getter();
  uint64_t v3 = OUTLINED_FUNCTION_2_52();
  v4(v3);
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = OUTLINED_FUNCTION_1_18();
  v6(v5);
  if (v2)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_30(v7, (uint64_t)static Logger.conversationControls);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v9))
  {
    char v10 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v10);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v11, v12, "toggleMultiwayLayout");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_145_0();
  OUTLINED_FUNCTION_126_0();
  if (v13())
  {
    OUTLINED_FUNCTION_27_26();
    OUTLINED_FUNCTION_74_2();
    v14();
    swift_unknownObjectRelease();
  }
  else
  {
    ConversationControlsManager.handleToggleLayoutAction()();
  }
}

Swift::Void __swiftcall ConversationControlsManager.toggleCaptionsButtonTapped()()
{
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_62();
  char v2 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v0 = static OS_dispatch_queue.main.getter();
  uint64_t v3 = OUTLINED_FUNCTION_2_52();
  v4(v3);
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = OUTLINED_FUNCTION_1_18();
  v6(v5);
  if (v2)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_30(v7, (uint64_t)static Logger.conversationControls);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v9))
  {
    char v10 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v10);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v11, v12, "toggleCaptionsButtonTapped");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_145_0();
  OUTLINED_FUNCTION_126_0();
  if (v13())
  {
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_56_5();
    v14();
    swift_unknownObjectRelease();
  }
}

uint64_t ConversationControlsManager.kick(participant:)()
{
  OUTLINED_FUNCTION_260();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_30(v0, (uint64_t)static Logger.conversationControls);
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_105(v2))
  {
    uint64_t v3 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_180(v3);
    OUTLINED_FUNCTION_35_1(&dword_1C2F90000, v4, v5, "kickParticipant");
    OUTLINED_FUNCTION_3();
  }

  return ConversationController.kick(_:)();
}

uint64_t ConversationControlsManager.shareableLink(completionHandler:)(void (*a1)(uint64_t, void), uint64_t a2)
{
  return ConversationController.shareableLink(completionHandler:)(a1, a2);
}

uint64_t protocol witness for ShareCardViewModelProviding.screenSharingAvailablePublisher.getter in conformance ConversationControlsManager()
{
  OUTLINED_FUNCTION_0_20();
  return (*(uint64_t (**)(void))(v0 + 1656))();
}

uint64_t protocol witness for ShareCardViewModelProviding.remoteParticipants.getter in conformance ConversationControlsManager()
{
  OUTLINED_FUNCTION_0_20();
  return (*(uint64_t (**)(void))(v0 + 2312))();
}

uint64_t protocol witness for ShareCardViewModelProviding.conversationIsAVLess.getter in conformance ConversationControlsManager()
{
  OUTLINED_FUNCTION_0_20();
  return (*(uint64_t (**)(void))(v0 + 800))() & 1;
}

uint64_t SystemBannerPresenter.presentBanner(as:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, uint64_t, uint64_t))(a4 + 16))(a1, a2, 0, 0, a3, a4);
}

uint64_t InCallConversationControlsDelegate.updateInCallConversationControls(type:showControlsIfHidden:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(a4 + 80))(a1, a2, 0, a3, a4);
}

uint64_t InCallConversationControlsDelegate.showInCallConversationControls(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(a3 + 80))(a1, 1, 0, a2, a3);
}

uint64_t ControlsHUDUpdate.type.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of ConversationControlsType(v1, a1);
}

uint64_t ControlsHUDUpdate.replacingNotice.getter()
{
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t ControlsHUDUpdate.showControlsIfHidden.getter()
{
  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t ControlsHUDUpdate.sizeClass.getter()
{
  return *(void *)(v0 + 48);
}

_OWORD *ControlsHUDUpdate.init(type:replacingNotice:showControlsIfHidden:)@<X0>(long long *a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t result = outlined init with take of ConversationControlsType(a1, (_OWORD *)a4);
  *(unsigned char *)(a4 + 41) = a2;
  *(unsigned char *)(a4 + 42) = a3;
  *(void *)(a4 + 48) = 0;
  return result;
}

uint64_t one-time initialization function for cnk_acceptCallButtonTapped()
{
  uint64_t result = MEMORY[0x1C87730B0](0xD000000000000026, 0x80000001C37A5710);
  static NSNotificationName.cnk_acceptCallButtonTapped = result;
  return result;
}

id static NSNotificationName.cnk_acceptCallButtonTapped.getter()
{
  if (one-time initialization token for cnk_acceptCallButtonTapped != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSNotificationName.cnk_acceptCallButtonTapped;
  return v0;
}

uint64_t ConversationControlsManager.activeCall.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ConversationControlsManager.callUUID.getter()
{
  OUTLINED_FUNCTION_0_20();
  (*(void (**)(void))(v1 + 624))();
  uint64_t v2 = OUTLINED_FUNCTION_27_26();
  (*(void (**)(uint64_t, uint64_t))(v0 + 200))(v2, v0);
  return swift_unknownObjectRelease();
}

id ConversationControlsManager.callCenter.getter()
{
  return OUTLINED_FUNCTION_4_2(OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
}

BOOL ConversationControlsManager.hasMultipleCalls.getter()
{
  return (TUCallCenter.wantsCallWaiting.getter() & 1) != 0 || TUCallCenter.hasMultipleActiveCalls.getter();
}

uint64_t ConversationControlsManager.activeBannerIdentifier.getter()
{
  OUTLINED_FUNCTION_0_20();
  (*(void (**)(void))(v0 + 624))();
  OUTLINED_FUNCTION_106_0();
  OUTLINED_FUNCTION_235();
  v1();
  swift_unknownObjectRelease();
  return OUTLINED_FUNCTION_34_9();
}

uint64_t ConversationControlsManager.conversation.getter()
{
  ConversationController.lookupActiveConversation()();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    if (OUTLINED_FUNCTION_269()) {
      return v1;
    }
    else {
      return 0;
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v2, &demangling cache variable for type metadata for Conversation?);
    return 0;
  }
}

uint64_t key path getter for ConversationControlsManager.ignoredScreenSharingRequestUUIDs : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x298))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.ignoredScreenSharingRequestUUIDs : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x2A0);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t ConversationControlsManager.ignoredScreenSharingRequestUUIDs.getter()
{
  return ConversationControlsManager.ignoredScreenSharingRequestUUIDs.getter();
}

{
  OUTLINED_FUNCTION_5_4();
  return swift_bridgeObjectRetain();
}

uint64_t ConversationControlsManager.ignoredScreenSharingRequestUUIDs.setter(uint64_t a1)
{
  return ConversationControlsManager.ignoredScreenSharingRequestUUIDs.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_ignoredScreenSharingRequestUUIDs, MEMORY[0x1E4FBC898]);
}

uint64_t (*ConversationControlsManager.ignoredScreenSharingRequestUUIDs.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t ConversationControlsManager.mostRecentActiveConversation.getter()
{
  OUTLINED_FUNCTION_0_20();
  (*(void (**)(void *__return_ptr))(v0 + 288))(v3);
  if (v3[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    if (OUTLINED_FUNCTION_269()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v3, &demangling cache variable for type metadata for Conversation?);
    return 0;
  }
}

uint64_t ConversationControlsManager.localParticipant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_2();
  return _s15ConversationKit11ParticipantVWOcTm_6(v3, a1);
}

uint64_t key path getter for ConversationControlsManager.initiallyActiveParticipantIdentifiers : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x2C0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.initiallyActiveParticipantIdentifiers : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x2C8);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t ConversationControlsManager.initiallyActiveParticipantIdentifiers.getter()
{
  return ConversationControlsManager.ignoredScreenSharingRequestUUIDs.getter();
}

uint64_t ConversationControlsManager.initiallyActiveParticipantIdentifiers.setter(uint64_t a1)
{
  return ConversationControlsManager.ignoredScreenSharingRequestUUIDs.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_initiallyActiveParticipantIdentifiers, MEMORY[0x1E4FBC898]);
}

uint64_t (*ConversationControlsManager.initiallyActiveParticipantIdentifiers.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

id ConversationControlsManager.noticeCoordinator.getter()
{
  return OUTLINED_FUNCTION_4_2(OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator);
}

uint64_t key path getter for ConversationControlsManager.countdownController : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x2F0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.countdownController : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x2F8);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t ConversationControlsManager.countdownController.getter()
{
  return swift_retain();
}

uint64_t ConversationControlsManager.countdownController.setter(uint64_t a1)
{
  return ConversationControlsManager.ignoredScreenSharingRequestUUIDs.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_countdownController, MEMORY[0x1E4FBC8D0]);
}

uint64_t ConversationControlsManager.ignoredScreenSharingRequestUUIDs.setter(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = (uint64_t *)(v3 + *a2);
  OUTLINED_FUNCTION_11_0();
  uint64_t v7 = *v6;
  *uint64_t v6 = a1;
  return a3(v7);
}

uint64_t (*ConversationControlsManager.countdownController.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationControlsManager.contentExtractor : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x308))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.contentExtractor : ConversationControlsManager(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x310);
  id v4 = *a1;
  return v3(v2);
}

void *ConversationControlsManager.contentExtractor.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  id v2 = v1;
  return v1;
}

void ConversationControlsManager.contentExtractor.setter(void *a1)
{
}

uint64_t (*ConversationControlsManager.contentExtractor.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t ConversationControlsManager.conversationIsAVLess.getter()
{
  ConversationController.conversationIsAVLess.getter();
  return v0 & 1;
}

uint64_t key path getter for ConversationControlsManager.shouldShowCallDetailsWhenReady : ConversationControlsManager@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x328))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ConversationControlsManager.shouldShowCallDetailsWhenReady : ConversationControlsManager(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x330))(*a1);
}

uint64_t ConversationControlsManager.shouldShowCallDetailsWhenReady.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t ConversationControlsManager.shouldShowCallDetailsWhenReady.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowCallDetailsWhenReady);
  uint64_t result = OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*ConversationControlsManager.shouldShowCallDetailsWhenReady.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t ConversationControlsManager.isOnScreenSubscription.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_26_1(a1);
}

uint64_t ConversationControlsManager.activeShareCardHandle.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_26_1(a1);
}

uint64_t key path getter for ConversationControlsManager.minReactionCountForNotice : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x370))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.minReactionCountForNotice : ConversationControlsManager(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x378))(*a1);
}

uint64_t ConversationControlsManager.updateReactionNotice()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (uint64_t *)&v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v17[-v6];
  uint64_t v8 = swift_beginAccess();
  specialized NoticeQueueStore.peek()(v18, v8);
  swift_endAccess();
  if (v18[3])
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
    uint64_t v9 = type metadata accessor for ReactionNotice(0);
    uint64_t v10 = swift_dynamicCast() ^ 1;
    uint64_t v11 = (uint64_t)v7;
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v18, &demangling cache variable for type metadata for Notice?);
    uint64_t v9 = type metadata accessor for ReactionNotice(0);
    uint64_t v11 = (uint64_t)v7;
    uint64_t v10 = 1;
  }
  __swift_storeEnumTagSinglePayload(v11, v10, 1, v9);
  outlined init with copy of Participant?((uint64_t)v7, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
  type metadata accessor for ReactionNotice(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v9) == 1)
  {
    uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v14 = *v5;
    swift_bridgeObjectRetain();
    _s15ConversationKit11ParticipantVWOhTm_4();
    uint64_t v13 = *(void *)(v14 + 16);
    uint64_t updated = swift_bridgeObjectRelease();
  }
  uint64_t v15 = (void *)MEMORY[0x1E4FBC8C8];
  if (v13 >= (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x370))(updated)
    && ((*(uint64_t (**)(void))((*v15 & *v1) + 0x388))() & 1) != 0)
  {
    ConversationControlsManager.postReactionNotice()();
  }
  else
  {
    ConversationControlsManager.dismissReactionNotice()();
  }
  return outlined destroy of SystemUpdateNotice?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
}

uint64_t ConversationControlsManager.minReactionCountForNotice.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *(void *)v0;
}

uint64_t ConversationControlsManager.minReactionCountForNotice.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_minReactionCountForNotice);
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  return ConversationControlsManager.minReactionCountForNotice.didset();
}

uint64_t (*ConversationControlsManager.minReactionCountForNotice.modify(uint64_t a1))()
{
  return ConversationControlsManager.minReactionCountForNotice.modify;
}

uint64_t key path getter for ConversationControlsManager.canPostReactionNotice : ConversationControlsManager@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x388))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ConversationControlsManager.canPostReactionNotice : ConversationControlsManager(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x390))(*a1);
}

uint64_t ConversationControlsManager.minReactionCountForNotice.didset()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_reactionNoticeHistory);
  OUTLINED_FUNCTION_11_0();
  void *v1 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  return ConversationControlsManager.updateReactionNotice()();
}

uint64_t ConversationControlsManager.canPostReactionNotice.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t ConversationControlsManager.canPostReactionNotice.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_canPostReactionNotice);
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  return ConversationControlsManager.minReactionCountForNotice.didset();
}

uint64_t (*ConversationControlsManager.canPostReactionNotice.modify(uint64_t a1))()
{
  return ConversationControlsManager.minReactionCountForNotice.modify;
}

uint64_t ConversationControlsManager.minReactionCountForNotice.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return ConversationControlsManager.minReactionCountForNotice.didset();
  }
  return result;
}

uint64_t key path getter for ConversationControlsManager.videoTileConversationController : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x3A0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.videoTileConversationController : ConversationControlsManager(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x3A8);
  id v4 = *a1;
  return v3(v2);
}

void ConversationControlsManager.videoTileConversationController.didset(void *a1)
{
  id v2 = v1;
  id v4 = (char *)v2 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_videoTileConversationController;
  swift_beginAccess();
  uint64_t v5 = (void *)MEMORY[0x1C8776240](v4);
  uint64_t v6 = v5;
  if (a1)
  {
    if (v5)
    {
      type metadata accessor for ConversationController(0);
      id v7 = a1;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8) {
        return;
      }
    }
  }
  else
  {
    if (!v5) {
      return;
    }
  }
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService) == 1)
  {
    (*(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x3D0))(v10);
    if (v10[3])
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallControlsService);
      type metadata accessor for InCallCallControlsService();
      if (swift_dynamicCast())
      {
        uint64_t v9 = (void *)MEMORY[0x1C8776240](v4);
        swift_beginAccess();
        swift_unknownObjectWeakAssign();
        swift_release();
      }
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for CallControlsService?);
    }
  }
}

uint64_t ConversationControlsManager.videoTileConversationController.getter()
{
  return ConversationControlsManager.videoTileConversationController.getter();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_5_4();
  return MEMORY[0x1C8776240](v0);
}

void ConversationControlsManager.videoTileConversationController.setter(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_videoTileConversationController;
  OUTLINED_FUNCTION_11_0();
  id v4 = (void *)MEMORY[0x1C8776240](v3);
  OUTLINED_FUNCTION_30_15();
  swift_unknownObjectWeakAssign();
  ConversationControlsManager.videoTileConversationController.didset(v4);
}

void (*ConversationControlsManager.videoTileConversationController.modify())(uint64_t a1, char a2)
{
  id v2 = malloc(0x28uLL);
  *(void *)(OUTLINED_FUNCTION_56((uint64_t)v2) + 32) = v0;
  uint64_t v3 = v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_videoTileConversationController;
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 24) = MEMORY[0x1C8776240](v3);
  return ConversationControlsManager.videoTileConversationController.modify;
}

void ConversationControlsManager.videoTileConversationController.modify(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  id v4 = (id *)(*(void *)a1 + 24);
  id v3 = *v4;
  if (a2)
  {
    id v5 = v3;
    ConversationControlsManager.videoTileConversationController.setter(v3);
  }
  else
  {
    ConversationControlsManager.videoTileConversationController.setter(*(void **)(*(void *)a1 + 24));
  }
  free(v2);
}

uint64_t key path getter for ConversationControlsManager.callControlsService : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x3D0))();
}

uint64_t key path setter for ConversationControlsManager.callControlsService : ConversationControlsManager(uint64_t a1)
{
  outlined init with copy of Participant?(a1, (uint64_t)v2, &demangling cache variable for type metadata for CallControlsService?);
  return ConversationControlsManager.callControlsService.setter((uint64_t)v2);
}

uint64_t ConversationControlsManager.callControlsService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___callControlsService;
  OUTLINED_FUNCTION_2();
  outlined init with copy of Participant?(v3, (uint64_t)v5, &demangling cache variable for type metadata for CallControlsService??);
  if (v6 != 1) {
    return outlined init with take of ConversationControlsRecipe?((uint64_t)v5, a1, &demangling cache variable for type metadata for CallControlsService?);
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v5, &demangling cache variable for type metadata for CallControlsService??);
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  outlined init with copy of Participant?(a1, (uint64_t)v5, &demangling cache variable for type metadata for CallControlsService?);
  OUTLINED_FUNCTION_6_1();
  outlined assign with take of Participant?((uint64_t)v5, v3, &demangling cache variable for type metadata for CallControlsService??);
  return swift_endAccess();
}

uint64_t ConversationControlsManager.callControlsService.setter(uint64_t a1)
{
  outlined init with take of ConversationControlsRecipe?(a1, (uint64_t)v4, &demangling cache variable for type metadata for CallControlsService?);
  uint64_t v2 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___callControlsService;
  OUTLINED_FUNCTION_6_1();
  outlined assign with take of Participant?((uint64_t)v4, v2, &demangling cache variable for type metadata for CallControlsService??);
  return swift_endAccess();
}

uint64_t key path getter for ConversationControlsManager.systemBannerPresenter : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x3E8))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ConversationControlsManager.systemBannerPresenter : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x3F0);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ConversationControlsManager.systemBannerPresenter.getter()
{
  return ConversationControlsManager.systemBannerPresenter.getter();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_5_4();
  return MEMORY[0x1C8776240](v0);
}

uint64_t ConversationControlsManager.systemBannerPresenter.setter()
{
  return ConversationControlsManager.systemBannerPresenter.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_15();
  uint64_t v3 = v1 + *v2;
  OUTLINED_FUNCTION_11_0();
  *(void *)(v3 + 8) = v0;
  OUTLINED_FUNCTION_41_0();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*ConversationControlsManager.systemBannerPresenter.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  uint64_t v2 = OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemBannerPresenter;
  *(void *)(v2 + 40) = v0;
  *(void *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_9_2();
  uint64_t v4 = MEMORY[0x1C8776240](v0);
  OUTLINED_FUNCTION_237(v4);
  return ConversationControlsManager.systemBannerPresenter.modify;
}

uint64_t key path getter for ConversationControlsManager.systemConversationControlsDelegate : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x400))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ConversationControlsManager.systemConversationControlsDelegate : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x408);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ConversationControlsManager.systemConversationControlsDelegate.getter()
{
  return ConversationControlsManager.systemBannerPresenter.getter();
}

uint64_t ConversationControlsManager.systemConversationControlsDelegate.setter()
{
  return ConversationControlsManager.systemBannerPresenter.setter();
}

uint64_t (*ConversationControlsManager.systemConversationControlsDelegate.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  uint64_t v2 = OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemConversationControlsDelegate;
  *(void *)(v2 + 40) = v0;
  *(void *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_9_2();
  uint64_t v4 = MEMORY[0x1C8776240](v0);
  OUTLINED_FUNCTION_237(v4);
  return ConversationControlsManager.systemBannerPresenter.modify;
}

uint64_t key path getter for ConversationControlsManager.systemAudioConversationControlsDelegate : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x418))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ConversationControlsManager.systemAudioConversationControlsDelegate : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x420);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ConversationControlsManager.systemAudioConversationControlsDelegate.getter()
{
  return ConversationControlsManager.systemBannerPresenter.getter();
}

uint64_t ConversationControlsManager.systemAudioConversationControlsDelegate.setter()
{
  return ConversationControlsManager.systemBannerPresenter.setter();
}

uint64_t (*ConversationControlsManager.systemAudioConversationControlsDelegate.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  uint64_t v2 = OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemAudioConversationControlsDelegate;
  *(void *)(v2 + 40) = v0;
  *(void *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_9_2();
  uint64_t v4 = MEMORY[0x1C8776240](v0);
  OUTLINED_FUNCTION_237(v4);
  return ConversationControlsManager.systemBannerPresenter.modify;
}

uint64_t key path getter for ConversationControlsManager.inCallConversationControlsDelegate : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x430))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ConversationControlsManager.inCallConversationControlsDelegate : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x438);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ConversationControlsManager.inCallConversationControlsDelegate.didset()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallConversationControlsDelegate;
  swift_beginAccess();
  if (!MEMORY[0x1C8776240](v1)) {
    return ConversationControlsManager.isOnScreenSubscription.setter(0);
  }
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 56))(ObjectType, v2);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, (uint64_t *)&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  uint64_t v4 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  ConversationControlsManager.isOnScreenSubscription.setter(v4);
  return swift_unknownObjectRelease();
}

void closure #1 in ConversationControlsManager.inCallConversationControlsDelegate.didset(char *a1, uint64_t a2)
{
  char v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = (char *)MEMORY[0x1C8776240](v3);
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = (char *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v4) + 0x290))();
    if (v6)
    {
      id v7 = v6;
      if ((v2 & 1) == 0 && objc_msgSend(v6, sel_letMeInRequestState) == (id)2)
      {
        id v8 = *(id *)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController];
        ConversationController.cancelJoinCountdown()();
      }
      id v5 = v7;
    }
  }
}

uint64_t ConversationControlsManager.inCallConversationControlsDelegate.getter()
{
  return ConversationControlsManager.systemBannerPresenter.getter();
}

uint64_t ConversationControlsManager.inCallConversationControlsDelegate.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t v2 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallConversationControlsDelegate;
  OUTLINED_FUNCTION_14_42();
  *(void *)(v2 + 8) = v0;
  OUTLINED_FUNCTION_39();
  swift_unknownObjectWeakAssign();
  ConversationControlsManager.inCallConversationControlsDelegate.didset();
  return swift_unknownObjectRelease();
}

void (*ConversationControlsManager.inCallConversationControlsDelegate.modify())(void **a1, char a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  uint64_t v2 = OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallConversationControlsDelegate;
  *(void *)(v2 + 40) = v0;
  *(void *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_9_2();
  uint64_t v4 = MEMORY[0x1C8776240](v0);
  OUTLINED_FUNCTION_237(v4);
  return ConversationControlsManager.inCallConversationControlsDelegate.modify;
}

void ConversationControlsManager.inCallConversationControlsDelegate.modify(void **a1, char a2)
{
  uint64_t v3 = *a1;
  OUTLINED_FUNCTION_378();
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
    ConversationControlsManager.inCallConversationControlsDelegate.didset();
  }
  free(v3);
}

uint64_t key path getter for ConversationControlsManager.inCallDetailsViewControllerDelegate : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x448))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ConversationControlsManager.inCallDetailsViewControllerDelegate : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x450);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ConversationControlsManager.inCallDetailsViewControllerDelegate.getter()
{
  return ConversationControlsManager.systemBannerPresenter.getter();
}

uint64_t ConversationControlsManager.inCallDetailsViewControllerDelegate.setter()
{
  return ConversationControlsManager.systemBannerPresenter.setter();
}

uint64_t (*ConversationControlsManager.inCallDetailsViewControllerDelegate.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_47_1();
  uint64_t v2 = OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallDetailsViewControllerDelegate;
  *(void *)(v2 + 40) = v0;
  *(void *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_9_2();
  uint64_t v4 = MEMORY[0x1C8776240](v0);
  OUTLINED_FUNCTION_237(v4);
  return ConversationControlsManager.systemBannerPresenter.modify;
}

uint64_t key path getter for ConversationControlsManager.audioRoutingDelegate : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x460))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.audioRoutingDelegate : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x468);
  uint64_t v3 = swift_unknownObjectRetain();
  return v2(v3);
}

uint64_t ConversationControlsManager.audioRoutingDelegate.getter()
{
  return ConversationControlsManager.videoTileConversationController.getter();
}

uint64_t ConversationControlsManager.audioRoutingDelegate.setter()
{
  return ConversationControlsManager.audioRoutingDelegate.setter();
}

{
  OUTLINED_FUNCTION_11_0();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*ConversationControlsManager.audioRoutingDelegate.modify())()
{
  uint64_t v2 = malloc(0x30uLL);
  uint64_t v3 = OUTLINED_FUNCTION_56((uint64_t)v2);
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_audioRoutingDelegate;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v4;
  OUTLINED_FUNCTION_9_2();
  *(void *)(v1 + 24) = MEMORY[0x1C8776240](v0);
  return ConversationControlsManager.audioRoutingDelegate.modify;
}

uint64_t key path getter for ConversationControlsManager.localAudioTogglingDelegate : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x478))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.localAudioTogglingDelegate : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x480);
  uint64_t v3 = swift_unknownObjectRetain();
  return v2(v3);
}

uint64_t ConversationControlsManager.localAudioTogglingDelegate.getter()
{
  return ConversationControlsManager.videoTileConversationController.getter();
}

uint64_t ConversationControlsManager.localAudioTogglingDelegate.setter()
{
  return ConversationControlsManager.audioRoutingDelegate.setter();
}

uint64_t (*ConversationControlsManager.localAudioTogglingDelegate.modify())()
{
  uint64_t v2 = malloc(0x30uLL);
  uint64_t v3 = OUTLINED_FUNCTION_56((uint64_t)v2);
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_localAudioTogglingDelegate;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v4;
  OUTLINED_FUNCTION_9_2();
  *(void *)(v1 + 24) = MEMORY[0x1C8776240](v0);
  return ConversationControlsManager.audioRoutingDelegate.modify;
}

void ConversationControlsManager.audioRoutingDelegate.modify()
{
  OUTLINED_FUNCTION_171();
  swift_unknownObjectWeakAssign();
  if (v1)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v0);
}

uint64_t key path getter for ConversationControlsManager.handoffCompletedDelegate : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x490))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ConversationControlsManager.handoffCompletedDelegate : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x498);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ConversationControlsManager.handoffCompletedDelegate.getter()
{
  return ConversationControlsManager.systemBannerPresenter.getter();
}

uint64_t ConversationControlsManager.handoffCompletedDelegate.setter()
{
  return ConversationControlsManager.systemBannerPresenter.setter();
}

uint64_t (*ConversationControlsManager.handoffCompletedDelegate.modify())()
{
  char v1 = OUTLINED_FUNCTION_47_1();
  uint64_t v2 = OUTLINED_FUNCTION_56((uint64_t)v1);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_handoffCompletedDelegate;
  *(void *)(v2 + 40) = v0;
  *(void *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_9_2();
  uint64_t v4 = MEMORY[0x1C8776240](v0);
  OUTLINED_FUNCTION_237(v4);
  return ConversationControlsManager.systemBannerPresenter.modify;
}

void ConversationControlsManager.systemBannerPresenter.modify()
{
  OUTLINED_FUNCTION_171();
  OUTLINED_FUNCTION_378();
  swift_unknownObjectWeakAssign();
  if (v1)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v0);
}

uint64_t key path getter for ConversationControlsManager.conduitLagunaNoticeManager : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x4C0))();
  *a2 = result;
  return result;
}

void key path setter for ConversationControlsManager.conduitLagunaNoticeManager : ConversationControlsManager(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  ConversationControlsManager.conduitLagunaNoticeManager.setter(v1);
}

void *ConversationControlsManager.conduitLagunaNoticeManager.getter()
{
  OUTLINED_FUNCTION_5_4();
  id v1 = *v0;
  id v2 = v1;
  return v1;
}

void ConversationControlsManager.conduitLagunaNoticeManager.setter(void *a1)
{
}

uint64_t ConversationControlsManager.conversationDidChangePublisher.getter()
{
  return swift_retain();
}

uint64_t key path getter for ConversationControlsManager.shouldOpenMessages : ConversationControlsManager@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x4D8))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ConversationControlsManager.shouldOpenMessages : ConversationControlsManager()
{
  return ConversationControlsManager.shouldOpenMessages.setter();
}

uint64_t ConversationControlsManager.shouldOpenMessages.getter()
{
  return ConversationControlsManager.shouldOpenMessages.getter();
}

{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t ConversationControlsManager.shouldOpenMessages.setter()
{
  return ConversationControlsManager.shouldOpenMessages.setter();
}

{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return static Published.subscript.setter();
}

uint64_t key path getter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x4F0))();
}

uint64_t ConversationControlsManager.$shouldOpenMessages.getter()
{
  return ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__shouldOpenMessages, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void ConversationControlsManager.$shouldOpenMessages.setter()
{
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  void (*v4)(void);
  void (*v5)(void);

  OUTLINED_FUNCTION_14();
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(v2);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_2_1();
  v4();
  OUTLINED_FUNCTION_6_1();
  __swift_instantiateConcreteTypeFromMangledName(v1);
  Published.projectedValue.setter();
  swift_endAccess();
  OUTLINED_FUNCTION_336();
  v5();
  OUTLINED_FUNCTION_15_0();
}

uint64_t key path getter for ConversationControlsManager.shouldEnableStartingStagedActivity : ConversationControlsManager@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x508))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ConversationControlsManager.shouldEnableStartingStagedActivity : ConversationControlsManager()
{
  return ConversationControlsManager.shouldEnableStartingStagedActivity.setter();
}

uint64_t ConversationControlsManager.shouldEnableStartingStagedActivity.getter()
{
  return ConversationControlsManager.shouldOpenMessages.getter();
}

uint64_t ConversationControlsManager.shouldEnableStartingStagedActivity.setter()
{
  return ConversationControlsManager.shouldOpenMessages.setter();
}

uint64_t key path getter for ConversationControlsManager.$shouldEnableStartingStagedActivity : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x520))();
}

uint64_t key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_62();
  uint64_t v9 = OUTLINED_FUNCTION_39();
  v10(v9);
  return a6(v6);
}

uint64_t ConversationControlsManager.$shouldEnableStartingStagedActivity.getter()
{
  return ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__shouldEnableStartingStagedActivity, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void ConversationControlsManager.$shouldEnableStartingStagedActivity.setter()
{
}

uint64_t key path getter for ConversationControlsManager.activityManager : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x538))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.activityManager : ConversationControlsManager(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x540))(*a1);
}

id ConversationControlsManager.activityManager.getter()
{
  OUTLINED_FUNCTION_5_4();
  id v1 = *v0;
  return v1;
}

void ConversationControlsManager.activityManager.setter(void *a1)
{
}

uint64_t (*ConversationControlsManager.activityManager.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationControlsManager.bannerActivityManager : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x550))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.bannerActivityManager : ConversationControlsManager(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x558))(*a1);
}

id ConversationControlsManager.bannerActivityManager.getter()
{
  OUTLINED_FUNCTION_5_4();
  id v1 = *v0;
  return v1;
}

void ConversationControlsManager.bannerActivityManager.setter(void *a1)
{
}

uint64_t (*ConversationControlsManager.bannerActivityManager.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path getter for ConversationControlsManager.incomingScreenSharingRequestActivity : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x568))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.incomingScreenSharingRequestActivity : ConversationControlsManager(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x570);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t ConversationControlsManager.incomingScreenSharingRequestActivity.getter()
{
  return ConversationControlsManager.incomingScreenSharingRequestActivity.getter();
}

{
  OUTLINED_FUNCTION_5_4();
  return swift_retain();
}

uint64_t ConversationControlsManager.incomingScreenSharingRequestActivity.setter(uint64_t a1)
{
  return ConversationControlsManager.incomingScreenSharingRequestActivity.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_incomingScreenSharingRequestActivity);
}

uint64_t (*ConversationControlsManager.incomingScreenSharingRequestActivity.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationControlsManager.audioRoute : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x580))();
  *a2 = result;
  return result;
}

void key path setter for ConversationControlsManager.audioRoute : ConversationControlsManager(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  ConversationControlsManager.audioRoute.setter(v1);
}

void ConversationControlsManager.audioRoute.didset(void *a1)
{
  uint64_t v3 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v4 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x580);
  id v5 = (void *)v4();
  if (!v5) {
    return;
  }
  if (a1)
  {
    id v44 = v5;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TURoute);
    id v43 = a1;
    if ((static NSObject.== infix(_:_:)() & 1) == 0)
    {
      (*(void (**)(void))((*v3 & *v1) + 0x270))();
      uint64_t v7 = v6;
      uint64_t ObjectType = swift_getObjectType();
      LOBYTE(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(ObjectType, v7);
      swift_unknownObjectRelease();
      if (v7)
      {
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v9 = type metadata accessor for Logger();
        __swift_project_value_buffer(v9, (uint64_t)static Logger.conversationControls);
        uint64_t v10 = v1;
        uint64_t v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = (uint8_t *)swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          v47[0] = v42;
          *(_DWORD *)uint64_t v13 = 136315138;
          uint64_t v14 = v4();
          if (v14)
          {
            *(void *)&v45[0] = v14;
            uint64_t v15 = String.init<A>(reflecting:)();
            unint64_t v17 = v16;
          }
          else
          {
            unint64_t v17 = 0xE300000000000000;
            uint64_t v15 = 7104878;
          }
          *(void *)&v45[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v17, v47);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          uint64_t v18 = v10;

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v11, v12, "audioRoute: %s", v13, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v42, -1, -1);
          MEMORY[0x1C87760E0](v13, -1, -1);
        }
        else
        {

          uint64_t v18 = v10;
        }
        if ((*(uint64_t (**)(void))((*v3 & *v18) + 0x868))())
        {
          uint64_t v19 = Logger.logObject.getter();
          os_log_type_t v20 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v19, v20))
          {
            os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v21 = 0;
            _os_log_impl(&dword_1C2F90000, v19, v20, "Not posting alert for the local audio route state changing since we're showing the AVLess downgrade confirmation dialog", v21, 2u);
            MEMORY[0x1C87760E0](v21, -1, -1);
          }
        }
        else
        {
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
          uint64_t v22 = (void *)*MEMORY[0x1E4FB2908];
          v47[0] = 0xD000000000000013;
          v47[1] = 0x80000001C379E1D0;
          v47[2] = 1;
          v47[3] = (uint64_t)v22;
          __int16 v48 = 0;
          uint64_t v49 = 4;
          char v50 = 0;
          uint64_t v51 = 0;
          id v23 = v22;
          id v24 = static UIImage.symbolImage(for:)((uint64_t)v47);

          swift_bridgeObjectRelease();
          if (v24)
          {
            id v25 = objc_msgSend(self, sel_labelColor);
            id v26 = objc_msgSend(v24, sel_imageWithTintColor_, v25);
          }
          else
          {
            id v26 = 0;
          }
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
          id v27 = objc_msgSend(self, sel_conversationKit);
          v53._object = (void *)0xE000000000000000;
          v28._countAndFlagsBits = 0x6F69647541;
          v28._object = (void *)0xE500000000000000;
          v29.value._countAndFlagsBits = 0x61737265766E6F43;
          v29.value._object = (void *)0xEF74694B6E6F6974;
          v30._countAndFlagsBits = 0;
          v30._object = (void *)0xE000000000000000;
          v53._countAndFlagsBits = 0;
          Swift::String v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v53);

          memset(v45, 0, sizeof(v45));
          char v46 = 1;
          id v32 = static NSAttributedString.localizedString(_:prefixImage:imageBounds:)(v31._countAndFlagsBits, (uint64_t)v31._object, v26, (uint64_t)v45);
          swift_bridgeObjectRelease();
          id v33 = objc_msgSend(v44, sel_name);
          uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v36 = v35;

          v37._countAndFlagsBits = v34;
          v37._object = v36;
          Class isa = NSMutableAttributedString.__allocating_init(string:)(v37).super.super.isa;
          uint64_t v39 = *(void (**)(id, Class, uint64_t))((*v3 & *v18) + 0x7F8);
          id v40 = v32;
          uint64_t v41 = isa;
          v39(v32, isa, 1);
        }
        return;
      }
    }

    id v5 = v43;
  }
}

uint64_t ConversationControlsManager.audioRoute.getter()
{
  return ConversationControlsManager.audioRoute.getter();
}

{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void ConversationControlsManager.audioRoute.setter(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_283();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = a1;
  id v4 = v1;
  static Published.subscript.setter();
  ConversationControlsManager.audioRoute.didset(v5);

  OUTLINED_FUNCTION_12_2();
}

uint64_t key path getter for ConversationControlsManager.$audioRoute : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x598))();
}

uint64_t ConversationControlsManager.$audioRoute.getter()
{
  return ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__audioRoute, &demangling cache variable for type metadata for Published<TURoute?>);
}

void ConversationControlsManager.$audioRoute.setter()
{
}

uint64_t key path getter for ConversationControlsManager.bluetoothAudioFormat : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x5B0))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void key path setter for ConversationControlsManager.bluetoothAudioFormat : ConversationControlsManager()
{
}

void ConversationControlsManager.bluetoothAudioFormat.didset(uint64_t a1, char a2)
{
  id v5 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v6 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x5B0);
  uint64_t v7 = v6();
  if ((v8 & 1) == 0 && a2 & 1 | (v7 != a1) && v7 == 1)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)static Logger.conversationControls);
    uint64_t v10 = v2;
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v36 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      v6();
      if (v15)
      {
        unint64_t v18 = 0xE300000000000000;
        uint64_t v16 = 7104878;
      }
      else
      {
        type metadata accessor for TUCallBluetoothAudioFormat(0);
        uint64_t v16 = String.init<A>(reflecting:)();
        unint64_t v18 = v17;
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v11, v12, "bluetoothAudioFormat: %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v14, -1, -1);
      MEMORY[0x1C87760E0](v13, -1, -1);
    }
    else
    {
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    id v19 = objc_msgSend(self, sel_conversationKit);
    v37._object = (void *)0xE000000000000000;
    v20._countAndFlagsBits = 0x494D5F4B41455053;
    v20._object = (void *)0xEC00000040255F43;
    v21.value._countAndFlagsBits = 0x61737265766E6F43;
    v21.value._object = (void *)0xEF74694B6E6F6974;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v37._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v37);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1C3769620;
    id v24 = objc_msgSend(self, sel_currentDevice);
    id v25 = objc_msgSend(v24, sel_model);

    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;

    *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v23 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v23 + 32) = v26;
    *(void *)(v23 + 40) = v28;
    uint64_t v29 = String.init(format:_:)();
    Swift::String v31 = v30;
    swift_bridgeObjectRelease();
    v32._countAndFlagsBits = v29;
    v32._object = v31;
    Class isa = NSMutableAttributedString.__allocating_init(string:)(v32).super.super.isa;
    uint64_t v34 = *(void (**)(Class, void, uint64_t))((*v5 & *v10) + 0x7F8);
    uint64_t v35 = isa;
    v34(isa, 0, 1);
  }
}

uint64_t ConversationControlsManager.bluetoothAudioFormat.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_160();
  swift_release();
  swift_release();
  return v1;
}

void ConversationControlsManager.bluetoothAudioFormat.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  static Published.subscript.setter();
  ConversationControlsManager.bluetoothAudioFormat.didset(v2, v3);
}

uint64_t key path getter for ConversationControlsManager.$bluetoothAudioFormat : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x5C8))();
}

uint64_t ConversationControlsManager.$bluetoothAudioFormat.getter()
{
  return ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__bluetoothAudioFormat, &demangling cache variable for type metadata for Published<TUCallBluetoothAudioFormat?>);
}

void ConversationControlsManager.$bluetoothAudioFormat.setter()
{
}

uint64_t key path getter for ConversationControlsManager.localAudioEnabled : ConversationControlsManager@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x5E0))();
  *a2 = result & 1;
  return result;
}

void key path setter for ConversationControlsManager.localAudioEnabled : ConversationControlsManager()
{
}

void ConversationControlsManager.localAudioEnabled.didset(char a1)
{
  uint64_t v2 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E0);
  if ((((uint64_t (*)(void))v2)() & 1) != (a1 & 1))
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationControls);
    uint64_t v10 = v1;
    char v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v11 = v7;
      *(_DWORD *)uint64_t v6 = 136315138;
      v2();
      uint64_t v8 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v4, v5, "localAudioEnabled: %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v7, -1, -1);
      MEMORY[0x1C87760E0](v6, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t ConversationControlsManager.localAudioEnabled.getter()
{
  return ConversationControlsManager.shouldOpenMessages.getter();
}

void ConversationControlsManager.localAudioEnabled.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_283();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  static Published.subscript.setter();
  ConversationControlsManager.localAudioEnabled.didset(v2);
  OUTLINED_FUNCTION_12_2();
}

uint64_t key path getter for ConversationControlsManager.$localAudioEnabled : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x5F8))();
}

uint64_t ConversationControlsManager.$localAudioEnabled.getter()
{
  return ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__localAudioEnabled, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void ConversationControlsManager.$localAudioEnabled.setter()
{
}

uint64_t key path getter for ConversationControlsManager.localVideoButtonState : ConversationControlsManager@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x610))();
  *a2 = result & 1;
  a2[1] = BYTE1(result) & 1;
  return result;
}

void key path setter for ConversationControlsManager.localVideoButtonState : ConversationControlsManager()
{
}

void ConversationControlsManager.localVideoButtonState.didset(unsigned int a1)
{
  char v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x610);
  if (((a1 >> 8) & 1) != (((unsigned int (*)(void))v3)() & 0x100) >> 8)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)static Logger.conversationControls);
    os_log_type_t v5 = v1;
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v17 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      v3();
      uint64_t v10 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v6, v7, "localVideoButtonState: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v9, -1, -1);
      os_log_type_t v12 = v8;
      char v2 = (void *)MEMORY[0x1E4FBC8C8];
      MEMORY[0x1C87760E0](v12, -1, -1);
    }
    else
    {
    }
    if (((*(uint64_t (**)(void))((*v2 & *v5) + 0x320))() & 1) != 0
      || ((*(uint64_t (**)(void))((*v2 & *v5) + 0x868))() & 1) != 0)
    {
      uint64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v13, v14))
      {
        char v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v15 = 0;
        _os_log_impl(&dword_1C2F90000, v13, v14, "Not posting alert for the local video state changing since we're in an AVLess conversation", v15, 2u);
        MEMORY[0x1C87760E0](v15, -1, -1);
      }
    }
    else
    {
      id v16 = ConversationControlsManager.localVideoStateChangedAlert.getter();
      (*(void (**)(id))((*v2 & *v5) + 0x7F8))(v16);
    }
  }
}

id ConversationControlsManager.localVideoStateChangedAlert.getter()
{
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x610))() & 0x100) != 0) {
    return ConversationControlsManager.videoCameraOnOrOffAlert.getter();
  }
  ConversationController.cameraStartPolicy.getter();
  if (v1) {
    return ConversationControlsManager.videoCameraOnOrOffAlert.getter();
  }
  else {
    return ConversationControlsManager.videoCameraOffForScreenSharingAlert.getter();
  }
}

uint64_t ConversationControlsManager.localVideoButtonState.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_160();
  swift_release();
  swift_release();
  if (v3) {
    int v0 = 256;
  }
  else {
    int v0 = 0;
  }
  return v0 | v2;
}

void ConversationControlsManager.localVideoButtonState.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_283();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  OUTLINED_FUNCTION_207();
  if (v4) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  ConversationControlsManager.localVideoButtonState.didset(v2 | v3);
}

uint64_t key path getter for ConversationControlsManager.$localVideoButtonState : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x628))();
}

uint64_t ConversationControlsManager.$localVideoButtonState.getter()
{
  return ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__localVideoButtonState, &demangling cache variable for type metadata for Published<ControlsActionState>);
}

void ConversationControlsManager.$localVideoButtonState.setter()
{
}

void *one-time initialization function for screenSharingControlStateManager()
{
  type metadata accessor for ScreenSharingControlStateManager();
  swift_allocObject();
  uint64_t result = (void *)ScreenSharingControlStateManager.init()();
  static ConversationControlsManager.screenSharingControlStateManager = result;
  return result;
}

uint64_t key path getter for ConversationControlsManager.shareMenuButtonState : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x640))();
  *(unsigned char *)a2 = result & 1;
  *(unsigned char *)(a2 + 1) = BYTE1(result) & 1;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(unsigned char *)(a2 + 17) = v6 & 1;
  return result;
}

uint64_t key path setter for ConversationControlsManager.shareMenuButtonState : ConversationControlsManager(unsigned __int8 *a1, void **a2)
{
  uint64_t v2 = *((void *)a1 + 1);
  unsigned int v3 = a1[16];
  int v4 = a1[17];
  if (a1[1]) {
    int v5 = 256;
  }
  else {
    int v5 = 0;
  }
  uint64_t v6 = v5 | *a1;
  if (v4) {
    int v7 = 256;
  }
  else {
    int v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x648))(v6, v2, v7 | v3);
}

uint64_t ConversationControlsManager.shareMenuButtonState.getter()
{
  if (one-time initialization token for screenSharingControlStateManager != -1) {
    swift_once();
  }
  swift_retain();
  CurrentValueSubject.value.getter();
  swift_release();
  if (v3) {
    int v0 = 256;
  }
  else {
    int v0 = 0;
  }
  return v0 | v2;
}

uint64_t ConversationControlsManager.shareMenuButtonState.setter()
{
  if (one-time initialization token for screenSharingControlStateManager != -1) {
    swift_once();
  }
  swift_retain();
  CurrentValueSubject.send(_:)();
  return swift_release();
}

uint64_t (*ConversationControlsManager.shareMenuButtonState.modify(uint64_t a1))()
{
  OUTLINED_FUNCTION_8_7(a1);
  __int16 v2 = ConversationControlsManager.shareMenuButtonState.getter();
  *(unsigned char *)uint64_t v1 = v2 & 1;
  *(unsigned char *)(v1 + 1) = HIBYTE(v2) & 1;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4 & 1;
  *(unsigned char *)(v1 + 17) = v5 & 1;
  return ConversationControlsManager.shareMenuButtonState.modify;
}

uint64_t ConversationControlsManager.shareMenuButtonState.modify()
{
  return ConversationControlsManager.shareMenuButtonState.setter();
}

uint64_t key path getter for ConversationControlsManager.screenSharingAvailable : ConversationControlsManager@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x658))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ConversationControlsManager.screenSharingAvailable : ConversationControlsManager(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x660))(*a1);
}

uint64_t ConversationControlsManager.screenSharingAvailable.getter()
{
  if (one-time initialization token for screenSharingControlStateManager != -1) {
    swift_once();
  }
  swift_retain();
  CurrentValueSubject.value.getter();
  swift_release();
  return v1;
}

uint64_t ConversationControlsManager.screenSharingAvailable.setter()
{
  if (one-time initialization token for screenSharingControlStateManager != -1) {
    swift_once();
  }
  swift_retain();
  CurrentValueSubject.send(_:)();
  return swift_release();
}

uint64_t (*ConversationControlsManager.screenSharingAvailable.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = ConversationControlsManager.screenSharingAvailable.getter() & 1;
  return ConversationControlsManager.screenSharingAvailable.modify;
}

uint64_t ConversationControlsManager.screenSharingAvailable.modify()
{
  return ConversationControlsManager.screenSharingAvailable.setter();
}

uint64_t ConversationControlsManager.shareMenuButtonStatePublisher.getter()
{
  if (one-time initialization token for screenSharingControlStateManager != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<ShareMenuActionState, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type CurrentValueSubject<ShareMenuActionState, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<ShareMenuActionState, Never>);
  return OUTLINED_FUNCTION_280();
}

uint64_t ConversationControlsManager.screenSharingAvailablePublisher.getter()
{
  if (one-time initialization token for screenSharingControlStateManager != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  return OUTLINED_FUNCTION_280();
}

BOOL static ConversationControlsManager.PushToTalkChannelState.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void ConversationControlsManager.PushToTalkChannelState.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int ConversationControlsManager.PushToTalkChannelState.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ConversationControlsManager.PushToTalkChannelState(char *a1, char *a2)
{
  return static ConversationControlsManager.PushToTalkChannelState.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ConversationControlsManager.PushToTalkChannelState()
{
  return ConversationControlsManager.PushToTalkChannelState.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ConversationControlsManager.PushToTalkChannelState(uint64_t a1)
{
  ConversationControlsManager.PushToTalkChannelState.hash(into:)(a1, *v1);
}

uint64_t key path getter for ConversationControlsManager.pttChannelState : ConversationControlsManager@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x698))();
  *a2 = result;
  return result;
}

void key path setter for ConversationControlsManager.pttChannelState : ConversationControlsManager()
{
}

void ConversationControlsManager.pttChannelState.didset()
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.conversationControls);
  uint64_t v8 = v0;
  __int16 v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    uint64_t v9 = v5;
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v8) + 0x698))();
    uint64_t v6 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v2, v3, "pttChannelState: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v5, -1, -1);
    MEMORY[0x1C87760E0](v4, -1, -1);
  }
  else
  {
  }
}

uint64_t ConversationControlsManager.pttChannelState.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_160();
  swift_release();
  swift_release();
  return v1;
}

void ConversationControlsManager.pttChannelState.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  OUTLINED_FUNCTION_207();
  ConversationControlsManager.pttChannelState.didset();
}

uint64_t key path getter for ConversationControlsManager.$pttChannelState : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x6B0))();
}

uint64_t ConversationControlsManager.$pttChannelState.getter()
{
  return ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__pttChannelState, (uint64_t *)&demangling cache variable for type metadata for Published<ConversationControlsManager.PushToTalkChannelState>);
}

void ConversationControlsManager.$pttChannelState.setter()
{
}

uint64_t key path getter for ConversationControlsManager.pttChannelTransmissionMode : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x6C8))();
  *a2 = result;
  return result;
}

void key path setter for ConversationControlsManager.pttChannelTransmissionMode : ConversationControlsManager()
{
}

void ConversationControlsManager.pttChannelTransmissionMode.didset()
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.conversationControls);
  uint64_t v8 = v0;
  __int16 v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    uint64_t v9 = v5;
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v8) + 0x6C8))();
    type metadata accessor for TUCallTransmissionMode(0);
    uint64_t v6 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v2, v3, "pttChannelTransmissionMode: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v5, -1, -1);
    MEMORY[0x1C87760E0](v4, -1, -1);
  }
  else
  {
  }
}

uint64_t ConversationControlsManager.pttChannelTransmissionMode.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_160();
  swift_release();
  swift_release();
  return v1;
}

void ConversationControlsManager.pttChannelTransmissionMode.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  OUTLINED_FUNCTION_207();
  ConversationControlsManager.pttChannelTransmissionMode.didset();
}

uint64_t key path getter for ConversationControlsManager.$pttChannelTransmissionMode : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x6E0))();
}

uint64_t ConversationControlsManager.$pttChannelTransmissionMode.getter()
{
  return ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__pttChannelTransmissionMode, (uint64_t *)&demangling cache variable for type metadata for Published<TUCallTransmissionMode>);
}

void ConversationControlsManager.$pttChannelTransmissionMode.setter()
{
}

uint64_t key path getter for ConversationControlsManager.pttViewModel : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x6F8))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.pttViewModel : ConversationControlsManager()
{
  uint64_t v0 = swift_retain();
  return ConversationControlsManager.pttViewModel.setter(v0);
}

uint64_t ConversationControlsManager.pttViewModel.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttViewModel;
  if (*(void *)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttViewModel])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttViewModel];
  }
  else
  {
    os_log_type_t v3 = v0;
    type metadata accessor for PushToTalkViewModel();
    swift_allocObject();
    uint64_t v2 = PushToTalkViewModel.init(conversationControlsManager:)(v0);
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t ConversationControlsManager.pttViewModel.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_26_1(a1);
}

uint64_t ConversationControlsManager.pttCallUpdateSubject.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttCallUpdateSubject;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttCallUpdateSubject))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttCallUpdateSubject);
  }
  else
  {
    uint64_t v3 = v0;
    OUTLINED_FUNCTION_0_20();
    (*(void (**)(void))(v4 + 624))();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Call, Never>);
    swift_allocObject();
    uint64_t v2 = CurrentValueSubject.init(_:)();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t ConversationControlsManager.pttCallStatusUpdateCancellable.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_26_1(a1);
}

uint64_t ConversationControlsManager.confirmLeavePTTChannelAlert.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_26_1(a1);
}

BOOL ConversationControlsManager.isConfirmLeavePTTChannelAlertPresented.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_confirmLeavePTTChannelAlert) != 0;
}

uint64_t key path getter for ConversationControlsManager.foregroundApp : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x778))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.foregroundApp : ConversationControlsManager(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x780);
  id v4 = *a1;
  return v3(v2);
}

void ConversationControlsManager.foregroundApp.didset()
{
  uint64_t v84 = (int *)type metadata accessor for AppLaunchNotice(0);
  MEMORY[0x1F4188790](v84);
  uint64_t v85 = (uint64_t)&v81 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationControls);
  id v4 = v0;
  uint64_t v83 = v3;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)MEMORY[0x1E4FBC8C8];
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v82 = swift_slowAlloc();
    v88[0] = v82;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = *(uint64_t (**)(void))((*v8 & *v4) + 0x778);
    uint64_t v11 = v10();
    if (v11)
    {
      os_log_type_t v12 = (void *)v11;
      uint64_t v14 = *(void *)(v11 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier);
      uint64_t v13 = *(void *)(v11 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v13 = 0;
    }
    uint64_t v86 = v14;
    uint64_t v87 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    uint64_t v15 = String.init<A>(describing:)();
    uint64_t v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v17 = swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    unint64_t v18 = (unsigned char *)((uint64_t (*)(uint64_t))v10)(v17);
    if (v18)
    {
      char v19 = v18[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_type];

      LOBYTE(v86) = v19;
      uint64_t v20 = String.init<A>(reflecting:)();
      unint64_t v22 = v21;
    }
    else
    {
      unint64_t v22 = 0xE300000000000000;
      uint64_t v20 = 7104878;
    }
    uint64_t v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v5, v6, "Foregrounded app:%s, type:%s", (uint8_t *)v9, 0x16u);
    uint64_t v23 = v82;
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v23, -1, -1);
    MEMORY[0x1C87760E0](v9, -1, -1);

    uint64_t v8 = (void *)MEMORY[0x1E4FBC8C8];
  }
  else
  {
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  id v24 = (void *)static SharePlayDiscoverabilityAppsController.shared;
  id v25 = *(uint64_t (**)(void))((*v8 & *v4) + 0x778);
  uint64_t v26 = v25();
  uint64_t v27 = (*(uint64_t (**)(uint64_t))((*v8 & *v24) + 0xA0))(v26);
  uint64_t v28 = (*(uint64_t (**)(uint64_t))((*v8 & *v4) + 0x9F0))(v27);
  uint64_t v29 = (void *)(*(uint64_t (**)(uint64_t))((*v8 & *v4) + 0x290))(v28);
  if (v29)
  {
    Swift::String v30 = v29;
    if (!objc_msgSend(v29, sel_isBackedByGroupSession)) {
      goto LABEL_40;
    }
    Swift::String v31 = (char *)v25();
    if (!v31) {
      goto LABEL_40;
    }
    Swift::String v32 = v31;
    if (((*(uint64_t (**)(void))((*v8 & *(void *)v31) + 0x80))() & 1) == 0)
    {

LABEL_40:
      return;
    }
    id v33 = (void *)(*(uint64_t (**)(void))((*v8 & *v4) + 0x8D0))();
    if (!v33) {
      goto LABEL_28;
    }
    uint64_t v34 = v33;
    if (objc_msgSend(v33, sel_state) == (id)1 || !objc_msgSend(v34, sel_state))
    {
      uint64_t v35 = outlined bridged method (ob) of @objc TUConversationActivity.bundleIdentifier.getter(objc_msgSend(v34, sel_activity));
      if (v36)
      {
        Swift::String v37 = (uint64_t *)&v32[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier];
        if (v35 == *(void *)&v32[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier]
          && v36 == *(void *)&v32[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8])
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v39 & 1) == 0) {
            goto LABEL_27;
          }
        }
        unint64_t v70 = v32;
        id v71 = v34;
        char v60 = v70;
        uint64_t v59 = (char *)v71;
        uint64_t v61 = Logger.logObject.getter();
        os_log_type_t v72 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v61, v72))
        {
          uint64_t v73 = swift_slowAlloc();
          uint64_t v74 = swift_slowAlloc();
          v88[0] = v74;
          *(_DWORD *)uint64_t v73 = 136315394;
          uint64_t v75 = v37;
          uint64_t v76 = *v37;
          unint64_t v77 = v75[1];
          swift_bridgeObjectRetain();
          uint64_t v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v77, v88);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v73 + 12) = 2080;
          uint64_t v86 = outlined bridged method (ob) of @objc TUConversationActivity.bundleIdentifier.getter(objc_msgSend(v59, sel_activity));
          uint64_t v87 = v78;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
          uint64_t v79 = String.init<A>(describing:)();
          uint64_t v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v80, v88);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v61, v72, "Foreground app bundleIdentifier (%s) is same as currentActivity (%s)", (uint8_t *)v73, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v74, -1, -1);
          MEMORY[0x1C87760E0](v73, -1, -1);

          goto LABEL_48;
        }
        goto LABEL_49;
      }
    }
LABEL_27:

LABEL_28:
    id v40 = (void *)(*(uint64_t (**)(void))((*v8 & *v4) + 0x8D8))();
    if (!v40)
    {
LABEL_36:
      uint64_t v47 = v32;
      id v48 = v30;
      uint64_t v49 = v85;
      UUID.init()();
      char v50 = v84;
      Date.init()();
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      double v51 = (*(double (**)(void))(*(void *)static Defaults.shared + 976))();
      *(unsigned char *)(v49 + v50[6]) = 5;
      *(void *)(v49 + v50[7]) = v47;
      *(void *)(v49 + v50[8]) = v48;
      *(unsigned char *)(v49 + v50[9]) = 0;
      *(double *)(v49 + v50[10]) = v51;
      *(unsigned char *)(v49 + v50[11]) = 1;
      *(unsigned char *)(v49 + v50[12]) = 1;
      uint64_t v52 = (void *)(v49 + v50[13]);
      void *v52 = 0;
      v52[1] = 0;
      Swift::String v53 = (void *)(v49 + v50[14]);
      *Swift::String v53 = 0;
      v53[1] = 0;
      *(unsigned char *)(v49 + v50[15]) = 0;
      id v54 = (void *)(v49 + v50[16]);
      *id v54 = 0;
      v54[1] = 0;
      specialized ConversationControlsManager.post(notice:)(v49, (uint64_t)v4, (uint64_t)type metadata accessor for AppLaunchNotice, (uint64_t)&protocol witness table for AppLaunchNotice, (uint64_t)type metadata accessor for AppLaunchNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v55, v56, v81, v82, v83, (uint64_t)v84, v85, v86, v87, v88[0], v88[1], v88[2], v88[3],
        v88[4],
        v88[5],
        v88[6]);

      _s15ConversationKit11ParticipantVWOhTm_4();
      return;
    }
    uint64_t v41 = v40;
    uint64_t v42 = outlined bridged method (ob) of @objc TUConversationActivity.bundleIdentifier.getter(objc_msgSend(v40, sel_activity));
    if (!v43)
    {
LABEL_35:

      goto LABEL_36;
    }
    id v44 = (uint64_t *)&v32[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier];
    if (v42 == *(void *)&v32[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier]
      && v43 == *(void *)&v32[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8])
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v46 & 1) == 0) {
        goto LABEL_35;
      }
    }
    uint64_t v57 = v32;
    id v58 = v41;
    uint64_t v59 = v57;
    char v60 = (char *)v58;
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      v88[0] = v64;
      *(_DWORD *)uint64_t v63 = 136315394;
      uint64_t v65 = *v44;
      unint64_t v66 = v44[1];
      swift_bridgeObjectRetain();
      uint64_t v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v66, v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 12) = 2080;
      uint64_t v86 = outlined bridged method (ob) of @objc TUConversationActivity.bundleIdentifier.getter(objc_msgSend(v60, sel_activity));
      uint64_t v87 = v67;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
      uint64_t v68 = String.init<A>(describing:)();
      uint64_t v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69, v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v61, v62, "Foreground app bundleIdentifier (%s) is same as stagedActivity (%s)", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v64, -1, -1);
      MEMORY[0x1C87760E0](v63, -1, -1);

LABEL_48:
      return;
    }
LABEL_49:

    goto LABEL_40;
  }
}

uint64_t ConversationControlsManager.foregroundApp.getter()
{
  return ConversationControlsManager.audioRoute.getter();
}

void ConversationControlsManager.foregroundApp.setter(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = a1;
  id v4 = v1;
  OUTLINED_FUNCTION_207();
  ConversationControlsManager.foregroundApp.didset();
}

void (*ConversationControlsManager.foregroundApp.modify(uint64_t *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = ConversationControlsManager.foregroundApp.getter();
  return ConversationControlsManager.foregroundApp.modify;
}

void ConversationControlsManager.foregroundApp.modify(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    ConversationControlsManager.foregroundApp.setter(v2);
  }
  else
  {
    ConversationControlsManager.foregroundApp.setter(*a1);
  }
}

uint64_t key path getter for ConversationControlsManager.$foregroundApp : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x790))();
}

uint64_t key path setter for ConversationControlsManager.$foregroundApp : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ForegroundApp?>.Publisher);
  MEMORY[0x1F4188790](v4);
  os_log_type_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x798))(v6);
}

uint64_t ConversationControlsManager.$foregroundApp.getter()
{
  return ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__foregroundApp, (uint64_t *)&demangling cache variable for type metadata for Published<ForegroundApp?>);
}

void ConversationControlsManager.$foregroundApp.setter()
{
}

void (*ConversationControlsManager.$foregroundApp.modify())()
{
  uint64_t v1 = malloc(0x40uLL);
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ForegroundApp?>.Publisher);
  v0[4] = v2;
  OUTLINED_FUNCTION_1(v2);
  v0[5] = v3;
  size_t v5 = *(void *)(v4 + 64);
  v0[6] = malloc(v5);
  v0[7] = malloc(v5);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<ForegroundApp?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ConversationControlsManager.$foregroundApp.modify;
}

void ConversationControlsManager.$foregroundApp.modify()
{
}

{
  uint64_t v0;
  void (*v1)(void *);
  void (*v2)(void *);
  void *v3;
  void *v4;
  char v5;
  void (*v6)(void);
  void (*v7)(void);
  void *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_14();
  uint64_t v2 = v1;
  uint64_t v3 = *(void **)(*(void *)v0 + 48);
  uint64_t v4 = *(void **)(*(void *)v0 + 56);
  if (v5)
  {
    OUTLINED_FUNCTION_24_2();
    OUTLINED_FUNCTION_2_1();
    v6();
    v2(v3);
    OUTLINED_FUNCTION_336();
    v7();
  }
  else
  {
    v1(*(void **)(*(void *)v0 + 56));
  }
  free(v4);
  free(v3);
  OUTLINED_FUNCTION_15_0();
  free(v8);
}

Swift::Void __swiftcall ConversationControlsManager.refreshShareableContentWithBundleIdentifier(_:)(Swift::String_optional a1)
{
  OUTLINED_FUNCTION_26_3();
  uint64_t v29 = v4;
  uint64_t v30 = v5;
  OUTLINED_FUNCTION_4_15();
  if (one-time initialization token for shareableContent != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.shareableContent);
  swift_bridgeObjectRetain_n();
  id v7 = v2;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = 7104878;
    uint64_t v11 = swift_slowAlloc();
    v28[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    if (v1)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = String.init<A>(reflecting:)();
      unint64_t v14 = v13;
    }
    else
    {
      unint64_t v14 = 0xE300000000000000;
      uint64_t v12 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    OUTLINED_FUNCTION_5_49();
    OUTLINED_FUNCTION_364();
    uint64_t v16 = v15();
    if (v16)
    {
      uint64_t v17 = (void *)v16;
      swift_bridgeObjectRetain();

      uint64_t v10 = String.init<A>(reflecting:)();
      unint64_t v19 = v18;
    }
    else
    {
      unint64_t v19 = 0xE300000000000000;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v19, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v8, v9, "refreshShareableContent (bundleIdentifier: %s, foregroundAppBundleIdentifier: %s)", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();

    if (!v1) {
      goto LABEL_22;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!v1) {
      goto LABEL_22;
    }
  }
  OUTLINED_FUNCTION_236();
  uint64_t v21 = (*(uint64_t (**)(void))(v20 + 1912))();
  if (v21)
  {
    unint64_t v22 = (void *)v21;
    uint64_t v24 = *(void *)(v21 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier);
    uint64_t v23 = *(void *)(v21 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8);
    swift_bridgeObjectRetain();

    if (v24 == v3 && v23 == v1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_30_15();
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        goto LABEL_22;
      }
    }
    OUTLINED_FUNCTION_236();
    (*(void (**)(void))(v27 + 2544))();
  }
LABEL_22:
  OUTLINED_FUNCTION_16();
}

Swift::Bool __swiftcall ConversationControlsManager.isAppUnsupportedOnSharePlayPlatform(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  id v3 = objc_msgSend(self, sel_sharedInstance);
  if (!v3)
  {
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_9:
    outlined destroy of SystemUpdateNotice?((uint64_t)&v11, &demangling cache variable for type metadata for Any?);
    goto LABEL_10;
  }
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_47();
  id v6 = outlined bridged method (mbnn) of @objc FTServerBag.object(forKey:)(0xD00000000000001ELL, v5, v4);

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  outlined init with take of ConversationControlsRecipe?((uint64_t)v10, (uint64_t)&v11, &demangling cache variable for type metadata for Any?);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  if (!swift_dynamicCast())
  {
LABEL_10:
    id v7 = &outlined read-only object #0 of ConversationControlsManager.isAppUnsupportedOnSharePlayPlatform(_:);
    goto LABEL_11;
  }
  id v7 = *(void **)&v10[0];
LABEL_11:
  char v8 = specialized Sequence<>.contains(_:)(countAndFlagsBits, (uint64_t)object, v7);
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void ConversationControlsManager.CollaborationPrompt.hash(into:)(uint64_t a1, Swift::UInt a2, __int16 a3)
{
  if ((a3 & 0x100) != 0)
  {
    Swift::UInt v5 = 0;
    goto LABEL_5;
  }
  char v4 = a3;
  Hasher._combine(_:)(1uLL);
  if ((v4 & 1) == 0)
  {
    Hasher._combine(_:)(1u);
    Swift::UInt v5 = a2;
LABEL_5:
    Hasher._combine(_:)(v5);
    return;
  }
  Hasher._combine(_:)(0);
}

uint64_t static ConversationControlsManager.CollaborationPrompt.== infix(_:_:)(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  if (a2 & 0x100 | a4 & 0x100) {
    return (unsigned __int16)(a2 & 0x100 & a4 & 0x100) >> 8;
  }
  if (a2)
  {
    if (a4) {
      return 1;
    }
  }
  else if ((a4 & 1) == 0 && a1 == a3)
  {
    return 1;
  }
  return 0;
}

Swift::Int ConversationControlsManager.CollaborationPrompt.hashValue.getter(Swift::UInt a1, __int16 a2)
{
  Hasher.init(_seed:)();
  ConversationControlsManager.CollaborationPrompt.hash(into:)((uint64_t)v5, a1, a2 & 0x1FF);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ConversationControlsManager.CollaborationPrompt()
{
  return ConversationControlsManager.CollaborationPrompt.hashValue.getter(*(void *)v0, *(unsigned __int8 *)(v0 + 8) | (unsigned __int16)(*(unsigned __int8 *)(v0 + 9) << 8));
}

void protocol witness for Hashable.hash(into:) in conformance ConversationControlsManager.CollaborationPrompt(uint64_t a1)
{
  ConversationControlsManager.CollaborationPrompt.hash(into:)(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8) | (*(unsigned __int8 *)(v1 + 9) << 8));
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ConversationControlsManager.CollaborationPrompt()
{
  Swift::UInt v1 = *(void *)v0;
  __int16 v2 = *(unsigned __int8 *)(v0 + 8);
  __int16 v3 = *(unsigned __int8 *)(v0 + 9);
  Hasher.init(_seed:)();
  ConversationControlsManager.CollaborationPrompt.hash(into:)((uint64_t)v5, v1, v2 | (v3 << 8));
  return Hasher._finalize()();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ConversationControlsManager.CollaborationPrompt(uint64_t a1, uint64_t a2)
{
  return static ConversationControlsManager.CollaborationPrompt.== infix(_:_:)(*(void *)a1, *(unsigned __int8 *)(a1 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 9) << 8), *(void *)a2, *(unsigned __int8 *)(a2 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a2 + 9) << 8));
}

void ConversationControlsManager.shouldPost(collaborationPrompt:forBundleIdentifier:)()
{
  OUTLINED_FUNCTION_31();
  __int16 v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Cache<String, [ConversationControlsManager.CollaborationPrompt]>);
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_2_1();
  v9();
  Cache.subscript.getter();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v5);
  if (v15) {
    uint64_t v10 = v15;
  }
  else {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  if (specialized Sequence<>.contains(_:)(v4, v2 & 0x1FF, v10))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v10 = v13;
    }
    unint64_t v11 = *(void *)(v10 + 16);
    if (v11 >= *(void *)(v10 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v10 = v14;
    }
    *(void *)(v10 + 16) = v11 + 1;
    uint64_t v12 = v10 + 16 * v11;
    *(void *)(v12 + 32) = v4;
    *(unsigned char *)(v12 + 40) = v2;
    *(unsigned char *)(v12 + 41) = HIBYTE(v2) & 1;
    swift_bridgeObjectRetain();
    specialized Sequence.suffix(_:)(100, v10);
    OUTLINED_FUNCTION_6_1();
    Cache.subscript.setter();
    swift_endAccess();
  }
  OUTLINED_FUNCTION_28();
}

void specialized Sequence.suffix(_:)(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (!a1) {
    goto LABEL_17;
  }
  uint64_t v31 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8) {
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  uint64_t v9 = 0;
  unint64_t v4 = -v8;
  uint64_t v10 = a2 + 41;
  while (2)
  {
    unint64_t v11 = (char *)(v10 + 16 * v9++);
    while (1)
    {
      if ((unint64_t)(v9 - 1) >= *(void *)(a2 + 16))
      {
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      uint64_t v3 = *(void *)(v11 - 9);
      uint64_t v5 = *(v11 - 1);
      char v12 = *v11;
      unint64_t v13 = *(void *)(v31 + 16);
      if ((uint64_t)v13 < a1) {
        break;
      }
      if (v2 >= v13) {
        goto LABEL_42;
      }
      uint64_t v14 = v31 + 32 + 16 * v2;
      *(void *)uint64_t v14 = v3;
      *(unsigned char *)(v14 + 8) = v5;
      *(unsigned char *)(v14 + 9) = v12;
      if (++v2 < a1) {
        goto LABEL_15;
      }
      uint64_t v2 = 0;
      ++v9;
      v11 += 16;
      if (v4 + v9 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    unint64_t v15 = v13 + 1;
    if (v13 >= *(void *)(v31 + 24) >> 1)
    {
      uint64_t v29 = v10;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v10 = v29;
      unint64_t v15 = v13 + 1;
    }
    *(void *)(v31 + 16) = v15;
    uint64_t v16 = v31 + 16 * v13;
    *(void *)(v16 + 32) = v3;
    *(unsigned char *)(v16 + 40) = v5;
    *(unsigned char *)(v16 + 41) = v12;
LABEL_15:
    if (v4 + v9) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  if (!v2)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = v31;
  unint64_t v4 = *(void *)(v31 + 16);
  uint64_t v30 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v3 = v4 - v2;
  if ((uint64_t)v4 < v2) {
    goto LABEL_44;
  }
  if (v2 < 0) {
    goto LABEL_45;
  }
  unint64_t v17 = *(void *)(v31 + 16);
  if (v17 < v2 || v17 < v4)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v19 = v30;
    uint64_t v20 = *(void *)(v30 + 16);
    uint64_t v21 = *(void *)(v30 + 24) >> 1;
    goto LABEL_29;
  }
  uint64_t v19 = v30;
  uint64_t v20 = *(void *)(v30 + 16);
  if (__OFADD__(v20, v3)) {
    goto LABEL_47;
  }
  uint64_t v21 = *(void *)(v30 + 24) >> 1;
  swift_retain();
  if (v21 < v20 + v3) {
    goto LABEL_48;
  }
LABEL_29:
  if (v4 == v2)
  {
    if (v3 <= 0) {
      goto LABEL_36;
    }
    __break(1u);
  }
  if (v21 - v20 < v3)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  specialized UnsafeMutablePointer.initialize(from:count:)(v5 + 32 + 16 * v2, v3);
  if (v3 < 1)
  {
LABEL_36:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(v19 + 16);
    if (__OFADD__(v25, v2))
    {
      __break(1u);
    }
    else
    {
      uint64_t v30 = v19;
      uint64_t v26 = *(void *)(v19 + 24) >> 1;
      swift_retain();
      if (v26 >= v25 + v2)
      {
LABEL_38:
        if (v26 - v25 < v2)
        {
          __break(1u);
        }
        else
        {
          specialized UnsafeMutablePointer.initialize(from:count:)(v5 + 32, v2);
          uint64_t v27 = *(void *)(v19 + 16);
          BOOL v23 = __OFADD__(v27, v2);
          uint64_t v28 = v27 + v2;
          if (!v23)
          {
            *(void *)(v19 + 16) = v28;
            swift_release_n();
            return;
          }
        }
        __break(1u);
        goto LABEL_53;
      }
    }
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v19 = v30;
    uint64_t v25 = *(void *)(v30 + 16);
    uint64_t v26 = *(void *)(v30 + 24) >> 1;
    goto LABEL_38;
  }
  uint64_t v22 = *(void *)(v19 + 16);
  BOOL v23 = __OFADD__(v22, v3);
  uint64_t v24 = v22 + v3;
  if (!v23)
  {
    *(void *)(v19 + 16) = v24;
    goto LABEL_36;
  }
LABEL_54:
  __break(1u);
}

void specialized Sequence.suffix(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for TranscriptionViewModel.Caption(0);
  uint64_t v6 = OUTLINED_FUNCTION_1(v5);
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_64();
  if (v4 < 0)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (!v4
    || (*(void *)(v2 + 16) >= v4 ? (uint64_t v9 = v4) : (uint64_t v9 = *(void *)(v2 + 16)),
        uint64_t v26 = MEMORY[0x1E4FBC860],
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v9, 0),
        (uint64_t v10 = *(void *)(v2 + 16)) == 0))
  {
LABEL_30:
    swift_bridgeObjectRelease();
LABEL_32:
    OUTLINED_FUNCTION_28();
    return;
  }
  unint64_t v25 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v2 + v25;
  uint64_t v12 = *(void *)(v8 + 72);
  swift_bridgeObjectRetain();
  unint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v24 = v10 - 1;
  while (1)
  {
    _s15ConversationKit11ParticipantVWOcTm_6(v11, v0);
    unint64_t v15 = *(void *)(v26 + 16);
    if ((uint64_t)v15 >= v4)
    {
      if (v14 >= v15) {
        goto LABEL_33;
      }
      outlined assign with take of TranscriptionViewModel.Caption(v0, v26 + v25 + v12 * v14++);
      if (v14 >= v4)
      {
        if (v24 == v13)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_32;
        }
        uint64_t v14 = 0;
        goto LABEL_18;
      }
    }
    else
    {
      unint64_t v16 = *(void *)(v26 + 24);
      if (v15 >= v16 >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v15 + 1, 1);
      }
      *(void *)(v26 + 16) = v15 + 1;
      outlined init with take of Collaboration(v0, v26 + v25 + v15 * v12);
    }
    if (v24 == v13) {
      break;
    }
LABEL_18:
    ++v13;
    v11 += v12;
    if (v13 >= *(void *)(v2 + 16))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_30;
  }
  uint64_t v17 = *(void *)(v26 + 16);
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v17, 0);
  if (v17 < v14) {
    goto LABEL_35;
  }
  if (v14 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v26 + 16);
  if (v18 >= v14 && v18 >= v17)
  {
    uint64_t v20 = swift_retain();
    specialized ContiguousArray.append<A>(contentsOf:)(v20, v26 + v25, v14, (2 * v17) | 1);
    swift_bridgeObjectRelease();
    uint64_t v21 = OUTLINED_FUNCTION_351();
    specialized ContiguousArray.append<A>(contentsOf:)(v21, v22, 0, v23);
    goto LABEL_32;
  }
LABEL_37:
  __break(1u);
}

uint64_t key path getter for ConversationControlsManager.foregroundCollaborationState : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x7D8))();
}

uint64_t key path setter for ConversationControlsManager.foregroundCollaborationState : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v4 = type metadata accessor for ForegroundCollaborationState(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15ConversationKit11ParticipantVWOcTm_6(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x7E0))(v6);
}

void ConversationControlsManager.foregroundCollaborationState.didset()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StagedCollaboration(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v100 = (int *)type metadata accessor for AppLaunchNotice(0);
  MEMORY[0x1F4188790](v100);
  uint64_t v6 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForegroundCollaborationState?);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v102 = (uint64_t)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for ForegroundCollaborationState(0);
  uint64_t v9 = MEMORY[0x1F4188790](v103);
  uint64_t v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v92 - v12;
  uint64_t v14 = *(void *)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults + 8];
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 672);
  unint64_t v101 = (uint8_t *)ObjectType;
  if (v16(ObjectType, v14))
  {
    uint64_t v17 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_foregroundCollaborationState];
    swift_beginAccess();
    _s15ConversationKit11ParticipantVWOcTm_6(v17, (uint64_t)v13);
    static ForegroundCollaborationState.== infix(_:_:)();
    char v19 = v18;
    _s15ConversationKit11ParticipantVWOhTm_4();
    if ((v19 & 1) == 0)
    {
      if (one-time initialization token for shareableContent != -1) {
        swift_once();
      }
      int v97 = v6;
      uint64_t v20 = type metadata accessor for Logger();
      uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)static Logger.shareableContent);
      uint64_t v22 = v1;
      uint64_t v98 = v21;
      unint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.default.getter();
      int v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v26 = swift_slowAlloc();
        id v99 = v22;
        uint64_t v27 = v26;
        uint64_t v95 = swift_slowAlloc();
        uint64_t v105 = v95;
        *(_DWORD *)uint64_t v27 = 136315394;
        uint64_t v96 = v4;
        uint64_t v109 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000001CLL, 0x80000001C37A50B0, &v105);
        os_log_t v94 = v23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v27 + 12) = 2080;
        uint64_t v93 = v27 + 14;
        uint64_t v28 = v102;
        _s15ConversationKit11ParticipantVWOcTm_6(v17, v102);
        uint64_t v29 = (void *)v17;
        uint64_t v30 = v103;
        __swift_storeEnumTagSinglePayload(v28, 0, 1, v103);
        uint64_t v31 = specialized >> prefix<A>(_:)();
        HIDWORD(v92) = v25;
        unint64_t v33 = v32;
        outlined destroy of SystemUpdateNotice?(v28, &demangling cache variable for type metadata for ForegroundCollaborationState?);
        uint64_t v34 = v31;
        uint64_t v4 = v96;
        uint64_t v109 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v33, &v105);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        os_log_t v35 = v94;
        _os_log_impl(&dword_1C2F90000, v94, BYTE4(v92), "%s changed: %s", (uint8_t *)v27, 0x16u);
        uint64_t v36 = v95;
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v36, -1, -1);
        uint64_t v37 = v27;
        uint64_t v22 = v99;
        MEMORY[0x1C87760E0](v37, -1, -1);
      }
      else
      {

        uint64_t v29 = (void *)v17;
        uint64_t v30 = v103;
      }
      os_log_type_t v38 = (void *)MEMORY[0x1E4FBC8C8];
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v22) + 0x960))();
      id v99 = v29;
      _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v29, (uint64_t)v11);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch((int)EnumCaseMultiPayload)
      {
        case 1:
          id v44 = &v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date))
                            + 48)];
          uint64_t v45 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
          goto LABEL_13;
        case 2:
LABEL_13:
          uint64_t v46 = type metadata accessor for URL();
          uint64_t EnumCaseMultiPayload = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v46 - 8) + 8))(v11, v46);
          goto LABEL_14;
        case 3:
LABEL_14:
          if ((*(uint64_t (**)(uint64_t))((*v38 & *v22) + 0x3E8))(EnumCaseMultiPayload))
          {
            uint64_t v48 = v47;
            swift_getObjectType();
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
            uint64_t v49 = swift_allocObject();
            *(_OWORD *)(v49 + 16) = xmmword_1C3769620;
            *(void *)(v49 + 32) = 11;
            *(_OWORD *)(v49 + 40) = 0u;
            *(_OWORD *)(v49 + 56) = 0u;
            *(unsigned char *)(v49 + 72) = 6;
            (*(void (**)(void))(v48 + 32))();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
          }
          return;
        case 4:
          uint64_t v50 = (*(uint64_t (**)(void))((*v38 & *v22) + 0x290))();
          uint64_t v51 = (uint64_t)v99;
          if (!v50) {
            return;
          }
          uint64_t v52 = (void *)v50;
          uint64_t v53 = (*(uint64_t (**)(void))((*v38 & *v22) + 0x778))();
          if (!v53) {
            goto LABEL_32;
          }
          id v54 = (void *)v53;
          swift_bridgeObjectRetain();
          ConversationControlsManager.shouldPost(collaborationPrompt:forBundleIdentifier:)();
          char v56 = v55;
          swift_bridgeObjectRelease();
          if (v56)
          {
            id v57 = v54;
            id v58 = v52;
            uint64_t v59 = (uint64_t)v97;
            UUID.init()();
            char v60 = v100;
            Date.init()();
            if (one-time initialization token for shared != -1) {
              swift_once();
            }
            double v61 = (*(double (**)(void))(*(void *)static Defaults.shared + 976))();
            *(unsigned char *)(v59 + v60[6]) = 5;
            *(void *)(v59 + v60[7]) = v57;
            *(void *)(v59 + v60[8]) = v58;
            *(unsigned char *)(v59 + v60[9]) = 1;
            *(double *)(v59 + v60[10]) = v61;
            *(unsigned char *)(v59 + v60[11]) = 1;
            *(unsigned char *)(v59 + v60[12]) = 1;
            os_log_type_t v62 = (void *)(v59 + v60[13]);
            *os_log_type_t v62 = 0;
            v62[1] = 0;
            uint64_t v63 = (void *)(v59 + v60[14]);
            *uint64_t v63 = 0;
            v63[1] = 0;
            *(unsigned char *)(v59 + v60[15]) = 0;
            uint64_t v64 = (void *)(v59 + v60[16]);
            *uint64_t v64 = 0;
            v64[1] = 0;
            specialized ConversationControlsManager.post(notice:)(v59, (uint64_t)v22, (uint64_t)type metadata accessor for AppLaunchNotice, (uint64_t)&protocol witness table for AppLaunchNotice, (uint64_t)type metadata accessor for AppLaunchNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v65, v66, v92, v93, (uint64_t)v94, v95, (uint64_t)v96, (uint64_t)v97, v98, (uint64_t)v99, (uint64_t)v100, (uint64_t)v101, v102,
              v103,
              v104,
              v105);

            goto LABEL_35;
          }
          uint64_t v67 = v22;
          uint64_t v68 = Logger.logObject.getter();
          os_log_type_t v69 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v68, v69))
          {
            unint64_t v70 = (uint8_t *)swift_slowAlloc();
            unint64_t v101 = (uint8_t *)swift_slowAlloc();
            uint64_t v105 = (uint64_t)v101;
            uint64_t v71 = v51;
            *(_DWORD *)unint64_t v70 = 136315138;
            id v100 = (int *)(v70 + 4);
            uint64_t v72 = v102;
            _s15ConversationKit11ParticipantVWOcTm_6(v71, v102);
            __swift_storeEnumTagSinglePayload(v72, 0, 1, v103);
            uint64_t v73 = specialized >> prefix<A>(_:)();
            unint64_t v75 = v74;
            outlined destroy of SystemUpdateNotice?(v72, &demangling cache variable for type metadata for ForegroundCollaborationState?);
            uint64_t v109 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v75, &v105);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2F90000, v68, v69, "AppLaunchNotice already posted for this app, we should not post a new one. %s", v70, 0xCu);
            uint64_t v76 = (uint64_t)v101;
            swift_arrayDestroy();
            MEMORY[0x1C87760E0](v76, -1, -1);
            MEMORY[0x1C87760E0](v70, -1, -1);
          }
          else
          {

LABEL_32:
          }
          return;
        default:
          char v40 = v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool))
                           + 48)];
          uint64_t v41 = outlined init with take of Collaboration((uint64_t)v11, (uint64_t)v4);
          uint64_t v42 = (*(uint64_t (**)(uint64_t))((*v38 & *v22) + 0x778))(v41);
          if (!v42) {
            goto LABEL_35;
          }
          uint64_t v43 = (void *)v42;
          if (v40) {
            goto LABEL_11;
          }
          if ((*(uint64_t (**)(uint8_t *, uint64_t))(v14 + 680))(v101, v14))
          {
            Hasher.init(_seed:)();
            StagedCollaboration.hash(into:)();
            Hasher._finalize()();
          }
          swift_bridgeObjectRetain();
          ConversationControlsManager.shouldPost(collaborationPrompt:forBundleIdentifier:)();
          char v78 = v77;
          uint64_t v79 = swift_bridgeObjectRelease();
          if (v78)
          {
            if (!(*(uint64_t (**)(uint64_t))((*v38 & *v22) + 0x3E8))(v79))
            {
LABEL_11:
              _s15ConversationKit11ParticipantVWOhTm_4();

              return;
            }
            uint64_t v81 = v80;
            uint64_t v82 = swift_getObjectType();
            uint64_t v105 = 11;
            long long v106 = 0u;
            long long v107 = 0u;
            char v108 = 6;
            (*(void (**)(uint64_t, uint64_t *, void, void, uint64_t, uint64_t))(v81 + 16))(3, &v105, 0, 0, v82, v81);

            swift_unknownObjectRelease();
            outlined destroy of ConversationControlsType((uint64_t)&v105);
          }
          else
          {
            uint64_t v83 = v22;
            uint64_t v84 = Logger.logObject.getter();
            os_log_type_t v85 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v84, v85))
            {
              uint64_t v86 = (uint8_t *)swift_slowAlloc();
              uint64_t v103 = swift_slowAlloc();
              uint64_t v105 = v103;
              *(_DWORD *)uint64_t v86 = 136315138;
              unint64_t v101 = v86 + 4;
              uint64_t v87 = v102;
              _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v99, v102);
              __swift_storeEnumTagSinglePayload(v87, 0, 1, v30);
              uint64_t v88 = specialized >> prefix<A>(_:)();
              unint64_t v90 = v89;
              outlined destroy of SystemUpdateNotice?(v87, &demangling cache variable for type metadata for ForegroundCollaborationState?);
              uint64_t v109 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v88, v90, &v105);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1C2F90000, v84, v85, "Collaboration HUD already presented for this app, we should not present a new one. %s", v86, 0xCu);
              uint64_t v91 = v103;
              swift_arrayDestroy();
              MEMORY[0x1C87760E0](v91, -1, -1);
              MEMORY[0x1C87760E0](v86, -1, -1);
            }
            else
            {
            }
          }
LABEL_35:
          _s15ConversationKit11ParticipantVWOhTm_4();
          break;
      }
    }
  }
}

uint64_t ConversationControlsManager.foregroundCollaborationState.getter()
{
  return ConduitLagunaNoticeManager.pushBannerInfo.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_foregroundCollaborationState, (uint64_t)type metadata accessor for ForegroundCollaborationState, (uint64_t (*)(uint64_t))_s15ConversationKit11ParticipantVWOcTm_6);
}

uint64_t ConduitLagunaNoticeManager.pushBannerInfo.getter(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  OUTLINED_FUNCTION_303(a1);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_122();
  return a3(v4);
}

uint64_t ConversationControlsManager.foregroundCollaborationState.setter()
{
  uint64_t v3 = OUTLINED_FUNCTION_49_2();
  uint64_t v4 = type metadata accessor for ForegroundCollaborationState(v3);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_16_0();
  uint64_t v6 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_foregroundCollaborationState;
  OUTLINED_FUNCTION_2();
  _s15ConversationKit11ParticipantVWOcTm_6(v6, v2);
  OUTLINED_FUNCTION_6_1();
  outlined assign with copy of ForegroundCollaborationState(v0, v6);
  swift_endAccess();
  ConversationControlsManager.foregroundCollaborationState.didset();
  _s15ConversationKit11ParticipantVWOhTm_4();
  return _s15ConversationKit11ParticipantVWOhTm_4();
}

void (*ConversationControlsManager.foregroundCollaborationState.modify())(uint64_t a1, char a2)
{
  uint64_t v2 = malloc(0x30uLL);
  OUTLINED_FUNCTION_16_2((uint64_t)v2);
  uint64_t v3 = type metadata accessor for ForegroundCollaborationState(0);
  OUTLINED_FUNCTION_8(v3);
  size_t v5 = *(void *)(v4 + 64);
  *(void *)(v1 + 32) = malloc(v5);
  uint64_t v6 = malloc(v5);
  *(void *)(v1 + 40) = v6;
  uint64_t v7 = v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_foregroundCollaborationState;
  OUTLINED_FUNCTION_2();
  _s15ConversationKit11ParticipantVWOcTm_6(v7, (uint64_t)v6);
  return ConversationControlsManager.foregroundCollaborationState.modify;
}

void ConversationControlsManager.foregroundCollaborationState.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  uint64_t v4 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    _s15ConversationKit11ParticipantVWOcTm_6(*(void *)(*(void *)a1 + 40), (uint64_t)v3);
    ConversationControlsManager.foregroundCollaborationState.setter();
    _s15ConversationKit11ParticipantVWOhTm_4();
  }
  else
  {
    ConversationControlsManager.foregroundCollaborationState.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t key path getter for ConversationControlsManager.ephemeralAlert : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x7F0))();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  return result;
}

uint64_t key path setter for ConversationControlsManager.ephemeralAlert : ConversationControlsManager(uint64_t a1, void **a2)
{
  id v2 = *(id *)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(uint64_t (**)(id, void *, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x7F8);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  outlined copy of ConversationControlsRecipe.View?(*(id *)a1, v3);
  return v4(v2, v3, v5);
}

void ConversationControlsManager.ephemeralAlert.didset()
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.conversationControls);
  unint64_t v15 = v0;
  id v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v16 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v15) + 0x7F0))();
    if (v6)
    {
      uint64_t v8 = (void *)v6;
      uint64_t v9 = v7;
      id v10 = v7;
      id v11 = v8;
      outlined consume of ConversationControlsRecipe.View?(v8, v9);
      uint64_t v12 = EphemeralAlert.description.getter(v11, v9);
      unint64_t v14 = v13;
    }
    else
    {
      unint64_t v14 = 0xE400000000000000;
      uint64_t v12 = 1701736302;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v2, v3, "⇢ EphemeralAlert: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v5, -1, -1);
    MEMORY[0x1C87760E0](v4, -1, -1);
  }
  else
  {
  }
}

uint64_t ConversationControlsManager.ephemeralAlert.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_160();
  swift_release();
  swift_release();
  return v1;
}

void ConversationControlsManager.ephemeralAlert.setter()
{
  OUTLINED_FUNCTION_3_74();
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v0;
  outlined copy of ConversationControlsRecipe.View?(v2, v1);
  static Published.subscript.setter();
  ConversationControlsManager.ephemeralAlert.didset();
  outlined consume of ConversationControlsRecipe.View?(v2, v1);
}

void (*ConversationControlsManager.ephemeralAlert.modify(uint64_t a1))(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_8_7(a1);
  *(void *)uint64_t v1 = ConversationControlsManager.ephemeralAlert.getter();
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v3;
  return ConversationControlsManager.ephemeralAlert.modify;
}

void ConversationControlsManager.ephemeralAlert.modify(uint64_t a1, char a2)
{
  id v2 = *(id *)a1;
  char v3 = *(void **)(a1 + 8);
  if (a2)
  {
    outlined copy of ConversationControlsRecipe.View?(*(id *)a1, v3);
    ConversationControlsManager.ephemeralAlert.setter();
    outlined consume of ConversationControlsRecipe.View?(v2, v3);
  }
  else
  {
    ConversationControlsManager.ephemeralAlert.setter();
  }
}

uint64_t key path getter for ConversationControlsManager.$ephemeralAlert : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x808))();
}

uint64_t key path setter for ConversationControlsManager.$ephemeralAlert : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>.Publisher);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x810))(v6);
}

uint64_t ConversationControlsManager.$ephemeralAlert.getter()
{
  return ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__ephemeralAlert, (uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>);
}

void ConversationControlsManager.$ephemeralAlert.setter()
{
}

void (*ConversationControlsManager.$ephemeralAlert.modify())()
{
  uint64_t v1 = malloc(0x40uLL);
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>.Publisher);
  v0[4] = v2;
  OUTLINED_FUNCTION_1(v2);
  v0[5] = v3;
  size_t v5 = *(void *)(v4 + 64);
  v0[6] = malloc(v5);
  v0[7] = malloc(v5);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ConversationControlsManager.$ephemeralAlert.modify;
}

void ConversationControlsManager.$ephemeralAlert.modify()
{
}

uint64_t key path getter for ConversationControlsManager.shouldShowDelayedLMIBanner : ConversationControlsManager@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x820))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ConversationControlsManager.shouldShowDelayedLMIBanner : ConversationControlsManager(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x828))(*a1);
}

uint64_t ConversationControlsManager.shouldShowDelayedLMIBanner.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t ConversationControlsManager.shouldShowDelayedLMIBanner.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowDelayedLMIBanner);
  uint64_t result = OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*ConversationControlsManager.shouldShowDelayedLMIBanner.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t ConversationControlsManager.gridLayoutStyle.getter@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_0_20();
  if ((*(uint64_t (**)(void))(v2 + 1072))())
  {
    OUTLINED_FUNCTION_371();
    OUTLINED_FUNCTION_334();
    v3();
    swift_unknownObjectRelease();
    uint64_t result = v6;
  }
  else
  {
    OUTLINED_FUNCTION_261();
    OUTLINED_FUNCTION_74_2();
    uint64_t result = v5();
  }
  *a1 = result & 1;
  return result;
}

uint64_t ConversationControlsManager.controlsMode.getter()
{
  uint64_t v2 = v0;
  OUTLINED_FUNCTION_81_3();
  unint64_t v90 = *(uint64_t (**)(void))(v3 + 656);
  uint64_t v4 = (void *)v90();
  if (v4)
  {
    size_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_state);
  }
  else
  {
    id v6 = 0;
  }
  OUTLINED_FUNCTION_261();
  OUTLINED_FUNCTION_259();
  if (v7())
  {
    OUTLINED_FUNCTION_30_21();
    OUTLINED_FUNCTION_90_2();
    v8();
    OUTLINED_FUNCTION_27_26();
    OUTLINED_FUNCTION_158_0();
    v9();
    OUTLINED_FUNCTION_85_3();
    if ((v1 & 1) != 0 && !v6)
    {
      OUTLINED_FUNCTION_110_1();
      id v11 = (void *)v10();
      id v1 = objc_msgSend(v11, sel_handoffEligibility);

      if (v1)
      {
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v12 = type metadata accessor for Logger();
        unint64_t v13 = (void *)OUTLINED_FUNCTION_30(v12, (uint64_t)static Logger.conversationControls);
        os_log_type_t v14 = static os_log_type_t.default.getter();
        if (OUTLINED_FUNCTION_12(v14))
        {
          unint64_t v15 = (_WORD *)OUTLINED_FUNCTION_8_0();
          OUTLINED_FUNCTION_23_1(v15);
          OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v16, v17, "ConversationControlsManager: handoffEligible");
          OUTLINED_FUNCTION_3();
        }

        return 97;
      }
    }
  }
  OUTLINED_FUNCTION_30_21();
  unint64_t v89 = *(void (**)(void))(v19 + 624);
  OUTLINED_FUNCTION_133();
  v20();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_158_0();
  v21();
  OUTLINED_FUNCTION_85_3();
  if (v1)
  {
    OUTLINED_FUNCTION_110_1();
    unint64_t v23 = (void *)v22();
    id v1 = objc_msgSend(v23, sel_link);

    if (v1)
    {
      os_log_type_t v24 = (void *)(*(void *)&v2[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController]
                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
      OUTLINED_FUNCTION_2();
      if ((unint64_t)(*v24 - 1) <= 1) {
        return (*v24 == 2) | 0x40u;
      }
    }
  }
  OUTLINED_FUNCTION_133();
  v89();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_74_2();
  v25();
  OUTLINED_FUNCTION_85_3();
  if (v1 == 4 && v6 == (id)3) {
    return 33;
  }
  unint64_t v27 = (unint64_t)v6;
  OUTLINED_FUNCTION_127_0();
  v89();
  char v28 = ConversationControlsManager.shouldShowCallAgainHUD(forCall:)();
  swift_unknownObjectRelease();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  __swift_project_value_buffer(v29, (uint64_t)static Logger.conversationControls);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_21_0(v31))
  {
    unint64_t v32 = (uint8_t *)OUTLINED_FUNCTION_327();
    *(_DWORD *)unint64_t v32 = 67109120;
    unint64_t v27 = (unint64_t)v6;
    OUTLINED_FUNCTION_314(v28 & 1);
    _os_log_impl(&dword_1C2F90000, v30, (os_log_type_t)&lazy protocol witness table cache variable for type UUID and conformance UUID, "Should we show call again hud? %{BOOL}d", v32, 8u);
    OUTLINED_FUNCTION_3();
  }

  if (v28) {
    return 129;
  }
  OUTLINED_FUNCTION_133();
  v33();
  OUTLINED_FUNCTION_125();
  OUTLINED_FUNCTION_178();
  v34();
  OUTLINED_FUNCTION_229();
  os_log_t v35 = Logger.logObject.getter();
  int v36 = static os_log_type_t.default.getter();
  BOOL v37 = os_log_type_enabled(v35, (os_log_type_t)v36);
  if (&lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    if (v37)
    {
      os_log_type_t v38 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_231(v38);
      _os_log_impl(&dword_1C2F90000, v35, (os_log_type_t)v36, "Showing controls for Live Voicemail", v2, 2u);
      OUTLINED_FUNCTION_3();
    }

    return 160;
  }
  if (v37)
  {
    char v39 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v92 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)char v39 = 136315138;
    type metadata accessor for TUConversationState(0);
    uint64_t v40 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, &v92);
    unint64_t v27 = (unint64_t)v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v35, (os_log_type_t)v36, "ConversationControlsManager: controlsMode, conversationState: %s", v39, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  if (v27 - 2 >= 3)
  {
    if (v27 > 1)
    {
      uint64_t v92 = 0;
      unint64_t v93 = 0xE000000000000000;
      _StringGuts.grow(_:)(33);
      swift_bridgeObjectRelease();
      uint64_t v92 = 0xD00000000000001FLL;
      unint64_t v93 = 0x80000001C37A45A0;
      type metadata accessor for TUConversationState(0);
      v88._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v88);
      swift_bridgeObjectRelease();
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    uint64_t v47 = *(void *)&v2[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController];
    ConversationController.shouldShowJoinCountdown.getter();
    if (v48)
    {
      OUTLINED_FUNCTION_30_21();
      OUTLINED_FUNCTION_126_0();
      if (v49())
      {
        OUTLINED_FUNCTION_125();
        OUTLINED_FUNCTION_178();
        v50();
        OUTLINED_FUNCTION_176();
        if (v36) {
          return 96;
        }
      }
    }
    OUTLINED_FUNCTION_133();
    v89();
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_96_1();
    v51();
    OUTLINED_FUNCTION_176();
    if (v36 != 3)
    {
      OUTLINED_FUNCTION_127_0();
      v89();
      OUTLINED_FUNCTION_125();
      OUTLINED_FUNCTION_96_1();
      v52();
      OUTLINED_FUNCTION_176();
      if (v36 != 4) {
        return 32;
      }
    }
    OUTLINED_FUNCTION_127_0();
    v89();
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_178();
    uint64_t v54 = v53();
    swift_unknownObjectRelease();
    uint64_t v55 = specialized Set.count.getter(v54);
    swift_bridgeObjectRelease();
    if (v55 <= 1)
    {
      OUTLINED_FUNCTION_127_0();
      v89();
      OUTLINED_FUNCTION_125();
      OUTLINED_FUNCTION_96_1();
      v56();
      OUTLINED_FUNCTION_176();
      if (v54 == 3)
      {
        id v57 = (void *)(v47 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
        OUTLINED_FUNCTION_2();
        if (!*v57)
        {
          OUTLINED_FUNCTION_110_1();
          uint64_t v59 = (void *)v58();
          id v60 = objc_msgSend(v59, sel_link);

          if (!v60)
          {
            OUTLINED_FUNCTION_110_1();
            os_log_type_t v62 = (void *)v61();
            id v63 = objc_msgSend(v62, sel_localParticipantAssociation);

            if (!v63) {
              return 32;
            }
          }
        }
      }
    }
    OUTLINED_FUNCTION_127_0();
    v89();
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_96_1();
    v64();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_127_0();
    v89();
    OUTLINED_FUNCTION_165();
    OUTLINED_FUNCTION_195();
    uint64_t v66 = v65();
    swift_unknownObjectRelease();
    specialized Set.count.getter(v66);
    uint64_t v67 = swift_bridgeObjectRelease();
    uint64_t v68 = (void *)((uint64_t (*)(uint64_t))v90)(v67);
    if (v68)
    {
      os_log_type_t v69 = v68;
      id v70 = objc_msgSend(v68, sel_mergedActiveRemoteParticipants);

      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      uint64_t v71 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      specialized Set.count.getter(v71);
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_329();
    unint64_t v74 = (void *)v73();
    if (v74)
    {
      unint64_t v75 = v74;
      id v76 = objc_msgSend(v74, sel_localParticipantAssociation);

      if (v76)
      {
        objc_msgSend(v76, sel_identifier);
      }
    }
    OUTLINED_FUNCTION_329();
    char v78 = (void *)v77();
    if (v78
      && (uint64_t v79 = v78, v80 = objc_msgSend(v78, sel_link), v79, v80)
      && (uint64_t v81 = outlined bridged method (ob) of @objc TUConversationActivity.concatenatedMetadataDescription.getter(v80, (SEL *)&selRef_displayName), v82))
    {
      uint64_t v83 = v81;
      unint64_t v84 = v82;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v84 = 0xE300000000000000;
      uint64_t v83 = 7104878;
    }
    swift_bridgeObjectRetain();
    os_log_type_t v85 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = swift_slowAlloc();
      uint64_t v91 = OUTLINED_FUNCTION_9_0();
      *(_DWORD *)uint64_t v87 = 67241474;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v87 + 8) = 2050;
      OUTLINED_FUNCTION_330();
      *(_WORD *)(v87 + 18) = 2050;
      OUTLINED_FUNCTION_330();
      *(_WORD *)(v87 + 28) = 2050;
      OUTLINED_FUNCTION_330();
      *(_WORD *)(v87 + 38) = 2080;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v83, v84, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v87 + 48) = 2048;
      OUTLINED_FUNCTION_330();
      _os_log_impl(&dword_1C2F90000, v85, v86, "ConversationControlsManager: status = %{public}d, remoteParticipantHandles: %{public}ld,  mergedActiveRemoteParticipants %{public}ld, conversationLetMeInRequestState: %{public}ld, link: %s, localParticipantAssociation: %llu", (uint8_t *)v87, 0x3Au);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 33;
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  if ((*(uint64_t (**)(void))(v42 + 600))())
  {
    OUTLINED_FUNCTION_110_1();
    id v44 = (void *)v43();
    if (v44)
    {
      uint64_t v45 = v44;
      if (objc_msgSend(v44, sel_isContinuitySession))
      {
        id v46 = objc_msgSend(v45, sel_avMode);

        if (!v46) {
          return 161;
        }
      }
      else
      {
      }
    }
  }
  OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_83_0();
  return v72() & 1;
}

uint64_t ConversationControlsManager.shouldShowCallAgainHUD(forCall:)()
{
  swift_getObjectType();
  OUTLINED_FUNCTION_74_2();
  if ((v0() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_359();
  OUTLINED_FUNCTION_56_5();
  return v1() & 1;
}

void ConversationControlsManager.conversationHUDType.getter(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_5_13();
  unsigned __int8 v3 = (*(uint64_t (**)(void))(v2 + 2112))();
  switch(v3 >> 5)
  {
    case 2:
      uint64_t v4 = 1;
      goto LABEL_16;
    case 3:
      if (v3 == 96) {
        goto LABEL_17;
      }
      uint64_t v4 = 4;
      goto LABEL_16;
    case 4:
      if (v3 != 128)
      {
        uint64_t v4 = 10;
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_5_13();
      (*(void (**)(void))(v5 + 624))();
      OUTLINED_FUNCTION_27_26();
      OUTLINED_FUNCTION_80_1();
      id v8 = (id)v6();
      static ConversationControlsType.firstOrThirdPartyIncomingCall(for:)(v8, a1);
      swift_unknownObjectRelease();

      return;
    case 5:
      if (v3 == 160)
      {
        uint64_t v4 = 21;
LABEL_16:
        OUTLINED_FUNCTION_184(v4);
        goto LABEL_18;
      }
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      OUTLINED_FUNCTION_50();
      if ((*(uint64_t (**)(void))(v7 + 600))())
      {
        uint64_t v4 = 5;
        goto LABEL_16;
      }
LABEL_17:
      OUTLINED_FUNCTION_250_0();
LABEL_18:
      *(unsigned char *)(a1 + 40) = 6;
      return;
    default:
      goto LABEL_17;
  }
}

uint64_t key path getter for ConversationControlsManager.isWaitingOnFirstRemoteFrame : ConversationControlsManager@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x850))();
  *a2 = result & 1;
  return result;
}

uint64_t ConversationControlsManager.isWaitingOnFirstRemoteFrame.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t ConversationControlsManager.isWaitingOnFirstRemoteFrame.setter(char a1)
{
  unsigned __int8 v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isWaitingOnFirstRemoteFrame);
  uint64_t result = OUTLINED_FUNCTION_11_0();
  *unsigned __int8 v3 = a1;
  return result;
}

uint64_t key path getter for ConversationControlsManager.shouldShowAVLessLeaveConfirmation : ConversationControlsManager@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x868))();
  *a2 = result & 1;
  return result;
}

uint64_t ConversationControlsManager.shouldShowAVLessLeaveConfirmation.didset(char a1)
{
  int v3 = a1 & 1;
  uint64_t v4 = (unsigned __int8 *)(v1
                         + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowAVLessLeaveConfirmation);
  uint64_t result = swift_beginAccess();
  if (*v4 != v3)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    MEMORY[0x1F4188790](v6 - 8);
    id v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
    if (a1)
    {
      uint64_t v9 = 1;
    }
    else
    {
      static Date.now.getter();
      uint64_t v9 = 0;
    }
    uint64_t v10 = type metadata accessor for Date();
    __swift_storeEnumTagSinglePayload((uint64_t)v8, v9, 1, v10);
    uint64_t v11 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_avLessLeaveConfirmationPresentedDate;
    swift_beginAccess();
    outlined assign with take of Participant?((uint64_t)v8, v11, (uint64_t *)&demangling cache variable for type metadata for Date?);
    return swift_endAccess();
  }
  return result;
}

uint64_t ConversationControlsManager.shouldShowAVLessLeaveConfirmation.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t ConversationControlsManager.shouldShowAVLessLeaveConfirmation.setter(char a1)
{
  int v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowAVLessLeaveConfirmation);
  OUTLINED_FUNCTION_11_0();
  char v4 = *v3;
  *int v3 = a1;
  return ConversationControlsManager.shouldShowAVLessLeaveConfirmation.didset(v4);
}

uint64_t key path getter for ConversationControlsManager.activityLaunchTimer : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x8B0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.activityLaunchTimer : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x8B8);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t ConversationControlsManager.activityLaunchTimer.getter()
{
  return ConversationControlsManager.incomingScreenSharingRequestActivity.getter();
}

uint64_t ConversationControlsManager.activityLaunchTimer.setter(uint64_t a1)
{
  return ConversationControlsManager.incomingScreenSharingRequestActivity.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activityLaunchTimer);
}

uint64_t (*ConversationControlsManager.activityLaunchTimer.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

double ConversationControlsManager.currentActivity.getter()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 656))();
  if (!v1) {
    return OUTLINED_FUNCTION_250_0();
  }
  uint64_t v2 = (void *)v1;
  uint64_t v3 = specialized Conversation.activities.getter();
  uint64_t v4 = Array<A>.sortedActivities.getter(v3);
  specialized Collection.first.getter(v4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return result;
}

uint64_t ConversationControlsManager.currentSharePlayActivity.getter()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t result = (*(uint64_t (**)(void))(v0 + 656))();
  if (result)
  {
    uint64_t v2 = (void *)result;
    uint64_t v3 = specialized Conversation.activities.getter();
    uint64_t v4 = Array<A>.currentSharePlayActivity.getter(v3);

    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

id ConversationControlsManager.stagedSharePlayActivity.getter()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(v0 + 656))();
  if (!v1
    || (uint64_t v2 = v1,
        id v3 = objc_msgSend(v1, sel_stagedActivitySession),
        v2,
        !v3))
  {
    ConversationController.activeOneToOneConversationBackedByGroupSession.getter();
    id v3 = v7;
    if (v7)
    {
      __swift_project_boxed_opaque_existential_1(v6, (uint64_t)v7);
      OUTLINED_FUNCTION_74_2();
      id v3 = (id)v4();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Conversation?);
    }
  }
  return v3;
}

uint64_t ConversationControlsManager.currentOrStagedSharePlayActivity.getter()
{
  OUTLINED_FUNCTION_4_13();
  uint64_t result = (*(uint64_t (**)(void))(v0 + 2256))();
  if (!result)
  {
    OUTLINED_FUNCTION_4_13();
    id v3 = *(uint64_t (**)(void))(v2 + 2264);
    return v3();
  }
  return result;
}

uint64_t ConversationControlsManager.currentCollaboration.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_0_20();
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 656))();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = specialized Conversation.activities.getter();
    Array<A>.currentCollaboration.getter(v5, a1);

    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for Collaboration(0);
    OUTLINED_FUNCTION_218();
    return __swift_storeEnumTagSinglePayload(v7, v8, v9, v10);
  }
}

uint64_t ConversationControlsManager.stagedCollaboration.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ForegroundCollaborationState(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_10_35();
  OUTLINED_FUNCTION_0_3();
  (*(void (**)(void))(v4 + 2008))();
  OUTLINED_FUNCTION_24_2();
  if (swift_getEnumCaseMultiPayload())
  {
    _s15ConversationKit11ParticipantVWOhTm_4();
    uint64_t v5 = 1;
  }
  else
  {
    outlined init with take of Collaboration(v1, a1);
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for StagedCollaboration(0);
  return __swift_storeEnumTagSinglePayload(a1, v5, 1, v6);
}

uint64_t ConversationControlsManager.stagedOrCurrentCollaboration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_16_0();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StagedCollaboration?);
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_223();
  OUTLINED_FUNCTION_0_3();
  (*(void (**)(void))(v9 + 2288))();
  uint64_t v10 = type metadata accessor for StagedCollaboration(0);
  OUTLINED_FUNCTION_33_0(v3, 1, v10);
  if (v11)
  {
    outlined destroy of SystemUpdateNotice?(v3, &demangling cache variable for type metadata for StagedCollaboration?);
    OUTLINED_FUNCTION_0_3();
    (*(void (**)(void))(v12 + 2280))();
    type metadata accessor for Collaboration(0);
    uint64_t v13 = OUTLINED_FUNCTION_375();
    OUTLINED_FUNCTION_33_0(v13, 1, v1);
    if (v11)
    {
      uint64_t result = outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Collaboration?);
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = 0;
    }
    else
    {
      *(void *)(a1 + 24) = v1;
      *(void *)(a1 + 32) = &protocol witness table for Collaboration;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      return outlined init with take of Collaboration(v2, (uint64_t)boxed_opaque_existential_1);
    }
  }
  else
  {
    uint64_t v18 = v10;
    uint64_t v19 = &protocol witness table for StagedCollaboration;
    os_log_type_t v14 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
    outlined init with take of Collaboration(v3, (uint64_t)v14);
    return outlined init with take of Notice(&v17, a1);
  }
  return result;
}

double ConversationControlsManager.activityToShowInHUD.getter@<D0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_81_3();
  v4 += 100;
  uint64_t v5 = *v4;
  if (((*v4)() & 1) == 0) {
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_51_8();
  OUTLINED_FUNCTION_329();
  uint64_t v7 = (void *)v6();
  if (!v7) {
    goto LABEL_4;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v7, sel_activeRemoteParticipants);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v11 = specialized Set.count.getter(v10);
  swift_bridgeObjectRelease();
  if (!v11)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.conversationControls);
    id v30 = v2;
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 67109376;
      LODWORD(v33[0]) = v5() & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 8) = 2048;
      OUTLINED_FUNCTION_329();
      unint64_t v23 = (void *)v22();
      if (v23)
      {
        os_log_type_t v24 = v23;
        int v25 = v19;
        id v26 = objc_msgSend(v23, sel_activeRemoteParticipants);

        uint64_t v27 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v25;
        uint64_t v28 = specialized Set.count.getter(v27);

        swift_bridgeObjectRelease();
      }
      else
      {

        uint64_t v28 = 0;
      }
      *(void *)&v33[0] = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl(&dword_1C2F90000, v19, v20, "Only showing non-staged Activity, isAVLess: %{BOOL}d participantCount: %ld", (uint8_t *)v21, 0x12u);
      OUTLINED_FUNCTION_3();
    }
    else
    {
    }
    OUTLINED_FUNCTION_94_1();
    uint64_t v13 = (*(uint64_t (**)(void))(v29 + 2256))();
  }
  else
  {
LABEL_4:
    OUTLINED_FUNCTION_51_8();
    uint64_t v13 = (*(uint64_t (**)(void))(v12 + 2272))();
  }
  os_log_type_t v14 = (void *)v13;
  OUTLINED_FUNCTION_51_8();
  (*(void (**)(long long *__return_ptr))(v15 + 2296))(&v31);
  if (v32)
  {
    outlined init with take of Notice(&v31, (uint64_t)v33);
    OUTLINED_FUNCTION_0_62();
    if (((*(uint64_t (**)(void *))(v16 + 2320))(v14) & 1) == 0)
    {

      outlined init with take of Notice(v33, (uint64_t)a1);
      return result;
    }
    if (v14)
    {
      a1[3] = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivitySession);
      a1[4] = &protocol witness table for TUConversationActivitySession;
      *a1 = v14;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      return result;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v31, &demangling cache variable for type metadata for Activity?);
    if (v14)
    {
      a1[3] = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivitySession);
      a1[4] = &protocol witness table for TUConversationActivitySession;
      *a1 = v14;
      return result;
    }
  }
  return OUTLINED_FUNCTION_250_0();
}

uint64_t ConversationControlsManager.remoteParticipants.getter()
{
  return swift_bridgeObjectRetain();
}

void ConversationControlsManager.shouldShowSharePlayActivityInHUD(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_254();
  a21 = v22;
  a22 = v23;
  if (v24)
  {
    OUTLINED_FUNCTION_10_1();
    (*(void (**)(void))(v25 + 2328))();
    OUTLINED_FUNCTION_0_3();
    if ((*(uint64_t (**)(void))(v26 + 1072))())
    {
      OUTLINED_FUNCTION_144_0();
      OUTLINED_FUNCTION_220();
      char v28 = v27();
      swift_unknownObjectRelease();
      if (v28)
      {
        OUTLINED_FUNCTION_94_1();
        (*(void (**)(uint64_t *__return_ptr))(v29 + 2248))(&a10);
        if (a13)
        {
          __swift_project_boxed_opaque_existential_1(&a10, a13);
          OUTLINED_FUNCTION_334();
          v30();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&a10);
        }
        else
        {
          outlined destroy of SystemUpdateNotice?((uint64_t)&a10, &demangling cache variable for type metadata for Activity?);
        }
      }
    }
  }
  OUTLINED_FUNCTION_252();
}

uint64_t key path getter for ConversationControlsManager.applicationState : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x918))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.applicationState : ConversationControlsManager(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x920))(*a1);
}

uint64_t ConversationControlsManager.applicationState.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *(void *)v0;
}

uint64_t ConversationControlsManager.applicationState.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_applicationState);
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  OUTLINED_FUNCTION_0_3();
  return (*(uint64_t (**)(void))(v4 + 2400))();
}

uint64_t (*ConversationControlsManager.applicationState.modify(uint64_t a1))(uint64_t a1, char a2)
{
  return ConversationControlsManager.applicationState.modify;
}

uint64_t ConversationControlsManager.applicationState.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    OUTLINED_FUNCTION_0_20();
    return (*(uint64_t (**)(void))(v4 + 2400))();
  }
  return result;
}

uint64_t key path getter for ConversationControlsManager.appLaunchButtonType : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x930))();
}

uint64_t key path setter for ConversationControlsManager.appLaunchButtonType : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v4 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15ConversationKit11ParticipantVWOcTm_6(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x938))(v6);
}

void ConversationControlsManager.appLaunchButtonType.didset(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x930);
  ((void (*)(uint64_t))v7)(v4);
  LOBYTE(a1) = static ConversationControlsAppLaunchButtonType.== infix(_:_:)((uint64_t)v6, a1);
  _s15ConversationKit11ParticipantVWOhTm_4();
  if ((a1 & 1) == 0)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.conversationControls);
    id v9 = v1;
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v19 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      v18[1] = v12 + 4;
      v7();
      ConversationControlsAppLaunchButtonType.description.getter();
      uint64_t v15 = v14;
      unint64_t v17 = v16;
      _s15ConversationKit11ParticipantVWOhTm_4();
      v18[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v17, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v10, v11, "> AppLaunchButton type:%s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v13, -1, -1);
      MEMORY[0x1C87760E0](v12, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t ConversationControlsManager.appLaunchButtonType.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_285();
  static Published.subscript.getter();
  swift_release();
  return swift_release();
}

void ConversationControlsManager.appLaunchButtonType.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14();
  a17 = v21;
  a18 = v22;
  uint64_t v23 = OUTLINED_FUNCTION_49_2();
  uint64_t v24 = type metadata accessor for ConversationControlsAppLaunchButtonType(v23);
  uint64_t v25 = OUTLINED_FUNCTION_8(v24);
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v26);
  char v28 = (char *)&a9 - v27;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  _s15ConversationKit11ParticipantVWOcTm_6(v18, v20);
  id v29 = v19;
  static Published.subscript.setter();
  ConversationControlsManager.appLaunchButtonType.didset((uint64_t)v28);
  _s15ConversationKit11ParticipantVWOhTm_4();
  _s15ConversationKit11ParticipantVWOhTm_4();
  OUTLINED_FUNCTION_15_0();
}

uint64_t (*ConversationControlsManager.appLaunchButtonType.modify(void *a1))()
{
  *a1 = v1;
  uint64_t v3 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  OUTLINED_FUNCTION_8(v3);
  size_t v5 = *(void *)(v4 + 64);
  a1[1] = malloc(v5);
  a1[2] = malloc(v5);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return ConversationControlsManager.appLaunchButtonType.modify;
}

#error "1C3289118: call analysis failed (funcsize=36)"

uint64_t key path getter for ConversationControlsManager.$appLaunchButtonType : ConversationControlsManager(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x948))();
}

uint64_t key path setter for ConversationControlsManager.$appLaunchButtonType : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>.Publisher);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x950))(v6);
}

uint64_t ConversationControlsManager.$appLaunchButtonType.getter()
{
  return ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__appLaunchButtonType, &demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>);
}

uint64_t ConversationControlsManager.$shouldOpenMessages.getter(void *a1, uint64_t *a2)
{
  return swift_endAccess();
}

void ConversationControlsManager.$appLaunchButtonType.setter()
{
}

void (*ConversationControlsManager.$appLaunchButtonType.modify())()
{
  uint64_t v1 = malloc(0x40uLL);
  OUTLINED_FUNCTION_16_2((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>.Publisher);
  v0[4] = v2;
  OUTLINED_FUNCTION_1(v2);
  v0[5] = v3;
  size_t v5 = *(void *)(v4 + 64);
  v0[6] = malloc(v5);
  v0[7] = malloc(v5);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ConversationControlsManager.$appLaunchButtonType.modify;
}

void ConversationControlsManager.$appLaunchButtonType.modify()
{
}

Swift::Void __swiftcall ConversationControlsManager.configureAppLaunchButtonType()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v0;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = OUTLINED_FUNCTION_193(v7, (uint64_t)v122[0]);
  uint64_t v126 = type metadata accessor for Collaboration(v8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2_3();
  uint64_t v125 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StagedCollaboration?);
  uint64_t v12 = OUTLINED_FUNCTION_8(v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_10_5();
  uint64_t v124 = v17;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v122 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v22 = OUTLINED_FUNCTION_8(v21);
  MEMORY[0x1F4188790](v22);
  uint64_t v23 = OUTLINED_FUNCTION_80();
  uint64_t v24 = type metadata accessor for Participant(v23);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_261();
  OUTLINED_FUNCTION_74_2();
  if ((v26() & 1) == 0)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    unint64_t v33 = (void *)OUTLINED_FUNCTION_30(v32, (uint64_t)static Logger.conversationControls);
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_2_12(v34))
    {
      os_log_t v35 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_22_1(v35);
      OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v36, v37, "SharePlay unavailable, not presenting AppLaunchButton");
      OUTLINED_FUNCTION_3();
    }

    OUTLINED_FUNCTION_233();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_1_12();
    goto LABEL_47;
  }
  v122[4] = v15;
  uint64_t v123 = v20;
  OUTLINED_FUNCTION_30_21();
  v27 += 78;
  char v28 = *v27;
  uint64_t v127 = v27;
  v28();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_74_2();
  v29();
  uint64_t v30 = OUTLINED_FUNCTION_85_3();
  if (v1)
  {
    char v31 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_30_21();
    OUTLINED_FUNCTION_83_0();
    uint64_t v30 = v38();
    char v31 = v30;
  }
  v122[3] = v28;
  ((void (*)(uint64_t))v28)(v30);
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_74_2();
  char v40 = v39();
  swift_unknownObjectRelease();
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0 || (v40 & 1) != 0 || (v31 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_21();
    OUTLINED_FUNCTION_83_0();
    if (v43() >= 0x20u)
    {
      ConversationControlsManager.isOneToOneConversation.getter();
      if ((v53 & 1) == 0) {
        goto LABEL_46;
      }
      OUTLINED_FUNCTION_30_21();
      OUTLINED_FUNCTION_179();
      uint64_t v55 = (void *)v54();
      if (!v55) {
        goto LABEL_46;
      }
      char v56 = v55;
      id v57 = objc_msgSend(v55, sel_state);

      if (v57 != (id)1) {
        goto LABEL_46;
      }
    }
    OUTLINED_FUNCTION_30_21();
    v44 += 82;
    uint64_t v45 = *v44;
    v122[1] = v44;
    v122[2] = v45;
    uint64_t v46 = ((uint64_t (*)(void))v45)();
    if (v46)
    {
      uint64_t v47 = (void *)v46;
      OUTLINED_FUNCTION_30_21();
      OUTLINED_FUNCTION_83_0();
      v48();
      specialized Conversation.currentScreenSharingRequest(ignoring:)();
      uint64_t v50 = v49;

      swift_bridgeObjectRelease();
      if (v50)
      {
        if (objc_msgSend(v50, sel_type) == (id)1)
        {
          id v51 = objc_msgSend(v50, sel_handle);
          ConversationController.participant(with:)();

          OUTLINED_FUNCTION_33_0(v2, 1, v24);
          if (v52)
          {

            outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
          }
          else
          {
            v122[0] = v50;
            outlined init with take of Collaboration(v2, v3);
            if (objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags], sel_requestToScreenShareEnabled))
            {
              if (one-time initialization token for conversationControls != -1) {
                swift_once();
              }
              uint64_t v59 = type metadata accessor for Logger();
              __swift_project_value_buffer(v59, (uint64_t)static Logger.conversationControls);
              id v60 = v4;
              double v61 = Logger.logObject.getter();
              os_log_type_t v62 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v61, v62))
              {
                id v63 = (_DWORD *)OUTLINED_FUNCTION_37();
                v130[0] = OUTLINED_FUNCTION_9_0();
                *id v63 = 136315138;
                OUTLINED_FUNCTION_179();
                uint64_t v65 = v64();
                if (v65
                  && (uint64_t v66 = (void *)v65,
                      specialized Conversation.currentScreenSharingRequest(ignoring:)(),
                      uint64_t v68 = v67,
                      v66,
                      v68))
                {
                  *(void *)&long long v128 = v68;
                  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
                  uint64_t v69 = String.init<A>(reflecting:)();
                  unint64_t v71 = v70;
                }
                else
                {
                  unint64_t v71 = 0xE300000000000000;
                  uint64_t v69 = 7104878;
                }
                *(void *)&long long v128 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v71, v130);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_268(&dword_1C2F90000, v61, v62, "Setting app launch button to requestedRemoteToScreenShare %s");
                OUTLINED_FUNCTION_119();
                OUTLINED_FUNCTION_3();
                OUTLINED_FUNCTION_3();
              }
              else
              {
              }
              _s15ConversationKit11ParticipantVWOcTm_6(v3, (uint64_t)v123);
              OUTLINED_FUNCTION_41_0();
              swift_storeEnumTagMultiPayload();
              OUTLINED_FUNCTION_1_12();
              OUTLINED_FUNCTION_377();
              v106();

              _s15ConversationKit11ParticipantVWOhTm_4();
              uint64_t v92 = v60;
              goto LABEL_49;
            }
            _s15ConversationKit11ParticipantVWOhTm_4();
          }
        }
        else
        {
        }
      }
    }
    OUTLINED_FUNCTION_30_21();
    OUTLINED_FUNCTION_308();
    v72();
    if (!v129)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v128, &demangling cache variable for type metadata for Activity?);
LABEL_46:
      swift_storeEnumTagMultiPayload();
      OUTLINED_FUNCTION_1_12();
LABEL_47:
      OUTLINED_FUNCTION_50_2();
      v91();
LABEL_48:
      uint64_t v92 = v4;
LABEL_49:
      $defer #1 () in ConversationControlsManager.configureAppLaunchButtonType()(v92);
      OUTLINED_FUNCTION_28();
      return;
    }
    outlined init with take of Notice(&v128, (uint64_t)v130);
    __swift_project_boxed_opaque_existential_1(v130, v131);
    OUTLINED_FUNCTION_334();
    v73();
    uint64_t v74 = type metadata accessor for StagedCollaboration(0);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v74);
    outlined destroy of SystemUpdateNotice?((uint64_t)v14, &demangling cache variable for type metadata for StagedCollaboration?);
    if (EnumTagSinglePayload != 1) {
      goto LABEL_50;
    }
    uint64_t v76 = OUTLINED_FUNCTION_92_1(v130);
    char v78 = (void *)v77(v76);
    if (v78)
    {
      uint64_t v79 = v78;
      id v80 = objc_msgSend(v78, sel_state);

      if (v80 == (id)2) {
        goto LABEL_50;
      }
    }
    uint64_t v81 = v131;
    uint64_t v82 = v132;
    uint64_t v83 = __swift_project_boxed_opaque_existential_1(v130, v131);
    if ((specialized ConversationControlsManager.shouldShowCollaborationNotice(for:)((uint64_t)v83, v4, v81, v82) & 1) == 0) {
      goto LABEL_50;
    }
    char v84 = v131;
    __swift_project_boxed_opaque_existential_1(v130, v131);
    OUTLINED_FUNCTION_220();
    if ((v85() & 1) == 0)
    {
      __swift_project_boxed_opaque_existential_1(v130, v131);
      OUTLINED_FUNCTION_220();
      v94();
      if (!v95) {
        goto LABEL_51;
      }
      OUTLINED_FUNCTION_30_21();
      OUTLINED_FUNCTION_83_0();
      char v97 = v96();
      swift_bridgeObjectRelease();
      if (v97) {
        goto LABEL_51;
      }
      goto LABEL_50;
    }
    OUTLINED_FUNCTION_90_2();
    v86();
    OUTLINED_FUNCTION_27_26();
    OUTLINED_FUNCTION_74_2();
    v87();
    OUTLINED_FUNCTION_85_3();
    outlined init with copy of IDSLookupManager((uint64_t)v130, (uint64_t)&v128);
    if (v84)
    {
      uint64_t v88 = OUTLINED_FUNCTION_92_1(&v128);
      unint64_t v90 = (void *)v89(v88);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v128);
      if (v90) {
        goto LABEL_50;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v128);
    }
    uint64_t v98 = OUTLINED_FUNCTION_92_1(v130);
    uint64_t v100 = v99(v98);
    if (!v100
      || (unint64_t v101 = (void *)v100,
          char v102 = TUConversationActivitySession.generateSplitSessionState.getter(),
          v101,
          (v102 & 1) == 0))
    {
      __swift_project_boxed_opaque_existential_1(v130, v131);
      OUTLINED_FUNCTION_375();
      uint64_t v104 = v103;
      OUTLINED_FUNCTION_334();
      v105();
      OUTLINED_FUNCTION_33_0(v104, 1, v126);
      if (v52)
      {
        outlined destroy of SystemUpdateNotice?(v104, &demangling cache variable for type metadata for Collaboration?);
      }
      else
      {
        uint64_t v107 = v104;
        uint64_t v108 = v125;
        outlined init with take of Collaboration(v107, v125);
        if (*(unsigned char *)(v108 + 16) != 2)
        {
          swift_storeEnumTagMultiPayload();
          OUTLINED_FUNCTION_1_12();
          OUTLINED_FUNCTION_377();
          v121();
          _s15ConversationKit11ParticipantVWOhTm_4();
          goto LABEL_51;
        }
        _s15ConversationKit11ParticipantVWOhTm_4();
      }
      OUTLINED_FUNCTION_179();
      uint64_t v110 = v109();
      if (v110)
      {
        uint64_t v111 = (void *)v110;
        uint64_t v112 = specialized Conversation.activities.getter();
        uint64_t v113 = (void *)Array<A>.currentSharePlayActivity.getter(v112);

        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v113 = 0;
      }
      OUTLINED_FUNCTION_30_21();
      OUTLINED_FUNCTION_83_0();
      char v115 = v114();

      if ((v115 & 1) == 0)
      {
        OUTLINED_FUNCTION_30_21();
        OUTLINED_FUNCTION_83_0();
        uint64_t v117 = (void *)v116();
        if (v117)
        {
          uint64_t v118 = v117;
          id v119 = objc_msgSend(v117, sel_activity);
          objc_msgSend(v119, sel_isPlaceholderActivity);

          swift_storeEnumTagMultiPayload();
          OUTLINED_FUNCTION_1_12();
          OUTLINED_FUNCTION_377();
          v120();

          goto LABEL_51;
        }
      }
    }
LABEL_50:
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_1_12();
    OUTLINED_FUNCTION_50_2();
    v93();
LABEL_51:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
    goto LABEL_48;
  }
  OUTLINED_FUNCTION_28();
  $defer #1 () in ConversationControlsManager.configureAppLaunchButtonType()(v41);
}

void $defer #1 () in ConversationControlsManager.configureAppLaunchButtonType()(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (uint64_t *)((char *)&v26 - v13);
  uint64_t v15 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x930))(v12);
  swift_storeEnumTagMultiPayload();
  char v16 = static ConversationControlsAppLaunchButtonType.== infix(_:_:)((uint64_t)v14, (uint64_t)v11);
  _s15ConversationKit11ParticipantVWOhTm_4();
  uint64_t v17 = _s15ConversationKit11ParticipantVWOhTm_4();
  if ((v16 & 1) == 0) {
    return;
  }
  uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t))((*v15 & *a1) + 0x290))(v17);
  if (!v18) {
    return;
  }
  uint64_t v19 = v18;
  if (!objc_msgSend(v18, sel_avMode))
  {
LABEL_8:

    return;
  }
  uint64_t v20 = (*(uint64_t (**)(void))((*v15 & *a1) + 0x4C0))();
  if (!v20)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
    goto LABEL_10;
  }
  uint64_t v21 = (void *)v20;
  uint64_t v22 = v20 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo;
  swift_beginAccess();
  outlined init with copy of Participant?(v22, (uint64_t)v4, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);

  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
LABEL_10:

    outlined destroy of SystemUpdateNotice?((uint64_t)v4, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
    return;
  }
  outlined init with take of Collaboration((uint64_t)v4, (uint64_t)v7);
  if (v7[*(int *)(v5 + 24)])
  {
    _s15ConversationKit11ParticipantVWOhTm_4();
    goto LABEL_8;
  }
  uint64_t v23 = *(void **)&v7[*(int *)(v5 + 20)];
  *uint64_t v14 = v23;
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = *(void (**)(void *))((*v15 & *a1) + 0x938);
  id v25 = v23;
  v24(v14);

  _s15ConversationKit11ParticipantVWOhTm_4();
}

void specialized Conversation.currentScreenSharingRequest(ignoring:)()
{
  if (specialized Conversation.canDisplayScreenSharingRequest.getter())
  {
    id v1 = objc_msgSend(v0, sel_screenSharingRequests);
    OUTLINED_FUNCTION_301();
    lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue(&lazy protocol witness table cache variable for type TUScreenSharingRequest and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
    OUTLINED_FUNCTION_294();

    swift_bridgeObjectRetain();
    uint64_t v2 = OUTLINED_FUNCTION_30_15();
    specialized Set._Variant.filter(_:)(v2, v3);
    specialized Collection.first.getter();
    swift_release();
  }
  OUTLINED_FUNCTION_12_2();
}

uint64_t ConversationControlsManager.shouldShowCollaborationNotice(for:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return specialized ConversationControlsManager.shouldShowCollaborationNotice(for:)((uint64_t)v4, v1, v2, v3);
}

uint64_t ConversationControlsManager.isAlertAvailable.getter()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 1024))();
  if (result)
  {
    OUTLINED_FUNCTION_106_0();
    OUTLINED_FUNCTION_56_5();
    v3();
    OUTLINED_FUNCTION_338();
    return v0 & 1;
  }
  return result;
}

uint64_t ConversationControlsManager.featureFlags.getter()
{
  return swift_unknownObjectRetain();
}

void ConversationControlsManager.__allocating_init(activeCall:callCenter:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_74();
  uint64_t v5 = *(void *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_1();
  (*(void (**)(uint64_t))(v8 + 16))(v1);
  uint64_t v9 = OUTLINED_FUNCTION_39();
  specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(v9, v10, v1, v0, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_15_0();
}

void ConversationControlsManager.__allocating_init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v24 = v5;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = (char *)objc_allocWithZone(v2);
  uint64_t v16 = *(void *)(v11 + 24);
  uint64_t v15 = *(void *)(v11 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v11, v16);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = OUTLINED_FUNCTION_25_19(v18, v23);
  v20(v19);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v22 = swift_getObjectType();
  specialized ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)(v13, v1, v9, v24, v4, v14, ObjectType, v22, v16, v7, v15);
  __swift_destroy_boxed_opaque_existential_1(v11);
  OUTLINED_FUNCTION_28();
}

void ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v23 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v10 + 24);
  uint64_t v14 = *(void *)(v10 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v10, v15);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = OUTLINED_FUNCTION_25_19(v17, v22);
  v19(v18);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = swift_getObjectType();
  specialized ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)(v13, v1, v9, v5, v3, v23, ObjectType, v21, v15, v7, v14);
  __swift_destroy_boxed_opaque_existential_1(v11);
  OUTLINED_FUNCTION_28();
}

id ConduitApprovalDelegate.__allocating_init(_:)()
{
  id v1 = objc_allocWithZone((Class)OUTLINED_FUNCTION_276());
  return ConduitApprovalDelegate.init(_:)(v0);
}

id ConduitLagunaNoticeManager.__allocating_init(_:queue:callCenter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_3_74();
  id v5 = objc_allocWithZone(v3);
  uint64_t v6 = (void *)OUTLINED_FUNCTION_39();
  return ConduitLagunaNoticeManager.init(_:queue:callCenter:)(v6, v7, a3);
}

uint64_t ConversationControlsManager.updateShareButtonState()()
{
  unint64_t v2 = (unint64_t)v0;
  uint64_t v3 = *(void *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  uint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
  OUTLINED_FUNCTION_2();
  id v5 = (void *)MEMORY[0x1E4FBC8C8];
  if ((*v4 & 0xFFFFFFFFFFFFFFFELL) != 2) {
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_30_21();
  v6 += 78;
  uint64_t v7 = *v6;
  (*v6)();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_158_0();
  v8();
  uint64_t v9 = OUTLINED_FUNCTION_85_3();
  if (v1)
  {
    ((void (*)(uint64_t))v7)(v9);
    OUTLINED_FUNCTION_27_26();
    OUTLINED_FUNCTION_74_2();
    v10();
    OUTLINED_FUNCTION_85_3();
    char v11 = v1 ^ 1;
  }
  else
  {
LABEL_4:
    char v11 = 0;
  }
  uint64_t v12 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  uint64_t v13 = *(void *)(v12 + 8);
  swift_getObjectType();
  uint64_t v14 = v13 + 112;
  uint64_t v15 = *(void (**)(uint64_t))(v13 + 112);
  swift_unknownObjectRetain();
  uint64_t v16 = OUTLINED_FUNCTION_102();
  v15(v16);
  OUTLINED_FUNCTION_176();
  if (v13)
  {
    OUTLINED_FUNCTION_196_0();
    OUTLINED_FUNCTION_90_2();
    v17();
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_178();
    uint64_t v19 = v18();
    uint64_t v13 = v20;
    swift_unknownObjectRelease();
    uint64_t v21 = *(void *)(v12 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 48);
    swift_unknownObjectRetain();
    uint64_t v24 = v23(ObjectType, v21);
    uint64_t v26 = v25;
    swift_unknownObjectRelease();
    if (v19 == v24 && v13 == v26)
    {
      swift_bridgeObjectRelease_n();
      id v5 = (void *)MEMORY[0x1E4FBC8C8];
      goto LABEL_17;
    }
    OUTLINED_FUNCTION_102();
    char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v5 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v14 = v2 & 0xFFFFFFFFFFFFLL | 0x6AE1000000000000;
    if (v28) {
      goto LABEL_17;
    }
  }
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  __swift_project_value_buffer(v29, (uint64_t)static Logger.conversationControls);
  uint64_t v30 = (id)v2;
  char v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_107(v32))
  {
    swift_slowAlloc();
    v61[0] = OUTLINED_FUNCTION_273();
    *(_DWORD *)uint64_t v14 = 67110146;
    char v60 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 8) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 14) = 1024;
    OUTLINED_FUNCTION_196_0();
    os_log_type_t v34 = *(void (**)(void))(v33 + 624);
    OUTLINED_FUNCTION_242();
    v34();
    OUTLINED_FUNCTION_144_0();
    OUTLINED_FUNCTION_220();
    v35();

    swift_unknownObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v14 + 20) = 2080;
    OUTLINED_FUNCTION_242();
    v34();
    swift_getObjectType();
    OUTLINED_FUNCTION_235();
    uint64_t v37 = v36();
    unint64_t v39 = v38;
    swift_unknownObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 30) = 2080;
    uint64_t v40 = *(void *)(v12 + 8);
    uint64_t v41 = swift_getObjectType();
    os_log_type_t type = v13;
    uint64_t v13 = *(void *)(v40 + 48);
    swift_unknownObjectRetain();
    uint64_t v42 = ((uint64_t (*)(uint64_t, uint64_t))v13)(v41, v40);
    unint64_t v44 = v43;
    swift_unknownObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v44, v61);
    char v11 = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    id v5 = (void *)MEMORY[0x1E4FBC8C8];
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v31, type, "conversationSupportsSharePlay:%{BOOL}d, joinedConversation:%{BOOL}d, callIsConversation:%{BOOL}d, callUUID:%s, conversationControllerCallUUID:%s,", (uint8_t *)v14, 0x28u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
LABEL_17:
  OUTLINED_FUNCTION_379();
  OUTLINED_FUNCTION_83_0();
  v45();
  uint64_t v47 = v46;
  char v49 = v48;
  if (v11)
  {
    OUTLINED_FUNCTION_379();
    OUTLINED_FUNCTION_90_2();
    v50();
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_178();
    v51();
    OUTLINED_FUNCTION_176();
    OUTLINED_FUNCTION_196_0();
    OUTLINED_FUNCTION_50_2();
    char v53 = (void *)v52();
    if (v53)
    {
      uint64_t v54 = v53;
      int v55 = objc_msgSend(v53, sel_state) == (id)1;

      int v56 = v55 << 8;
    }
    else
    {
      int v56 = 0;
    }
  }
  else
  {
    int v56 = 0;
    LOBYTE(v13) = 0;
  }
  if (v13) {
    int v57 = 256;
  }
  else {
    int v57 = 0;
  }
  return (*(uint64_t (**)(void, uint64_t, void))((*v5 & *(void *)v2) + 0x648))(v57 & 0xFFFFFFFE | v11 & 1, v47, v56 | v49 & 1u);
}

Swift::Void __swiftcall ConversationControlsManager.setupConversationControllerObservers()()
{
  ConversationControlsManager.setupConversationControllerLocalStateObservers()();
  ConversationControlsManager.setupConversationControllerConversationStateObservers()();
  ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()();
  ConversationControlsManager.setupConversationControllerSharePlayStateObservers()();
  ConversationControlsManager.setupConversationControllerGondolaStateObservers()();
  ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()();
  ConversationControlsManager.setupGreenTea3PStateObservers()();
}

void closure #1 in ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    id v5 = (void *)v4;
    outlined init with copy of Participant?(a1, (uint64_t)&v38, &demangling cache variable for type metadata for Notice?);
    if (v39)
    {
      outlined init with take of Notice(&v38, (uint64_t)v42);
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      __swift_project_value_buffer(v6, (uint64_t)static Logger.conversationControls);
      outlined init with copy of IDSLookupManager((uint64_t)v42, (uint64_t)&v38);
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled((os_log_t)v7, v8))
      {
        uint64_t v9 = (_DWORD *)OUTLINED_FUNCTION_37();
        uint64_t v10 = OUTLINED_FUNCTION_9_0();
        uint64_t v37 = v10;
        _DWORD *v9 = 136315138;
        uint64_t v11 = v39;
        uint64_t v12 = v40;
        uint64_t v20 = OUTLINED_FUNCTION_352(v10, v13, v14, v15, v16, v17, v18, v19, v36, v37, v38);
        __swift_project_boxed_opaque_existential_1(v20, v21);
        uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 120))(v11, v12);
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v37);
        OUTLINED_FUNCTION_14_5();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
        OUTLINED_FUNCTION_154_0(&dword_1C2F90000, v7, v24, "Present activeNotice: %s");
        OUTLINED_FUNCTION_78_0();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
      }

      OUTLINED_FUNCTION_30_21();
      OUTLINED_FUNCTION_126_0();
      if (v31())
      {
        uint64_t v32 = OUTLINED_FUNCTION_27_26();
        outlined init with copy of IDSLookupManager((uint64_t)v42, (uint64_t)&v38);
        char v41 = 0;
        (*(void (**)(long long *, void, void, uint64_t, uint64_t))(v7 + 80))(&v38, 0, 0, v32, v7);
        swift_unknownObjectRelease();
        outlined destroy of ConversationControlsType((uint64_t)&v38);
      }
      OUTLINED_FUNCTION_30_21();
      OUTLINED_FUNCTION_298();
      if (v33())
      {
        uint64_t v34 = OUTLINED_FUNCTION_27_26();
        outlined init with copy of IDSLookupManager((uint64_t)v42, (uint64_t)&v38);
        char v41 = 0;
        OUTLINED_FUNCTION_272();
        v35(2, &v38, 0, 0, v34, v7);
        swift_unknownObjectRelease();

        outlined destroy of ConversationControlsType((uint64_t)&v38);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
        goto LABEL_19;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v38, &demangling cache variable for type metadata for Notice?);
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for Logger();
      uint64_t v26 = (void *)OUTLINED_FUNCTION_30(v25, (uint64_t)static Logger.conversationControls);
      os_log_type_t v27 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_2_12(v27))
      {
        char v28 = (_WORD *)OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_22_1(v28);
        OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v29, v30, "No activeNotice to present, reset to HUD");
        OUTLINED_FUNCTION_3();
      }

      OUTLINED_FUNCTION_383();
    }
  }
LABEL_19:
  OUTLINED_FUNCTION_249();
}

Swift::Void __swiftcall ConversationControlsManager.resetToHUD()()
{
}

void ConversationControlsManager.__deallocating_deinit()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = (char *)v0;
  OUTLINED_FUNCTION_161();
  (*(void (**)(void))(v4 + 624))();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_74_2();
  v5();
  OUTLINED_FUNCTION_85_3();
  if ((v1 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_21();
    OUTLINED_FUNCTION_83_0();
    uint64_t v7 = (void (*)(uint64_t *, void))v6();
    *(void *)(v8 + 8) = 0;
    *(unsigned char *)(v8 + 16) = 1;
    v7(&v28, 0);
  }
  id v9 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_neighborhoodActivityConduit);
  id v10 = objc_msgSend(v9, sel_approvalDelegate);
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate);
  if (!v10)
  {
    if (v11) {
      goto LABEL_10;
    }
LABEL_9:
    objc_msgSend(v9, sel_setApprovalDelegate_, 0);
    goto LABEL_10;
  }
  uint64_t v0 = (uint64_t)v10;
  swift_unknownObjectRelease();
  if (v11) {
    BOOL v12 = v0 == v11;
  }
  else {
    BOOL v12 = 0;
  }
  if (v12) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v13 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_2();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v16 = OUTLINED_FUNCTION_8(v15);
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_60();
  uint64_t v17 = OUTLINED_FUNCTION_362();
  outlined init with copy of Participant?(v17, v18, (uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v19 = OUTLINED_FUNCTION_287();
  OUTLINED_FUNCTION_33_0(v19, v20, v13);
  if (v12)
  {
    outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    OUTLINED_FUNCTION_63_0();
    v21();
    CNKCoreAnalyticsReporter.reportAVLessLeaveConfirmation(presentedAt:action:)(v2, 2);
    uint64_t v22 = OUTLINED_FUNCTION_29_0();
    v23(v22);
  }
  uint64_t v24 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeShareCardHandle;
  uint64_t v25 = *(void *)&v3[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeShareCardHandle];
  if (v25)
  {
    objc_msgSend(*(id *)(v25 + 16), sel_invalidate);

    *(void *)&v3[v24] = 0;
    swift_release();
  }
  else
  {
  }
  uint64_t v26 = (objc_class *)type metadata accessor for ConversationControlsManager(0);
  v27.receiver = v3;
  v27.super_class = v26;
  objc_msgSendSuper2(&v27, sel_dealloc);
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationControlsManager.updateControlsState()()
{
  OUTLINED_FUNCTION_99();
  if (((*(uint64_t (**)(void))(v0 + 800))() & 1) == 0) {
    OUTLINED_FUNCTION_2();
  }
  ConversationControlsManager.localAudioEnabled.setter();
  ConversationControlsManager.localVideoButtonState.getter();
  ConversationControlsManager.localVideoButtonState.setter();
  ConversationController.hasMessageCapableRemoteParticipants.getter();
  ConversationControlsManager.shouldOpenMessages.setter();
  OUTLINED_FUNCTION_2();
  ConversationControlsManager.shouldEnableStartingStagedActivity.setter();
  if (ConversationController.audioRoute.getter())
  {
    OUTLINED_FUNCTION_30_21();
    uint64_t v2 = *(uint64_t (**)(void))(v1 + 1408);
    id v4 = v3;
    uint64_t v5 = v2();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TURoute);
      id v7 = v4;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8) {
        goto LABEL_9;
      }
    }
    else
    {
    }
    id v9 = (void *)ConversationController.audioRoute.getter();
    ConversationControlsManager.audioRoute.setter(v9);
LABEL_9:
  }
  ConversationControlsManager.updateShareButtonState()();
  OUTLINED_FUNCTION_30_21();
  (*(void (**)(void))(v10 + 2400))();
}

Swift::Void __swiftcall ConversationControlsManager.updateConversation()()
{
  ConversationController.lookupActiveConversation()();
  ConversationController.update(with:)((uint64_t)v0);
  outlined destroy of SystemUpdateNotice?((uint64_t)v0, &demangling cache variable for type metadata for Conversation?);
}

Swift::Void __swiftcall ConversationControlsManager.updateControlsCornerRadius()()
{
  OUTLINED_FUNCTION_0_20();
  if ((*(uint64_t (**)(void))(v0 + 1024))())
  {
    OUTLINED_FUNCTION_106_0();
    OUTLINED_FUNCTION_56_5();
    v1();
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall ConversationControlsManager.reviewLMIRequests()()
{
  char v1 = OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  char v3 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v0 = static OS_dispatch_queue.main.getter();
  uint64_t v4 = OUTLINED_FUNCTION_2_52();
  v5(v4);
  _dispatchPreconditionTest(_:)();
  uint64_t v6 = OUTLINED_FUNCTION_1_18();
  v7(v6);
  if ((v3 & 1) == 0)
  {
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_30_21();
  v8 += 134;
  id v9 = *v8;
  if ((*v8)()
    && (OUTLINED_FUNCTION_27_26(),
        OUTLINED_FUNCTION_157_2(),
        OUTLINED_FUNCTION_74_2(),
        v10(),
        uint64_t v11 = OUTLINED_FUNCTION_85_3(),
        (v1 & 1) != 0))
  {
    if (!((uint64_t (*)(uint64_t))v9)(v11)) {
      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_30_21();
    OUTLINED_FUNCTION_83_0();
    v12();
    OUTLINED_FUNCTION_1_12();
    if (!(*(uint64_t (**)(void))(v13 + 1024))()) {
      return;
    }
  }
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_56_5();
  v14();
  swift_unknownObjectRelease();
}

void ConversationControlsManager.reloadDetailsView(participant:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_60();
  uint64_t v6 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_16_0();
  outlined init with copy of Participant?(v3, v0, &demangling cache variable for type metadata for Participant?);
  uint64_t v8 = OUTLINED_FUNCTION_287();
  if (__swift_getEnumTagSinglePayload(v8, v9, v6) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_380();
    if ((*(uint64_t (**)(void))(v10 + 1096))())
    {
      OUTLINED_FUNCTION_371();
      ConversationController.visibleParticipants.getter();
      v34[0] = 513;
      OUTLINED_FUNCTION_368();
      v11();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_41_0();
    outlined init with take of Collaboration(v12, v13);
    OUTLINED_FUNCTION_380();
    if ((*(uint64_t (**)(void))(v14 + 1096))())
    {
      uint64_t v15 = OUTLINED_FUNCTION_144_0();
      (*(void (**)(uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v3 + 32))(v1, 0x7FFFFFCFELL, 0, 0, v15, v3);
      swift_unknownObjectRelease();
    }
    _s15ConversationKit11ParticipantVWOhTm_4();
  }
  OUTLINED_FUNCTION_227();
  uint64_t v17 = *(void (**)(void))(v16 + 976);
  OUTLINED_FUNCTION_299();
  v17();
  if (v35)
  {
    outlined init with copy of IDSLookupManager((uint64_t)v34, (uint64_t)v33);
    outlined destroy of SystemUpdateNotice?((uint64_t)v34, &demangling cache variable for type metadata for CallControlsService?);
    uint64_t v18 = OUTLINED_FUNCTION_109();
    (*(void (**)(void *))(v19 + 2112))(v18);
    OUTLINED_FUNCTION_186();
    v20();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v34, &demangling cache variable for type metadata for CallControlsService?);
  }
  OUTLINED_FUNCTION_299();
  v17();
  if (v35)
  {
    outlined init with copy of IDSLookupManager((uint64_t)v34, (uint64_t)v33);
    outlined destroy of SystemUpdateNotice?((uint64_t)v34, &demangling cache variable for type metadata for CallControlsService?);
    OUTLINED_FUNCTION_109();
    OUTLINED_FUNCTION_50_2();
    uint64_t v22 = v21();
    if (v22)
    {
      uint64_t v23 = v22;
      *((void *)&v31 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
      uint64_t v32 = &protocol witness table for TUConversation;
      *(void *)&long long v30 = v23;
    }
    else
    {
      uint64_t v32 = 0;
      long long v30 = 0u;
      long long v31 = 0u;
    }
    OUTLINED_FUNCTION_342();
    v29(v24, v25, v26, v27, v28);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v30, &demangling cache variable for type metadata for Conversation?);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v34, &demangling cache variable for type metadata for CallControlsService?);
  }
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationControlsManager.reloadDetailsView(isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  OUTLINED_FUNCTION_0_20();
  if ((*(uint64_t (**)(void))(v1 + 1096))())
  {
    swift_getObjectType();
    ConversationController.visibleParticipants.getter();
    OUTLINED_FUNCTION_368();
    v2();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

uint64_t ConversationControlsManager.reloadDetailsView(participant:isKickingAvailable:)()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t result = (*(uint64_t (**)(void))(v0 + 1096))();
  if (result)
  {
    OUTLINED_FUNCTION_144_0();
    OUTLINED_FUNCTION_368();
    v2();
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall ConversationControlsManager.updateDetailsViewMode()()
{
  OUTLINED_FUNCTION_175();
  uint64_t v15 = v0;
  uint64_t v16 = v1;
  OUTLINED_FUNCTION_99();
  v2 += 122;
  uint64_t v3 = *v2;
  ((void (*)(void *__return_ptr))*v2)(v13);
  if (v14)
  {
    outlined init with copy of IDSLookupManager((uint64_t)v13, (uint64_t)v11);
    outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for CallControlsService?);
    __swift_project_boxed_opaque_existential_1(v11, v12);
    OUTLINED_FUNCTION_1_12();
    (*(void (**)(void))(v4 + 624))();
    OUTLINED_FUNCTION_165();
    OUTLINED_FUNCTION_166_0();
    v5();
    OUTLINED_FUNCTION_229();
    OUTLINED_FUNCTION_342();
    v6();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for CallControlsService?);
  }
  OUTLINED_FUNCTION_299();
  v3();
  if (v14)
  {
    outlined init with copy of IDSLookupManager((uint64_t)v13, (uint64_t)v11);
    outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for CallControlsService?);
    __swift_project_boxed_opaque_existential_1(v11, v12);
    OUTLINED_FUNCTION_1_12();
    (*(void (**)(void))(v7 + 2112))();
    OUTLINED_FUNCTION_186();
    v8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for CallControlsService?);
  }
  OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_83_0();
  if (v9())
  {
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_56_5();
    v10();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_183();
}

uint64_t ConversationControlsManager.updateDetails(for:)()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t result = (*(uint64_t (**)(void))(v0 + 1096))();
  if (result)
  {
    OUTLINED_FUNCTION_27_26();
    uint64_t v2 = OUTLINED_FUNCTION_198_0();
    v3(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall ConversationControlsManager.layoutStyleUpdated()()
{
  OUTLINED_FUNCTION_0_20();
  if ((*(uint64_t (**)(void))(v0 + 1096))())
  {
    OUTLINED_FUNCTION_106_0();
    OUTLINED_FUNCTION_56_5();
    v1();
    swift_unknownObjectRelease();
  }
}

void ConversationControlsManager.bannerPresentationManagerDidDismissBanner(type:reason:)(uint64_t a1, uint64_t a2)
{
  outlined init with copy of ConversationControlsType(a1, (uint64_t)&v14);
  if (v17 == 2)
  {
    uint64_t v8 = v14;
    OUTLINED_FUNCTION_0_20();
    uint64_t v10 = (*(uint64_t (**)(void))(v9 + 1216))();
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      id v12 = v8;
      OUTLINED_FUNCTION_30_15();
      ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:)();
    }
    else
    {
    }
  }
  else if (v17 == 6 {
         && ((int8x16_t v4 = vorrq_s8(v15, v16),
  }
              int8x8_t v5 = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)),
              v14 == (void *)24)
           ? (BOOL v6 = *(void *)&v5 == 0)
           : (BOOL v6 = 0),
             v6))
  {
    if ((unint64_t)(a2 - 1) <= 1)
    {
      OUTLINED_FUNCTION_0_20();
      (*(void (**)(void))(v13 + 2400))();
    }
  }
  else
  {
    OUTLINED_FUNCTION_0_20();
    if ((*(uint64_t (**)(void))(v7 + 1216))())
    {
      OUTLINED_FUNCTION_89();
      ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:)();
    }
    outlined destroy of ConversationControlsType((uint64_t)&v14);
  }
}

void ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  int8x16_t v4 = v3;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  int8x8_t v5 = (void *)OUTLINED_FUNCTION_3_0();
  v5[2] = v4;
  v5[3] = v2;
  v5[4] = v0;
  v14[4] = partial apply for closure #1 in ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:);
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v14[2] = thunk for @escaping @callee_guaranteed () -> ();
  v14[3] = &block_descriptor_85;
  BOOL v6 = _Block_copy(v14);
  id v7 = v4;
  id v8 = v0;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_5_1();
  v14[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAED0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_300();
  _Block_release(v6);

  uint64_t v11 = OUTLINED_FUNCTION_21_3();
  v12(v11);
  OUTLINED_FUNCTION_139();
  v13();
  OUTLINED_FUNCTION_28();
}

#error "1C328CFB4: call analysis failed (funcsize=176)"

uint64_t ConversationControlsManager.notifyDelegates(about:forceUpdate:)(uint64_t a1, uint64_t a2, char a3)
{
  int8x16_t v4 = v3;
  BOOL v6 = (void *)MEMORY[0x1E4FBC8C8];
  if (!a1) {
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x270))();
  }
  uint64_t v7 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 88);
  swift_unknownObjectRetain();
  if (v9(ObjectType, v7))
  {
    ConversationControlsManager.controlsHUDUpdate(for:)(v7, (uint64_t)v24);
    ConversationController.lookupActiveConversation()();
    uint64_t v10 = v22;
    if (v22)
    {
      uint64_t v11 = v23;
      __swift_project_boxed_opaque_existential_1(v21, v22);
      BOOL v12 = Conversation.isContinuitySession.getter(v10, v11);
      uint64_t updated = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      if (v12)
      {
LABEL_13:
        if ((*(uint64_t (**)(uint64_t))((*v6 & *v4) + 0x430))(updated))
        {
          uint64_t v19 = v18;
          uint64_t v20 = swift_getObjectType();
          (*(void (**)(unsigned char *, void, void, uint64_t, uint64_t))(v19 + 80))(v24, v24[42], a3 & 1, v20, v19);
          swift_unknownObjectRelease();
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
        lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
        Subject<>.send()();
        swift_unknownObjectRelease();
        return outlined destroy of ControlsHUDUpdate((uint64_t)v24);
      }
    }
    else
    {
      uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v21, &demangling cache variable for type metadata for Conversation?);
    }
    uint64_t updated = (*(uint64_t (**)(uint64_t))((*v6 & *v4) + 0x400))(updated);
    if (updated)
    {
      uint64_t v16 = v15;
      uint64_t v17 = swift_getObjectType();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 16))(v24, v24[41], v17, v16);
      uint64_t updated = swift_unknownObjectRelease();
    }
    goto LABEL_13;
  }
  return swift_unknownObjectRelease();
}

uint64_t key path getter for ConversationControlsManager.updateForegroundCollaborationStateTask : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x9D8))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationControlsManager.updateForegroundCollaborationStateTask : ConversationControlsManager(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x9E0);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t ConversationControlsManager.updateForegroundCollaborationStateTask.getter()
{
  return ConversationControlsManager.incomingScreenSharingRequestActivity.getter();
}

uint64_t ConversationControlsManager.updateForegroundCollaborationStateTask.setter(uint64_t a1)
{
  return ConversationControlsManager.incomingScreenSharingRequestActivity.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_updateForegroundCollaborationStateTask);
}

uint64_t ConversationControlsManager.incomingScreenSharingRequestActivity.setter(uint64_t a1, void *a2)
{
  int8x16_t v4 = (void *)(v2 + *a2);
  OUTLINED_FUNCTION_11_0();
  *int8x16_t v4 = a1;
  return swift_release();
}

uint64_t (*ConversationControlsManager.updateForegroundCollaborationStateTask.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

Swift::Void __swiftcall ConversationControlsManager.updateForegroundCollaborationState()()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_223();
  OUTLINED_FUNCTION_0_3();
  if ((*(uint64_t (**)(void))(v4 + 2520))())
  {
    MEMORY[0x1C8773690]();
    swift_release();
  }
  uint64_t v5 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_24_6(v5);
  type metadata accessor for MainActor();
  id v6 = v0;
  uint64_t v7 = static MainActor.shared.getter();
  id v8 = (void *)OUTLINED_FUNCTION_12_6();
  uint64_t v9 = MEMORY[0x1E4FBCFD8];
  void v8[2] = v7;
  v8[3] = v9;
  v8[4] = v6;
  v8[5] = ObjectType;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  OUTLINED_FUNCTION_1_12();
  (*(void (**)(void))(v10 + 2528))();
}

uint64_t closure #1 in ConversationControlsManager.updateForegroundCollaborationState()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[19] = a4;
  v4[20] = type metadata accessor for StagedCollaboration(0);
  v4[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = type metadata accessor for Collaboration(0);
  v4[25] = swift_task_alloc();
  v4[26] = type metadata accessor for ForegroundCollaborationState(0);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[32] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[33] = v6;
  v4[34] = v5;
  return MEMORY[0x1F4188298](closure #1 in ConversationControlsManager.updateForegroundCollaborationState(), v6, v5);
}

uint64_t closure #1 in ConversationControlsManager.updateForegroundCollaborationState()()
{
  uint64_t v1 = (id *)(v0 + 152);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 152)) + 0x7D8);
  v3();
  swift_storeEnumTagMultiPayload();
  if (one-time initialization token for shareableContent != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(v0 + 152);
  uint64_t v5 = type metadata accessor for Logger();
  *(void *)(v0 + 280) = __swift_project_value_buffer(v5, (uint64_t)static Logger.shareableContent);
  id v6 = v4;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void **)(v0 + 152);
    int v56 = v7;
    uint64_t v10 = (_DWORD *)OUTLINED_FUNCTION_37();
    OUTLINED_FUNCTION_9_0();
    *uint64_t v10 = 136315138;
    v3();
    ForegroundCollaborationState.description.getter();
    _s15ConversationKit11ParticipantVWOhTm_4();
    uint64_t v11 = OUTLINED_FUNCTION_286();
    *(void *)(v0 + 144) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
    OUTLINED_FUNCTION_335(&dword_1C2F90000, v56, v8, "updateForegroundCollaborationState: Current state: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    id v14 = *v1;
  }
  OUTLINED_FUNCTION_359();
  OUTLINED_FUNCTION_279();
  if ((v15() & 1) == 0) {
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_162_0();
  uint64_t v17 = (char *)(*(uint64_t (**)(void))(v16 + 1912))();
  *(void *)(v0 + 288) = v17;
  if (!v17) {
    goto LABEL_14;
  }
  uint64_t v18 = v17;
  if ((*(uint64_t (**)(void))((*v2 & *(void *)v17) + 0x80))()) {
    goto LABEL_13;
  }
  uint64_t v19 = (char *)*v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_entitlementsChecker;
  uint64_t v20 = v19[4];
  __swift_project_boxed_opaque_existential_1(v19, v19[3]);
  int v57 = &v18[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier];
  uint64_t v21 = *(uint64_t (**)(uint64_t))(v20 + 8);
  swift_bridgeObjectRetain();
  uint64_t v22 = OUTLINED_FUNCTION_233();
  char v23 = v21(v22);
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
LABEL_13:

LABEL_14:
    swift_release();
    uint64_t v29 = (char *)Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_2_12(v30))
    {
      long long v31 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_231(v31);
      OUTLINED_FUNCTION_374(&dword_1C2F90000, v32, v33, "updateForegroundCollaborationState: Foreground app supports SharePlay or does not support Collaboration");
      OUTLINED_FUNCTION_3();
    }
    goto LABEL_16;
  }
  uint64_t v25 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  OUTLINED_FUNCTION_162_0();
  v26 += 285;
  uint64_t v27 = *v26;
  *(void *)(v0 + 296) = *v26;
  *(void *)(v0 + 304) = (unint64_t)v26 & 0xFFFFFFFFFFFFLL | 0x2BC8000000000000;
  v27();
  OUTLINED_FUNCTION_33_0(v25, 1, v24);
  if (v40)
  {
    uint64_t v28 = *(void *)(v0 + 184);
    _s15ConversationKit11ParticipantVWOhTm_4();
    outlined destroy of SystemUpdateNotice?(v28, &demangling cache variable for type metadata for Collaboration?);
  }
  else
  {
    uint64_t v38 = *(void *)(v0 + 200);
    outlined init with take of Collaboration(*(void *)(v0 + 184), v38);
    uint64_t v39 = *(void *)(v38 + 40);
    if (v39)
    {
      BOOL v40 = *(void *)(v38 + 32) == *(void *)v57 && v39 == *((void *)v57 + 1);
      if (v40)
      {
        _s15ConversationKit11ParticipantVWOhTm_4();
LABEL_32:
        uint64_t v42 = *(void *)(v0 + 232);
        uint64_t v43 = *(void *)(v0 + 200) + *(int *)(*(void *)(v0 + 192) + 44);
        type metadata accessor for URL();
        OUTLINED_FUNCTION_0();
        (*(void (**)(uint64_t, uint64_t))(v44 + 16))(v42, v43);
        _s15ConversationKit11ParticipantVWOhTm_4();
        OUTLINED_FUNCTION_34_9();
        swift_storeEnumTagMultiPayload();
        uint64_t v45 = OUTLINED_FUNCTION_35();
        outlined init with take of Collaboration(v45, v46);
        goto LABEL_33;
      }
      char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
      _s15ConversationKit11ParticipantVWOhTm_4();
      if (v41) {
        goto LABEL_32;
      }
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_4();
    }
    _s15ConversationKit11ParticipantVWOhTm_4();
  }
  swift_storeEnumTagMultiPayload();
LABEL_33:
  OUTLINED_FUNCTION_162_0();
  uint64_t v48 = (*(uint64_t (**)(void))(v47 + 776))();
  *(void *)(v0 + 312) = v48;
  if (v48)
  {
    char v49 = (void *)v48;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 120;
    *(void *)(v0 + 24) = closure #1 in ConversationControlsManager.updateForegroundCollaborationState();
    uint64_t v50 = swift_continuation_init();
    *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSArray, @unowned NSError?) -> () with result type [SWShareableContent];
    *(void *)(v0 + 104) = &block_descriptor_491;
    *(void *)(v0 + 112) = v50;
    objc_msgSend(v49, sel_retrieveShareableContentWithCompletion_, v0 + 80);
    return MEMORY[0x1F41881E8](v0 + 16);
  }
  swift_release();
  uint64_t v29 = (char *)Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_2_12(v51))
  {
    char v52 = v18;
    char v53 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_231(v53);
    OUTLINED_FUNCTION_374(&dword_1C2F90000, v54, v55, "updateForegroundCollaborationState: contentExtractor is nil");
    OUTLINED_FUNCTION_3();
    uint64_t v18 = v29;
    uint64_t v29 = v52;
  }

LABEL_16:
  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    _s15ConversationKit11ParticipantVWOcTm_6(*(void *)(v0 + 240), *(void *)(v0 + 232));
    uint64_t v34 = OUTLINED_FUNCTION_356();
    v35(v34);
  }
  OUTLINED_FUNCTION_123_0();
  _s15ConversationKit11ParticipantVWOhTm_4();
  _s15ConversationKit11ParticipantVWOhTm_4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v36();
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_13_1();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  uint64_t v4 = v3[6];
  *(void *)(v1 + 320) = v4;
  uint64_t v5 = v3[34];
  id v6 = v3[33];
  if (v4) {
    uint64_t v7 = closure #1 in ConversationControlsManager.updateForegroundCollaborationState();
  }
  else {
    uint64_t v7 = closure #1 in ConversationControlsManager.updateForegroundCollaborationState();
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  void *v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  char v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t (*v41)(void);
  void (*v43)(void);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, void, uint64_t);
  void (*v47)(void);
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(void);
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(void);
  char v71;
  void *v72;
  os_log_type_t v73;
  _WORD *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  void (*v79)(void);
  void (*v80)(void);
  void (*v81)(void);
  void (*v82)(void);
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(void);
  char v98;
  void (*v99)(void);
  void *v100;
  os_log_type_t v101;
  _WORD *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  void *v106;
  void (*v107)(void);
  void (*v108)(void);
  uint64_t v109;
  void (*v110)(void);
  void *v111;
  os_log_type_t v112;
  _WORD *v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  void *v117;
  void (*v118)(void);
  uint64_t v119;
  void (*v120)(uint64_t, void, uint64_t);
  uint64_t v121;
  void (*v122)(void);
  char v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;

  swift_release();
  uint64_t v1 = *(void *)(v0 + 120);
  if (v1 >> 62) {
    goto LABEL_73;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2)
  {
LABEL_10:
    swift_bridgeObjectRelease_n();
    os_log_type_t v8 = Logger.logObject.getter();
    uint64_t v9 = static os_log_type_t.debug.getter();
    uint64_t v10 = OUTLINED_FUNCTION_104(v9);
    uint64_t v11 = *(void **)(v0 + 288);
    if (v10)
    {
      unint64_t v12 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v12);
      OUTLINED_FUNCTION_102_1(&dword_1C2F90000, v8, (os_log_type_t)v2, "updateForegroundCollaborationState: No shareable content");
      OUTLINED_FUNCTION_3();
    }

    goto LABEL_23;
  }
LABEL_3:
  uint64_t v3 = 0;
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = OUTLINED_FUNCTION_351();
      uint64_t v5 = (id)MEMORY[0x1C87744F0](v4);
    }
    else
    {
      uint64_t v5 = *(id *)(v1 + 8 * v3 + 32);
    }
    id v6 = v5;
    uint64_t v7 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
LABEL_73:
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        goto LABEL_10;
      }
      goto LABEL_3;
    }
    if (objc_msgSend(v5, sel_hasPossibleCollaborationRepresentation)) {
      break;
    }

    ++v3;
    if (v7 == v2) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v13 = type metadata accessor for URL();
  OUTLINED_FUNCTION_4();
  uint64_t v15 = v14;
  uint64_t v126 = swift_task_alloc();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_8(v16);
  uint64_t v17 = swift_task_alloc();
  uint64_t v18 = swift_task_alloc();
  uint64_t v125 = v6;
  uint64_t v19 = objc_msgSend(v125, sel_highlightURL);
  uint64_t v20 = swift_task_alloc();
  if (v19)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
  __swift_storeEnumTagSinglePayload(v20, v21, 1, v13);
  outlined init with take of ConversationControlsRecipe?(v20, v18, &demangling cache variable for type metadata for URL?);
  uint64_t v22 = OUTLINED_FUNCTION_287();
  OUTLINED_FUNCTION_33_0(v22, v23, v13);
  if (v30)
  {
    swift_task_dealloc();
    outlined destroy of SystemUpdateNotice?(v18, &demangling cache variable for type metadata for URL?);
    swift_task_dealloc();
    OUTLINED_FUNCTION_218();
    __swift_storeEnumTagSinglePayload(v24, v25, v26, v13);
  }
  else
  {
    URL.withoutFragment.getter(v17);
    uint64_t v27 = v13;
    uint64_t v28 = *(void (**)(void))(v15 + 8);
    uint64_t v29 = OUTLINED_FUNCTION_286();
    ((void (*)(uint64_t))v28)(v29);
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_33_0(v17, 1, v13);
    if (!v30)
    {
      uint64_t v122 = v28;
      uint64_t v43 = *(void (**)(void))(v0 + 296);
      uint64_t v44 = *(void *)(v0 + 192);
      uint64_t v45 = *(void *)(v0 + 176);
      OUTLINED_FUNCTION_157_2();
      char v120 = v46;
      OUTLINED_FUNCTION_63_0();
      v47();
      swift_task_dealloc();
      uint64_t v121 = swift_task_alloc();
      uint64_t v48 = swift_task_alloc();
      v43();
      OUTLINED_FUNCTION_33_0(v45, 1, v44);
      uint64_t v124 = v27;
      if (v49)
      {
        char v52 = v15;
        outlined destroy of SystemUpdateNotice?(*(void *)(v0 + 176), &demangling cache variable for type metadata for Collaboration?);
        OUTLINED_FUNCTION_64_2(v48, 1);
        char v53 = v122;
      }
      else
      {
        uint64_t v50 = *(void *)(v0 + 176) + *(int *)(*(void *)(v0 + 192) + 44);
        os_log_type_t v51 = swift_task_alloc();
        char v52 = v15;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v51, v50, v27);
        _s15ConversationKit11ParticipantVWOhTm_4();
        URL.withoutFragment.getter(v48);
        char v53 = v122;
        OUTLINED_FUNCTION_15();
        v122();
        swift_task_dealloc();
        OUTLINED_FUNCTION_33_0(v48, 1, v27);
        if (!v54)
        {
          OUTLINED_FUNCTION_233();
          OUTLINED_FUNCTION_63_0();
          v70();
          swift_task_dealloc();
          unint64_t v71 = MEMORY[0x1C876EE60](v126, v121);
          if (v71)
          {
            uint64_t v72 = (void *)Logger.logObject.getter();
            uint64_t v73 = static os_log_type_t.debug.getter();
            if (OUTLINED_FUNCTION_12_4(v73))
            {
              uint64_t v74 = (_WORD *)OUTLINED_FUNCTION_8_0();
              OUTLINED_FUNCTION_231(v74);
              OUTLINED_FUNCTION_209(&dword_1C2F90000, v75, v76, "updateForegroundCollaborationState: Staged highlight URL matches current conversation collaboration, setting state to active");
              OUTLINED_FUNCTION_3();
            }
            char v77 = *(void **)(v0 + 312);
            char v78 = *(void **)(v0 + 288);

            OUTLINED_FUNCTION_15();
            v79();
            _s15ConversationKit11ParticipantVWOhTm_4();
            OUTLINED_FUNCTION_63_0();
            v80();
            swift_storeEnumTagMultiPayload();
            swift_task_dealloc();
            swift_task_dealloc();
            goto LABEL_23;
          }
          OUTLINED_FUNCTION_15();
          v122();
LABEL_34:
          uint64_t v55 = *(void *)(v0 + 248);
          int v56 = *(void *)(v0 + 224);
          swift_task_dealloc();
          int v57 = swift_task_alloc();
          OUTLINED_FUNCTION_218();
          __swift_storeEnumTagSinglePayload(v58, v59, v60, v27);
          double v61 = swift_task_alloc();
          _s15ConversationKit11ParticipantVWOcTm_6(v55, v56);
          os_log_type_t v62 = v52;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date));
              OUTLINED_FUNCTION_63_0();
              v81();
              type metadata accessor for Date();
              OUTLINED_FUNCTION_0();
              os_log_type_t v62 = v52;
              OUTLINED_FUNCTION_26_2();
              v82();
              goto LABEL_43;
            case 2u:
              v120(v61, *(void *)(v0 + 224), v27);
LABEL_43:
              uint64_t v65 = swift_task_alloc();
              URL.withoutFragment.getter(v65);
              OUTLINED_FUNCTION_15();
              v53();
              outlined destroy of SystemUpdateNotice?(v57, &demangling cache variable for type metadata for URL?);
              goto LABEL_49;
            case 3u:
            case 4u:
              goto LABEL_50;
            default:
              id v119 = v52;
              id v63 = *(void *)(v0 + 160);
              uint64_t v64 = *(void *)(v0 + 168);
              outlined init with take of Collaboration(*(void *)(v0 + 224), v64);
              uint64_t v65 = swift_task_alloc();
              uint64_t v66 = swift_task_alloc();
              uint64_t v67 = objc_msgSend(*(id *)(v64 + *(int *)(v63 + 40)), sel_highlightURL);
              uint64_t v68 = swift_task_alloc();
              if (v67)
              {
                static URL._unconditionallyBridgeFromObjectiveC(_:)();

                uint64_t v69 = 0;
              }
              else
              {
                uint64_t v69 = 1;
              }
              OUTLINED_FUNCTION_64_2(v68, v69);
              outlined init with take of ConversationControlsRecipe?(v68, v66, &demangling cache variable for type metadata for URL?);
              os_log_type_t v62 = v119;
              if (__swift_getEnumTagSinglePayload(v66, 1, v27) == 1)
              {
                uint64_t v83 = OUTLINED_FUNCTION_362();
                outlined destroy of SystemUpdateNotice?(v83, v84);
                _s15ConversationKit11ParticipantVWOhTm_4();
                swift_task_dealloc();
                outlined destroy of SystemUpdateNotice?(v66, &demangling cache variable for type metadata for URL?);
                swift_task_dealloc();
                OUTLINED_FUNCTION_64_2(v65, 1);
              }
              else
              {
                URL.withoutFragment.getter(v65);
                outlined destroy of SystemUpdateNotice?(v57, &demangling cache variable for type metadata for URL?);
                _s15ConversationKit11ParticipantVWOhTm_4();
                OUTLINED_FUNCTION_15();
                v53();
                swift_task_dealloc();
                swift_task_dealloc();
              }
LABEL_49:
              outlined init with take of ConversationControlsRecipe?(v65, v57, &demangling cache variable for type metadata for URL?);
              swift_task_dealloc();
LABEL_50:
              os_log_type_t v85 = swift_task_alloc();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v85, v126, v27);
              __swift_storeEnumTagSinglePayload(v85, 0, 1, v27);
              os_log_type_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, URL?))
                  - 8;
              uint64_t v87 = OUTLINED_FUNCTION_191();
              uint64_t v88 = v87 + *(int *)(v86 + 56);
              outlined init with copy of Participant?(v85, v87, &demangling cache variable for type metadata for URL?);
              unint64_t v89 = OUTLINED_FUNCTION_362();
              outlined init with copy of Participant?(v89, v90, &demangling cache variable for type metadata for URL?);
              OUTLINED_FUNCTION_33_0(v87, 1, v27);
              if (v30)
              {
                outlined destroy of SystemUpdateNotice?(v85, &demangling cache variable for type metadata for URL?);
                OUTLINED_FUNCTION_33_0(v88, 1, v27);
                if (v30)
                {
                  outlined destroy of SystemUpdateNotice?(v87, &demangling cache variable for type metadata for URL?);
                  swift_task_dealloc();
                  swift_task_dealloc();
LABEL_66:
                  uint64_t v111 = (void *)Logger.logObject.getter();
                  uint64_t v112 = static os_log_type_t.debug.getter();
                  if (OUTLINED_FUNCTION_12_4(v112))
                  {
                    uint64_t v113 = (_WORD *)OUTLINED_FUNCTION_8_0();
                    OUTLINED_FUNCTION_231(v113);
                    OUTLINED_FUNCTION_209(&dword_1C2F90000, v114, v115, "updateForegroundCollaborationState: Staged highlight URL matches current collaboration state URL, not updating state to staged.");
                    OUTLINED_FUNCTION_3();
                  }
                  uint64_t v116 = *(void **)(v0 + 312);
                  uint64_t v117 = *(void **)(v0 + 288);

                  outlined destroy of SystemUpdateNotice?(v57, &demangling cache variable for type metadata for URL?);
                  OUTLINED_FUNCTION_15();
                  v118();
LABEL_69:
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  static Task<>.isCancelled.getter();
                  goto LABEL_25;
                }
              }
              else
              {
                uint64_t v91 = swift_task_alloc();
                outlined init with copy of Participant?(v87, v91, &demangling cache variable for type metadata for URL?);
                OUTLINED_FUNCTION_33_0(v88, 1, v124);
                if (!v92)
                {
                  uint64_t v109 = swift_task_alloc();
                  OUTLINED_FUNCTION_63_0();
                  v110();
                  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0(&lazy protocol witness table cache variable for type URL and conformance URL, MEMORY[0x1F418B850]);
                  uint64_t v123 = dispatch thunk of static Equatable.== infix(_:_:)();
                  ((void (*)(uint64_t, uint64_t))v53)(v109, v124);
                  outlined destroy of SystemUpdateNotice?(v85, &demangling cache variable for type metadata for URL?);
                  ((void (*)(uint64_t, uint64_t))v53)(v91, v124);
                  swift_task_dealloc();
                  swift_task_dealloc();
                  outlined destroy of SystemUpdateNotice?(v87, &demangling cache variable for type metadata for URL?);
                  swift_task_dealloc();
                  swift_task_dealloc();
                  if (v123) {
                    goto LABEL_66;
                  }
LABEL_59:
                  unint64_t v93 = *(void *)(v0 + 248);
                  os_log_t v94 = *(void *)(v0 + 216);
                  type metadata accessor for Date();
                  OUTLINED_FUNCTION_4();
                  uint64_t v96 = v95;
                  swift_task_alloc();
                  _s15ConversationKit11ParticipantVWOcTm_6(v93, v94);
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date));
                    OUTLINED_FUNCTION_63_0();
                    v97();
                    OUTLINED_FUNCTION_15();
                    v122();
                    swift_task_alloc();
                    Date.addingTimeInterval(_:)();
                    swift_task_alloc();
                    static Date.now.getter();
                    OUTLINED_FUNCTION_35();
                    uint64_t v98 = static Date.> infix(_:_:)();
                    id v99 = *(void (**)(void))(v96 + 8);
                    OUTLINED_FUNCTION_286();
                    OUTLINED_FUNCTION_1_19();
                    v99();
                    OUTLINED_FUNCTION_1_19();
                    v99();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    if (v98)
                    {
                      uint64_t v100 = (void *)Logger.logObject.getter();
                      unint64_t v101 = static os_log_type_t.debug.getter();
                      if (OUTLINED_FUNCTION_12_4(v101))
                      {
                        char v102 = (_WORD *)OUTLINED_FUNCTION_8_0();
                        OUTLINED_FUNCTION_231(v102);
                        OUTLINED_FUNCTION_209(&dword_1C2F90000, v103, v104, "updateForegroundCollaborationState: currently opening a document, not updating state.");
                        OUTLINED_FUNCTION_3();
                      }
                      uint64_t v105 = *(void **)(v0 + 312);
                      long long v106 = *(void **)(v0 + 288);

                      OUTLINED_FUNCTION_1_19();
                      v99();
                      outlined destroy of SystemUpdateNotice?(v57, &demangling cache variable for type metadata for URL?);
                      OUTLINED_FUNCTION_15();
                      v107();
                      swift_task_dealloc();
                      goto LABEL_69;
                    }
                    OUTLINED_FUNCTION_1_19();
                    v99();
                    outlined destroy of SystemUpdateNotice?(v57, &demangling cache variable for type metadata for URL?);
                    ((void (*)(uint64_t, uint64_t))v122)(v126, v124);
                  }
                  else
                  {
                    outlined destroy of SystemUpdateNotice?(v57, &demangling cache variable for type metadata for URL?);
                    OUTLINED_FUNCTION_15();
                    v108();
                    _s15ConversationKit11ParticipantVWOhTm_4();
                  }
                  long long v31 = v125;
                  swift_task_dealloc();
                  swift_task_dealloc();
                  goto LABEL_22;
                }
                outlined destroy of SystemUpdateNotice?(v85, &demangling cache variable for type metadata for URL?);
                OUTLINED_FUNCTION_15();
                v53();
                swift_task_dealloc();
              }
              outlined destroy of SystemUpdateNotice?(v87, &demangling cache variable for type metadata for (URL?, URL?));
              swift_task_dealloc();
              swift_task_dealloc();
              goto LABEL_59;
          }
        }
      }
      outlined destroy of SystemUpdateNotice?(v48, &demangling cache variable for type metadata for URL?);
      swift_task_dealloc();
      goto LABEL_34;
    }
  }
  outlined destroy of SystemUpdateNotice?(v17, &demangling cache variable for type metadata for URL?);
  long long v31 = v125;
LABEL_22:
  uint64_t v32 = *(void **)(v0 + 312);
  uint64_t v34 = *(void *)(v0 + 232);
  uint64_t v33 = *(void *)(v0 + 240);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool))
               + 48);
  uint64_t v36 = (void *)OUTLINED_FUNCTION_286();
  StagedCollaboration.init(foregroundApp:shareableContent:)(v36, v37, v38);

  _s15ConversationKit11ParticipantVWOhTm_4();
  *(unsigned char *)(v34 + v35) = 0;
  swift_storeEnumTagMultiPayload();
  outlined init with take of Collaboration(v34, v33);
LABEL_23:
  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    _s15ConversationKit11ParticipantVWOcTm_6(*(void *)(v0 + 240), *(void *)(v0 + 232));
    OUTLINED_FUNCTION_0_3();
    uint64_t v39 = OUTLINED_FUNCTION_356();
    v40(v39);
  }
LABEL_25:
  OUTLINED_FUNCTION_123_0();
  _s15ConversationKit11ParticipantVWOhTm_4();
  _s15ConversationKit11ParticipantVWOhTm_4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v41();
}

uint64_t closure #1 in ConversationControlsManager.updateForegroundCollaborationState()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_290();
  a21 = v24;
  a22 = v25;
  a20 = v22;
  uint64_t v26 = *(void **)(v22 + 320);
  swift_release();
  swift_willThrow();
  id v27 = v26;
  id v28 = v26;
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_107(v30))
  {
    uint64_t v32 = *(void **)(v22 + 312);
    long long v31 = *(void **)(v22 + 320);
    char v52 = *(void **)(v22 + 288);
    uint64_t v33 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v34 = OUTLINED_FUNCTION_9_0();
    _DWORD *v33 = 136315138;
    a10 = v34;
    *(void *)(v22 + 128) = v31;
    id v35 = v31;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v36 = String.init<A>(reflecting:)();
    *(void *)(v22 + 136) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, &a10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_268(&dword_1C2F90000, v29, v23, "Error updating shareable content: %s");
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    uint64_t v38 = *(void **)(v22 + 320);
    uint64_t v39 = *(void **)(v22 + 288);
  }
  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    _s15ConversationKit11ParticipantVWOcTm_6(*(void *)(v22 + 240), *(void *)(v22 + 232));
    OUTLINED_FUNCTION_0_3();
    uint64_t v40 = OUTLINED_FUNCTION_356();
    v41(v40);
  }
  OUTLINED_FUNCTION_123_0();
  uint64_t v53 = v42;
  _s15ConversationKit11ParticipantVWOhTm_4();
  _s15ConversationKit11ParticipantVWOhTm_4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_263();
  return v44(v43, v44, v45, v46, v47, v48, v49, v50, v53, a10, a11, a12, a13, a14);
}

uint64_t @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSArray, @unowned NSError?) -> () with result type [SWShareableContent](uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    id v4 = a3;
    return specialized _resumeUnsafeThrowingContinuationWithError<A>(_:_:)(v3, v4);
  }
  else
  {
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for SWShareableContent);
    uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    return specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(v3, v6);
  }
}

uint64_t ConversationControlsManager.suppressingSystemNotices.getter()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 1072))();
  if (result)
  {
    OUTLINED_FUNCTION_106_0();
    OUTLINED_FUNCTION_56_5();
    v3();
    OUTLINED_FUNCTION_338();
    return v0 & 1;
  }
  return result;
}

Swift::Void __swiftcall ConversationControlsManager.scheduleDismissTimer()()
{
}

Swift::Void __swiftcall ConversationControlsManager.invalidateDismissTimer()()
{
}

uint64_t ConversationControlsManager.scheduleDismissTimer()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA10))();
}

Swift::Void __swiftcall ConversationControlsManager.invalidateAndRescheduleDismissTimer(reschedule:)(Swift::Bool reschedule)
{
  OUTLINED_FUNCTION_10_1();
  if ((*(uint64_t (**)(void))(v1 + 1000))())
  {
    OUTLINED_FUNCTION_144_0();
    uint64_t v2 = OUTLINED_FUNCTION_241();
    v3(v2);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_94_1();
  if ((*(uint64_t (**)(void))(v4 + 1072))())
  {
    swift_getObjectType();
    uint64_t v5 = OUTLINED_FUNCTION_241();
    v6(v5);
    swift_unknownObjectRelease();
  }
}

uint64_t key path getter for ConversationControlsManager.screenShareCountdownTimer : ConversationControlsManager@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xA18))();
  *a2 = result;
  return result;
}

void key path setter for ConversationControlsManager.screenShareCountdownTimer : ConversationControlsManager(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  ConversationControlsManager.screenShareCountdownTimer.setter(v1);
}

id ConversationControlsManager.screenShareCountdownTimer.willset()
{
  id v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_screenShareCountdownTimer);
  swift_beginAccess();
  id result = *v1;
  if (*v1) {
    return objc_msgSend(result, sel_invalidate);
  }
  return result;
}

void ConversationControlsManager.screenShareCountdownTimer.didset(void *a1)
{
  id v2 = v1;
  uint64_t v4 = (void **)((char *)v2 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_screenShareCountdownTimer);
  uint64_t v5 = swift_beginAccess();
  uint64_t v6 = *v4;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC8C8];
  if (*v4)
  {
    if (!a1) {
      goto LABEL_8;
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
    id v8 = v6;
    id v9 = a1;
    char v10 = static NSObject.== infix(_:_:)();

    if (v10) {
      return;
    }
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (!a1)
  {
    return;
  }
  uint64_t v11 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))((*v7 & *v2) + 0x650))(v13);
  *(void *)(v12 + 8) = 0;
  *(unsigned char *)(v12 + 16) = 1;
  uint64_t v5 = v11(v13, 0);
LABEL_8:
  (*(void (**)(uint64_t))((*v7 & *v2) + 0xA00))(v5);
}

void *ConversationControlsManager.screenShareCountdownTimer.getter()
{
  OUTLINED_FUNCTION_5_4();
  id v1 = *v0;
  id v2 = v1;
  return v1;
}

void ConversationControlsManager.screenShareCountdownTimer.setter(void *a1)
{
  uint64_t v3 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_screenShareCountdownTimer);
  OUTLINED_FUNCTION_11_0();
  id v4 = *v3;
  id v5 = *v3;
  ConversationControlsManager.screenShareCountdownTimer.willset();
  id v6 = *v3;
  *uint64_t v3 = a1;
  id v7 = a1;

  ConversationControlsManager.screenShareCountdownTimer.didset(v4);
}

uint64_t ConversationControlsManager.handleToggleLayoutAction()()
{
  uint64_t v1 = OUTLINED_FUNCTION_261();
  OUTLINED_FUNCTION_74_2();
  char v3 = v2();
  (*(void (**)(BOOL, uint64_t, uint64_t))(v0 + 256))((v3 & 1) == 0, v1, v0);
  OUTLINED_FUNCTION_1_12();
  id v5 = *(uint64_t (**)(void))(v4 + 2496);
  return v5();
}

id ConversationControlsManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ConversationControlsManager.init()()
{
}

Swift::Void __swiftcall ConversationControlsManager.joinButtonTapped()()
{
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_62();
  char v2 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v0 = static OS_dispatch_queue.main.getter();
  uint64_t v3 = OUTLINED_FUNCTION_2_52();
  v4(v3);
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = OUTLINED_FUNCTION_1_18();
  v6(v5);
  if (v2)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  id v8 = (void *)OUTLINED_FUNCTION_30(v7, (uint64_t)static Logger.conversationControls);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v9))
  {
    char v10 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v10);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v11, v12, "joinButtonTapped");
    OUTLINED_FUNCTION_3();
  }

  ConversationController.joinConversation()();
}

Swift::Void __swiftcall ConversationControlsManager.leaveButtonTapped()()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  char v3 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  uint64_t v4 = OUTLINED_FUNCTION_2_52();
  v5(v4);
  _dispatchPreconditionTest(_:)();
  uint64_t v6 = OUTLINED_FUNCTION_1_18();
  v7(v6);
  if (v3)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v8 = type metadata accessor for Logger();
  os_log_type_t v9 = (void *)OUTLINED_FUNCTION_30(v8, (uint64_t)static Logger.conversationControls);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v10))
  {
    uint64_t v11 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v11);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v12, v13, "leaveButtonTapped");
    OUTLINED_FUNCTION_3();
  }

  uint64_t v14 = MEMORY[0x1E4FBC8C8];
  OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_179();
  uint64_t v16 = (void *)v15();
  if (v16)
  {
    uint64_t v17 = v16;
    if (objc_msgSend(v16, sel_avMode) && objc_msgSend(v17, sel_eligibleForDowngradeToAVModeNoneFromUI))
    {
      ConversationController.downgradeToAVLess()();
      OUTLINED_FUNCTION_1_12();
      if ((*(uint64_t (**)(void))(v18 + 1024))())
      {
        OUTLINED_FUNCTION_144_0();
        OUTLINED_FUNCTION_220();
        v19();
        swift_unknownObjectRelease();
      }
      ConversationControlsManager.shouldShowAVLessLeaveConfirmation.setter(1);
      OUTLINED_FUNCTION_173_0();

      goto LABEL_18;
    }
  }
  ConversationControlsManager.declineIncomingScreenShareRequests()();
  ConversationController.leaveConversation(reason:)();
  OUTLINED_FUNCTION_1_12();
  if ((*(uint64_t (**)(void))(v20 + 1024))())
  {
    OUTLINED_FUNCTION_27_26();
    OUTLINED_FUNCTION_157_2();
    OUTLINED_FUNCTION_345();
    OUTLINED_FUNCTION_107_1();
    v21();
    swift_unknownObjectRelease();
  }
  uint64_t v22 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_62();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v25 = OUTLINED_FUNCTION_8(v24);
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_60();
  uint64_t v26 = v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_avLessLeaveConfirmationPresentedDate;
  OUTLINED_FUNCTION_2();
  outlined init with copy of Participant?(v26, v0, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_33_0(v0, 1, v22);
  if (v27)
  {
    outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    OUTLINED_FUNCTION_63_0();
    v28();
    CNKCoreAnalyticsReporter.reportAVLessLeaveConfirmation(presentedAt:action:)(v14, 1);
    uint64_t v29 = OUTLINED_FUNCTION_317();
    v30(v29);
  }
  ConversationControlsManager.shouldShowAVLessLeaveConfirmation.setter(0);
LABEL_18:
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationControlsManager.dismissTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_0_20();
  if ((*(uint64_t (**)(void))(v1 + 1072))())
  {
    OUTLINED_FUNCTION_106_0();
    OUTLINED_FUNCTION_56_5();
    v2();
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall ConversationControlsManager.openApp(withBundleIdentifier:)(Swift::String withBundleIdentifier)
{
  if (withBundleIdentifier._countAndFlagsBits != 0xD000000000000017
    || withBundleIdentifier._object != (void *)0x80000001C37A2D70)
  {
    OUTLINED_FUNCTION_29_0();
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for FBSOpenApplicationOptions);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C37696D0;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_331();
      uint64_t v5 = MEMORY[0x1E4FBB390];
      *(void *)(inited + 96) = MEMORY[0x1E4FBB390];
      *(unsigned char *)(inited + 72) = 1;
      uint64_t aBlock = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v6;
      OUTLINED_FUNCTION_331();
      *(void *)(inited + 168) = v5;
      *(unsigned char *)(inited + 144) = 1;
      uint64_t v7 = Dictionary.init(dictionaryLiteral:)();
      id v8 = @nonobjc FBSOpenApplicationOptions.__allocating_init(dictionary:)(v7);
      id v9 = objc_msgSend(self, sel_serviceWithDefaultShellEndpoint);
      if (v9)
      {
        os_log_type_t v10 = v9;
        uint64_t v11 = OUTLINED_FUNCTION_29_0();
        uint64_t v12 = (void *)MEMORY[0x1C87730B0](v11);
        uint64_t v13 = OUTLINED_FUNCTION_20();
        swift_unknownObjectWeakInit();
        uint64_t v25 = partial apply for closure #1 in ConversationControlsManager.openApp(withBundleIdentifier:);
        uint64_t v26 = v13;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v22 = 1107296256;
        uint64_t v23 = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
        uint64_t v24 = &block_descriptor_94;
        uint64_t v14 = _Block_copy(&aBlock);
        swift_release();
        objc_msgSend(v10, sel_openApplication_withOptions_completion_, v12, v8, v14);
        _Block_release(v14);
      }
      else
      {
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v15 = type metadata accessor for Logger();
        uint64_t v16 = (void *)OUTLINED_FUNCTION_30(v15, (uint64_t)static Logger.conversationControls);
        os_log_type_t v17 = static os_log_type_t.default.getter();
        if (OUTLINED_FUNCTION_2_12(v17))
        {
          uint64_t v18 = (_WORD *)OUTLINED_FUNCTION_8_0();
          OUTLINED_FUNCTION_22_1(v18);
          OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v19, v20, "Unable to launch App because FBSOpenApplicationService was null");
          OUTLINED_FUNCTION_3();
        }
      }
      goto LABEL_15;
    }
  }
  OUTLINED_FUNCTION_67_3();
  if (!v1())
  {
LABEL_15:
    OUTLINED_FUNCTION_12_27();
    return;
  }
  OUTLINED_FUNCTION_106_0();
  OUTLINED_FUNCTION_56_5();
  v2();
  OUTLINED_FUNCTION_12_27();
  swift_unknownObjectRelease();
}

id @nonobjc FBSOpenApplicationOptions.__allocating_init(dictionary:)(uint64_t a1)
{
  if (a1)
  {
    v1.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v1.super.Class isa = 0;
  }
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_optionsWithDictionary_, v1.super.isa);

  return v2;
}

void closure #1 in ConversationControlsManager.openApp(withBundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v4) + 0x400))();
    uint64_t v8 = v7;

    if (v6)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(0x6E6968636E75614CLL, 0xED00007070612067, 1, ObjectType, v8);
      swift_unknownObjectRelease();
    }
  }
}

Swift::Void __swiftcall ConversationControlsManager.openMessagesButtonTapped()()
{
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_62();
  char v2 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v0 = static OS_dispatch_queue.main.getter();
  uint64_t v3 = OUTLINED_FUNCTION_2_52();
  v4(v3);
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = OUTLINED_FUNCTION_1_18();
  v6(v5);
  if (v2)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_30(v7, (uint64_t)static Logger.conversationControls);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v9))
  {
    os_log_type_t v10 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v10);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v11, v12, "openMessagesButtonTapped");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_337();
  ConversationController.openMessagesConversation(completion:)();
  swift_release();
}

void closure #1 in ConversationControlsManager.openMessagesButtonTapped()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationControls);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1C2F90000, v4, v5, "Present HUD: openMessagesButtonTapped (transition)", v6, 2u);
    MEMORY[0x1C87760E0](v6, -1, -1);
  }

  swift_beginAccess();
  uint64_t v7 = (void *)MEMORY[0x1C8776240](v2);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v7) + 0x400))();
    uint64_t v11 = v10;

    if (v9)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v11 + 56))(ObjectType, v11);
      swift_unknownObjectRelease();
    }
  }
}

Swift::Void __swiftcall ConversationControlsManager.toggleMicButtonTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v1;
  os_log_type_t v5 = v4;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v7();
  char v8 = _dispatchPreconditionTest(_:)();
  uint64_t v9 = OUTLINED_FUNCTION_25_22();
  v10(v9);
  if (v8)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)static Logger.conversationControls);
  id v12 = v5;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_107(v14))
  {
    uint64_t v15 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v26 = OUTLINED_FUNCTION_9_0();
    *uint64_t v15 = 136315138;
    unsigned int v16 = objc_msgSend(v12, sel_isSelected);
    BOOL v17 = v16 == 0;
    if (v16) {
      uint64_t v18 = 1702195828;
    }
    else {
      uint64_t v18 = 0x65736C6166;
    }
    if (v17) {
      unint64_t v19 = 0xE500000000000000;
    }
    else {
      unint64_t v19 = 0xE400000000000000;
    }
    uint64_t v20 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v26);
    OUTLINED_FUNCTION_32_4(v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_154_0(&dword_1C2F90000, v13, v21, "toggleMicButtonTapped, currentState: %s");
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  ConversationController.toggleLocalAudio()();
  OUTLINED_FUNCTION_382();
  id v22 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_frontmostCall);
  if (v22)
  {
    uint64_t v23 = v22;
    OUTLINED_FUNCTION_145_0();
    OUTLINED_FUNCTION_83_0();
    uint64_t v25 = (void *)v24();
    if (v25)
    {
      objc_msgSend(v25, sel_localAudioToggledWithIsMuted_, objc_msgSend(v23, sel_isUplinkMuted));

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationControlsManager.toggleVideoButtonTapped(button:)(UIControl *button)
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationControls);
  uint64_t v3 = button;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_107(v5))
  {
    uint64_t v6 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v12 = OUTLINED_FUNCTION_9_0();
    *uint64_t v6 = 136315138;
    unsigned int v7 = [(UIControl *)v3 isSelected];
    BOOL v8 = v7 == 0;
    if (v7) {
      uint64_t v9 = 1702195828;
    }
    else {
      uint64_t v9 = 0x65736C6166;
    }
    if (v8) {
      unint64_t v10 = 0xE500000000000000;
    }
    else {
      unint64_t v10 = 0xE400000000000000;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v12);
    OUTLINED_FUNCTION_14_5();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_154_0(&dword_1C2F90000, v4, v11, "toggleVideoButtonTapped, currentState: %s");
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  ConversationControlsManager.toggleVideoButtonTapped()();
}

Swift::Void __swiftcall ConversationControlsManager.toggleVideoButtonTapped()()
{
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_62();
  char v2 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v0 = static OS_dispatch_queue.main.getter();
  uint64_t v3 = OUTLINED_FUNCTION_2_52();
  v4(v3);
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = OUTLINED_FUNCTION_1_18();
  v6(v5);
  if (v2)
  {
    ConversationController.toggleLocalVideo(shouldPauseIfStopped:)(0);
    OUTLINED_FUNCTION_382();
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v5);
  if (result)
  {
    unsigned int v7 = (void *)result;
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = *(void *)((char *)v7 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 384))(ObjectType, v9);
    *(void *)(v8 + 16) = v11;
    uint64_t v12 = (void (*)(void *, void))(*(uint64_t (**)(void *))((*MEMORY[0x1E4FBC8C8] & *v7)
                                                                                     + 0x650))(aBlock);
    *(void *)(v13 + 8) = v11;
    *(unsigned char *)(v13 + 16) = 0;
    v12(aBlock, 0);
    os_log_type_t v14 = self;
    double v15 = (*(double (**)(uint64_t, uint64_t))(v9 + 392))(ObjectType, v9);
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    BOOL v17 = (void *)swift_allocObject();
    v17[2] = v16;
    v17[3] = v8;
    v17[4] = a2;
    v17[5] = a3;
    aBlock[4] = partial apply for closure #1 in closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:);
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
    aBlock[3] = &block_descriptor_534;
    uint64_t v18 = _Block_copy(aBlock);
    swift_retain();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
    swift_release();
    id v19 = objc_msgSend(v14, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v18, v15);
    _Block_release(v18);
    ConversationControlsManager.screenShareCountdownTimer.setter(v19);

    return swift_release();
  }
  return result;
}

void closure #1 in closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v7 = a2 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C8776240](v7);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    unint64_t v10 = (uint64_t *)(a3 + 16);
    swift_beginAccess();
    uint64_t v11 = *v10 - 1;
    if (__OFSUB__(*v10, 1))
    {
      __break(1u);
    }
    else
    {
      *unint64_t v10 = v11;
      if (v11 < 1)
      {
        objc_msgSend(a1, sel_invalidate);
        ConversationControlsManager.screenShareCountdownTimer.setter(0);
        (*(void (**)(void, void, void))((*MEMORY[0x1E4FBC8C8] & *v9) + 0x7F8))(0, 0, 0);
        id v14 = objc_retain(*(id *)((char *)v9
                                + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController));
        ConversationController.startScreenSharingSession()();

        if (a4) {
          a4();
        }
      }
      else
      {
        uint64_t v12 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))((*MEMORY[0x1E4FBC8C8] & *v9)
                                                                                       + 0x650))(v15);
        *(void *)(v13 + 8) = v11;
        *(unsigned char *)(v13 + 16) = 0;
        v12(v15, 0);
      }
    }
  }
}

void closure #2 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(char a1, void (*a2)(void), uint64_t a3)
{
  if (a1)
  {
    uint64_t v5 = type metadata accessor for SpringBoardUtilities();
    swift_retain();
    specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)(v5, a2, a3);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.conversationControls);
    oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1C2F90000, oslog, v7, "Ignoring starting screen sharing. User opted to not replace current activity.", v8, 2u);
      MEMORY[0x1C87760E0](v8, -1, -1);
    }
  }
}

void closure #1 in closure #2 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(char a1, void (*a2)(void))
{
  if (a1)
  {
    a2();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    id v14 = OUTLINED_FUNCTION_30(v2, (uint64_t)static Logger.conversationControls);
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_4_14(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14))
    {
      uint64_t v11 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_24(v11);
      OUTLINED_FUNCTION_6_7(&dword_1C2F90000, v15, v12, "Ignoring starting screen sharing. Springboard wasn't unlocked.");
      OUTLINED_FUNCTION_3();
    }
  }
}

void specialized ConversationControlsManager.promptForReplaceAlertIfNeeded(_:)(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  int v7 = (void *)MEMORY[0x1E4FBC8C8];
  int v8 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x290);
  uint64_t v9 = swift_retain();
  int v10 = v8(v9);
  if (v10)
  {
    uint64_t v109 = v10;
    uint64_t v11 = (*(uint64_t (**)(void))((*v7 & *a1) + 0x8D0))();
    if (v11)
    {
      uint64_t v108 = v11;
      if ([v11 isLocallyInitiated])
      {
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v12 = type metadata accessor for Logger();
        __swift_project_value_buffer(v12, (uint64_t)static Logger.conversationControls);
        uint64_t v13 = Logger.logObject.getter();
        os_log_type_t v14 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v13, v14))
        {
          double v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)double v15 = 0;
          _os_log_impl(&dword_1C2F90000, v13, v14, "Activity was locally initiated, not prompting to replace", v15, 2u);
          MEMORY[0x1C87760E0](v15, -1, -1);
        }

        uint64_t v16 = type metadata accessor for SpringBoardUtilities();
        swift_retain();
        specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)(v16, a2, a3);
        swift_release();
        swift_release();

        BOOL v17 = v108;
        goto LABEL_21;
      }
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      __swift_project_value_buffer(v29, (uint64_t)static Logger.conversationControls);
      os_log_type_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl(&dword_1C2F90000, v30, v31, "Prompting to replace current activity with screen sharing activity", v32, 2u);
        MEMORY[0x1C87760E0](v32, -1, -1);
      }

      uint64_t v33 = (void *)MEMORY[0x1E4FBB1A0];
      uint64_t v118 = Dictionary.init(dictionaryLiteral:)();
      uint64_t v34 = TUConversationActivitySession.title.getter();
      uint64_t v107 = v6;
      if (v35)
      {
        uint64_t v36 = v34;
        uint64_t v37 = v35;
        uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v39 = v38;
        uint64_t v40 = self;
        id v41 = objc_msgSend(v40, sel_conversationKit);
        v42._uint64_t countAndFlagsBits = 0xD000000000000015;
        v120._object = (void *)0xE000000000000000;
        v42._object = (void *)0x80000001C37A5810;
        v43.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
        v43.value._object = (void *)0xEF74694B6E6F6974;
        v44._uint64_t countAndFlagsBits = 0;
        v44._object = (void *)0xE000000000000000;
        v120._uint64_t countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v44, v120);

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v45 = swift_allocObject();
        *(_OWORD *)(v45 + 16) = xmmword_1C3769620;
        *(void *)(v45 + 56) = v33;
        *(void *)(v45 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v45 + 32) = v36;
        *(void *)(v45 + 40) = v37;
        uint64_t v46 = String.init(format:_:)();
        uint64_t v48 = v47;
        swift_bridgeObjectRelease();
        uint64_t v112 = v33;
        aBlock._uint64_t countAndFlagsBits = v46;
        aBlock._object = v48;
        specialized Dictionary.subscript.setter((uint64_t)&aBlock, v106, v39);
        uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v51 = v50;
        id v52 = objc_msgSend(v40, sel_conversationKit);
        v121._object = (void *)0xE000000000000000;
        v53._object = (void *)0x80000001C37A5830;
        v53._uint64_t countAndFlagsBits = 0xD000000000000017;
        v54.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
        v54.value._object = (void *)0xEF74694B6E6F6974;
        v55._uint64_t countAndFlagsBits = 0;
        v55._object = (void *)0xE000000000000000;
        v121._uint64_t countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v53, v54, (NSBundle)v52, v55, v121);

        uint64_t v56 = String.init(format:_:)();
        uint64_t v58 = v57;
        swift_bridgeObjectRelease();
        uint64_t v112 = v33;
        aBlock._uint64_t countAndFlagsBits = v56;
        aBlock._object = v58;
        uint64_t v59 = v49;
      }
      else
      {
        uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v51 = v61;
        id v62 = objc_msgSend(self, sel_conversationKit);
        v63._uint64_t countAndFlagsBits = 0xD000000000000016;
        v122._object = (void *)0xE000000000000000;
        v63._object = (void *)0x80000001C37A57B0;
        v64.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
        v64.value._object = (void *)0xEF74694B6E6F6974;
        v65._uint64_t countAndFlagsBits = 0;
        v65._object = (void *)0xE000000000000000;
        v122._uint64_t countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v63, v64, (NSBundle)v62, v65, v122);

        uint64_t v66 = String.init(format:_:)();
        uint64_t v68 = v67;
        swift_bridgeObjectRelease();
        uint64_t v112 = v33;
        aBlock._uint64_t countAndFlagsBits = v66;
        aBlock._object = v68;
        uint64_t v59 = v60;
      }
      specialized Dictionary.subscript.setter((uint64_t)&aBlock, v59, v51);
      uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v71 = v70;
      uint64_t v72 = self;
      id v73 = objc_msgSend(v72, sel_conversationKit);
      v74._uint64_t countAndFlagsBits = 0xD000000000000010;
      v123._object = (void *)0xE000000000000000;
      v74._object = (void *)0x80000001C37A57D0;
      v75.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
      v75.value._object = (void *)0xEF74694B6E6F6974;
      v76._uint64_t countAndFlagsBits = 0;
      v76._object = (void *)0xE000000000000000;
      v123._uint64_t countAndFlagsBits = 0;
      Swift::String v77 = NSLocalizedString(_:tableName:bundle:value:comment:)(v74, v75, (NSBundle)v73, v76, v123);

      uint64_t v112 = v33;
      Swift::String aBlock = v77;
      specialized Dictionary.subscript.setter((uint64_t)&aBlock, v69, v71);
      uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v80 = v79;
      id v81 = objc_msgSend(v72, sel_conversationKit);
      v124._object = (void *)0xE000000000000000;
      v82._uint64_t countAndFlagsBits = 0x4C45434E4143;
      v82._object = (void *)0xE600000000000000;
      v83.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
      v83.value._object = (void *)0xEF74694B6E6F6974;
      v84._uint64_t countAndFlagsBits = 0;
      v84._object = (void *)0xE000000000000000;
      v124._uint64_t countAndFlagsBits = 0;
      Swift::String v85 = NSLocalizedString(_:tableName:bundle:value:comment:)(v82, v83, (NSBundle)v81, v84, v124);

      uint64_t v112 = v33;
      Swift::String aBlock = v85;
      specialized Dictionary.subscript.setter((uint64_t)&aBlock, v78, v80);
      os_log_type_t v86 = self;
      id v87 = [v109 groupUUID];
      uint64_t v88 = type metadata accessor for UUID();
      uint64_t v89 = *(void *)(v88 - 8);
      MEMORY[0x1F4188790](v88);
      uint64_t v91 = (char *)&v105 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
      *(void *)&long long v116 = dispatch thunk of CustomStringConvertible.description.getter();
      *((void *)&v116 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v92;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v91, v88);
      v93._uint64_t countAndFlagsBits = 46;
      v93._object = (void *)0xE100000000000000;
      String.append(_:)(v93);
      v94._uint64_t countAndFlagsBits = TUConversationActivitySession.uniqueIdentifier.getter();
      String.append(_:)(v94);
      swift_bridgeObjectRelease();
      uint64_t v95 = (void *)MEMORY[0x1C87730B0](v116, *((void *)&v116 + 1));
      swift_bridgeObjectRelease();
      specialized _dictionaryUpCast<A, B, C, D>(_:)();
      uint64_t v97 = v96;
      swift_bridgeObjectRelease();
      id v98 = outlined bridged method (mnnnnbnn) of @objc static IMUserNotification.userNotification(withIdentifier:timeout:alertLevel:displayFlags:displayInformation:)((uint64_t)v95, 3, 0, 0.0, v97, v86);

      if (v98)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v116 = 0u;
        long long v117 = 0u;
      }
      uint64_t v99 = v107;
      outlined init with take of ConversationControlsRecipe?((uint64_t)&v116, (uint64_t)&aBlock, &demangling cache variable for type metadata for Any?);
      if (v112)
      {
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMUserNotification);
        if (swift_dynamicCast())
        {
          id v100 = v115;
          objc_msgSend(v100, sel_setUsesNotificationCenter_, 0);
          outlined bridged method (mbgnn) of @objc IMUserNotification.representedApplicationBundle.setter(0xD000000000000017, 0x80000001C37A2D70, v100);
          if (objc_msgSend(self, sel_sharedInstance))
          {
            _bridgeAnyObjectToAny(_:)();
            swift_unknownObjectRelease();
          }
          else
          {
            long long v116 = 0u;
            long long v117 = 0u;
          }
          outlined init with take of ConversationControlsRecipe?((uint64_t)&v116, (uint64_t)&aBlock, &demangling cache variable for type metadata for Any?);
          if (!v112)
          {

            outlined destroy of SystemUpdateNotice?((uint64_t)&aBlock, &demangling cache variable for type metadata for Any?);
            swift_release();
            swift_release();
            return;
          }
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for IMUserNotificationCenter);
          if (swift_dynamicCast())
          {
            id v101 = v115;
            uint64_t v102 = swift_allocObject();
            *(void *)(v102 + 16) = partial apply for closure #2 in ConversationControlsManager.startScreenShareWithCountdown(completion:);
            *(void *)(v102 + 24) = v99;
            uint64_t v113 = partial apply for closure #1 in ConversationControlsManager.promptForReplaceAlertIfNeeded(_:);
            uint64_t v114 = v102;
            aBlock._uint64_t countAndFlagsBits = MEMORY[0x1E4F143A8];
            aBlock._object = (void *)1107296256;
            uint64_t v111 = thunk for @escaping @callee_guaranteed (@guaranteed AVCaptureDevice?) -> ();
            uint64_t v112 = &block_descriptor_524;
            uint64_t v103 = _Block_copy(&aBlock);
            id v104 = v100;
            swift_retain();
            swift_release();
            objc_msgSend(v101, sel_addUserNotification_listener_completionHandler_, v104, 0, v103);

            _Block_release(v103);
            swift_release();
            swift_release();

            return;
          }
          swift_release();
          swift_release();

LABEL_40:
          return;
        }
      }
      else
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)&aBlock, &demangling cache variable for type metadata for Any?);
      }
      swift_release();
      swift_release();
      goto LABEL_40;
    }
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.conversationControls);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      char v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v27 = 0;
      _os_log_impl(&dword_1C2F90000, v25, v26, "No current activity, not prompting to replace", v27, 2u);
      MEMORY[0x1C87760E0](v27, -1, -1);
    }

    uint64_t v28 = type metadata accessor for SpringBoardUtilities();
    swift_retain();
    specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)(v28, a2, a3);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.conversationControls);
    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1C2F90000, v19, v20, "No current conversation, not starting screen sharing", v21, 2u);
      MEMORY[0x1C87760E0](v21, -1, -1);
    }

    uint64_t v109 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v109, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1C2F90000, v109, v22, "Ignoring starting screen sharing. User opted to not replace current activity.", v23, 2u);
      MEMORY[0x1C87760E0](v23, -1, -1);
    }
  }
  swift_release();
  swift_release();
  BOOL v17 = v109;
LABEL_21:
}

uint64_t closure #1 in ConversationControlsManager.promptForReplaceAlertIfNeeded(_:)(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  if (a1)
  {
    if (objc_msgSend((id)a1, sel_response))
    {
      a1 = 0;
    }
    else
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationControls);
      int v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl(&dword_1C2F90000, v4, v5, "User accepted replacing current activity with screen sharing activity.", v6, 2u);
        MEMORY[0x1C87760E0](v6, -1, -1);
      }

      a1 = 1;
    }
  }
  return a2(a1);
}

Swift::Void __swiftcall ConversationControlsManager.declineOrCancelScreenShareRequest()()
{
  OUTLINED_FUNCTION_31();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationControls);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_2_12(v4))
  {
    os_log_type_t v5 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_180(v5);
    _os_log_impl(&dword_1C2F90000, v3, v0, "Declining screen share request- presenting default hud", v1, 2u);
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_179();
  uint64_t v7 = v6();
  if (v7
    && (int v8 = (void *)v7,
        specialized Conversation.currentScreenSharingRequest(ignoring:)(),
        int v10 = v9,
        v8,
        v10))
  {
    id v11 = objc_msgSend(v10, sel_UUID);
    uint64_t v12 = OUTLINED_FUNCTION_297();
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v13);
    OUTLINED_FUNCTION_194();
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    OUTLINED_FUNCTION_1_12();
    OUTLINED_FUNCTION_50_2();
    double v15 = (void (*)(uint64_t *, void))v14();
    uint64_t v17 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v18 = *(void *)(*(void *)v17 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
    OUTLINED_FUNCTION_182(v18 + 1);
    v21(v19 + v20 * v18, v1, v12);
    v15(&v29, 0);
    ConversationController.declineOrCancelScreenShareRequest(for:)();
    OUTLINED_FUNCTION_1_12();
    OUTLINED_FUNCTION_50_2();
    v22();

    OUTLINED_FUNCTION_28();
  }
  else
  {
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v23))
    {
      uint64_t v24 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_24(v24);
      OUTLINED_FUNCTION_6_7(&dword_1C2F90000, v28, v25, "Cannot decline nil current screen share request");
      OUTLINED_FUNCTION_3();
    }
    OUTLINED_FUNCTION_28();
  }
}

Swift::Void __swiftcall ConversationControlsManager.cancelJoinCountdown()()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_10_35();
  OUTLINED_FUNCTION_0_3();
  if ((*(unsigned __int8 (**)(void))(v4 + 2112))() != 96) {
    goto LABEL_7;
  }
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v6();
  char v7 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12_1();
  v8();
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (one-time initialization token for conversationControls != -1) {
LABEL_9:
  }
    swift_once();
  uint64_t v9 = type metadata accessor for Logger();
  int v10 = (void *)OUTLINED_FUNCTION_30(v9, (uint64_t)static Logger.conversationControls);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_105(v11))
  {
    uint64_t v12 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_180(v12);
    OUTLINED_FUNCTION_35_1(&dword_1C2F90000, v13, v14, "cancelJoinCountdown");
    OUTLINED_FUNCTION_3();
  }

  ConversationController.cancelJoinCountdown()();
  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_50_2();
  v15();
  OUTLINED_FUNCTION_2_10();
  (*(void (**)(void))(v16 + 264))();
  swift_release();
  ConversationControlsManager.showHUD()();
  uint64_t v17 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_25_1(v0, v18, v19, v17);
  OUTLINED_FUNCTION_1_12();
  (*(void (**)())(v20 + 2456))();
  outlined destroy of SystemUpdateNotice?(v0, &demangling cache variable for type metadata for Participant?);
LABEL_7:
  OUTLINED_FUNCTION_15_0();
}

void ConversationControlsManager.noticeTapped(notice:isSystemAperturePresentation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  OUTLINED_FUNCTION_254();
  a20 = v21;
  a21 = v22;
  char v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  outlined init with copy of IDSLookupManager(v26, (uint64_t)&a10);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v27;
  outlined init with take of Notice(&a10, v28 + 24);
  *(unsigned char *)(v28 + 64) = v24;
  ConversationControlsNoticeCoordinator.noticeTapped(notice:completionHandler:)();
  swift_release();
  OUTLINED_FUNCTION_252();
}

void closure #1 in ConversationControlsManager.noticeTapped(notice:isSystemAperturePresentation:)(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = type metadata accessor for AppLaunchNotice(0);
  MEMORY[0x1F4188790](v8);
  swift_beginAccess();
  uint64_t v9 = (void *)MEMORY[0x1C8776240](a2 + 16);
  if (v9)
  {
    int v10 = v9;
    if (a1)
    {
      outlined init with copy of IDSLookupManager(a3, (uint64_t)v32);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
      if (swift_dynamicCast())
      {
        _s15ConversationKit11ParticipantVWOhTm_4();
        ConversationControlsManager.showHUD()();
        if ((a4 & 1) != 0 && (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x400))())
        {
          uint64_t v12 = v11;
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v12 + 96))(0x7420656369746F4ELL, 0xED00006465707061, ObjectType, v12);

          swift_unknownObjectRelease();
          return;
        }
      }
      else
      {
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v17 = type metadata accessor for Logger();
        __swift_project_value_buffer(v17, (uint64_t)static Logger.conversationControls);
        uint64_t v18 = Logger.logObject.getter();
        os_log_type_t v19 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v20 = 0;
          _os_log_impl(&dword_1C2F90000, v18, v19, "Present HUD: noticeTapped (transition)", v20, 2u);
          MEMORY[0x1C87760E0](v20, -1, -1);
        }

        uint64_t v21 = (void *)MEMORY[0x1E4FBC8C8];
        uint64_t v22 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x3E8))();
        if (v22)
        {
          uint64_t v24 = v23;
          uint64_t v25 = swift_getObjectType();
          outlined init with copy of IDSLookupManager(a3, (uint64_t)v32);
          char v33 = 0;
          (*(void (**)(void, unsigned char *, void, void, uint64_t, uint64_t))(v24 + 16))(0, v32, 0, 0, v25, v24);
          swift_unknownObjectRelease();
          uint64_t v22 = outlined destroy of ConversationControlsType((uint64_t)v32);
        }
        if (a4)
        {
          uint64_t v22 = (*(uint64_t (**)(uint64_t))((*v21 & *v10) + 0x400))(v22);
          if (v22)
          {
            uint64_t v27 = v26;
            uint64_t v28 = swift_getObjectType();
            (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v27 + 96))(0x7420656369746F4ELL, 0xED00006465707061, v28, v27);
            uint64_t v22 = swift_unknownObjectRelease();
          }
        }
        if ((*(uint64_t (**)(uint64_t))((*v21 & *v10) + 0x430))(v22))
        {
          uint64_t v30 = v29;
          uint64_t v31 = swift_getObjectType();
          outlined init with copy of IDSLookupManager(a3, (uint64_t)v32);
          char v33 = 0;
          (*(void (**)(unsigned char *, uint64_t, void, uint64_t, uint64_t))(v30 + 80))(v32, 1, 0, v31, v30);
          swift_unknownObjectRelease();

          outlined destroy of ConversationControlsType((uint64_t)v32);
          return;
        }
      }
    }
    else if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v9) + 0x400))())
    {
      uint64_t v15 = v14;
      uint64_t v16 = swift_getObjectType();
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v15 + 32))(0x7420656369746F4ELL, 0xED00006465707061, 1, v16, v15);
      swift_unknownObjectRelease();
    }
  }
}

void ConversationControlsManager.appLaunchButtonTapped(completion:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_10_5();
  uint64_t v84 = v7;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v8);
  int v10 = (char *)v78 - v9;
  uint64_t v85 = type metadata accessor for Collaboration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_10_5();
  uint64_t v81 = v12;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v13);
  uint64_t v80 = (uint64_t)v78 - v14;
  uint64_t v86 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_10_5();
  id v87 = v16;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v17);
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)static Logger.conversationControls);
  unint64_t v20 = v0;
  uint64_t v82 = v19;
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  Swift::String_optional v83 = v10;
  if (v23)
  {
    uint64_t v24 = OUTLINED_FUNCTION_37();
    v78[2] = v20 & 0xFFFFFFFFFFFFLL | 0x6AE1000000000000;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v26 = OUTLINED_FUNCTION_9_0();
    uint64_t v79 = v4;
    v88[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    v78[1] = v25 + 4;
    OUTLINED_FUNCTION_3_79();
    (*(void (**)(void))(v27 + 2352))();
    ConversationControlsAppLaunchButtonType.description.getter();
    uint64_t v29 = v28;
    uint64_t v30 = v2;
    unint64_t v32 = v31;
    _s15ConversationKit11ParticipantVWOhTm_4();
    uint64_t v33 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v32, v88);
    OUTLINED_FUNCTION_319(v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v2 = v30;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v21, v22, "appLaunchButtonTapped, type:%s", v25, 0xCu);
    OUTLINED_FUNCTION_78_0();
    uint64_t v4 = v79;
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  OUTLINED_FUNCTION_58_6();
  uint64_t v35 = v87;
  (*(void (**)(void))(v34 + 2352))();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      goto LABEL_13;
    case 2u:
      uint64_t v49 = (void *)Logger.logObject.getter();
      os_log_type_t v50 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_12(v50))
      {
        uint64_t v51 = (_WORD *)OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_23_1(v51);
        OUTLINED_FUNCTION_3();
      }

      OUTLINED_FUNCTION_58_6();
      (*(void (**)(void))(v54 + 2336))(0);
      if (!v4) {
        goto LABEL_41;
      }
      uint64_t v55 = 1;
      goto LABEL_40;
    case 3u:
      OUTLINED_FUNCTION_58_6();
      OUTLINED_FUNCTION_308();
      v56();
      uint64_t v57 = v89;
      if (!v89)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v88, &demangling cache variable for type metadata for Activity?);
        uint64_t v60 = (uint64_t)v83;
        OUTLINED_FUNCTION_218();
        __swift_storeEnumTagSinglePayload(v71, v72, v73, v85);
        goto LABEL_35;
      }
      uint64_t v58 = v90;
      __swift_project_boxed_opaque_existential_1(v88, v89);
      uint64_t v59 = v57;
      uint64_t v60 = (uint64_t)v83;
      (*(void (**)(uint64_t, uint64_t))(v58 + 112))(v59, v58);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
      OUTLINED_FUNCTION_33_0(v60, 1, v85);
      if (v40)
      {
LABEL_35:
        outlined destroy of SystemUpdateNotice?(v60, &demangling cache variable for type metadata for Collaboration?);
        goto LABEL_36;
      }
      uint64_t v61 = v80;
      outlined init with take of Collaboration(v60, v80);
      if (!*(void *)(v61 + 40))
      {
        uint64_t v77 = OUTLINED_FUNCTION_26();
        OUTLINED_FUNCTION_357(v77);
        ConversationControlsManager.presentCollaboration(_:completion:)(v61, (void (*)(uint64_t))partial apply for closure #2 in ConversationControlsManager.appLaunchButtonTapped(completion:), v60);
        swift_release();
        goto LABEL_13;
      }
      _s15ConversationKit11ParticipantVWOhTm_4();
LABEL_36:
      ConversationControlsManager.presentAppStore()();
      OUTLINED_FUNCTION_58_6();
      if ((*(uint64_t (**)(void))(v74 + 1024))())
      {
        OUTLINED_FUNCTION_106_0();
        OUTLINED_FUNCTION_103_0();
        unint64_t v75 = OUTLINED_FUNCTION_61_6(20);
        v76(v75);
        swift_unknownObjectRelease();
      }
LABEL_38:
      if (v4)
      {
        uint64_t v55 = 0;
LABEL_40:
        v4(v55);
      }
LABEL_41:
      OUTLINED_FUNCTION_28();
      return;
    case 4u:
    case 6u:
    case 7u:
      OUTLINED_FUNCTION_58_6();
      OUTLINED_FUNCTION_308();
      v36();
      if (v89)
      {
        __swift_project_boxed_opaque_existential_1(v88, v89);
        uint64_t v37 = v84;
        uint64_t v38 = OUTLINED_FUNCTION_34_9();
        v39(v38);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
        OUTLINED_FUNCTION_33_0(v37, 1, v85);
        if (!v40)
        {
          outlined init with take of Collaboration(v37, v81);
          uint64_t v41 = OUTLINED_FUNCTION_26();
          OUTLINED_FUNCTION_357(v41);
          uint64_t v42 = OUTLINED_FUNCTION_350();
          ConversationControlsManager.presentCollaboration(_:completion:)(v42, v43, v44);
          swift_release();
LABEL_13:
          _s15ConversationKit11ParticipantVWOhTm_4();
          goto LABEL_41;
        }
      }
      else
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v88, &demangling cache variable for type metadata for Activity?);
        uint64_t v37 = v84;
        OUTLINED_FUNCTION_25_1(v84, v45, v46, v85);
      }
      outlined destroy of SystemUpdateNotice?(v37, &demangling cache variable for type metadata for Collaboration?);
      uint64_t v47 = OUTLINED_FUNCTION_20();
      swift_unknownObjectWeakInit();
      uint64_t v48 = (void *)OUTLINED_FUNCTION_3_0();
      v48[2] = v4;
      v48[3] = v2;
      v48[4] = v47;
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v4);
      swift_retain();
      ConversationControlsManager.presentCurrentActivity(completion:)((uint64_t)partial apply for closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:), (uint64_t)v48);
      swift_release();
      swift_release();
      goto LABEL_41;
    case 5u:
      ConversationControlsManager.presentTVRemote()();
      goto LABEL_38;
    case 8u:
      ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)();
      goto LABEL_41;
    case 9u:
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      OUTLINED_FUNCTION_58_6();
      OUTLINED_FUNCTION_90_2();
      v62();
      OUTLINED_FUNCTION_372();
      NameAndPhotoUtilities.sendNameAndPhoto(using:)(v63, v64);
      goto LABEL_33;
    case 0xAu:
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      OUTLINED_FUNCTION_58_6();
      OUTLINED_FUNCTION_90_2();
      v65();
      OUTLINED_FUNCTION_372();
      NameAndPhotoUtilities.sendName(using:)(v66, v67);
      goto LABEL_33;
    case 0xBu:
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      OUTLINED_FUNCTION_58_6();
      OUTLINED_FUNCTION_90_2();
      v68();
      OUTLINED_FUNCTION_372();
      NameAndPhotoUtilities.acceptIncomingName(from:)(v69, v70);
LABEL_33:
      swift_unknownObjectRelease();
      goto LABEL_41;
    default:

      goto LABEL_38;
  }
}

void ConversationControlsManager.presentCollaboration(_:completion:)(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v68 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Collaboration(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v65 = v9;
  uint64_t v66 = v10;
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v60 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)v60 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v60 - v20;
  uint64_t v67 = v3;
  uint64_t v22 = *(void *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 720))(ObjectType, v22))
  {
    uint64_t v64 = a2;
    int v24 = *(unsigned __int8 *)(a1 + 16);
    _s15ConversationKit11ParticipantVWOcTm_6(a1, (uint64_t)v21);
    uint64_t v25 = a1;
    if (v24)
    {
      uint64_t v26 = _s15ConversationKit11ParticipantVWOhTm_4();
      uint64_t v27 = v67;
LABEL_4:
      uint64_t v28 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v27) + 0x290))(v26);
      if (v28)
      {
        uint64_t v29 = (void *)v28;
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v30 = type metadata accessor for Logger();
        __swift_project_value_buffer(v30, (uint64_t)static Logger.conversationControls);
        _s15ConversationKit11ParticipantVWOcTm_6(v25, (uint64_t)v19);
        unint64_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.error.getter();
        int v33 = v32;
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v34 = swift_slowAlloc();
          int v63 = v33;
          uint64_t v35 = (uint8_t *)v34;
          uint64_t v62 = swift_slowAlloc();
          uint64_t v70 = v62;
          uint64_t v67 = (void *)v25;
          *(_DWORD *)uint64_t v35 = 136315138;
          v60[1] = v35 + 4;
          uint64_t v61 = v35;
          _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v19, (uint64_t)v8);
          __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v65);
          uint64_t v36 = v29;
          uint64_t v37 = specialized >> prefix<A>(_:)();
          unint64_t v39 = v38;
          outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Collaboration?);
          uint64_t v40 = v37;
          uint64_t v29 = v36;
          uint64_t v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v39, &v70);
          uint64_t v25 = (uint64_t)v67;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit11ParticipantVWOhTm_4();
          uint64_t v41 = v61;
          _os_log_impl(&dword_1C2F90000, v31, (os_log_type_t)v63, "Opening collaboration activity %s", v61, 0xCu);
          uint64_t v42 = v62;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v42, -1, -1);
          MEMORY[0x1C87760E0](v41, -1, -1);
        }
        else
        {
          _s15ConversationKit11ParticipantVWOhTm_4();
        }

        uint64_t v54 = v66;
        type metadata accessor for SpringBoardUtilities();
        uint64_t v55 = swift_allocObject();
        swift_unknownObjectWeakInit();
        _s15ConversationKit11ParticipantVWOcTm_6(v25, (uint64_t)v16);
        unint64_t v56 = (*(unsigned __int8 *)(v54 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
        uint64_t v57 = (void *)swift_allocObject();
        uint64_t v58 = (uint64_t)v64;
        v57[2] = v55;
        v57[3] = v58;
        v57[4] = v68;
        outlined init with take of Collaboration((uint64_t)v16, (uint64_t)v57 + v56);
        *(void *)((char *)v57 + ((v11 + v56 + 7) & 0xFFFFFFFFFFFFFFF8)) = v29;
        swift_retain();
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v58);
        id v59 = v29;
        static SpringBoardUtilities.requestPasscodeUnlock(_:)((void (*)(uint64_t))partial apply for closure #1 in ConversationControlsManager.presentCollaboration(_:completion:), (uint64_t)v57);
        swift_release();
        swift_release();

        return;
      }
      uint64_t v52 = v64;
      if (!v64) {
        return;
      }
      uint64_t v53 = 0;
LABEL_23:
      v52(v53);
      return;
    }
    uint64_t v43 = *((void *)v21 + 5);
    uint64_t v26 = _s15ConversationKit11ParticipantVWOhTm_4();
    uint64_t v27 = v67;
    if (!v43) {
      goto LABEL_4;
    }
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v44 = type metadata accessor for Logger();
    __swift_project_value_buffer(v44, (uint64_t)static Logger.conversationControls);
    _s15ConversationKit11ParticipantVWOcTm_6(a1, (uint64_t)v13);
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v70 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v13, (uint64_t)v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v65);
      uint64_t v49 = specialized >> prefix<A>(_:)();
      unint64_t v51 = v50;
      outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Collaboration?);
      uint64_t v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v51, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit11ParticipantVWOhTm_4();
      _os_log_impl(&dword_1C2F90000, v45, v46, "App not installed for collaboration activity %s, opening app store", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v48, -1, -1);
      MEMORY[0x1C87760E0](v47, -1, -1);
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_4();
    }

    ConversationControlsManager.presentAppStore()();
    uint64_t v52 = v64;
    if (v64)
    {
      uint64_t v53 = 1;
      goto LABEL_23;
    }
  }
  else if (a2)
  {
    a2(1);
  }
}

Swift::Void __swiftcall ConversationControlsManager.presentAppStore()()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_0_20();
  OUTLINED_FUNCTION_308();
  v2();
  if (!v42)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v41, &demangling cache variable for type metadata for Activity?);
    goto LABEL_10;
  }
  uint64_t v3 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  OUTLINED_FUNCTION_157_2();
  OUTLINED_FUNCTION_74_2();
  v4();
  uint64_t v6 = v5;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  if (!v6)
  {
LABEL_10:
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    int v24 = (void *)OUTLINED_FUNCTION_30(v23, (uint64_t)static Logger.conversationControls);
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_12(v25))
    {
      uint64_t v26 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v26);
      OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v27, v28, "Unable to present App Store page, no bundleIdentifier");
      OUTLINED_FUNCTION_3();
    }

    goto LABEL_19;
  }
  uint64_t v39 = type metadata accessor for URLComponents();
  uint64_t v40 = &v37;
  OUTLINED_FUNCTION_4();
  uint64_t v38 = v7;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_16_0();
  URLComponents.init()();
  URLComponents.scheme.setter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<URLQueryItem>);
  OUTLINED_FUNCTION_89();
  uint64_t v9 = type metadata accessor for URLQueryItem();
  OUTLINED_FUNCTION_1(v9);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C3769620;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_47();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  URLComponents.queryItems.setter();
  uint64_t v10 = type metadata accessor for URL();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_5_1();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v13 = OUTLINED_FUNCTION_8(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_61();
  URLComponents.url.getter();
  OUTLINED_FUNCTION_33_0(v1, 1, v10);
  if (v14)
  {
    outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for URL?);
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)static Logger.conversationControls);
    swift_bridgeObjectRetain();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_12_4(v17))
    {
      uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_37();
      v41[0] = OUTLINED_FUNCTION_9_0();
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v19 = OUTLINED_FUNCTION_29_0();
      uint64_t v22 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, v21);
      OUTLINED_FUNCTION_319(v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2F90000, v16, v0, "Unable to create app store url from %s", v18, 0xCu);
      OUTLINED_FUNCTION_119();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v3, v39);
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_63_0();
  v29();
  id v30 = objc_msgSend(self, sel_defaultWorkspace);
  if (v30)
  {
    os_log_type_t v32 = v30;
    URL._bridgeToObjectiveC()(v31);
    uint64_t v34 = v33;
    objc_msgSend(v32, sel_openURL_configuration_completionHandler_, v33, 0, 0);

    OUTLINED_FUNCTION_139();
    v35();
    OUTLINED_FUNCTION_26_2();
    v36();
LABEL_19:
    OUTLINED_FUNCTION_28();
    return;
  }
  __break(1u);
}

void ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v92 = v3;
  uint64_t v93 = v4;
  LODWORD(v90) = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2_3();
  uint64_t v88 = v8;
  type metadata accessor for ForegroundCollaborationState(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_61();
  uint64_t v10 = type metadata accessor for StagedCollaboration(0);
  OUTLINED_FUNCTION_4();
  uint64_t v89 = v11;
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v87 = (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v91 = (uint64_t)&v82 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  unint64_t v20 = (char *)&v82 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v82 - v21;
  OUTLINED_FUNCTION_0_3();
  uint64_t v24 = (*(uint64_t (**)(void))(v23 + 656))();
  if (v24)
  {
    os_log_type_t v25 = (void *)v24;
    OUTLINED_FUNCTION_196_0();
    (*(void (**)(void))(v26 + 2008))();
    if (swift_getEnumCaseMultiPayload())
    {
      _s15ConversationKit11ParticipantVWOhTm_4();
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      uint64_t v28 = OUTLINED_FUNCTION_30(v27, (uint64_t)static Logger.conversationControls);
      os_log_type_t v29 = static os_log_type_t.error.getter();
      BOOL v30 = os_log_type_enabled(v28, v29);
      unint64_t v31 = v92;
      if (v30)
      {
        os_log_type_t v32 = (_WORD *)OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_22_1(v32);
        OUTLINED_FUNCTION_35_12(&dword_1C2F90000, v28, v29, "Cannot start collaboration as no shareable content was found by ConversationControlsManager");
        OUTLINED_FUNCTION_3();
      }

      if (v31) {
        v31(0);
      }
    }
    else
    {
      uint64_t v85 = type metadata accessor for StagedCollaboration;
      uint64_t v86 = v22;
      outlined init with take of Collaboration(v1, (uint64_t)v22);
      uint64_t v39 = OUTLINED_FUNCTION_20();
      swift_unknownObjectWeakInit();
      _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v22, (uint64_t)v20);
      _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v20, v91);
      uint64_t v40 = *((unsigned __int8 *)v89 + 80);
      uint64_t v41 = (v40 + 40) & ~v40;
      uint64_t v83 = v13 + 7;
      uint64_t v84 = v40 | 7;
      unint64_t v42 = (v13 + 7 + v41) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v43 = (void (*)())swift_allocObject();
      uint64_t v44 = v92;
      uint64_t v45 = v93;
      *((void *)v43 + 2) = v39;
      *((void *)v43 + 3) = v44;
      *((void *)v43 + 4) = v45;
      uint64_t v46 = (uint64_t)v43 + v41;
      uint64_t v47 = v43;
      outlined init with take of Collaboration((uint64_t)v20, v46);
      uint64_t v89 = v47;
      *(void *)((char *)v47 + v42) = v25;
      uint64_t v48 = (uint64_t)v86;
      uint64_t v49 = *(int *)(v10 + 40);
      uint64_t v50 = v39;
      unint64_t v51 = *(void **)&v86[v49];
      swift_retain();
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v44);
      id v52 = v25;
      id v53 = v51;
      id v54 = SWShareableContent.collaborationInitiator.getter();

      if (v90)
      {
        uint64_t v90 = v50;
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v55 = type metadata accessor for Logger();
        unint64_t v56 = (void *)OUTLINED_FUNCTION_30(v55, (uint64_t)static Logger.conversationControls);
        os_log_type_t v57 = static os_log_type_t.info.getter();
        if (OUTLINED_FUNCTION_12(v57))
        {
          uint64_t v58 = (_WORD *)OUTLINED_FUNCTION_8_0();
          OUTLINED_FUNCTION_23_1(v58);
          OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v59, v60, "Collaboration initiator was disclosed prior to initiation; skipping alert");
          OUTLINED_FUNCTION_3();
        }

        id v61 = objc_msgSend(v52, sel_UUID);
        type metadata accessor for UUID();
        OUTLINED_FUNCTION_4();
        MEMORY[0x1F4188790](v62);
        OUTLINED_FUNCTION_32_5();
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        CollaborationInitiationManager.addDisclosedInitiator(_:toConversationUUID:)((uint64_t)v54);
        uint64_t v63 = OUTLINED_FUNCTION_255();
        v64(v63);
        closure #1 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(v90, v44, v45, v91, (uint64_t)v52);
        swift_release();

        swift_release();
        _s15ConversationKit11ParticipantVWOhTm_4();
      }
      else
      {
        uint64_t v90 = (uint64_t)type metadata accessor for StagedCollaboration;
        _s15ConversationKit11ParticipantVWOhTm_4();
        swift_release();
        uint64_t v65 = type metadata accessor for TaskPriority();
        OUTLINED_FUNCTION_25_1(v88, v66, v67, v65);
        _s15ConversationKit11ParticipantVWOcTm_6(v48, v87);
        type metadata accessor for MainActor();
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v44);
        id v68 = v52;
        id v69 = v2;
        id v70 = v54;
        uint64_t v71 = v89;
        id v72 = v70;
        swift_retain();
        uint64_t v73 = static MainActor.shared.getter();
        uint64_t v74 = (v40 + 56) & ~v40;
        unint64_t v75 = v44;
        unint64_t v76 = (v83 + v74) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v77 = (void *)swift_allocObject();
        uint64_t v78 = MEMORY[0x1E4FBCFD8];
        v77[2] = v73;
        v77[3] = v78;
        v77[4] = v69;
        v77[5] = v68;
        v77[6] = v72;
        outlined init with take of Collaboration(v87, (uint64_t)v77 + v74);
        uint64_t v79 = (void (**)())((char *)v77 + v76);
        *uint64_t v79 = partial apply for closure #1 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:);
        v79[1] = v71;
        uint64_t v80 = (void (**)(uint64_t))((char *)v77 + ((v76 + 23) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v81 = v93;
        *uint64_t v80 = v75;
        v80[1] = (void (*)(uint64_t))v81;
        _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();

        swift_release();
        swift_release();
      }
      _s15ConversationKit11ParticipantVWOhTm_4();
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    uint64_t v34 = OUTLINED_FUNCTION_30(v33, (uint64_t)static Logger.conversationControls);
    os_log_type_t v35 = static os_log_type_t.error.getter();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v37 = v92;
    if (v36)
    {
      uint64_t v38 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v38);
      OUTLINED_FUNCTION_102_1(&dword_1C2F90000, v34, v35, "Cannot start collaboration as no conversation is being tracked by ConversationControlsManager");
      OUTLINED_FUNCTION_3();
    }

    if (v37) {
      v37(0);
    }
  }
  OUTLINED_FUNCTION_28();
}

void ConversationControlsManager.presentTVRemote()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationControls);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    int v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v5 = 0;
    _os_log_impl(&dword_1C2F90000, v3, v4, "Presenting TV remote control for split session", v5, 2u);
    MEMORY[0x1C87760E0](v5, -1, -1);
  }

  id v6 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_neighborhoodActivityConduit);
  id v7 = objc_msgSend(v6, sel_activeSplitSessionTV);

  if (v7)
  {
    id v8 = objc_msgSend(v7, sel_knownIdentifiersByHandleType);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue(&lazy protocol witness table cache variable for type NSNumber and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    uint64_t v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
    uint64_t v11 = specialized Dictionary.subscript.getter((uint64_t)isa, v9);
    uint64_t v13 = v12;

    swift_bridgeObjectRelease();
    if (v13)
    {
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TVRViewServiceConfigContext);
      BOOL v30 = TVRViewServiceConfigContext.__allocating_init(deviceIdentifier:identifierType:deviceType:launchContext:launchMethod:)(v11, v13, 0, 1, 12, 1);
      uint64_t v14 = self;
      id v15 = objc_msgSend(v14, sel_sharedInstance);
      objc_msgSend(v15, sel_dismiss);

      id v16 = objc_msgSend(v14, sel_sharedInstance);
      objc_msgSend(v16, sel_presentWithContext_, v30);

      if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x400))())
      {
        uint64_t v18 = v17;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v18 + 32))(0xD000000000000014, 0x80000001C37A5630, 1, ObjectType, v18);

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      BOOL v30 = v7;
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v31 = v25;
        *(_DWORD *)uint64_t v24 = 136315138;
        id v26 = [v30 debugDescription];
        uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v29 = v28;

        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v29, &v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v22, v23, "Unable to get deviceIdentifier for activeSplitSessionTV:%s", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v25, -1, -1);
        MEMORY[0x1C87760E0](v24, -1, -1);

        return;
      }
    }
  }
  else
  {
    BOOL v30 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1C2F90000, v30, v20, "Unable to present TV remote, no active TV.", v21, 2u);
      MEMORY[0x1C87760E0](v21, -1, -1);
    }
  }
}

void closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)(char a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1C8776240](a4 + 16);
  if (!v10)
  {
LABEL_5:
    if (!a2) {
      return;
    }
LABEL_16:
    a2(a1 & 1);
    return;
  }
  uint64_t v11 = v10;
  if ((a1 & 1) == 0)
  {

    if (!a2) {
      return;
    }
    a1 = 0;
    goto LABEL_16;
  }
  uint64_t v12 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v13 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & (uint64_t)v10->isa) + 0x920))(0);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))((*v12 & (uint64_t)v11->isa) + 0x8E0))(v13);
  if (v14)
  {
    id v15 = (void *)v14;
    uint64_t v30 = TUConversationActivitySession.uniqueIdentifier.getter();
    uint64_t v17 = v16;
    uint64_t v18 = type metadata accessor for TaskPriority();
    a1 = 1;
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v18);
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v20 = static MainActor.shared.getter();
    uint64_t v21 = (void *)swift_allocObject();
    uint64_t v22 = MEMORY[0x1E4FBCFD8];
    v21[2] = v20;
    void v21[3] = v22;
    uint64_t v23 = v30;
    v21[4] = v19;
    v21[5] = v23;
    v21[6] = v17;
    swift_release();
    uint64_t v24 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & (uint64_t)v11->isa) + 0x8B8))(v24);

    goto LABEL_5;
  }
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)static Logger.conversationControls);
  id v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v26, v27))
  {
    unint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v28 = 0;
    _os_log_impl(&dword_1C2F90000, v26, v27, "Not kicking applicationState timer because we couldn't find an activity", v28, 2u);
    MEMORY[0x1C87760E0](v28, -1, -1);
    unint64_t v29 = v11;
  }
  else
  {
    unint64_t v29 = v26;
    id v26 = v11;
  }

  if (a2)
  {
    a1 = 1;
    goto LABEL_16;
  }
}

uint64_t closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  type metadata accessor for MainActor();
  v6[13] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[14] = v8;
  v6[15] = v7;
  return MEMORY[0x1F4188298](closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:), v8, v7);
}

uint64_t closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void *)(v0 + 80) + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v2 = (void *)MEMORY[0x1C8776240](v1);

  if (v2)
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v3;
    *uint64_t v3 = v0;
    v3[1] = closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:);
    return MEMORY[0x1F4187DE0](10000000000);
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_6();
    return v4();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;

  OUTLINED_FUNCTION_28_0();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_13_1();
  *os_log_type_t v4 = v3;
  *os_log_type_t v4 = *v1;
  *(void *)(v3 + 136) = v0;
  swift_task_dealloc();
  int v5 = *(void *)(v2 + 120);
  uint64_t v6 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v7 = closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:);
  }
  else {
    uint64_t v7 = closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:);
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

uint64_t closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, NSObject *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_290();
  uint64_t v15 = v14[10];
  swift_release();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2();
  uint64_t v16 = MEMORY[0x1C8776240](v15 + 16);
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    OUTLINED_FUNCTION_196_0();
    uint64_t v19 = (*(uint64_t (**)(void))(v18 + 2272))();
    if (!v19)
    {
LABEL_18:

      goto LABEL_19;
    }
    uint64_t v20 = (void *)v19;
    uint64_t v22 = v14[11];
    uint64_t v21 = v14[12];
    if (TUConversationActivitySession.uniqueIdentifier.getter() == v22 && v23 == v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
      {
LABEL_17:

        goto LABEL_18;
      }
    }
    OUTLINED_FUNCTION_30_21();
    OUTLINED_FUNCTION_83_0();
    v26();
    if (objc_msgSend(v20, sel_applicationState) == (id)1)
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      __swift_project_value_buffer(v27, (uint64_t)static Logger.conversationControls);
      id v28 = v20;
      unint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_12_4(v30))
      {
        a11 = v29;
        uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_37();
        a10 = (void *)OUTLINED_FUNCTION_327();
        *(_DWORD *)uint64_t v31 = 138412290;
        v14[9] = v28;
        id v32 = v28;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *a10 = v20;

        _os_log_impl(&dword_1C2F90000, v29, (os_log_type_t)v22, "Activity %@ didn't transition applicationStates in time, resetting to .needsLaunch", v31, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        OUTLINED_FUNCTION_360();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
      }
      OUTLINED_FUNCTION_30_21();
      OUTLINED_FUNCTION_83_0();
      v33();
    }
    goto LABEL_17;
  }
LABEL_19:
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_263();
  return v35(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14);
}

uint64_t closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_290();
  a21 = v24;
  a22 = v25;
  a20 = v23;
  swift_release();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  __swift_project_value_buffer(v26, (uint64_t)static Logger.conversationControls);
  OUTLINED_FUNCTION_276();
  swift_bridgeObjectRetain_n();
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  BOOL v29 = OUTLINED_FUNCTION_2_12(v28);
  os_log_type_t v30 = (void *)v23[17];
  unint64_t v31 = v23[12];
  if (v29)
  {
    a10 = v23 + 8;
    uint64_t v32 = v23[11];
    uint64_t v33 = (_DWORD *)OUTLINED_FUNCTION_37();
    a11 = OUTLINED_FUNCTION_9_0();
    _DWORD *v33 = 136315138;
    swift_bridgeObjectRetain();
    v23[8] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v31, &a11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_335(&dword_1C2F90000, v27, v22, "Timer for activity %s was cancelled early");
    OUTLINED_FUNCTION_264();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_263();
  return v35(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14);
}

void ConversationControlsManager.presentCurrentActivity(completion:)(uint64_t a1, uint64_t a2)
{
  int v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x8E0))();
  if (v5)
  {
    oslog = v5;
    specialized ConversationControlsManager.presentActivity(activity:completion:)(v5, a1, a2, v2);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.conversationControls);
    oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1C2F90000, oslog, v7, "No activity to launch", v8, 2u);
      MEMORY[0x1C87760E0](v8, -1, -1);
    }
  }
}

Swift::Void __swiftcall ConversationControlsManager.collaborateButtonTapped()()
{
  OUTLINED_FUNCTION_0_20();
  if ((*(uint64_t (**)(void))(v0 + 1000))())
  {
    OUTLINED_FUNCTION_27_26();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
    uint64_t v1 = swift_allocObject();
    OUTLINED_FUNCTION_138_0(v1, (__n128)xmmword_1C3769620);
    OUTLINED_FUNCTION_217();
    v2();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)();
}

Swift::Void __swiftcall ConversationControlsManager.notNowButtonTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_0_20();
  if ((*(uint64_t (**)(void))(v1 + 1000))())
  {
    OUTLINED_FUNCTION_27_26();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
    uint64_t v2 = swift_allocObject();
    OUTLINED_FUNCTION_138_0(v2, (__n128)xmmword_1C3769620);
    OUTLINED_FUNCTION_217();
    v3();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  ConversationControlsManager.suppressCollaborationHUD()();
}

uint64_t ConversationControlsManager.suppressCollaborationHUD()()
{
  uint64_t v1 = type metadata accessor for ForegroundCollaborationState(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  os_log_type_t v4 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))((*MEMORY[0x1E4FBC8C8] & *v0)
                                                                                   + 0x7E8))(v12);
  uint64_t v6 = v5;
  _s15ConversationKit11ParticipantVWOcTm_6(v5, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date))
                      + 48)];
      uint64_t v9 = type metadata accessor for Date();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      goto LABEL_4;
    case 2u:
LABEL_4:
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v10 - 8) + 8))(v3, v10);
      break;
    case 3u:
    case 4u:
      return v4(v12, 0);
    default:
      _s15ConversationKit11ParticipantVWOhTm_4();
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool))
                  + 48);
      outlined init with take of Collaboration((uint64_t)v3, v6);
      *(unsigned char *)(v6 + v7) = 1;
      swift_storeEnumTagMultiPayload();
      break;
  }
  return v4(v12, 0);
}

Swift::Void __swiftcall ConversationControlsManager.okAndDismissButtonTapped(button:)(UIControl *button)
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_30(v1, (uint64_t)static Logger.conversationControls);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v3))
  {
    os_log_type_t v4 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v4);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v5, v6, "Ok/Dismiss button tapped");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_161();
  if ((*(uint64_t (**)(void))(v7 + 80))())
  {
    OUTLINED_FUNCTION_211();
    OUTLINED_FUNCTION_67_3();
    if (v8())
    {
      OUTLINED_FUNCTION_27_26();
      OUTLINED_FUNCTION_295();
      OUTLINED_FUNCTION_292();
      v9();
      swift_unknownObjectRelease();
    }
  }
  OUTLINED_FUNCTION_210();
  OUTLINED_FUNCTION_67_3();
  if (v10())
  {
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_103_0();
    unint64_t v11 = OUTLINED_FUNCTION_61_6(24);
    v12(v11);
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall ConversationControlsManager.swapButtonTapped(button:)(UIControl *button)
{
  uint64_t v2 = v1;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  os_log_type_t v4 = (void *)OUTLINED_FUNCTION_30(v3, (uint64_t)static Logger.conversationControls);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v5))
  {
    uint64_t v6 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v6);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v7, v8, "Swap held call button tapped");
    OUTLINED_FUNCTION_3();
  }

  ConversationControlsManager.jumpToAppIfNeeded()();
  OUTLINED_FUNCTION_1_12();
  if ((*(uint64_t (**)(void))(v9 + 1000))())
  {
    OUTLINED_FUNCTION_27_26();
    OUTLINED_FUNCTION_271();
    v10();
    swift_unknownObjectRelease();
  }
  unint64_t v11 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
  objc_msgSend(v11, sel_swapCalls);
}

void ConversationControlsManager.jumpToAppIfNeeded()()
{
  id v1 = objc_msgSend(self, sel_configurationForDefaultMainDisplayMonitor);
  objc_msgSend(v1, sel_setNeedsUserInteractivePriority_, 1);
  id v56 = objc_msgSend(self, sel_monitorWithConfiguration_, v1);
  id v2 = objc_msgSend(v56, sel_currentLayout);
  if (!v2)
  {
LABEL_23:
    objc_msgSend(v56, sel_invalidate);

    return;
  }
  uint64_t v3 = (uint64_t)v2;
  id v4 = objc_msgSend(v2, sel_elements);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for FBSDisplayLayoutElement);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v53 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter];
  id v6 = objc_msgSend(v53, sel_currentCalls);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v55 = v5;
  if (v7 >> 62) {
    goto LABEL_46;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8)
  {
LABEL_11:
    swift_bridgeObjectRelease_n();

LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
LABEL_4:
  uint64_t v9 = 4;
  while (1)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v10 = (id)MEMORY[0x1C87744F0](v9 - 4, v7);
    }
    else {
      id v10 = *(id *)(v7 + 8 * v9);
    }
    unint64_t v11 = v10;
    uint64_t v12 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      if (!v8) {
        goto LABEL_11;
      }
      goto LABEL_4;
    }
    if (objc_msgSend(v10, sel_status) == 2) {
      break;
    }

    ++v9;
    if (v12 == v8) {
      goto LABEL_11;
    }
  }
  id v52 = (void *)v3;
  swift_bridgeObjectRelease_n();
  id v13 = objc_msgSend(v53, sel_currentCalls);
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    if (v15) {
      goto LABEL_15;
    }
    goto LABEL_22;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v15)
  {
LABEL_22:
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
LABEL_15:
  uint64_t v3 = 4;
  while (1)
  {
    if ((v14 & 0xC000000000000001) != 0) {
      id v16 = (id)MEMORY[0x1C87744F0](v3 - 4, v14);
    }
    else {
      id v16 = *(id *)(v14 + 8 * v3);
    }
    unint64_t v7 = (unint64_t)v16;
    uint64_t v17 = v3 - 3;
    if (__OFADD__(v3 - 4, 1)) {
      goto LABEL_45;
    }
    if (objc_msgSend(v16, sel_status) == 1) {
      break;
    }

    ++v3;
    if (v17 == v15) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v18 = outlined bridged method (ob) of @objc TUConversationActivity.concatenatedMetadataDescription.getter(objc_msgSend(v11, sel_provider), (SEL *)&selRef_bundleIdentifier);
  unint64_t v51 = ConversationControlsManager.phoneToICSBundleID(_:)(v18, v19);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (!v21)
  {

    goto LABEL_12;
  }
  id v22 = objc_msgSend(v11, sel_provider);
  unsigned __int8 v23 = objc_msgSend(v22, sel_isSystemProvider);

  uint64_t v24 = v52;
  if (v23)
  {
    id v25 = objc_msgSend((id)v7, sel_provider);
    unsigned __int8 v26 = objc_msgSend(v25, sel_isSystemProvider);

    if (v26)
    {

LABEL_72:
      swift_bridgeObjectRelease();

      goto LABEL_12;
    }
  }
  id v27 = objc_msgSend(v53, sel_currentCalls);
  unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v29 = specialized Sequence.compactMap<A>(_:)(v28, v0);
  swift_bridgeObjectRelease();
  uint64_t v30 = specialized Set.init<A>(_:)(v29);
  swift_bridgeObjectRetain();
  uint64_t v31 = Set.init(minimumCapacity:)();
  uint64_t v58 = v31;
  if (v55 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v32) {
      goto LABEL_51;
    }
LABEL_32:
    id v54 = (id)v30;
    if (v32 >= 1)
    {
      for (uint64_t i = 0; i != v32; ++i)
      {
        if ((v55 & 0xC000000000000001) != 0) {
          id v34 = (id)MEMORY[0x1C87744F0](i, v55);
        }
        else {
          id v34 = *(id *)(v55 + 8 * i + 32);
        }
        os_log_type_t v35 = v34;
        if (objc_msgSend(v34, sel_isUIApplicationElement))
        {
          uint64_t v36 = outlined bridged method (pb) of @objc FBSDisplayLayoutElement.bundleIdentifier.getter(v35);
          uint64_t v38 = v37;

          if (v38)
          {
            specialized Set._Variant.insert(_:)(v57, v36, v38);
            swift_bridgeObjectRelease();
          }
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v31 = v58;
      uint64_t v24 = v52;
      uint64_t v30 = (uint64_t)v54;
      goto LABEL_52;
    }
  }
  else
  {
    uint64_t v32 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v32) {
      goto LABEL_32;
    }
LABEL_51:
    swift_bridgeObjectRelease();
LABEL_52:
    uint64_t v39 = specialized _NativeSet.intersection(_:)(v31, v30);
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void *)(v39 + 16);
    swift_release();
    if (!v40)
    {

      goto LABEL_72;
    }
    if (!v32)
    {
LABEL_70:
      v50._uint64_t countAndFlagsBits = v51;
      v50._object = v21;
      ConversationControlsManager.openApp(withBundleIdentifier:)(v50);

      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRetain();
    uint64_t v41 = 4;
    while (1)
    {
      id v42 = (v55 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1C87744F0](v41 - 4, v55)
          : *(id *)(v55 + 8 * v41);
      uint64_t v43 = v42;
      uint64_t v44 = v41 - 3;
      if (__OFADD__(v41 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v42, sel_isUIApplicationElement))
      {
        uint64_t v45 = outlined bridged method (pb) of @objc FBSDisplayLayoutElement.bundleIdentifier.getter(v43);
        uint64_t v47 = v46;

        uint64_t v24 = v52;
        if (v47)
        {
          if (v45 == v51 && v47 == v21)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_74;
          }
          char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v49)
          {
            swift_bridgeObjectRelease();
LABEL_74:
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            goto LABEL_23;
          }
        }
      }
      else
      {

        uint64_t v24 = v52;
      }
      ++v41;
      if (v44 == v32)
      {
        swift_bridgeObjectRelease();
        goto LABEL_70;
      }
    }
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall ConversationControlsManager.resumeCallButtonTapped()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_30(v2, (uint64_t)static Logger.conversationControls);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v4))
  {
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v5);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v6, v7, "Resume call button tapped");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_145_0();
  OUTLINED_FUNCTION_90_2();
  v8();
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = *(id *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
    objc_msgSend(v11, sel_unholdCall_, v10);
  }
  swift_unknownObjectRelease();
}

Swift::Void __swiftcall ConversationControlsManager.shareNameAndPhotoTapped(button:)(UIControl *button)
{
}

Swift::Void __swiftcall ConversationControlsManager.shareNameTapped(button:)(UIControl *button)
{
}

Swift::Void __swiftcall ConversationControlsManager.acceptNameTapped(button:)(UIControl *button)
{
}

void ConversationControlsManager.shareNameAndPhotoTapped(button:)()
{
  OUTLINED_FUNCTION_31();
  v35[0] = v1;
  v35[1] = v2;
  os_log_type_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  OUTLINED_FUNCTION_0();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  id v11 = (char *)v35 - v10;
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)v35 - v12;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = OUTLINED_FUNCTION_30(v14, (uint64_t)static Logger.conversationControls);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_104(v16))
  {
    uint64_t v17 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_23_1(v17);
    OUTLINED_FUNCTION_102_1(&dword_1C2F90000, v15, v0, v6);
    OUTLINED_FUNCTION_3();
  }

  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_236();
  OUTLINED_FUNCTION_90_2();
  v20(v18, v19);
  OUTLINED_FUNCTION_372();
  v4(v21, v22);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_5_49();
  (*(void (**)(uint64_t, uint64_t))(v23 + 2352))(v24, v25);
  _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v13, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() - 9 >= 3)
  {
    _s15ConversationKit11ParticipantVWOhTm_4();
    _s15ConversationKit11ParticipantVWOhTm_4();
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_4();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_5_49();
    OUTLINED_FUNCTION_377();
    v28(v26, v27);
  }
  OUTLINED_FUNCTION_236();
  OUTLINED_FUNCTION_67_3();
  if (v31(v29, v30))
  {
    OUTLINED_FUNCTION_106_0();
    OUTLINED_FUNCTION_103_0();
    OUTLINED_FUNCTION_107_1();
    v34(v32, v33);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationControlsManager.acceptScreenShareRequestTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_17_0();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.conversationControls);
  id v5 = v1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_107(v7))
  {
    uint64_t v8 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v19 = OUTLINED_FUNCTION_9_0();
    *uint64_t v8 = 136315138;
    type metadata accessor for ConversationControlsManager(0);
    id v9 = v5;
    uint64_t v10 = String.init<A>(reflecting:)();
    uint64_t v12 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v19);
    OUTLINED_FUNCTION_32_4(v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_154_0(&dword_1C2F90000, v6, v13, "Allow screen share request tapped %s");
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v14 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_54_1(v14);
  id v15 = v5;
  uint64_t v16 = static MainActor.shared.getter();
  uint64_t v17 = (void *)OUTLINED_FUNCTION_3_0();
  uint64_t v18 = MEMORY[0x1E4FBCFD8];
  v17[2] = v16;
  v17[3] = v18;
  v17[4] = v15;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in ConversationControlsManager.acceptScreenShareRequestTapped(button:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 48) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 56) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in ConversationControlsManager.acceptScreenShareRequestTapped(button:), v6, v5);
}

void closure #1 in ConversationControlsManager.acceptScreenShareRequestTapped(button:)()
{
  swift_release();
  ConversationControlsManager.removeIncomingScreenShareRequest()();
  OUTLINED_FUNCTION_139_0();
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 656))();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    specialized Conversation.currentScreenSharingRequest(ignoring:)();
    uint64_t v5 = v4;

    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_UUID);
      uint64_t v7 = type metadata accessor for UUID();
      OUTLINED_FUNCTION_4();
      uint64_t v8 = OUTLINED_FUNCTION_191();
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      OUTLINED_FUNCTION_139_0();
      uint64_t v10 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(v9 + 680))(v0 + 16);
      uint64_t v12 = v11;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v13 = *(void *)(*(void *)v12 + 16);
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      OUTLINED_FUNCTION_182(v13 + 1);
      v16(v14 + v15 * v13, v8, v7);
      v10(v0 + 16, 0);

      swift_task_dealloc();
    }
  }
  ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1);
  ConversationControlsManager.showHUD()();
  ConversationControlsManager.startScreenShareWithCountdown(completion:)();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_24_5();
  __asm { BRAA            X1, X16 }
}

uint64_t ConversationControlsManager.removeIncomingScreenShareRequest()()
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.conversationControls);
  uint64_t v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  id v6 = (void *)MEMORY[0x1E4FBC8C8];
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v19 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    if ((*(uint64_t (**)(void))((*v6 & *v2) + 0x568))())
    {
      type metadata accessor for HUDActivity(0);
      uint64_t v9 = String.init<A>(reflecting:)();
      unint64_t v11 = v10;
    }
    else
    {
      unint64_t v11 = 0xE300000000000000;
      uint64_t v9 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v11, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    type metadata accessor for ConversationControlsManager(0);
    uint64_t v14 = v2;
    uint64_t v15 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v3, v4, "Ending incomingScreenShareRequest activity %s %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v8, -1, -1);
    MEMORY[0x1C87760E0](v7, -1, -1);

    id v6 = (void *)MEMORY[0x1E4FBC8C8];
  }
  else
  {
  }
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))((*v6 & *v2) + 0x568))(v12, v13);
  if (v17)
  {
    (*(void (**)(uint64_t))(*(void *)v17 + 224))(v17);
    swift_release();
  }
  return (*(uint64_t (**)(void))((*v6 & *v2) + 0x570))(0);
}

Swift::Void __swiftcall ConversationControlsManager.cancelScreenShareRequestTapped(button:)(UIControl *button)
{
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_17_0();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  id v6 = (void *)OUTLINED_FUNCTION_30(v5, (uint64_t)static Logger.conversationControls);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_105(v7))
  {
    uint64_t v8 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_180(v8);
    OUTLINED_FUNCTION_35_1(&dword_1C2F90000, v9, v10, "Cancel screen share request tapped");
    OUTLINED_FUNCTION_3();
  }

  uint64_t v11 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_54_1(v11);
  id v12 = v2;
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_3_0();
  uint64_t v15 = MEMORY[0x1E4FBCFD8];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v12;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
}

uint64_t closure #1 in ConversationControlsManager.cancelScreenShareRequestTapped(button:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in ConversationControlsManager.cancelScreenShareRequestTapped(button:), v6, v5);
}

uint64_t closure #1 in ConversationControlsManager.cancelScreenShareRequestTapped(button:)()
{
  OUTLINED_FUNCTION_17_2();
  swift_release();
  ConversationControlsManager.removeIncomingScreenShareRequest()();
  OUTLINED_FUNCTION_0_3();
  if ((*(uint64_t (**)(void))(v0 + 1024))())
  {
    OUTLINED_FUNCTION_106_0();
    OUTLINED_FUNCTION_103_0();
    OUTLINED_FUNCTION_345();
    unint64_t v1 = OUTLINED_FUNCTION_61_6(41);
    v2(v1);
    swift_unknownObjectRelease();
  }
  ConversationControlsManager.declineOrCancelScreenShareRequest()();
  OUTLINED_FUNCTION_6();
  return v3();
}

Swift::Void __swiftcall ConversationControlsManager.declineScreenShareRequestTapped(button:)(UIControl *button)
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_30(v1, (uint64_t)static Logger.conversationControls);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v3))
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v4);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v5, v6, "Decline screen share request tapped");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_145_0();
  OUTLINED_FUNCTION_67_3();
  if (v7())
  {
    OUTLINED_FUNCTION_27_26();
    OUTLINED_FUNCTION_157_2();
    OUTLINED_FUNCTION_107_1();
    v8();
    swift_unknownObjectRelease();
  }
  ConversationControlsManager.declineOrCancelScreenShareRequest()();
}

Swift::Void __swiftcall ConversationControlsManager.acceptRemoteControlRequestTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = OUTLINED_FUNCTION_193(v5, v80);
  uint64_t v86 = (uint64_t *)type metadata accessor for Participant(v6);
  OUTLINED_FUNCTION_0();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v12 = (char *)&v80 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  uint64_t v14 = OUTLINED_FUNCTION_8(v13);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2_3();
  uint64_t v87 = v15;
  uint64_t v16 = type metadata accessor for Participant();
  OUTLINED_FUNCTION_4();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_16_0();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  os_log_type_t v21 = __swift_project_value_buffer(v20, (uint64_t)static Logger.conversationControls);
  id v22 = v1;
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  BOOL v25 = OUTLINED_FUNCTION_105(v24);
  uint64_t v82 = v10;
  uint64_t v83 = v12;
  if (v25)
  {
    uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v27 = (void *)OUTLINED_FUNCTION_9_0();
    uint64_t v84 = v18;
    v90[0] = v27;
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v81 = v26 + 4;
    uint64_t v88 = (uint64_t)v22;
    type metadata accessor for ConversationControlsManager(0);
    uint64_t v28 = v2;
    uint64_t v29 = v16;
    id v30 = v22;
    uint64_t v31 = String.init<A>(reflecting:)();
    uint64_t v88 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, (uint64_t *)v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v16 = v29;
    uint64_t v2 = v28;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v23, v21, "Allow remote control request tapped %s", v26, 0xCu);
    OUTLINED_FUNCTION_360();
    uint64_t v18 = v84;
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  OUTLINED_FUNCTION_227();
  OUTLINED_FUNCTION_67_3();
  if (v33())
  {
    OUTLINED_FUNCTION_144_0();
    OUTLINED_FUNCTION_107_1();
    v34();
    swift_unknownObjectRelease();
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  uint64_t v36 = (void *)(*(uint64_t (**)(void))(v35 + 888))();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_99();
  (*(void (**)(id *__return_ptr))(v37 + 376))(v90);
  id v38 = v90[0];
  if ((unint64_t)v90[0] >> 61)
  {
    uint64_t v41 = 1;
    uint64_t v39 = v87;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
    OUTLINED_FUNCTION_276();
    swift_projectBox();
    uint64_t v39 = v87;
    OUTLINED_FUNCTION_2_1();
    v40();
    uint64_t v41 = 0;
  }
  OUTLINED_FUNCTION_64_2(v39, v41);
  outlined consume of RemoteControlState((unint64_t)v38);
  OUTLINED_FUNCTION_33_0(v39, 1, v16);
  if (v52)
  {
    swift_bridgeObjectRelease();
    id v42 = (uint64_t *)&demangling cache variable for type metadata for Participant?;
    uint64_t v43 = v39;
LABEL_21:
    outlined destroy of SystemUpdateNotice?(v43, v42);
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_30_15();
  OUTLINED_FUNCTION_63_0();
  v44();
  OUTLINED_FUNCTION_227();
  uint64_t v46 = (*(uint64_t (**)(void))(v45 + 2312))();
  MEMORY[0x1F4188790](v46);
  *(&v80 - 2) = v2;
  specialized _ArrayProtocol.filter(_:)();
  uint64_t v47 = v85;
  specialized Collection.first.getter(v48, v85);
  swift_bridgeObjectRelease();
  uint64_t v49 = OUTLINED_FUNCTION_287();
  uint64_t v50 = (uint64_t)v86;
  OUTLINED_FUNCTION_33_0(v49, v51, (uint64_t)v86);
  if (v52)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_19();
    v53();
    id v42 = &demangling cache variable for type metadata for Participant?;
    uint64_t v43 = v47;
    goto LABEL_21;
  }
  uint64_t v81 = (uint8_t *)v2;
  uint64_t v87 = v16;
  uint64_t v55 = (uint64_t)v83;
  outlined init with take of Collaboration(v47, (uint64_t)v83);
  id v56 = *(void **)(v55 + *(int *)(v50 + 28));
  uint64_t v84 = v18;
  if (v56)
  {
    id v57 = v56;
    outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v57);
    if (v58)
    {
      if (objc_msgSend(v57, sel_shouldHideContact))
      {
        uint64_t v85 = type metadata accessor for PersonNameComponents();
        uint64_t v86 = &v80;
        OUTLINED_FUNCTION_4();
        MEMORY[0x1F4188790](v59);
        OUTLINED_FUNCTION_60();
        swift_bridgeObjectRetain();
        PersonNameComponents.init()();
        PersonNameComponents.givenName.setter();
        PersonNameComponents.familyName.setter();
        if (one-time initialization token for initials != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_2();
        id v60 = (id)static NSPersonNameComponentsFormatter.initials;
        Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
        id v62 = objc_msgSend(v60, sel_stringFromPersonNameComponents_, isa);

        uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v65 = v64;

        OUTLINED_FUNCTION_139();
        v66();
        uint64_t v88 = v63;
        uint64_t v89 = v65;
        lazy protocol witness table accessor for type String and conformance String();
        StringProtocol.localizedUppercase.getter();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _s15ConversationKit11ParticipantVWOhTm_4();
        OUTLINED_FUNCTION_26_2();
        v67();
        goto LABEL_22;
      }

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  _s15ConversationKit11ParticipantVWOcTm_6(v55, (uint64_t)v82);
  id v68 = *(void **)(v55 + *(int *)(v50 + 64));
  swift_retain();
  id v69 = v68;
  ParticipantContactDetailsCache.contactDetails(for:)();
  id v70 = v90[0];
  id v71 = v90[0];
  OUTLINED_FUNCTION_375();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  _s15ConversationKit11ParticipantVWOhTm_4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v70)
  {
    id v72 = objc_msgSend(v68, sel_identifier);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Participant.handle.getter();
    v73._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_24_2();
    String.hashWithSalt(salt:)(v73);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v74 = OUTLINED_FUNCTION_41_0();
    LOBYTE(v72) = specialized Sequence<>.contains(_:)(v74, v75, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v72 & 1) == 0)
    {
      OUTLINED_FUNCTION_99();
      (*(void (**)(void))(v78 + 496))();
      _s15ConversationKit11ParticipantVWOhTm_4();
      OUTLINED_FUNCTION_139();
      v79();
      goto LABEL_23;
    }
    _s15ConversationKit11ParticipantVWOhTm_4();
    OUTLINED_FUNCTION_139();
    v76();
  }
  else
  {
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOhTm_4();
    OUTLINED_FUNCTION_139();
    v77();
  }
LABEL_22:
  OUTLINED_FUNCTION_99();
  (*(void (**)(uint64_t))(v54 + 504))(1);
LABEL_23:
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationControlsManager.declineRemoteControlRequestTapped(button:)(UIControl *button)
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_30(v1, (uint64_t)static Logger.conversationControls);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v3))
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v4);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v5, v6, "Decline remote control request tapped");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_67_3();
  if (v7())
  {
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_103_0();
    unint64_t v8 = OUTLINED_FUNCTION_61_6(21);
    v9(v8);
    swift_unknownObjectRelease();
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_13();
  (*(void (**)(void))(v10 + 504))(0);
}

Swift::Void __swiftcall ConversationControlsManager.cancelRemoteControlRequestTapped(button:)(UIControl *button)
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_30(v1, (uint64_t)static Logger.conversationControls);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v3))
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v4);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v5, v6, "Cancel remote control request tapped");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_161();
  if ((*(uint64_t (**)(void))(v7 + 80))())
  {
    OUTLINED_FUNCTION_211();
    OUTLINED_FUNCTION_67_3();
    if (v8())
    {
      OUTLINED_FUNCTION_27_26();
      OUTLINED_FUNCTION_295();
      OUTLINED_FUNCTION_345();
      OUTLINED_FUNCTION_292();
      v9();
      swift_unknownObjectRelease();
    }
  }
  OUTLINED_FUNCTION_210();
  OUTLINED_FUNCTION_67_3();
  if (v10())
  {
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_103_0();
    unint64_t v11 = OUTLINED_FUNCTION_61_6(20);
    v12(v11);
    swift_unknownObjectRelease();
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_161();
  (*(void (**)(void))(v13 + 512))();
}

Swift::Void __swiftcall ConversationControlsManager.endRemoteControlSessionTapped(button:)(UIControl *button)
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_30(v1, (uint64_t)static Logger.conversationControls);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v3))
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v4);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v5, v6, "End remote control session tapped");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_161();
  if ((*(uint64_t (**)(void))(v7 + 80))())
  {
    OUTLINED_FUNCTION_211();
    OUTLINED_FUNCTION_67_3();
    if (v8())
    {
      OUTLINED_FUNCTION_27_26();
      OUTLINED_FUNCTION_295();
      OUTLINED_FUNCTION_197();
      OUTLINED_FUNCTION_292();
      v9();
      swift_unknownObjectRelease();
    }
  }
  OUTLINED_FUNCTION_210();
  OUTLINED_FUNCTION_67_3();
  if (v10())
  {
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_103_0();
    unint64_t v11 = OUTLINED_FUNCTION_61_6(33);
    v12(v11);
    swift_unknownObjectRelease();
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_161();
  (*(void (**)(void))(v13 + 520))();
}

Swift::Void __swiftcall ConversationControlsManager.learnMoreNotTrustedContactTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_31();
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationControls);
  os_log_type_t v3 = (void *)Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_105(v4))
  {
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_180(v5);
    OUTLINED_FUNCTION_35_1(&dword_1C2F90000, v6, v7, "Learn more about not trusted contacts tapped");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_3_16();
  if ((*(uint64_t (**)(void))(v8 + 80))())
  {
    OUTLINED_FUNCTION_67_3();
    if (v9())
    {
      OUTLINED_FUNCTION_144_0();
      OUTLINED_FUNCTION_197();
      OUTLINED_FUNCTION_368();
      v10();
      swift_unknownObjectRelease();
    }
  }
  OUTLINED_FUNCTION_67_3();
  uint64_t v12 = v11();
  if (v12)
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_157_2();
    OUTLINED_FUNCTION_107_1();
    v13();
    swift_unknownObjectRelease();
  }
  uint64_t v14 = type metadata accessor for URL();
  OUTLINED_FUNCTION_4();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_62();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v19 = OUTLINED_FUNCTION_8(v18);
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_47();
  URL.init(string:)();
  OUTLINED_FUNCTION_33_0(v12, 1, v14);
  if (v20)
  {
    outlined destroy of SystemUpdateNotice?(v12, &demangling cache variable for type metadata for URL?);
    os_log_type_t v21 = (void *)Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_12(v22))
    {
      uint64_t v23 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v23);
      OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v24, v25, "Failed to create URL");
      OUTLINED_FUNCTION_3();
    }
  }
  else
  {
    OUTLINED_FUNCTION_63_0();
    v26();
    URL._bridgeToObjectiveC()(v27);
    uint64_t v29 = v28;
    int v30 = TUOpenURLWithError();

    id v42 = 0;
    if (v30)
    {
      uint64_t v31 = *(void (**)(void))(v16 + 8);
      id v32 = 0;
      OUTLINED_FUNCTION_139();
      v31();
    }
    else
    {
      id v33 = 0;
      id v34 = Logger.logObject.getter();
      int v35 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v34, (os_log_type_t)v35))
      {
        uint64_t v36 = (uint8_t *)OUTLINED_FUNCTION_37();
        uint64_t v41 = OUTLINED_FUNCTION_9_0();
        *(_DWORD *)uint64_t v36 = 136315138;
        OUTLINED_FUNCTION_2();
        if (v42)
        {
          type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSError);
          id v37 = v42;
          uint64_t v38 = String.init<A>(reflecting:)();
          unint64_t v40 = v39;
        }
        else
        {
          unint64_t v40 = 0xE300000000000000;
          uint64_t v38 = 7104878;
        }
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v40, &v41);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v34, (os_log_type_t)v35, "Failed to launch learn more URL, reason: %s", v36, 0xCu);
        OUTLINED_FUNCTION_78_0();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v14);
    }
  }
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationControlsManager.dismissEnhancedEmergencyRequestTapped(button:)(UIControl *button)
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.conversationControls);
  os_log_type_t v3 = (void *)Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_105(v4))
  {
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_180(v5);
    OUTLINED_FUNCTION_35_1(&dword_1C2F90000, v6, v7, "EnhancedEmergency: dismiss enhanced emergency request tapped");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_67_3();
  if (v8())
  {
    OUTLINED_FUNCTION_144_0();
    double v9 = OUTLINED_FUNCTION_86_3();
    v10(v9);
    swift_unknownObjectRelease();
    outlined destroy of ConversationControlsType((uint64_t)v29);
  }
  unint64_t v11 = (void *)Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v12))
  {
    uint64_t v13 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v13);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v14, v15, "EnhancedEmergency: send request wanna dismiss notification");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_30_21();
  v16 += 125;
  uint64_t v17 = *v16;
  if ((*v16)())
  {
    uint64_t v18 = OUTLINED_FUNCTION_27_26();
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v2 + 48))(v33, v18, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v34 = 0;
    memset(v33, 0, sizeof(v33));
    char v35 = -1;
  }
  v31[0] = 19;
  OUTLINED_FUNCTION_309_0();
  char v32 = v19;
  outlined init with copy of Participant?((uint64_t)v33, (uint64_t)v29, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined init with copy of Participant?((uint64_t)v31, (uint64_t)v30, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v29[40] == 255)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v31, &demangling cache variable for type metadata for ConversationControlsType?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v33, &demangling cache variable for type metadata for ConversationControlsType?);
    OUTLINED_FUNCTION_302();
    if (v20)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v29, &demangling cache variable for type metadata for ConversationControlsType?);
      goto LABEL_19;
    }
LABEL_22:
    outlined destroy of SystemUpdateNotice?((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for (ConversationControlsType?, ConversationControlsType?));
    goto LABEL_23;
  }
  outlined init with copy of Participant?((uint64_t)v29, (uint64_t)v28, &demangling cache variable for type metadata for ConversationControlsType?);
  OUTLINED_FUNCTION_302();
  if (v20)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v31, &demangling cache variable for type metadata for ConversationControlsType?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v33, &demangling cache variable for type metadata for ConversationControlsType?);
    outlined destroy of ConversationControlsType((uint64_t)v28);
    goto LABEL_22;
  }
  outlined init with take of ConversationControlsType(v30, v27);
  char v21 = static ConversationControlsType.== infix(_:_:)((uint64_t)v28);
  outlined destroy of ConversationControlsType((uint64_t)v27);
  outlined destroy of SystemUpdateNotice?((uint64_t)v31, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined destroy of SystemUpdateNotice?((uint64_t)v33, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined destroy of ConversationControlsType((uint64_t)v28);
  outlined destroy of SystemUpdateNotice?((uint64_t)v29, &demangling cache variable for type metadata for ConversationControlsType?);
  if ((v21 & 1) == 0)
  {
LABEL_23:
    id v22 = objc_msgSend(self, sel_defaultCenter);
    if (one-time initialization token for enhancedEmergencyRequestWannaDismissNotification == -1) {
      goto LABEL_24;
    }
    goto LABEL_27;
  }
LABEL_19:
  id v22 = objc_msgSend(self, sel_defaultCenter);
  if (one-time initialization token for enhancedEmergencyUploadDismissDuringStreamingNotification != -1) {
LABEL_27:
  }
    swift_once();
LABEL_24:
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = (void *)MEMORY[0x1C87730B0](v23);
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_postNotificationName_object_, v24, 0);

  if (v17())
  {
    OUTLINED_FUNCTION_107_0();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
    uint64_t v25 = swift_allocObject();
    OUTLINED_FUNCTION_66_4(v25, (__n128)xmmword_1C376BA10);
    OUTLINED_FUNCTION_79_3();
    v26();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall ConversationControlsManager.previewEnhancedEmergencyRequestTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_254();
  uint64_t v23 = v1;
  uint64_t v24 = v2;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  os_log_type_t v4 = (void *)OUTLINED_FUNCTION_30(v3, (uint64_t)static Logger.conversationControls);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v5))
  {
    uint64_t v6 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v6);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v7, v8, "EnhancedEmergency: preview enhanced emergency request tapped");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_30_21();
  uint64_t v10 = *(uint64_t (**)(void))(v9 + 1024);
  OUTLINED_FUNCTION_212();
  if (v10())
  {
    OUTLINED_FUNCTION_27_26();
    uint64_t v19 = 7;
    long long v20 = 0u;
    long long v21 = 0u;
    char v22 = 6;
    OUTLINED_FUNCTION_272();
    v11(&v19, 1);
    swift_unknownObjectRelease();
    outlined destroy of ConversationControlsType((uint64_t)&v19);
  }
  OUTLINED_FUNCTION_212();
  if (v10())
  {
    OUTLINED_FUNCTION_27_26();
    OUTLINED_FUNCTION_270();
    v12();
    swift_unknownObjectRelease();
  }
  id v13 = objc_msgSend(self, sel_defaultCenter);
  if (one-time initialization token for enhancedEmergencyPreviewRequestNotification != -1) {
    swift_once();
  }
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = (void *)MEMORY[0x1C87730B0](v14);
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_postNotificationName_object_, v15, 0);

  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_50_2();
  if (v16())
  {
    OUTLINED_FUNCTION_107_0();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C37696D0;
    *(void *)(v17 + 32) = 18;
    *(_OWORD *)(v17 + 40) = 0u;
    *(_OWORD *)(v17 + 56) = 0u;
    *(unsigned char *)(v17 + 72) = 6;
    OUTLINED_FUNCTION_214(v17, 6, (__n128)0);
    OUTLINED_FUNCTION_79_3();
    v18();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_252();
}

Swift::Void __swiftcall ConversationControlsManager.choosePhotoEnhancedEmergencyRequestTapped(button:)(UIControl *button)
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.conversationControls);
  uint64_t v3 = (void *)Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_105(v4))
  {
    os_log_type_t v5 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_180(v5);
    OUTLINED_FUNCTION_35_1(&dword_1C2F90000, v6, v7, "EnhancedEmergency: choose photo enhanced emergency request tapped");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_30_21();
  uint64_t v9 = *(uint64_t (**)(void))(v8 + 1024);
  OUTLINED_FUNCTION_212();
  if (v9())
  {
    OUTLINED_FUNCTION_144_0();
    double v10 = OUTLINED_FUNCTION_86_3();
    v11(v10);
    swift_unknownObjectRelease();
    outlined destroy of ConversationControlsType((uint64_t)v32);
  }
  os_log_type_t v12 = (void *)Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v13))
  {
    uint64_t v14 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v14);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v15, v16, "EnhancedEmergency: send request to choose photo notification");
    OUTLINED_FUNCTION_3();
  }

  OUTLINED_FUNCTION_30_21();
  v17 += 125;
  uint64_t v18 = *v17;
  if ((*v17)())
  {
    uint64_t v19 = OUTLINED_FUNCTION_27_26();
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v2 + 48))(v36, v19, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v37 = 0;
    memset(v36, 0, sizeof(v36));
    char v38 = -1;
  }
  v34[0] = 19;
  OUTLINED_FUNCTION_309_0();
  char v35 = v20;
  outlined init with copy of Participant?((uint64_t)v36, (uint64_t)v32, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined init with copy of Participant?((uint64_t)v34, (uint64_t)v33, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v32[40] == 255)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v34, &demangling cache variable for type metadata for ConversationControlsType?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v36, &demangling cache variable for type metadata for ConversationControlsType?);
    OUTLINED_FUNCTION_302();
    if (v21)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v32, &demangling cache variable for type metadata for ConversationControlsType?);
      goto LABEL_19;
    }
LABEL_22:
    outlined destroy of SystemUpdateNotice?((uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for (ConversationControlsType?, ConversationControlsType?));
    goto LABEL_23;
  }
  outlined init with copy of Participant?((uint64_t)v32, (uint64_t)v31, &demangling cache variable for type metadata for ConversationControlsType?);
  OUTLINED_FUNCTION_302();
  if (v21)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v34, &demangling cache variable for type metadata for ConversationControlsType?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v36, &demangling cache variable for type metadata for ConversationControlsType?);
    outlined destroy of ConversationControlsType((uint64_t)v31);
    goto LABEL_22;
  }
  outlined init with take of ConversationControlsType(v33, v30);
  char v22 = static ConversationControlsType.== infix(_:_:)((uint64_t)v31);
  outlined destroy of ConversationControlsType((uint64_t)v30);
  outlined destroy of SystemUpdateNotice?((uint64_t)v34, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined destroy of SystemUpdateNotice?((uint64_t)v36, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined destroy of ConversationControlsType((uint64_t)v31);
  outlined destroy of SystemUpdateNotice?((uint64_t)v32, &demangling cache variable for type metadata for ConversationControlsType?);
  if ((v22 & 1) == 0)
  {
LABEL_23:
    id v23 = objc_msgSend(self, sel_defaultCenter);
    if (one-time initialization token for enhancedEmergencyRequestToChoosePhotoNotification == -1) {
      goto LABEL_24;
    }
    goto LABEL_29;
  }
LABEL_19:
  id v23 = objc_msgSend(self, sel_defaultCenter);
  if (one-time initialization token for enhancedEmergencyUploadPickerDuringStreamingNotification != -1) {
LABEL_29:
  }
    swift_once();
LABEL_24:
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = (void *)MEMORY[0x1C87730B0](v24);
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_postNotificationName_object_, v25, 0);

  OUTLINED_FUNCTION_212();
  uint64_t v26 = v9();
  if (v26)
  {
    OUTLINED_FUNCTION_27_26();
    OUTLINED_FUNCTION_270();
    v27();
    uint64_t v26 = swift_unknownObjectRelease();
  }
  if (((uint64_t (*)(uint64_t))v18)(v26))
  {
    OUTLINED_FUNCTION_107_0();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
    uint64_t v28 = swift_allocObject();
    OUTLINED_FUNCTION_66_4(v28, (__n128)xmmword_1C376BA10);
    OUTLINED_FUNCTION_79_3();
    v29();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

unint64_t ConversationControlsManager.phoneToICSBundleID(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (!a2) {
    goto LABEL_7;
  }
  if (a1 != 0xD000000000000015 || a2 != 0x80000001C37A5610)
  {
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      return 0xD000000000000017;
    }
LABEL_7:
    swift_bridgeObjectRetain();
    return v2;
  }
  return 0xD000000000000017;
}

Swift::Void __swiftcall ConversationControlsManager.pttMarkChannelActive()()
{
  OUTLINED_FUNCTION_3_16();
  v1 += 78;
  uint64_t v2 = *v1;
  (*v1)();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_156_0();
  v3();
  OUTLINED_FUNCTION_85_3();
  if (v0)
  {
    OUTLINED_FUNCTION_30_21();
    OUTLINED_FUNCTION_83_0();
    if (!v4())
    {
      OUTLINED_FUNCTION_170_0();
      v2();
      OUTLINED_FUNCTION_27_26();
      OUTLINED_FUNCTION_74_2();
      v5();
      OUTLINED_FUNCTION_85_3();
      if (!v0)
      {
        ConversationControlsManager.pttChannelState.setter();
      }
    }
  }
}

Swift::Void __swiftcall ConversationControlsManager.pttLeaveButtonTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_14();
  char v3 = OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_62();
  char v5 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  uint64_t v6 = OUTLINED_FUNCTION_2_52();
  v7(v6);
  _dispatchPreconditionTest(_:)();
  uint64_t v8 = OUTLINED_FUNCTION_1_18();
  v9(v8);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_145_0();
  unint64_t v11 = *(void (**)(void))(v10 + 624);
  OUTLINED_FUNCTION_170_0();
  v11();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_156_0();
  v12();
  OUTLINED_FUNCTION_85_3();
  if ((v3 & 1) == 0) {
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_170_0();
  v11();
  self;
  uint64_t v13 = swift_dynamicCastObjCClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  uint64_t v2 = (void *)v13;
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = (void *)OUTLINED_FUNCTION_30(v14, (uint64_t)static Logger.conversationControls);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_107(v16))
  {
    uint64_t v17 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_363(v17);
    OUTLINED_FUNCTION_168(&dword_1C2F90000, v18, v19, "PTT Leave Button Tapped");
    OUTLINED_FUNCTION_3();
  }

  uint64_t v20 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_confirmLeavePTTChannelAlert;
  if (*(void *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_confirmLeavePTTChannelAlert))
  {
    OUTLINED_FUNCTION_50();
    char v22 = *(uint64_t (**)(uint64_t))(v21 + 144);
    uint64_t v23 = swift_retain();
    uint64_t v24 = (__CFUserNotification *)v22(v23);
    swift_release();
    if (v24)
    {
      CFUserNotificationCancel(v24);
      ConversationControlsManager.confirmLeavePTTChannelAlert.setter(0);
    }
  }
  uint64_t v25 = OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_337();
  type metadata accessor for PlatformAlert();
  id v26 = objc_msgSend(v2, sel_channelDisplayName);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_281();

  uint64_t v27 = OUTLINED_FUNCTION_233();
  uint64_t v30 = static PlatformAlert.confirmLeavePTTChannel(_:handler:)(v27, v28, v29, v25);
  swift_bridgeObjectRelease();
  ConversationControlsManager.confirmLeavePTTChannelAlert.setter(v30);
  if (*(void *)(v1 + v20))
  {
    OUTLINED_FUNCTION_50();
    char v32 = *(void (**)(void))(v31 + 336);
    swift_retain();
    v32(0);
    swift_release();
  }
  ConversationControlsManager.updatePTTPresentationForLeaveChannelAlert(isPresented:)(1);
  swift_unknownObjectRelease();
  swift_release();
LABEL_14:
  OUTLINED_FUNCTION_15_0();
}

void closure #1 in ConversationControlsManager.pttLeaveButtonTapped(button:)(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    char v5 = (char *)v4;
    if (a1)
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      __swift_project_value_buffer(v6, (uint64_t)static Logger.conversationControls);
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl(&dword_1C2F90000, v7, v8, "User has confirmed that they want to leave the PTT channel.", v9, 2u);
        MEMORY[0x1C87760E0](v9, -1, -1);
      }

      id v10 = *(id *)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController];
      ConversationController.pttLeaveChannel()();
    }
    ConversationControlsManager.confirmLeavePTTChannelAlert.setter(0);
    ConversationControlsManager.updatePTTPresentationForLeaveChannelAlert(isPresented:)(0);
  }
}

uint64_t ConversationControlsManager.updatePTTPresentationForLeaveChannelAlert(isPresented:)(char a1)
{
  uint64_t v3 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v4 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x400);
  if (!v4()
    || (uint64_t v6 = v5,
        uint64_t v7 = swift_getObjectType(),
        LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 72))(v7, v6),
        uint64_t result = swift_unknownObjectRelease(),
        (v6 & 1) == 0))
  {
    char v9 = (*(uint64_t (**)(void))((*v3 & **(void **)((char *)v1
                                                   + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features))
                              + 0x50))();
    uint64_t result = v4();
    uint64_t v11 = v10;
    if (v9)
    {
      if (a1)
      {
        if (!result) {
          return result;
        }
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v11 + 96))(0xD00000000000002ELL, 0x80000001C37A55B0, ObjectType, v11);
      }
      else
      {
        if (!result) {
          return result;
        }
        uint64_t v14 = swift_getObjectType();
        (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 88))(0xD00000000000002FLL, 0x80000001C37A5580, 1, v14, v11);
      }
      return swift_unknownObjectRelease();
    }
    else if (result)
    {
      uint64_t v13 = swift_getObjectType();
      uint64_t v15 = 3;
      long long v16 = 0u;
      long long v17 = 0u;
      char v18 = 6;
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v11 + 16))(&v15, 1, v13, v11);
      swift_unknownObjectRelease();
      return outlined destroy of ConversationControlsType((uint64_t)&v15);
    }
  }
  return result;
}

Swift::Void __swiftcall ConversationControlsManager.dismissConfirmLeavePTTChannelAlert()()
{
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  char v3 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  uint64_t v4 = OUTLINED_FUNCTION_2_52();
  v5(v4);
  _dispatchPreconditionTest(_:)();
  uint64_t v6 = OUTLINED_FUNCTION_1_18();
  v7(v6);
  if (v3)
  {
    if (*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_confirmLeavePTTChannelAlert))
    {
      OUTLINED_FUNCTION_50();
      char v9 = *(uint64_t (**)(uint64_t))(v8 + 144);
      uint64_t v10 = swift_retain();
      uint64_t v11 = (__CFUserNotification *)v9(v10);
      swift_release();
      if (v11)
      {
        CFUserNotificationCancel(v11);
        ConversationControlsManager.confirmLeavePTTChannelAlert.setter(0);
        ConversationControlsManager.updatePTTPresentationForLeaveChannelAlert(isPresented:)(0);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ConversationControlsManager.pttDoneButtonTapped(recognizer:)(UITapGestureRecognizer *recognizer)
{
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v4();
  char v5 = _dispatchPreconditionTest(_:)();
  uint64_t v6 = OUTLINED_FUNCTION_25_22();
  v7(v6);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  if ([(UITapGestureRecognizer *)recognizer state] != (id)3) {
    return;
  }
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v8 = type metadata accessor for Logger();
  char v9 = (void *)OUTLINED_FUNCTION_30(v8, (uint64_t)static Logger.conversationControls);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v10))
  {
    uint64_t v11 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v11);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v12, v13, "PTT Done Button Tapped");
    OUTLINED_FUNCTION_3();
  }

  ConversationController.pttStopTransmit()();
}

void ConversationControlsManager.pttTalkButtonGestureChanged(recognizer:)(void *a1)
{
  uint64_t v1 = (char *)objc_msgSend(a1, sel_state);
  if ((unint64_t)(v1 - 3) >= 3)
  {
    if (v1 == (char *)1)
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      uint64_t v11 = (void *)OUTLINED_FUNCTION_30(v10, (uint64_t)static Logger.conversationControls);
      os_log_type_t v12 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_2_12(v12))
      {
        uint64_t v13 = (_WORD *)OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_22_1(v13);
        OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v14, v15, "PTT Start Transmit Action Occurred");
        OUTLINED_FUNCTION_3();
      }

      OUTLINED_FUNCTION_145_0();
      uint64_t v17 = (*(uint64_t (**)(void))(v16 + 1784))();
      (*(void (**)(uint64_t))(*(void *)v17 + 248))(1);
      swift_release();
      ConversationController.pttStartTransmit()();
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    uint64_t v3 = (void *)OUTLINED_FUNCTION_30(v2, (uint64_t)static Logger.conversationControls);
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_2_12(v4))
    {
      char v5 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_22_1(v5);
      OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v6, v7, "PTT Stop Transmit Action Occurred");
      OUTLINED_FUNCTION_3();
    }

    OUTLINED_FUNCTION_145_0();
    uint64_t v9 = (*(uint64_t (**)(void))(v8 + 1784))();
    (*(void (**)(void))(*(void *)v9 + 248))(0);
    swift_release();
    ConversationController.pttStopTransmit()();
  }
}

Swift::Void __swiftcall ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)(Swift::Bool dismissBannerOnAppOpen)
{
  OUTLINED_FUNCTION_0_20();
  (*(void (**)(void))(v3 + 624))();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_80_1();
  v4();
  OUTLINED_FUNCTION_85_3();
  outlined bridged method (ob) of @objc TUConversationActivity.concatenatedMetadataDescription.getter(v1, (SEL *)&selRef_bundleIdentifier);
  if (!v5)
  {
LABEL_13:
    OUTLINED_FUNCTION_12_27();
    return;
  }
  if (ConversationControlsManager.isActiveCallGreenTea3P()())
  {
    os_log_type_t v6 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for FBSOpenApplicationOptions);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C37696D0;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_332();
    uint64_t v8 = MEMORY[0x1E4FBB390];
    *(void *)(inited + 96) = MEMORY[0x1E4FBB390];
    *(unsigned char *)(inited + 72) = 1;
    uint64_t aBlock = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v9;
    OUTLINED_FUNCTION_332();
    *(void *)(inited + 168) = v8;
    *(unsigned char *)(inited + 144) = 1;
    uint64_t v10 = Dictionary.init(dictionaryLiteral:)();
    id v11 = @nonobjc FBSOpenApplicationOptions.__allocating_init(dictionary:)(v10);
    id v12 = objc_msgSend(self, sel_serviceWithDefaultShellEndpoint);
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = OUTLINED_FUNCTION_102();
      uint64_t v15 = (void *)MEMORY[0x1C87730B0](v14);
      swift_bridgeObjectRelease();
      uint64_t v16 = OUTLINED_FUNCTION_20();
      swift_unknownObjectWeakInit();
      uint64_t v17 = OUTLINED_FUNCTION_26();
      *(unsigned char *)(v17 + 16) = dismissBannerOnAppOpen;
      *(void *)(v17 + 24) = v16;
      uint64_t v28 = partial apply for closure #1 in ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:);
      uint64_t v29 = v17;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v25 = 1107296256;
      id v26 = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
      uint64_t v27 = &block_descriptor_135_0;
      char v18 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v13, sel_openApplication_withOptions_completion_, v15, v11, v18);
      _Block_release(v18);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      uint64_t v21 = OUTLINED_FUNCTION_30(v20, (uint64_t)static Logger.conversationControls);
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_12(v22))
      {
        uint64_t v23 = (_WORD *)OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_22_1(v23);
        OUTLINED_FUNCTION_35_12(&dword_1C2F90000, v21, v6, "Unable to launch GreenTea3P App because FBSOpenApplicationService was null");
        OUTLINED_FUNCTION_3();
      }
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_12_27();
  swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall ConversationControlsManager.isActiveCallGreenTea3P()()
{
  OUTLINED_FUNCTION_0_20();
  (*(void (**)(void))(v1 + 624))();
  OUTLINED_FUNCTION_106_0();
  OUTLINED_FUNCTION_56_5();
  v2();
  OUTLINED_FUNCTION_276();
  swift_unknownObjectRelease();
  unsigned int v3 = objc_msgSend(v0, sel_supportsDynamicSystemUI);

  Swift::Bool result = 0;
  if (v3)
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
    unsigned int v5 = objc_msgSend(v4, sel_groupConversations);

    if (v5)
    {
      if (TUDeviceHasChinaSKU()) {
        return 1;
      }
    }
  }
  return result;
}

void closure #1 in ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v4 = a4 + 16;
    swift_beginAccess();
    unsigned int v5 = (void *)MEMORY[0x1C8776240](v4);
    if (v5)
    {
      os_log_type_t v6 = v5;
      uint64_t v7 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v5) + 0x400))();
      uint64_t v9 = v8;

      if (v7)
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32))(0xD000000000000018, 0x80000001C37A5560, 1, ObjectType, v9);
        swift_unknownObjectRelease();
      }
    }
  }
}

#error "1C329B760: call analysis failed (funcsize=129)"

uint64_t closure #1 in ConversationControlsManager.heldCalls()(void *a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (!v4) {
    goto LABEL_5;
  }
  unsigned int v5 = (void *)v4;
  if (!objc_msgSend(a1, sel_isOnHold))
  {

LABEL_5:
    char v14 = 0;
    return v14 & 1;
  }
  id v6 = objc_msgSend(a1, sel_uniqueProxyIdentifierUUID);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v12 = MEMORY[0x1F4188790](v11);
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v5) + 0x278))(v12);
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
  LOBYTE(v6) = dispatch thunk of static Equatable.== infix(_:_:)();

  uint64_t v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v13((char *)&v16 - v10, v7);
  v13((char *)&v16 - v10, v7);
  char v14 = v6 ^ 1;
  return v14 & 1;
}

uint64_t thunk for @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool)(uint64_t a1, uint64_t (*a2)(void))
{
  return a2() & 1;
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool)(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

Swift::Void __swiftcall ConversationControlsManager.updateGreenTea3PCallStateIfNeeded()()
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_62();
  char v4 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  uint64_t v5 = OUTLINED_FUNCTION_2_52();
  v6(v5);
  _dispatchPreconditionTest(_:)();
  uint64_t v7 = OUTLINED_FUNCTION_1_18();
  v8(v7);
  if ((v4 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_90_2();
  v9();
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_80_1();
  v10();
  OUTLINED_FUNCTION_85_3();
  unsigned int v11 = objc_msgSend(v2, sel_supportsDynamicSystemUI);

  if (!v11) {
    return;
  }
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  unsigned int v13 = objc_msgSend(v12, sel_groupConversations);

  if (!v13 || !TUDeviceHasChinaSKU()) {
    return;
  }
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_fetchCurrentCalls);
  id v14 = objc_msgSend(self, sel_sharedInstance);
  aBlock[4] = specialized thunk for @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool);
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool);
  aBlock[3] = &block_descriptor_138;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  id v16 = objc_msgSend(v14, sel_callsPassingTest_, v15);

  _Block_release(v15);
  if (swift_isEscapingClosureAtFileLocation()) {
    goto LABEL_17;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_8;
  }
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  if (v18 <= 0)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    uint64_t v20 = (void *)OUTLINED_FUNCTION_30(v19, (uint64_t)static Logger.conversationControls);
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_2_12(v21))
    {
      os_log_type_t v22 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_22_1(v22);
      OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v23, v24, "updateGreenTea3PHUD: No GreenTea3P calls remaining, dismissing UI");
      OUTLINED_FUNCTION_3();
    }

    OUTLINED_FUNCTION_30_21();
    OUTLINED_FUNCTION_298();
    if (v25())
    {
      uint64_t v26 = OUTLINED_FUNCTION_107_0();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1C37696D0;
      *(void *)(v27 + 32) = 23;
      *(_OWORD *)(v27 + 40) = 0u;
      *(_OWORD *)(v27 + 56) = 0u;
      *(unsigned char *)(v27 + 72) = 6;
      uint64_t v28 = OUTLINED_FUNCTION_214(v27, 6, (__n128)0);
      v29(v28, 0xD000000000000016, 0x80000001C37A48F0, 0, v26);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t closure #1 in ConversationControlsManager.updateGreenTea3PCallStateIfNeeded()(void *a1)
{
  id v2 = objc_msgSend(a1, sel_provider);
  unsigned int v3 = objc_msgSend(v2, sel_supportsDynamicSystemUI);

  if (!v3) {
    return 0;
  }
  if (objc_msgSend(a1, sel_isActive)) {
    return 1;
  }
  return (uint64_t)objc_msgSend(a1, sel_isOnHold);
}

Swift::Void __swiftcall ConversationControlsManager.setupGreenTea3PStateObservers()()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  unsigned int v2 = objc_msgSend(v1, sel_groupConversations);

  if (v2)
  {
    if (TUDeviceHasChinaSKU())
    {
      uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
      uint64_t v4 = OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_29_23();
      uint64_t v5 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
      OUTLINED_FUNCTION_11_0();
      uint64_t v6 = *v5;
      *uint64_t v5 = (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers();
      v5[1] = v4;
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v6);
    }
  }
}

void closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers()(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (void *)((char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *unint64_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBE8], v7);
  char v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_30:
    swift_once();
    goto LABEL_6;
  }
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1C8776240](a3 + 16);
  if (!v12) {
    return;
  }
  unsigned int v13 = (void *)v12;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = type metadata accessor for UUID();
  v59[1] = v59;
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 200);
  v59[0] = a1;
  uint64_t v19 = v18(ObjectType, a2);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  os_log_type_t v21 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v13) + 0x278))(v20);
  char v22 = static UUID.== infix(_:_:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v21, v15);
  v23(v21, v15);
  if ((v22 & 1) == 0
    || (a1 = v13,
        uint64_t v3 = v59[0],
        uint64_t v24 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 160))(ObjectType, a2),
        unsigned int v25 = objc_msgSend(v24, sel_supportsDynamicSystemUI),
        v24,
        !v25))
  {

    return;
  }
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_30;
  }
LABEL_6:
  uint64_t v26 = type metadata accessor for Logger();
  __swift_project_value_buffer(v26, (uint64_t)static Logger.conversationControls);
  swift_unknownObjectRetain_n();
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v60 = v30;
    uint64_t aBlock = v3;
    *(_DWORD *)uint64_t v29 = 136315138;
    *(void *)&long long v62 = a2;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    uint64_t v31 = String.init<A>(reflecting:)();
    uint64_t aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v27, v28, "greenTea3PCallStatusChanged %s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v30, -1, -1);
    MEMORY[0x1C87760E0](v29, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  id v33 = a1;
  uint64_t v34 = (void *)MEMORY[0x1E4FBC8C8];
  char v35 = *(void **)((char *)a1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
  uint64_t v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = partial apply for closure #1 in closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers();
  *(void *)(v37 + 24) = v36;
  *((void *)&v63 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = thunk for @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool)partial apply;
  uint64_t v64 = v37;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  *(void *)&long long v62 = 1107296256;
  *((void *)&v62 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool);
  *(void *)&long long v63 = &block_descriptor_465;
  char v38 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v39 = objc_msgSend(v35, sel_callsPassingTest_, v38);
  _Block_release(v38);
  LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v38)
  {
    __break(1u);
    goto LABEL_32;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  unint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v40 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_14:
  uint64_t v42 = swift_bridgeObjectRelease();
  if (v41 < 1)
  {
    uint64_t v47 = *(void (**)(uint64_t))((*v34 & *v33) + 0x270);
    v47(v42);
    uint64_t v49 = v48;
    uint64_t v50 = swift_getObjectType();
    LODWORD(v49) = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 184))(v50, v49);
    uint64_t v51 = swift_unknownObjectRelease();
    switch((int)v49)
    {
      case 1:
        v47(v51);
        uint64_t v53 = v52;
        uint64_t v54 = swift_getObjectType();
        LOBYTE(v53) = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 376))(v54, v53);
        uint64_t v51 = swift_unknownObjectRelease();
        if ((v53 & 1) == 0) {
          goto LABEL_21;
        }
        ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)(1);
        goto LABEL_27;
      case 2:
LABEL_21:
        if (!(*(uint64_t (**)(uint64_t))((*v34 & *v33) + 0x400))(v51)) {
          goto LABEL_27;
        }
        goto LABEL_16;
      case 4:
        if (!(*(uint64_t (**)(uint64_t))((*v34 & *v33) + 0x400))(v51)) {
          goto LABEL_27;
        }
        uint64_t v44 = v55;
        uint64_t v45 = swift_getObjectType();
        uint64_t v46 = 22;
        goto LABEL_17;
      case 6:
        if (!(*(uint64_t (**)(uint64_t))((*v34 & *v33) + 0x3E8))(v51)) {
          goto LABEL_27;
        }
        uint64_t v57 = v56;
        swift_getObjectType();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
        uint64_t v58 = swift_allocObject();
        *(_OWORD *)(v58 + 16) = xmmword_1C37696D0;
        *(void *)(v58 + 32) = 23;
        *(_OWORD *)(v58 + 40) = 0u;
        *(_OWORD *)(v58 + 56) = 0u;
        *(unsigned char *)(v58 + 72) = 6;
        *(void *)(v58 + 80) = 22;
        *(_OWORD *)(v58 + 88) = 0u;
        *(_OWORD *)(v58 + 104) = 0u;
        *(unsigned char *)(v58 + 120) = 6;
        (*(void (**)(void))(v57 + 32))();
        swift_release();
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        return;
      default:
        goto LABEL_27;
    }
  }
  if ((*(uint64_t (**)(uint64_t))((*v34 & *v33) + 0x400))(v42))
  {
LABEL_16:
    uint64_t v44 = v43;
    uint64_t v45 = swift_getObjectType();
    uint64_t v46 = 23;
LABEL_17:
    uint64_t aBlock = v46;
    long long v62 = 0u;
    long long v63 = 0u;
    LOBYTE(v64) = 6;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v44 + 16))(&aBlock, 1, v45, v44);

    swift_unknownObjectRelease();
    outlined destroy of ConversationControlsType((uint64_t)&aBlock);
    swift_release();
  }
  else
  {
LABEL_27:
    swift_release();
  }
}

id closure #1 in closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers()(void *a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (!v4) {
    return 0;
  }
  uint64_t v5 = (void *)v4;
  id v6 = objc_msgSend(a1, sel_uniqueProxyIdentifierUUID);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v5) + 0x278))(v11);
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
  LOBYTE(v6) = dispatch thunk of static Equatable.== infix(_:_:)();
  unsigned int v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v13(v12, v7);
  v13(v12, v7);
  if (v6)
  {
    id v14 = 0;
  }
  else
  {
    id v15 = objc_msgSend(a1, sel_provider);
    id v14 = objc_msgSend(v15, sel_supportsDynamicSystemUI);
  }
  return v14;
}

Swift::Void __swiftcall ConversationControlsManager.avLessContinueButtonTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_62();
  char v4 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *unsigned int v2 = static OS_dispatch_queue.main.getter();
  uint64_t v5 = OUTLINED_FUNCTION_2_52();
  v6(v5);
  _dispatchPreconditionTest(_:)();
  uint64_t v7 = OUTLINED_FUNCTION_1_18();
  v8(v7);
  if (v4)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_30(v9, (uint64_t)static Logger.conversationControls);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v11))
  {
    uint64_t v12 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v12);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v13, v14, "avLessContinueButtonTapped");
    OUTLINED_FUNCTION_3();
  }

  uint64_t v15 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_62();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v18 = OUTLINED_FUNCTION_8(v17);
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_60();
  uint64_t v19 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_avLessLeaveConfirmationPresentedDate;
  OUTLINED_FUNCTION_2();
  outlined init with copy of Participant?(v19, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_33_0((uint64_t)v10, 1, v15);
  if (v20)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    OUTLINED_FUNCTION_63_0();
    v21();
    CNKCoreAnalyticsReporter.reportAVLessLeaveConfirmation(presentedAt:action:)((uint64_t)v2, 0);
    uint64_t v22 = OUTLINED_FUNCTION_317();
    v23(v22);
  }
  ConversationControlsManager.shouldShowAVLessLeaveConfirmation.setter(0);
  OUTLINED_FUNCTION_173_0();
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationControlsManager.continueHandoffButtonTapped()()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  char v3 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  uint64_t v4 = OUTLINED_FUNCTION_2_52();
  v5(v4);
  _dispatchPreconditionTest(_:)();
  uint64_t v6 = OUTLINED_FUNCTION_1_18();
  v7(v6);
  if ((v3 & 1) == 0)
  {
    __break(1u);
LABEL_31:
    swift_once();
LABEL_16:
    uint64_t v40 = type metadata accessor for Logger();
    id v41 = (id)OUTLINED_FUNCTION_30(v40, (uint64_t)static Logger.conversationControls);
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_12(v42))
    {
      uint64_t v43 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v43);
      OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v44, v45, "Cannot continue handoff as no conversation was being tracked by Conversation Controls");
      OUTLINED_FUNCTION_3();
    }
    goto LABEL_28;
  }
  OUTLINED_FUNCTION_261();
  OUTLINED_FUNCTION_259();
  if ((v8() & 1) == 0) {
    goto LABEL_29;
  }
  OUTLINED_FUNCTION_145_0();
  OUTLINED_FUNCTION_179();
  uint64_t v10 = (void *)v9();
  if (!v10)
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
  os_log_type_t v11 = v10;
  if (objc_msgSend(v10, sel_state) == (id)1)
  {
    id v12 = objc_msgSend(v11, sel_localParticipantAssociation);

    if (v12)
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      __swift_project_value_buffer(v13, (uint64_t)static Logger.conversationControls);
      uint64_t v14 = v11;
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)OUTLINED_FUNCTION_37();
        uint64_t v64 = OUTLINED_FUNCTION_9_0();
        uint64_t v65 = (uint8_t *)v64;
        *(_DWORD *)uint64_t v17 = 136315138;
        long long v62 = v17 + 4;
        long long v63 = v17;
        type metadata accessor for UUID();
        id v61 = v60;
        OUTLINED_FUNCTION_4();
        MEMORY[0x1F4188790](v18);
        OUTLINED_FUNCTION_60();
        id v19 = [v14 UUID];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
        uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v22 = v21;
        OUTLINED_FUNCTION_1_19();
        v23();
        uint64_t v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, (uint64_t *)&v65);
        OUTLINED_FUNCTION_256(v24);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v15, v16, "Joining conversation %s via handoff", v63, 0xCu);
        OUTLINED_FUNCTION_360();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
      }
      ConversationController.joinConversation()();
      goto LABEL_26;
    }
  }
  id v25 = objc_msgSend(v11, sel_handoffEligibility);
  if (!v25)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for Logger();
    __swift_project_value_buffer(v46, (uint64_t)static Logger.conversationControls);
    id v41 = v11;
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v47))
    {
      uint64_t v48 = OUTLINED_FUNCTION_37();
      uint64_t v64 = OUTLINED_FUNCTION_9_0();
      uint64_t v65 = (uint8_t *)v64;
      *(_DWORD *)uint64_t v48 = 136315138;
      long long v63 = (uint8_t *)(v48 + 4);
      type metadata accessor for UUID();
      long long v62 = (uint8_t *)v60;
      OUTLINED_FUNCTION_4();
      MEMORY[0x1F4188790](v49);
      OUTLINED_FUNCTION_60();
      id v50 = objc_msgSend(v41, sel_UUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
      uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v53 = v52;
      uint64_t v54 = OUTLINED_FUNCTION_286();
      v55(v54);
      uint64_t v56 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v53, (uint64_t *)&v65);
      OUTLINED_FUNCTION_32_4(v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_154_0(&dword_1C2F90000, v14, v57, "Cannot continue handoff as conversation %s tracked by Conversation Controls was not handoff eligible");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();

LABEL_26:
      goto LABEL_29;
    }

LABEL_28:
    goto LABEL_29;
  }
  uint64_t v26 = v25;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  __swift_project_value_buffer(v27, (uint64_t)static Logger.conversationControls);
  id v28 = v11;
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  int v31 = v30;
  if (os_log_type_enabled(v29, v30))
  {
    LODWORD(v64) = v31;
    unint64_t v32 = (uint8_t *)OUTLINED_FUNCTION_37();
    long long v63 = (uint8_t *)OUTLINED_FUNCTION_9_0();
    uint64_t v65 = v63;
    *(_DWORD *)unint64_t v32 = 136315138;
    id v61 = v32 + 4;
    long long v62 = v32;
    type metadata accessor for UUID();
    v60[1] = v60;
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v33);
    OUTLINED_FUNCTION_60();
    id v34 = objc_msgSend(v28, sel_UUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
    uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v37 = v36;
    OUTLINED_FUNCTION_336();
    v38();
    uint64_t v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v37, (uint64_t *)&v65);
    OUTLINED_FUNCTION_32_4(v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v29, (os_log_type_t)v64, "Continuing handoff for eligible conversation %s", v62, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v58 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
  id v59 = v26;
  objc_msgSend(v58, sel_continueHandoffForConversationWithEligibility_, v59);

LABEL_29:
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationControlsManager.lagunaPullButtonTapped()()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = v0;
  os_log_type_t v3 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_62();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v5();
  char v6 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_1_19();
  v7();
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_359();
  OUTLINED_FUNCTION_56_5();
  if (v8())
  {
    OUTLINED_FUNCTION_179();
    uint64_t v10 = v9();
    if (v10)
    {
      os_log_type_t v11 = (void *)v10;
      id v12 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
      id v13 = objc_msgSend(v12, sel_neighborhoodActivityConduit);
      id v14 = objc_msgSend(v13, sel_activeSplitSessionTV);

      if (v14)
      {
        id v15 = objc_msgSend(v12, sel_neighborhoodActivityConduit);
        id v16 = objc_msgSend(v11, sel_UUID);
        OUTLINED_FUNCTION_297();
        OUTLINED_FUNCTION_4();
        MEMORY[0x1F4188790](v17);
        OUTLINED_FUNCTION_64();
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v18.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        OUTLINED_FUNCTION_102();
        OUTLINED_FUNCTION_12_1();
        v19();
        v30[4] = closure #1 in ConversationControlsManager.lagunaPullButtonTapped();
        v30[5] = 0;
        v30[0] = MEMORY[0x1E4F143A8];
        v30[1] = 1107296256;
        v30[2] = thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
        _OWORD v30[3] = &block_descriptor_142;
        uint64_t v20 = _Block_copy(v30);
        objc_msgSend(v15, sel_pullConversation_fromTVDevice_completion_, v18.super.isa, v14, v20);
        _Block_release(v20);
      }
      else
      {
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v24 = type metadata accessor for Logger();
        id v25 = (void *)OUTLINED_FUNCTION_30(v24, (uint64_t)static Logger.conversationControls);
        os_log_type_t v26 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_2_12(v26))
        {
          uint64_t v27 = (_WORD *)OUTLINED_FUNCTION_8_0();
          OUTLINED_FUNCTION_22_1(v27);
          OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v28, v29, "Cannot pull laguna conversation since no activeSplitSessionTV");
          OUTLINED_FUNCTION_3();
        }

        v18.super.Class isa = (Class)v11;
      }
LABEL_14:

      goto LABEL_15;
    }
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_7:
      uint64_t v21 = type metadata accessor for Logger();
      v18.super.Class isa = (Class)OUTLINED_FUNCTION_30(v21, (uint64_t)static Logger.conversationControls);
      os_log_type_t v22 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_104(v22))
      {
        uint64_t v23 = (_WORD *)OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_23_1(v23);
        OUTLINED_FUNCTION_102_1(&dword_1C2F90000, v18.super.isa, v3, "Cannot pull laguna conversation since no conversation was being tracked by Conversation Controls");
        OUTLINED_FUNCTION_3();
      }
      goto LABEL_14;
    }
LABEL_17:
    swift_once();
    goto LABEL_7;
  }
LABEL_15:
  OUTLINED_FUNCTION_15_0();
}

void closure #1 in ConversationControlsManager.lagunaPullButtonTapped()(uint64_t a1, void *a2)
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationControls);
  id v4 = a2;
  id v5 = a2;
  oslog = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109378;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 8) = 2112;
    if (a2)
    {
      id v9 = a2;
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v10 = 0;
    }
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1C2F90000, oslog, v6, "Laguna pull conversation success: %{BOOL}d error: %@", (uint8_t *)v7, 0x12u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v8, -1, -1);
    MEMORY[0x1C87760E0](v7, -1, -1);
  }
  else
  {
  }
}

Swift::Void __swiftcall ConversationControlsManager.acceptCallButtonTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v1;
  id v5 = (void *)type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v7();
  char v8 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_1_19();
  v9();
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  id v5 = *(void **)(v4 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_notificationCenter);
  if (one-time initialization token for cnk_acceptCallButtonTapped != -1) {
LABEL_31:
  }
    swift_once();
  objc_msgSend(v5, sel_postNotificationName_object_, static NSNotificationName.cnk_acceptCallButtonTapped, v4);
  OUTLINED_FUNCTION_369(0x636361206C6C6163, 0x7065u);
  OUTLINED_FUNCTION_0_62();
  (*(void (**)(void))(v10 + 624))();
  uint64_t v12 = v11;
  uint64_t ObjectType = swift_getObjectType();
  os_log_type_t v42 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 160);
  id v14 = (void *)v42(ObjectType, v12);
  unsigned int v15 = objc_msgSend(v14, sel_isFaceTimeProvider);

  if (!v15
    || (OUTLINED_FUNCTION_51_8(), OUTLINED_FUNCTION_179(), (uint64_t v17 = (void *)v16()) != 0)
    && (NSUUID v18 = v17, v19 = objc_msgSend(v17, sel_resolvedAudioVideoMode), v18, v19 == (id)1))
  {
    ConversationController.joinConversation()();
  }
  else
  {
    OUTLINED_FUNCTION_51_8();
    OUTLINED_FUNCTION_67_3();
    if (v20())
    {
      OUTLINED_FUNCTION_165();
      OUTLINED_FUNCTION_195();
      v21();
      swift_unknownObjectRelease();
    }
    OUTLINED_FUNCTION_51_8();
    if ((*(uint64_t (**)(void))(v22 + 1072))())
    {
      OUTLINED_FUNCTION_165();
      OUTLINED_FUNCTION_195();
      v23();
      swift_unknownObjectRelease();
    }
    ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
  }
  if (ConversationControlsManager.isActiveCallGreenTea3P()())
  {
    OUTLINED_FUNCTION_51_8();
    OUTLINED_FUNCTION_67_3();
    if (v24())
    {
      OUTLINED_FUNCTION_281();
      uint64_t v25 = swift_getObjectType();
      if (((*(uint64_t (**)(uint64_t))(v3 + 72))(v25) & 1) == 0)
      {
        OUTLINED_FUNCTION_81_3();
        char v27 = (*(uint64_t (**)(void))(v26 + 80))();
        ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)((v27 & 1) == 0);
      }
      swift_unknownObjectRelease();
    }
  }
  OUTLINED_FUNCTION_51_8();
  OUTLINED_FUNCTION_67_3();
  if (v28())
  {
    OUTLINED_FUNCTION_281();
    OUTLINED_FUNCTION_81_3();
    if (((*(uint64_t (**)(void))(v29 + 192))() & 1) == 0)
    {
      OUTLINED_FUNCTION_81_3();
      if (((*(uint64_t (**)(void))(v30 + 80))() & 1) == 0)
      {
        uint64_t v31 = OUTLINED_FUNCTION_29_0();
        unint64_t v32 = (void *)((uint64_t (*)(uint64_t))v42)(v31);
        unsigned int v33 = objc_msgSend(v32, sel_isTelephonyProvider);

        if (v33)
        {
          OUTLINED_FUNCTION_51_8();
          if (((*(uint64_t (**)(void))(v34 + 640))() & 1) == 0)
          {
            swift_getObjectType();
            OUTLINED_FUNCTION_345();
            OUTLINED_FUNCTION_107_1();
            v41();
            swift_unknownObjectRelease();
            goto LABEL_29;
          }
          if (one-time initialization token for conversationControls != -1) {
            swift_once();
          }
          uint64_t v35 = type metadata accessor for Logger();
          unint64_t v36 = (void *)OUTLINED_FUNCTION_30(v35, (uint64_t)static Logger.conversationControls);
          os_log_type_t v37 = static os_log_type_t.default.getter();
          if (OUTLINED_FUNCTION_2_12(v37))
          {
            char v38 = (_WORD *)OUTLINED_FUNCTION_8_0();
            OUTLINED_FUNCTION_22_1(v38);
            OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v39, v40, "multiple calls: skipping banner dismissal for answered telephony");
            OUTLINED_FUNCTION_3();
            swift_unknownObjectRelease();

            goto LABEL_29;
          }
        }
      }
    }
    swift_unknownObjectRelease();
  }
LABEL_29:
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationControlsManager.invalidateCallWaitingSystemApertureAssertionIfNeeded(reason:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x400))();
  if (result)
  {
    uint64_t v7 = v6;
    ConversationControlsManager.wantsCallWaitingInSystemAperture.getter();
    if (v8)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 80))(a1, a2, ObjectType, v7);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall ConversationControlsManager.rejectCallButtonTapped(button:)(UIControl *button)
{
  uint64_t v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_222();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v7();
  char v8 = _dispatchPreconditionTest(_:)();
  uint64_t v9 = OUTLINED_FUNCTION_25_22();
  v10(v9);
  if (v8)
  {
    OUTLINED_FUNCTION_369(0x6A6572206C6C6163, 0x6365u);
    if (objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags], sel_callScreeningEnabledM3))
    {
      uint64_t v11 = type metadata accessor for TaskPriority();
      OUTLINED_FUNCTION_54_1(v11);
      uint64_t v12 = v3;
      uint64_t v13 = static MainActor.shared.getter();
      id v14 = (void *)OUTLINED_FUNCTION_3_0();
      uint64_t v15 = MEMORY[0x1E4FBCFD8];
      v14[2] = v13;
      v14[3] = v15;
      v14[4] = v12;
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
      swift_release();
    }
    else
    {
      rejectCall #1 @Sendable () in ConversationControlsManager.rejectCallButtonTapped(button:)(v3);
    }
  }
  else
  {
    __break(1u);
  }
}

void rejectCall #1 @Sendable () in ConversationControlsManager.rejectCallButtonTapped(button:)(void *a1)
{
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x270))();
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 184))(ObjectType, v2);
  swift_unknownObjectRelease();
  ConversationController.leaveConversation(reason:)();
}

uint64_t closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a4;
  type metadata accessor for MainActor();
  v4[19] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[20] = v6;
  v4[21] = v5;
  return MEMORY[0x1F4188298](closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:), v6, v5);
}

uint64_t closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:)()
{
  OUTLINED_FUNCTION_17_2();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  return MEMORY[0x1F4188298](closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:), v1, v2);
}

{
  return MEMORY[0x1F4188298](closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:), static CallScreeningActor.shared, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + 176) = static AnsweringMachineComposer.shared;
  uint64_t v1 = *(void *)(v0 + 168);
  swift_unknownObjectRetain();
  uint64_t v2 = OUTLINED_FUNCTION_30_15();
  return MEMORY[0x1F4188298](v2, v3, v1);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  uint64_t v1 = *(void **)(v0 + 176);
  if (v1)
  {
    OUTLINED_FUNCTION_0_20();
    (*(void (**)(void))(v2 + 624))();
    OUTLINED_FUNCTION_165();
    OUTLINED_FUNCTION_195();
    v3();
    OUTLINED_FUNCTION_281();
    swift_unknownObjectRelease();
    uint64_t v4 = OUTLINED_FUNCTION_233();
    uint64_t v5 = MEMORY[0x1C87730B0](v4);
    *(void *)(v0 + 184) = v5;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 192;
    *(void *)(v0 + 24) = closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:);
    uint64_t v6 = swift_continuation_init();
    *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = @objc completion handler block implementation for <A>@escaping @callee_unowned @convention(block) (@unowned Bool) -> () with result type Bool;
    *(void *)(v0 + 104) = &block_descriptor_457;
    *(void *)(v0 + 112) = v6;
    objc_msgSend(v1, sel_screenCallWithUUID_manualScreening_completion_, v5, 0, v0 + 80);
    return MEMORY[0x1F41881E8](v0 + 16);
  }
  else
  {
    swift_release();
    rejectCall #1 @Sendable () in ConversationControlsManager.rejectCallButtonTapped(button:)(*(void **)(v0 + 144));
    OUTLINED_FUNCTION_6();
    return v7();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_13_1();
  char *v1 = v0;
  uint64_t v3 = *(void *)(v2 + 168);
  uint64_t v4 = *(void *)(v2 + 160);
  return MEMORY[0x1F4188298](closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:), v4, v3);
}

{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v2 = *(unsigned char *)(v0 + 192);

  if ((v2 & 1) == 0) {
    rejectCall #1 @Sendable () in ConversationControlsManager.rejectCallButtonTapped(button:)(*(void **)(v0 + 144));
  }
  OUTLINED_FUNCTION_6();
  return v3();
}

void ConversationControlsManager.wantsCallWaitingInSystemAperture.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_16_0();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v1, (uint64_t)static Logger.conversationControls);
  OUTLINED_FUNCTION_2_1();
  v3();
  char v4 = MEMORY[0x1E4FBC8C8];
  OUTLINED_FUNCTION_201();
  int v6 = (*(uint64_t (**)(void))(v5 + 80))();
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
  char v8 = TUCallCenter.wantsCallWaiting.getter();
  unsigned __int8 v9 = objc_msgSend(v7, sel_cnk_hasTooManyCallsForCallWaitingBanner);
  OUTLINED_FUNCTION_201();
  if ((*(uint64_t (**)(void))(v10 + 216))())
  {
    OUTLINED_FUNCTION_236();
    OUTLINED_FUNCTION_90_2();
    v11();
    uint64_t v13 = v12;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v13 + 512))(ObjectType, v13);
    OUTLINED_FUNCTION_338();
    char v51 = v4;
    if (objc_msgSend(v7, sel_currentAudioAndVideoCallCount) == (id)1)
    {
      char hasIncomingAudioOrVideo = TUCallCenter.cnk_hasIncomingAudioOrVideoCall.getter();
      if ((v4 & 1) == 0)
      {
        BOOL v15 = 0;
        goto LABEL_11;
      }
    }
    else
    {
      char hasIncomingAudioOrVideo = 0;
      BOOL v15 = 0;
      if ((v4 & 1) == 0) {
        goto LABEL_11;
      }
    }
    int v16 = v6;
    id v17 = objc_msgSend(v7, sel_currentCallGroups);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
    unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v18 >> 62)
    {
      OUTLINED_FUNCTION_370();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    BOOL v15 = v19 > 1;
    int v6 = v16;
    char v4 = v51;
LABEL_11:
    if ((uint64_t)objc_msgSend(v7, sel_currentAudioAndVideoCallCount) >= 1
      && (TUCallCenter.cnk_hasIncomingAudioOrVideoCall.getter() & 1) != 0)
    {
      if (hasIncomingAudioOrVideo)
      {
        char v8 = 0;
LABEL_27:
        id v27 = objc_msgSend(v7, sel_currentCallGroups);
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
        unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v28 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v29 < 4) {
          unsigned __int8 v9 = 0;
        }
        else {
          unsigned __int8 v9 = TUCallCenter.cnk_hasIncomingAudioOrVideoCall.getter();
        }
        goto LABEL_32;
      }
      BOOL v24 = 1;
    }
    else
    {
      int v20 = v6;
      id v21 = objc_msgSend(v7, sel_currentCallGroups);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
      unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v22 >> 62)
      {
        OUTLINED_FUNCTION_370();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      BOOL v24 = v23 == 2;
      if (hasIncomingAudioOrVideo)
      {
        char v8 = 0;
        int v6 = v20;
        goto LABEL_27;
      }
      int v6 = v20;
      char v4 = v51;
    }
    id v25 = objc_msgSend(v7, sel_callWithStatus_, 3);

    if (v4) {
      BOOL v26 = v15;
    }
    else {
      BOOL v26 = v24;
    }
    if (v25) {
      char v8 = 0;
    }
    else {
      char v8 = v26;
    }
    goto LABEL_27;
  }
LABEL_32:
  OUTLINED_FUNCTION_201();
  if ((*(uint64_t (**)(void))(v30 + 192))() & 1) != 0 || ((v6 ^ 1) & 1) != 0 || (v8 & 1) == 0 || (v9)
  {
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_107(v42))
    {
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 67109632;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v43 + 8) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v43 + 14) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      os_log_type_t v37 = "shouldShowSystemApertureOverAssociatedScene is false (isSystemApertureEnabled: %{BOOL}d, wantsCallWaiting: %"
            "{BOOL}d, hasTooManyCalls: %{BOOL}d";
      char v38 = v34;
      os_log_type_t v39 = v7;
      uint64_t v40 = (uint8_t *)v43;
      uint32_t v41 = 20;
      goto LABEL_42;
    }
  }
  else
  {
    OUTLINED_FUNCTION_236();
    OUTLINED_FUNCTION_90_2();
    v31();
    swift_getObjectType();
    OUTLINED_FUNCTION_220();
    uint64_t v33 = v32();
    swift_unknownObjectRelease();
    if ((v33 & 1) == 0)
    {
      id v44 = objc_msgSend(v7, sel_incomingCall);

      if (v44
        || (id v47 = objc_msgSend(v7, sel_incomingVideoCall), v47, !v47))
      {
        uint64_t v34 = Logger.logObject.getter();
        os_log_type_t v45 = static os_log_type_t.default.getter();
        if (!OUTLINED_FUNCTION_107(v45)) {
          goto LABEL_51;
        }
        uint64_t v46 = (_WORD *)OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_22_1(v46);
        OUTLINED_FUNCTION_35_12(&dword_1C2F90000, v34, (os_log_type_t)v7, "shouldShowSystemApertureOverAssociatedScene is true (active and incoming call is NOT video, wantsCallWaiting)");
        goto LABEL_43;
      }
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.default.getter();
      if (!OUTLINED_FUNCTION_107(v48)) {
        goto LABEL_51;
      }
      uint64_t v49 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_22_1(v49);
      os_log_type_t v37 = "shouldShowSystemApertureOverAssociatedScene is false (incomingCall is nil, incomingVideoCall is not nil, wantsCallWaiting)";
      goto LABEL_39;
    }
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_107(v35))
    {
      unint64_t v36 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_22_1(v36);
      os_log_type_t v37 = "shouldShowSystemApertureOverAssociatedScene is false (activeCall is video, wantsCallWaiting)";
LABEL_39:
      char v38 = v34;
      os_log_type_t v39 = v7;
      uint64_t v40 = (uint8_t *)v33;
      uint32_t v41 = 2;
LABEL_42:
      _os_log_impl(&dword_1C2F90000, v38, v39, v37, v40, v41);
LABEL_43:
      OUTLINED_FUNCTION_3();
    }
  }
LABEL_51:

  OUTLINED_FUNCTION_351();
  OUTLINED_FUNCTION_26_2();
  v50();
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationControlsManager.callAgainButtonTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  char v3 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  uint64_t v4 = OUTLINED_FUNCTION_2_52();
  v5(v4);
  _dispatchPreconditionTest(_:)();
  uint64_t v6 = OUTLINED_FUNCTION_1_18();
  v7(v6);
  if (v3) {
    ConversationController.callBack()();
  }
  else {
    __break(1u);
  }
}

Swift::Void __swiftcall ConversationControlsManager.acceptScreenShare()()
{
}

Swift::Void __swiftcall ConversationControlsManager.acceptScreenShareWithDisplayStyle()()
{
}

void ConversationControlsManager.acceptScreenShare()(uint64_t a1)
{
  OUTLINED_FUNCTION_0_20();
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 656))();
  if (v3)
  {
    id v4 = (id)v3;
    ConversationController.requestScreenSharingPicker(with:)(a1);
  }
}

Swift::Void __swiftcall ConversationControlsManager.declineScreenShare()()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 656))();
  if (v2)
  {
    id v7 = (id)v2;
    specialized Conversation.currentScreenSharingRequest(ignoring:)();
    if (v3)
    {
      id v4 = v3;
      id v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_conversationManager);
      objc_msgSend(v5, sel_cancelOrDenyScreenShareRequest_forConversation_, v4, v7);

      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v6 = v7;
    }
  }
}

uint64_t ConversationControlsManager.addIncomingScreenSharingRequestActivity()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v4);
  type metadata accessor for MainActor();
  id v5 = v0;
  uint64_t v6 = static MainActor.shared.getter();
  id v7 = (void *)swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBCFD8];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v5;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in ConversationControlsManager.addIncomingScreenSharingRequestActivity()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[22] = a4;
  v4[23] = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[26] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in ConversationControlsManager.addIncomingScreenSharingRequestActivity(), v6, v5);
}

uint64_t closure #1 in ConversationControlsManager.addIncomingScreenSharingRequestActivity()()
{
  uint64_t v99 = v1;
  uint64_t v3 = (void **)(v1 + 176);
  uint64_t v4 = *(void **)(v1 + 176);
  uint64_t v5 = swift_release();
  uint64_t v6 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v7 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v4) + 0x568))(v5);
  uint64_t v8 = swift_release();
  unsigned __int8 v9 = &lazy protocol witness table cache variable for type UUID and conformance UUID;
  uint64_t v97 = v4;
  if (v7)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v0 = *v3;
    uint64_t v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static Logger.conversationControls);
    uint64_t v11 = v0;
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    BOOL v14 = OUTLINED_FUNCTION_21_0(v13);
    BOOL v15 = *v3;
    if (v14)
    {
      int v16 = (_DWORD *)OUTLINED_FUNCTION_37();
      uint64_t v98 = OUTLINED_FUNCTION_9_0();
      *int v16 = 136315138;
      *(void *)(v1 + 160) = v15;
      type metadata accessor for ConversationControlsManager(0);
      id v17 = v15;
      uint64_t v18 = String.init<A>(reflecting:)();
      LOBYTE(v0) = v19;
      *(void *)(v1 + 168) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_335(&dword_1C2F90000, v12, v2, "Removing incomingScreenSharingRequest activity due to new request %s");
      OUTLINED_FUNCTION_119();
      uint64_t v6 = (void *)MEMORY[0x1E4FBC8C8];
      OUTLINED_FUNCTION_3();
      unsigned __int8 v9 = &lazy protocol witness table cache variable for type UUID and conformance UUID;
      OUTLINED_FUNCTION_3();
    }
    else
    {
    }
    uint64_t v8 = ConversationControlsManager.removeIncomingScreenShareRequest()();
  }
  uint64_t v20 = (*(uint64_t (**)(uint64_t))((*v6 & **v3) + 0x3E8))(v8);
  swift_unknownObjectRelease();
  uint64_t v21 = v9[332];
  if (!v20)
  {
    if (v21 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    uint64_t v34 = OUTLINED_FUNCTION_30(v33, (uint64_t)static Logger.conversationControls);
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_104(v35))
    {
      unint64_t v36 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v36);
      OUTLINED_FUNCTION_102_1(&dword_1C2F90000, v34, (os_log_type_t)v0, "ConversationControlsManager does not have a systemBannerPresenter so not creating Activity for incomginsScreenSharingRequest from this instance");
      OUTLINED_FUNCTION_3();
    }
    goto LABEL_17;
  }
  if (v21 != -1) {
    swift_once();
  }
  unint64_t v22 = *v3;
  uint64_t v23 = type metadata accessor for Logger();
  __swift_project_value_buffer(v23, (uint64_t)static Logger.conversationControls);
  BOOL v24 = v22;
  id v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  BOOL v27 = OUTLINED_FUNCTION_21_0(v26);
  unint64_t v28 = *v3;
  uint64_t v96 = (id *)(v1 + 176);
  if (v27)
  {
    uint64_t v29 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v98 = OUTLINED_FUNCTION_9_0();
    *uint64_t v29 = 136315138;
    *(void *)(v1 + 144) = v28;
    type metadata accessor for ConversationControlsManager(0);
    uint64_t v30 = v28;
    uint64_t v31 = String.init<A>(reflecting:)();
    *(void *)(v1 + 152) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, &v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_335(&dword_1C2F90000, v25, v2, "Starting incomingScreenSharingRequest activity %s");
    OUTLINED_FUNCTION_119();
    uint64_t v6 = (void *)MEMORY[0x1E4FBC8C8];
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  os_log_type_t v37 = *(void **)(v1 + 176);
  OUTLINED_FUNCTION_81_3();
  char v39 = (*(uint64_t (**)(void))(v38 + 80))();
  uint64_t v40 = *v6 & *v37;
  uint64_t type = *(void *)(v1 + 200);
  uint32_t v41 = *(int **)(v1 + 184);
  uint64_t v42 = *(void *)(v1 + 192);
  uint64_t v43 = *(void **)(v1 + 176);
  if (v39)
  {
    uint64_t v93 = (void *)(*(uint64_t (**)(void))(v40 + 1336))();
    *(void *)(v1 + 64) = 25;
    *(_OWORD *)(v1 + 72) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(unsigned char *)(v1 + 104) = 6;
    OUTLINED_FUNCTION_3_79();
    uint64_t v45 = (*(uint64_t (**)(void))(v44 + 624))();
    uint64_t v47 = v46;
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_191();
    UUID.init()();
    uint64_t v48 = v42 + v41[11];
    *(void *)(v48 + 8) = 0;
    swift_unknownObjectWeakInit();
    *(void *)uint64_t v42 = 0x4089000000000000;
    outlined init with copy of ConversationControlsType((uint64_t)(v96 - 14), v42 + 8);
    *(void *)(v42 + 56) = 0;
    *(unsigned char *)(v42 + 64) = 1;
    *(void *)(v48 + 8) = v47;
    uint64_t v49 = v45;
    swift_unknownObjectWeakAssign();
    *(unsigned char *)(v42 + 65) = 0;
    OUTLINED_FUNCTION_2_1();
    v50();
    uint64_t v51 = type metadata accessor for Date();
    OUTLINED_FUNCTION_4();
    uint64_t v53 = v52;
    uint64_t v54 = OUTLINED_FUNCTION_191();
    id v55 = v43;
    static Date.now.getter();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_1_19();
    v56();
    outlined destroy of ConversationControlsType((uint64_t)(v96 - 14));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v42 + v41[9], v54, v51);
    swift_task_dealloc();
    *(void *)(v42 + v41[10]) = v97;
    outlined init with take of Collaboration(v42, type);
    swift_task_dealloc();
    os_log_type_t v57 = v93;
    uint64_t v58 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v93) + 0xF8))(type);

    _s15ConversationKit11ParticipantVWOhTm_4();
    if (v58)
    {
      id v59 = *v96;
      swift_retain_n();
      id v60 = v59;
      id v61 = Logger.logObject.getter();
      os_log_type_t v62 = static os_log_type_t.default.getter();
      BOOL v63 = OUTLINED_FUNCTION_105(v62);
      id v64 = *v96;
      if (v63)
      {
        swift_slowAlloc();
        uint64_t v98 = OUTLINED_FUNCTION_273();
        *(_DWORD *)uint64_t v49 = 136315394;
        *(v96 - 8) = v64;
        type metadata accessor for ConversationControlsManager(0);
        id v65 = v64;
        uint64_t v66 = String.init<A>(reflecting:)();
        *(v96 - 7) = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v67, &v98);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        *(_WORD *)(v49 + 12) = 2080;
        *(v96 - 6) = (id)v58;
        type metadata accessor for HUDActivity(0);
        swift_retain();
        uint64_t v68 = String.init<A>(reflecting:)();
        *(v96 - 5) = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69, &v98);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_1C2F90000, v61, (os_log_type_t)type, "presented incomingScreenSharingRequest activity %s %s", (uint8_t *)v49, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {

        swift_release_n();
      }

      uint64_t v89 = *(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *(void *)*v96) + 0x570);
      uint64_t v90 = swift_retain();
      v89(v90);
      swift_release();
      goto LABEL_32;
    }
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.default.getter();
    if (!OUTLINED_FUNCTION_104(v86)) {
      goto LABEL_17;
    }
LABEL_26:
    uint64_t v87 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v87);
    OUTLINED_FUNCTION_35_12(&dword_1C2F90000, v34, v57, "Could not present activity with screen sharing request");
    OUTLINED_FUNCTION_3();
LABEL_17:

    goto LABEL_32;
  }
  Swift::String v94 = (void *)(*(uint64_t (**)(void))(v40 + 1360))();
  *(void *)(v1 + 16) = 25;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(unsigned char *)(v1 + 56) = 6;
  uint64_t v70 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v72 = v71;
  uint64_t v73 = OUTLINED_FUNCTION_191();
  UUID.init()();
  uint64_t v74 = v42 + v41[11];
  *(void *)(v74 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)uint64_t v42 = 0x4089000000000000;
  outlined init with copy of ConversationControlsType((uint64_t)(v96 - 20), v42 + 8);
  *(void *)(v42 + 56) = 0;
  *(unsigned char *)(v42 + 64) = 1;
  *(void *)(v74 + 8) = 0;
  swift_unknownObjectWeakAssign();
  *(unsigned char *)(v42 + 65) = 0;
  OUTLINED_FUNCTION_2_1();
  v75();
  uint64_t v76 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  uint64_t v78 = v77;
  uint64_t v79 = OUTLINED_FUNCTION_191();
  id v80 = v43;
  static Date.now.getter();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v73, v70);
  outlined destroy of ConversationControlsType((uint64_t)(v96 - 20));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32))(v42 + v41[9], v79, v76);
  swift_task_dealloc();
  *(void *)(v42 + v41[10]) = v97;
  outlined init with take of Collaboration(v42, type);
  swift_task_dealloc();
  OUTLINED_FUNCTION_0_3();
  os_log_type_t v57 = v94;
  uint64_t v82 = (*(uint64_t (**)(uint64_t))(v81 + 264))(type);

  _s15ConversationKit11ParticipantVWOhTm_4();
  if (!v82)
  {
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v88 = static os_log_type_t.default.getter();
    if (!OUTLINED_FUNCTION_104(v88)) {
      goto LABEL_17;
    }
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_227();
  uint64_t v84 = *(void (**)(uint64_t))(v83 + 1392);
  uint64_t v85 = swift_retain();
  v84(v85);
  swift_release();
LABEL_32:
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v91();
}

void closure #1 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for StagedCollaboration(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x1C8776240](a1 + 16);
  if (v13)
  {
    BOOL v14 = (void *)v13;
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)static Logger.conversationControls);
    _s15ConversationKit11ParticipantVWOcTm_6(a4, (uint64_t)v12);
    int v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v34 = a4;
      unint64_t v19 = (uint8_t *)v18;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v35 = a5;
      uint64_t v21 = v20;
      uint64_t v39 = v20;
      uint64_t v36 = a3;
      *(_DWORD *)unint64_t v19 = 136315138;
      uint64_t v33 = v19 + 4;
      uint64_t v37 = outlined bridged method (ob) of @objc LPLinkMetadata.title.getter(objc_msgSend(*(id *)&v12[*(int *)(v10 + 40)], sel_metadata, v19 + 4));
      uint64_t v38 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
      uint64_t v23 = String.init<A>(describing:)();
      uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit11ParticipantVWOhTm_4();
      _os_log_impl(&dword_1C2F90000, v16, v17, "initiateBackgroundCollaboration for: %s", v19, 0xCu);
      swift_arrayDestroy();
      uint64_t v25 = v21;
      a5 = v35;
      MEMORY[0x1C87760E0](v25, -1, -1);
      os_log_type_t v26 = v19;
      a4 = v34;
      MEMORY[0x1C87760E0](v26, -1, -1);
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_4();
    }

    BOOL v27 = (void *)MEMORY[0x1E4FBC8C8];
    unint64_t v28 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v14) + 0x308))();
    if (v28)
    {
      uint64_t v29 = v28;
      objc_msgSend(v28, sel_initiateBackgroundCollaborationForContent_faceTimeConversation_, *(void *)(a4 + *(int *)(v10 + 40)), a5);
    }
    if ((*(uint64_t (**)(void))((*v27 & *v14) + 0x3E8))())
    {
      uint64_t v31 = v30;
      swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1C3769620;
      *(void *)(v32 + 32) = 11;
      *(_OWORD *)(v32 + 40) = 0u;
      *(_OWORD *)(v32 + 56) = 0u;
      *(unsigned char *)(v32 + 72) = 6;
      (*(void (**)(void))(v31 + 32))();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    if (a2) {
      a2(1);
    }
  }
  else if (a2)
  {
    a2(0);
  }
}

uint64_t closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 88) = v14;
  *(_OWORD *)(v8 + 72) = v13;
  *(void *)(v8 + 56) = a7;
  *(void *)(v8 + 64) = a8;
  *(void *)(v8 + 40) = a5;
  *(void *)(v8 + 48) = a6;
  *(void *)(v8 + 32) = a4;
  type metadata accessor for MainActor();
  *(void *)(v8 + 96) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 112) = v9;
  return MEMORY[0x1F4188298](closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:), v10, v9);
}

uint64_t closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)()
{
  OUTLINED_FUNCTION_28_0();
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_UUID);
  uint64_t v2 = type metadata accessor for UUID();
  *(void *)(v0 + 120) = v2;
  OUTLINED_FUNCTION_1(v2);
  *(void *)(v0 + 128) = v3;
  *(void *)(v0 + 136) = OUTLINED_FUNCTION_191();
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  type metadata accessor for StagedCollaboration(0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v4;
  *uint64_t v4 = v0;
  v4[1] = closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:);
  OUTLINED_FUNCTION_350();
  return CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)();
}

{
  os_log_type_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _WORD *v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  OUTLINED_FUNCTION_28_0();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 160);
  uint64_t v3 = swift_release();
  if (v2 == 1)
  {
    (*(void (**)(uint64_t))(v1 + 64))(v3);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    uint64_t v5 = OUTLINED_FUNCTION_30(v4, (uint64_t)static Logger.conversationControls);
    uint64_t v6 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_104(v6))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v7);
      OUTLINED_FUNCTION_102_1(&dword_1C2F90000, v5, v0, "User declined to start collaboration after initiator disclosure");
      OUTLINED_FUNCTION_3();
    }
  }
  OUTLINED_FUNCTION_6();
  return v8();
}

uint64_t closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(char a1)
{
  uint64_t v4 = *v2;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v2;
  *(void *)(v4 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_15();
    v6();
    uint64_t v7 = *(void *)(v4 + 104);
    uint64_t v8 = *(void *)(v4 + 112);
    uint64_t v9 = closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:);
  }
  else
  {
    *(unsigned char *)(v4 + 160) = a1 & 1;
    OUTLINED_FUNCTION_15();
    v10();
    swift_task_dealloc();
    uint64_t v7 = *(void *)(v4 + 104);
    uint64_t v8 = *(void *)(v4 + 112);
    uint64_t v9 = closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:);
  }
  return MEMORY[0x1F4188298](v9, v7, v8);
}

void closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)()
{
  swift_release();
  swift_task_dealloc();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v1[19];
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationControls);
  id v4 = (id)OUTLINED_FUNCTION_276();
  id v5 = v2;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = OUTLINED_FUNCTION_2_12(v7);
  uint64_t v9 = (void *)v1[19];
  if (v8)
  {
    uint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v18 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v10 = 136315138;
    v1[2] = v9;
    id v11 = v9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v12 = String.init<A>(reflecting:)();
    v1[3] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v6, v0, "Failed to ensure collaboration initiator disclosure with error: %s", v10, 0xCu);
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v14 = (void (*)(void))v1[10];
  uint64_t v15 = (void *)v1[19];
  if (v14) {
    v14(0);
  }

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_24_5();
  __asm { BRAA            X1, X16 }
}

void closure #1 in ConversationControlsManager.presentCollaboration(_:completion:)(char a1, uint64_t a2, void (*a3)(id), uint64_t a4, void *a5, uint64_t a6)
{
  v40[1] = a4;
  uint32_t v41 = a3;
  uint64_t v10 = type metadata accessor for ForegroundCollaborationState(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a2 + 16;
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x1C8776240](a2 + 16);
  if (v14)
  {
    uint64_t v15 = (void *)v14;
    id v16 = *(id *)(v14 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);

    uint64_t v17 = (uint64_t)v16 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    swift_beginAccess();
    outlined init with copy of IDSLookupManager(v17, (uint64_t)v42);

    uint64_t v19 = v43;
    uint64_t v18 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    uint64_t v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 72))(v19, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    BOOL v21 = v20 != 0;
    if ((a1 & 1) != 0 && v20)
    {
      swift_beginAccess();
      uint64_t v22 = MEMORY[0x1C8776240](v13);
      if (v22)
      {
        uint64_t v23 = (void *)v22;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date));
        unint64_t v24 = (char *)a5 + *(int *)(type metadata accessor for Collaboration(0) + 44);
        uint64_t v25 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v12, v24, v25);
        id v26 = v20;
        static Date.now.getter();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *))((*MEMORY[0x1E4FBC8C8] & *v23) + 0x7E0))(v12);
      }
      else
      {
        id v36 = v20;
      }
      uint64_t v37 = v41;
      uint64_t v38 = (void *)MEMORY[0x1C87730B0](*a5, a5[1]);
      id v39 = objc_msgSend(v20, sel_openCollaborationWithIdentifier_forConversation_, v38, a6);

      if (v37) {
        v37(v39);
      }

      goto LABEL_18;
    }
  }
  else
  {
    BOOL v21 = 0;
    uint64_t v20 = 0;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C37696D0;
  LOBYTE(v42[0]) = a1 & 1;
  uint64_t v28 = String.init<A>(reflecting:)();
  uint64_t v30 = v29;
  uint64_t v31 = MEMORY[0x1E4FBB1A0];
  *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v32 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v27 + 64) = v32;
  *(void *)(v27 + 32) = v28;
  *(void *)(v27 + 40) = v30;
  if (v21)
  {
    v42[0] = v20;
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationManager);
    id v33 = v20;
    uint64_t v34 = String.init<A>(reflecting:)();
  }
  else
  {
    unint64_t v35 = 0xE300000000000000;
    uint64_t v34 = 7104878;
  }
  *(void *)(v27 + 96) = v31;
  *(void *)(v27 + 104) = v32;
  *(void *)(v27 + 72) = v34;
  *(void *)(v27 + 80) = v35;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (v41) {
    v41(0);
  }
LABEL_18:
}

id closure #1 in ConversationControlsManager.presentActivity(activity:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.conversationControls);
  id v9 = a1;
  id v10 = a1;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v64 = a3;
    uint64_t v13 = a4;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t aBlock = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    if (a1)
    {
      uint64_t v65 = (uint64_t)a1;
      id v16 = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      uint64_t v17 = String.init<A>(reflecting:)();
      unint64_t v19 = v18;
    }
    else
    {
      unint64_t v19 = 0xE300000000000000;
      uint64_t v17 = 7104878;
    }
    uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v11, v12, "LaunchApplication error:%s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v15, -1, -1);
    MEMORY[0x1C87760E0](v14, -1, -1);

    a4 = v13;
    a3 = v64;
  }
  else
  {
  }
  uint64_t v20 = a2[3];
  uint64_t v21 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v20);
  uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 104))(v20, v21);
  if (!v22
    || (uint64_t v23 = v22,
        id v24 = objc_msgSend(v22, sel_activity),
        unsigned int v25 = objc_msgSend(v24, sel_isScreenSharingActivity),
        v23,
        v24,
        !v25))
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v64 = static OS_dispatch_queue.main.getter();
    uint32_t v41 = (void *)swift_allocObject();
    id v41[2] = a3;
    void v41[3] = a4;
    double v41[4] = a1;
    uint64_t v70 = partial apply for closure #1 in closure #1 in ConversationControlsManager.presentActivity(activity:completion:);
    uint64_t v71 = v41;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v67 = 1107296256;
    uint64_t v68 = thunk for @escaping @callee_guaranteed () -> ();
    unint64_t v69 = &block_descriptor_478;
    uint64_t v42 = _Block_copy(&aBlock);
    id v43 = a1;
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a3);
    swift_release();
    uint64_t v44 = type metadata accessor for DispatchQoS();
    uint64_t v45 = *(void *)(v44 - 8);
    MEMORY[0x1F4188790](v44);
    uint64_t v47 = (char *)&v62 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
    static DispatchQoS.unspecified.getter();
    uint64_t v48 = type metadata accessor for DispatchWorkItemFlags();
    BOOL v63 = &v62;
    uint64_t v49 = *(void *)(v48 - 8);
    MEMORY[0x1F4188790](v48);
    uint64_t v51 = (char *)&v62 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAED0]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v52 = (void *)v64;
    MEMORY[0x1C8773BA0](0, v47, v51, v42);
    _Block_release(v42);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v48);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v47, v44);
  }
  id v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_1C2F90000, v26, v27, "Posting notification to present Screen Sharing UI", v28, 2u);
    MEMORY[0x1C87760E0](v28, -1, -1);
  }

  id result = objc_msgSend(self, sel_defaultWorkspace);
  if (result)
  {
    uint64_t v30 = result;
    id v31 = objc_msgSend(self, sel_screenSharingAppURL);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    MEMORY[0x1F4188790](v32 - 8);
    uint64_t v34 = (char *)&v62 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v31)
    {
      uint64_t v35 = type metadata accessor for URL();
      uint64_t v36 = *(void *)(v35 - 8);
      MEMORY[0x1F4188790](v35);
      uint64_t v38 = (char *)&v62 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v34, v38, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v35);
      id v31 = 0;
      if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35) != 1)
      {
        URL._bridgeToObjectiveC()(v39);
        id v31 = v40;
        (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
      }
    }
    else
    {
      uint64_t v53 = type metadata accessor for URL();
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 1, 1, v53);
    }
    objc_msgSend(v30, sel_openURL_configuration_completionHandler_, v31, 0, 0);

    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v64 = static OS_dispatch_queue.main.getter();
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = a3;
    *(void *)(v54 + 24) = a4;
    uint64_t v70 = partial apply for closure #1 in SpamAlertBuilder.reportAndBlockGroupInitiatorAlert(of:blockHandler:blockAndReportHandler:cancelHandler:preparationHandler:);
    uint64_t v71 = (void *)v54;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v67 = 1107296256;
    uint64_t v68 = thunk for @escaping @callee_guaranteed () -> ();
    unint64_t v69 = &block_descriptor_484;
    id v55 = _Block_copy(&aBlock);
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a3);
    swift_release();
    uint64_t v44 = type metadata accessor for DispatchQoS();
    uint64_t v45 = *(void *)(v44 - 8);
    MEMORY[0x1F4188790](v44);
    uint64_t v47 = (char *)&v62 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    static DispatchQoS.unspecified.getter();
    uint64_t v57 = type metadata accessor for DispatchWorkItemFlags();
    BOOL v63 = &v62;
    uint64_t v58 = *(void *)(v57 - 8);
    MEMORY[0x1F4188790](v57);
    id v60 = (char *)&v62 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAED0]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v61 = (void *)v64;
    MEMORY[0x1C8773BA0](0, v47, v60, v55);
    _Block_release(v55);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v57);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v47, v44);
  }
  __break(1u);
  return result;
}

id TVRViewServiceConfigContext.__allocating_init(deviceIdentifier:identifierType:deviceType:launchContext:launchMethod:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v13 = (void *)MEMORY[0x1C87730B0](a1, a2);
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithDeviceIdentifier_identifierType_deviceType_launchContext_launchMethod_, v13, a3, a4, a5, a6);

  return v14;
}

void closure #1 in ConversationControlsManager.viewActivity(_:)(char a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = a2 + 16;
    swift_beginAccess();
    uint64_t v3 = (void *)MEMORY[0x1C8776240](v2);
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x400))();
      uint64_t v7 = v6;

      if (v5)
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v7 + 32))(0xD00000000000001BLL, 0x80000001C37A5790, 1, ObjectType, v7);
        swift_unknownObjectRelease();
      }
    }
  }
}

Swift::Void __swiftcall ConversationControlsManager.setupConversationControllerLocalStateObservers()()
{
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_15_45();
  uint64_t v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  OUTLINED_FUNCTION_14_42();
  uint64_t v4 = *v3;
  *uint64_t v3 = (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerLocalStateObservers();
  v3[1] = v1;
  OUTLINED_FUNCTION_5_83(v4);
  OUTLINED_FUNCTION_15_45();
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  OUTLINED_FUNCTION_14_42();
  uint64_t v6 = *v5;
  *uint64_t v5 = (uint64_t)partial apply for closure #2 in ConversationControlsManager.setupConversationControllerLocalStateObservers();
  v5[1] = v1;
  OUTLINED_FUNCTION_5_83(v6);
  OUTLINED_FUNCTION_15_45();
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
  OUTLINED_FUNCTION_14_42();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)partial apply for closure #3 in ConversationControlsManager.setupConversationControllerLocalStateObservers();
  v7[1] = v1;
  OUTLINED_FUNCTION_5_83(v8);
  OUTLINED_FUNCTION_15_45();
  id v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v10 = *v9;
  uint64_t *v9 = (uint64_t)partial apply for closure #4 in ConversationControlsManager.setupConversationControllerLocalStateObservers();
  v9[1] = v1;
  OUTLINED_FUNCTION_5_83(v10);
  OUTLINED_FUNCTION_15_45();
  uint64_t v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v12 = *v11;
  *uint64_t v11 = (uint64_t)partial apply for closure #5 in ConversationControlsManager.setupConversationControllerLocalStateObservers();
  v11[1] = v1;
  OUTLINED_FUNCTION_5_83(v12);
  OUTLINED_FUNCTION_15_45();
  uint64_t v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  OUTLINED_FUNCTION_14_42();
  uint64_t v14 = *v13;
  uint64_t *v13 = (uint64_t)partial apply for closure #6 in ConversationControlsManager.setupConversationControllerLocalStateObservers();
  v13[1] = v1;
  uint64_t v15 = OUTLINED_FUNCTION_5_83(v14);
  OUTLINED_FUNCTION_29_23();
  id v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
  OUTLINED_FUNCTION_11_0();
  uint64_t v17 = *v16;
  *id v16 = (uint64_t)partial apply for closure #7 in ConversationControlsManager.setupConversationControllerLocalStateObservers();
  v16[1] = v15;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v17);
}

Swift::Void __swiftcall ConversationControlsManager.setupConversationControllerConversationStateObservers()()
{
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_15_45();
  uint64_t v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v4 = *v3;
  *uint64_t v3 = (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers();
  v3[1] = v1;
  OUTLINED_FUNCTION_5_83(v4);
  OUTLINED_FUNCTION_15_45();
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
  OUTLINED_FUNCTION_14_42();
  uint64_t v6 = *v5;
  *uint64_t v5 = (uint64_t)partial apply for closure #2 in ConversationControlsManager.setupConversationControllerConversationStateObservers();
  v5[1] = v1;
  OUTLINED_FUNCTION_5_83(v6);
  OUTLINED_FUNCTION_15_45();
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)partial apply for closure #3 in ConversationControlsManager.setupConversationControllerConversationStateObservers();
  v7[1] = v1;
  OUTLINED_FUNCTION_5_83(v8);
  OUTLINED_FUNCTION_15_45();
  id v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v10 = *v9;
  uint64_t *v9 = (uint64_t)partial apply for closure #4 in ConversationControlsManager.setupConversationControllerConversationStateObservers();
  v9[1] = v1;
  OUTLINED_FUNCTION_5_83(v10);
  OUTLINED_FUNCTION_15_45();
  uint64_t v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v12 = *v11;
  *uint64_t v11 = (uint64_t)partial apply for closure #4 in ConversationControlsManager.setupConversationControllerConversationStateObservers();
  v11[1] = v1;
  OUTLINED_FUNCTION_5_83(v12);
  OUTLINED_FUNCTION_15_45();
  uint64_t v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v14 = *v13;
  uint64_t *v13 = (uint64_t)partial apply for closure #6 in ConversationControlsManager.setupConversationControllerConversationStateObservers();
  v13[1] = v1;
  OUTLINED_FUNCTION_5_83(v14);
  OUTLINED_FUNCTION_15_45();
  uint64_t v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v16 = *v15;
  *uint64_t v15 = (uint64_t)partial apply for closure #7 in ConversationControlsManager.setupConversationControllerConversationStateObservers();
  v15[1] = v1;
  OUTLINED_FUNCTION_5_83(v16);
  OUTLINED_FUNCTION_15_45();
  uint64_t v17 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
  OUTLINED_FUNCTION_14_42();
  uint64_t v18 = *v17;
  *uint64_t v17 = (uint64_t)partial apply for closure #8 in ConversationControlsManager.setupConversationControllerConversationStateObservers();
  v17[1] = v1;
  OUTLINED_FUNCTION_5_83(v18);
  OUTLINED_FUNCTION_15_45();
  unint64_t v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v20 = *v19;
  *unint64_t v19 = (uint64_t)partial apply for closure #9 in ConversationControlsManager.setupConversationControllerConversationStateObservers();
  v19[1] = v1;
  uint64_t v21 = OUTLINED_FUNCTION_5_83(v20);
  OUTLINED_FUNCTION_29_23();
  uint64_t v22 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
  OUTLINED_FUNCTION_11_0();
  uint64_t v23 = *v22;
  uint64_t *v22 = (uint64_t)partial apply for closure #10 in ConversationControlsManager.setupConversationControllerConversationStateObservers();
  v22[1] = v21;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v23);
  id v24 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_notificationCenter);
  if (one-time initialization token for DidChangeIsWaitingOnFirstFrameNotification != -1) {
    swift_once();
  }
  objc_msgSend(v24, sel_addObserver_selector_name_object_, v0, sel_handleDidChangeIsWaitingOnFirstRemoteFrame_, static ConversationController.DidChangeIsWaitingOnFirstFrameNotification, 0);
  objc_msgSend(v24, sel_addObserver_selector_name_object_, v0, sel_handleIsScreeningChanged_, *MEMORY[0x1E4FADDD0], 0);
}

Swift::Void __swiftcall ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()()
{
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_15_45();
  uint64_t v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  OUTLINED_FUNCTION_14_42();
  uint64_t v4 = *v3;
  *uint64_t v3 = (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
  v3[1] = v1;
  OUTLINED_FUNCTION_5_83(v4);
  OUTLINED_FUNCTION_15_45();
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  OUTLINED_FUNCTION_14_42();
  uint64_t v6 = *v5;
  *uint64_t v5 = (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
  v5[1] = v1;
  OUTLINED_FUNCTION_5_83(v6);
  OUTLINED_FUNCTION_15_45();
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive);
  OUTLINED_FUNCTION_14_42();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)partial apply for closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
  v7[1] = v1;
  OUTLINED_FUNCTION_5_83(v8);
  OUTLINED_FUNCTION_15_45();
  id v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode);
  OUTLINED_FUNCTION_14_42();
  uint64_t v10 = *v9;
  uint64_t *v9 = (uint64_t)partial apply for closure #4 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
  v9[1] = v1;
  OUTLINED_FUNCTION_5_83(v10);
  OUTLINED_FUNCTION_15_45();
  uint64_t v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive);
  OUTLINED_FUNCTION_14_42();
  uint64_t v12 = *v11;
  *uint64_t v11 = (uint64_t)partial apply for closure #5 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
  v11[1] = v1;
  OUTLINED_FUNCTION_5_83(v12);
  OUTLINED_FUNCTION_15_45();
  uint64_t v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  OUTLINED_FUNCTION_14_42();
  uint64_t v14 = *v13;
  uint64_t *v13 = (uint64_t)partial apply for closure #6 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
  v13[1] = v1;
  OUTLINED_FUNCTION_5_83(v14);
  OUTLINED_FUNCTION_15_45();
  uint64_t v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  OUTLINED_FUNCTION_14_42();
  uint64_t v16 = *v15;
  *uint64_t v15 = (uint64_t)partial apply for closure #7 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
  v15[1] = v1;
  OUTLINED_FUNCTION_5_83(v16);
  OUTLINED_FUNCTION_15_45();
  uint64_t v17 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  OUTLINED_FUNCTION_14_42();
  uint64_t v18 = *v17;
  *uint64_t v17 = (uint64_t)partial apply for closure #8 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
  v17[1] = v1;
  OUTLINED_FUNCTION_5_83(v18);
  OUTLINED_FUNCTION_15_45();
  unint64_t v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v20 = *v19;
  *unint64_t v19 = (uint64_t)partial apply for closure #9 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
  v19[1] = v1;
  OUTLINED_FUNCTION_5_83(v20);
  OUTLINED_FUNCTION_15_45();
  uint64_t v21 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v22 = *v21;
  *uint64_t v21 = (uint64_t)partial apply for closure #10 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
  v21[1] = v1;
  OUTLINED_FUNCTION_5_83(v22);
  OUTLINED_FUNCTION_15_45();
  uint64_t v23 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  OUTLINED_FUNCTION_14_42();
  uint64_t v24 = *v23;
  *uint64_t v23 = (uint64_t)partial apply for closure #11 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
  v23[1] = v1;
  uint64_t v25 = OUTLINED_FUNCTION_5_83(v24);
  OUTLINED_FUNCTION_29_23();
  id v26 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
  OUTLINED_FUNCTION_11_0();
  uint64_t v27 = *v26;
  *id v26 = (uint64_t)partial apply for closure #12 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
  v26[1] = v25;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v27);
}

Swift::Void __swiftcall ConversationControlsManager.setupConversationControllerSharePlayStateObservers()()
{
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_15_45();
  uint64_t v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v4 = *v3;
  *uint64_t v3 = (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers();
  v3[1] = v1;
  OUTLINED_FUNCTION_5_83(v4);
  OUTLINED_FUNCTION_15_45();
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted);
  OUTLINED_FUNCTION_14_42();
  uint64_t v6 = *v5;
  *uint64_t v5 = (uint64_t)partial apply for closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers();
  v5[1] = v1;
  OUTLINED_FUNCTION_5_83(v6);
  OUTLINED_FUNCTION_15_45();
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged);
  OUTLINED_FUNCTION_14_42();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)partial apply for closure #3 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers();
  v7[1] = v1;
  OUTLINED_FUNCTION_5_83(v8);
  OUTLINED_FUNCTION_15_45();
  id v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged);
  OUTLINED_FUNCTION_14_42();
  uint64_t v10 = *v9;
  uint64_t *v9 = (uint64_t)partial apply for closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers();
  v9[1] = v1;
  uint64_t v11 = OUTLINED_FUNCTION_5_83(v10);
  OUTLINED_FUNCTION_29_23();
  uint64_t v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted);
  OUTLINED_FUNCTION_11_0();
  uint64_t v13 = *v12;
  *uint64_t v12 = (uint64_t)partial apply for closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers();
  v12[1] = v11;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v13);
}

Swift::Void __swiftcall ConversationControlsManager.setupConversationControllerGondolaStateObservers()()
{
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_15_45();
  uint64_t v3 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v4 = *v3;
  *uint64_t v3 = (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerGondolaStateObservers();
  v3[1] = v1;
  OUTLINED_FUNCTION_5_83(v4);
  OUTLINED_FUNCTION_15_45();
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
  OUTLINED_FUNCTION_14_42();
  uint64_t v6 = *v5;
  *uint64_t v5 = (uint64_t)partial apply for closure #2 in ConversationControlsManager.setupConversationControllerGondolaStateObservers();
  v5[1] = v1;
  OUTLINED_FUNCTION_5_83(v6);
  OUTLINED_FUNCTION_15_45();
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  OUTLINED_FUNCTION_14_42();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)partial apply for closure #3 in ConversationControlsManager.setupConversationControllerGondolaStateObservers();
  v7[1] = v1;
  OUTLINED_FUNCTION_5_83(v8);
  OUTLINED_FUNCTION_15_45();
  id v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
  OUTLINED_FUNCTION_14_42();
  uint64_t v10 = *v9;
  uint64_t *v9 = (uint64_t)partial apply for closure #4 in ConversationControlsManager.setupConversationControllerGondolaStateObservers();
  v9[1] = v1;
  OUTLINED_FUNCTION_5_83(v10);
  OUTLINED_FUNCTION_15_45();
  uint64_t v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant);
  OUTLINED_FUNCTION_14_42();
  uint64_t v12 = *v11;
  *uint64_t v11 = (uint64_t)partial apply for closure #5 in ConversationControlsManager.setupConversationControllerGondolaStateObservers();
  v11[1] = v1;
  OUTLINED_FUNCTION_5_83(v12);
  OUTLINED_FUNCTION_15_45();
  uint64_t v13 = (uint64_t *)(v2
                  + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  OUTLINED_FUNCTION_14_42();
  uint64_t v14 = *v13;
  uint64_t *v13 = (uint64_t)partial apply for closure #6 in ConversationControlsManager.setupConversationControllerGondolaStateObservers();
  v13[1] = v1;
  OUTLINED_FUNCTION_5_83(v14);
  OUTLINED_FUNCTION_15_45();
  uint64_t v15 = (uint64_t *)(v2
                  + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  OUTLINED_FUNCTION_14_42();
  uint64_t v16 = *v15;
  *uint64_t v15 = (uint64_t)partial apply for closure #7 in ConversationControlsManager.setupConversationControllerGondolaStateObservers();
  v15[1] = v1;
  uint64_t v17 = OUTLINED_FUNCTION_5_83(v16);
  OUTLINED_FUNCTION_29_23();
  uint64_t v18 = (uint64_t *)(v2
                  + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  OUTLINED_FUNCTION_11_0();
  uint64_t v19 = *v18;
  *uint64_t v18 = (uint64_t)partial apply for closure #8 in ConversationControlsManager.setupConversationControllerGondolaStateObservers();
  v18[1] = v17;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v19);
}

uint64_t ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Just<Call>);
  uint64_t v42 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  uint64_t v44 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  uint64_t v46 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.CompactMap<Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>, (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)>);
  uint64_t v51 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint32_t v41 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (uint64_t *)(v14 + OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
  swift_beginAccess();
  uint64_t v17 = *v16;
  *uint64_t v16 = (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers();
  v16[1] = v15;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.Debounce<Publishers.CompactMap<Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>, (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)>, OS_dispatch_queue>);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v49 = v18;
  uint64_t v50 = v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v47 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v52 = (id)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x270))(v20);
  uint64_t v53 = v22;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
  Just.init(_:)();
  id v52 = (id)ConversationControlsManager.pttCallUpdateSubject.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Call, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Just<Call> and conformance Just<A>, (uint64_t *)&demangling cache variable for type metadata for Just<Call>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<Call, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Call, Never>);
  Publisher.merge<A>(with:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v4, v2);
  id v52 = *(id *)((char *)v1
              + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_incomingTransmissionReceivedSubject);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>> and conformance Publishers.Merge<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  uint64_t v23 = v43;
  Publisher.combineLatest<A>(_:)();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v23);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool));
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>> and conformance Publishers.CombineLatest<A, B>, &demangling cache variable for type metadata for Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>);
  uint64_t v24 = v41;
  uint64_t v25 = v45;
  Publisher.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v25);
  uint64_t v26 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v41 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  id v52 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)&v41 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v32, 1, 1, v33);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type Publishers.CompactMap<Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>, (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)> and conformance Publishers.CompactMap<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.CompactMap<Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>, (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)>);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v35 = v47;
  uint64_t v34 = v48;
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of SystemUpdateNotice?((uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v24, v34);
  uint64_t v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = partial apply for closure #3 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers();
  *(void *)(v37 + 24) = v36;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Debounce<Publishers.CompactMap<Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>, (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)>, OS_dispatch_queue> and conformance Publishers.Debounce<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.Debounce<Publishers.CompactMap<Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>, (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)>, OS_dispatch_queue>);
  uint64_t v38 = v49;
  uint64_t v39 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v38);
  return ConversationControlsManager.pttCallStatusUpdateCancellable.setter(v39);
}

void closure #1 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    swift_beginAccess();
    uint64_t v11 = (void *)MEMORY[0x1C8776240](a5 + 16);
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = (void *)MEMORY[0x1E4FBC8C8];
      uint64_t v14 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v11) + 0x978))();
      (*(void (**)(uint64_t))((*v13 & *v12) + 0x9B0))(v14);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #2 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(char a1, void *a2)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (void *)((char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  swift_beginAccess();
  char v10 = (void *)MEMORY[0x1C8776240](a2 + 2);
  if (!v10) {
    return;
  }
  a2 = v10;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  if ((a1 & 1) != ((*(unsigned int (**)(void))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x640))() & 0x100) >> 8)
  {
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_5:
      uint64_t v11 = type metadata accessor for Logger();
      __swift_project_value_buffer(v11, (uint64_t)static Logger.conversationControls);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 136315138;
        *(void *)&v25[0] = v15;
        if (a1) {
          uint64_t v16 = 1702195828;
        }
        else {
          uint64_t v16 = 0x65736C6166;
        }
        if (a1) {
          unint64_t v17 = 0xE400000000000000;
        }
        else {
          unint64_t v17 = 0xE500000000000000;
        }
        v24[1] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, (uint64_t *)v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v12, v13, "didUpdateLocalScreenSharing, enabled: %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v15, -1, -1);
        MEMORY[0x1C87760E0](v14, -1, -1);
      }

      uint64_t v18 = *(uint64_t (**)(_OWORD *))((*v2 & *a2) + 0x650);
      uint64_t v19 = (uint64_t (*)(_OWORD *, void))v18(v25);
      *(unsigned char *)(v20 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = a1 & 1;
      uint64_t v21 = v19(v25, 0);
      if (a1)
      {
        uint64_t v22 = (uint64_t (*)(_OWORD *, void))v18(v25);
        *(unsigned char *)(v23 + 17) = 0;
        uint64_t v21 = v22(v25, 0);
      }
      (*(void (**)(uint64_t))((*v2 & *a2) + 0x9B0))(v21);
      uint64_t v26 = 0;
      memset(v25, 0, sizeof(v25));
      (*(void (**)(_OWORD *))((*v2 & *a2) + 0x9B8))(v25);
      outlined destroy of SystemUpdateNotice?((uint64_t)v25, &demangling cache variable for type metadata for Activity?);
      ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
      goto LABEL_16;
    }
LABEL_19:
    swift_once();
    goto LABEL_5;
  }
LABEL_16:
}

void closure #3 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    swift_beginAccess();
    uint64_t v7 = MEMORY[0x1C8776240](a1 + 16);
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      id v9 = ConversationControlsManager.localVideoStateChangedAlert.getter();
      (*(void (**)(id))((*MEMORY[0x1E4FBC8C8] & *v8) + 0x7F8))(v9);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #4 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(void *a1, void *a2)
{
  uint64_t v5 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint8_t **)((char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(void *, void, void *))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  swift_beginAccess();
  uint64_t v10 = (void *)MEMORY[0x1C8776240](a2 + 2);
  if (!v10) {
    return;
  }
  a2 = v10;
  if (a1)
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v11 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x580);
    uint64_t v5 = a1;
    uint64_t v12 = v11();
    if (!v12)
    {
LABEL_13:

      goto LABEL_14;
    }
    uint64_t v8 = (void *)v12;
    if (objc_msgSend(v5, sel_isEqualToRouteIgnoringIsRecommended_, v12))
    {
LABEL_12:

      goto LABEL_13;
    }
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_7:
      uint64_t v13 = type metadata accessor for Logger();
      __swift_project_value_buffer(v13, (uint64_t)static Logger.conversationControls);
      uint64_t v14 = v5;
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      int v17 = v16;
      if (os_log_type_enabled(v15, v16))
      {
        int v31 = v17;
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        uint64_t v34 = v30;
        *(_DWORD *)uint64_t v18 = 136315138;
        uint64_t v28 = v18 + 4;
        uint64_t v29 = v18;
        uint64_t v19 = v14;
        id v20 = objc_msgSend(v19, sel_description);
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v32 = v14;
        unint64_t v23 = v22;

        uint64_t v24 = v21;
        uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
        uint64_t v33 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v23, &v34);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        uint64_t v14 = v32;
        swift_bridgeObjectRelease();
        uint64_t v25 = v29;
        _os_log_impl(&dword_1C2F90000, v15, (os_log_type_t)v31, "audioRouteDidChange: %s", v29, 0xCu);
        uint64_t v26 = v30;
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v26, -1, -1);
        MEMORY[0x1C87760E0](v25, -1, -1);
      }
      else
      {
      }
      uint64_t v27 = v14;
      ConversationControlsManager.audioRoute.setter(a1);
      (*(void (**)(void))((*v2 & *a2) + 0x9B0))();
      goto LABEL_12;
    }
LABEL_17:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v5 = v10;
LABEL_14:
}

void closure #5 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(char a1, char *a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1C8776240](a2 + 16);
  if (!v9) {
    return;
  }
  a2 = (char *)v9;
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.conversationControls);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 67109120;
    v14[1] = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1C2F90000, v11, v12, "carPlayConnectedDidChange: %{BOOL}d", v13, 8u);
    MEMORY[0x1C87760E0](v13, -1, -1);
  }

  ConversationController.localVideoSupported.getter();
  ConversationControlsManager.localVideoButtonState.getter();
  ConversationControlsManager.localVideoButtonState.setter();
}

void closure #6 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C8776240](a2 + 16);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      ConversationControlsManager.bluetoothAudioFormat.setter();
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #7 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    swift_beginAccess();
    uint64_t v9 = (void *)MEMORY[0x1C8776240](a3 + 16);
    if (v9)
    {
      uint64_t v10 = v9;
      if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v9) + 0x400))())
      {
        uint64_t v12 = v11;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v12 + 48))(ObjectType, v12);

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v22)(uint64_t *__return_ptr, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t (*v52)(void);
  void *v53;
  void *v54;
  unsigned __int8 v55;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  void v73[3];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[3];
  uint64_t v77;

  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  os_log_type_t v16 = (void *)((char *)v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *os_log_type_t v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBE8], v13);
  char v17 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_47:
    swift_once();
    goto LABEL_19;
  }
  swift_beginAccess();
  uint64_t v18 = (void *)MEMORY[0x1C8776240](a3 + 2);
  if (!v18) {
    return;
  }
  a3 = v18;
  uint64_t v3 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v19 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v18) + 0x978))();
  (*(void (**)(uint64_t))((*v3 & *a3) + 0x9B0))(v19);
  uint64_t v20 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v20);
  (*(void (**)(char *))((*v3 & *a3) + 0x998))(v12);
  uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v12, &demangling cache variable for type metadata for Participant?);
  unint64_t v22 = *(void (**)(uint64_t *__return_ptr, uint64_t))((*v3 & *a3) + 0x3D0);
  v22(v76, updated);
  if (v77)
  {
    outlined init with copy of IDSLookupManager((uint64_t)v76, (uint64_t)v73);
    outlined destroy of SystemUpdateNotice?((uint64_t)v76, &demangling cache variable for type metadata for CallControlsService?);
    unint64_t v23 = v74;
    uint64_t v24 = v75;
    __swift_project_boxed_opaque_existential_1(v73, v74);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 104))(a2, v23, v24);
    uint64_t v25 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  }
  else
  {
    uint64_t v25 = outlined destroy of SystemUpdateNotice?((uint64_t)v76, &demangling cache variable for type metadata for CallControlsService?);
  }
  v22(v76, v25);
  if (v77)
  {
    outlined init with copy of IDSLookupManager((uint64_t)v76, (uint64_t)v73);
    outlined destroy of SystemUpdateNotice?((uint64_t)v76, &demangling cache variable for type metadata for CallControlsService?);
    uint64_t v26 = v74;
    uint64_t v27 = v75;
    __swift_project_boxed_opaque_existential_1(v73, v74);
    uint64_t v28 = (*(uint64_t (**)(void))((*v3 & *a3) + 0x840))();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 112))(v28, v26, v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v76, &demangling cache variable for type metadata for CallControlsService?);
  }
  if (a2 == 4)
  {
    uint64_t v29 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v29);
    type metadata accessor for MainActor();
    uint64_t v30 = a3;
    int v31 = static MainActor.shared.getter();
    uint64_t v32 = (void *)swift_allocObject();
    uint64_t v33 = MEMORY[0x1E4FBCFD8];
    void v32[2] = v31;
    v32[3] = v33;
    v32[4] = v30;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    uint64_t v34 = swift_release();
    uint64_t v35 = *(void *)((char *)v30 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeShareCardHandle);
    if (v35)
    {
      uint64_t v36 = *(void **)(v35 + 16);
      swift_retain();
      objc_msgSend(v36, sel_invalidate);
      ConversationControlsManager.activeShareCardHandle.setter(0);
      uint64_t v34 = swift_release();
    }
    if ((*(uint64_t (**)(uint64_t))((*v3 & *v30) + 0x3E8))(v34))
    {
      uint64_t v38 = v37;
      swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_1C37696D0;
      *(void *)(v39 + 32) = 24;
      *(_OWORD *)(v39 + 40) = 0u;
      *(_OWORD *)(v39 + 56) = 0u;
      *(unsigned char *)(v39 + 72) = 6;
      *(void *)(v39 + 80) = 25;
      *(_OWORD *)(v39 + 88) = 0u;
      *(_OWORD *)(v39 + 104) = 0u;
      *(unsigned char *)(v39 + 120) = 6;
      (*(void (**)(void))(v38 + 32))();
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
    }
    else
    {
    }
    return;
  }
  ConversationController.localVideoSupported.getter();
  ConversationControlsManager.localVideoButtonState.getter();
  ConversationControlsManager.localVideoButtonState.setter();
  if (a2 != 2 && (a1 == 3 || a2 != 3) {
    || ((*(void (**)(void))((*v3 & *a3) + 0x270))(),
  }
        uint32_t v41 = v40,
        uint64_t ObjectType = swift_getObjectType(),
        LOBYTE(v4ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 136))(ObjectType, v41),
        swift_unknownObjectRelease(),
        (v41 & 1) != 0))
  {
LABEL_41:

    return;
  }
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_47;
  }
LABEL_19:
  uint64_t v43 = type metadata accessor for Logger();
  __swift_project_value_buffer(v43, (uint64_t)static Logger.conversationControls);
  uint64_t v44 = Logger.logObject.getter();
  uint64_t v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    v76[0] = v47;
    *(_DWORD *)uint64_t v46 = 136315394;
    v73[0] = a1;
    type metadata accessor for TUConversationState(0);
    uint64_t v48 = String.init<A>(reflecting:)();
    v73[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2080;
    v73[0] = a2;
    uint64_t v50 = String.init<A>(reflecting:)();
    v73[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v44, v45, "conversationStateDidChange, from:%s to:%s -> present HUD", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v47, -1, -1);
    MEMORY[0x1C87760E0](v46, -1, -1);
  }

  id v52 = *(uint64_t (**)(void))((*v3 & *a3) + 0x290);
  uint64_t v53 = (void *)v52();
  if (v53)
  {
    uint64_t v54 = v53;
    id v55 = objc_msgSend(v53, sel_isContinuitySession);
  }
  else
  {
    id v55 = 0;
  }
  uint64_t v56 = v52();
  if (v56)
  {
    uint64_t v57 = (void *)v56;
    specialized Conversation.currentScreenSharingRequest(ignoring:)();
    uint64_t v59 = v58;

    if (v59)
    {
      if (objc_msgSend(*(id *)((char *)a3+ OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags), sel_usesModernScreenSharingFromMessages))
      {
        if (objc_msgSend(v59, sel_type) == (id)4)
        {
          ConversationControlsManager.addIncomingScreenSharingRequestActivity()();
        }
        else if (objc_msgSend(v59, sel_type) == (id)2)
        {
          ConversationControlsManager.startScreenShareWithCountdown(completion:)();
        }

        goto LABEL_36;
      }
    }
  }
  if ((v55 & 1) == 0) {
    ConversationControlsManager.showHUD()();
  }
LABEL_36:
  id v60 = (void *)v52();
  if (!v60) {
    goto LABEL_41;
  }
  id v61 = v60;
  uint64_t v62 = objc_msgSend(v60, sel_activeRemoteParticipants);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  BOOL v63 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.compactMap<A>(_:)(v63);
  uint64_t v65 = v64;
  swift_bridgeObjectRelease();
  uint64_t v66 = specialized Set.init<A>(_:)(v65);
  (*(void (**)(uint64_t))((*v3 & *a3) + 0x2C8))(v66);
  if (a2 != 3) {
    goto LABEL_39;
  }
  uint64_t v67 = objc_msgSend(v61, sel_activeRemoteParticipants);
  uint64_t v68 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v69 = specialized Set.count.getter(v68);
  swift_bridgeObjectRelease();
  if (v69
    || (uint64_t v70 = objc_msgSend(v61, sel_pendingMembers),
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember), lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember), uint64_t v71 = static Set._unconditionallyBridgeFromObjectiveC(_:)(), v70, v72 = specialized Set.count.getter(v71), swift_bridgeObjectRelease(), v72 < 1)|| (objc_msgSend(v61, sel_ignoreLMIRequests) & 1) != 0)
  {
LABEL_39:
    (*(void (**)(void))((*v3 & *a3) + 0x828))(0);
  }
  else
  {
    ConversationControlsManager.scheduleDelayedLMIBanner()();
  }
}

uint64_t closure #1 in closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers(), v6, v5);
}

uint64_t closure #1 in closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()()
{
  OUTLINED_FUNCTION_17_2();
  swift_release();
  ConversationControlsManager.removeIncomingScreenShareRequest()();
  OUTLINED_FUNCTION_6();
  return v0();
}

uint64_t ConversationControlsManager.scheduleDelayedLMIBanner()()
{
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x828))(1);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v25 = static OS_dispatch_queue.main.getter();
  uint64_t v1 = type metadata accessor for DispatchTime();
  uint64_t v23 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v20 - v6;
  static DispatchTime.now()();
  MEMORY[0x1C8772E20](v7, 30.0);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
  uint64_t v22 = v2 + 8;
  uint64_t v24 = v8;
  v8(v7, v1);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in ConversationControlsManager.scheduleDelayedLMIBanner();
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_456;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAED0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v18 = (void *)v25;
  MEMORY[0x1C8773B10](v5, v13, v17, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v21);
  return v24(v5, v23);
}

void closure #2 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(char a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_4;
  }
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1C8776240](a2 + 2);
  if (!v9) {
    return;
  }
  a2 = (void *)v9;
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_13;
  }
LABEL_4:
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.conversationControls);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 67109120;
    v17[1] = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1C2F90000, v11, v12, "Controls manager handling didUpdateWantsHoldMusic:%{BOOL}d", v13, 8u);
    MEMORY[0x1C87760E0](v13, -1, -1);
  }

  if (a1)
  {
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a2) + 0x400))())
    {
      uint64_t v15 = v14;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v15 + 32))(0xD000000000000015, 0x80000001C37A54F0, 1, ObjectType, v15);

      swift_unknownObjectRelease();
      return;
    }
  }
  else
  {
    ConversationControlsManager.showHUD()();
  }
}

void closure #3 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C8776240](a2 + 16);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #4 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2)
{
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_62();
  char v5 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  uint64_t v6 = OUTLINED_FUNCTION_2_52();
  v7(v6);
  _dispatchPreconditionTest(_:)();
  uint64_t v8 = OUTLINED_FUNCTION_1_18();
  v9(v8);
  if (v5)
  {
    OUTLINED_FUNCTION_2();
    uint64_t v10 = MEMORY[0x1C8776240](a2 + 16);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      OUTLINED_FUNCTION_173_0();
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #6 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  char v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBE8], v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  swift_beginAccess();
  uint64_t v13 = (void *)MEMORY[0x1C8776240](a4 + 2);
  if (!v13) {
    return;
  }
  a4 = v13;
  uint64_t v14 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v15 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v13) + 0x290))();
  if (v15)
  {
    uint64_t v8 = (uint64_t)v15;
    if (objc_msgSend(v15, sel_state) != (id)3)
    {
LABEL_9:

      a4 = (void *)v8;
      goto LABEL_10;
    }
    uint64_t v16 = type metadata accessor for Participant(0);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v16);
    (*(void (**)(char *))((*v14 & *a4) + 0x998))(v7);
    outlined destroy of SystemUpdateNotice?((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_6:
      uint64_t v17 = type metadata accessor for Logger();
      __swift_project_value_buffer(v17, (uint64_t)static Logger.conversationControls);
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl(&dword_1C2F90000, v18, v19, "Present HUD: groupNameAndPhotoDidChange", v20, 2u);
        MEMORY[0x1C87760E0](v20, -1, -1);
      }

      ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
      goto LABEL_9;
    }
LABEL_13:
    swift_once();
    goto LABEL_6;
  }
LABEL_10:
}

void closure #7 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    swift_beginAccess();
    uint64_t v9 = (void *)MEMORY[0x1C8776240](a3 + 16);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = (void *)MEMORY[0x1E4FBC8C8];
      char v12 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v9) + 0x290))();
      if (v12)
      {
        uint64_t v13 = v12;
        if (objc_msgSend(v12, sel_state) == (id)3)
        {
          (*(void (**)(void))((*v11 & *v10) + 0x978))();
          ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
        }

        uint64_t v10 = v13;
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #8 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    swift_beginAccess();
    uint64_t v10 = (void *)MEMORY[0x1C8776240](a1 + 16);
    if (v10)
    {
      uint64_t v11 = v10;
      char v12 = (void *)MEMORY[0x1E4FBC8C8];
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x978))();
      uint64_t v13 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v13);
      (*(void (**)(char *))((*v12 & *v11) + 0x998))(v4);
      outlined destroy of SystemUpdateNotice?((uint64_t)v4, &demangling cache variable for type metadata for Participant?);
      ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #9 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v54 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBE8], v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x1C8776240](a3 + 16);
  if (!v13)
  {
LABEL_7:
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_8:
      uint64_t v33 = type metadata accessor for Logger();
      __swift_project_value_buffer(v33, (uint64_t)static Logger.conversationKit);
      swift_unknownObjectRetain_n();
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v14, v34))
      {

        swift_unknownObjectRelease_n();
        return;
      }
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v58 = v36;
      *(_DWORD *)uint64_t v35 = 136315138;
      uint64_t ObjectType = swift_getObjectType();
      LODWORD(v55[0]) = (*(uint64_t (**)(uint64_t))(v54 + 184))(ObjectType);
      type metadata accessor for TUCallStatus(0);
      uint64_t v38 = String.init<A>(reflecting:)();
      v55[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v14, v34, "ConversationControlsManager Skipping call status update: %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v36, -1, -1);
      MEMORY[0x1C87760E0](v35, -1, -1);
      goto LABEL_24;
    }
LABEL_26:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v14 = v13;
  id v52 = v7;
  uint64_t v15 = swift_getObjectType();
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v16);
  os_log_type_t v19 = *(uint64_t (**)(uint64_t))(v54 + 200);
  uint64_t v53 = a1;
  uint64_t v51 = v15;
  uint64_t v20 = v19(v15);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & (uint64_t)v14->isa) + 0x278))(v21);
  char v24 = static UUID.== infix(_:_:)();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v17 + 8);
  v25(v22, v16);
  uint64_t v26 = ((uint64_t (*)(char *, uint64_t))v25)(v22, v16);
  if ((v24 & 1) == 0)
  {

    goto LABEL_7;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))((*v23 & (uint64_t)v14->isa) + 0x3D0))(&v58, v26);
  uint64_t v27 = v23;
  if ((void)v60)
  {
    outlined init with copy of IDSLookupManager((uint64_t)&v58, (uint64_t)v55);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v58, &demangling cache variable for type metadata for CallControlsService?);
    uint64_t v28 = v56;
    uint64_t v29 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    uint64_t v30 = v53;
    uint64_t v31 = v54;
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 184))(v51, v54);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 96))(v32, v28, v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v58, &demangling cache variable for type metadata for CallControlsService?);
    uint64_t v30 = v53;
    uint64_t v31 = v54;
  }
  self;
  uint64_t v40 = swift_dynamicCastObjCClass();
  if (v40)
  {
    uint32_t v41 = (void *)v40;
    swift_unknownObjectRetain();
    if (objc_msgSend(v41, sel_status) == 2)
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v42 = type metadata accessor for Logger();
      __swift_project_value_buffer(v42, (uint64_t)static Logger.conversationControls);
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v45 = 0;
        _os_log_impl(&dword_1C2F90000, v43, v44, "Invalidating screen share request because call became held", v45, 2u);
        MEMORY[0x1C87760E0](v45, -1, -1);
      }

      ConversationControlsManager.declineOrCancelScreenShareRequest()();
    }
    uint64_t v40 = swift_unknownObjectRelease();
  }
  (*(void (**)(uint64_t))((*v27 & (uint64_t)v14->isa) + 0x978))(v40);
  uint64_t v46 = type metadata accessor for Participant(0);
  uint64_t v47 = (uint64_t)v52;
  __swift_storeEnumTagSinglePayload((uint64_t)v52, 1, 1, v46);
  (*(void (**)(uint64_t))((*v27 & (uint64_t)v14->isa) + 0x998))(v47);
  outlined destroy of SystemUpdateNotice?(v47, &demangling cache variable for type metadata for Participant?);
  if (ConversationControlsManager.shouldShowCallAgainHUD(forCall:)())
  {
    if ((*(uint64_t (**)(void))((*v27 & (uint64_t)v14->isa) + 0x430))())
    {
      uint64_t v49 = v48;
      uint64_t v50 = swift_getObjectType();
      uint64_t v58 = 10;
      long long v59 = 0u;
      long long v60 = 0u;
      char v61 = 6;
      (*(void (**)(uint64_t *, uint64_t, void, uint64_t, uint64_t))(v49 + 80))(&v58, 1, 0, v50, v49);
      swift_unknownObjectRelease();

      outlined destroy of ConversationControlsType((uint64_t)&v58);
      return;
    }
  }
  else
  {
    ConversationControlsManager.notifyDelegates(about:forceUpdate:)(v30, v31, 0);
  }
LABEL_24:
}

void closure #10 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    swift_beginAccess();
    uint64_t v9 = (void *)MEMORY[0x1C8776240](a2 + 16);
    if (v9)
    {
      uint64_t v10 = v9;
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v9) + 0x660))(a1 & 1);
    }
  }
  else
  {
    __break(1u);
  }
}

void ConversationControlsManager.controlsHUDUpdate(for:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  OUTLINED_FUNCTION_10_1();
  if ((*(uint64_t (**)(void))(v7 + 1072))())
  {
    OUTLINED_FUNCTION_27_26();
    OUTLINED_FUNCTION_74_2();
    v8();
    OUTLINED_FUNCTION_85_3();
  }
  else
  {
    int v3 = 0;
  }
  uint64_t v9 = *(void *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features);
  OUTLINED_FUNCTION_365();
  if ((*(uint64_t (**)(void))(v10 + 88))())
  {
    OUTLINED_FUNCTION_365();
    int v12 = (*(uint64_t (**)(void))(v11 + 192))() & v3 ^ 1;
  }
  else
  {
    LOBYTE(v12) = 0;
  }
  self;
  uint64_t v13 = swift_dynamicCastObjCClass();
  if (!v13) {
    goto LABEL_15;
  }
  uint64_t v14 = (void *)v13;
  uint64_t v15 = self;
  swift_unknownObjectRetain();
  id v16 = objc_msgSend(v15, sel_sharedInstance);
  id v17 = objc_msgSend(v16, sel_activeConversationForCall_, v14);

  if (!v17)
  {
    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_348();
  uint64_t v19 = (*(uint64_t (**)(void))(v18 + 1384))();
  swift_release();
  if (!v19 && objc_msgSend(v17, sel_state) != (id)2 || objc_msgSend(v14, sel_status) != 1)
  {
    swift_unknownObjectRelease();

    if ((v12 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
  id v20 = objc_msgSend(v17, sel_screenSharingRequests);
  uint64_t v86 = a1;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue(&lazy protocol witness table cache variable for type TUScreenSharingRequest and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
  uint64_t v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.first(where:)(v21);
  uint64_t v23 = v22;
  a1 = v86;
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  if (!v23)
  {
LABEL_15:
    if ((v12 & 1) == 0) {
      goto LABEL_21;
    }
LABEL_18:
    swift_getObjectType();
    OUTLINED_FUNCTION_166_0();
    if (v24() == 4)
    {
      OUTLINED_FUNCTION_348();
      OUTLINED_FUNCTION_90_2();
      v25();
      OUTLINED_FUNCTION_27_26();
      OUTLINED_FUNCTION_80_1();
      uint64_t v27 = (void *)v26();
      static ConversationControlsType.firstOrThirdPartyIncomingCall(for:)(v27, a2);
      swift_unknownObjectRelease();

      goto LABEL_20;
    }
LABEL_21:
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(a1 + 136))(ObjectType, a1))
    {
      OUTLINED_FUNCTION_184(21);
      *(_WORD *)(a2 + 40) = 6;
LABEL_46:
      *(unsigned char *)(a2 + 42) = 0;
      goto LABEL_47;
    }
    uint64_t v85 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 160);
    uint64_t v29 = (void *)v85(ObjectType, a1);
    unsigned int v30 = objc_msgSend(v29, sel_supportsDynamicSystemUI);

    if (v30
      && (id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init),
          unsigned int v32 = objc_msgSend(v31, sel_groupConversations),
          v31,
          v32)
      && TUDeviceHasChinaSKU())
    {
      OUTLINED_FUNCTION_166_0();
      int v34 = v33();
      uint64_t v35 = 22;
      if (v34 != 4) {
        uint64_t v35 = 23;
      }
      uint64_t v89 = v35;
      long long v90 = 0u;
      long long v91 = 0u;
      char v92 = 6;
      outlined init with take of ConversationControlsType((long long *)&v89, (_OWORD *)a2);
    }
    else
    {
      OUTLINED_FUNCTION_166_0();
      if (v36() == 1) {
        int v82 = SBSIsSystemApertureAvailable() ^ 1;
      }
      else {
        int v82 = 0;
      }
      type metadata accessor for PlaceholderCall();
      uint64_t v37 = swift_dynamicCastClass();
      if (v37) {
        BOOL v38 = *(unsigned char *)(v37 + 16) == 3;
      }
      else {
        BOOL v38 = 0;
      }
      char v84 = v12;
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v83 = a2;
      uint64_t v39 = type metadata accessor for Logger();
      __swift_project_value_buffer(v39, (uint64_t)static Logger.conversationControls);
      uint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v81 = ObjectType;
        uint64_t v42 = (_DWORD *)OUTLINED_FUNCTION_37();
        uint64_t v89 = OUTLINED_FUNCTION_9_0();
        *uint64_t v42 = 136315138;
        LOBYTE(v87[0]) = v38;
        uint64_t v43 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, &v89);
        OUTLINED_FUNCTION_251();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_268(&dword_1C2F90000, v40, v41, "ConversationControlsManager isHandoffCall is %s");
        OUTLINED_FUNCTION_119();
        OUTLINED_FUNCTION_3();
        uint64_t ObjectType = v81;
        OUTLINED_FUNCTION_3();
      }

      if (v38 || (v84 & 1) == 0) {
        goto LABEL_42;
      }
      uint64_t v45 = OUTLINED_FUNCTION_124_0();
      uint64_t v47 = (void *)v46(v45);
      id v48 = objc_msgSend(v47, sel_identifier);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_34_9();
      uint64_t v49 = String.count.getter();
      swift_bridgeObjectRelease();
      if (v49 < 1
        || (uint64_t v50 = OUTLINED_FUNCTION_124_0(),
            id v52 = (void *)v51(v50),
            unsigned __int8 v53 = objc_msgSend(v52, sel_isFaceTimeProvider),
            v52,
            (v53 & 1) != 0)
        || (uint64_t v56 = OUTLINED_FUNCTION_142_0(), (v57(v56) & 1) == 0)
        && (uint64_t v58 = OUTLINED_FUNCTION_142_0(), (v59(v58) & 1) == 0)
        && (uint64_t v60 = OUTLINED_FUNCTION_142_0(), ((v61(v60) | v82) & 1) == 0))
      {
LABEL_42:
        uint64_t v54 = (void *)MEMORY[0x1E4FBC8C8];
        if (((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v9) + 0x50))() & 1) == 0
          && ConversationControlsManager.shouldPresentCollaborationHUD.getter())
        {
          *(void *)uint64_t v83 = 11;
          *(_OWORD *)(v83 + 8) = 0u;
          *(_OWORD *)(v83 + 24) = 0u;
          *(_WORD *)(v83 + 40) = 6;
          *(unsigned char *)(v83 + 42) = 0;
          *(void *)(v83 + 48) = 0;
          return;
        }
        a2 = v83;
        (*(void (**)(void))((*v54 & *v4) + 0x848))();
        OUTLINED_FUNCTION_168_0();
        *(unsigned char *)(v83 + 4ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = (*(uint64_t (**)(void))(v55 + 2152))() & 1;
        goto LABEL_46;
      }
      uint64_t v62 = OUTLINED_FUNCTION_124_0();
      uint64_t v64 = (void *)v63(v62);
      unsigned int v65 = objc_msgSend(v64, sel_isSystemProvider);

      uint64_t v66 = 9;
      if (v65) {
        uint64_t v66 = 7;
      }
      uint64_t v89 = v66;
      long long v90 = 0u;
      long long v91 = 0u;
      char v92 = 6;
      uint64_t v67 = OUTLINED_FUNCTION_142_0();
      if (v68(v67))
      {
        outlined destroy of ConversationControlsType((uint64_t)&v89);
        uint64_t v89 = 3;
        long long v90 = 0u;
        long long v91 = 0u;
        char v92 = 6;
      }
      swift_unknownObjectRetain_n();
      unint64_t v69 = Logger.logObject.getter();
      os_log_type_t v70 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v69, v70))
      {
        swift_slowAlloc();
        uint64_t v88 = OUTLINED_FUNCTION_273();
        *(_DWORD *)uint64_t v9 = 136315394;
        OUTLINED_FUNCTION_2();
        outlined init with copy of ConversationControlsType((uint64_t)&v89, (uint64_t)v87);
        specialized >> prefix<A>(_:)((uint64_t)v87);
        outlined destroy of SystemUpdateNotice?((uint64_t)v87, &demangling cache variable for type metadata for ConversationControlsType?);
        uint64_t v71 = OUTLINED_FUNCTION_41_0();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, v73);
        OUTLINED_FUNCTION_251();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v9 + 12) = 2080;
        uint64_t v74 = (void *)v85(ObjectType, a1);
        id v75 = objc_msgSend(v74, sel_identifier);

        uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v78 = v77;

        v87[0] = v76;
        v87[1] = v78;
        uint64_t v79 = String.init<A>(reflecting:)();
        v87[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v80, &v88);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v69, v70, "Requesting ControlsHUDUpdate with controlsType %s for provider.identifier: %s", (uint8_t *)v9, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      a2 = v83;
      OUTLINED_FUNCTION_2();
      outlined init with copy of ConversationControlsType((uint64_t)&v89, v83);
      outlined destroy of ConversationControlsType((uint64_t)&v89);
    }
LABEL_20:
    *(_WORD *)(a2 + 4ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 257;
    goto LABEL_47;
  }
  OUTLINED_FUNCTION_184(25);
  *(_WORD *)(a2 + 40) = 262;
  *(unsigned char *)(a2 + 42) = 1;
LABEL_47:
  *(void *)(a2 + 48) = 0;
}

uint64_t ConversationControlsManager.controlsHUDUpdateForActiveCall.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_0_20();
  (*(void (**)(void))(v2 + 624))();
  ConversationControlsManager.controlsHUDUpdate(for:)(v3, a1);
  return swift_unknownObjectRelease();
}

BOOL ConversationControlsManager.shouldPresentCollaborationHUD.getter()
{
  type metadata accessor for ForegroundCollaborationState(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_0_3();
  if ((*(uint64_t (**)(void))(v3 + 1072))())
  {
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_178();
    v4();
    OUTLINED_FUNCTION_176();
  }
  else
  {
    int v1 = 0;
  }
  OUTLINED_FUNCTION_94_1();
  (*(void (**)(void))(v5 + 2008))();
  if (swift_getEnumCaseMultiPayload())
  {
    _s15ConversationKit11ParticipantVWOhTm_4();
    return 0;
  }
  int v6 = *(unsigned __int8 *)(v0
                          + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool))
                                   + 48));
  _s15ConversationKit11ParticipantVWOhTm_4();
  return ((v6 | v1) & 1) == 0;
}

void ConversationControlsManager.handleDidChangeIsWaitingOnFirstRemoteFrame(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v0;
  os_log_type_t v6 = v5;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_62();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v8();
  char v9 = _dispatchPreconditionTest(_:)();
  uint64_t v10 = OUTLINED_FUNCTION_255();
  v11(v10);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v12 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v17 = OUTLINED_FUNCTION_8(v16);
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_5_1();
  if (!Notification.userInfo.getter())
  {
    long long v38 = 0u;
    long long v39 = 0u;
    goto LABEL_14;
  }
  AnyHashable.init<A>(_:)();
  specialized Dictionary.subscript.getter();
  swift_bridgeObjectRelease();
  outlined destroy of AnyHashable((uint64_t)v37);
  if (!*((void *)&v39 + 1))
  {
LABEL_14:
    outlined destroy of SystemUpdateNotice?((uint64_t)&v38, &demangling cache variable for type metadata for Any?);
    OUTLINED_FUNCTION_218();
    __swift_storeEnumTagSinglePayload(v34, v35, v36, v12);
    goto LABEL_15;
  }
  int v18 = swift_dynamicCast();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, v18 ^ 1u, 1, v12);
  OUTLINED_FUNCTION_33_0((uint64_t)v2, 1, v12);
  if (!v19)
  {
    OUTLINED_FUNCTION_63_0();
    v20();
    OUTLINED_FUNCTION_1_12();
    (*(void (**)(void))(v21 + 624))();
    uint64_t v23 = v22;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v25 = MEMORY[0x1F4188790](ObjectType);
    (*(void (**)(uint64_t, uint64_t))(v23 + 200))(v25, v23);
    swift_unknownObjectRelease();
    char v26 = static UUID.== infix(_:_:)();
    uint64_t v2 = *(void (**)(void))(v14 + 8);
    OUTLINED_FUNCTION_12_1();
    v2();
    if ((v26 & 1) == 0) {
      goto LABEL_19;
    }
    if (Notification.userInfo.getter())
    {
      AnyHashable.init<A>(_:)();
      specialized Dictionary.subscript.getter();
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)v37);
      if (*((void *)&v39 + 1))
      {
        if (swift_dynamicCast())
        {
          int v3 = LOBYTE(v37[0]);
          if (one-time initialization token for conversationControls == -1)
          {
LABEL_10:
            uint64_t v27 = type metadata accessor for Logger();
            uint64_t v28 = OUTLINED_FUNCTION_30(v27, (uint64_t)static Logger.conversationControls);
            os_log_type_t v29 = static os_log_type_t.default.getter();
            if (OUTLINED_FUNCTION_107(v29))
            {
              unsigned int v30 = (uint8_t *)OUTLINED_FUNCTION_327();
              *(_DWORD *)unsigned int v30 = 67109120;
              v37[0] = v3;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl(&dword_1C2F90000, v28, v6, "Handling didChangeIsWaitingOnFirstRemoteFrameNotification: isWaiting == %{BOOL}d", v30, 8u);
              OUTLINED_FUNCTION_3();
            }

            id v31 = (unsigned char *)(v4
                          + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isWaitingOnFirstRemoteFrame);
            OUTLINED_FUNCTION_11_0();
            *id v31 = v3;
            OUTLINED_FUNCTION_1_12();
            OUTLINED_FUNCTION_50_2();
            v32();
            OUTLINED_FUNCTION_1_12();
            (*(void (**)(void))(v33 + 2480))();
            OUTLINED_FUNCTION_173_0();
            goto LABEL_19;
          }
LABEL_21:
          swift_once();
          goto LABEL_10;
        }
LABEL_19:
        OUTLINED_FUNCTION_12_1();
        v2();
        goto LABEL_16;
      }
    }
    else
    {
      long long v38 = 0u;
      long long v39 = 0u;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)&v38, &demangling cache variable for type metadata for Any?);
    goto LABEL_19;
  }
LABEL_15:
  outlined destroy of SystemUpdateNotice?((uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_16:
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationControlsManager.handleIsScreeningChanged(_:)()
{
  int v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  os_log_type_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *os_log_type_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    char v8 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v9 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x978))(result);
    (*(void (**)(uint64_t))((*v8 & *v1) + 0x9B0))(v9);
    return ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t @objc ConversationControlsManager.handleDidChangeIsWaitingOnFirstRemoteFrame(_:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  type metadata accessor for Notification();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_194();
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = a1;
  a4(v4);

  uint64_t v9 = OUTLINED_FUNCTION_25_22();
  return v10(v9);
}

void closure #1 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_222();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v4 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v9();
  char v10 = _dispatchPreconditionTest(_:)();
  uint64_t v11 = OUTLINED_FUNCTION_25_22();
  v12(v11);
  if (v10)
  {
    OUTLINED_FUNCTION_2();
    uint64_t v13 = (void *)MEMORY[0x1C8776240](a3 + 16);
    if (v13)
    {
      uint64_t v14 = v13;
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v13) + 0x978))();
      uint64_t v15 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload(v3, 1, 1, v15);
      OUTLINED_FUNCTION_0_62();
      uint64_t v16 = OUTLINED_FUNCTION_356();
      v17(v16);
      outlined destroy of SystemUpdateNotice?(v3, &demangling cache variable for type metadata for Participant?);
      OUTLINED_FUNCTION_173_0();
      PassthroughSubject.send(_:)();
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v118 = type metadata accessor for SessionActivationRequestNotice(0);
  MEMORY[0x1F4188790](v118);
  uint64_t v6 = (uint64_t (**)())((char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t updated = (int *)type metadata accessor for AccountUpdateNotice(0);
  MEMORY[0x1F4188790](updated);
  uint64_t v9 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBE8], v13);
  char v17 = _dispatchPreconditionTest(_:)();
  char v19 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  int v18 = (void *)(v14 + 8);
  v19(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_32:
    swift_once();
    goto LABEL_12;
  }
  swift_beginAccess();
  id v20 = (void *)MEMORY[0x1C8776240](a3 + 2);
  if (!v20) {
    return;
  }
  a3 = v20;
  int v18 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v20) + 0x978))();
  uint64_t v13 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v13);
  (*(void (**)(char *))((*v18 & *a3) + 0x998))(v12);
  outlined destroy of SystemUpdateNotice?((uint64_t)v12, &demangling cache variable for type metadata for Participant?);
  uint64_t v21 = PassthroughSubject.send(_:)();
  uint64_t v22 = a1 + *(int *)(v13 + 28);
  if (*(void *)v22)
  {
    if ((*(unsigned char *)(v22 + 16) & 1) == 0)
    {
      uint64_t v23 = *(void *)(v22 + 8);
      uint64_t v24 = (*(uint64_t (**)(uint64_t))((*v18 & *a3) + 0x2C0))(v21);
      specialized Set.contains(_:)(v23, v24);
      char v26 = v25;
      swift_bridgeObjectRelease();
      if (v26)
      {
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v27 = type metadata accessor for Logger();
        __swift_project_value_buffer(v27, (uint64_t)static Logger.conversationControls);
        uint64_t v28 = Logger.logObject.getter();
        os_log_type_t v29 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v28, v29))
        {
          unsigned int v30 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unsigned int v30 = 0;
          _os_log_impl(&dword_1C2F90000, v28, v29, "visibleParticipantDidBecomeActive - already joined, no notice", v30, 2u);
          MEMORY[0x1C87760E0](v30, -1, -1);
        }

        id v31 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))((*v18 & *a3) + 0x2D0))(&v119);
        specialized Set._Variant.remove(_:)();
        v31(&v119, 0);
        goto LABEL_23;
      }
    }
  }
  long long v116 = v6;
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_32;
  }
LABEL_12:
  unsigned int v32 = v18;
  uint64_t v33 = type metadata accessor for Logger();
  __swift_project_value_buffer(v33, (uint64_t)static Logger.conversationControls);
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl(&dword_1C2F90000, v34, v35, "visibleParticipantDidBecomeActive - present joined notice", v36, 2u);
    MEMORY[0x1C87760E0](v36, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  unint64_t v37 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1C3769620;
  _s15ConversationKit11ParticipantVWOcTm_6(a1, v38 + v37);
  UUID.init()();
  Date.init()();
  char *v9 = 0;
  *((void *)v9 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v38;
  v9[updated[8]] = 3;
  long long v39 = &v9[updated[9]];
  *(void *)long long v39 = 0;
  *((void *)v39 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
  v9[updated[10]] = 1;
  uint64_t v40 = &v9[updated[11]];
  *(void *)uint64_t v40 = 0;
  *((void *)v40 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
  os_log_type_t v41 = &v9[updated[12]];
  *(void *)os_log_type_t v41 = 0;
  *((void *)v41 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
  uint64_t v42 = updated[13];
  long long v117 = xmmword_1C376E330;
  *(_OWORD *)&v9[v42] = xmmword_1C376E330;
  specialized ConversationControlsManager.post(notice:)((uint64_t)v9, (uint64_t)a3, (uint64_t)type metadata accessor for AccountUpdateNotice, (uint64_t)&protocol witness table for AccountUpdateNotice, (uint64_t)type metadata accessor for AccountUpdateNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v43, v44, v101, (uint64_t)v102, v103, v104, v105, v106, (uint64_t)v107, (uint64_t)v108, v109, (uint64_t)v110, (uint64_t)v111,
    (uint64_t)v112,
    (uint64_t)v113,
    v114);
  if (((*(uint64_t (**)(void))((*v32 & *a3) + 0x320))() & 1) == 0
    || (uint64_t v45 = (*(uint64_t (**)(void))((*v32 & *a3) + 0x8D8))()) == 0)
  {
    _s15ConversationKit11ParticipantVWOhTm_4();
LABEL_23:

    return;
  }
  id v46 = (id)v45;
  uint64_t v47 = *(uint64_t (**)(void))((*v32 & *a3) + 0x290);
  id v48 = (void *)v47();
  if (!v48) {
    goto LABEL_24;
  }
  uint64_t v49 = v48;
  id v50 = objc_msgSend(v48, sel_mergedActiveRemoteParticipants);

  id v115 = v46;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  id v46 = v115;
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  uint64_t v51 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v52 = specialized Set.count.getter(v51);
  swift_bridgeObjectRelease();
  if (v52 == 1)
  {
    unsigned __int8 v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      _os_log_impl(&dword_1C2F90000, v53, v54, "visibleParticipantDidBecomeActive - Posting activation request notice", v55, 2u);
      MEMORY[0x1C87760E0](v55, -1, -1);
    }

    uint64_t v56 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v113 = &v101;
    uint64_t v109 = *(void *)(v57 - 8);
    uint64_t v58 = *(void *)(v109 + 64);
    uint64_t v59 = MEMORY[0x1F4188790](v57 - 8);
    uint64_t v60 = (void *)((uint64_t (*)(uint64_t))v47)(v59);
    uint64_t v114 = v56;
    if (v60)
    {
      char v61 = v60;
      id v62 = objc_msgSend(v60, sel_UUID);

      static UUID._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v63 = type metadata accessor for UUID();
      uint64_t v64 = (char *)&v101 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v65 = 0;
    }
    else
    {
      uint64_t v63 = type metadata accessor for UUID();
      uint64_t v64 = (char *)&v101 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v65 = 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v64, v65, 1, v63);
    uint64_t v104 = (uint64_t)&v101 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v66 = type metadata accessor for UUID();
    uint64_t v112 = &v101;
    uint64_t v67 = *(void *)(v63 - 8);
    uint64_t v68 = *(void *)(v67 + 64);
    MEMORY[0x1F4188790](v66);
    uint64_t v69 = v63;
    id v70 = objc_msgSend(v115, sel_UUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v111 = &v101;
    MEMORY[0x1F4188790](v71);
    unint64_t v72 = (char *)&v101 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v73 = outlined init with copy of Participant?((uint64_t)v72, (uint64_t)v72, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v110 = &v101;
    MEMORY[0x1F4188790](v73);
    unint64_t v106 = (v68 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v74 = (char *)&v101 - v106;
    id v75 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
    uint64_t v108 = v74;
    v75(v74, v74, v69);
    unint64_t v76 = (*(unsigned __int8 *)(v109 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
    unint64_t v77 = (v58 + *(unsigned __int8 *)(v67 + 80) + v76) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    uint64_t v107 = (uint64_t *)v68;
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = v114;
    outlined init with take of ConversationControlsRecipe?((uint64_t)v72, v78 + v76, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v103 = v78;
    uint64_t v109 = v67;
    uint64_t v79 = *(void (**)(uint64_t, char *, uint64_t))(v67 + 32);
    uint64_t v80 = v69;
    uint64_t v102 = v79;
    v79(v78 + v77, v74, v69);
    uint64_t v81 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v120 = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivitySession);
    Swift::String v121 = &protocol witness table for TUConversationActivitySession;
    id v82 = v115;
    *(void *)&long long v119 = v115;
    uint64_t v83 = one-time initialization token for shared;
    swift_retain();
    uint64_t v105 = v81;
    swift_retain();
    id v115 = v82;
    if (v83 != -1) {
      swift_once();
    }
    uint64_t v84 = (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 968))();
    uint64_t v86 = v85;
    uint64_t v101 = (uint64_t)&v101;
    MEMORY[0x1F4188790](v84);
    uint64_t v87 = (char *)&v101 - v106;
    UUID.init()();
    uint64_t v88 = type metadata accessor for Date();
    uint64_t v107 = &v101;
    uint64_t v89 = *(void *)(v88 - 8);
    MEMORY[0x1F4188790](v88);
    long long v91 = (char *)&v101 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
    Date.init()();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v69);
    outlined destroy of SystemUpdateNotice?(v104, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v92 = (uint64_t)v116;
    uint64_t v93 = v103;
    *long long v116 = partial apply for closure #1 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
    *(void *)(v92 + 8) = v93;
    *(void *)(v92 + 16) = v86;
    Swift::String v94 = (int *)v118;
    v102(v92 + *(int *)(v118 + 24), v87, v80);
    (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v92 + v94[7], v91, v88);
    *(unsigned char *)(v92 + v94[8]) = 4;
    *(unsigned char *)(v92 + v94[9]) = 1;
    *(unsigned char *)(v92 + v94[10]) = 1;
    *(_OWORD *)(v92 + v94[11]) = v117;
    uint64_t v95 = (void (**)())(v92 + v94[12]);
    uint64_t v96 = v105;
    *uint64_t v95 = partial apply for closure #2 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
    v95[1] = (void (*)())v96;
    uint64_t v97 = (void *)(v92 + v94[13]);
    void *v97 = 0;
    v97[1] = 0;
    uint64_t v98 = (void *)(v92 + v94[14]);
    *uint64_t v98 = 0;
    v98[1] = 0;
    outlined init with take of Notice(&v119, v92 + v94[15]);
    swift_release();
    swift_release();
    specialized ConversationControlsManager.post(notice:)(v92, (uint64_t)a3, (uint64_t)type metadata accessor for SessionActivationRequestNotice, (uint64_t)&protocol witness table for SessionActivationRequestNotice, (uint64_t)type metadata accessor for SessionActivationRequestNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v99, v100, v101, (uint64_t)v102, v103, v104, v105, v106, (uint64_t)v107, (uint64_t)v108, v109, (uint64_t)v110, (uint64_t)v111,
      (uint64_t)v112,
      (uint64_t)v113,
      v114);

    _s15ConversationKit11ParticipantVWOhTm_4();
  }
  else
  {
LABEL_24:
  }
  _s15ConversationKit11ParticipantVWOhTm_4();
}

uint64_t closure #1 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  v87[4] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  if (!v6) {
    return v6;
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v83 = v71;
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = *MEMORY[0x1E4FBC8C8] & *(void *)v6;
  uint64_t v79 = *(uint64_t (**)(uint64_t))(v10 + 0x290);
  uint64_t v80 = v10 + 656;
  uint64_t v11 = (void *)v79(v9);
  uint64_t v84 = a3;
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = objc_msgSend(v11, sel_UUID);

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = type metadata accessor for UUID();
    uint64_t v15 = &v71[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v14 = type metadata accessor for UUID();
    uint64_t v15 = &v71[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v16 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v15, v16, 1, v14);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  id v82 = v71;
  int v18 = *(void **)(*(void *)(v17 - 8) + 64);
  char v19 = &v71[-(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v81 = (unsigned char *)MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t)&v19[*((int *)v81 + 12)];
  uint64_t v21 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
  outlined init with copy of Participant?((uint64_t)&v71[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of Participant?(a2, v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  type metadata accessor for UUID();
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v14);
  uint64_t v85 = (void *)v6;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v71[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v20, 1, v14) == 1)
    {
      char v23 = -1;
    }
    else
    {
      uint64_t v21 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
      char v23 = 0;
    }
  }
  else
  {
    MEMORY[0x1F4188790](EnumTagSinglePayload);
    outlined init with copy of Participant?((uint64_t)&v71[-(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t)&v71[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v24 = __swift_getEnumTagSinglePayload(v20, 1, v14);
    if (v24 == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v71[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v14 - 8) + 8))(&v71[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v14);
      uint64_t v21 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
      char v23 = 0;
    }
    else
    {
      unint64_t v77 = v71;
      uint64_t v25 = *(void *)(v14 - 8);
      MEMORY[0x1F4188790](v24);
      uint64_t v27 = &v71[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v25 + 32))(v27, v20, v14);
      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
      char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v78 = v18;
      uint64_t v28 = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
      v28(v27, v14);
      uint64_t v21 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v71[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v28(&v71[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v14);
      int v18 = v78;
    }
  }
  uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v19, v21);
  unsigned int v30 = *(void **)(v14 - 8);
  uint64_t v31 = v30[8];
  MEMORY[0x1F4188790](updated);
  unsigned int v32 = v84;
  uint64_t v83 = v30[2];
  uint64_t v33 = ((uint64_t (*)(unsigned char *, unsigned char *, uint64_t))v83)(&v71[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)], v84, v14);
  if (v23)
  {
    unint64_t v77 = v71;
    uint64_t v78 = v30;
    unint64_t v76 = v71;
    uint64_t v34 = MEMORY[0x1F4188790](v33);
    unint64_t v35 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v36 = &v71[-v35];
    unint64_t v37 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v85) + 0x8D8))(v34);
    if (v37)
    {
      uint64_t v38 = v37;
      id v39 = objc_msgSend(v37, sel_UUID);

      static UUID._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v40 = 1;
    }
    uint64_t v41 = __swift_storeEnumTagSinglePayload((uint64_t)&v71[-v35], v40, 1, v14);
    id v75 = v71;
    MEMORY[0x1F4188790](v41);
    uint64_t v42 = &v71[-v35];
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v83)(&v71[-v35], &v71[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)], v14);
    uint64_t v43 = __swift_storeEnumTagSinglePayload((uint64_t)&v71[-v35], 0, 1, v14);
    uint64_t v74 = v71;
    MEMORY[0x1F4188790](v43);
    uint64_t v44 = &v71[-(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v45 = (uint64_t)&v44[*((int *)v81 + 12)];
    outlined init with copy of Participant?((uint64_t)v36, (uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of Participant?((uint64_t)&v71[-v35], v45, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v46 = __swift_getEnumTagSinglePayload((uint64_t)v44, 1, v14);
    if (v46 == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v47 = (unsigned char *)v78[1];
      ((void (*)(unsigned char *, uint64_t))v47)(&v71[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)], v14);
      if (__swift_getEnumTagSinglePayload(v45, 1, v14) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_35:

        return 0;
      }
    }
    else
    {
      uint64_t v81 = v71;
      MEMORY[0x1F4188790](v46);
      id v48 = &v71[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
      outlined init with copy of Participant?((uint64_t)v44, (uint64_t)v48, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v49 = __swift_getEnumTagSinglePayload(v45, 1, v14);
      if (v49 != 1)
      {
        uint64_t v73 = v71;
        MEMORY[0x1F4188790](v49);
        ((void (*)(unsigned char *, uint64_t, uint64_t))v78[4])(&v71[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)], v45, v14);
        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
        int v72 = dispatch thunk of static Equatable.== infix(_:_:)();
        id v82 = v48;
        uint64_t v68 = (unsigned char *)v78[1];
        ((void (*)(unsigned char *, uint64_t))v68)(&v71[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)], v14);
        outlined destroy of SystemUpdateNotice?((uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of SystemUpdateNotice?((uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        ((void (*)(unsigned char *, uint64_t))v68)(&v71[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)], v14);
        uint64_t v69 = v82;
        id v82 = v68;
        ((void (*)(unsigned char *, uint64_t))v68)(v69, v14);
        outlined destroy of SystemUpdateNotice?((uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        unsigned int v32 = v84;
        if (v72) {
          goto LABEL_35;
        }
        goto LABEL_23;
      }
      outlined destroy of SystemUpdateNotice?((uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v47 = (unsigned char *)v78[1];
      ((void (*)(unsigned char *, uint64_t))v47)(&v71[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)], v14);
      ((void (*)(unsigned char *, uint64_t))v47)(v48, v14);
    }
    id v82 = v47;
    outlined destroy of SystemUpdateNotice?((uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    unsigned int v32 = v84;
  }
  else
  {
    id v82 = (unsigned char *)v30[1];
    ((void (*)(unsigned char *, uint64_t))v82)(&v71[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)], v14);
  }
LABEL_23:
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v50 = type metadata accessor for Logger();
  uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)static Logger.conversationControls);
  MEMORY[0x1F4188790](v51);
  uint64_t v52 = &v71[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v83)(v52, v32, v14);
  unsigned __int8 v53 = v85;
  os_log_type_t v54 = Logger.logObject.getter();
  int v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, (os_log_type_t)v55))
  {
    LODWORD(v78) = v55;
    uint64_t v83 = v54;
    uint64_t v84 = v71;
    uint64_t v56 = swift_slowAlloc();
    uint64_t v57 = (void *)swift_slowAlloc();
    uint64_t v81 = (unsigned char *)swift_slowAlloc();
    v87[0] = (uint64_t)v81;
    *(_DWORD *)uint64_t v56 = 136315650;
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
    uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v59, v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v60 = ((uint64_t (*)(unsigned char *, uint64_t))v82)(v52, v14);
    *(_WORD *)(v56 + 12) = 2112;
    uint64_t v61 = v79(v60);
    uint64_t v62 = v61;
    if (v61) {
      uint64_t v86 = v61;
    }
    else {
      uint64_t v86 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v57 = v62;

    *(_WORD *)(v56 + 22) = 2112;
    uint64_t v63 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v53) + 0x8D8))();
    uint64_t v64 = v63;
    os_log_type_t v65 = v78;
    if (v63) {
      uint64_t v86 = v63;
    }
    else {
      uint64_t v86 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v57[1] = v64;

    os_log_t v66 = v83;
    _os_log_impl(&dword_1C2F90000, v83, v65, "SessionActivationRequestNotice for stagedActivity %s is no longer valid on conversation %@ with stagedActivity %@", (uint8_t *)v56, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v57, -1, -1);
    uint64_t v6 = 1;
    uint64_t v67 = v81;
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v67, -1, -1);
    MEMORY[0x1C87760E0](v56, -1, -1);
  }
  else
  {

    ((void (*)(unsigned char *, uint64_t))v82)(&v71[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)], v14);
    return 1;
  }
  return v6;
}

void closure #2 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    ConversationControlsManager.presentCurrentActivity(completion:)(0, 0);
  }
}

void closure #4 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, void *a2)
{
  uint64_t updated = (int *)type metadata accessor for AccountUpdateNotice(0);
  MEMORY[0x1F4188790](updated);
  uint64_t v6 = (BOOL *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Participant(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBE8], v9);
  char v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_5;
  }
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x1C8776240](a2 + 2);
  if (!v14) {
    return;
  }
  a2 = (void *)v14;
  if ((ConversationControlsManager.isLocalMemberAssociatedTo(_:)(a1) & 1) == 0)
  {
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *a2) + 0x2B8))();
    char v19 = Participant.isActiveWithAV.getter();
    _s15ConversationKit11ParticipantVWOhTm_4();
    if (v19)
    {
      char v20 = Participant.isActiveWithAV.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      unint64_t v21 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1C3769620;
      _s15ConversationKit11ParticipantVWOcTm_6(a1, v22 + v21);
      UUID.init()();
      Date.init()();
      *uint64_t v6 = (v20 & 1) == 0;
      *((void *)v6 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v22;
      v6[updated[8]] = 3;
      char v23 = (char *)&v6[updated[9]];
      *(void *)char v23 = 0;
      *((void *)v23 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
      v6[updated[10]] = 1;
      uint64_t v24 = (char *)&v6[updated[11]];
      *(void *)uint64_t v24 = 0;
      *((void *)v24 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
      uint64_t v25 = (char *)&v6[updated[12]];
      *(void *)uint64_t v25 = 0;
      *((void *)v25 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
      *(_OWORD *)&v6[updated[13]] = xmmword_1C376E330;
      specialized ConversationControlsManager.post(notice:)((uint64_t)v6, (uint64_t)a2, (uint64_t)type metadata accessor for AccountUpdateNotice, (uint64_t)&protocol witness table for AccountUpdateNotice, (uint64_t)type metadata accessor for AccountUpdateNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v26, v27, v28[0], v28[1], v28[2], v28[3], v28[4], v28[5], v28[6], v28[7], v28[8], v28[9], v28[10],
        v28[11],
        v28[12],
        v28[13]);

      _s15ConversationKit11ParticipantVWOhTm_4();
      return;
    }
    goto LABEL_10;
  }
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_13;
  }
LABEL_5:
  uint64_t v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)static Logger.conversationControls);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    int v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v18 = 0;
    _os_log_impl(&dword_1C2F90000, v16, v17, "skipping participant av mode change notice for local primary", v18, 2u);
    MEMORY[0x1C87760E0](v18, -1, -1);
  }

LABEL_10:
}

uint64_t ConversationControlsManager.isLocalMemberAssociatedTo(_:)(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x290))();
  if (result)
  {
    uint64_t v4 = (void *)result;
    id v5 = objc_msgSend((id)result, sel_localMember);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void **)(a1 + *(int *)(type metadata accessor for Participant(0) + 28));
      if (!v7)
      {

        return 0;
      }
      id v8 = v7;
      id v9 = objc_msgSend(v6, sel_lightweightPrimary);
      if (v9)
      {
        uint64_t v10 = v9;
        unsigned int v11 = objc_msgSend(v9, sel_isEqualToHandle_, v8);

        if (v11)
        {

          return 1;
        }
      }
      id v12 = objc_msgSend(v6, sel_association);
      if (v12)
      {
        char v13 = v12;
        id v14 = objc_msgSend(v12, sel_handle);
        unsigned __int8 v15 = objc_msgSend(v14, sel_isEqualToHandle_, v8);

        return (v15 & 1) != 0;
      }
    }
    return 0;
  }
  return result;
}

void *closure #5 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t updated = (int *)type metadata accessor for AccountUpdateNotice(0);
  MEMORY[0x1F4188790](updated);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *id v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBE8], v11);
  char v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  swift_beginAccess();
  uint64_t result = (void *)MEMORY[0x1C8776240](a3 + 2);
  if (!result) {
    return result;
  }
  a3 = result;
  os_log_type_t v17 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *result) + 0x978))();
  uint64_t v11 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  (*(void (**)(char *))((*v17 & *a3) + 0x998))(v10);
  outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
  PassthroughSubject.send(_:)();
  id v18 = objc_retain(*(id *)((char *)a3
                          + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController));
  ConversationController.lookupActiveConversation()();

  if (!v35)
  {

    return (void *)outlined destroy of SystemUpdateNotice?((uint64_t)&v33, &demangling cache variable for type metadata for Conversation?);
  }
  outlined init with take of Notice(&v33, (uint64_t)v37);
  uint64_t v19 = v38;
  uint64_t v20 = v39;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 56))(v19, v20) == 3)
  {
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_6:
      uint64_t v21 = type metadata accessor for Logger();
      __swift_project_value_buffer(v21, (uint64_t)static Logger.conversationControls);
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_1C2F90000, v22, v23, "visibleParticipantDidBecomeInactive - present leave notice", v24, 2u);
        MEMORY[0x1C87760E0](v24, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      unint64_t v25 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1C3769620;
      _s15ConversationKit11ParticipantVWOcTm_6(a1, v26 + v25);
      UUID.init()();
      Date.init()();
      *uint64_t v7 = 1;
      *((void *)v7 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v26;
      v7[updated[8]] = 3;
      uint64_t v27 = &v7[updated[9]];
      *(void *)uint64_t v27 = 0;
      *((void *)v27 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
      v7[updated[10]] = 1;
      uint64_t v28 = &v7[updated[11]];
      *(void *)uint64_t v28 = 0;
      *((void *)v28 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
      os_log_type_t v29 = &v7[updated[12]];
      *(void *)os_log_type_t v29 = 0;
      *((void *)v29 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
      *(_OWORD *)&v7[updated[13]] = xmmword_1C376E330;
      specialized ConversationControlsManager.post(notice:)((uint64_t)v7, (uint64_t)a3, (uint64_t)type metadata accessor for AccountUpdateNotice, (uint64_t)&protocol witness table for AccountUpdateNotice, (uint64_t)type metadata accessor for AccountUpdateNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v30, v31, v32, v33, *((uint64_t *)&v33 + 1), v34, v35, v36, v37[0], v37[1], v37[2], v38, v39,
        v40,
        v41,
        v42);

      _s15ConversationKit11ParticipantVWOhTm_4();
      return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    }
LABEL_14:
    swift_once();
    goto LABEL_6;
  }

  return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

void *closure #6 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (uint64_t *)((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *id v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBE8], v11);
  char v15 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    swift_beginAccess();
    uint64_t result = (void *)MEMORY[0x1C8776240](a3 + 16);
    if (result)
    {
      os_log_type_t v17 = result;
      id v18 = (void *)MEMORY[0x1E4FBC8C8];
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *result) + 0x978))();
      PassthroughSubject.send(_:)();
      _s15ConversationKit11ParticipantVWOcTm_6(a1, (uint64_t)v10);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v19 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v19);
        (*(void (**)(char *))((*v18 & *v17) + 0x998))(v7);

        outlined destroy of SystemUpdateNotice?((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
        uint64_t v20 = type metadata accessor for Date();
        return (void *)(*(uint64_t (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v10, v20);
      }
      else
      {
        _s15ConversationKit11ParticipantVWOcTm_6(a1, (uint64_t)v7);
        uint64_t v21 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v21);
        (*(void (**)(char *))((*v18 & *v17) + 0x998))(v7);

        outlined destroy of SystemUpdateNotice?((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
        return (void *)_s15ConversationKit11ParticipantVWOhTm_4();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *closure #7 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBE8], v7);
  char v11 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    swift_beginAccess();
    uint64_t result = (void *)MEMORY[0x1C8776240](a3 + 16);
    if (result)
    {
      uint64_t v13 = result;
      id v14 = (void *)MEMORY[0x1E4FBC8C8];
      uint64_t v15 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *result) + 0x978))();
      (*(void (**)(uint64_t))((*v14 & *v13) + 0x9B0))(v15);
      uint64_t v16 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v16);
      (*(void (**)(char *))((*v14 & *v13) + 0x998))(v6);

      return (void *)outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *closure #8 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBE8], v7);
  char v11 = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    swift_beginAccess();
    uint64_t result = (void *)MEMORY[0x1C8776240](a3 + 16);
    if (result)
    {
      uint64_t v13 = result;
      id v14 = (void *)MEMORY[0x1E4FBC8C8];
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *result) + 0x978))();
      uint64_t v15 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v15);
      (*(void (**)(char *))((*v14 & *v13) + 0x998))(v6);

      return (void *)outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #9 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    swift_beginAccess();
    uint64_t v8 = (void *)MEMORY[0x1C8776240](a2 + 16);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = (void *)MEMORY[0x1E4FBC8C8];
      uint64_t v11 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v8) + 0x978))();
      (*(void (**)(uint64_t))((*v10 & *v9) + 0x9B0))(v11);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #10 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    swift_beginAccess();
    uint64_t v10 = MEMORY[0x1C8776240](a3 + 16);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      if ((a2 & 1) == 0) {
        ConversationController.localVideoSupported.getter();
      }
      ConversationControlsManager.localVideoButtonState.getter();
      ConversationControlsManager.localVideoButtonState.setter();
      if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v11) + 0x448))())
      {
        uint64_t v13 = v12;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void, uint64_t, uint64_t))(v13 + 64))(a2 & 1, ObjectType, v13);

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #11 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    swift_beginAccess();
    uint64_t v8 = (void *)MEMORY[0x1C8776240](a2 + 16);
    if (v8)
    {
      char v9 = v8;
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v8) + 0x9B0))();
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #12 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v110 = a2;
  uint64_t v111 = a3;
  uint64_t v112 = a1;
  uint64_t v105 = type metadata accessor for ReactionNotice(0);
  MEMORY[0x1F4188790](v105);
  unint64_t v106 = (uint64_t *)((char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantReaction?);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v102 = (uint64_t)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v107 = (uint64_t)&v97 - v9;
  uint64_t v109 = type metadata accessor for ParticipantReaction(0);
  uint64_t v104 = *(void *)(v109 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v109);
  uint64_t v103 = (uint64_t)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v108 = (uint64_t)&v97 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Participant(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v97 - v20;
  uint64_t v22 = type metadata accessor for DispatchPredicate();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  unint64_t v25 = (uint64_t *)((char *)&v97 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *unint64_t v25 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E4FBCBE8], v22);
  char v26 = _dispatchPreconditionTest(_:)();
  uint64_t v28 = *(void (**)(uint64_t *, uint64_t))(v23 + 8);
  uint64_t v27 = v23 + 8;
  v28(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
LABEL_34:
    swift_once();
    goto LABEL_6;
  }
  swift_beginAccess();
  os_log_type_t v29 = (char *)MEMORY[0x1C8776240](a4 + 16);
  if (!v29) {
    return;
  }
  a4 = v29;
  if (!*(void *)(v112 + *(int *)(v16 + 28)))
  {
LABEL_26:

    return;
  }
  uint64_t v30 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v29) + 0x430))();
  if (!v30)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    __swift_project_value_buffer(v52, (uint64_t)static Logger.conversationControls);
    unsigned __int8 v53 = a4;
    os_log_type_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 138412290;
      v118[0] = v53;
      uint64_t v58 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v57 = a4;

      _os_log_impl(&dword_1C2F90000, v54, v55, "conversationControllerManager: %@ inCallConversationControlsDelegate not set. Ignoring participantDidReact callback", v56, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v57, -1, -1);
      MEMORY[0x1C87760E0](v56, -1, -1);

LABEL_17:
      return;
    }

    return;
  }
  uint64_t v27 = v30;
  uint64_t v32 = v31;
  uint64_t ObjectType = swift_getObjectType();
  int v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 48))(ObjectType, v32);
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_34;
  }
LABEL_6:
  uint64_t v34 = type metadata accessor for Logger();
  uint64_t v35 = __swift_project_value_buffer(v34, (uint64_t)static Logger.conversationControls);
  _s15ConversationKit11ParticipantVWOcTm_6(v112, (uint64_t)v21);
  uint64_t v36 = v111;
  swift_bridgeObjectRetain_n();
  unint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  int v100 = v38;
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    os_log_t v97 = v37;
    uint64_t v40 = v39;
    uint64_t v98 = swift_slowAlloc();
    v117[0] = v98;
    *(_DWORD *)uint64_t v40 = 136315650;
    _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v21, (uint64_t)v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v16);
    uint64_t v41 = specialized >> prefix<A>(_:)();
    uint64_t v99 = v35;
    uint64_t v42 = v41;
    unint64_t v44 = v43;
    outlined destroy of SystemUpdateNotice?((uint64_t)v15, &demangling cache variable for type metadata for Participant?);
    v118[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v44, v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOhTm_4();
    *(_WORD *)(v40 + 12) = 2080;
    LOBYTE(v118[0]) = v101 & 1;
    uint64_t v45 = String.init<A>(reflecting:)();
    v118[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 22) = 2080;
    uint64_t v47 = v110;
    v118[0] = v110;
    v118[1] = v111;
    swift_bridgeObjectRetain();
    uint64_t v48 = String.init<A>(reflecting:)();
    v118[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, v117);
    uint64_t v36 = v111;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v50 = v97;
    _os_log_impl(&dword_1C2F90000, v97, (os_log_type_t)v100, "reactingParticipant: %s isScreenSharingVisible:%s reaction:%s", (uint8_t *)v40, 0x20u);
    uint64_t v51 = v98;
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v51, -1, -1);
    MEMORY[0x1C87760E0](v40, -1, -1);
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_4();

    swift_bridgeObjectRelease_n();
    uint64_t v47 = v110;
  }
  int v59 = v101;
  Participant.videoInfo.getter();
  outlined init with take of ConversationControlsRecipe?((uint64_t)v117, (uint64_t)v118, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v118[0])
  {
    int v60 = v119;
    outlined release of LinearGradient((uint64_t)v117);
    if (v60 & v59)
    {
      os_log_type_t v54 = Logger.logObject.getter();
      os_log_type_t v61 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v54, v61))
      {
        uint64_t v62 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v62 = 0;
        _os_log_impl(&dword_1C2F90000, v54, v61, "Ignoring reaction from participant whose camera is mixed with screen", v62, 2u);
        MEMORY[0x1C87760E0](v62, -1, -1);

        swift_unknownObjectRelease();
        goto LABEL_17;
      }

      swift_unknownObjectRelease();
      goto LABEL_26;
    }
  }
  _s15ConversationKit11ParticipantVWOcTm_6(v112, (uint64_t)v19);
  swift_bridgeObjectRetain();
  uint64_t v63 = v107;
  ParticipantReaction.init(participant:reaction:)(v47, v36, v107);
  if (__swift_getEnumTagSinglePayload(v63, 1, v109) == 1)
  {
    swift_unknownObjectRelease();

    outlined destroy of SystemUpdateNotice?(v63, &demangling cache variable for type metadata for ParticipantReaction?);
  }
  else
  {
    uint64_t v112 = v27;
    uint64_t v64 = v63;
    uint64_t v65 = v108;
    outlined init with take of Collaboration(v64, v108);
    uint64_t v66 = v103;
    _s15ConversationKit11ParticipantVWOcTm_6(v65, v103);
    uint64_t v67 = a4;
    uint64_t v68 = Logger.logObject.getter();
    os_log_type_t v69 = static os_log_type_t.default.getter();
    id v70 = (void *)&full type metadata for Lock;
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v111 = swift_slowAlloc();
      v116[0] = v111;
      *(_DWORD *)uint64_t v71 = 136315394;
      uint64_t v72 = v102;
      _s15ConversationKit11ParticipantVWOcTm_6(v66, v102);
      __swift_storeEnumTagSinglePayload(v72, 0, 1, v109);
      uint64_t v73 = specialized >> prefix<A>(_:)();
      unint64_t v75 = v74;
      outlined destroy of SystemUpdateNotice?(v72, &demangling cache variable for type metadata for ParticipantReaction?);
      v113[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v75, v116);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v70 = &full type metadata for Lock;
      swift_bridgeObjectRelease();
      _s15ConversationKit11ParticipantVWOhTm_4();
      *(_WORD *)(v71 + 12) = 2080;
      uint64_t v76 = swift_beginAccess();
      specialized NoticeQueueStore.peek()(v113, v76);
      swift_endAccess();
      uint64_t v77 = v114;
      if (v114)
      {
        uint64_t v78 = v115;
        __swift_project_boxed_opaque_existential_1(v113, v114);
        uint64_t v79 = *(uint64_t (**)(uint64_t, uint64_t))(v78 + 120);
        uint64_t v80 = v78;
        id v70 = (void *)&full type metadata for Lock;
        uint64_t v81 = v79(v77, v80);
        uint64_t v83 = v82;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
        v113[0] = v81;
        v113[1] = v83;
        uint64_t v84 = String.init<A>(reflecting:)();
        unint64_t v86 = v85;
      }
      else
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v113, &demangling cache variable for type metadata for Notice?);
        unint64_t v86 = 0xE300000000000000;
        uint64_t v84 = 7104878;
      }
      v113[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v86, v116);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v68, v69, "participantDidReact - reaction: %s reactionNoticeHistory:%s", (uint8_t *)v71, 0x16u);
      uint64_t v87 = v111;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v87, -1, -1);
      MEMORY[0x1C87760E0](v71, -1, -1);
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_4();
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantReaction>);
    unint64_t v88 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
    uint64_t v89 = swift_allocObject();
    *(_OWORD *)(v89 + 16) = xmmword_1C3769620;
    _s15ConversationKit11ParticipantVWOcTm_6(v108, v89 + v88);
    long long v91 = (int *)v105;
    uint64_t v90 = v106;
    UUID.init()();
    Date.init()();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    double v92 = (*(double (**)(void))(*(void *)static Defaults.shared + 1056))();
    *uint64_t v90 = v89;
    *((unsigned char *)v90 + v91[7]) = 1;
    uint64_t v93 = (uint64_t *)((char *)v90 + v91[8]);
    *uint64_t v93 = 0;
    v93[1] = 0;
    *((unsigned char *)v90 + v91[9]) = 1;
    Swift::String v94 = (uint64_t *)((char *)v90 + v91[10]);
    *Swift::String v94 = 0;
    v94[1] = 0;
    uint64_t v95 = (uint64_t *)((char *)v90 + v91[11]);
    *uint64_t v95 = 0;
    v95[1] = 0;
    *(double *)((char *)v90 + v91[12]) = v92;
    *(_OWORD *)((char *)v90 + v91[13]) = xmmword_1C376E330;
    uint64_t v96 = (uint64_t *)&v67[v70[338]];
    swift_beginAccess();
    specialized CoalescingNoticeQueue.push(notice:)((uint64_t)v90, v96);
    swift_endAccess();
    ConversationControlsManager.updateReactionNotice()();

    swift_unknownObjectRelease();
    _s15ConversationKit11ParticipantVWOhTm_4();
    _s15ConversationKit11ParticipantVWOhTm_4();
  }
}

void *closure #1 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(unint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  swift_beginAccess();
  uint64_t result = (void *)MEMORY[0x1C8776240](a2 + 2);
  if (!result) {
    return result;
  }
  a2 = result;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *result) + 0x8C8))(v51);
  if (!a1) {
    goto LABEL_25;
  }
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_6;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_24;
  }
LABEL_6:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0) {
    id v12 = (id)MEMORY[0x1C87744F0](0, a1);
  }
  else {
    id v12 = *(id *)(a1 + 32);
  }
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  outlined init with copy of Participant?((uint64_t)v51, (uint64_t)&v45, &demangling cache variable for type metadata for Activity?);
  if (v46)
  {
    outlined init with take of Notice(&v45, (uint64_t)v48);
    uint64_t v14 = TUConversationActivitySession.uniqueIdentifier.getter();
    uint64_t v16 = v15;
    uint64_t v17 = v49;
    uint64_t v18 = v50;
    __swift_project_boxed_opaque_existential_1(v48, v49);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 104))(v17, v18);
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      uint64_t v21 = TUConversationActivitySession.uniqueIdentifier.getter();
      uint64_t v23 = v22;

      if (v14 == v21 && v16 == v23)
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_21;
      }
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25)
      {
LABEL_19:

LABEL_21:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
        goto LABEL_25;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*(void (**)(void))((*v2 & *a2) + 0x8B8))(0);
    goto LABEL_19;
  }

  outlined destroy of SystemUpdateNotice?((uint64_t)&v45, &demangling cache variable for type metadata for Activity?);
LABEL_25:
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  __swift_project_value_buffer(v26, (uint64_t)static Logger.conversationControls);
  outlined init with copy of Participant?((uint64_t)v51, (uint64_t)v48, &demangling cache variable for type metadata for Activity?);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v47 = v30;
    *(_DWORD *)os_log_type_t v29 = 136315138;
    outlined init with copy of Participant?((uint64_t)v48, (uint64_t)&v45, &demangling cache variable for type metadata for Activity?);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity?);
    uint64_t v31 = String.init<A>(describing:)();
    *(void *)&long long v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, &v47);
    uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SystemUpdateNotice?((uint64_t)v48, &demangling cache variable for type metadata for Activity?);
    _os_log_impl(&dword_1C2F90000, v27, v28, "activitiesDidChange for activity:%s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v30, -1, -1);
    MEMORY[0x1C87760E0](v29, -1, -1);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v48, &demangling cache variable for type metadata for Activity?);
  }

  outlined init with copy of Participant?((uint64_t)v51, (uint64_t)v48, &demangling cache variable for type metadata for Activity?);
  if (v49)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivitySession);
    uint64_t updated = swift_dynamicCast();
    if (updated)
    {
      uint64_t v34 = (void *)v45;
      uint64_t v35 = (*(uint64_t (**)(void))((*v2 & *a2) + 0x8B0))();
      swift_release();
      if (!v35) {
        (*(void (**)(id))((*v2 & *a2) + 0x920))(objc_msgSend(v34, sel_applicationState));
      }
    }
  }
  else
  {
    uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v48, &demangling cache variable for type metadata for Activity?);
  }
  (*(void (**)(uint64_t))((*v2 & *a2) + 0x978))(updated);
  (*(void (**)(void *))((*v2 & *a2) + 0x9B8))(v51);
  uint64_t v36 = ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
  unint64_t v37 = (void *)(*(uint64_t (**)(uint64_t))((*v2 & *a2) + 0x290))(v36);
  if (v37)
  {
    os_log_type_t v38 = v37;
    id v39 = objc_msgSend(v37, sel_stagedActivitySession);

    if (v39)
    {
      id v40 = objc_msgSend(v39, sel_activity);
      unsigned int v41 = objc_msgSend(v40, sel_isPlaceholderActivity);

      if (v41)
      {
        uint64_t v42 = Logger.logObject.getter();
        os_log_type_t v43 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, v43))
        {
          unint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v44 = 0;
          _os_log_impl(&dword_1C2F90000, v42, v43, "Force presenting HUD because we received a placeholder activity", v44, 2u);
          MEMORY[0x1C87760E0](v44, -1, -1);
        }

        ConversationControlsManager.showHUD()();
      }
    }
  }

  return (void *)outlined destroy of SystemUpdateNotice?((uint64_t)v51, &demangling cache variable for type metadata for Activity?);
}

void closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v72 = a3;
  uint64_t v73 = a2;
  id v77 = a1;
  unint64_t v74 = (int *)type metadata accessor for SessionActionNotice(0);
  MEMORY[0x1F4188790](v74);
  unint64_t v75 = (_OWORD *)((char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Collaboration(0);
  uint64_t v76 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v76 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v67 - v13);
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (uint64_t *)((char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v18 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4FBCBE8], v15);
  char v19 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  swift_beginAccess();
  uint64_t v20 = (char *)MEMORY[0x1C8776240](a4 + 16);
  if (!v20) {
    return;
  }
  a4 = v20;
  uint64_t v21 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v20) + 0x290))();
  if (!v21)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
    goto LABEL_12;
  }
  uint64_t v22 = (void *)v21;
  uint64_t v23 = specialized Conversation.activities.getter();
  Array<A>.currentCollaboration.getter(v23, (uint64_t)v8);

  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
LABEL_12:

    outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Collaboration?);
    return;
  }
  outlined init with take of Collaboration((uint64_t)v8, (uint64_t)v14);
  uint64_t v25 = *v14;
  uint64_t v24 = v14[1];
  swift_bridgeObjectRetain();
  id v26 = objc_msgSend(v77, sel_collaboration);
  id v27 = objc_msgSend(v26, sel_collaborationIdentifier);

  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  if (v25 == v28 && v24 == v30)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0) {
      goto LABEL_18;
    }
  }
  if (objc_msgSend(v77, sel_sessionEventType) == (id)15)
  {
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_16:
      uint64_t v33 = type metadata accessor for Logger();
      __swift_project_value_buffer(v33, (uint64_t)static Logger.conversationControls);
      id v34 = v77;
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.default.getter();
      int v37 = v36;
      BOOL v38 = os_log_type_enabled(v35, v36);
      id v77 = v34;
      if (v38)
      {
        HIDWORD(v7ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v37;
        id v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        v79[0] = v70;
        uint64_t v68 = v39;
        os_log_t v69 = v35;
        *(_DWORD *)id v39 = 136315138;
        uint64_t v67 = v39 + 4;
        id v40 = v34;
        id v41 = objc_msgSend(v40, sel_description);
        uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v44 = v43;

        uint64_t v78 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v44, v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        uint64_t v46 = v68;
        os_log_t v45 = v69;
        _os_log_impl(&dword_1C2F90000, v69, BYTE4(v71), "Showing HUD for collaboration added noticed posted:%s", v68, 0xCu);
        uint64_t v47 = v70;
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v47, -1, -1);
        MEMORY[0x1C87760E0](v46, -1, -1);
      }
      else
      {
      }
      uint64_t v48 = swift_allocObject();
      swift_unknownObjectWeakInit();
      _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v14, (uint64_t)v12);
      unint64_t v49 = (*(unsigned __int8 *)(v76 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = v48;
      outlined init with take of Collaboration((uint64_t)v12, v50 + v49);
      if (specialized ConversationControlsManager.shouldShowCollaborationNotice(for:)((uint64_t)v14, a4))
      {
        uint64_t v52 = v74;
        uint64_t v51 = v75;
        uint64_t v53 = (uint64_t)v75 + v74[5];
        uint64_t v54 = v73;
        _s15ConversationKit11ParticipantVWOcTm_6(v73, v53);
        uint64_t v55 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload(v53, 0, 1, v55);
        outlined init with copy of IDSLookupManager(v72, (uint64_t)v51 + v52[6]);
        uint64_t v56 = (uint64_t *)((char *)v51 + v52[7]);
        v56[3] = v9;
        v56[4] = (uint64_t)&protocol witness table for Collaboration;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v56);
        _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v14, (uint64_t)boxed_opaque_existential_1);
        LOBYTE(v54) = *(void *)(v54 + *(int *)(v55 + 28)) == 0;
        id v58 = objc_msgSend(v77, sel_UUID);
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v60 = v14[4];
        uint64_t v59 = v14[5];
        swift_bridgeObjectRetain();
        swift_retain();
        Date.init()();
        *uint64_t v51 = xmmword_1C3779710;
        v51[1] = xmmword_1C376BCD0;
        *((unsigned char *)v51 + v52[8]) = v54;
        os_log_type_t v61 = (char *)v51 + v52[9];
        *(void *)os_log_type_t v61 = 0;
        v61[8] = 1;
        uint64_t v62 = (void *)((char *)v51 + v52[12]);
        *uint64_t v62 = v60;
        v62[1] = v59;
        *((unsigned char *)v51 + v52[13]) = 1;
        uint64_t v63 = (void (**)())((char *)v51 + v52[14]);
        *uint64_t v63 = partial apply for closure #1 in closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers();
        v63[1] = (void (*)())v50;
        uint64_t v64 = (void *)((char *)v51 + v52[15]);
        *uint64_t v64 = 0;
        v64[1] = 0;
        specialized ConversationControlsManager.post(notice:)((uint64_t)v51, (uint64_t)a4, (uint64_t)type metadata accessor for SessionActionNotice, (uint64_t)&protocol witness table for SessionActionNotice, (uint64_t)type metadata accessor for SessionActionNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v65, v66, (uint64_t)v67, (uint64_t)v68, (uint64_t)v69, v70, v71, v72, v73, (uint64_t)v74, (uint64_t)v75, v76, (uint64_t)v77,
          v78,
          v79[0],
          v79[1]);

        swift_release();
        _s15ConversationKit11ParticipantVWOhTm_4();
        _s15ConversationKit11ParticipantVWOhTm_4();
        return;
      }
      _s15ConversationKit11ParticipantVWOhTm_4();
      swift_release();
      goto LABEL_23;
    }
LABEL_26:
    swift_once();
    goto LABEL_16;
  }
LABEL_18:
  _s15ConversationKit11ParticipantVWOhTm_4();
LABEL_23:
}

void closure #1 in closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    ConversationControlsManager.presentCollaboration(_:completion:)(a2, 0, 0);
  }
}

void closure #3 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)((char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, unint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBE8], v10);
  char v14 = _dispatchPreconditionTest(_:)();
  uint64_t v16 = *(void (**)(uint64_t *, unint64_t))(v11 + 8);
  uint64_t v15 = v11 + 8;
  v16(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_10;
  }
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x1C8776240](a4 + 2);
  if (!v17) {
    return;
  }
  a4 = (void *)v17;
  if (a3 == 1) {
    uint64_t v15 = 0x75614C736465656ELL;
  }
  else {
    uint64_t v15 = 0x756F72676B636162;
  }
  if (a3 == 1) {
    unint64_t v10 = 0xEB0000000068636ELL;
  }
  else {
    unint64_t v10 = 0xEA0000000000646ELL;
  }
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_20;
  }
LABEL_10:
  uint64_t v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)static Logger.conversationControls);
  outlined init with copy of IDSLookupManager(a2, (uint64_t)&v41);
  swift_bridgeObjectRetain();
  char v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v38 = a3;
    uint64_t v23 = v22;
    uint64_t v40 = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v37 = v15;
    outlined init with copy of IDSLookupManager((uint64_t)&v41, (uint64_t)v39);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    uint64_t v24 = String.init<A>(describing:)();
    v39[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain();
    v39[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v10, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C2F90000, v19, v20, "appLaunchStateChanged for activity:%s with state:%s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    uint64_t v26 = v23;
    a3 = v38;
    MEMORY[0x1C87760E0](v26, -1, -1);
    MEMORY[0x1C87760E0](v21, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);

    swift_bridgeObjectRelease_n();
  }
  id v27 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a4) + 0x920))(a3);
  uint64_t v28 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v28);
  (*(void (**)(char *))((*v27 & *a4) + 0x998))(v9);
  uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
  uint64_t v30 = (*(uint64_t (**)(uint64_t))((*v27 & *a4) + 0x400))(updated);
  if (v30)
  {
    uint64_t v32 = v31;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v43 = 0;
    long long v41 = 0u;
    long long v42 = 0u;
    char v44 = 6;
    (*(void (**)(long long *, void, uint64_t, uint64_t))(v32 + 16))(&v41, 0, ObjectType, v32);
    swift_unknownObjectRelease();
    uint64_t v30 = outlined destroy of ConversationControlsType((uint64_t)&v41);
  }
  if ((*(uint64_t (**)(uint64_t))((*v27 & *a4) + 0x430))(v30))
  {
    uint64_t v35 = v34;
    uint64_t v36 = swift_getObjectType();
    uint64_t v43 = 0;
    long long v41 = 0u;
    long long v42 = 0u;
    char v44 = 6;
    (*(void (**)(long long *, uint64_t, void, uint64_t, uint64_t))(v35 + 80))(&v41, 1, 0, v36, v35);
    swift_unknownObjectRelease();

    outlined destroy of ConversationControlsType((uint64_t)&v41);
  }
  else
  {
  }
}

void closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(void))type metadata accessor for DispatchPredicate();
  uint64_t v10 = *((void *)v9 - 1);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t (*)(void)))(v10 + 104))(v12, *MEMORY[0x1E4FBCBE8], v9);
  char v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t (*)(void)))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  uint64_t v14 = a2 + 16;
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x1C8776240](v14);
  if (!v15) {
    return;
  }
  uint64_t v2 = v15;
  if (!objc_msgSend(*(id *)(v15 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags), sel_requestToScreenShareEnabled))
  {
    uint64_t v22 = v2;
    goto LABEL_60;
  }
  if (a1)
  {
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = specialized Set.count.getter(v16);
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v114 = (uint64_t (*)(void))MEMORY[0x1E4FBC860];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v17 & ~(v17 >> 63), 0);
      uint64_t v3 = (void *)(a1 & 0xC000000000000001);
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v19 = __CocoaSet.startIndex.getter();
        unsigned __int8 v21 = 1;
      }
      else
      {
        uint64_t v19 = specialized _NativeSet.startIndex.getter(a1);
        unsigned __int8 v21 = v23 & 1;
      }
      uint64_t v105 = v2;
      unint64_t v106 = v8;
      uint64_t v111 = v19;
      uint64_t v112 = v20;
      unsigned __int8 v113 = v21;
      if ((v18 & 0x8000000000000000) == 0)
      {
        uint64_t v24 = a1 & 0xFFFFFFFFFFFFFF8;
        if (a1 < 0) {
          uint64_t v24 = a1;
        }
        uint64_t v108 = v24;
        uint64_t v25 = type metadata accessor for UUID();
        uint64_t v26 = v25;
        id v27 = *(void **)(v25 - 8);
        uint64_t v110 = v27[8];
        uint64_t v109 = (uint64_t (*)(void))(v27 + 4);
        uint64_t v107 = v27;
        while (1)
        {
          MEMORY[0x1F4188790](v25);
          uint64_t v29 = (char *)&v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
          specialized Set.subscript.getter(v111, v112, v113, a1);
          uint64_t v31 = v30;
          id v32 = objc_msgSend(v30, sel_UUID);
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v33 = v114;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v33 + 2) + 1, 1);
            uint64_t v33 = v114;
          }
          unint64_t v35 = *((void *)v33 + 2);
          unint64_t v34 = *((void *)v33 + 3);
          if (v35 >= v34 >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
            uint64_t v33 = v114;
          }
          *((void *)v33 + 2) = v35 + 1;
          ((void (*)(unint64_t, char *, uint64_t))v27[4])((unint64_t)v33+ ((*((unsigned __int8 *)v27 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v27 + 80))+ v27[9] * v35, v29, v26);
          uint64_t v114 = v33;
          if (v3)
          {
            if ((v113 & 1) == 0)
            {
              __break(1u);
              return;
            }
            if (__CocoaSet.Index.handleBitPattern.getter()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUScreenSharingRequest>.Index);
            char v44 = (uint64_t (*)(uint64_t *, void))Set.Index._asCocoa.modify();
            __CocoaSet.formIndex(after:isUnique:)();
            uint64_t v25 = v44(&v115, 0);
          }
          else
          {
            uint64_t v36 = v111;
            uint64_t v37 = v112;
            char v38 = v113;
            uint64_t v39 = specialized _NativeSet.index(after:)(v111, v112, v113, a1);
            uint64_t v41 = v40;
            char v43 = v42;
            uint64_t v25 = outlined consume of Set<TUHandle>.Index._Variant(v36, v37, v38);
            uint64_t v111 = v39;
            uint64_t v112 = v41;
            uint64_t v3 = 0;
            id v27 = v107;
            unsigned __int8 v113 = v43 & 1;
          }
          if (!--v18)
          {
            outlined consume of Set<TUHandle>.Index._Variant(v111, v112, v113);
            swift_bridgeObjectRelease();
            uint64_t v9 = v114;
            uint64_t v2 = v105;
            uint64_t v8 = v106;
            goto LABEL_28;
          }
        }
      }
      __break(1u);
      goto LABEL_70;
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = (uint64_t (*)(void))MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v9 = 0;
  }
LABEL_28:
  uint64_t v3 = (void *)MEMORY[0x1E4FBC8C8];
  os_log_t v45 = *(uint64_t (**)(uint64_t *))((*MEMORY[0x1E4FBC8C8] & (uint64_t)v2->isa) + 0x2A8);
  swift_bridgeObjectRetain();
  uint64_t v46 = (void (*)(uint64_t *, void))v45(&v115);
  if (*(void *)(*v47 + 16) < specialized MutableCollection._halfStablePartition(isSuffixElement:)(v47, (uint64_t)v9)) {
    goto LABEL_67;
  }
  specialized Array.replaceSubrange<A>(_:with:)();
  v46(&v115, 0);
  uint64_t v48 = swift_bridgeObjectRelease();
  uint64_t v14 = (*v3 & (uint64_t)v2->isa) + 656;
  uint64_t v9 = *(uint64_t (**)(void))((*v3 & (uint64_t)v2->isa) + 0x290);
  uint64_t v49 = v9(v48);
  if (!v49
    || (uint64_t v50 = (void *)v49,
        specialized Conversation.currentScreenSharingRequest(ignoring:)(),
        uint64_t v18 = v51,
        v50,
        !v18))
  {
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_35:
      uint64_t v60 = type metadata accessor for Logger();
      __swift_project_value_buffer(v60, (uint64_t)static Logger.conversationControls);
      os_log_type_t v61 = v2;
      uint64_t v62 = Logger.logObject.getter();
      os_log_type_t v63 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v62, v63))
      {
        unint64_t v106 = v8;
        uint64_t v64 = (uint8_t *)swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        uint64_t v115 = v65;
        *(_DWORD *)uint64_t v64 = 136315138;
        uint64_t v66 = ((uint64_t (*)(void))v9)();
        if (v66)
        {
          uint64_t v111 = v66;
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
          uint64_t v67 = String.init<A>(reflecting:)();
          unint64_t v69 = v68;
        }
        else
        {
          uint64_t v67 = 7104878;
          unint64_t v69 = 0xE300000000000000;
        }
        uint64_t v111 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v69, &v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v62, v63, "No screen sharing request exists for conversation %s", v64, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v65, -1, -1);
        MEMORY[0x1C87760E0](v64, -1, -1);

        uint64_t v8 = v106;
      }
      else
      {
      }
      uint64_t v87 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v87);
      type metadata accessor for MainActor();
      uint64_t v22 = v61;
      uint64_t v88 = static MainActor.shared.getter();
      uint64_t v89 = (void *)swift_allocObject();
      uint64_t v90 = MEMORY[0x1E4FBCFD8];
      v89[2] = v88;
      v89[3] = v90;
      v89[4] = v22;
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
      uint64_t v91 = swift_release();
      uint64_t v92 = (*(uint64_t (**)(uint64_t))((*v3 & (uint64_t)v22->isa) + 0x3E8))(v91);
      if (v92)
      {
        uint64_t v94 = v93;
        swift_getObjectType();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
        uint64_t v95 = swift_allocObject();
        *(_OWORD *)(v95 + 16) = xmmword_1C37696D0;
        *(void *)(v95 + 32) = 24;
        *(_OWORD *)(v95 + 40) = 0u;
        *(_OWORD *)(v95 + 56) = 0u;
        *(unsigned char *)(v95 + 72) = 6;
        *(void *)(v95 + 80) = 25;
        *(_OWORD *)(v95 + 88) = 0u;
        *(_OWORD *)(v95 + 104) = 0u;
        *(unsigned char *)(v95 + 120) = 6;
        (*(void (**)(void))(v94 + 32))();
        swift_bridgeObjectRelease();
        uint64_t v92 = swift_unknownObjectRelease();
      }
      (*(void (**)(uint64_t))((*v3 & (uint64_t)v22->isa) + 0x978))(v92);
      goto LABEL_60;
    }
LABEL_68:
    swift_once();
    goto LABEL_35;
  }
  if (one-time initialization token for conversationControls != -1) {
LABEL_70:
  }
    swift_once();
  uint64_t v52 = type metadata accessor for Logger();
  uint64_t v53 = __swift_project_value_buffer(v52, (uint64_t)static Logger.conversationControls);
  uint64_t v22 = (id)v18;
  uint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v109 = v9;
    uint64_t v56 = swift_slowAlloc();
    uint64_t v108 = v53;
    uint64_t v57 = (uint8_t *)v56;
    uint64_t v107 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v57 = 138412290;
    uint64_t v110 = v14;
    uint64_t v115 = (uint64_t)v22;
    id v58 = v22;
    uint64_t v3 = (void *)MEMORY[0x1E4FBC8C8];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v59 = v107;
    void *v107 = v18;

    uint64_t v9 = v109;
    _os_log_impl(&dword_1C2F90000, v54, v55, "Current screen sharing request %@", v57, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v59, -1, -1);
    MEMORY[0x1C87760E0](v57, -1, -1);
  }
  else
  {

    uint64_t v54 = v22;
  }

  uint64_t v70 = ((uint64_t (*)(void))v9)();
  if (v70)
  {
    uint64_t v71 = (void *)v70;
    specialized Conversation.currentScreenSharingRequest(ignoring:)();
    uint64_t v73 = v72;

    if (v73)
    {
      id v74 = objc_msgSend(v73, sel_type);

      if (v74 == (id)1)
      {
        uint64_t v96 = (*(uint64_t (**)(void))((*v3 & (uint64_t)v2->isa) + 0x430))();
        if (v96)
        {
          uint64_t v98 = v97;
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v98 + 88))(ObjectType, v98);
          uint64_t v96 = swift_unknownObjectRelease();
        }
        uint64_t v100 = (*(uint64_t (**)(uint64_t))((*v3 & (uint64_t)v2->isa) + 0x3E8))(v96);
        if (v100)
        {
          uint64_t v102 = v101;
          uint64_t v103 = swift_getObjectType();
          uint64_t v115 = 24;
          long long v116 = 0u;
          long long v117 = 0u;
          char v118 = 6;
          (*(void (**)(uint64_t, uint64_t *, void, void, uint64_t, uint64_t))(v102 + 16))(3, &v115, 0, 0, v103, v102);
          swift_unknownObjectRelease();
          uint64_t v100 = outlined destroy of ConversationControlsType((uint64_t)&v115);
        }
        (*(void (**)(uint64_t))((*v3 & (uint64_t)v2->isa) + 0x978))(v100);
      }
      else if (v74 == (id)4)
      {
        if ((*(uint64_t (**)(void))((*v3 & (uint64_t)v2->isa) + 0x430))())
        {
          uint64_t v76 = v75;
          uint64_t v77 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v76 + 88))(v77, v76);
          swift_unknownObjectRelease();
        }
        uint64_t v78 = v2;
        uint64_t v79 = Logger.logObject.getter();
        os_log_type_t v80 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v79, v80))
        {
          uint64_t v81 = (uint8_t *)swift_slowAlloc();
          uint64_t v82 = swift_slowAlloc();
          uint64_t v115 = v82;
          *(_DWORD *)uint64_t v81 = 136315138;
          uint64_t v83 = (*(uint64_t (**)(void))((*v3 & (uint64_t)v78->isa) + 0x568))();
          if (v83)
          {
            uint64_t v111 = v83;
            type metadata accessor for HUDActivity(0);
            uint64_t v84 = String.init<A>(reflecting:)();
            unint64_t v86 = v85;
          }
          else
          {
            uint64_t v84 = 7104878;
            unint64_t v86 = 0xE300000000000000;
          }
          uint64_t v111 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v86, &v115);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v79, v80, "incomingRequestToScreenShare current activity %s", v81, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v82, -1, -1);
          MEMORY[0x1C87760E0](v81, -1, -1);
        }
        else
        {
        }
        ConversationControlsManager.addIncomingScreenSharingRequestActivity()();

        goto LABEL_60;
      }
    }
  }

LABEL_60:
}

uint64_t closure #3 in closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #3 in closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers(), v6, v5);
}

uint64_t closure #3 in closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()()
{
  OUTLINED_FUNCTION_17_2();
  swift_release();
  ConversationControlsManager.removeIncomingScreenShareRequest()();
  ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1);
  OUTLINED_FUNCTION_6();
  return v0();
}

void closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v12 = (int *)type metadata accessor for SessionActionNotice(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x1C8776240](a6 + 16);
  if (!v15) {
    return;
  }
  uint64_t v16 = (void *)v15;
  id v17 = a3;
  SessionActionNotice.NoticeType.init(notice:)(v17, &v110);
  unint64_t v18 = v112;
  if (v112 >> 2 != 0xFFFFFFFF)
  {
    uint64_t v109 = v16;
    uint64_t v100 = a1;
    uint64_t v105 = a2;
    uint64_t v102 = a4;
    HIDWORD(v103) = a5;
    uint64_t v27 = v110;
    uint64_t v28 = v111;
    uint64_t v29 = v113;
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    __swift_project_value_buffer(v30, (uint64_t)static Logger.conversationControls);
    uint64_t v31 = v17;
    id v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    BOOL v34 = os_log_type_enabled(v32, v33);
    uint64_t v106 = v28;
    unint64_t v107 = v18;
    uint64_t v108 = v27;
    if (v34)
    {
      unint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v98 = (uint64_t *)swift_slowAlloc();
      uint64_t v99 = v35;
      *(_DWORD *)unint64_t v35 = 138412290;
      uint64_t v97 = (uint64_t *)(v35 + 4);
      uint64_t v110 = (uint64_t)v31;
      uint64_t v36 = v31;
      uint64_t v28 = v106;
      unint64_t v18 = v107;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v37 = (uint64_t)v98;
      *uint64_t v98 = (uint64_t)v31;

      uint64_t v27 = v108;
      os_log_type_t v38 = v33;
      uint64_t v39 = v99;
      _os_log_impl(&dword_1C2F90000, v32, v38, "Received actionNotice: %@", v99, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v37, -1, -1);
      MEMORY[0x1C87760E0](v39, -1, -1);
    }
    else
    {

      id v32 = v31;
    }

    id v40 = [v31 session];
    uint64_t v110 = v27;
    uint64_t v111 = v28;
    unint64_t v112 = v18;
    uint64_t v113 = v29;
    char v41 = SessionActionNotice.NoticeType.isSessionChange.getter();
    uint64_t v101 = v29;
    uint64_t v104 = v31;
    if (v41)
    {
      uint64_t v42 = type metadata accessor for Participant(0);
      char v43 = (void *)MEMORY[0x1E4FBC8C8];
      if (*(void *)(v105 + *(int *)(v42 + 28)))
      {
        char v44 = v109;
      }
      else
      {
        char v44 = v109;
        (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v109) + 0x920))(0);
        id v67 = objc_msgSend(v40, sel_activity);
        unint64_t v68 = v40;
        unsigned int v69 = objc_msgSend(v67, sel_isScreenSharingActivity);

        if (v69)
        {
          outlined consume of SessionActionNotice.NoticeType?(v108, v28, v18);
          ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);

          return;
        }
        id v40 = v68;
      }
      (*(void (**)(void))((*v43 & *v44) + 0x978))();
      uint64_t v72 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = v72;
      *(void *)(v61 + 24) = v40;
      id v73 = v40;
      uint64_t v71 = (uint8_t *)v40;
      uint64_t v66 = partial apply for closure #1 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers();
      uint64_t v70 = v105;
      goto LABEL_26;
    }
    uint64_t v99 = (uint8_t *)v40;
    uint64_t v45 = type metadata accessor for URL();
    uint64_t v97 = *(uint64_t **)(v45 - 8);
    uint64_t v46 = v97[8];
    MEMORY[0x1F4188790](v45);
    unint64_t v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF0;
    id v48 = [v31 actionURL];
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    uint64_t v98 = &v94;
    uint64_t v50 = MEMORY[0x1F4188790](v49 - 8);
    unint64_t v52 = (v51 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v53 = (char *)&v94 - v52;
    if (v48)
    {
      uint64_t v96 = (uint64_t)&v94 - v47;
      MEMORY[0x1F4188790](v50);
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v54 = (void (*)(char *, char *, uint64_t))v97[4];
      v54(v53, (char *)&v94 - v47, v45);
      __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v45);
      if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v45) != 1)
      {
        uint64_t v55 = v96;
        uint64_t v56 = ((uint64_t (*)(uint64_t, char *, uint64_t))v54)(v96, v53, v45);
        uint64_t v98 = &v94;
        uint64_t v95 = *(void **)((char *)v109 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
        MEMORY[0x1F4188790](v56);
        uint64_t v57 = (char *)&v94 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
        v54(v57, (char *)v55, v45);
        uint64_t v58 = *((unsigned __int8 *)v97 + 80);
        uint64_t v97 = &v94;
        uint64_t v59 = (v58 + 24) & ~v58;
        unint64_t v60 = (v46 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v61 = swift_allocObject();
        uint64_t v62 = v95;
        *(void *)(v61 + 16) = v95;
        v54((char *)(v61 + v59), v57, v45);
        os_log_type_t v63 = v104;
        *(void *)(v61 + v60) = v104;
        uint64_t v64 = v63;
        id v65 = v62;
        uint64_t v66 = partial apply for closure #2 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers();
LABEL_23:
        uint64_t v70 = v105;
        uint64_t v71 = v99;
LABEL_26:
        uint64_t v74 = (uint64_t)v14 + v12[5];
        _s15ConversationKit11ParticipantVWOcTm_6(v70, v74);
        uint64_t v75 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload(v74, 0, 1, v75);
        outlined init with copy of IDSLookupManager(v100, (uint64_t)v14 + v12[6]);
        uint64_t v76 = (uint8_t **)((char *)v14 + v12[7]);
        v76[3] = (uint8_t *)type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivitySession);
        v76[4] = (uint8_t *)&protocol witness table for TUConversationActivitySession;
        *uint64_t v76 = v71;
        BOOL v77 = *(void *)(v70 + *(int *)(v75 + 28)) == 0;
        uint64_t v78 = v71;
        uint64_t v79 = v104;
        id v80 = [v104 UUID];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        id v81 = [v79 bundleIdentifier];
        uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v84 = v83;

        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v66);
        Date.init()();
        uint64_t v85 = v106;
        *uint64_t v14 = v108;
        v14[1] = v85;
        uint64_t v86 = v101;
        _DWORD v14[2] = v107;
        v14[3] = v86;
        *((unsigned char *)v14 + v12[8]) = v77;
        uint64_t v87 = (char *)v14 + v12[9];
        *(void *)uint64_t v87 = v102;
        v87[8] = BYTE4(v103) & 1;
        uint64_t v88 = (void *)((char *)v14 + v12[12]);
        *uint64_t v88 = v82;
        v88[1] = v84;
        *((unsigned char *)v14 + v12[13]) = 1;
        uint64_t v89 = (void (**)())((char *)v14 + v12[14]);
        *uint64_t v89 = v66;
        v89[1] = (void (*)())v61;
        uint64_t v90 = (void *)((char *)v14 + v12[15]);
        *uint64_t v90 = 0;
        v90[1] = 0;
        uint64_t v91 = v109;
        specialized ConversationControlsManager.post(notice:)((uint64_t)v14, (uint64_t)v109, (uint64_t)type metadata accessor for SessionActionNotice, (uint64_t)&protocol witness table for SessionActionNotice, (uint64_t)type metadata accessor for SessionActionNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v92, v93, v94, (uint64_t)v95, v96, (uint64_t)v97, (uint64_t)v98, (uint64_t)v99, v100, v101, v102, v103, (uint64_t)v104,
          v105,
          v106,
          v107);

        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v66);
        _s15ConversationKit11ParticipantVWOhTm_4();
        return;
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)&v94 - v52, 1, 1, v45);
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v53, &demangling cache variable for type metadata for URL?);
    uint64_t v66 = 0;
    uint64_t v61 = 0;
    goto LABEL_23;
  }
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.conversationControls);
  id v20 = v17;
  unsigned __int8 v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v22))
  {
    char v23 = v16;
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 138412290;
    uint64_t v110 = (uint64_t)v20;
    id v26 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v25 = v20;

    _os_log_impl(&dword_1C2F90000, v21, v22, "Unsupported notice:%@", v24, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v25, -1, -1);
    MEMORY[0x1C87760E0](v24, -1, -1);
  }
  else
  {
  }
}

void closure #1 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, void *a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = (char *)MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v4) + 0x920))(0);
    ConversationControlsManager.presentCurrentActivity(completion:)(0, 0);
    id v6 = *(id *)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_coreAnalyticsReporter];
    CNKCoreAnalyticsReporter.reportStartedNoticeLaunch(_:)(a2);
  }
}

void closure #2 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(void *a1, uint64_t a2, void *a3)
{
  id v4 = objc_msgSend(a1, sel_conversationManager);
  URL._bridgeToObjectiveC()(v5);
  uint64_t v7 = v6;
  id v8 = objc_msgSend(a3, sel_bundleIdentifier);
  if (!v8)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v10 = (id)MEMORY[0x1C87730B0](v9);
    swift_bridgeObjectRelease();
    id v8 = v10;
  }
  id v11 = v8;
  objc_msgSend(v4, sel_activateConversationNoticeWithActionURL_bundleIdentifier_, v7);
}

void *closure #1 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_4;
  }
  swift_beginAccess();
  uint64_t result = (void *)MEMORY[0x1C8776240](a2 + 2);
  if (!result) {
    return result;
  }
  a2 = result;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *result) + 0x9B0))();
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_13;
  }
LABEL_4:
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.conversationControls);
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1C2F90000, v11, v12, "Present HUD: letMeInRequestStateDidChange", v13, 2u);
    MEMORY[0x1C87760E0](v13, -1, -1);
  }

  uint64_t v14 = (*(uint64_t (**)(void))((*v2 & *a2) + 0x430))();
  if (v14)
  {
    uint64_t v16 = v15;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *__return_ptr))((*v2 & *a2) + 0x848))(v25);
    (*(void (**)(void *, uint64_t, void, uint64_t, uint64_t))(v16 + 80))(v25, 1, 0, ObjectType, v16);
    swift_unknownObjectRelease();
    uint64_t v14 = outlined destroy of ConversationControlsType((uint64_t)v25);
  }
  (*(void (**)(void *__return_ptr, uint64_t))((*v2 & *a2) + 0x3D0))(v25, v14);
  if (v25[3])
  {
    outlined init with copy of IDSLookupManager((uint64_t)v25, (uint64_t)v22);
    outlined destroy of SystemUpdateNotice?((uint64_t)v25, &demangling cache variable for type metadata for CallControlsService?);
    uint64_t v18 = v23;
    uint64_t v19 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    id v20 = (void *)(*(void *)((char *)a2
                               + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController)
                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
    swift_beginAccess();
    (*(void (**)(void, uint64_t, uint64_t))(v19 + 120))(*v20, v18, v19);

    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  else
  {

    return (void *)outlined destroy of SystemUpdateNotice?((uint64_t)v25, &demangling cache variable for type metadata for CallControlsService?);
  }
}

void closure #2 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    swift_beginAccess();
    id v11 = (void *)MEMORY[0x1C8776240](a2 + 16);
    if (v11)
    {
      os_log_type_t v12 = v11;
      uint64_t v13 = (void *)MEMORY[0x1E4FBC8C8];
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v11) + 0x978))();
      uint64_t v14 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v14);
      (*(void (**)(char *))((*v13 & *v12) + 0x998))(v5);
      outlined destroy of SystemUpdateNotice?((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
      ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #3 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, void *a2)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v63 - v10;
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCBE8], v12);
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_30:
    swift_once();
LABEL_13:
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.conversationControls);
    uint64_t v29 = a2;
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      uint64_t v71 = v64;
      *(_DWORD *)uint64_t v32 = 136315394;
      LOBYTE(v68[0]) = v3() > 0x1Fu;
      uint64_t v33 = String.init<A>(reflecting:)();
      v68[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v35 = swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v36 = (void *)(*(uint64_t (**)(uint64_t))((*v2 & *v29) + 0x290))(v35);
      if (v36)
      {
        uint64_t v37 = v36;
        unsigned __int8 v38 = objc_msgSend(v36, sel_ignoreLMIRequests);
      }
      else
      {
        unsigned __int8 v38 = 0;
      }
      LOBYTE(v68[0]) = v38;
      uint64_t v60 = String.init<A>(reflecting:)();
      v68[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v60, v61, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v30, v31, "Ignoring pending participant because the user has not yet joined (%s) or LMI requests are muted (%s)", (uint8_t *)v32, 0x16u);
      uint64_t v62 = v64;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v62, -1, -1);
      MEMORY[0x1C87760E0](v32, -1, -1);
    }
    else
    {
    }
    return;
  }
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x1C8776240](a2 + 2);
  if (!v17) {
    return;
  }
  a2 = (void *)v17;
  uint64_t v18 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v18);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(char *))((*MEMORY[0x1E4FBC8C8] & *a2) + 0x998))(v11);
  uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))((*v2 & *a2) + 0x3D0))(&v71, updated);
  if ((void)v73)
  {
    outlined init with copy of IDSLookupManager((uint64_t)&v71, (uint64_t)v68);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v71, &demangling cache variable for type metadata for CallControlsService?);
    uint64_t v20 = v69;
    uint64_t v21 = v70;
    __swift_project_boxed_opaque_existential_1(v68, v69);
    uint64_t v22 = (*(uint64_t (**)(void))((*v2 & *a2) + 0x290))();
    if (v22)
    {
      uint64_t v23 = v22;
      *((void *)&v66 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
      id v67 = &protocol witness table for TUConversation;
      *(void *)&long long v65 = v23;
    }
    else
    {
      id v67 = 0;
      long long v65 = 0u;
      long long v66 = 0u;
    }
    (*(void (**)(long long *, uint64_t, uint64_t))(v21 + 128))(&v65, v20, v21);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v65, &demangling cache variable for type metadata for Conversation?);
    uint64_t v24 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  }
  else
  {
    uint64_t v24 = outlined destroy of SystemUpdateNotice?((uint64_t)&v71, &demangling cache variable for type metadata for CallControlsService?);
  }
  uint64_t v3 = *(unsigned __int8 (**)(void))((*v2 & *a2) + 0x840);
  if (((unsigned __int8 (*)(uint64_t))v3)(v24) > 0x1Fu
    || (uint64_t v25 = (void *)(*(uint64_t (**)(void))((*v2 & *a2) + 0x290))()) != 0
    && (id v26 = v25, v27 = objc_msgSend(v25, sel_ignoreLMIRequests), v26, (v27 & 1) != 0))
  {
    if (one-time initialization token for conversationControls == -1) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
  uint64_t v39 = (*(uint64_t (**)(void))((*v2 & *a2) + 0x828))(0);
  uint64_t v40 = (*(uint64_t (**)(uint64_t))((*v2 & *a2) + 0x430))(v39);
  if (v40)
  {
    uint64_t v42 = v41;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v71 = 2;
    long long v72 = 0u;
    long long v73 = 0u;
    char v74 = 6;
    (*(void (**)(uint64_t *, uint64_t, void, uint64_t, uint64_t))(v42 + 80))(&v71, 1, 0, ObjectType, v42);
    swift_unknownObjectRelease();
    uint64_t v40 = outlined destroy of ConversationControlsType((uint64_t)&v71);
  }
  if ((*(uint64_t (**)(uint64_t))((*v2 & *a2) + 0x3E8))(v40))
  {
    uint64_t v45 = v44;
    uint64_t v46 = swift_getObjectType();
    uint64_t v71 = 2;
    long long v72 = 0u;
    long long v73 = 0u;
    char v74 = 6;
    (*(void (**)(uint64_t, uint64_t *, void, void, uint64_t, uint64_t))(v45 + 16))(1, &v71, 0, 0, v46, v45);
    swift_unknownObjectRelease();
    outlined destroy of ConversationControlsType((uint64_t)&v71);
  }
  specialized Collection.first.getter(*(void *)(a1 + *(int *)(v18 + 44)), (uint64_t)v9);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v18);
  outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
  if (*(void *)(a1 + *(int *)(v18 + 36) + 8) && EnumTagSinglePayload == 1)
  {
    id v48 = objc_msgSend(self, sel_conversationKit);
    v75._object = (void *)0xE000000000000000;
    v49._object = (void *)0x80000001C37A5490;
    v49._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v50.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v50.value._object = (void *)0xEF74694B6E6F6974;
    v51._uint64_t countAndFlagsBits = 0;
    v51._object = (void *)0xE000000000000000;
    v75._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v75);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_1C3769620;
    Participant.contactDetails.getter();
    uint64_t v53 = (void *)v71;
    long long v54 = v72;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    *(void *)(v52 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v52 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_OWORD *)(v52 + 32) = v54;
    uint64_t v55 = String.init(format:_:)();
    uint64_t v57 = v56;
    swift_bridgeObjectRelease();
  }
  else
  {
    Participant.contactDetails.getter();
    uint64_t v58 = (void *)v71;
    uint64_t v57 = *((void *)&v72 + 1);
    uint64_t v55 = v72;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v59 = (void *)MEMORY[0x1C87730B0](v55, v57);
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_accessibilityDidAddPendingParticipant_, v59);
}

uint64_t closure #4 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    swift_beginAccess();
    uint64_t result = MEMORY[0x1C8776240](a2 + 16);
    if (result)
    {
      uint64_t v12 = (void *)result;
      uint64_t v13 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v13);
      uint64_t v14 = (void *)MEMORY[0x1E4FBC8C8];
      (*(void (**)(char *))((*MEMORY[0x1E4FBC8C8] & *v12) + 0x998))(v5);
      outlined destroy of SystemUpdateNotice?((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
      uint64_t v15 = ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1);
      (*(void (**)(void *__return_ptr, uint64_t))((*v14 & *v12) + 0x3D0))(v26, v15);
      if (v26[3])
      {
        outlined init with copy of IDSLookupManager((uint64_t)v26, (uint64_t)v23);
        outlined destroy of SystemUpdateNotice?((uint64_t)v26, &demangling cache variable for type metadata for CallControlsService?);
        uint64_t v16 = v24;
        uint64_t v17 = v25;
        __swift_project_boxed_opaque_existential_1(v23, v24);
        uint64_t v18 = (*(uint64_t (**)(void))((*v14 & *v12) + 0x290))();
        if (v18)
        {
          uint64_t v19 = v18;
          *((void *)&v21 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
          uint64_t v22 = &protocol witness table for TUConversation;
          *(void *)&long long v20 = v19;
        }
        else
        {
          uint64_t v22 = 0;
          long long v20 = 0u;
          long long v21 = 0u;
        }
        (*(void (**)(long long *, uint64_t, uint64_t))(v17 + 128))(&v20, v16, v17);

        outlined destroy of SystemUpdateNotice?((uint64_t)&v20, &demangling cache variable for type metadata for Conversation?);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      }
      else
      {

        return outlined destroy of SystemUpdateNotice?((uint64_t)v26, &demangling cache variable for type metadata for CallControlsService?);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #5 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBE8], v7);
  char v11 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    swift_beginAccess();
    uint64_t result = MEMORY[0x1C8776240](a2 + 16);
    if (result)
    {
      uint64_t v13 = (void *)result;
      _s15ConversationKit11ParticipantVWOcTm_6(a1, (uint64_t)v6);
      uint64_t v14 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v14);
      uint64_t v15 = (void *)MEMORY[0x1E4FBC8C8];
      (*(void (**)(char *))((*MEMORY[0x1E4FBC8C8] & *v13) + 0x998))(v6);
      outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
      uint64_t v16 = ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1);
      (*(void (**)(void *__return_ptr, uint64_t))((*v15 & *v13) + 0x3D0))(v27, v16);
      if (v27[3])
      {
        outlined init with copy of IDSLookupManager((uint64_t)v27, (uint64_t)v24);
        outlined destroy of SystemUpdateNotice?((uint64_t)v27, &demangling cache variable for type metadata for CallControlsService?);
        uint64_t v17 = v25;
        uint64_t v18 = v26;
        __swift_project_boxed_opaque_existential_1(v24, v25);
        uint64_t v19 = (*(uint64_t (**)(void))((*v15 & *v13) + 0x290))();
        if (v19)
        {
          uint64_t v20 = v19;
          *((void *)&v22 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
          uint64_t v23 = &protocol witness table for TUConversation;
          *(void *)&long long v21 = v20;
        }
        else
        {
          uint64_t v23 = 0;
          long long v21 = 0u;
          long long v22 = 0u;
        }
        (*(void (**)(long long *, uint64_t, uint64_t))(v18 + 128))(&v21, v17, v18);

        outlined destroy of SystemUpdateNotice?((uint64_t)&v21, &demangling cache variable for type metadata for Conversation?);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      }
      else
      {

        return outlined destroy of SystemUpdateNotice?((uint64_t)v27, &demangling cache variable for type metadata for CallControlsService?);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #6 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    swift_beginAccess();
    uint64_t v8 = (void *)MEMORY[0x1C8776240](a2 + 16);
    if (v8)
    {
      uint64_t v9 = v8;
      if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v8) + 0x448))())
      {
        uint64_t v11 = v10;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v11 + 72))(ObjectType, v11);

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #7 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    swift_beginAccess();
    uint64_t v9 = (void *)MEMORY[0x1C8776240](a2 + 16);
    if (v9)
    {
      uint64_t v10 = v9;
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v9) + 0x9A0))(a1 & 1);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #8 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (uint64_t *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    swift_beginAccess();
    uint64_t v10 = MEMORY[0x1C8776240](a3 + 16);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      Participant.isKickingAvailable.getter();
      (*(void (**)(uint64_t, void))((*MEMORY[0x1E4FBC8C8] & *v11) + 0x9A8))(a1, v12 & 1);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #1 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (void *)((char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    swift_beginAccess();
    uint64_t v11 = MEMORY[0x1C8776240](a3 + 16);
    if (v11)
    {
      char v12 = (void *)v11;
      uint64_t ObjectType = swift_getObjectType();
      if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 216))(ObjectType, a2) & 1) == 0) {
        goto LABEL_9;
      }
      uint64_t v14 = type metadata accessor for UUID();
      void v22[2] = v22;
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(void *)(v15 + 64);
      MEMORY[0x1F4188790](v14);
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 200))(ObjectType, a2);
      v22[1] = v22;
      uint64_t v18 = MEMORY[0x1F4188790](v17);
      uint64_t v19 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v12) + 0x278))(v18);
      char v20 = static UUID.== infix(_:_:)();
      long long v21 = *(void (**)(char *, uint64_t))(v15 + 8);
      v21(v19, v14);
      v21(v19, v14);
      if (v20)
      {
        if ((*(unsigned int (**)(uint64_t, uint64_t))(a2 + 184))(ObjectType, a2) == 6
          && ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v12) + 0x770))() & 1) != 0)
        {
          objc_msgSend(v12, sel_dismissConfirmLeavePTTChannelAlert);
        }
        ConversationControlsManager.pttCallUpdateSubject.getter();
        void v22[3] = a1;
        v22[4] = a2;
        CurrentValueSubject.send(_:)();

        swift_release();
      }
      else
      {
LABEL_9:
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void *closure #2 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()()
{
  self;
  uint64_t v0 = (void *)swift_dynamicCastObjCClass();
  if (v0)
  {
    swift_unknownObjectRetain();
    if (objc_msgSend(v0, sel_isPTT))
    {
      if (objc_msgSend(v0, sel_isReceivingTransmission)) {
        id v1 = objc_msgSend(v0, sel_activeRemoteParticipant);
      }
    }
    else
    {
      swift_unknownObjectRelease();
      return 0;
    }
  }
  return v0;
}

void *specialized thunk for @escaping @callee_guaranteed (@guaranteed Call, @unowned Bool) -> (@owned (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)?)@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = closure #2 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

void closure #3 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()(void *a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for PushToTalkNotice.NoticeType(0);
  MEMORY[0x1F4188790](v8);
  char v10 = (uint64_t *)((char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (int *)type metadata accessor for PushToTalkNotice(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x1C8776240](a4 + 16);
  if (!v14) {
    return;
  }
  uint64_t v15 = (void *)v14;
  if (objc_msgSend(a1, sel_status) == 6)
  {
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v15) + 0x400))())
    {
      uint64_t v17 = v16;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v17 + 32))(0xD00000000000001CLL, 0x80000001C37A5650, 1, ObjectType, v17);

      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_33;
  }
  if (!a2)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)static Logger.conversationControls);
    unsigned __int8 v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_1C2F90000, v27, v28, "Updating PushToTalk HUD because a call update was made", v29, 2u);
      MEMORY[0x1C87760E0](v29, -1, -1);
    }

    if (!(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v15) + 0x400))()) {
      goto LABEL_32;
    }
    uint64_t v31 = v30;
    uint64_t v32 = swift_getObjectType();
    uint64_t v77 = 3;
    long long v78 = 0u;
    long long v79 = 0u;
    LOBYTE(v80) = 6;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v31 + 16))(&v77, 1, v32, v31);
    swift_unknownObjectRelease();
    goto LABEL_27;
  }
  Swift::String v75 = a1;
  uint64_t v19 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v15) + 0x400);
  uint64_t v20 = (*MEMORY[0x1E4FBC8C8] & *v15) + 1024;
  id v21 = a2;
  long long v72 = (uint64_t *)v20;
  long long v73 = v19;
  if (v19())
  {
    uint64_t v23 = v22;
    uint64_t v24 = swift_getObjectType();
    char v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 72))(v24, v23);
    swift_unknownObjectRelease();
  }
  else
  {
    char v25 = 0;
  }
  id v33 = objc_msgSend(v21, sel_name);
  char v74 = (uint64_t *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v35 = v34;

  if ((v25 & 1) != 0 || (a3 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    __swift_project_value_buffer(v41, (uint64_t)static Logger.conversationControls);
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.default.getter();
    BOOL v44 = os_log_type_enabled(v42, v43);
    a1 = v75;
    if (v44)
    {
      id v45 = v21;
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl(&dword_1C2F90000, v42, v43, "Skipping notice because an active participant was set but it did not contain a name or SpringBoard was locked. Posting a normal HUD update instead.", v46, 2u);
      unint64_t v47 = v46;
      id v21 = v45;
      MEMORY[0x1C87760E0](v47, -1, -1);
    }

    if (!v73())
    {

      goto LABEL_32;
    }
    uint64_t v49 = v48;
    uint64_t v50 = swift_getObjectType();
    uint64_t v77 = 3;
    long long v78 = 0u;
    long long v79 = 0u;
    LOBYTE(v80) = 6;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v49 + 16))(&v77, 1, v50, v49);
    swift_unknownObjectRelease();

LABEL_27:
    outlined destroy of ConversationControlsType((uint64_t)&v77);
LABEL_32:
    specialized ConversationControlsManager.updatePTTChannelState(call:)(a1);
LABEL_33:

    return;
  }
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  long long v73 = (uint64_t (*)(void))v21;
  uint64_t v36 = type metadata accessor for Logger();
  __swift_project_value_buffer(v36, (uint64_t)static Logger.conversationControls);
  swift_bridgeObjectRetain_n();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    long long v72 = (uint64_t *)swift_slowAlloc();
    uint64_t v77 = (uint64_t)v72;
    *(_DWORD *)uint64_t v39 = 136315138;
    uint64_t v71 = v39 + 4;
    swift_bridgeObjectRetain();
    uint64_t v76 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v74, v35, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C2F90000, v37, v38, "Posting PushToTalkNotice because the active speaker changed to %s", v39, 0xCu);
    uint64_t v40 = (uint64_t)v72;
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v40, -1, -1);
    MEMORY[0x1C87760E0](v39, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v51 = (uint64_t)v74;
  uint64_t v52 = type metadata accessor for UUID();
  char v74 = &v70;
  uint64_t v53 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v55 = (char *)&v70 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  *char v10 = v51;
  v10[1] = v35;
  id v56 = objc_msgSend(v73, sel_imageURL);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  long long v72 = &v70;
  MEMORY[0x1F4188790](v57 - 8);
  uint64_t v59 = (char *)&v70 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v56)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v60 = 0;
  }
  else
  {
    uint64_t v60 = 1;
  }
  uint64_t v61 = type metadata accessor for URL();
  __swift_storeEnumTagSinglePayload((uint64_t)v59, v60, 1, v61);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (speaker: String, image: URL?));
  outlined init with take of ConversationControlsRecipe?((uint64_t)v59, (uint64_t)v10 + *(int *)(v62 + 48), &demangling cache variable for type metadata for URL?);
  swift_storeEnumTagMultiPayload();
  Date.init()();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  double v63 = (*(double (**)(void))(*(void *)static Defaults.shared + 984))();
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v13, v55, v52);
  outlined init with take of Collaboration((uint64_t)v10, (uint64_t)&v13[v11[5]]);
  v13[v11[7]] = 6;
  uint64_t v64 = &v13[v11[8]];
  *(void *)uint64_t v64 = 0;
  *((void *)v64 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
  *(double *)&v13[v11[9]] = v63;
  v13[v11[10]] = 1;
  long long v65 = &v13[v11[11]];
  *(void *)long long v65 = 0;
  *((void *)v65 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
  long long v66 = &v13[v11[12]];
  *(void *)long long v66 = 0;
  *((void *)v66 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
  v13[v11[13]] = 1;
  id v67 = &v13[v11[14]];
  *(void *)id v67 = 0;
  *((void *)v67 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
  specialized ConversationControlsManager.post(notice:)((uint64_t)v13, (uint64_t)v15, (uint64_t)type metadata accessor for PushToTalkNotice, (uint64_t)&protocol witness table for PushToTalkNotice, (uint64_t)type metadata accessor for PushToTalkNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v68, v69, v70, (uint64_t)v71, (uint64_t)v72, (uint64_t)v73, (uint64_t)v74, (uint64_t)v75, v76, v77, v78, *((uint64_t *)&v78 + 1), v79,
    *((uint64_t *)&v79 + 1),
    v80,
    v81);
  LOBYTE(v77) = 0;
  CurrentValueSubject.send(_:)();

  specialized ConversationControlsManager.updatePTTChannelState(call:)(v75);
  _s15ConversationKit11ParticipantVWOhTm_4();
}

Swift::Void __swiftcall ConversationControlsManager.incomingTransmissionReceived()()
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  id v1 = (void *)OUTLINED_FUNCTION_30(v0, (uint64_t)static Logger.conversationControls);
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v2))
  {
    uint64_t v3 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v3);
    OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v4, v5, "PushToTalk incoming transmission received");
    OUTLINED_FUNCTION_3();
  }

  CurrentValueSubject.send(_:)();
}

#error "1C32B2504: call analysis failed (funcsize=202)"

uint64_t ConversationControlsManager.isIgnoredScreenSharingRequestUUID(_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_0_20();
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 664))();
  v5[2] = a1;
  LOBYTE(aConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = specialized Sequence.contains(where:)((uint64_t)partial apply for specialized closure #1 in Sequence<>.contains(_:), (uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

BOOL ConversationControlsManager.isShownAboveCoverSheetWithoutPasscode.getter()
{
  if (ConversationControlsManager.isShownAboveCoverSheet.getter())
  {
    type metadata accessor for SpringBoardUtilities();
    OUTLINED_FUNCTION_47();
    return !static SpringBoardUtilities.checkSpringBoardState(for:)();
  }
  else
  {
    return 0;
  }
}

#error "1C32B275C: call analysis failed (funcsize=71)"

void closure #1 in ConversationControlsManager.scheduleDelayedLMIBanner()(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
    if (((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x820))() & 1) != 0
      && (*(unsigned __int8 (**)(void))((*v4 & *v3) + 0x840))() <= 0x1Fu)
    {
      uint64_t v5 = (void *)(*(uint64_t (**)(void))((*v4 & *v3) + 0x290))();
      if (v5)
      {
        uint64_t v6 = v5;
        if (objc_msgSend(v5, sel_state) != (id)3
          || (id v7 = objc_msgSend(v6, sel_pendingMembers),
              type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember), lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember), uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)(), v7, v9 = specialized Set.count.getter(v8), swift_bridgeObjectRelease(), v9 < 1)|| (objc_msgSend(v6, sel_ignoreLMIRequests) & 1) != 0)
        {

          return;
        }
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v10 = type metadata accessor for Logger();
        __swift_project_value_buffer(v10, (uint64_t)static Logger.conversationControls);
        uint64_t v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = (uint8_t *)swift_slowAlloc();
          uint64_t v14 = swift_slowAlloc();
          *(_DWORD *)uint64_t v13 = 136315138;
          uint64_t v26 = v14;
          uint64_t v15 = String.init<A>(reflecting:)();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v26);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v11, v12, "Showing LMI banner since the first person to join the call has been ignoring LMI requests (didn't see LMI banner or open drawer) for %s seconds since they joined", v13, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v14, -1, -1);
          MEMORY[0x1C87760E0](v13, -1, -1);
        }

        uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))((*v4 & *v3) + 0x430))(v17, v18);
        if (v19)
        {
          uint64_t v21 = v20;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v26 = 2;
          long long v27 = 0u;
          long long v28 = 0u;
          char v29 = 6;
          (*(void (**)(uint64_t *, uint64_t, void, uint64_t, uint64_t))(v21 + 80))(&v26, 1, 0, ObjectType, v21);
          swift_unknownObjectRelease();
          uint64_t v19 = outlined destroy of ConversationControlsType((uint64_t)&v26);
        }
        if ((*(uint64_t (**)(uint64_t))((*v4 & *v3) + 0x3E8))(v19))
        {
          uint64_t v24 = v23;
          uint64_t v25 = swift_getObjectType();
          uint64_t v26 = 2;
          long long v27 = 0u;
          long long v28 = 0u;
          char v29 = 6;
          (*(void (**)(uint64_t, uint64_t *, void, void, uint64_t, uint64_t))(v24 + 16))(1, &v26, 0, 0, v25, v24);
          swift_unknownObjectRelease();

          outlined destroy of ConversationControlsType((uint64_t)&v26);
          return;
        }
      }
    }
  }
}

id ConversationControlsManager.videoCameraOffForScreenSharingAlert.getter()
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  uint64_t v0 = (void *)*MEMORY[0x1E4FB2908];
  v20[0] = 0xD000000000000010;
  v20[1] = 0x80000001C37A5510;
  v20[2] = 1;
  v20[3] = v0;
  __int16 v21 = 0;
  uint64_t v22 = 4;
  char v23 = 0;
  uint64_t v24 = 0;
  id v1 = v0;
  id v2 = static UIImage.symbolImage(for:)((uint64_t)v20);

  swift_bridgeObjectRelease();
  if (v2)
  {
    id v3 = objc_msgSend(self, sel_labelColor);
    id v4 = objc_msgSend(v2, sel_imageWithTintColor_, v3);
  }
  else
  {
    id v4 = 0;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_conversationKit);
  v25._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0x6143206F65646956;
  v7._object = (void *)0xEC0000006172656DLL;
  v8.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v8.value._object = (void *)0xEF74694B6E6F6974;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v25._uint64_t countAndFlagsBits = 0;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v25);

  memset(v18, 0, sizeof(v18));
  char v19 = 1;
  id v11 = static NSAttributedString.localizedString(_:prefixImage:imageBounds:)(v10._countAndFlagsBits, (uint64_t)v10._object, v4, (uint64_t)v18);
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v5, sel_conversationKit);
  v13._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v26._object = (void *)0xE000000000000000;
  v13._object = (void *)0x80000001C37A5530;
  v14.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v14.value._object = (void *)0xEF74694B6E6F6974;
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v26._uint64_t countAndFlagsBits = 0;
  Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v26);

  NSMutableAttributedString.__allocating_init(string:)(v16);
  return v11;
}

id ConversationControlsManager.videoCameraOnOrOffAlert.getter()
{
  id v1 = v0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  id v2 = (void *)*MEMORY[0x1E4FB2908];
  v28[0] = 0x69662E6F65646976;
  v28[1] = 0xEA00000000006C6CLL;
  v28[2] = 1;
  v28[3] = v2;
  __int16 v29 = 0;
  uint64_t v30 = 4;
  char v31 = 0;
  uint64_t v32 = 0;
  id v3 = v2;
  id v4 = static UIImage.symbolImage(for:)((uint64_t)v28);

  swift_bridgeObjectRelease();
  if (v4)
  {
    id v5 = objc_msgSend(self, sel_labelColor);
    id v6 = objc_msgSend(v4, sel_imageWithTintColor_, v5);
  }
  else
  {
    id v6 = 0;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  Swift::String v7 = self;
  id v8 = objc_msgSend(v7, sel_conversationKit);
  v33._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0x6143206F65646956;
  v9._object = (void *)0xEC0000006172656DLL;
  v10.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v10.value._object = (void *)0xEF74694B6E6F6974;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v33._uint64_t countAndFlagsBits = 0;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v33);

  memset(v26, 0, sizeof(v26));
  char v27 = 1;
  id v13 = static NSAttributedString.localizedString(_:prefixImage:imageBounds:)(v12._countAndFlagsBits, (uint64_t)v12._object, v6, (uint64_t)v26);
  uint64_t v14 = swift_bridgeObjectRelease();
  __int16 v15 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x610))(v14);
  id v16 = objc_msgSend(v7, sel_conversationKit);
  unint64_t v25 = 0xE000000000000000;
  if ((v15 & 0x100) != 0)
  {
    uint64_t v17 = 0x4E4F5F4F45444956;
    unint64_t v18 = 0xE800000000000000;
  }
  else
  {
    uint64_t v17 = 0x464F5F4F45444956;
    unint64_t v18 = 0xE900000000000046;
  }
  v19.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v19.value._object = (void *)0xEF74694B6E6F6974;
  v20._uint64_t countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  uint64_t v21 = 0;
  Swift::String v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v17, v19, (NSBundle)v16, v20, *(Swift::String *)(&v25 - 1));

  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  NSMutableAttributedString.__allocating_init(string:)(v23);

  return v13;
}

void ConversationControlsManager.dismissReactionNotice()()
{
  id v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v23[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator);
  LOBYTE(v23[0]) = 1;
  ConversationControlsNoticeCoordinator.flushNotices(priority:)((ConversationKit::NoticePriority)v23);
  id v6 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v5) + 0x88))(v23);
  if (v24)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
    uint64_t v7 = type metadata accessor for ReactionNotice(0);
    int v8 = swift_dynamicCast();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, v8 ^ 1u, 1, v7);
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v7) != 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
      ConversationControlsNoticeCoordinator.dismissAndGetNextNotice(dismissContext:)();
      uint64_t v9 = v24;
      outlined destroy of SystemUpdateNotice?((uint64_t)v23, &demangling cache variable for type metadata for Notice?);
      if (!v9)
      {
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v10 = type metadata accessor for Logger();
        __swift_project_value_buffer(v10, (uint64_t)static Logger.conversationControls);
        Swift::String v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          id v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v13 = 0;
          _os_log_impl(&dword_1C2F90000, v11, v12, "No more notices, dismissing banner", v13, 2u);
          MEMORY[0x1C87760E0](v13, -1, -1);
        }

        if ((*(uint64_t (**)(void))((*v6 & *v1) + 0x400))())
        {
          uint64_t v15 = v14;
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v15 + 32))(0xD000000000000025, 0x80000001C37A5460, 1, ObjectType, v15);
          swift_unknownObjectRelease();
        }
      }
      return;
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v23, &demangling cache variable for type metadata for Notice?);
    uint64_t v17 = type metadata accessor for ReactionNotice(0);
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v17);
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)static Logger.conversationControls);
  Swift::String_optional v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_1C2F90000, v19, v20, "[dismissReactionNotice] Not showing reaction notice, ignoring", v21, 2u);
    MEMORY[0x1C87760E0](v21, -1, -1);
  }
}

uint64_t ConversationControlsManager.postReactionNotice()()
{
  id v1 = v0;
  uint64_t v2 = swift_beginAccess();
  specialized NoticeQueueStore.peek()(&v7, v2);
  swift_endAccess();
  if (!v8) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)&v7, &demangling cache variable for type metadata for Notice?);
  }
  outlined init with take of Notice(&v7, (uint64_t)v9);
  uint64_t v3 = v10;
  uint64_t v4 = v11;
  id v5 = __swift_project_boxed_opaque_existential_1(v9, v10);
  specialized ConversationControlsManager.post(notice:)((uint64_t)v5, v1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t ScreenSharingControlStateManager.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t ScreenSharingControlStateManager.__deallocating_deinit()
{
  ScreenSharingControlStateManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t ScreenSharingControlStateManager.init()()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<ShareMenuActionState, Never>);
  swift_allocObject();
  *(void *)(v0 + 16) = CurrentValueSubject.init(_:)();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 208))();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  swift_allocObject();
  *(void *)(v0 + 24) = CurrentValueSubject.init(_:)();
  return v0;
}

Swift::Void __swiftcall ConversationControlsManager.joinConversation(from:)(UIControl *from)
{
  OUTLINED_FUNCTION_260();
  OUTLINED_FUNCTION_161();
  if ((*(unsigned __int8 (**)(void))(v1 + 2112))() == 96)
  {
    OUTLINED_FUNCTION_94_1();
    (*(void (**)(void))(v2 + 752))();
    OUTLINED_FUNCTION_2_10();
    (*(void (**)(void))(v3 + 264))();
    swift_release();
    uint64_t v4 = (void *)OUTLINED_FUNCTION_350();
    [v4 v5];
  }
}

uint64_t protocol witness for ConversationControlsCountdownJoinButtonDelegate.invalidateDismissTimer() in conformance ConversationControlsManager()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA08))();
}

uint64_t protocol witness for ConversationControlsCountdownJoinButtonDelegate.scheduleDismissTimer() in conformance ConversationControlsManager()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA00))();
}

id ConduitApprovalDelegate.init(_:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v6.receiver = v1;
  v6.super_class = ObjectType;
  id v4 = objc_msgSendSuper2(&v6, sel_init);

  return v4;
}

void ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = OUTLINED_FUNCTION_30(v10, (uint64_t)static Logger.conversationControls);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_12(v12))
  {
    id v13 = (uint8_t *)OUTLINED_FUNCTION_8_0();
    *(_WORD *)id v13 = 0;
    _os_log_impl(&dword_1C2F90000, v11, (os_log_type_t)v0, "Split session approval requested", v13, 2u);
    OUTLINED_FUNCTION_3();
  }

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v25 = static OS_dispatch_queue.main.getter();
  uint64_t v14 = MEMORY[0x1C8776240](v0 + OBJC_IVAR____TtC15ConversationKit23ConduitApprovalDelegate_manager);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = v7;
  v15[4] = v9;
  v15[5] = v5;
  v15[6] = v3;
  void v26[4] = partial apply for closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:);
  void v26[5] = v15;
  v26[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  _OWORD v26[2] = thunk for @escaping @callee_guaranteed () -> ();
  v26[3] = &block_descriptor_194;
  id v16 = _Block_copy(v26);
  id v17 = v9;
  swift_retain();
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_32_5();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = (uint64_t)&v24;
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_5_1();
  v26[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAED0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_42_0();
  os_log_type_t v20 = (void *)v25;
  MEMORY[0x1C8773BA0](0, v9, v1, v16);
  _Block_release(v16);

  uint64_t v21 = OUTLINED_FUNCTION_21_3();
  v22(v21);
  OUTLINED_FUNCTION_139();
  v23();
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t updated = (int *)type metadata accessor for SystemUpdateNotice(0);
  MEMORY[0x1F4188790](updated);
  os_log_type_t v12 = (BOOL *)((char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    if (a2 == 1)
    {
      id v13 = a1;
      BOOL v34 = 0;
    }
    else
    {
      uint64_t v14 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x8D0);
      uint64_t v15 = a1;
      id v16 = (void *)v14();

      BOOL v34 = v16 != 0;
    }
    uint64_t v17 = outlined bridged method (pb) of @objc TUNearbyDeviceHandle.name.getter(a3);
    if (v18) {
      uint64_t v19 = v17;
    }
    else {
      uint64_t v19 = 0x206E776F6E6B6E55;
    }
    unint64_t v20 = 0xEE00656369766544;
    if (v18) {
      unint64_t v20 = v18;
    }
    uint64_t v32 = v19;
    unint64_t v33 = v20;
    uint64_t v21 = type metadata accessor for UUID();
    unint64_t v35 = &v32;
    memset(v36, 0, sizeof(v36));
    uint64_t v37 = 0;
    uint64_t v22 = *(void *)(v21 - 8);
    MEMORY[0x1F4188790](v21);
    uint64_t v24 = (char *)&v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    UUID.init()();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a4;
    *(void *)(v25 + 24) = a5;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a4;
    *(void *)(v26 + 24) = a5;
    swift_retain_n();
    Date.init()();
    uint64_t v27 = v32;
    *os_log_type_t v12 = v34;
    v12[1] = v27;
    v12[2] = v33;
    outlined init with take of ConversationControlsRecipe?((uint64_t)v36, (uint64_t)(v12 + 3), &demangling cache variable for type metadata for Activity?);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))((char *)v12 + updated[6], v24, v21);
    *((unsigned char *)v12 + updated[8]) = 2;
    long long v28 = (BOOL *)((char *)v12 + updated[9]);
    *long long v28 = 0;
    v28[1] = 0;
    *((unsigned char *)v12 + updated[10]) = 0;
    __int16 v29 = (uint64_t (**)())((char *)v12 + updated[11]);
    *__int16 v29 = partial apply for closure #1 in closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:);
    v29[1] = (uint64_t (*)())v25;
    uint64_t v30 = (uint64_t (**)())((char *)v12 + updated[12]);
    *uint64_t v30 = partial apply for closure #2 in closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:);
    v30[1] = (uint64_t (*)())v26;
    *((unsigned char *)v12 + updated[13]) = 2;
    char v31 = (BOOL *)((char *)v12 + updated[14]);
    *char v31 = 0;
    v31[1] = 0;
    specialized ConversationControlsNoticeCoordinator.post(notice:)();
    _s15ConversationKit11ParticipantVWOhTm_4();
  }
}

void thunk for @escaping @callee_unowned @convention(block) (@unowned ObjCBool, @unowned NSError?) -> ()(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

Swift::Void __swiftcall ConduitApprovalDelegate.cancelSplitSessionApproval()()
{
  OUTLINED_FUNCTION_31();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = OUTLINED_FUNCTION_30(v1, (uint64_t)static Logger.conversationControls);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_12(v3))
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_22_1(v4);
    OUTLINED_FUNCTION_35_12(&dword_1C2F90000, v2, (os_log_type_t)v0, "Split session approval cancelled");
    OUTLINED_FUNCTION_3();
  }

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v13[1] = static OS_dispatch_queue.main.getter();
  uint64_t v5 = MEMORY[0x1C8776240](v0 + OBJC_IVAR____TtC15ConversationKit23ConduitApprovalDelegate_manager);
  uint64_t v6 = OUTLINED_FUNCTION_20();
  *(void *)(v6 + 16) = v5;
  v14[4] = partial apply for closure #1 in ConduitApprovalDelegate.cancelSplitSessionApproval();
  v14[5] = v6;
  v14[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  _DWORD v14[2] = thunk for @escaping @callee_guaranteed () -> ();
  v14[3] = &block_descriptor_200;
  uint64_t v7 = _Block_copy(v14);
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  v13[0] = v13;
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_5_1();
  v14[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAED0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_172();
  _Block_release(v7);

  uint64_t v10 = OUTLINED_FUNCTION_21_3();
  v11(v10);
  OUTLINED_FUNCTION_139();
  v12();
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConduitApprovalDelegate.cancelSplitSessionApproval()(char *a1)
{
  void (*v10)(void *__return_ptr);
  char *v11;
  void *v12;
  int v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  void v27[3];
  uint64_t v28;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SystemUpdateNotice?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for SystemUpdateNotice(0);
  MEMORY[0x1F4188790](updated);
  uint64_t v7 = (char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_9;
  }
  uint64_t v8 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator];
  uint64_t v9 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v10 = *(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v8) + 0x88);
  uint64_t v11 = a1;
  os_log_type_t v12 = v8;
  v10(v27);

  if (!v28)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v27, &demangling cache variable for type metadata for Notice?);
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, updated);
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  id v13 = swift_dynamicCast();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, v13 ^ 1u, 1, updated);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, updated) == 1)
  {
LABEL_8:

    outlined destroy of SystemUpdateNotice?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for SystemUpdateNotice?);
LABEL_9:
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)static Logger.conversationControls);
    id v16 = Logger.logObject.getter();
    uint64_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v18 = 0;
      _os_log_impl(&dword_1C2F90000, v16, v17, "[cancelSplitSessionApproval] Not showing approval notice, ignoring", v18, 2u);
      MEMORY[0x1C87760E0](v18, -1, -1);
    }

    return;
  }
  outlined init with take of Collaboration((uint64_t)v4, (uint64_t)v7);
  if (!*((void *)v7 + 2))
  {
    _s15ConversationKit11ParticipantVWOhTm_4();

    goto LABEL_9;
  }
  uint64_t v14 = v12;
  ConversationControlsNoticeCoordinator.dismissAndGetNextNotice(dismissContext:)();

  if (v28)
  {

    outlined destroy of SystemUpdateNotice?((uint64_t)v27, &demangling cache variable for type metadata for Notice?);
LABEL_21:
    _s15ConversationKit11ParticipantVWOhTm_4();
    return;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v27, &demangling cache variable for type metadata for Notice?);
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.conversationControls);
  unint64_t v20 = Logger.logObject.getter();
  uint64_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_1C2F90000, v20, v21, "No more notices, dismissing banner", v22, 2u);
    MEMORY[0x1C87760E0](v22, -1, -1);
  }

  if ((*(uint64_t (**)(void))((*v9 & *(void *)v11) + 0x400))())
  {
    uint64_t v24 = v23;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v24 + 32))(0xD000000000000025, 0x80000001C37A5460, 1, ObjectType, v24);

    swift_unknownObjectRelease();
    goto LABEL_21;
  }
  _s15ConversationKit11ParticipantVWOhTm_4();
}

void ConduitApprovalDelegate.init()()
{
}

uint64_t ConduitLagunaNoticeManager.PushBannerInfo.identifier.getter()
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

id ConduitLagunaNoticeManager.PushBannerInfo.suggestion.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0) + 20));
  return v1;
}

uint64_t ConduitLagunaNoticeManager.PushBannerInfo.isSystemBanner.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0) + 24));
}

uint64_t ConduitLagunaNoticeManager.PushBannerInfo.isSystemBanner.setter(char a1)
{
  uint64_t result = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*ConduitLagunaNoticeManager.PushBannerInfo.isSystemBanner.modify())(void)
{
  uint64_t v0 = OUTLINED_FUNCTION_49_2();
  type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(v0);
  return TPNumberPadCharacter.rawValue.getter;
}

void ConduitLagunaNoticeManager.PushBannerInfo.description.getter()
{
  uint64_t v1 = v0;
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease();
  type metadata accessor for UUID();
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x7473656767757320;
  v3._object = (void *)0xEC0000003A6E6F69;
  String.append(_:)(v3);
  uint64_t v4 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  id v5 = objc_msgSend(*(id *)(v0 + *(int *)(v4 + 20)), sel_description, 0x696669746E656469, 0xEB000000003A7265);
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  v9._uint64_t countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47();
  v10._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v10);
  if (*(unsigned char *)(v1 + *(int *)(v4 + 24))) {
    uint64_t v11 = 1702195828;
  }
  else {
    uint64_t v11 = 0x65736C6166;
  }
  if (*(unsigned char *)(v1 + *(int *)(v4 + 24))) {
    unint64_t v12 = 0xE400000000000000;
  }
  else {
    unint64_t v12 = 0xE500000000000000;
  }
  unint64_t v13 = v12;
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_12_2();
}

uint64_t default argument 2 of ConduitLagunaNoticeManager.PushBannerInfo.init(identifier:suggestion:isSystemBanner:)()
{
  return 0;
}

uint64_t ConduitLagunaNoticeManager.PushBannerInfo.init(identifier:suggestion:isSystemBanner:)@<X0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X8>)
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = OUTLINED_FUNCTION_39();
  v7(v6);
  uint64_t result = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  *(void *)(a3 + *(int *)(result + 20)) = a1;
  *(unsigned char *)(a3 + *(int *)(result + 24)) = a2;
  return result;
}

uint64_t ConduitLagunaNoticeManager.pushBannerInfo.getter()
{
  return ConduitLagunaNoticeManager.pushBannerInfo.getter(&OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo, (uint64_t)&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?, (uint64_t (*)(uint64_t))outlined init with copy of Participant?);
}

uint64_t key path getter for ConduitLagunaNoticeManager.pushBannerInfo : ConduitLagunaNoticeManager@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo;
  swift_beginAccess();
  return outlined init with copy of Participant?(v3, a2, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
}

uint64_t key path setter for ConduitLagunaNoticeManager.pushBannerInfo : ConduitLagunaNoticeManager(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Participant?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  return ConduitLagunaNoticeManager.pushBannerInfo.setter((uint64_t)v4);
}

uint64_t ConduitLagunaNoticeManager.pushBannerInfo.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_6_1();
  uint64_t v2 = OUTLINED_FUNCTION_34_9();
  outlined assign with copy of ConduitLagunaNoticeManager.PushBannerInfo?(v2, v3);
  swift_endAccess();
  ConduitLagunaNoticeManager.pushBannerInfo.didset();
  return outlined destroy of SystemUpdateNotice?(a1, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
}

void ConduitLagunaNoticeManager.pushBannerInfo.didset()
{
  uint64_t v1 = (void *)MEMORY[0x1C8776240](v0 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager);
  if (v1)
  {
    id v2 = v1;
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x960))();
  }
}

id ConduitLagunaNoticeManager.init(_:queue:callCenter:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  uint64_t v8 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo];
  uint64_t v9 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  OUTLINED_FUNCTION_25_1(v8, v10, v11, v9);
  swift_unknownObjectWeakAssign();
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_queue] = a2;
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_callCenter] = a3;
  v14.receiver = v3;
  v14.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, sel_init);

  return v12;
}

void ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:splitSessionStarted:)()
{
  OUTLINED_FUNCTION_31();
  ConduitLagunaNoticeManager.updateState()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  uint64_t v1 = MEMORY[0x1C8776240](v0 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager);
  uint64_t v2 = OUTLINED_FUNCTION_20();
  *(void *)(v2 + 16) = v1;
  v9[4] = partial apply for closure #1 in ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:splitSessionStarted:);
  v9[5] = v2;
  v9[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  _OWORD v9[2] = thunk for @escaping @callee_guaranteed () -> ();
  void v9[3] = &block_descriptor_206;
  uint64_t v3 = _Block_copy(v9);
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_1();
  v9[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAED0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_172();
  _Block_release(v3);

  uint64_t v6 = OUTLINED_FUNCTION_21_3();
  v7(v6);
  OUTLINED_FUNCTION_139();
  v8();
  OUTLINED_FUNCTION_28();
}

uint64_t ConduitLagunaNoticeManager.updateState()()
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v15 = static OS_dispatch_queue.main.getter();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  aBlock[4] = partial apply for closure #1 in ConduitLagunaNoticeManager.updateState();
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_406;
  uint64_t v2 = _Block_copy(aBlock);
  id v3 = v0;
  swift_release();
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAED0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v12 = (void *)v15;
  MEMORY[0x1C8773BA0](0, v7, v11, v2);
  _Block_release(v2);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void closure #1 in ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:splitSessionStarted:)(void *a1)
{
  if (a1)
  {
    uint64_t v1 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x400);
    uint64_t v5 = a1;
    if (v1())
    {
      uint64_t v3 = v2;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(0xD000000000000016, 0x80000001C37A5420, 1, ObjectType, v3);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:suggestionUpdated:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v28 = static OS_dispatch_queue.main.getter();
  uint64_t v5 = type metadata accessor for DispatchTime();
  uint64_t v26 = v5;
  OUTLINED_FUNCTION_5_3();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v23 - v10;
  static DispatchTime.now()();
  MEMORY[0x1C8772E20](v11, 1.0);
  id v12 = *(void (**)(void, void))(v7 + 8);
  uint64_t v25 = v7 + 8;
  uint64_t v27 = v12;
  v12(v11, v5);
  uint64_t v13 = OUTLINED_FUNCTION_20();
  *(void *)(v13 + 16) = v4;
  v29[4] = partial apply for closure #1 in ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:suggestionUpdated:);
  v29[5] = v13;
  v29[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v29[2] = thunk for @escaping @callee_guaranteed () -> ();
  v29[3] = &block_descriptor_212;
  uint64_t v14 = _Block_copy(v29);
  id v15 = v4;
  swift_release();
  uint64_t v24 = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_5_1();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_118();
  v29[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAED0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v20 = (void *)v28;
  MEMORY[0x1C8773B10](v1, v2, v3, v14);
  _Block_release(v14);

  OUTLINED_FUNCTION_1_19();
  v21();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v2, v24);
  OUTLINED_FUNCTION_26_2();
  v22();
  OUTLINED_FUNCTION_28();
}

void ConduitLagunaNoticeManager.conversationManager(_:stateChangedFor:fromOldConversation:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  uint64_t v6 = MEMORY[0x1C8776240](&v0[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager]);
  uint64_t v7 = (void *)OUTLINED_FUNCTION_12_6();
  v7[2] = v6;
  v7[3] = v5;
  v7[4] = v3;
  v7[5] = v1;
  v17[4] = partial apply for closure #1 in ConduitLagunaNoticeManager.conversationManager(_:stateChangedFor:fromOldConversation:);
  v17[5] = v7;
  v17[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  _DWORD v17[2] = thunk for @escaping @callee_guaranteed () -> ();
  v17[3] = &block_descriptor_218;
  uint64_t v8 = _Block_copy(v17);
  id v9 = v5;
  id v10 = v3;
  id v11 = v1;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_5_1();
  v17[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAED0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_300();
  _Block_release(v8);

  uint64_t v14 = OUTLINED_FUNCTION_21_3();
  v15(v14);
  OUTLINED_FUNCTION_139();
  v16();
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConduitLagunaNoticeManager.conversationManager(_:stateChangedFor:fromOldConversation:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  if (a1)
  {
    id v38 = a3;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v41 = v33;
    uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
    MEMORY[0x1F4188790](v7 - 8);
    unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
    id v10 = &v33[-v9];
    id v11 = a1;
    id v39 = a2;
    id v12 = objc_msgSend(a2, sel_UUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = type metadata accessor for UUID();
    uint64_t v14 = 1;
    uint64_t v15 = __swift_storeEnumTagSinglePayload((uint64_t)&v33[-v9], 0, 1, v13);
    uint64_t v40 = v33;
    uint64_t v16 = MEMORY[0x1F4188790](v15);
    uint64_t v17 = &v33[-v9];
    uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v11) + 0x290))(v16);
    if (v18)
    {
      uint64_t v19 = v18;
      id v20 = objc_msgSend(v18, sel_UUID);

      static UUID._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = 0;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)&v33[-v9], v14, 1, v13);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
    uint64_t v24 = &v33[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v25 = (uint64_t)&v24[*(int *)(v22 + 56)];
    outlined init with copy of Participant?((uint64_t)v10, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of Participant?((uint64_t)v17, v25, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v13);
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload(v25, 1, v13) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        goto LABEL_11;
      }
    }
    else
    {
      MEMORY[0x1F4188790](EnumTagSinglePayload);
      uint64_t v27 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
      outlined init with copy of Participant?((uint64_t)v24, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v28 = __swift_getEnumTagSinglePayload(v25, 1, v13);
      if (v28 != 1)
      {
        uint64_t v36 = v33;
        uint64_t v37 = a4;
        uint64_t v29 = *(void *)(v13 - 8);
        MEMORY[0x1F4188790](v28);
        unint64_t v35 = v33;
        char v31 = &v33[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v29 + 32))(v31, v25, v13);
        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
        int v34 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v32 = *(void (**)(unsigned char *, uint64_t))(v29 + 8);
        v32(v31, v13);
        outlined destroy of SystemUpdateNotice?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of SystemUpdateNotice?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v32(v27, v13);
        outlined destroy of SystemUpdateNotice?((uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        if (v34)
        {
LABEL_11:
          if (objc_msgSend(v39, sel_state) == (id)4 && objc_msgSend(v38, sel_state) != (id)4) {
            ConduitLagunaNoticeManager.updateState()();
          }
        }
LABEL_14:

        return;
      }
      outlined destroy of SystemUpdateNotice?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v13 - 8) + 8))(v27, v13);
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_14;
  }
}

void ConduitLagunaNoticeManager.conversationManager(_:remoteMembersChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  uint64_t v3 = MEMORY[0x1C8776240](v0 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager);
  uint64_t v4 = OUTLINED_FUNCTION_26();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  v12[4] = partial apply for closure #1 in ConduitLagunaNoticeManager.conversationManager(_:remoteMembersChangedFor:);
  uint64_t v12[5] = v4;
  v12[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v12[2] = thunk for @escaping @callee_guaranteed () -> ();
  v12[3] = &block_descriptor_224;
  uint64_t v5 = _Block_copy(v12);
  id v6 = v2;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_5_1();
  v12[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAED0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_172();
  _Block_release(v5);

  uint64_t v9 = OUTLINED_FUNCTION_21_3();
  v10(v9);
  OUTLINED_FUNCTION_139();
  v11();
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConduitLagunaNoticeManager.conversationManager(_:remoteMembersChangedFor:)(void *a1, void *a2)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 600))() & 1) != 0 && a1)
  {
    uint64_t v4 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x290);
    uint64_t v25 = a1;
    uint64_t v5 = v4();
    if (v5)
    {
      id v6 = (void *)v5;
      id v7 = objc_msgSend(a2, sel_UUID);
      uint64_t v8 = type metadata accessor for UUID();
      v24[1] = v24;
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(void *)(v9 + 64);
      MEMORY[0x1F4188790](v8);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v11 = objc_msgSend(v6, sel_UUID);
      MEMORY[0x1F4188790](v11);
      id v12 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v1ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = static UUID.== infix(_:_:)();
      uint64_t v13 = *(void (**)(char *, uint64_t))(v9 + 8);
      v13(v12, v8);
      v13(v12, v8);
      if ((v11 & 1) != 0 && objc_msgSend(a2, sel_isContinuitySession))
      {
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v14 = type metadata accessor for Logger();
        __swift_project_value_buffer(v14, (uint64_t)static Logger.conversationControls);
        uint64_t v15 = Logger.logObject.getter();
        os_log_type_t v16 = static os_log_type_t.default.getter();
        BOOL v17 = os_log_type_enabled(v15, v16);
        uint64_t v18 = (void *)MEMORY[0x1E4FBC8C8];
        if (v17)
        {
          uint64_t v19 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v19 = 0;
          _os_log_impl(&dword_1C2F90000, v15, v16, "Updating presentation banner for laguna pull back banner", v19, 2u);
          MEMORY[0x1C87760E0](v19, -1, -1);
        }

        (*(void (**)(void))((*v18 & *v25) + 0x270))();
        ConversationControlsManager.controlsHUDUpdate(for:)(v20, (uint64_t)v26);
        swift_unknownObjectRelease();
        if ((*(uint64_t (**)(void))((*v18 & *v25) + 0x400))())
        {
          uint64_t v22 = v21;
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 16))(v26, v26[41], ObjectType, v22);
          swift_unknownObjectRelease();

          outlined destroy of ControlsHUDUpdate((uint64_t)v26);
        }
        else
        {
          outlined destroy of ControlsHUDUpdate((uint64_t)v26);
        }
      }
      else
      {
      }
    }
    else
    {
    }
  }
}

uint64_t ConduitLagunaNoticeManager.teardownBanner()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v7 = (char *)&v32 - v6;
  uint64_t v8 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBE8], v11);
  char v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v16 = v1 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo;
  swift_beginAccess();
  outlined init with copy of Participant?(v16, (uint64_t)v7, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)v7, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  }
  outlined init with take of Collaboration((uint64_t)v7, (uint64_t)v10);
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_12;
  }
LABEL_5:
  uint64_t v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)static Logger.conversationControls);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_1C2F90000, v19, v20, "teardownBanner", v21, 2u);
    MEMORY[0x1C87760E0](v21, -1, -1);
  }

  uint64_t v22 = (void *)MEMORY[0x1C8776240](v1 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v22) + 0x3E8))();
    uint64_t v26 = v25;

    if (v24)
    {
      uint64_t ObjectType = swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1C3769620;
      uint64_t v29 = *(void **)&v10[*(int *)(v8 + 20)];
      *(void *)(v28 + 32) = v29;
      *(unsigned char *)(v28 + 72) = 2;
      uint64_t v30 = *(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v26 + 32);
      id v31 = v29;
      v30(v28, 0x6E776F6472616574, 0xEE0072656E6E6142, 1, ObjectType, v26);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v8);
  ConduitLagunaNoticeManager.pushBannerInfo.setter((uint64_t)v5);
  return _s15ConversationKit11ParticipantVWOhTm_4();
}

uint64_t ConduitLagunaNoticeManager.presentBanner(for:)(id a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  uint64_t v69 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v64 - v11;
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBE8], v13);
  char v17 = _dispatchPreconditionTest(_:)();
  uint64_t v19 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  uint64_t v18 = (void *)(v14 + 8);
  v19(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_24:
    swift_once();
    goto LABEL_11;
  }
  uint64_t v71 = v2 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager;
  os_log_type_t v20 = (void *)MEMORY[0x1C8776240]();
  uint64_t v18 = (void *)MEMORY[0x1E4FBC8C8];
  if (v20
    && (uint64_t v21 = v20,
        uint64_t v22 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v20) + 0x430))(),
        uint64_t v24 = v23,
        v21,
        v22))
  {
    uint64_t ObjectType = swift_getObjectType();
    char v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 72))(ObjectType, v24);
    swift_unknownObjectRelease();
  }
  else
  {
    char v26 = 1;
  }
  UUID.init()();
  uint64_t v27 = *(int *)(v7 + 20);
  *(void *)&v12[v27] = a1;
  v12[*(int *)(v7 + 24)] = v26 & 1;
  _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v12, (uint64_t)v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  a1 = a1;
  ConduitLagunaNoticeManager.pushBannerInfo.setter((uint64_t)v6);
  if ((v26 & 1) == 0)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    __swift_project_value_buffer(v43, (uint64_t)static Logger.conversationControls);
    BOOL v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl(&dword_1C2F90000, v44, v45, "presentBanner - HUD controls cannot be dismissed so skipping banner presentation", v46, 2u);
      MEMORY[0x1C87760E0](v46, -1, -1);
    }

    return _s15ConversationKit11ParticipantVWOhTm_4();
  }
  uint64_t v67 = v27;
  uint64_t v28 = (void *)MEMORY[0x1C8776240](v71);
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = (*(uint64_t (**)(void))((*v18 & *v28) + 0x430))();
    uint64_t v32 = v31;

    if (v30)
    {
      uint64_t v33 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v32 + 88))(v33, v32);
      swift_unknownObjectRelease();
    }
  }
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_24;
  }
LABEL_11:
  uint64_t v34 = type metadata accessor for Logger();
  __swift_project_value_buffer(v34, (uint64_t)static Logger.conversationControls);
  unint64_t v35 = a1;
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v68 = v10;
  long long v66 = v35;
  if (v38)
  {
    id v39 = (uint8_t *)swift_slowAlloc();
    long long v65 = (void *)swift_slowAlloc();
    *(_DWORD *)id v39 = 138412290;
    v72[0] = v35;
    uint64_t v40 = v12;
    uint64_t v41 = v35;
    uint64_t v18 = (void *)MEMORY[0x1E4FBC8C8];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v42 = v65;
    *long long v65 = v35;

    uint64_t v12 = v40;
    _os_log_impl(&dword_1C2F90000, v36, v37, "presentBanner - presenting suggestion banner for suggestion: %@", v39, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v42, -1, -1);
    MEMORY[0x1C87760E0](v39, -1, -1);
  }
  else
  {

    uint64_t v36 = v35;
  }

  unint64_t v47 = (void *)MEMORY[0x1C8776240](v71);
  if (v47)
  {
    uint64_t v48 = v47;
    uint64_t v49 = (*(uint64_t (**)(void))((*v18 & *v47) + 0x3E8))();
    uint64_t v51 = v50;

    if (v49)
    {
      uint64_t v52 = swift_getObjectType();
      uint64_t v53 = *(void **)&v12[v67];
      uint64_t v71 = v52;
      v72[0] = v53;
      char v73 = 2;
      uint64_t v54 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v55 = (uint64_t)v68;
      _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v12, (uint64_t)v68);
      unint64_t v56 = (*(unsigned __int8 *)(v69 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      unint64_t v57 = (v70 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v58 = swift_allocObject();
      outlined init with take of Collaboration(v55, v58 + v56);
      uint64_t v59 = v66;
      *(void *)(v58 + v57) = v66;
      *(void *)(v58 + ((v57 + 15) & 0xFFFFFFFFFFFFFFF8)) = v54;
      uint64_t v60 = *(void (**)(void, void *, uint64_t (*)(char, void *), uint64_t, uint64_t, uint64_t))(v51 + 16);
      uint64_t v61 = v59;
      id v62 = v53;
      swift_retain();
      v60(0, v72, partial apply for closure #1 in ConduitLagunaNoticeManager.presentBanner(for:), v58, v71, v51);
      swift_unknownObjectRelease();
      swift_release();
      outlined destroy of ConversationControlsType((uint64_t)v72);
      _s15ConversationKit11ParticipantVWOhTm_4();
      return swift_release();
    }
  }
  return _s15ConversationKit11ParticipantVWOhTm_4();
}

uint64_t closure #1 in ConduitLagunaNoticeManager.presentBanner(for:)(char a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10 - 8);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v31 = static OS_dispatch_queue.main.getter();
  _s15ConversationKit11ParticipantVWOcTm_6(a3, (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  outlined init with take of Collaboration((uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v13);
  *(void *)(v15 + v14) = a4;
  unint64_t v16 = v15 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v16 = a5;
  *(unsigned char *)(v16 + 8) = a1;
  aBlock[4] = partial apply for closure #1 in closure #1 in ConduitLagunaNoticeManager.presentBanner(for:);
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_418;
  char v17 = _Block_copy(aBlock);
  id v18 = a2;
  id v19 = a4;
  swift_retain();
  swift_release();
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v30 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAED0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v28 = (void *)v31;
  MEMORY[0x1C8773BA0](0, v23, v27, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
}

void closure #1 in closure #1 in ConduitLagunaNoticeManager.presentBanner(for:)(void *a1, uint64_t a2, void *a3, uint64_t a4, int a5)
{
  int v56 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v59 = (uint64_t)&v52 - v13;
  uint64_t v14 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v55 = (uint64_t)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v52 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v52 - v20;
  uint64_t v22 = a4 + 16;
  if (a1)
  {
    uint64_t v58 = a4 + 16;
    id v23 = a1;
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.conversationControls);
    _s15ConversationKit11ParticipantVWOcTm_6(a2, (uint64_t)v21);
    id v25 = a1;
    id v26 = a1;
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v54 = v12;
      uint64_t v52 = (void *)v30;
      uint64_t v53 = (void *)swift_slowAlloc();
      v61[0] = (uint64_t)v53;
      *(_DWORD *)uint64_t v29 = 136315394;
      ConduitLagunaNoticeManager.PushBannerInfo.description.getter();
      uint64_t v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, v61);
      uint64_t v57 = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit11ParticipantVWOhTm_4();
      *(_WORD *)(v29 + 12) = 2112;
      id v33 = a1;
      uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v60 = v34;
      a2 = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v35 = v52;
      void *v52 = v34;

      _os_log_impl(&dword_1C2F90000, v27, v28, "presentBanner - failed to present banner for %s with reason %@", (uint8_t *)v29, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      uint64_t v12 = v54;
      MEMORY[0x1C87760E0](v35, -1, -1);
      uint64_t v36 = v53;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v36, -1, -1);
      MEMORY[0x1C87760E0](v29, -1, -1);
    }
    else
    {

      _s15ConversationKit11ParticipantVWOhTm_4();
    }
    uint64_t v22 = v58;
  }
  else
  {
    uint64_t v57 = a2;
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    __swift_project_value_buffer(v37, (uint64_t)static Logger.conversationControls);
    BOOL v38 = a3;
    id v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v54 = v12;
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 138412290;
      v61[0] = (uint64_t)v38;
      uint64_t v42 = v38;
      uint64_t v58 = v22;
      uint64_t v43 = v14;
      id v44 = v42;
      uint64_t v12 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      os_log_type_t v45 = v53;
      *uint64_t v53 = v38;

      uint64_t v14 = v43;
      uint64_t v22 = v58;
      _os_log_impl(&dword_1C2F90000, v39, v40, "presentBanner - presented suggestion banner for suggestion: %@", v41, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v45, -1, -1);
      MEMORY[0x1C87760E0](v41, -1, -1);
    }
    else
    {
    }
    a2 = v57;
  }
  swift_beginAccess();
  uint64_t v46 = MEMORY[0x1C8776240](v22);
  if (v46)
  {
    unint64_t v47 = (void *)v46;
    uint64_t v48 = v46 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo;
    swift_beginAccess();
    uint64_t v49 = v48;
    uint64_t v50 = v59;
    outlined init with copy of Participant?(v49, v59, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
    if (__swift_getEnumTagSinglePayload(v50, 1, v14) == 1)
    {

      outlined destroy of SystemUpdateNotice?(v50, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
      return;
    }
    outlined init with take of Collaboration(v50, (uint64_t)v19);
    _s15ConversationKit11ParticipantVWOcTm_6(a2, v55);
    if (v56)
    {
      _s15ConversationKit11ParticipantVWOhTm_4();
    }
    else
    {
      char v51 = static UUID.== infix(_:_:)();
      _s15ConversationKit11ParticipantVWOhTm_4();
      if (v51)
      {
        v19[*(int *)(v14 + 24)] = 0;
        _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v19, (uint64_t)v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
        ConduitLagunaNoticeManager.pushBannerInfo.setter((uint64_t)v12);

        _s15ConversationKit11ParticipantVWOhTm_4();
        return;
      }
    }
    _s15ConversationKit11ParticipantVWOhTm_4();
  }
}

void closure #1 in ConduitLagunaNoticeManager.updateState()(char *a1)
{
  uint64_t v2 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_callCenter];
  id v3 = objc_msgSend(v2, sel_neighborhoodActivityConduit);
  id v4 = objc_msgSend(v3, sel_activeSplitSessionTV);

  if (v4)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationControls);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v6, v7)) {
      goto LABEL_19;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    uint64_t v9 = "updateState - called but in split session, so tearing down any banners";
LABEL_18:
    _os_log_impl(&dword_1C2F90000, v6, v7, v9, v8, 2u);
    MEMORY[0x1C87760E0](v8, -1, -1);
LABEL_19:

    ConduitLagunaNoticeManager.teardownBanner()();
    return;
  }
  uint64_t v10 = (void *)MEMORY[0x1C8776240](&a1[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager]);
  if (!v10
    || (uint64_t v11 = v10, v72 = (id)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x290))(), v11, !v72))
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    __swift_project_value_buffer(v29, (uint64_t)static Logger.conversationControls);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v6, v7)) {
      goto LABEL_19;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    uint64_t v9 = "updateState - called but no conversation, _head scratch_";
    goto LABEL_18;
  }
  if (objc_msgSend(v72, sel_state) == (id)3)
  {
    id v12 = objc_msgSend(v2, sel_neighborhoodActivityConduit);
    id v13 = objc_msgSend(v12, sel_suggestion);

    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)static Logger.conversationControls);
    id v15 = v13;
    uint64_t v16 = a1;
    id v17 = v15;
    uint64_t v18 = v16;
    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    uint64_t v21 = &static BezelMetrics.forCurrentDisplay;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = 7104878;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v74[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315394;
      if (v17)
      {
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUNearbySuggestion);
        id v25 = v17;
        uint64_t v26 = String.init<A>(reflecting:)();
        unint64_t v28 = v27;
      }
      else
      {
        unint64_t v28 = 0xE300000000000000;
        uint64_t v26 = 7104878;
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v28, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v38 = (uint64_t)&v18[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo];
      swift_beginAccess();
      uint64_t v39 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
      if (__swift_getEnumTagSinglePayload(v38, 1, v39))
      {
        unint64_t v40 = 0xE300000000000000;
      }
      else
      {
        id v73 = *(id *)(v38 + *(int *)(v39 + 20));
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUNearbySuggestion);
        id v41 = v73;
        uint64_t v22 = String.init<A>(reflecting:)();
        unint64_t v40 = v42;
      }
      id v73 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v40, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v19, v20, "updateState - Suggestion: %s \n currentDeviceNotice: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v24, -1, -1);
      MEMORY[0x1C87760E0](v23, -1, -1);

      uint64_t v21 = &static BezelMetrics.forCurrentDisplay;
    }
    else
    {
    }
    uint64_t v43 = (uint64_t)&v18[*((void *)v21 + 66)];
    swift_beginAccess();
    uint64_t v44 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
    if (__swift_getEnumTagSinglePayload(v43, 1, v44))
    {
      if (v17)
      {
        id v45 = v17;
        uint64_t v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = (void *)swift_slowAlloc();
          id v73 = v49;
          *(_DWORD *)uint64_t v48 = 136315138;
          type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUNearbySuggestion);
          id v50 = v45;
          uint64_t v51 = String.init<A>(reflecting:)();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v52, (uint64_t *)&v73);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v46, v47, "updateState - Present banner for: %s", v48, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v49, -1, -1);
          MEMORY[0x1C87760E0](v48, -1, -1);
        }
        else
        {
        }
        ConduitLagunaNoticeManager.presentBanner(for:)(v45);
        goto LABEL_63;
      }
      uint64_t v59 = Logger.logObject.getter();
      os_log_type_t v60 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v61 = 0;
        _os_log_impl(&dword_1C2F90000, v59, v60, "updateState - Suggestion is still nil.", v61, 2u);
        MEMORY[0x1C87760E0](v61, -1, -1);
      }

LABEL_60:
      return;
    }
    uint64_t v53 = *(void **)(v43 + *(int *)(v44 + 20));
    if (!v17)
    {
      id v62 = v53;
      double v63 = Logger.logObject.getter();
      os_log_type_t v64 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v63, v64))
      {
        long long v65 = (uint8_t *)swift_slowAlloc();
        long long v66 = (void *)swift_slowAlloc();
        id v73 = v66;
        *(_DWORD *)long long v65 = 136315138;
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUNearbySuggestion);
        id v67 = v62;
        uint64_t v68 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69, (uint64_t *)&v73);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v63, v64, "updateState - Teardown banner for: %s", v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v66, -1, -1);
        MEMORY[0x1C87760E0](v65, -1, -1);
      }
      else
      {
      }
      ConduitLagunaNoticeManager.teardownBanner()();

      goto LABEL_60;
    }
    id v45 = v17;
    id v54 = v53;
    unsigned __int8 v55 = objc_msgSend(v54, sel_isEqual_, v45);
    int v56 = Logger.logObject.getter();
    if (v55)
    {
      os_log_type_t v57 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v58 = 0;
        _os_log_impl(&dword_1C2F90000, v56, v57, "updateState - suggestion unchanged", v58, 2u);
        MEMORY[0x1C87760E0](v58, -1, -1);

        goto LABEL_60;
      }
    }
    else
    {
      os_log_type_t v70 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v56, v70))
      {
        uint64_t v71 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v71 = 0;
        _os_log_impl(&dword_1C2F90000, v56, v70, "updateState - new suggestion, update banner", v71, 2u);
        MEMORY[0x1C87760E0](v71, -1, -1);
      }

      ConduitLagunaNoticeManager.presentBanner(for:)(v45);
    }

LABEL_63:
    return;
  }
  if (objc_msgSend(v72, sel_state) == (id)4)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    __swift_project_value_buffer(v30, (uint64_t)static Logger.conversationControls);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      id v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v33 = 0;
      _os_log_impl(&dword_1C2F90000, v31, v32, "updateState - called but in leaving conversation, so tearing down", v33, 2u);
      MEMORY[0x1C87760E0](v33, -1, -1);
    }

    ConduitLagunaNoticeManager.teardownBanner()();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    __swift_project_value_buffer(v34, (uint64_t)static Logger.conversationControls);
    unint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl(&dword_1C2F90000, v35, v36, "updateState - called but not in a joined conversation. Ignore", v37, 2u);
      MEMORY[0x1C87760E0](v37, -1, -1);
    }
  }
}

void ConduitLagunaNoticeManager.rejectSuggestion(_:)(void *a1)
{
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUNearbySuggestionResult);
  id v3 = a1;
  id v4 = TUNearbySuggestionResult.__allocating_init(suggestion:selectedActivity:type:)(v3, 0, 3);
  id v5 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_callCenter), sel_neighborhoodActivityConduit);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  v9[4] = partial apply for closure #1 in ConduitLagunaNoticeManager.rejectSuggestion(_:);
  v9[5] = v6;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  _OWORD v9[2] = thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
  void v9[3] = &block_descriptor_497;
  os_log_type_t v7 = _Block_copy(v9);
  id v8 = v3;
  swift_release();
  objc_msgSend(v5, sel_respondToSuggestionWithResult_completion_, v4, v7);
  _Block_release(v7);
}

id TUNearbySuggestionResult.__allocating_init(suggestion:selectedActivity:type:)(void *a1, void *a2, uint64_t a3)
{
  id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithSuggestion_selectedActivity_type_, a1, a2, a3);

  return v5;
}

void closure #1 in ConduitLagunaNoticeManager.rejectSuggestion(_:)(char a1, void *a2, void *a3)
{
  if ((a1 & 1) == 0)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationControls);
    id v6 = a3;
    id v7 = a2;
    id v8 = v6;
    id v9 = a2;
    oslog = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      id v12 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 138412546;
      id v13 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v12 = v8;

      *(_WORD *)(v11 + 12) = 2112;
      if (a2)
      {
        id v14 = a2;
        uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v15 = 0;
      }
      v12[1] = v15;

      _os_log_impl(&dword_1C2F90000, oslog, v10, "rejectSuggestion:%@ failed with error: %@", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v12, -1, -1);
      MEMORY[0x1C87760E0](v11, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t closure #1 in ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  id v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  os_log_type_t v10 = (char *)&v34 - v9;
  uint64_t v11 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v39 = a1;
  if (a1)
  {
    uint64_t v14 = one-time initialization token for conversationControls;
    id v15 = a1;
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)static Logger.conversationControls);
    id v17 = v15;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v34 = v13;
      uint64_t v21 = v20;
      uint64_t v22 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v40 = (uint64_t)v17;
      v41[0] = v23;
      *(_DWORD *)uint64_t v21 = 138412546;
      os_log_type_t v36 = v8;
      uint64_t v37 = a3;
      uint64_t v35 = v11;
      uint64_t v24 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v22 = v39;

      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v25 = SystemBannerDismissalReason.description.getter(v38);
      uint64_t v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v41);
      uint64_t v11 = v35;
      a3 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v8 = v36;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v18, v19, "systemBannerWasDismissed - deviceHandle: %@ - reason: %s", (uint8_t *)v21, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v22, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v23, -1, -1);
      uint64_t v27 = v21;
      id v13 = v34;
      MEMORY[0x1C87760E0](v27, -1, -1);

      goto LABEL_12;
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.conversationControls);
    id v17 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_1C2F90000, v17, v29, "systemBannerWasDismissed - different banner type was dismissed", v30, 2u);
      MEMORY[0x1C87760E0](v30, -1, -1);
    }
  }

LABEL_12:
  uint64_t v31 = a3 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo;
  swift_beginAccess();
  outlined init with copy of Participant?(v31, (uint64_t)v10, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  }
  outlined init with take of Collaboration((uint64_t)v10, (uint64_t)v13);
  if (v39)
  {
    if (v38 == 1)
    {
      id v33 = v39;
      ConduitLagunaNoticeManager.rejectSuggestion(_:)(v33);
    }
  }
  v13[*(int *)(v11 + 24)] = 0;
  _s15ConversationKit11ParticipantVWOcTm_6((uint64_t)v13, (uint64_t)v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v11);
  ConduitLagunaNoticeManager.pushBannerInfo.setter((uint64_t)v8);
  return _s15ConversationKit11ParticipantVWOhTm_4();
}

void closure #1 in ConduitLagunaNoticeManager.pushSession(lightweightHandoff:selectedActivity:completion:)(char a1, void *a2, void *a3, uint64_t a4, void (*a5)(void))
{
  if (a1)
  {
LABEL_8:
    if (!a5) {
      return;
    }
    goto LABEL_9;
  }
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.conversationControls);
  id v10 = a3;
  id v11 = a2;
  id v12 = v10;
  id v13 = a2;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v14, v15))
  {

    goto LABEL_8;
  }
  os_log_type_t v21 = v15;
  uint64_t v16 = swift_slowAlloc();
  id v17 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v16 = 138412802;
  id v18 = v12;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *id v17 = v12;

  *(_WORD *)(v16 + 12) = 1024;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v16 + 18) = 2112;
  if (a2)
  {
    id v19 = a2;
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
  }
  else
  {
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v20 = 0;
  }
  v17[1] = v20;

  _os_log_impl(&dword_1C2F90000, v14, v21, "pushSession for suggestion:%@ as lightweightHandoff:%{BOOL}d failed with error: %@", (uint8_t *)v16, 0x1Cu);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
  swift_arrayDestroy();
  MEMORY[0x1C87760E0](v17, -1, -1);
  MEMORY[0x1C87760E0](v16, -1, -1);

  if (a5) {
LABEL_9:
  }
    a5(a1 & 1);
}

void ConduitLagunaNoticeManager.init()()
{
}

UIModalPresentationStyle __swiftcall ConversationControlsManager.adaptivePresentationStyle(for:traitCollection:)(UIPresentationController a1, UITraitCollection traitCollection)
{
  return -1;
}

uint64_t specialized Conversation.activities.getter()
{
  id v1 = objc_msgSend(v0, sel_activitySessions);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivitySession);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUConversationActivitySession and conformance NSObject, &lazy cache variable for type metadata for TUConversationActivitySession);
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized _copyCollectionToContiguousArray<A>(_:)(v2);
  swift_bridgeObjectRelease();
  specialized _arrayForceCast<A, B>(_:)();
  uint64_t v4 = v3;
  swift_release();
  TUConversation.collaborations.getter();
  specialized _arrayForceCast<A, B>(_:)();
  swift_bridgeObjectRelease();
  specialized Array.append<A>(contentsOf:)();
  return v4;
}

BOOL specialized Conversation.canDisplayScreenSharingRequest.getter()
{
  return objc_msgSend(v0, sel_avMode) == (id)2 || objc_msgSend(v0, sel_avMode) == (id)1;
}

uint64_t specialized closure #1 in Sequence<>.contains(_:)(uint64_t a1, uint64_t a2)
{
  return specialized closure #1 in Sequence<>.contains(_:)(a1, a2, MEMORY[0x1F418BC30], (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]) & 1;
}

{
  return specialized closure #1 in Sequence<>.contains(_:)(a1, a2, MEMORY[0x1F418BF68], &lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, MEMORY[0x1F418BFB8]) & 1;
}

uint64_t specialized closure #1 in Sequence<>.contains(_:)(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

BOOL specialized closure #1 in Sequence<>.contains(_:)(int a1, int a2)
{
  return ((a1 ^ a2) & 1) == 0;
}

void specialized _NativeSet.resize(capacity:)(uint64_t a1)
{
}

{
  specialized _NativeSet.resize(capacity:)(a1, &demangling cache variable for type metadata for _SetStorage<TUConversationParticipant>);
}

{
  specialized _NativeSet.resize(capacity:)(a1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUScreenSharingRequest>);
}

{
  specialized _NativeSet.resize(capacity:)(a1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUConversationMember>);
}

{
  specialized _NativeSet.resize(capacity:)(a1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<SGURL>);
}

{
  specialized _NativeSet.resize(capacity:)(a1, &demangling cache variable for type metadata for _SetStorage<CNComposeRecipient>);
}

{
  specialized _NativeSet.resize(capacity:)(a1, &demangling cache variable for type metadata for _SetStorage<TUConversationInvitationPreference>);
}

{
  specialized _NativeSet.resize(capacity:)(a1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<CHHandle>);
}

void specialized _NativeSet.resize(capacity:)(uint64_t a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_238(a1, a2);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_164();
  if (v5)
  {
    uint64_t v28 = v2;
    uint64_t v6 = 1 << *(unsigned char *)(v3 + 32);
    uint64_t v7 = v3 + 56;
    if (v6 < 64) {
      uint64_t v8 = ~(-1 << v6);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v3 + 56);
    int64_t v10 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v11 = v4 + 56;
    swift_retain();
    int64_t v12 = 0;
    if (!v9) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      uint64_t v18 = *(void *)(*(void *)(v3 + 48) + 8 * i);
      unint64_t v19 = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40)) & ~(-1 << *(unsigned char *)(v4 + 32));
      if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
      {
        OUTLINED_FUNCTION_36_15();
        while (1)
        {
          OUTLINED_FUNCTION_111();
          if (v24)
          {
            if (v21) {
              break;
            }
          }
          if (v22 == v23) {
            uint64_t v22 = 0;
          }
          if (*(void *)(v11 + 8 * v22) != -1)
          {
            OUTLINED_FUNCTION_37_1();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_38_0();
LABEL_31:
      *(void *)(v11 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      *(void *)(*(void *)(v4 + 48) + 8 * v20) = v18;
      OUTLINED_FUNCTION_68_5();
      if (v9) {
        goto LABEL_6;
      }
LABEL_7:
      if (__OFADD__(v12, 1)) {
        goto LABEL_39;
      }
      if (v12 + 1 >= v10) {
        goto LABEL_33;
      }
      OUTLINED_FUNCTION_305();
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v12);
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = *(void *)(v7 + 8 * v12);
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v10)
            {
LABEL_33:
              swift_release();
              uint64_t v2 = v28;
              OUTLINED_FUNCTION_46_11();
              if (v26 ^ v27 | v24) {
                OUTLINED_FUNCTION_188_0(v25);
              }
              else {
                OUTLINED_FUNCTION_130_0(v25);
              }
              *(void *)(v3 + 16) = 0;
              break;
            }
            unint64_t v16 = *(void *)(v7 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_40;
                }
                if (v12 >= v10) {
                  goto LABEL_33;
                }
                OUTLINED_FUNCTION_304();
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v9 = (v16 - 1) & v16;
    }
  }
  swift_release();
  *uint64_t v2 = v4;
}

void specialized _NativeSet.resize(capacity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_175();
  OUTLINED_FUNCTION_55_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<BezelEffect>);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_164();
  if (v16)
  {
    OUTLINED_FUNCTION_43_11();
    if (!v13) {
      goto LABEL_4;
    }
LABEL_3:
    OUTLINED_FUNCTION_147_0();
    while (1)
    {
      Swift::UInt v22 = *(unsigned __int8 *)(*(void *)(v10 + 48) + v17);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v22);
      Hasher._finalize()();
      OUTLINED_FUNCTION_98_2();
      if (v23)
      {
        OUTLINED_FUNCTION_36_15();
        while (1)
        {
          OUTLINED_FUNCTION_111();
          if (v23)
          {
            if (v25) {
              break;
            }
          }
          OUTLINED_FUNCTION_244();
          if (!v23)
          {
            OUTLINED_FUNCTION_37_1();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_38_0();
LABEL_26:
      *(void *)(v15 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      *(unsigned char *)(*(void *)(v11 + 48) + v24) = v22;
      OUTLINED_FUNCTION_68_5();
      if (v13) {
        goto LABEL_3;
      }
LABEL_4:
      if (__OFADD__(v9, 1)) {
        goto LABEL_34;
      }
      if (v9 + 1 >= v14) {
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_305();
      if (!v19)
      {
        uint64_t v9 = v18 + 1;
        if (v18 + 1 >= v14) {
          goto LABEL_28;
        }
        if (!*(void *)(v12 + 8 * v9))
        {
          uint64_t v9 = v18 + 2;
          if (v18 + 2 >= v14) {
            goto LABEL_28;
          }
          if (!*(void *)(v12 + 8 * v9))
          {
            uint64_t v20 = v18 + 3;
            if (v20 >= v14)
            {
LABEL_28:
              OUTLINED_FUNCTION_46_11();
              if (v27 ^ v28 | v23) {
                OUTLINED_FUNCTION_188_0(v26);
              }
              else {
                OUTLINED_FUNCTION_130_0(v26);
              }
              uint64_t v9 = a9;
              *(void *)(v10 + 16) = 0;
              break;
            }
            if (!*(void *)(v12 + 8 * v20))
            {
              while (1)
              {
                uint64_t v9 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_35;
                }
                if (v9 >= v14) {
                  goto LABEL_28;
                }
                OUTLINED_FUNCTION_304();
                if (v21) {
                  goto LABEL_17;
                }
              }
            }
            uint64_t v9 = v20;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_149_0();
    }
  }
  swift_release();
  *(void *)uint64_t v9 = v11;
  OUTLINED_FUNCTION_183();
}

{
  specialized _NativeSet.resize(capacity:)(a1, (uint64_t)&demangling cache variable for type metadata for _SetStorage<TranscriptionViewModel.CaptionID>, a3, a4, a5, a6, a7, a8, a9);
}

{
  specialized _NativeSet.resize(capacity:)(a1, (uint64_t)&demangling cache variable for type metadata for _SetStorage<CaptionSectioner.CaptionID>, a3, a4, a5, a6, a7, a8, a9);
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::UInt v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;

  OUTLINED_FUNCTION_175();
  OUTLINED_FUNCTION_238(v17, v18);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_164();
  if (v19)
  {
    OUTLINED_FUNCTION_43_11();
    if (!v14) {
      goto LABEL_4;
    }
LABEL_3:
    OUTLINED_FUNCTION_147_0();
    while (1)
    {
      OUTLINED_FUNCTION_310();
      Hasher._combine(_:)(v13);
      Hasher._finalize()();
      OUTLINED_FUNCTION_98_2();
      if (v24)
      {
        OUTLINED_FUNCTION_36_15();
        while (1)
        {
          OUTLINED_FUNCTION_111();
          if (v24)
          {
            if (v26) {
              break;
            }
          }
          OUTLINED_FUNCTION_244();
          if (!v24)
          {
            OUTLINED_FUNCTION_37_1();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_38_0();
LABEL_26:
      *(void *)(v16 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      *(void *)(*(void *)(v11 + 48) + 8 * v25) = v13;
      OUTLINED_FUNCTION_68_5();
      if (v14) {
        goto LABEL_3;
      }
LABEL_4:
      if (__OFADD__(v9, 1)) {
        goto LABEL_34;
      }
      if (v9 + 1 >= v15) {
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_305();
      if (!v21)
      {
        uint64_t v9 = v20 + 1;
        if (v20 + 1 >= v15) {
          goto LABEL_28;
        }
        if (!*(void *)(v12 + 8 * v9))
        {
          uint64_t v9 = v20 + 2;
          if (v20 + 2 >= v15) {
            goto LABEL_28;
          }
          if (!*(void *)(v12 + 8 * v9))
          {
            Swift::UInt v22 = v20 + 3;
            if (v22 >= v15)
            {
LABEL_28:
              OUTLINED_FUNCTION_46_11();
              if (v28 ^ v29 | v24) {
                OUTLINED_FUNCTION_188_0(v27);
              }
              else {
                OUTLINED_FUNCTION_130_0(v27);
              }
              uint64_t v9 = a9;
              *(void *)(v10 + 16) = 0;
              break;
            }
            if (!*(void *)(v12 + 8 * v22))
            {
              while (1)
              {
                uint64_t v9 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_35;
                }
                if (v9 >= v15) {
                  goto LABEL_28;
                }
                OUTLINED_FUNCTION_304();
                if (v23) {
                  goto LABEL_17;
                }
              }
            }
            uint64_t v9 = v22;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_149_0();
    }
  }
  swift_release();
  *(void *)uint64_t v9 = v11;
  OUTLINED_FUNCTION_183();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::UInt v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;

  OUTLINED_FUNCTION_175();
  OUTLINED_FUNCTION_55_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<InCallControlsState>);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_164();
  if (v17)
  {
    OUTLINED_FUNCTION_43_11();
    if (!v14) {
      goto LABEL_4;
    }
LABEL_3:
    OUTLINED_FUNCTION_147_0();
    while (1)
    {
      OUTLINED_FUNCTION_310();
      Hasher._combine(_:)(v13);
      Hasher._finalize()();
      OUTLINED_FUNCTION_98_2();
      if (v22)
      {
        OUTLINED_FUNCTION_36_15();
        while (1)
        {
          OUTLINED_FUNCTION_111();
          if (v22)
          {
            if (v24) {
              break;
            }
          }
          OUTLINED_FUNCTION_244();
          if (!v22)
          {
            OUTLINED_FUNCTION_37_1();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_38_0();
LABEL_26:
      *(void *)(v16 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(void *)(*(void *)(v11 + 48) + 8 * v23) = v13;
      OUTLINED_FUNCTION_68_5();
      if (v14) {
        goto LABEL_3;
      }
LABEL_4:
      if (__OFADD__(v9, 1)) {
        goto LABEL_34;
      }
      if (v9 + 1 >= v15) {
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_305();
      if (!v19)
      {
        uint64_t v9 = v18 + 1;
        if (v18 + 1 >= v15) {
          goto LABEL_28;
        }
        if (!*(void *)(v12 + 8 * v9))
        {
          uint64_t v9 = v18 + 2;
          if (v18 + 2 >= v15) {
            goto LABEL_28;
          }
          if (!*(void *)(v12 + 8 * v9))
          {
            uint64_t v20 = v18 + 3;
            if (v20 >= v15)
            {
LABEL_28:
              OUTLINED_FUNCTION_46_11();
              if (v26 ^ v27 | v22) {
                OUTLINED_FUNCTION_188_0(v25);
              }
              else {
                OUTLINED_FUNCTION_130_0(v25);
              }
              uint64_t v9 = a9;
              *(void *)(v10 + 16) = 0;
              break;
            }
            if (!*(void *)(v12 + 8 * v20))
            {
              while (1)
              {
                uint64_t v9 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_35;
                }
                if (v9 >= v15) {
                  goto LABEL_28;
                }
                OUTLINED_FUNCTION_304();
                if (v21) {
                  goto LABEL_17;
                }
              }
            }
            uint64_t v9 = v20;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_149_0();
    }
  }
  swift_release();
  *(void *)uint64_t v9 = v11;
  OUTLINED_FUNCTION_183();
}

void specialized _NativeSet.resize(capacity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12)
{
  OUTLINED_FUNCTION_26_3();
  OUTLINED_FUNCTION_55_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<UInt64>);
  uint64_t v18 = OUTLINED_FUNCTION_28_22();
  if (*(void *)(v13 + 16))
  {
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_240();
    if (!v12) {
      goto LABEL_4;
    }
LABEL_3:
    OUTLINED_FUNCTION_239();
    while (1)
    {
      OUTLINED_FUNCTION_311();
      static Hasher._hash(seed:_:)();
      OUTLINED_FUNCTION_213();
      if (v21)
      {
        OUTLINED_FUNCTION_36_15();
        while (1)
        {
          OUTLINED_FUNCTION_111();
          if (v21)
          {
            if (v23) {
              break;
            }
          }
          if (v24 == v25) {
            uint64_t v24 = 0;
          }
          if (*(void *)(v16 + 8 * v24) != -1)
          {
            OUTLINED_FUNCTION_37_1();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_38_0();
LABEL_28:
      OUTLINED_FUNCTION_116(v22);
      if (v12) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v19 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_36;
      }
      if (v19 >= v15) {
        goto LABEL_30;
      }
      ++v17;
      if (!v14[v19])
      {
        uint64_t v17 = v19 + 1;
        if (v19 + 1 >= v15) {
          goto LABEL_30;
        }
        if (!v14[v17])
        {
          uint64_t v17 = v19 + 2;
          if (v19 + 2 >= v15) {
            goto LABEL_30;
          }
          if (!v14[v17])
          {
            uint64_t v20 = v19 + 3;
            if (v20 >= v15)
            {
LABEL_30:
              if (a12 > 63) {
                specialized UnsafeMutablePointer.assign(repeating:count:)(0, v15, v14);
              }
              else {
                *uint64_t v14 = a10;
              }
              uint64_t v12 = a11;
              *(void *)(v13 + 16) = 0;
              break;
            }
            if (!v14[v20])
            {
              while (1)
              {
                uint64_t v17 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_37;
                }
                if (v17 >= v15) {
                  goto LABEL_30;
                }
                ++v20;
                if (v14[v17]) {
                  goto LABEL_17;
                }
              }
            }
            uint64_t v17 = v20;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_247();
    }
  }
  swift_release();
  *uint64_t v12 = v18;
  OUTLINED_FUNCTION_16();
}

{
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_26_3();
  OUTLINED_FUNCTION_55_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<UnsafeMutableRawPointer>);
  uint64_t v18 = OUTLINED_FUNCTION_28_22();
  if (*(void *)(v13 + 16))
  {
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_240();
    if (!v12) {
      goto LABEL_4;
    }
LABEL_3:
    OUTLINED_FUNCTION_239();
    while (1)
    {
      OUTLINED_FUNCTION_311();
      static Hasher._hash(seed:_:)();
      OUTLINED_FUNCTION_213();
      if (v21)
      {
        OUTLINED_FUNCTION_36_15();
        while (1)
        {
          OUTLINED_FUNCTION_111();
          if (v21)
          {
            if (v23) {
              break;
            }
          }
          if (v24 == v25) {
            uint64_t v24 = 0;
          }
          if (*(void *)(v16 + 8 * v24) != -1)
          {
            OUTLINED_FUNCTION_37_1();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_38_0();
LABEL_28:
      OUTLINED_FUNCTION_116(v22);
      if (v12) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v19 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_36;
      }
      if (v19 >= v15) {
        goto LABEL_30;
      }
      ++v17;
      if (!v14[v19])
      {
        uint64_t v17 = v19 + 1;
        if (v19 + 1 >= v15) {
          goto LABEL_30;
        }
        if (!v14[v17])
        {
          uint64_t v17 = v19 + 2;
          if (v19 + 2 >= v15) {
            goto LABEL_30;
          }
          if (!v14[v17])
          {
            uint64_t v20 = v19 + 3;
            if (v20 >= v15)
            {
LABEL_30:
              if (a12 > 63) {
                specialized UnsafeMutablePointer.assign(repeating:count:)(0, v15, v14);
              }
              else {
                *uint64_t v14 = a10;
              }
              uint64_t v12 = a11;
              *(void *)(v13 + 16) = 0;
              break;
            }
            if (!v14[v20])
            {
              while (1)
              {
                uint64_t v17 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_37;
                }
                if (v17 >= v15) {
                  goto LABEL_30;
                }
                ++v20;
                if (v14[v17]) {
                  goto LABEL_17;
                }
              }
            }
            uint64_t v17 = v20;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_247();
    }
  }
  swift_release();
  *uint64_t v12 = v18;
  OUTLINED_FUNCTION_16();
}

double UIEdgeInsetsInsetRect_0(double a1)
{
  return a1 + 0.0;
}

uint64_t sub_1C32BB338()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

uint64_t sub_1C32BB368()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:)()
{
  return closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(v0[2], v0[3], v0[4]);
}

uint64_t partial apply for closure #1 in ConversationControlsManager.heldCalls()(void *a1)
{
  return closure #1 in ConversationControlsManager.heldCalls()(a1, v1);
}

uint64_t sub_1C32BB3BC()
{
  return OUTLINED_FUNCTION_7_44();
}

uint64_t partial apply for thunk for @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool)()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t specialized MutableCollection._halfStablePartition(isSuffixElement:)(uint64_t *a1, uint64_t a2)
{
  id v62 = a1;
  uint64_t v4 = *a1;
  os_log_type_t v60 = *(char **)(*a1 + 16);
  if (v60)
  {
    v52[1] = v2;
    uint64_t v5 = v4;
    uint64_t v6 = type metadata accessor for UUID();
    uint64_t v7 = *(char **)(v6 - 8);
    unint64_t v8 = (v7[80] + 32) & ~(unint64_t)v7[80];
    uint64_t v57 = v5 + v8;
    uint64_t v72 = *((void *)v7 + 9);
    unint64_t v59 = v8;
    uint64_t v55 = a2 + v8;
    uint64_t v9 = (uint64_t (**)(void))(v7 + 16);
    uint64_t v68 = v7 + 32;
    double v63 = v7;
    uint64_t v71 = v7 + 8;
    uint64_t v53 = v5;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    uint64_t v58 = a2;
    os_log_type_t v70 = v9;
    uint64_t v11 = v63;
    do
    {
      if (a2)
      {
        os_log_type_t v64 = v10;
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v61 = v52;
        MEMORY[0x1F4188790](v12 - 8);
        uint64_t v56 = v13;
        uint64_t v14 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v15 = *(char **)(a2 + 16);
        if (v15)
        {
          uint64_t v65 = v57 + v72 * (void)v64;
          unint64_t v69 = (void (*)(char *, uint64_t, uint64_t))*v9;
          swift_bridgeObjectRetain_n();
          uint64_t v16 = v55;
          while (1)
          {
            v69(v14, v16, v6);
            __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v6);
            uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v6);
            if (EnumTagSinglePayload == 1) {
              break;
            }
            long long v66 = v15;
            id v67 = (void (*)(char *, uint64_t))v52;
            uint64_t v18 = *((void *)v11 + 8);
            MEMORY[0x1F4188790](EnumTagSinglePayload);
            uint64_t v19 = (void (*)(char *, char *, uint64_t))*((void *)v11 + 4);
            uint64_t v20 = v14;
            v19((char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v6);
            uint64_t v21 = _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
            char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
            char v23 = (void (*)(char *, uint64_t))*((void *)v11 + 1);
            v23((char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
            if (v22)
            {
              uint64_t v65 = v21;
              long long v66 = (char *)v19;
              uint64_t v25 = v53;
              swift_bridgeObjectRelease();
              uint64_t v26 = v58;
              uint64_t result = swift_bridgeObjectRelease_n();
              char v28 = v64;
              os_log_type_t v29 = v64 + 1;
              if (!__OFADD__(v64, 1))
              {
                unint64_t v30 = *(void *)(v25 + 16);
                if (v29 == (char *)v30) {
                  goto LABEL_41;
                }
                id v54 = (uint64_t (**)(uint64_t, char *, uint64_t))(v63 + 40);
                uint64_t v31 = (uint64_t (*)(char *))v69;
                uint64_t v32 = v18;
                id v67 = v23;
                while ((unint64_t)v29 < v30)
                {
                  double v63 = v29;
                  os_log_type_t v64 = v28;
                  uint64_t v61 = v52;
                  uint64_t v57 = (void)v29 * v72;
                  MEMORY[0x1F4188790](result);
                  uint64_t v33 = v31((char *)v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
                  os_log_type_t v60 = (char *)v52;
                  MEMORY[0x1F4188790](v33);
                  uint64_t v35 = (char *)v52 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
                  uint64_t v36 = *(void *)(v26 + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v37 = v55;
                  if (v36)
                  {
                    while (1)
                    {
                      ((void (*)(char *, uint64_t, uint64_t))v31)(v35, v37, v6);
                      __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v6);
                      uint64_t v38 = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, v6);
                      if (v38 == 1) {
                        break;
                      }
                      MEMORY[0x1F4188790](v38);
                      ((void (*)(char *, char *, uint64_t))v66)((char *)v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v6);
                      char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
                      char v23 = v67;
                      v67((char *)v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
                      if (v39)
                      {
                        uint64_t v26 = v58;
                        swift_bridgeObjectRelease();
                        uint64_t result = ((uint64_t (*)(char *, uint64_t))v23)((char *)v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
                        unint64_t v41 = (unint64_t)v63;
                        char v28 = v64;
                        uint64_t v31 = (uint64_t (*)(char *))v69;
                        goto LABEL_37;
                      }
                      v37 += v72;
                      --v36;
                      uint64_t v31 = (uint64_t (*)(char *))v69;
                      if (!v36) {
                        goto LABEL_23;
                      }
                    }
                  }
                  else
                  {
LABEL_23:
                    __swift_storeEnumTagSinglePayload((uint64_t)v35, 1, 1, v6);
                  }
                  uint64_t v26 = v58;
                  swift_bridgeObjectRelease();
                  uint64_t result = ((uint64_t (*)(char *, uint64_t))v23)((char *)v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
                  unint64_t v41 = (unint64_t)v63;
                  uint64_t v40 = v64;
                  if (v64 != v63)
                  {
                    MEMORY[0x1F4188790](result);
                    uint64_t result = (uint64_t)v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
                    if ((v42 & 0x8000000000000000) != 0) {
                      goto LABEL_45;
                    }
                    uint64_t v44 = *v62;
                    unint64_t v45 = *(void *)(*v62 + 16);
                    if (v42 >= v45) {
                      goto LABEL_46;
                    }
                    os_log_type_t v60 = (char *)v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
                    uint64_t v61 = v43;
                    uint64_t v46 = v42 * v72;
                    uint64_t result = ((uint64_t (*)(void))v31)();
                    if (v41 >= v45) {
                      goto LABEL_47;
                    }
                    MEMORY[0x1F4188790](result);
                    v31((char *)v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
                    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
                    *id v62 = v44;
                    if ((result & 1) == 0)
                    {
                      uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
                      uint64_t v44 = result;
                      *id v62 = result;
                    }
                    char v23 = v67;
                    if ((unint64_t)v64 >= *(void *)(v44 + 16)) {
                      goto LABEL_48;
                    }
                    unint64_t v47 = v44 + v59 + v46;
                    uint64_t v48 = *v54;
                    unint64_t v49 = v59;
                    uint64_t result = (*v54)(v47, (char *)v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
                    unint64_t v41 = (unint64_t)v63;
                    uint64_t v50 = *v62;
                    *id v62 = *v62;
                    if (v41 >= *(void *)(v50 + 16)) {
                      goto LABEL_49;
                    }
                    uint64_t result = v48(v50 + v49 + v57, v60, v6);
                    uint64_t v26 = v58;
                    uint64_t v40 = v64;
                  }
                  BOOL v51 = __OFADD__(v40, 1);
                  char v28 = v40 + 1;
                  if (v51) {
                    goto LABEL_44;
                  }
LABEL_37:
                  BOOL v51 = __OFADD__(v41, 1);
                  os_log_type_t v29 = (char *)(v41 + 1);
                  if (v51) {
                    goto LABEL_43;
                  }
                  unint64_t v30 = *(void *)(*v62 + 16);
                  if (v29 == (char *)v30)
                  {
                    os_log_type_t v64 = v28;
                    goto LABEL_41;
                  }
                }
                __break(1u);
LABEL_43:
                __break(1u);
LABEL_44:
                __break(1u);
LABEL_45:
                __break(1u);
LABEL_46:
                __break(1u);
LABEL_47:
                __break(1u);
LABEL_48:
                __break(1u);
LABEL_49:
                __break(1u);
              }
              __break(1u);
              return result;
            }
            v16 += v72;
            uint64_t v15 = v66 - 1;
            uint64_t v9 = v70;
            uint64_t v14 = v20;
            if (v66 == (char *)1) {
              goto LABEL_11;
            }
          }
        }
        else
        {
          swift_bridgeObjectRetain_n();
LABEL_11:
          __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v6);
        }
        a2 = v58;
        swift_bridgeObjectRelease_n();
        uint64_t v10 = v64;
      }
      ++v10;
    }
    while (v10 != v60);
    uint64_t v24 = v53;
    swift_bridgeObjectRelease();
    os_log_type_t v64 = *(char **)(v24 + 16);
  }
  else
  {
    os_log_type_t v64 = 0;
  }
LABEL_41:
  swift_bridgeObjectRelease();
  return (uint64_t)v64;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  __n128 v31;
  char *v32;
  uint64_t (*v33)(char *, uint64_t);
  unint64_t v34;
  uint64_t v35;
  uint64_t result;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void);
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t);
  __n128 v48;
  char *v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t);
  char *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (**v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;

  long long v78 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_3_27();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_87_4();
  os_log_type_t v60 = v7;
  OUTLINED_FUNCTION_81_9();
  MEMORY[0x1F4188790](v8);
  uint64_t v61 = (uint64_t)&v58 - v9;
  OUTLINED_FUNCTION_81_9();
  MEMORY[0x1F4188790](v10);
  double v63 = (char *)&v58 - v11;
  OUTLINED_FUNCTION_81_9();
  MEMORY[0x1F4188790](v12);
  uint64_t v77 = (uint64_t)&v58 - v14;
  os_log_type_t v64 = a1;
  uint64_t v15 = *a1;
  long long v66 = *(void *)(v15 + 16);
  if (!v66)
  {
    uint64_t v34 = 0;
LABEL_9:
    swift_release();
    return v34;
  }
  uint64_t v58 = v2;
  uint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  OUTLINED_FUNCTION_50();
  uint64_t v18 = *(void *)(v17 + 184);
  id v73 = v17 + 184;
  char v74 = v18;
  Swift::String v75 = *(void *)(v19 + 72);
  uint64_t v72 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  uint64_t v21 = *(void (**)(uint64_t))(v20 + 16);
  os_log_type_t v70 = v20 + 16;
  uint64_t v71 = v21;
  char v22 = *(void *)(v20 + 64);
  uint64_t v68 = (uint64_t (**)(char *, uint64_t))(v20 + 8);
  unint64_t v69 = v22;
  char v23 = swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  unint64_t v59 = v16;
  id v67 = a2;
  uint64_t v65 = v15;
  uint64_t v26 = v71;
  uint64_t v25 = v72;
  while (1)
  {
    long long v79 = v24;
    uint64_t v76 = &v58;
    MEMORY[0x1F4188790](v23);
    char v27 = OUTLINED_FUNCTION_99_5((uint64_t)&v58);
    v26(v27);
    char v28 = v77;
    OUTLINED_FUNCTION_32_24();
    unint64_t v30 = v29();
    uint64_t v31 = MEMORY[0x1F4188790](v30);
    uint64_t v32 = (char *)&v58 - v3;
    ((void (*)(char *, __n128))v26)((char *)&v58 - v3, v31);
    outlined destroy of HUDActivityManager.BannerUpdate(v28);
    uint64_t v3 = static UUID.== infix(_:_:)();
    uint64_t v33 = *v68;
    (*v68)(v32, v25);
    char v23 = v33((char *)v15, v25);
    if (v3) {
      break;
    }
    uint64_t v24 = v79 + 1;
    v16 += v75;
    uint64_t v15 = v65;
    if (v66 == v79 + 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void *)(v15 + 16);
      goto LABEL_9;
    }
  }
  uint64_t v35 = v65;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v34 = v79;
  if (!__OFADD__(v79, 1))
  {
    uint64_t v37 = *(void *)(v35 + 16);
    if (v79 + 1 == v37) {
      goto LABEL_9;
    }
    uint64_t v38 = v75 + v16;
    char v39 = v79 + 1;
    id v62 = v33;
    uint64_t v40 = v71;
    while (v39 < v37)
    {
      uint64_t v65 = v39;
      long long v66 = v38;
      long long v79 = v34;
      unint64_t v41 = outlined init with copy of HUDActivityManager.BannerUpdate(v35 + v38, v77);
      uint64_t v76 = &v58;
      MEMORY[0x1F4188790](v41);
      unint64_t v42 = OUTLINED_FUNCTION_99_5((uint64_t)&v58);
      uint64_t v43 = v72;
      v40(v42);
      uint64_t v44 = (uint64_t)v63;
      OUTLINED_FUNCTION_32_24();
      uint64_t v46 = v45();
      unint64_t v47 = v62;
      uint64_t v48 = MEMORY[0x1F4188790](v46);
      unint64_t v49 = (char *)&v58 - v34;
      ((void (*)(char *, __n128))v40)(v49, v48);
      outlined destroy of HUDActivityManager.BannerUpdate(v44);
      uint64_t v50 = static UUID.== infix(_:_:)();
      v47(v49, v43);
      v47((char *)v15, v43);
      uint64_t result = outlined destroy of HUDActivityManager.BannerUpdate(v77);
      if (v50)
      {
        uint64_t v34 = v79;
        unint64_t v52 = v65;
        BOOL v51 = v66;
      }
      else
      {
        uint64_t v53 = v79;
        unint64_t v52 = v65;
        BOOL v51 = v66;
        if (v65 != v79)
        {
          if ((v79 & 0x8000000000000000) != 0) {
            goto LABEL_30;
          }
          id v54 = *v64;
          uint64_t v15 = *(void *)(*v64 + 16);
          if (v79 >= v15) {
            goto LABEL_31;
          }
          uint64_t v55 = v79 * v75;
          uint64_t result = outlined init with copy of HUDActivityManager.BannerUpdate(v54 + v59 + v79 * v75, v61);
          if (v52 >= v15) {
            goto LABEL_32;
          }
          outlined init with copy of HUDActivityManager.BannerUpdate(v54 + v51, v60);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *os_log_type_t v64 = v54;
          if ((result & 1) == 0)
          {
            uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
            id v54 = result;
            *os_log_type_t v64 = result;
          }
          if (v53 >= *(void *)(v54 + 16)) {
            goto LABEL_33;
          }
          uint64_t result = outlined assign with take of HUDActivityManager.BannerUpdate(v60, v54 + v59 + v55);
          if (v52 >= *(void *)(*v64 + 16)) {
            goto LABEL_34;
          }
          uint64_t result = outlined assign with take of HUDActivityManager.BannerUpdate(v61, *v64 + v51);
        }
        uint64_t v56 = __OFADD__(v53, 1);
        uint64_t v34 = v53 + 1;
        if (v56) {
          goto LABEL_29;
        }
      }
      uint64_t v57 = v52 + 1;
      if (__OFADD__(v52, 1)) {
        goto LABEL_28;
      }
      uint64_t v35 = *v64;
      uint64_t v37 = *(void *)(*v64 + 16);
      char v39 = v52 + 1;
      uint64_t v38 = v51 + v75;
      if (v57 == v37) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
  }
  __break(1u);
  return result;
}

void specialized ContiguousArray.append<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v49 = a2;
  uint64_t v8 = type metadata accessor for TranscriptionViewModel.Caption(0);
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  MEMORY[0x1F4188790](v8);
  BOOL v51 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v47 - v16;
  int64_t v18 = a4 >> 1;
  uint64_t v50 = a3;
  BOOL v19 = __OFSUB__(a4 >> 1, a3);
  uint64_t v20 = (a4 >> 1) - a3;
  if (v19)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v48 = v15;
  uint64_t v21 = *v4;
  uint64_t v22 = *(void *)(*v4 + 16);
  uint64_t v23 = v22 + v20;
  if (__OFADD__(v22, v20))
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v21;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v25 = *(void *)(v21 + 24) >> 1, v25 < v23))
  {
    if (v22 <= v23) {
      uint64_t v26 = v22 + v20;
    }
    else {
      uint64_t v26 = v22;
    }
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v26, 1);
    uint64_t v21 = *v4;
    uint64_t v25 = *(void *)(*v4 + 24) >> 1;
  }
  uint64_t v27 = v25 - *(void *)(v21 + 16);
  if (v18 == v50)
  {
    if (v20 <= 0)
    {
      uint64_t v20 = 0;
      uint64_t v28 = v50;
      goto LABEL_17;
    }
    goto LABEL_43;
  }
  if (v27 < v20)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  specialized UnsafeMutablePointer.initialize(from:count:)(v49 + *(void *)(v52 + 72) * v50, v20);
  if (v20 > 0)
  {
    uint64_t v29 = *(void *)(v21 + 16);
    BOOL v19 = __OFADD__(v29, v20);
    uint64_t v30 = v29 + v20;
    if (v19)
    {
LABEL_45:
      __break(1u);
      return;
    }
    *(void *)(v21 + 16) = v30;
  }
  uint64_t v28 = v18;
LABEL_17:
  if (v20 == v27)
  {
    v47[1] = a1;
    int64_t v31 = *(void *)(v21 + 16);
    uint64_t v32 = v53;
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v53);
    uint64_t v33 = v48;
    outlined init with copy of Participant?((uint64_t)v17, v48, (uint64_t *)&demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v33, 1, v32);
    uint64_t v35 = (uint64_t)v51;
    if (EnumTagSinglePayload != 1)
    {
      uint64_t v36 = (uint64_t *)&demangling cache variable for type metadata for TranscriptionViewModel.Caption?;
      do
      {
        uint64_t v37 = v36;
        outlined destroy of SystemUpdateNotice?(v33, v36);
        uint64_t v38 = *v4;
        unint64_t v39 = *(void *)(*v4 + 24);
        int64_t v40 = v39 >> 1;
        if ((uint64_t)(v39 >> 1) < v31 + 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v31 + 1, 1);
          uint64_t v38 = *v4;
          int64_t v40 = *(void *)(*v4 + 24) >> 1;
        }
        swift_retain();
        outlined init with copy of Participant?((uint64_t)v17, (uint64_t)v13, v37);
        if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v53) == 1)
        {
LABEL_37:
          swift_release();
          uint64_t v36 = v37;
          outlined destroy of SystemUpdateNotice?((uint64_t)v13, v37);
        }
        else
        {
          while (1)
          {
            outlined init with take of Collaboration((uint64_t)v13, v35);
            if (v31 >= v40) {
              break;
            }
            outlined destroy of SystemUpdateNotice?((uint64_t)v17, v37);
            uint64_t v41 = v35;
            uint64_t v42 = *(void *)(v52 + 72);
            outlined init with take of Collaboration(v41, v38+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ v42 * v31);
            if (v28 == v18)
            {
              uint64_t v43 = 1;
              uint64_t v28 = v18;
            }
            else
            {
              if (v28 < v50 || v28 >= v18)
              {
                __break(1u);
                goto LABEL_41;
              }
              _s15ConversationKit11ParticipantVWOcTm_6(v49 + v42 * v28, (uint64_t)v17);
              uint64_t v43 = 0;
              ++v28;
            }
            uint64_t v45 = v53;
            __swift_storeEnumTagSinglePayload((uint64_t)v17, v43, 1, v53);
            outlined init with copy of Participant?((uint64_t)v17, (uint64_t)v13, v37);
            int v46 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v45);
            ++v31;
            uint64_t v35 = (uint64_t)v51;
            if (v46 == 1) {
              goto LABEL_37;
            }
          }
          _s15ConversationKit11ParticipantVWOhTm_4();
          swift_release();
          uint64_t v36 = v37;
        }
        *(void *)(*v4 + 16) = v31;
        uint64_t v33 = v48;
        outlined init with copy of Participant?((uint64_t)v17, v48, v36);
      }
      while (__swift_getEnumTagSinglePayload(v33, 1, v53) != 1);
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
    swift_unknownObjectRelease();
    outlined destroy of SystemUpdateNotice?(v33, (uint64_t *)&demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

uint64_t specialized _NativeSet.intersection(_:)(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v6 = (void *)((char *)v12 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v5, v6);
    specialized closure #1 in _NativeSet.intersection(_:)(v6, v5, a2, v3);
    uint64_t v8 = v7;
    swift_release();
  }
  else
  {
    uint64_t v9 = (uint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v5, v9);
    specialized closure #1 in _NativeSet.intersection(_:)(v9, v5, a2, v3);
    uint64_t v8 = v10;
    swift_release();
    MEMORY[0x1C87760E0](v9, -1, -1);
  }
  return v8;
}

void specialized closure #1 in _NativeSet.intersection(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) >= *(void *)(a3 + 16))
  {
    int64_t v34 = 0;
    uint64_t v60 = a3 + 56;
    uint64_t v61 = 0;
    uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    unint64_t v37 = v36 & *(void *)(a3 + 56);
    int64_t v63 = (unint64_t)(v35 + 63) >> 6;
    uint64_t v38 = a4 + 56;
    while (1)
    {
      while (1)
      {
        if (v37)
        {
          unint64_t v39 = __clz(__rbit64(v37));
          v37 &= v37 - 1;
          unint64_t v40 = v39 | (v34 << 6);
        }
        else
        {
          int64_t v41 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          if (v41 >= v63) {
            goto LABEL_79;
          }
          unint64_t v42 = *(void *)(v60 + 8 * v41);
          ++v34;
          if (!v42)
          {
            int64_t v34 = v41 + 1;
            if (v41 + 1 >= v63) {
              goto LABEL_79;
            }
            unint64_t v42 = *(void *)(v60 + 8 * v34);
            if (!v42)
            {
              int64_t v34 = v41 + 2;
              if (v41 + 2 >= v63) {
                goto LABEL_79;
              }
              unint64_t v42 = *(void *)(v60 + 8 * v34);
              if (!v42)
              {
                int64_t v43 = v41 + 3;
                if (v43 >= v63) {
                  goto LABEL_79;
                }
                unint64_t v42 = *(void *)(v60 + 8 * v43);
                if (!v42)
                {
                  while (1)
                  {
                    int64_t v34 = v43 + 1;
                    if (__OFADD__(v43, 1)) {
                      goto LABEL_85;
                    }
                    if (v34 >= v63) {
                      break;
                    }
                    unint64_t v42 = *(void *)(v60 + 8 * v34);
                    ++v43;
                    if (v42) {
                      goto LABEL_61;
                    }
                  }
LABEL_79:
                  swift_retain();
                  specialized _NativeSet.extractSubset(using:count:)(a1, a2, v61, v5);
                  return;
                }
                int64_t v34 = v43;
              }
            }
          }
LABEL_61:
          unint64_t v37 = (v42 - 1) & v42;
          unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
        }
        uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
        uint64_t v46 = *v44;
        uint64_t v45 = v44[1];
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v47 = Hasher._finalize()();
        uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
        unint64_t v49 = v47 & ~v48;
        if ((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49)) {
          break;
        }
LABEL_78:
        swift_bridgeObjectRelease();
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v50 = *(void *)(a4 + 48);
      BOOL v51 = (void *)(v50 + 16 * v49);
      BOOL v52 = *v51 == v46 && v51[1] == v45;
      if (!v52 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v53 = ~v48;
        do
        {
          unint64_t v49 = (v49 + 1) & v53;
          if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
            goto LABEL_78;
          }
          id v54 = (void *)(v50 + 16 * v49);
          BOOL v55 = *v54 == v46 && v54[1] == v45;
        }
        while (!v55 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
      }
      swift_bridgeObjectRelease();
      *(uint64_t *)((char *)a1 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_83;
      }
    }
  }
  int64_t v6 = 0;
  uint64_t v58 = a4 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  int64_t v59 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v61 = 0;
  uint64_t v10 = a3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      int64_t v62 = v6;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_22;
    }
    int64_t v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v13 >= v59) {
      goto LABEL_79;
    }
    unint64_t v14 = *(void *)(v58 + 8 * v13);
    int64_t v15 = v6 + 1;
    if (!v14)
    {
      int64_t v15 = v6 + 2;
      if (v6 + 2 >= v59) {
        goto LABEL_79;
      }
      unint64_t v14 = *(void *)(v58 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v6 + 3;
        if (v6 + 3 >= v59) {
          goto LABEL_79;
        }
        unint64_t v14 = *(void *)(v58 + 8 * v15);
        if (!v14) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v14 - 1) & v14;
    int64_t v62 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_22:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v20 = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    uint64_t v24 = 1 << v22;
    if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) == 0) {
      goto LABEL_36;
    }
    uint64_t v25 = *(void *)(a3 + 48);
    uint64_t v26 = (void *)(v25 + 16 * v22);
    BOOL v27 = *v26 == v19 && v26[1] == v18;
    if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      a1[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
    else
    {
      uint64_t v28 = ~v21;
      for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
      {
        unint64_t v30 = i & v28;
        if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
          break;
        }
        int64_t v31 = (void *)(v25 + 16 * v30);
        BOOL v32 = *v31 == v19 && v31[1] == v18;
        if (v32 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          unint64_t v23 = v30 >> 6;
          uint64_t v24 = 1 << v30;
          goto LABEL_38;
        }
      }
LABEL_36:
      swift_bridgeObjectRelease();
      int64_t v6 = v62;
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  uint64_t v16 = v6 + 4;
  if (v6 + 4 >= v59) {
    goto LABEL_79;
  }
  unint64_t v14 = *(void *)(v58 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v59) {
      goto LABEL_79;
    }
    unint64_t v14 = *(void *)(v58 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
}

uint64_t outlined bridged method (ob) of @objc TUConversationLink.displayName.getter(void *a1)
{
  return outlined bridged method (ob) of @objc TUConversationActivity.concatenatedMetadataDescription.getter(a1, (SEL *)&selRef_displayName);
}

uint64_t outlined bridged method (ob) of @objc TUCallProvider.bundleIdentifier.getter(void *a1)
{
  return outlined bridged method (ob) of @objc TUConversationActivity.concatenatedMetadataDescription.getter(a1, (SEL *)&selRef_bundleIdentifier);
}

uint64_t type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConduitLagunaNoticeManager.PushBannerInfo);
}

uint64_t sub_1C32BC940()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  OUTLINED_FUNCTION_30_8();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.pushSession(lightweightHandoff:selectedActivity:completion:)(char a1, void *a2)
{
  closure #1 in ConduitLagunaNoticeManager.pushSession(lightweightHandoff:selectedActivity:completion:)(a1, a2, *(void **)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(void (**)(void))(v2 + 32));
}

id outlined bridged method (mnnnnbnn) of @objc static IMUserNotification.userNotification(withIdentifier:timeout:alertLevel:displayFlags:displayInformation:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, void *a6)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(a6, sel_userNotificationWithIdentifier_timeout_alertLevel_displayFlags_displayInformation_, a1, a2, a3, isa, a4);

  return v12;
}

void outlined bridged method (mbgnn) of @objc IMUserNotification.representedApplicationBundle.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)MEMORY[0x1C87730B0]();
  objc_msgSend(a3, sel_setRepresentedApplicationBundle_, v4);
}

uint64_t outlined bridged method (pb) of @objc TUNearbyDeviceHandle.name.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_name);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

char *specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a2;
  uint64_t v46 = a4;
  uint64_t v9 = *(void *)(a5 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  id v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v44 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))((char *)&v44 - v13, v15, v16);
  uint64_t v57 = 0;
  long long v55 = 0u;
  long long v56 = 0u;
  uint64_t v17 = swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantMediaProviderCreator(v17, (uint64_t)v54);
  uint64_t v49 = 0;
  uint64_t v18 = swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantCaptionsProviderCreator(v18, (uint64_t)v53);
  uint64_t v19 = self;
  swift_unknownObjectRetain();
  id v20 = objc_msgSend(v19, sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  uint64_t v21 = (void *)swift_allocObject();
  uint64_t v51 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  BOOL v52 = &protocol witness table for TUIDSLookupManager;
  id v48 = v20;
  type metadata accessor for UUID();
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  v21[2] = Dictionary.init(dictionaryLiteral:)();
  void v21[3] = Dictionary.init(dictionaryLiteral:)();
  v21[5] = 0;
  swift_unknownObjectWeakInit();
  v21[6] = v22;
  outlined init with copy of IDSLookupManager((uint64_t)&v48, (uint64_t)(v21 + 7));
  id v23 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v23, sel_addObserver_selector_name_object_, v21, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E4FADEC0], v48);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v24 = static Defaults.shared;
  id v25 = objc_allocWithZone((Class)type metadata accessor for ConversationController(0));
  outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)v54, (uint64_t)&v47);
  outlined init with copy of DefaultParticipantCaptionsProviderCreator((uint64_t)v53, (uint64_t)&v48);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, a5);
  swift_retain();
  specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(a1, v45, (uint64_t)v12, (uint64_t)&v47, (uint64_t)&v48, 0, (uint64_t)&v55, 0, (uint64_t)v21, v24, (uint64_t)v25, a5, a6, v43, v44, v45, v46, v47, (uint64_t)v48,
    v49,
    v50,
    v51,
    v52,
    v53[0],
    v53[1]);
  BOOL v27 = v26;
  outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v53);
  outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)v54);
  uint64_t v28 = type metadata accessor for EntitlementsChecker();
  uint64_t v29 = swift_allocObject();
  id v30 = objc_allocWithZone(MEMORY[0x1E4FADBD0]);
  id v31 = v27;
  *(void *)(v29 + 16) = objc_msgSend(v30, sel_init);
  *((void *)&v56 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v28;
  uint64_t v57 = &protocol witness table for EntitlementsChecker;
  *(void *)&long long v55 = v29;
  uint64_t v32 = static Defaults.shared;
  BOOL v33 = self;
  swift_retain();
  id v34 = objc_msgSend(v33, sel_sharedInstance);
  id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  uint64_t v36 = (void *)(*(uint64_t (**)(id, long long *, uint64_t, _UNKNOWN **, id, id))(v46 + 2416))(v31, &v55, v32, &protocol witness table for Defaults, v34, v35);
  id v37 = objc_allocWithZone(MEMORY[0x1E4F3BD90]);
  uint64_t v38 = v36;
  id v39 = objc_msgSend(v37, sel_init);

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, a5);
  unint64_t v40 = (void **)&v38[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_contentExtractor];
  swift_beginAccess();
  int64_t v41 = *v40;
  *unint64_t v40 = v39;

  return v38;
}

void *specialized ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v147 = a5;
  uint64_t v145 = a4;
  uint64_t v150 = a3;
  uint64_t v144 = a1;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>.Publisher);
  uint64_t v148 = *(void *)(v13 - 8);
  uint64_t v149 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v146 = (char *)v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>);
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  int v139 = (char *)v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  uint64_t v16 = MEMORY[0x1F4188790](v138);
  uint64_t v137 = (uint64_t)v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v136 = (char *)v118 - v18;
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>);
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  uint64_t v133 = (char *)v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<ForegroundApp?>);
  uint64_t v131 = *(void *)(v132 - 8);
  MEMORY[0x1F4188790](v132);
  uint64_t v130 = (char *)v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<TUCallTransmissionMode>);
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x1F4188790](v128);
  uint64_t v126 = (char *)v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<ConversationControlsManager.PushToTalkChannelState>);
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x1F4188790](v125);
  Swift::String v123 = (char *)v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TUCallBluetoothAudioFormat?>);
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x1F4188790](v122);
  uint64_t v120 = (char *)v118 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TURoute?>);
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  unsigned __int8 v119 = (char *)v118 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159[3] = a9;
  v159[4] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v159);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(boxed_opaque_existential_1, a2, a9);
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)&a6[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_ignoredScreenSharingRequestUUIDs] = MEMORY[0x1E4FBC860];
  *(void *)&a6[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_initiallyActiveParticipantIdentifiers] = MEMORY[0x1E4FBC870];
  uint64_t v27 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_coreAnalyticsReporter;
  id v28 = objc_allocWithZone((Class)CNKCoreAnalyticsReporter);
  uint64_t v29 = a6;
  *(void *)&a6[v27] = objc_msgSend(v28, sel_init);
  uint64_t v30 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator;
  *(void *)&v29[v30] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConversationControlsNoticeCoordinator()), sel_init);
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeNoticeCancellable] = 0;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_contentExtractor] = 0;
  v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowCallDetailsWhenReady] = 0;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isOnScreenSubscription] = 0;
  uint64_t v31 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v32 = static Features.shared;
  *(void *)&v29[v31] = static Features.shared;
  uint64_t v33 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_notificationCenter;
  id v34 = self;
  id v35 = v32;
  *(void *)&v29[v33] = objc_msgSend(v34, sel_defaultCenter);
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeShareCardHandle] = 0;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_minReactionCountForNotice] = 1;
  v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_canPostReactionNotice] = 0;
  swift_unknownObjectWeakInit();
  v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService] = 0;
  uint64_t v36 = &v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___callControlsService];
  *((void *)v36 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
  *((void *)v36 + 2) = 0;
  *(void *)uint64_t v36 = 0;
  *(_OWORD *)(v36 + 24) = xmmword_1C37737D0;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemBannerPresenter + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemConversationControlsDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemAudioConversationControlsDelegate
                + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallConversationControlsDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallDetailsViewControllerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_handoffCompletedDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate] = 0;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conduitLagunaNoticeManager] = 0;
  uint64_t v129 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_lagunaQueue;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v37 = type metadata accessor for DispatchQoS();
  MEMORY[0x1F4188790](v37 - 8);
  static DispatchQoS.unspecified.getter();
  uint64_t v38 = type metadata accessor for OS_dispatch_queue.Attributes();
  MEMORY[0x1F4188790](v38);
  uint64_t v156 = v26;
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, MEMORY[0x1F41AB0D8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v39 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  MEMORY[0x1F4188790](v39);
  (*(void (**)(char *, void))(v41 + 104))((char *)v118 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FBCC50]);
  *(void *)&v29[v129] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v42 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationDidChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  swift_allocObject();
  *(void *)&v29[v42] = PassthroughSubject.init()();
  uint64_t v43 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activityManager;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v129 = a10;
  uint64_t v44 = static HUDActivityManager.shared;
  *(void *)&v29[v43] = static HUDActivityManager.shared;
  uint64_t v45 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_bannerActivityManager;
  uint64_t v46 = one-time initialization token for shared;
  id v47 = v44;
  if (v46 != -1) {
    swift_once();
  }
  id v48 = static BannerActivityManager.shared;
  *(void *)&v29[v45] = static BannerActivityManager.shared;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_incomingScreenSharingRequestActivity] = 0;
  uint64_t v49 = &v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__audioRoute];
  uint64_t v156 = 0;
  id v50 = v48;
  v118[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TURoute?);
  uint64_t v51 = v119;
  Published.init(initialValue:)();
  uint64_t v52 = v142;
  uint64_t v53 = v143;
  (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v49, v51, v143);
  id v54 = &v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__bluetoothAudioFormat];
  uint64_t v156 = 0;
  LOBYTE(v157) = 1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TUCallBluetoothAudioFormat?);
  long long v55 = v120;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v54, v55, v122);
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_cancellables] = MEMORY[0x1E4FBC860];
  long long v56 = &v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__pttChannelState];
  LOBYTE(v156) = 0;
  uint64_t v57 = v123;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v56, v57, v125);
  uint64_t v58 = &v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__pttChannelTransmissionMode];
  uint64_t v156 = 1;
  type metadata accessor for TUCallTransmissionMode(0);
  int64_t v59 = v126;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v58, v59, v128);
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttViewModel] = 0;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttCallUpdateSubject] = 0;
  uint64_t v60 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_incomingTransmissionReceivedSubject;
  LOBYTE(v156) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  swift_allocObject();
  *(void *)&v29[v60] = CurrentValueSubject.init(_:)();
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_pttCallStatusUpdateCancellable] = 0;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_pttCallIncomingTransmissionReceivedCancellable] = 0;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_confirmLeavePTTChannelAlert] = 0;
  uint64_t v61 = &v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__foregroundApp];
  uint64_t v156 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ForegroundApp?);
  int64_t v62 = v130;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v61, v62, v132);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ConversationControlsManager.CollaborationPrompt]);
  Cache.init(countLimit:)();
  type metadata accessor for ForegroundCollaborationState(0);
  swift_storeEnumTagMultiPayload();
  int64_t v63 = &v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__ephemeralAlert];
  uint64_t v156 = 0;
  uint64_t v157 = 0;
  char v158 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EphemeralAlert?);
  os_log_type_t v64 = v133;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v63, v64, v135);
  v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowDelayedLMIBanner] = 0;
  v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isWaitingOnFirstRemoteFrame] = 0;
  v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowAVLessLeaveConfirmation] = 0;
  uint64_t v65 = (uint64_t)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_avLessLeaveConfirmationPresentedDate];
  uint64_t v66 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v65, 1, 1, v66);
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activityLaunchTimer] = 0;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_applicationState] = 0;
  id v67 = &v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__appLaunchButtonType];
  uint64_t v68 = (uint64_t)v136;
  swift_storeEnumTagMultiPayload();
  _s15ConversationKit11ParticipantVWOcTm_6(v68, v137);
  unint64_t v69 = v139;
  Published.init(initialValue:)();
  _s15ConversationKit11ParticipantVWOhTm_4();
  (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v67, v69, v141);
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_updateForegroundCollaborationStateTask] = 0;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_screenShareCountdownTimer] = 0;
  uint64_t v70 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_participantStateDidChangeSubject;
  swift_allocObject();
  *(void *)&v29[v70] = PassthroughSubject.init()();
  uint64_t v71 = v144;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController] = v144;
  type metadata accessor for ConversationControlsJoinCountdownActionController();
  swift_allocObject();
  uint64_t v72 = v71;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_countdownController] = ConversationControlsJoinCountdownActionController.init()();
  id v73 = v145;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter] = v145;
  id v74 = v73;
  id v75 = objc_msgSend(v74, sel_conversationManager);
  type metadata accessor for CollaborationInitiationManager();
  uint64_t v76 = swift_allocObject();
  *(void *)(v76 + 16) = v75;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_collaborationInitiationManager] = v76;
  ConversationController.hasMessageCapableRemoteParticipants.getter();
  LOBYTE(v75) = v77;
  swift_beginAccess();
  char v155 = v75 & 1;
  Published.init(initialValue:)();
  swift_endAccess();
  long long v78 = &v72[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
  swift_beginAccess();
  BOOL v79 = *(void *)v78 == 3;
  swift_beginAccess();
  LOBYTE(v154) = v79;
  Published.init(initialValue:)();
  swift_endAccess();
  uint64_t v80 = ConversationController.audioRoute.getter();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v53);
  uint64_t v154 = v80;
  Published.init(initialValue:)();
  swift_endAccess();
  uint64_t v81 = &v72[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  uint64_t v82 = *((void *)v81 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v84 = *(uint64_t (**)(uint64_t, uint64_t))(v82 + 352);
  swift_unknownObjectRetain();
  LOBYTE(v82) = v84(ObjectType, v82);
  swift_unknownObjectRelease();
  swift_beginAccess();
  char v152 = (v82 & 1) == 0;
  Published.init(initialValue:)();
  swift_endAccess();
  char v85 = ConversationController.localVideoSupported.getter();
  uint64_t v86 = *((void *)v81 + 1);
  uint64_t v87 = swift_getObjectType();
  uint64_t v88 = *(uint64_t (**)(uint64_t, uint64_t))(v86 + 304);
  swift_unknownObjectRetain();
  LOBYTE(v86) = v88(v87, v86);
  swift_unknownObjectRelease();
  swift_beginAccess();
  char v152 = v85 & 1;
  char v153 = v86 & 1;
  Published.init(initialValue:)();
  swift_endAccess();
  outlined init with copy of IDSLookupManager((uint64_t)v159, (uint64_t)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_entitlementsChecker]);
  uint64_t v89 = &v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults];
  uint64_t v90 = v129;
  *(void *)uint64_t v89 = v150;
  *((void *)v89 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v90;
  uint64_t v91 = v147;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags] = v147;
  *(void *)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_reactionNoticeHistory] = MEMORY[0x1E4FBC860];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();

  uint64_t v92 = (objc_class *)type metadata accessor for ConversationControlsManager(0);
  v151.receiver = v29;
  v151.super_class = v92;
  id v93 = objc_msgSendSuper2(&v151, sel_init);
  id v94 = objc_allocWithZone((Class)type metadata accessor for ConduitApprovalDelegate());
  uint64_t v95 = v93;
  id v96 = ConduitApprovalDelegate.init(_:)(v95);
  uint64_t v97 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate;
  uint64_t v98 = *(void **)((char *)v95 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate);
  *(void *)((char *)v95 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate) = v96;

  id v99 = objc_msgSend(v74, sel_neighborhoodActivityConduit);
  objc_msgSend(v99, sel_setApprovalDelegate_, *(void *)((char *)v95 + v97));

  if (objc_msgSend(v91, sel_lagunaEnabled))
  {
    uint64_t v100 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_lagunaQueue;
    uint64_t v101 = *(void **)((char *)v95 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_lagunaQueue);
    uint64_t v102 = self;
    uint64_t v103 = v95;
    id v104 = v101;
    id v105 = objc_msgSend(v102, sel_sharedInstance);
    id v106 = objc_allocWithZone((Class)type metadata accessor for ConduitLagunaNoticeManager(0));
    id v107 = ConduitLagunaNoticeManager.init(_:queue:callCenter:)(v103, (uint64_t)v104, (uint64_t)v105);
    id v108 = objc_msgSend(v74, sel_neighborhoodActivityConduit);
    objc_msgSend(v108, sel_addDelegate_queue_, v107, v104);

    id v109 = objc_msgSend(v74, sel_conversationManager);
    objc_msgSend(v109, sel_addDelegate_queue_, v107, *(void *)((char *)v95 + v100));

    uint64_t v110 = (void **)((char *)v103
                   + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conduitLagunaNoticeManager);
    swift_beginAccess();
    uint64_t v111 = *v110;
    *uint64_t v110 = v107;
  }
  uint64_t v112 = ConversationControlsManager.updateShareButtonState()();
  uint64_t v113 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v95) + 0x960))(v112);
  ConversationControlsManager.setupConversationControllerObservers()();
  uint64_t v114 = v146;
  (*(void (**)(void))((*v113 & **(void **)((char *)v95
                                           + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator))
                    + 0xA0))();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type Published<Notice?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Notice?>.Publisher);
  uint64_t v115 = v149;
  uint64_t v116 = Publisher<>.sink(receiveValue:)();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v159);
  (*(void (**)(char *, uint64_t))(v148 + 8))(v114, v115);
  *(void *)((char *)v95 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeNoticeCancellable) = v116;
  swift_release();
  return v95;
}

char *specialized ConversationControlsManager.__allocating_init(activeCall:)()
{
  OUTLINED_FUNCTION_14();
  id v0 = objc_msgSend(self, sel_sharedInstance);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  id v1 = (void *)static PlaceholderCallCenter.shared;
  objc_allocWithZone((Class)type metadata accessor for CallCenter());
  id v2 = v1;
  uint64_t v3 = (void *)OUTLINED_FUNCTION_361();
  CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v3, v4, v5, v6);
  OUTLINED_FUNCTION_15_0();
  return specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(v7, v8, v9, v10, v11);
}

char *specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(void *a1, void *a2, uint64_t a3)
{
  lazy protocol witness table accessor for type TUCall and conformance TUCall();
  uint64_t v41 = 0;
  long long v39 = 0u;
  long long v40 = 0u;
  swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v32, (uint64_t)&v38);
  uint64_t v33 = 0;
  swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v32, (uint64_t)v37);
  char v6 = self;
  swift_unknownObjectRetain();
  id v7 = objc_msgSend(v6, sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v35 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  uint64_t v36 = &protocol witness table for TUIDSLookupManager;
  id v32 = v7;
  type metadata accessor for UUID();
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  void v8[2] = Dictionary.init(dictionaryLiteral:)();
  v8[3] = Dictionary.init(dictionaryLiteral:)();
  v8[5] = 0;
  swift_unknownObjectWeakInit();
  v8[6] = v9;
  outlined init with copy of IDSLookupManager((uint64_t)&v32, (uint64_t)(v8 + 7));
  id v10 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v10, sel_addObserver_selector_name_object_, v8, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E4FADEC0], v32);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v11 = static Defaults.shared;
  id v12 = objc_allocWithZone((Class)type metadata accessor for ConversationController(0));
  outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)&v38, (uint64_t)&v31);
  outlined init with copy of DefaultParticipantCaptionsProviderCreator((uint64_t)v37, (uint64_t)&v32);
  id v13 = a2;
  swift_retain();
  specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)((uint64_t)a1, (uint64_t)v13, (uint64_t)&v31, (uint64_t)&v32, 0, (uint64_t)&v39, 0, (uint64_t)v8, v11, (uint64_t)v12, v30, v31, (uint64_t)v32, v33, v34, v35, (uint64_t)v36, v37[0], v37[1],
    v38,
    v39,
    *((unsigned char **)&v39 + 1));
  uint64_t v15 = v14;
  outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v37);
  outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)&v38);
  uint64_t v16 = type metadata accessor for EntitlementsChecker();
  uint64_t v17 = swift_allocObject();
  id v18 = objc_allocWithZone(MEMORY[0x1E4FADBD0]);
  id v19 = v15;
  *(void *)(v17 + 16) = objc_msgSend(v18, sel_init);
  *((void *)&v40 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v16;
  uint64_t v41 = &protocol witness table for EntitlementsChecker;
  *(void *)&long long v39 = v17;
  uint64_t v20 = static Defaults.shared;
  uint64_t v21 = self;
  swift_retain();
  id v22 = objc_msgSend(v21, sel_sharedInstance);
  uint64_t v23 = (void *)(*(uint64_t (**)(id, long long *, uint64_t, _UNKNOWN **, id, id))(a3 + 2416))(v19, &v39, v20, &protocol witness table for Defaults, v22, objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init));
  id v24 = objc_allocWithZone(MEMORY[0x1E4F3BD90]);
  id v25 = v23;
  id v26 = objc_msgSend(v24, sel_init);

  uint64_t v27 = (void **)&v25[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_contentExtractor];
  swift_beginAccess();
  id v28 = *v27;
  *uint64_t v27 = v26;

  return v25;
}

void partial apply for closure #1 in ConversationControlsManager.viewActivity(_:)(char a1)
{
  closure #1 in ConversationControlsManager.viewActivity(_:)(a1, v1);
}

char *specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
  swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v36, (uint64_t)&v42);
  uint64_t v37 = 0;
  swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v36, (uint64_t)v41);
  id v10 = self;
  swift_unknownObjectRetain();
  id v11 = objc_msgSend(v10, sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  id v12 = (void *)swift_allocObject();
  uint64_t v39 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  long long v40 = &protocol witness table for TUIDSLookupManager;
  id v36 = v11;
  type metadata accessor for UUID();
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BC70]);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  void v12[2] = Dictionary.init(dictionaryLiteral:)();
  v12[3] = Dictionary.init(dictionaryLiteral:)();
  uint64_t v12[5] = 0;
  swift_unknownObjectWeakInit();
  void v12[6] = v13;
  outlined init with copy of IDSLookupManager((uint64_t)&v36, (uint64_t)(v12 + 7));
  id v14 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v14, sel_addObserver_selector_name_object_, v12, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E4FADEC0], v36);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v15 = static Defaults.shared;
  id v16 = objc_allocWithZone((Class)type metadata accessor for ConversationController(0));
  outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)&v42, (uint64_t)&v35);
  outlined init with copy of DefaultParticipantCaptionsProviderCreator((uint64_t)v41, (uint64_t)&v36);
  id v17 = a2;
  swift_retain();
  specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(a1, (uint64_t)v17, (uint64_t)&v35, (uint64_t)&v36, 0, (uint64_t)&v43, 0, (uint64_t)v12, v15, (uint64_t)v16, a4, a5, v34, v35, (uint64_t)v36, v37, v38, v39, (uint64_t)v40,
    v41[0],
    v41[1],
    v42,
    v43,
    *((uint64_t *)&v43 + 1));
  id v19 = v18;
  outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v41);
  outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)&v42);
  uint64_t v20 = type metadata accessor for EntitlementsChecker();
  uint64_t v21 = swift_allocObject();
  id v22 = objc_allocWithZone(MEMORY[0x1E4FADBD0]);
  id v23 = v19;
  *(void *)(v21 + 16) = objc_msgSend(v22, sel_init);
  *((void *)&v44 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v20;
  uint64_t v45 = &protocol witness table for EntitlementsChecker;
  *(void *)&long long v43 = v21;
  uint64_t v24 = static Defaults.shared;
  id v25 = self;
  swift_retain();
  id v26 = objc_msgSend(v25, sel_sharedInstance);
  uint64_t v27 = (void *)(*(uint64_t (**)(id, long long *, uint64_t, _UNKNOWN **, id, id))(a3 + 2416))(v23, &v43, v24, &protocol witness table for Defaults, v26, objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init));
  id v28 = objc_allocWithZone(MEMORY[0x1E4F3BD90]);
  uint64_t v29 = v27;
  id v30 = objc_msgSend(v28, sel_init);

  swift_unknownObjectRelease();
  uint64_t v31 = (void **)&v29[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_contentExtractor];
  swift_beginAccess();
  id v32 = *v31;
  *uint64_t v31 = v30;

  return v29;
}

void specialized ConversationControlsManager.post(notice:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_254();
  a21 = v22;
  a22 = v23;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  a13 = v32(0);
  a14 = v27;
  uint64_t v33 = __swift_allocate_boxed_opaque_existential_1(&a10);
  _s15ConversationKit11ParticipantVWOcTm_6(v31, (uint64_t)v33);
  ((void (*)(uint64_t *, void))v25)(v33, *(void *)(v29 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator));
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_364();
  if (v34())
  {
    uint64_t v35 = OUTLINED_FUNCTION_106_0();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 128))(&a10, v35, v25);
    swift_unknownObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a10);
  OUTLINED_FUNCTION_252();
}

uint64_t specialized ConversationControlsManager.post(notice:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v10[3] = a3;
  v10[4] = a4;
  __swift_allocate_boxed_opaque_existential_1(v10);
  (*(void (**)(void))(*(void *)(a3 - 8) + 16))();
  specialized ConversationControlsNoticeCoordinator.post(notice:)();
  if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a2) + 0x430))())
  {
    uint64_t v7 = v6;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 128))(v10, ObjectType, v7);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t specialized ConversationControlsManager.presentActivity(activity:completion:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  v53[3] = (id)type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivitySession);
  v53[4] = &protocol witness table for TUConversationActivitySession;
  v53[0] = a1;
  uint64_t v7 = one-time initialization token for conversationControls;
  id v8 = a1;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.conversationControls);
  outlined init with copy of IDSLookupManager((uint64_t)v53, (uint64_t)aBlock);
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = a3;
    id v14 = a4;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v52 = v15;
    *(_DWORD *)id v12 = 136315138;
    outlined init with copy of IDSLookupManager((uint64_t)aBlock, (uint64_t)v51);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    uint64_t v16 = String.init<A>(describing:)();
    v51[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    _os_log_impl(&dword_1C2F90000, v10, v11, "Launching activity: %s", v12, 0xCu);
    swift_arrayDestroy();
    uint64_t v18 = v15;
    a4 = v14;
    a3 = v13;
    MEMORY[0x1C87760E0](v18, -1, -1);
    MEMORY[0x1C87760E0](v12, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  }

  id v19 = v53[0];
  id v20 = objc_msgSend(v53[0], sel_activity);
  unsigned int v21 = objc_msgSend(v20, sel_isSupported);

  if (v21)
  {
    outlined init with copy of IDSLookupManager((uint64_t)v53, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    if (swift_dynamicCast())
    {
      id v22 = v51[0];
      id v23 = objc_msgSend(v51[0], sel_activity);
      unsigned __int8 v24 = objc_msgSend(v23, sel_isScreenSharingActivity);

      if ((v24 & 1) != 0 && objc_msgSend(v22, sel_isLocallyInitiated))
      {
        outlined init with copy of IDSLookupManager((uint64_t)v53, (uint64_t)aBlock);
        uint64_t v25 = Logger.logObject.getter();
        os_log_type_t v26 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = (uint8_t *)swift_slowAlloc();
          uint64_t v28 = swift_slowAlloc();
          uint64_t v52 = v28;
          *(_DWORD *)uint64_t v27 = 136315138;
          outlined init with copy of IDSLookupManager((uint64_t)aBlock, (uint64_t)v51);
          uint64_t v29 = String.init<A>(describing:)();
          v51[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v52);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
          _os_log_impl(&dword_1C2F90000, v25, v26, "Unsupported activity: %s, cannot open screenshare for host", v27, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v28, -1, -1);
          MEMORY[0x1C87760E0](v27, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        }

        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
      }
      long long v40 = objc_msgSend(*(id *)((char *)a4+ OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_conversationManager);
      outlined init with copy of IDSLookupManager((uint64_t)v53, (uint64_t)v51);
      uint64_t v46 = swift_allocObject();
      outlined init with take of Notice((long long *)v51, v46 + 16);
      *(void *)(v46 + 56) = a2;
      *(void *)(v46 + 64) = a3;
      aBlock[4] = partial apply for closure #1 in ConversationControlsManager.presentActivity(activity:completion:);
      aBlock[5] = v46;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
      aBlock[3] = &block_descriptor_472;
      id v47 = _Block_copy(aBlock);
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
      swift_release();
      [v40 launchApplicationForActivitySession:v22 completionHandler:v47];
      _Block_release(v47);
    }
    else
    {
      outlined init with copy of IDSLookupManager((uint64_t)v53, (uint64_t)aBlock);
      long long v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        uint64_t v52 = v43;
        *(_DWORD *)uint64_t v42 = 136315138;
        outlined init with copy of IDSLookupManager((uint64_t)aBlock, (uint64_t)v51);
        uint64_t v44 = String.init<A>(describing:)();
        v51[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, &v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        _os_log_impl(&dword_1C2F90000, v40, v41, "Activity: %s, is not a valid activity session", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v43, -1, -1);
        MEMORY[0x1C87760E0](v42, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      }
    }

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  }
  uint64_t v31 = outlined bridged method (ob) of @objc TUConversationActivity.bundleIdentifier.getter(objc_msgSend(v19, sel_activity));
  if (v32)
  {
    char v33 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a4) + 0x7B0))(v31);
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
    {
      outlined init with copy of IDSLookupManager((uint64_t)v53, (uint64_t)aBlock);
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, v35))
      {
        id v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v52 = v37;
        *(_DWORD *)id v36 = 136315138;
        outlined init with copy of IDSLookupManager((uint64_t)aBlock, (uint64_t)v51);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
        uint64_t v38 = String.init<A>(describing:)();
        v51[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, &v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        _os_log_impl(&dword_1C2F90000, v34, v35, "Unsupported activity: %s, presenting App Store", v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v37, -1, -1);
        MEMORY[0x1C87760E0](v36, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      }

      ConversationControlsManager.presentAppStore()();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
}

uint64_t specialized ConversationControlsManager.presentActivity(activity:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  v54[3] = a5;
  v54[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v54);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Logger.conversationControls);
  outlined init with copy of IDSLookupManager((uint64_t)v54, (uint64_t)aBlock);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  uint64_t v15 = &unk_1C3768000;
  if (os_log_type_enabled(v13, v14))
  {
    id v48 = boxed_opaque_existential_1;
    uint64_t v49 = a3;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v53 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    outlined init with copy of IDSLookupManager((uint64_t)aBlock, (uint64_t)v52);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    uint64_t v18 = String.init<A>(describing:)();
    v52[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v15 = (void *)&unk_1C3768000;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    _os_log_impl(&dword_1C2F90000, v13, v14, "Launching activity: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v17, -1, -1);
    id v20 = v16;
    a3 = v49;
    MEMORY[0x1C87760E0](v20, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  }

  if ((*(uint64_t (**)(uint64_t, uint64_t))(a6 + 40))(a5, a6))
  {
    outlined init with copy of IDSLookupManager((uint64_t)v54, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivitySession);
    if (swift_dynamicCast())
    {
      id v21 = v52[0];
      id v22 = objc_msgSend(v52[0], sel_activity);
      unsigned __int8 v23 = objc_msgSend(v22, sel_isScreenSharingActivity);

      if ((v23 & 1) != 0 && objc_msgSend(v21, sel_isLocallyInitiated))
      {
        outlined init with copy of IDSLookupManager((uint64_t)v54, (uint64_t)aBlock);
        unsigned __int8 v24 = Logger.logObject.getter();
        os_log_type_t v25 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v24, v25))
        {
          os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
          uint64_t v27 = swift_slowAlloc();
          uint64_t v53 = v27;
          *(_DWORD *)os_log_type_t v26 = v15[454];
          outlined init with copy of IDSLookupManager((uint64_t)aBlock, (uint64_t)v52);
          uint64_t v28 = String.init<A>(describing:)();
          v52[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v53);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
          _os_log_impl(&dword_1C2F90000, v24, v25, "Unsupported activity: %s, cannot open screenshare for host", v26, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v27, -1, -1);
          MEMORY[0x1C87760E0](v26, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        }

        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      }
      unint64_t v39 = objc_msgSend(*(id *)((char *)a4+ OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_conversationManager, v48);
      outlined init with copy of IDSLookupManager((uint64_t)v54, (uint64_t)v52);
      uint64_t v45 = swift_allocObject();
      outlined init with take of Notice((long long *)v52, v45 + 16);
      *(void *)(v45 + 56) = a2;
      *(void *)(v45 + 64) = a3;
      aBlock[4] = closure #1 in ConversationControlsManager.presentActivity(activity:completion:)partial apply;
      aBlock[5] = v45;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
      aBlock[3] = &block_descriptor_515;
      uint64_t v46 = _Block_copy(aBlock);
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
      swift_release();
      [v39 launchApplicationForActivitySession:v21 completionHandler:v46];
      _Block_release(v46);
    }
    else
    {
      outlined init with copy of IDSLookupManager((uint64_t)v54, (uint64_t)aBlock);
      unint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v39, v40))
      {
        os_log_type_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        uint64_t v53 = v42;
        *(_DWORD *)os_log_type_t v41 = v15[454];
        outlined init with copy of IDSLookupManager((uint64_t)aBlock, (uint64_t)v52);
        uint64_t v43 = String.init<A>(describing:)();
        v52[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, &v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        _os_log_impl(&dword_1C2F90000, v39, v40, "Activity: %s, is not a valid activity session", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v42, -1, -1);
        MEMORY[0x1C87760E0](v41, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      }
    }

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  }
  uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 32))(a5, a6);
  if (v31)
  {
    char v32 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a4) + 0x7B0))(v30);
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
    {
      outlined init with copy of IDSLookupManager((uint64_t)v54, (uint64_t)aBlock);
      char v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        os_log_type_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        uint64_t v53 = v36;
        *(_DWORD *)os_log_type_t v35 = v15[454];
        outlined init with copy of IDSLookupManager((uint64_t)aBlock, (uint64_t)v52);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
        uint64_t v37 = String.init<A>(describing:)();
        v52[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, &v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        _os_log_impl(&dword_1C2F90000, v33, v34, "Unsupported activity: %s, presenting App Store", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v36, -1, -1);
        MEMORY[0x1C87760E0](v35, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      }

      ConversationControlsManager.presentAppStore()();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
}

uint64_t _s15ConversationKit11ParticipantVWOhTm_4()
{
  uint64_t v1 = OUTLINED_FUNCTION_49_2();
  v2(v1);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return v0;
}

uint64_t sub_1C32C0048(unsigned __int8 *a1)
{
  return ConversationControlsManager.shouldOpenMessages.setter();
}

uint64_t sub_1C32C0070(unsigned __int8 *a1)
{
  return ConversationControlsManager.shouldEnableStartingStagedActivity.setter();
}

void sub_1C32C00A8(unsigned __int8 *a1)
{
}

void sub_1C32C00D8()
{
}

void sub_1C32C0104()
{
}

uint64_t _s15ConversationKit11ParticipantVWOcTm_6(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_89();
  v4(v3);
  OUTLINED_FUNCTION_0();
  uint64_t v5 = OUTLINED_FUNCTION_89_0();
  v6(v5);
  return a2;
}

uint64_t outlined assign with copy of ForegroundCollaborationState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForegroundCollaborationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t specialized CoalescingNoticeQueue.push(notice:)(uint64_t a1, uint64_t *a2)
{
  v49[3] = type metadata accessor for ReactionNotice(0);
  v49[4] = (uint64_t)&protocol witness table for ReactionNotice;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v49);
  _s15ConversationKit11ParticipantVWOcTm_6(a1, (uint64_t)boxed_opaque_existential_1);
  uint64_t v5 = *a2;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  v42[0] = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  if (v7)
  {
    unint64_t v8 = 0;
    uint64_t v9 = v5 + 32;
    while (v8 < *(void *)(v5 + 16))
    {
      outlined init with copy of IDSLookupManager(v9, (uint64_t)&v46);
      uint64_t v10 = v47;
      uint64_t v11 = v48;
      __swift_project_boxed_opaque_existential_1(&v46, v47);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11))
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
      }
      else
      {
        outlined init with take of Notice(&v46, (uint64_t)&v43);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        uint64_t v12 = v42[0];
        unint64_t v13 = *(void *)(v42[0] + 16);
        if (v13 >= *(void *)(v42[0] + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v12 = v42[0];
        }
        *(void *)(v12 + 16) = v13 + 1;
        outlined init with take of Notice(&v43, v12 + 40 * v13 + 32);
      }
      ++v8;
      v9 += 40;
      if (v7 == v8)
      {
        uint64_t v6 = v42[0];
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v6;
  specialized BidirectionalCollection.last.getter(v6, (uint64_t)&v43);
  if (!v44)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v43, &demangling cache variable for type metadata for Notice?);
LABEL_20:
    outlined init with copy of IDSLookupManager((uint64_t)v49, (uint64_t)&v46);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v27 = *(void *)(*a2 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v27);
    uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v46, v47);
    MEMORY[0x1F4188790](v28);
    uint64_t v30 = (char *)v41 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v30);
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, (uint64_t)v30, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  }
  outlined init with take of Notice(&v43, (uint64_t)&v46);
  uint64_t v14 = v47;
  uint64_t v15 = v48;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v46, v47);
  if (((*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v15 + 208))(v49, v14, v15) & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    goto LABEL_20;
  }
  if (one-time initialization token for conversationControls != -1) {
LABEL_25:
  }
    swift_once();
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.conversationControls);
  outlined init with copy of IDSLookupManager((uint64_t)v49, (uint64_t)&v43);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v42[0] = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    __swift_project_boxed_opaque_existential_1(&v43, v44);
    uint64_t v21 = ReactionNotice.description.getter();
    uint64_t v41[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
    *(_WORD *)(v19 + 12) = 2080;
    swift_beginAccess();
    uint64_t v23 = v47;
    uint64_t v24 = v48;
    __swift_project_boxed_opaque_existential_1(&v46, v47);
    uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 120))(v23, v24);
    v41[1] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v17, v18, "Coalesced notice:%s into existingNotice:%s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v20, -1, -1);
    MEMORY[0x1C87760E0](v19, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }

  specialized RangeReplaceableCollection<>.removeLast()((uint64_t)&v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  swift_beginAccess();
  outlined init with copy of IDSLookupManager((uint64_t)&v46, (uint64_t)&v43);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v32 = *(void *)(*a2 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
  uint64_t v33 = v44;
  uint64_t v34 = v45;
  uint64_t v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v43, v44);
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)v41 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v38 + 16))(v37);
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, (uint64_t)v37, a2, v33, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  uint64_t v39 = *a2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  *a2 = v39;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v10 = type metadata accessor for ReactionNotice(0);
  uint64_t v11 = &protocol witness table for ReactionNotice;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  outlined init with take of Collaboration(a2, (uint64_t)boxed_opaque_existential_1);
  uint64_t v7 = *a3;
  *(void *)(v7 + 16) = a1 + 1;
  return outlined init with take of Notice(&v9, v7 + 40 * a1 + 32);
}

uint64_t specialized ConversationControlsManager.shouldShowCollaborationNotice(for:)(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Collaboration(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s15ConversationKit11ParticipantVWOcTm_6(a1, (uint64_t)v6);
  int v8 = v6[16];
  if (v8 == 2 || v8 == 3)
  {
    _s15ConversationKit11ParticipantVWOhTm_4();
    return 0;
  }
  if (v6[*(int *)(v4 + 48)] == 1
    && (uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a2) + 0x290))(v7)) != 0)
  {
    uint64_t v11 = v10;
    id v12 = objc_msgSend(v10, sel_resolvedAudioVideoMode);

    _s15ConversationKit11ParticipantVWOhTm_4();
    if (v12 == (id)1) {
      return 0;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_4();
  }
  return 1;
}

uint64_t specialized ConversationControlsManager.shouldShowCollaborationNotice(for:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Collaboration(0);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a4 + 112))(a3, a4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for Collaboration?);
    return 1;
  }
  uint64_t v14 = outlined init with take of Collaboration((uint64_t)v9, (uint64_t)v12);
  int v15 = v12[16];
  if (v15 == 2 || v15 == 3)
  {
    _s15ConversationKit11ParticipantVWOhTm_4();
  }
  else
  {
    if (v12[*(int *)(v10 + 48)] != 1
      || (uint64_t v16 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a2) + 0x290))(v14)) == 0)
    {
      _s15ConversationKit11ParticipantVWOhTm_4();
      return 1;
    }
    uint64_t v17 = v16;
    id v18 = objc_msgSend(v16, sel_resolvedAudioVideoMode);

    _s15ConversationKit11ParticipantVWOhTm_4();
    if (v18 != (id)1) {
      return 1;
    }
  }
  return 0;
}

uint64_t type metadata accessor for ConversationControlsManager(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConversationControlsManager);
}

uint64_t sub_1C32C0C78()
{
  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:)()
{
  return closure #1 in ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:)(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C32C0CBC()
{
  return objectdestroy_88Tm();
}

uint64_t partial apply for closure #1 in ConversationControlsManager.updateForegroundCollaborationState()()
{
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in CallRecordingService.startRecording(call:completion:);
  uint64_t v3 = OUTLINED_FUNCTION_275();
  return closure #1 in ConversationControlsManager.updateForegroundCollaborationState()(v3, v4, v5, v6);
}

void partial apply for closure #1 in ConversationControlsManager.openApp(withBundleIdentifier:)(uint64_t a1, uint64_t a2)
{
  closure #1 in ConversationControlsManager.openApp(withBundleIdentifier:)(a1, a2, v2);
}

void partial apply for closure #1 in ConversationControlsManager.openMessagesButtonTapped()(uint64_t a1)
{
  closure #1 in ConversationControlsManager.openMessagesButtonTapped()(a1, v1);
}

uint64_t sub_1C32C0D7C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsManager.noticeTapped(notice:isSystemAperturePresentation:)(char a1)
{
  closure #1 in ConversationControlsManager.noticeTapped(notice:isSystemAperturePresentation:)(a1, *(void *)(v1 + 16), v1 + 24, *(unsigned char *)(v1 + 64));
}

uint64_t sub_1C32C0DCC()
{
  return objectdestroy_102Tm(MEMORY[0x1E4FBC8D0]);
}

void partial apply for closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)(char a1)
{
  closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t partial apply for closure #2 in ConversationControlsManager.appLaunchButtonTapped(completion:)(uint64_t result)
{
  if (result)
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 16);
    if (v2) {
      return v2(1);
    }
  }
  return result;
}

uint64_t sub_1C32C0E34()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = type metadata accessor for StagedCollaboration(0);
  OUTLINED_FUNCTION_4();
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  uint64_t v6 = (v3 + 40) & ~v3;
  unint64_t v7 = (v5 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v0 + v6;

  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v9();
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_367();

  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_15_0();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)()
{
  uint64_t v1 = type metadata accessor for StagedCollaboration(0);
  OUTLINED_FUNCTION_1(v1);
  OUTLINED_FUNCTION_10_11();
  uint64_t v3 = v0[2];
  uint64_t v4 = (void (*)(uint64_t))v0[3];
  uint64_t v5 = v0[4];
  uint64_t v7 = *(void *)((char *)v0 + v6);
  closure #1 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(v3, v4, v5, (uint64_t)v0 + v2, v7);
}

uint64_t sub_1C32C0FA8()
{
  OUTLINED_FUNCTION_14();
  type metadata accessor for StagedCollaboration(0);
  OUTLINED_FUNCTION_1_6();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = (((*(void *)(v4 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v6();
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_367();

  swift_release();
  if (*(id *)((char *)v1 + v5)) {
    swift_release();
  }
  OUTLINED_FUNCTION_15_0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)()
{
  uint64_t v1 = type metadata accessor for StagedCollaboration(0);
  OUTLINED_FUNCTION_1(v1);
  OUTLINED_FUNCTION_10_11();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = partial apply for closure #1 in CallRecordingService.startRecording(call:completion:);
  OUTLINED_FUNCTION_24_5();
  return closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t partial apply for closure #1 in ConversationControlsManager.acceptScreenShareRequestTapped(button:)()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in CallRecordingService.startRecording(call:completion:);
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ConversationControlsManager.acceptScreenShareRequestTapped(button:)(v3, v4, v5, v6);
}

uint64_t partial apply for closure #1 in ConversationControlsManager.cancelScreenShareRequestTapped(button:)()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in CallRecordingService.startRecording(call:completion:);
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ConversationControlsManager.cancelScreenShareRequestTapped(button:)(v3, v4, v5, v6);
}

void partial apply for closure #1 in ConversationControlsManager.pttLeaveButtonTapped(button:)(char a1)
{
  closure #1 in ConversationControlsManager.pttLeaveButtonTapped(button:)(a1, v1);
}

uint64_t sub_1C32C1344()
{
  swift_release();
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)(uint64_t a1, uint64_t a2)
{
  closure #1 in ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24));
}

void partial apply for closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers()(void *a1, uint64_t a2)
{
  closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers()(a1, a2, v2);
}

uint64_t partial apply for closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:)()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in CallRecordingService.startRecording(call:completion:);
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:)(v3, v4, v5, v6);
}

void partial apply for closure #1 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  closure #1 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(a1, a2, a3, a4, v4);
}

void partial apply for closure #2 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(char a1)
{
  closure #2 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(a1, v1);
}

void partial apply for closure #3 in ConversationControlsManager.setupConversationControllerLocalStateObservers()()
{
  closure #3 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(v0);
}

void partial apply for closure #4 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(void *a1)
{
  closure #4 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(a1, v1);
}

void partial apply for closure #5 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(char a1)
{
  closure #5 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(a1, v1);
}

void partial apply for closure #6 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1)
{
  closure #6 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(a1, v1);
}

void partial apply for closure #7 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1, uint64_t a2)
{
  closure #7 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(a1, a2, v2);
}

void partial apply for closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2)
{
  closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, a2, v2);
}

void partial apply for closure #2 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(char a1)
{
  closure #2 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, v1);
}

void partial apply for closure #3 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1)
{
  closure #3 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, v1);
}

void partial apply for closure #4 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1)
{
  closure #4 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, v1);
}

void partial apply for closure #6 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  closure #6 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, a2, a3, v3);
}

void partial apply for closure #7 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, char a2)
{
  closure #7 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, a2 & 1, v2);
}

void partial apply for closure #8 in ConversationControlsManager.setupConversationControllerConversationStateObservers()()
{
  closure #8 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(v0);
}

void partial apply for closure #9 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2)
{
  closure #9 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, a2, v2);
}

void partial apply for closure #10 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(char a1)
{
  closure #10 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, v1);
}

void partial apply for closure #1 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  closure #1 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void partial apply for closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void partial apply for closure #4 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1)
{
  closure #4 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, v1);
}

void *partial apply for closure #5 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  return closure #5 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void *partial apply for closure #6 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  return closure #6 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void *partial apply for closure #7 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  return closure #7 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void *partial apply for closure #8 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  return closure #8 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void partial apply for closure #9 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1)
{
  closure #9 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, v1);
}

void partial apply for closure #10 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, char a2)
{
  closure #10 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void partial apply for closure #11 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1)
{
  closure #11 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, v1);
}

void partial apply for closure #12 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  closure #12 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, a3, v3);
}

void *partial apply for closure #1 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(unint64_t a1)
{
  return closure #1 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(a1, v1);
}

void partial apply for closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(void *a1, uint64_t a2, uint64_t a3)
{
  closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(a1, a2, a3, v3);
}

void partial apply for closure #3 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  closure #3 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(a1, a2, a3, v3);
}

void partial apply for closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1)
{
  closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(a1, v1);
}

void partial apply for closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(a1, a2, a3, a4, a5 & 1, v5);
}

void *partial apply for closure #1 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1)
{
  return closure #1 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

void partial apply for closure #2 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1)
{
  closure #2 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

void partial apply for closure #3 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1)
{
  closure #3 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

uint64_t partial apply for closure #4 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1)
{
  return closure #4 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

uint64_t partial apply for closure #5 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1)
{
  return closure #5 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

void partial apply for closure #6 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1)
{
  closure #6 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

void partial apply for closure #7 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(char a1)
{
  closure #7 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

void partial apply for closure #8 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, uint64_t a2)
{
  closure #8 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, a2, v2);
}

uint64_t sub_1C32C15CC()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:)()
{
  closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:)(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1C32C1624()
{
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConduitApprovalDelegate.cancelSplitSessionApproval()()
{
  closure #1 in ConduitApprovalDelegate.cancelSplitSessionApproval()(*(char **)(v0 + 16));
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:splitSessionStarted:)()
{
  closure #1 in ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:splitSessionStarted:)(*(void **)(v0 + 16));
}

uint64_t partial apply for closure #1 in ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:suggestionUpdated:)()
{
  return ConduitLagunaNoticeManager.updateState()();
}

uint64_t sub_1C32C1688()
{
  OUTLINED_FUNCTION_30_8();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.conversationManager(_:stateChangedFor:fromOldConversation:)()
{
  closure #1 in ConduitLagunaNoticeManager.conversationManager(_:stateChangedFor:fromOldConversation:)(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1C32C16DC()
{
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.conversationManager(_:remoteMembersChangedFor:)()
{
  closure #1 in ConduitLagunaNoticeManager.conversationManager(_:remoteMembersChangedFor:)(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1C32C17B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t (*)(uint64_t))ConversationControlsManager.$shouldOpenMessages.setter);
}

uint64_t sub_1C32C17EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t (*)(uint64_t))ConversationControlsManager.$shouldEnableStartingStagedActivity.setter);
}

uint64_t sub_1C32C183C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for Published<TURoute?>.Publisher, (uint64_t (*)(uint64_t))ConversationControlsManager.$audioRoute.setter);
}

uint64_t sub_1C32C1874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for Published<TUCallBluetoothAudioFormat?>.Publisher, (uint64_t (*)(uint64_t))ConversationControlsManager.$bluetoothAudioFormat.setter);
}

uint64_t sub_1C32C18AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t (*)(uint64_t))ConversationControlsManager.$localAudioEnabled.setter);
}

uint64_t sub_1C32C18E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for Published<ControlsActionState>.Publisher, (uint64_t (*)(uint64_t))ConversationControlsManager.$localVideoButtonState.setter);
}

uint64_t sub_1C32C192C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<ConversationControlsManager.PushToTalkChannelState>.Publisher, (uint64_t (*)(uint64_t))ConversationControlsManager.$pttChannelState.setter);
}

uint64_t sub_1C32C1964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for Published<TUCallTransmissionMode>.Publisher, (uint64_t (*)(uint64_t))ConversationControlsManager.$pttChannelTransmissionMode.setter);
}

uint64_t sub_1C32C19C4(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return ConversationControlsManager.isWaitingOnFirstRemoteFrame.setter(v1);
}

uint64_t sub_1C32C19EC(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return ConversationControlsManager.shouldShowAVLessLeaveConfirmation.setter(v1);
}

uint64_t dispatch thunk of SystemBannerPresenter.presentBanner(as:type:reply:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of SystemBannerPresenter.dismissPresentedBanner(forReason:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of SystemBannerPresenter.dismissPresentedBanner(matching:forReason:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of SystemBannerPresenter.requestPreferredLayoutMode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SystemBannerPresenter.getConversationControlsTypeForPresentedBanner()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.isAlertAvailable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.updatePresentedHUD(type:replacingNotice:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.updatePresentedHUDCornerRadius()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.dismissPresentedBanner(forReason:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.presentFullscreenUI()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.deepLinkToFullScreenCallUI()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.didOpenMessages()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.didRequestAVLessDowngrade()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.isSpringBoardLocked.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.invalidatePersistentSystemApertureAlert(reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.requestEphemeralSystemApertureAlert(reason:shouldOverridePersistentAssertion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.requestPersistentSystemApertureAlert(reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.presentShareCardViewController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of SystemAudioConversationControlsDelegate.isFullScreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SystemAudioConversationControlsDelegate.presentShareCardViewController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.inCallControlsVisible.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.layoutStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.isFullScreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.isOnScreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.isScreenSharingVisible.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.isOnScreenPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.isShownAboveCoverSheet.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.canDismissControls.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.updateInCallConversationControls(type:showControlsIfHidden:forceUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.dismissControls()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.handleToggleLayoutAction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.handleUserDidToggleCaptions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.didAcceptCall()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.presentCallDetails()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.didRequestPostNotice(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.presentShareCardViewController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.closeVideoMessageCallBack()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of ConversationControlsDismissalTimerDelegate.invalidateAndRescheduleTimer(reschedule:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.controlsModeUpdated()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.layoutStyleUpdated()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.updated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.update(participant:broadcastingState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.update(participant:isKickingAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.update(with:updateReason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.updateRemoteAudioPaused(audioPaused:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.refreshToggleIgnoreLMIRequestsRowCell()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HandoffCompletedDelegate.conversationForHandoffCompleted()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void destroy for ControlsHUDUpdate(uint64_t a1)
{
  switch(*(unsigned char *)(a1 + 40))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1(a1);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for ControlsHUDUpdate(uint64_t a1, uint64_t a2)
{
  switch(*(unsigned char *)(a2 + 40))
  {
    case 0:
      long long v4 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
      break;
    case 1:
      uint64_t v5 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      char v6 = 1;
      goto LABEL_6;
    case 2:
      uint64_t v7 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 2;
      id v8 = v7;
      break;
    case 3:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      char v6 = 3;
LABEL_6:
      *(unsigned char *)(a1 + 40) = v6;
      swift_bridgeObjectRetain();
      break;
    case 5:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 40) = 5;
      swift_unknownObjectRetain();
      break;
    default:
      long long v10 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      break;
  }
  *(_WORD *)(a1 + 4ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = *(_WORD *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for ControlsHUDUpdate(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1);
    switch(*((unsigned char *)a2 + 40))
    {
      case 0:
        uint64_t v4 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v4;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 0;
        break;
      case 1:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v5 = 1;
        goto LABEL_7;
      case 2:
        char v6 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 40) = 2;
        id v7 = v6;
        break;
      case 3:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v5 = 3;
LABEL_7:
        *(unsigned char *)(a1 + 40) = v5;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 40) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        long long v8 = *a2;
        long long v9 = a2[1];
        *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
        *(_OWORD *)a1 = v8;
        *(_OWORD *)(a1 + 16) = v9;
        break;
    }
  }
  *(unsigned char *)(a1 + 4ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = *((unsigned char *)a2 + 41);
  *(unsigned char *)(a1 + 42) = *((unsigned char *)a2 + 42);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  return a1;
}

uint64_t assignWithTake for ControlsHUDUpdate(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1);
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  *(unsigned char *)(a1 + 4ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlsHUDUpdate(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 56))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 41);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlsHUDUpdate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlsHUDUpdate()
{
  return &type metadata for ControlsHUDUpdate;
}

uint64_t ObjC metadata update function for ConversationControlsManager()
{
  return type metadata accessor for ConversationControlsManager(0);
}

void type metadata completion function for ConversationControlsManager()
{
  type metadata accessor for Published<Bool>(319, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Set<TUHandle>?>(319, (unint64_t *)&lazy cache variable for type metadata for Published<TURoute?>, &demangling cache variable for type metadata for TURoute?);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Set<TUHandle>?>(319, (unint64_t *)&lazy cache variable for type metadata for Published<TUCallBluetoothAudioFormat?>, (uint64_t *)&demangling cache variable for type metadata for TUCallBluetoothAudioFormat?);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<ControlsActionState>);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Published<Bool>(319, (unint64_t *)&lazy cache variable for type metadata for Published<ConversationControlsManager.PushToTalkChannelState>);
          if (v4 <= 0x3F)
          {
            type metadata accessor for Published<TUCallTransmissionMode>(319, &lazy cache variable for type metadata for Published<TUCallTransmissionMode>, (uint64_t (*)(uint64_t))type metadata accessor for TUCallTransmissionMode, MEMORY[0x1E4F1AC70]);
            if (v5 <= 0x3F)
            {
              type metadata accessor for Published<Set<TUHandle>?>(319, (unint64_t *)&lazy cache variable for type metadata for Published<ForegroundApp?>, (uint64_t *)&demangling cache variable for type metadata for ForegroundApp?);
              if (v6 <= 0x3F)
              {
                type metadata accessor for Cache<String, [ConversationControlsManager.CollaborationPrompt]>();
                if (v7 <= 0x3F)
                {
                  type metadata accessor for ForegroundCollaborationState(319);
                  if (v8 <= 0x3F)
                  {
                    type metadata accessor for Published<Set<TUHandle>?>(319, &lazy cache variable for type metadata for Published<EphemeralAlert?>, &demangling cache variable for type metadata for EphemeralAlert?);
                    if (v9 <= 0x3F)
                    {
                      type metadata accessor for Published<TUCallTransmissionMode>(319, (unint64_t *)&lazy cache variable for type metadata for Date?, MEMORY[0x1F418B9B8], MEMORY[0x1E4FBB718]);
                      if (v10 <= 0x3F)
                      {
                        type metadata accessor for Published<TUCallTransmissionMode>(319, &lazy cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>, type metadata accessor for ConversationControlsAppLaunchButtonType, MEMORY[0x1E4F1AC70]);
                        if (v11 <= 0x3F) {
                          swift_updateClassMetadata2();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for ConversationControlsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationControlsManager);
}

uint64_t dispatch thunk of ConversationControlsManager.activeCall.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of ConversationControlsManager.callUUID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of ConversationControlsManager.hasMultipleCalls.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of ConversationControlsManager.activeBannerIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of ConversationControlsManager.conversation.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of ConversationControlsManager.ignoredScreenSharingRequestUUIDs.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of ConversationControlsManager.ignoredScreenSharingRequestUUIDs.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of ConversationControlsManager.ignoredScreenSharingRequestUUIDs.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of ConversationControlsManager.mostRecentActiveConversation.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.localParticipant.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of ConversationControlsManager.initiallyActiveParticipantIdentifiers.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2C0))();
}

uint64_t dispatch thunk of ConversationControlsManager.initiallyActiveParticipantIdentifiers.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of ConversationControlsManager.initiallyActiveParticipantIdentifiers.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of ConversationControlsManager.countdownController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F0))();
}

uint64_t dispatch thunk of ConversationControlsManager.countdownController.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.countdownController.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x300))();
}

uint64_t dispatch thunk of ConversationControlsManager.contentExtractor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x308))();
}

uint64_t dispatch thunk of ConversationControlsManager.contentExtractor.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x310))();
}

uint64_t dispatch thunk of ConversationControlsManager.contentExtractor.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x318))();
}

uint64_t dispatch thunk of ConversationControlsManager.conversationIsAVLess.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x320))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowCallDetailsWhenReady.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x328))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowCallDetailsWhenReady.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x330))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowCallDetailsWhenReady.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x338))();
}

uint64_t dispatch thunk of ConversationControlsManager.minReactionCountForNotice.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x370))();
}

uint64_t dispatch thunk of ConversationControlsManager.minReactionCountForNotice.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x378))();
}

uint64_t dispatch thunk of ConversationControlsManager.minReactionCountForNotice.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x380))();
}

uint64_t dispatch thunk of ConversationControlsManager.canPostReactionNotice.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x388))();
}

uint64_t dispatch thunk of ConversationControlsManager.canPostReactionNotice.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x390))();
}

uint64_t dispatch thunk of ConversationControlsManager.canPostReactionNotice.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x398))();
}

uint64_t dispatch thunk of ConversationControlsManager.videoTileConversationController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3A0))();
}

uint64_t dispatch thunk of ConversationControlsManager.videoTileConversationController.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3A8))();
}

uint64_t dispatch thunk of ConversationControlsManager.videoTileConversationController.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.callControlsService.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3D0))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemBannerPresenter.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3E8))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemBannerPresenter.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3F0))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemBannerPresenter.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemConversationControlsDelegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x400))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemConversationControlsDelegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x408))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemConversationControlsDelegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x410))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemAudioConversationControlsDelegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x418))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemAudioConversationControlsDelegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x420))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemAudioConversationControlsDelegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x428))();
}

uint64_t dispatch thunk of ConversationControlsManager.inCallConversationControlsDelegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x430))();
}

uint64_t dispatch thunk of ConversationControlsManager.inCallConversationControlsDelegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x438))();
}

uint64_t dispatch thunk of ConversationControlsManager.inCallConversationControlsDelegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x440))();
}

uint64_t dispatch thunk of ConversationControlsManager.inCallDetailsViewControllerDelegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x448))();
}

uint64_t dispatch thunk of ConversationControlsManager.inCallDetailsViewControllerDelegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x450))();
}

uint64_t dispatch thunk of ConversationControlsManager.inCallDetailsViewControllerDelegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x458))();
}

uint64_t dispatch thunk of ConversationControlsManager.audioRoutingDelegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x460))();
}

uint64_t dispatch thunk of ConversationControlsManager.audioRoutingDelegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x468))();
}

uint64_t dispatch thunk of ConversationControlsManager.audioRoutingDelegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x470))();
}

uint64_t dispatch thunk of ConversationControlsManager.localAudioTogglingDelegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x478))();
}

uint64_t dispatch thunk of ConversationControlsManager.localAudioTogglingDelegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x480))();
}

uint64_t dispatch thunk of ConversationControlsManager.localAudioTogglingDelegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x488))();
}

uint64_t dispatch thunk of ConversationControlsManager.handoffCompletedDelegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x490))();
}

uint64_t dispatch thunk of ConversationControlsManager.handoffCompletedDelegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x498))();
}

uint64_t dispatch thunk of ConversationControlsManager.handoffCompletedDelegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x4A0))();
}

uint64_t dispatch thunk of ConversationControlsManager.conduitLagunaNoticeManager.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x4C0))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldOpenMessages.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x4D8))();
}

uint64_t dispatch thunk of ConversationControlsManager.$shouldOpenMessages.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x4F0))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldEnableStartingStagedActivity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x508))();
}

uint64_t dispatch thunk of ConversationControlsManager.$shouldEnableStartingStagedActivity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x520))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityManager.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x538))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityManager.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x540))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityManager.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x548))();
}

uint64_t dispatch thunk of ConversationControlsManager.bannerActivityManager.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x550))();
}

uint64_t dispatch thunk of ConversationControlsManager.bannerActivityManager.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x558))();
}

uint64_t dispatch thunk of ConversationControlsManager.bannerActivityManager.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x560))();
}

uint64_t dispatch thunk of ConversationControlsManager.incomingScreenSharingRequestActivity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x568))();
}

uint64_t dispatch thunk of ConversationControlsManager.incomingScreenSharingRequestActivity.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x570))();
}

uint64_t dispatch thunk of ConversationControlsManager.incomingScreenSharingRequestActivity.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x578))();
}

uint64_t dispatch thunk of ConversationControlsManager.audioRoute.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x580))();
}

uint64_t dispatch thunk of ConversationControlsManager.$audioRoute.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x598))();
}

uint64_t dispatch thunk of ConversationControlsManager.bluetoothAudioFormat.getter()
{
  OUTLINED_FUNCTION_0_20();
  return (*(uint64_t (**)(void))(v0 + 1456))();
}

uint64_t dispatch thunk of ConversationControlsManager.$bluetoothAudioFormat.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5C8))();
}

uint64_t dispatch thunk of ConversationControlsManager.localAudioEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E0))();
}

uint64_t dispatch thunk of ConversationControlsManager.$localAudioEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.localVideoButtonState.getter()
{
  OUTLINED_FUNCTION_0_20();
  __int16 v1 = (*(uint64_t (**)(void))(v0 + 1552))();
  return v1 & 1 | ((HIBYTE(v1) & 1) << 8);
}

uint64_t dispatch thunk of ConversationControlsManager.$localVideoButtonState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x628))();
}

uint64_t dispatch thunk of ConversationControlsManager.shareMenuButtonState.getter()
{
  OUTLINED_FUNCTION_0_20();
  __int16 v1 = (*(uint64_t (**)(void))(v0 + 1600))();
  return v1 & 1 | ((HIBYTE(v1) & 1) << 8);
}

uint64_t dispatch thunk of ConversationControlsManager.shareMenuButtonState.setter(__int16 a1, uint64_t a2, __int16 a3)
{
  return (*(uint64_t (**)(void, uint64_t, void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x648))(a1 & 0x101, a2, a3 & 0x101);
}

uint64_t dispatch thunk of ConversationControlsManager.shareMenuButtonState.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x650))();
}

uint64_t dispatch thunk of ConversationControlsManager.screenSharingAvailable.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x658))();
}

uint64_t dispatch thunk of ConversationControlsManager.screenSharingAvailable.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x660))();
}

uint64_t dispatch thunk of ConversationControlsManager.screenSharingAvailable.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x668))();
}

uint64_t dispatch thunk of ConversationControlsManager.shareMenuButtonStatePublisher.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x670))();
}

uint64_t dispatch thunk of ConversationControlsManager.screenSharingAvailablePublisher.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x678))();
}

uint64_t dispatch thunk of ConversationControlsManager.pttChannelState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x698))();
}

uint64_t dispatch thunk of ConversationControlsManager.$pttChannelState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x6B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.pttChannelTransmissionMode.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x6C8))();
}

uint64_t dispatch thunk of ConversationControlsManager.$pttChannelTransmissionMode.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x6E0))();
}

uint64_t dispatch thunk of ConversationControlsManager.pttViewModel.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x6F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.isConfirmLeavePTTChannelAlertPresented.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x770))();
}

uint64_t dispatch thunk of ConversationControlsManager.foregroundApp.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x778))();
}

uint64_t dispatch thunk of ConversationControlsManager.foregroundApp.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x780))();
}

uint64_t dispatch thunk of ConversationControlsManager.foregroundApp.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x788))();
}

uint64_t dispatch thunk of ConversationControlsManager.$foregroundApp.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x790))();
}

uint64_t dispatch thunk of ConversationControlsManager.$foregroundApp.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x798))();
}

uint64_t dispatch thunk of ConversationControlsManager.$foregroundApp.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x7A0))();
}

uint64_t dispatch thunk of ConversationControlsManager.refreshShareableContentWithBundleIdentifier(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x7A8))();
}

uint64_t dispatch thunk of ConversationControlsManager.isAppUnsupportedOnSharePlayPlatform(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x7B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.foregroundCollaborationState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x7D8))();
}

uint64_t dispatch thunk of ConversationControlsManager.foregroundCollaborationState.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x7E0))();
}

uint64_t dispatch thunk of ConversationControlsManager.foregroundCollaborationState.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x7E8))();
}

uint64_t dispatch thunk of ConversationControlsManager.ephemeralAlert.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x7F0))();
}

uint64_t dispatch thunk of ConversationControlsManager.ephemeralAlert.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x7F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.ephemeralAlert.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x800))();
}

uint64_t dispatch thunk of ConversationControlsManager.$ephemeralAlert.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x808))();
}

uint64_t dispatch thunk of ConversationControlsManager.$ephemeralAlert.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x810))();
}

uint64_t dispatch thunk of ConversationControlsManager.$ephemeralAlert.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x818))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowDelayedLMIBanner.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x820))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowDelayedLMIBanner.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x828))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowDelayedLMIBanner.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x830))();
}

uint64_t dispatch thunk of ConversationControlsManager.gridLayoutStyle.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x838))();
}

uint64_t dispatch thunk of ConversationControlsManager.controlsMode.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x840))();
}

uint64_t dispatch thunk of ConversationControlsManager.conversationHUDType.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x848))();
}

uint64_t dispatch thunk of ConversationControlsManager.isWaitingOnFirstRemoteFrame.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x850))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowAVLessLeaveConfirmation.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x868))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityLaunchTimer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x8B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityLaunchTimer.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x8B8))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityLaunchTimer.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x8C0))();
}

uint64_t dispatch thunk of ConversationControlsManager.currentActivity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x8C8))();
}

uint64_t dispatch thunk of ConversationControlsManager.currentSharePlayActivity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x8D0))();
}

uint64_t dispatch thunk of ConversationControlsManager.stagedSharePlayActivity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x8D8))();
}

uint64_t dispatch thunk of ConversationControlsManager.currentOrStagedSharePlayActivity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x8E0))();
}

uint64_t dispatch thunk of ConversationControlsManager.currentCollaboration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x8E8))();
}

uint64_t dispatch thunk of ConversationControlsManager.stagedCollaboration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x8F0))();
}

uint64_t dispatch thunk of ConversationControlsManager.stagedOrCurrentCollaboration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x8F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityToShowInHUD.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x900))();
}

uint64_t dispatch thunk of ConversationControlsManager.remoteParticipants.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x908))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowSharePlayActivityInHUD(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x910))();
}

uint64_t dispatch thunk of ConversationControlsManager.applicationState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x918))();
}

uint64_t dispatch thunk of ConversationControlsManager.applicationState.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x920))();
}

uint64_t dispatch thunk of ConversationControlsManager.applicationState.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x928))();
}

uint64_t dispatch thunk of ConversationControlsManager.appLaunchButtonType.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x930))();
}

uint64_t dispatch thunk of ConversationControlsManager.appLaunchButtonType.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x938))();
}

uint64_t dispatch thunk of ConversationControlsManager.appLaunchButtonType.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x940))();
}

uint64_t dispatch thunk of ConversationControlsManager.$appLaunchButtonType.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x948))();
}

uint64_t dispatch thunk of ConversationControlsManager.$appLaunchButtonType.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x950))();
}

uint64_t dispatch thunk of ConversationControlsManager.$appLaunchButtonType.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x958))();
}

uint64_t dispatch thunk of ConversationControlsManager.configureAppLaunchButtonType()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x960))();
}

uint64_t dispatch thunk of ConversationControlsManager.isAlertAvailable.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x968))();
}

uint64_t dispatch thunk of ConversationControlsManager.__allocating_init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)()
{
  return (*(uint64_t (**)(void))(v0 + 2416))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateControlsState()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x978))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateConversation()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x980))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateControlsCornerRadius()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x988))();
}

uint64_t dispatch thunk of ConversationControlsManager.reviewLMIRequests()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x990))();
}

uint64_t dispatch thunk of ConversationControlsManager.reloadDetailsView(participant:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x998))();
}

uint64_t dispatch thunk of ConversationControlsManager.reloadDetailsView(isLocalMemberAuthorizedToChangeGroupMembership:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x9A0))();
}

uint64_t dispatch thunk of ConversationControlsManager.reloadDetailsView(participant:isKickingAvailable:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x9A8))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateDetailsViewMode()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x9B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateDetails(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x9B8))();
}

uint64_t dispatch thunk of ConversationControlsManager.layoutStyleUpdated()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x9C0))();
}

uint64_t dispatch thunk of ConversationControlsManager.bannerPresentationManagerDidDismissBanner(type:reason:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x9C8))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateActiveCallForAVModeChange(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x9D0))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateForegroundCollaborationStateTask.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x9D8))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateForegroundCollaborationStateTask.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x9E0))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateForegroundCollaborationStateTask.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x9E8))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateForegroundCollaborationState()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x9F0))();
}

uint64_t dispatch thunk of ConversationControlsManager.suppressingSystemNotices.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x9F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.scheduleDismissTimer()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA00))();
}

uint64_t dispatch thunk of ConversationControlsManager.invalidateDismissTimer()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA08))();
}

uint64_t dispatch thunk of ConversationControlsManager.invalidateAndRescheduleDismissTimer(reschedule:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA10))();
}

uint64_t dispatch thunk of ConversationControlsManager.screenShareCountdownTimer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA18))();
}

void type metadata accessor for Published<Bool>(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for Published();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void type metadata accessor for Cache<String, [ConversationControlsManager.CollaborationPrompt]>()
{
  if (!lazy cache variable for type metadata for Cache<String, [ConversationControlsManager.CollaborationPrompt]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [ConversationControlsManager.CollaborationPrompt]);
    unint64_t v0 = type metadata accessor for Cache();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Cache<String, [ConversationControlsManager.CollaborationPrompt]>);
    }
  }
}

void type metadata accessor for Published<TUCallTransmissionMode>(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ConversationControlsManager.PushToTalkChannelState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C32C5014);
      case 4:
        *(_DWORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationControlsManager.PushToTalkChannelState()
{
  return &type metadata for ConversationControlsManager.PushToTalkChannelState;
}

uint64_t type metadata accessor for ScreenSharingControlStateManager()
{
  return self;
}

uint64_t type metadata accessor for ConduitApprovalDelegate()
{
  return self;
}

uint64_t method lookup function for ConduitApprovalDelegate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConduitApprovalDelegate);
}

uint64_t dispatch thunk of ConduitApprovalDelegate.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t ObjC metadata update function for ConduitLagunaNoticeManager()
{
  return type metadata accessor for ConduitLagunaNoticeManager(0);
}

uint64_t type metadata accessor for ConduitLagunaNoticeManager(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConduitLagunaNoticeManager);
}

void type metadata completion function for ConduitLagunaNoticeManager()
{
  type metadata accessor for Published<TUCallTransmissionMode>(319, (unint64_t *)&lazy cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ConduitLagunaNoticeManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConduitLagunaNoticeManager);
}

uint64_t dispatch thunk of ConduitLagunaNoticeManager.__allocating_init(_:queue:callCenter:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void *initializeBufferWithCopyOfBuffer for ConduitLagunaNoticeManager.PushBannerInfo(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v10;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    id v11 = v10;
  }
  return a1;
}

uint64_t initializeWithCopy for ConduitLagunaNoticeManager.PushBannerInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  id v10 = v9;
  return a1;
}

uint64_t assignWithCopy for ConduitLagunaNoticeManager.PushBannerInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for ConduitLagunaNoticeManager.PushBannerInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for ConduitLagunaNoticeManager.PushBannerInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ConduitLagunaNoticeManager.PushBannerInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C32C5508);
}

uint64_t sub_1C32C5508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ConduitLagunaNoticeManager.PushBannerInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C32C55A8);
}

void sub_1C32C55A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_297();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(v4, a2, a2, v8);
  }
  else
  {
    *(void *)(v4 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata completion function for ConduitLagunaNoticeManager.PushBannerInfo()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ConversationControlsManager.CollaborationPrompt(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConversationControlsManager.CollaborationPrompt(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 10) = v3;
  return result;
}

uint64_t getEnumTag for ConversationControlsManager.CollaborationPrompt(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t destructiveInjectEnumTag for ConversationControlsManager.CollaborationPrompt(uint64_t result, int a2)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 9) = v2;
  return result;
}

void *type metadata accessor for ConversationControlsManager.CollaborationPrompt()
{
  return &unk_1F1EA5418;
}

unint64_t lazy protocol witness table accessor for type ConversationControlsManager.CollaborationPrompt and conformance ConversationControlsManager.CollaborationPrompt()
{
  unint64_t result = lazy protocol witness table cache variable for type ConversationControlsManager.CollaborationPrompt and conformance ConversationControlsManager.CollaborationPrompt;
  if (!lazy protocol witness table cache variable for type ConversationControlsManager.CollaborationPrompt and conformance ConversationControlsManager.CollaborationPrompt)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsManager.CollaborationPrompt and conformance ConversationControlsManager.CollaborationPrompt);
  }
  return result;
}

uint64_t sub_1C32C57D0()
{
  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned ObjCBool, @unowned NSError?) -> ()(char a1, uint64_t a2)
{
  thunk for @escaping @callee_unowned @convention(block) (@unowned ObjCBool, @unowned NSError?) -> ()(a1, a2, *(void *)(v2 + 16));
}

uint64_t outlined assign with copy of ConduitLagunaNoticeManager.PushBannerInfo?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of TranscriptionViewModel.Caption(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptionViewModel.Caption(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ControlsHUDUpdate(uint64_t a1)
{
  return a1;
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.updateState()()
{
  closure #1 in ConduitLagunaNoticeManager.updateState()(*(char **)(v0 + 16));
}

uint64_t sub_1C32C590C()
{
  OUTLINED_FUNCTION_14();
  type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_366();
  uint64_t v4 = v1 + v3;
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v5();

  swift_release();
  OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_15_0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConduitLagunaNoticeManager.presentBanner(for:)(char a1, void *a2)
{
  uint64_t v5 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  OUTLINED_FUNCTION_1(v5);
  OUTLINED_FUNCTION_291();
  uint64_t v8 = *(void **)(v2 + v7);
  uint64_t v10 = *(void *)(v2 + v9);
  return closure #1 in ConduitLagunaNoticeManager.presentBanner(for:)(a1, a2, v2 + v6, v8, v10);
}

uint64_t sub_1C32C5A5C()
{
  OUTLINED_FUNCTION_14();
  type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  OUTLINED_FUNCTION_1_6();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  OUTLINED_FUNCTION_366();

  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v5();

  swift_release();
  OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_15_0();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in ConduitLagunaNoticeManager.presentBanner(for:)()
{
  uint64_t v1 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  OUTLINED_FUNCTION_1(v1);
  OUTLINED_FUNCTION_291();
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + v4);
  uint64_t v7 = *(void *)(v0 + v6);
  int v8 = *(unsigned __int8 *)(v0 + v6 + 8);
  closure #1 in closure #1 in ConduitLagunaNoticeManager.presentBanner(for:)(v3, v0 + v2, v5, v7, v8);
}

uint64_t partial apply for closure #1 in closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:)()
{
  return (*(uint64_t (**)(uint64_t, void))(v0 + 16))(1, 0);
}

uint64_t partial apply for closure #2 in closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:)()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(0, 0);
}

uint64_t sub_1C32C5C00()
{
  OUTLINED_FUNCTION_14();
  type metadata accessor for URL();
  OUTLINED_FUNCTION_4();
  unint64_t v3 = (*(void *)(v2 + 64)
      + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;

  OUTLINED_FUNCTION_1_19();
  v4();

  OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_15_0();
  return swift_deallocObject();
}

void partial apply for closure #2 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()()
{
  uint64_t v1 = type metadata accessor for URL();
  OUTLINED_FUNCTION_1(v1);
  OUTLINED_FUNCTION_10_11();
  unint64_t v3 = *(void **)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + v4);
  closure #2 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(v3, v0 + v2, v5);
}

uint64_t sub_1C32C5D10()
{
  swift_release();

  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()()
{
  closure #1 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t outlined consume of SessionActionNotice.NoticeType?(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 2 != 0xFFFFFFFF) {
    return outlined consume of SessionActionNotice.NoticeType(result, a2, a3);
  }
  return result;
}

uint64_t partial apply for closure #3 in closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in CallRecordingService.stopRecording(call:completion:);
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #3 in closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(v3, v4, v5, v6);
}

uint64_t partial apply for closure #1 in ConversationControlsManager.addIncomingScreenSharingRequestActivity()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in CallRecordingService.startRecording(call:completion:);
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ConversationControlsManager.addIncomingScreenSharingRequestActivity()(v3, v4, v5, v6);
}

uint64_t sub_1C32C5E8C()
{
  type metadata accessor for Collaboration(0);
  OUTLINED_FUNCTION_19_4();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  type metadata accessor for URL();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  OUTLINED_FUNCTION_122();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()()
{
  uint64_t v1 = type metadata accessor for Collaboration(0);
  OUTLINED_FUNCTION_1_1(v1);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  closure #1 in closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(v3, v4);
}

uint64_t sub_1C32C5FC0()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5;
  swift_release();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0 + v3, 1, v4);
  uint64_t v8 = *(void (**)(void))(v6 + 8);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = OUTLINED_FUNCTION_30_15();
    ((void (*)(uint64_t))v8)(v9);
  }
  OUTLINED_FUNCTION_336();
  v8();
  OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_28();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_1(v6);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = (unsigned char *)(v0 + ((v3 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
  return closure #1 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(v8, v0 + v3, v9);
}

void partial apply for closure #2 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()()
{
  closure #2 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(v0);
}

uint64_t objectdestroy_88Tm()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in CallRecordingService.startRecording(call:completion:);
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(v3, v4, v5, v6);
}

void partial apply for closure #1 in ConversationControlsManager.scheduleDelayedLMIBanner()()
{
  closure #1 in ConversationControlsManager.scheduleDelayedLMIBanner()(v0);
}

id partial apply for closure #1 in closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers()(void *a1)
{
  return closure #1 in closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers()(a1, v1);
}

uint64_t sub_1C32C6244()
{
  return OUTLINED_FUNCTION_7_44();
}

id partial apply for closure #1 in ConversationControlsManager.presentActivity(activity:completion:)(void *a1)
{
  return closure #1 in ConversationControlsManager.presentActivity(activity:completion:)(a1, v1 + 2, v1[7], v1[8]);
}

uint64_t sub_1C32C6260()
{
  return objectdestroy_102Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t objectdestroy_102Tm(void (*a1)(void))
{
  if (*(void *)(v1 + 16)) {
    swift_release();
  }
  a1(*(void *)(v1 + 32));
  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in ConversationControlsManager.presentActivity(activity:completion:)()
{
  uint64_t v1 = *(void (**)(BOOL))(v0 + 16);
  if (v1) {
    v1(*(void *)(v0 + 32) == 0);
  }
}

uint64_t sub_1C32C6304()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_10(v3);
  *uint64_t v4 = v5;
  v4[1] = partial apply for closure #1 in CallRecordingService.startRecording(call:completion:);
  uint64_t v6 = OUTLINED_FUNCTION_275();
  return closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)(v6, v7, v8, v9, v1, v2);
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.rejectSuggestion(_:)(char a1, void *a2)
{
  closure #1 in ConduitLagunaNoticeManager.rejectSuggestion(_:)(a1, a2, *(void **)(v2 + 16));
}

void partial apply for closure #1 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()(uint64_t a1, uint64_t a2)
{
  closure #1 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()(a1, a2, v2);
}

void partial apply for closure #3 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()(void *a1, void *a2, char a3)
{
  closure #3 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()(a1, a2, a3, v3);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TUCall, @guaranteed TUParticipant?, @unowned Bool) -> ()(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

void specialized ConversationControlsManager.updatePTTChannelState(call:)(void *a1)
{
  lazy protocol witness table accessor for type TUCall and conformance TUCall();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.conversationControls);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1C2F90000, v2, v3, "Update PTT Channel state for call called", v4, 2u);
    MEMORY[0x1C87760E0](v4, -1, -1);
  }

  self;
  uint64_t v5 = swift_dynamicCastObjCClass();
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = (void *)v5;
  swift_unknownObjectRetain();
  if (!objc_msgSend(v6, sel_isPTT))
  {

LABEL_10:
    ConversationControlsManager.pttChannelState.setter();
    return;
  }
  if (objc_msgSend(v6, sel_serviceStatus)
    || (id v7 = objc_msgSend(v6, sel_provider),
        unsigned int v8 = objc_msgSend(v7, sel_audioSessionID),
        v7,
        !v8))
  {
    ConversationControlsManager.pttChannelState.setter();
  }
  else
  {
    if (objc_msgSend(v6, sel_status) != 1
      || (objc_msgSend(v6, sel_isReceivingTransmission) & 1) != 0
      && (objc_msgSend(v6, sel_isSendingTransmission) & 1) != 0
      || (objc_msgSend(v6, sel_isReceivingTransmission) & 1) != 0
      || (objc_msgSend(v6, sel_isSendingTransmission) & 1) != 0)
    {
      ConversationControlsManager.pttChannelState.setter();
    }
    objc_msgSend(v6, sel_transmissionMode);
    ConversationControlsManager.pttChannelTransmissionMode.setter();
  }
}

void partial apply for closure #1 in ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)(uint64_t a1)
{
  closure #1 in ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)(a1, v1);
}

void partial apply for closure #1 in ConversationControlsManager.inCallConversationControlsDelegate.didset(char *a1)
{
  closure #1 in ConversationControlsManager.inCallConversationControlsDelegate.didset(a1, v1);
}

uint64_t sub_1C32C66C4()
{
  type metadata accessor for Collaboration(0);
  OUTLINED_FUNCTION_19_4();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  type metadata accessor for URL();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v5();

  OUTLINED_FUNCTION_285();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsManager.presentCollaboration(_:completion:)(char a1)
{
  uint64_t v3 = type metadata accessor for Collaboration(0);
  OUTLINED_FUNCTION_1(v3);
  OUTLINED_FUNCTION_10_11();
  uint64_t v5 = v1[2];
  uint64_t v6 = (void (*)(id))v1[3];
  uint64_t v7 = v1[4];
  uint64_t v9 = *(void *)((char *)v1 + v8);
  closure #1 in ConversationControlsManager.presentCollaboration(_:completion:)(a1, v5, v6, v7, (void *)((char *)v1 + v4), v9);
}

void partial apply for closure #2 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(char a1)
{
  closure #2 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t partial apply for closure #1 in ConversationControlsManager.promptForReplaceAlertIfNeeded(_:)(uint64_t a1)
{
  return closure #1 in ConversationControlsManager.promptForReplaceAlertIfNeeded(_:)(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1C32C6864()
{
  return OUTLINED_FUNCTION_7_44();
}

uint64_t sub_1C32C6870()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  OUTLINED_FUNCTION_30_8();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(void *a1)
{
  closure #1 in closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

double OUTLINED_FUNCTION_86_3()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_95_1()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t OUTLINED_FUNCTION_106_0()
{
  return swift_getObjectType();
}

void *OUTLINED_FUNCTION_109()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v0 - 160), *(void *)(v0 - 136));
}

void OUTLINED_FUNCTION_116(unint64_t a1@<X8>)
{
  *(void *)(v3 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= v4 << a1;
  *(void *)(*(void *)(v1 + 48) + 8 * aConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v2;
  ++*(void *)(v1 + 16);
}

uint64_t *OUTLINED_FUNCTION_128_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

void OUTLINED_FUNCTION_129()
{
}

uint64_t OUTLINED_FUNCTION_130_0@<X0>(uint64_t a1@<X8>)
{
  return specialized UnsafeMutablePointer.assign(repeating:count:)(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t OUTLINED_FUNCTION_142_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_144_0()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_160()
{
  return static Published.subscript.getter();
}

uint64_t OUTLINED_FUNCTION_173_0()
{
  return ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_176()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_182(uint64_t a1@<X8>)
{
  *(void *)(*(void *)v1 + 16) = a1;
}

double OUTLINED_FUNCTION_184@<D0>(uint64_t a1@<X8>)
{
  *(void *)uint64_t v1 = a1;
  double result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

void OUTLINED_FUNCTION_188_0(char a1@<W8>)
{
  void *v1 = -1 << a1;
}

unint64_t OUTLINED_FUNCTION_197()
{
  return 0xD000000000000021;
}

uint64_t OUTLINED_FUNCTION_198_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_207()
{
  return static Published.subscript.setter();
}

void OUTLINED_FUNCTION_209(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 2u);
}

uint64_t OUTLINED_FUNCTION_214@<X0>(uint64_t result@<X0>, char a2@<W8>, __n128 a3@<Q0>)
{
  *(void *)(result + 80) = v3;
  *(__n128 *)(result + 88) = a3;
  *(__n128 *)(result + 104) = a3;
  *(unsigned char *)(result + 120) = a2;
  return result;
}

void OUTLINED_FUNCTION_216()
{
  *(void *)(v1 - 176) = v0 + 56;
}

uint64_t OUTLINED_FUNCTION_222()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t OUTLINED_FUNCTION_229()
{
  return swift_unknownObjectRelease();
}

_WORD *OUTLINED_FUNCTION_231(_WORD *result)
{
  *double result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_238(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName(a2);
}

uint64_t OUTLINED_FUNCTION_241()
{
  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_248_0()
{
  return 0;
}

double OUTLINED_FUNCTION_250_0()
{
  *(void *)(v0 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)uint64_t v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_255()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_256(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t OUTLINED_FUNCTION_257(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t OUTLINED_FUNCTION_261()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_264()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_266@<X0>(uint64_t a1@<X8>, uint64_t a2, ...)
{
  va_start(va, a2);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_269()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_273()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_276()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_280()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t OUTLINED_FUNCTION_283()
{
  return static Published.subscript.getter();
}

uint64_t OUTLINED_FUNCTION_285()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_287()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_294()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_301()
{
  return type metadata accessor for NSObject(0, v0);
}

uint64_t OUTLINED_FUNCTION_303(void *a1)
{
  return v1 + *a1;
}

double OUTLINED_FUNCTION_309_0()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_310()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_311()
{
  return *(void *)(v0 + 40);
}

uint64_t OUTLINED_FUNCTION_314@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v1 - 104) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_317()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_322@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 - 176);
  return specialized UnsafeMutablePointer.assign(repeating:count:)(0, (unint64_t)(a1 + 63) >> 6, v3);
}

uint64_t OUTLINED_FUNCTION_323@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, void *a4)
{
  return specialized UnsafeMutablePointer.assign(repeating:count:)(0, (unint64_t)(a1 + 63) >> 6, a4);
}

uint64_t OUTLINED_FUNCTION_324()
{
  return v0;
}

void OUTLINED_FUNCTION_326()
{
  *uint64_t v0 = v1;
}

uint64_t OUTLINED_FUNCTION_327()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_330()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_331()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_332()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_338()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_341(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_350()
{
  return v0;
}

char *OUTLINED_FUNCTION_352(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

uint64_t OUTLINED_FUNCTION_356()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_357(uint64_t a1)
{
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v1;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
}

uint64_t OUTLINED_FUNCTION_359()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_360()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_361()
{
  return v0;
}

_WORD *OUTLINED_FUNCTION_363(_WORD *result)
{
  *double result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_367()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_369(uint64_t a1, unsigned __int16 a2)
{
  unint64_t v3 = a2 | 0xED00006465740000;
  return ConversationControlsManager.invalidateCallWaitingSystemApertureAssertionIfNeeded(reason:)(a1, v3);
}

uint64_t OUTLINED_FUNCTION_370()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_371()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_382()
{
  return ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_383()
{
  return ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1);
}

uint64_t AppleIntelligenceAvailability.available.getter()
{
  return *v0;
}

uint64_t AppleIntelligenceAvailability.available.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*AppleIntelligenceAvailability.available.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AppleIntelligenceAvailability.availabilityInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleIntelligenceAvailability() + 20);
  return outlined init with copy of GenerativeModelsAvailability.Availability?(v3, a1);
}

uint64_t type metadata accessor for AppleIntelligenceAvailability()
{
  uint64_t result = type metadata singleton initialization cache for AppleIntelligenceAvailability;
  if (!type metadata singleton initialization cache for AppleIntelligenceAvailability) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t outlined init with copy of GenerativeModelsAvailability.Availability?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeModelsAvailability.Availability?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t AppleIntelligenceAvailability.availabilityInfo.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleIntelligenceAvailability() + 20);
  return outlined assign with take of GenerativeModelsAvailability.Availability?(a1, v3);
}

uint64_t outlined assign with take of GenerativeModelsAvailability.Availability?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeModelsAvailability.Availability?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AppleIntelligenceAvailability.availabilityInfo.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AppleIntelligenceAvailability.init(available:availabilityInfo:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (uint64_t)&a3[*(int *)(type metadata accessor for AppleIntelligenceAvailability() + 20)];
  return outlined init with take of GenerativeModelsAvailability.Availability?(a2, v4);
}

uint64_t outlined init with take of GenerativeModelsAvailability.Availability?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeModelsAvailability.Availability?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id AppleIntelligenceManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static AppleIntelligenceManager.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static AppleIntelligenceManager.shared;
  return v0;
}

void static AppleIntelligenceManager.shared.setter(void *a1)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = static AppleIntelligenceManager.shared;
  static AppleIntelligenceManager.shared = a1;
}

uint64_t (*static AppleIntelligenceManager.shared.modify())()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t AppleIntelligenceManager.availability.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v1 = type metadata accessor for GenerativeModelsAvailability.Availability();
  OUTLINED_FUNCTION_4();
  uint64_t v52 = v2;
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v5);
  unint64_t v6 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = type metadata accessor for GenerativeModelsAvailability();
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for GenerativeModelsAvailability.Parameters();
  OUTLINED_FUNCTION_4();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  GenerativeModelsAvailability.Parameters.init(useCaseIdentifiers:)();
  static GenerativeModelsAvailability.current(parameters:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v13);
  uint64_t v19 = (void (*)(void))((char *)&v47 - v6);
  GenerativeModelsAvailability.availability.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  if (one-time initialization token for appleIntelligence != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)static Logger.appleIntelligence);
  id v50 = &v47;
  MEMORY[0x1F4188790](v21);
  unint64_t v22 = (char *)&v47 - v6;
  uint64_t v23 = v52;
  uint64_t v24 = *(void (**)(char *, void (*)(void), uint64_t))(v52 + 16);
  uint64_t v51 = v19;
  v24(v22, v19, v1);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v48 = v24;
    uint64_t v29 = v28;
    uint64_t v54 = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v19 = (void (*)(void))(v27 + 12);
    uint64_t v47 = v27 + 4;
    lazy protocol witness table accessor for type GenerativeModelsAvailability.Availability and conformance GenerativeModelsAvailability.Availability();
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v32 = v52;
    uint64_t v33 = OUTLINED_FUNCTION_1_99();
    ((void (*)(uint64_t))(v27 + 12))(v33);
    _os_log_impl(&dword_1C2F90000, v25, v26, "Apple Intelligence - availability: %s", (uint8_t *)v27, 0xCu);
    swift_arrayDestroy();
    uint64_t v34 = v29;
    uint64_t v24 = v48;
    MEMORY[0x1C87760E0](v34, -1, -1);
    MEMORY[0x1C87760E0](v27, -1, -1);

    uint64_t v36 = v32;
  }
  else
  {
    uint64_t v37 = OUTLINED_FUNCTION_1_99();
    v19(v37);

    uint64_t v36 = v23;
  }
  MEMORY[0x1F4188790](v35);
  uint64_t v38 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v51;
  v24(v38, v51, v1);
  int v40 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v38, v1);
  if (MEMORY[0x1E4F63C38] && v40 == *MEMORY[0x1E4F63C38]
    || MEMORY[0x1E4F63C50] && v40 == *MEMORY[0x1E4F63C50]
    || !MEMORY[0x1E4F63D30]
    || v40 != *MEMORY[0x1E4F63D30])
  {
    uint64_t v44 = type metadata accessor for AppleIntelligenceAvailability();
    uint64_t v45 = v49;
    uint64_t v46 = (uint64_t)&v49[*(int *)(v44 + 20)];
    (*(void (**)(uint64_t, void (*)(void), uint64_t))(v36 + 32))(v46, v39, v1);
    __swift_storeEnumTagSinglePayload(v46, 0, 1, v1);
    *uint64_t v45 = 0;
    return ((uint64_t (*)(char *, uint64_t))v19)(v38, v1);
  }
  else
  {
    ((void (*)(void (*)(void), uint64_t))v19)(v39, v1);
    uint64_t v41 = type metadata accessor for AppleIntelligenceAvailability();
    uint64_t v42 = v49;
    uint64_t result = __swift_storeEnumTagSinglePayload((uint64_t)&v49[*(int *)(v41 + 20)], 1, 1, v1);
    *uint64_t v42 = 1;
  }
  return result;
}

id AppleIntelligenceManager.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppleIntelligenceManager();
  return objc_msgSendSuper2(&v2, sel_init);
}

id AppleIntelligenceManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppleIntelligenceManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t lazy protocol witness table accessor for type GenerativeModelsAvailability.Availability and conformance GenerativeModelsAvailability.Availability()
{
  unint64_t result = lazy protocol witness table cache variable for type GenerativeModelsAvailability.Availability and conformance GenerativeModelsAvailability.Availability;
  if (!lazy protocol witness table cache variable for type GenerativeModelsAvailability.Availability and conformance GenerativeModelsAvailability.Availability)
  {
    type metadata accessor for GenerativeModelsAvailability.Availability();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GenerativeModelsAvailability.Availability and conformance GenerativeModelsAvailability.Availability);
  }
  return result;
}

uint64_t type metadata accessor for AppleIntelligenceManager()
{
  return self;
}

uint64_t *initializeBufferWithCopyOfBuffer for AppleIntelligenceAvailability(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    unint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for GenerativeModelsAvailability.Availability();
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeModelsAvailability.Availability?);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for AppleIntelligenceAvailability(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for GenerativeModelsAvailability.Availability();
  uint64_t result = __swift_getEnumTagSinglePayload(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v5(v2, v3);
  }
  return result;
}

unsigned char *initializeWithCopy for AppleIntelligenceAvailability(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  unint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for GenerativeModelsAvailability.Availability();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeModelsAvailability.Availability?);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

unsigned char *assignWithCopy for AppleIntelligenceAvailability(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  unint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for GenerativeModelsAvailability.Availability();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v7);
  int v9 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if (!EnumTagSinglePayload)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeModelsAvailability.Availability?);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  return a1;
}

unsigned char *initializeWithTake for AppleIntelligenceAvailability(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  unint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for GenerativeModelsAvailability.Availability();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeModelsAvailability.Availability?);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

unsigned char *assignWithTake for AppleIntelligenceAvailability(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  unint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for GenerativeModelsAvailability.Availability();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v7);
  int v9 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if (!EnumTagSinglePayload)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeModelsAvailability.Availability?);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleIntelligenceAvailability(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C32C8768);
}

uint64_t sub_1C32C8768(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeModelsAvailability.Availability?);
    uint64_t v11 = (uint64_t)&a1[*(int *)(a3 + 20)];
    return __swift_getEnumTagSinglePayload(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AppleIntelligenceAvailability(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C32C8808);
}

unsigned char *sub_1C32C8808(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GenerativeModelsAvailability.Availability?);
    uint64_t v8 = (uint64_t)&v5[*(int *)(a4 + 20)];
    return (unsigned char *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void type metadata completion function for AppleIntelligenceAvailability()
{
  type metadata accessor for GenerativeModelsAvailability.Availability?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for GenerativeModelsAvailability.Availability?()
{
  if (!lazy cache variable for type metadata for GenerativeModelsAvailability.Availability?)
  {
    type metadata accessor for GenerativeModelsAvailability.Availability();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for GenerativeModelsAvailability.Availability?);
    }
  }
}

uint64_t method lookup function for AppleIntelligenceManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppleIntelligenceManager);
}

uint64_t dispatch thunk of AppleIntelligenceManager.availability.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

UIFont __swiftcall UIFont.withTraits(_:)(UIFontDescriptorSymbolicTraits a1)
{
  uint64_t v2 = *(void *)&a1;
  id v3 = objc_msgSend(v1, sel_fontDescriptor);
  id v4 = objc_msgSend(v3, sel_fontDescriptorWithSymbolicTraits_, v2);

  if (v4)
  {
    id v5 = objc_msgSend(self, sel_fontWithDescriptor_size_, v4, 0.0);

    return (UIFont)v5;
  }
  else
  {
    return (UIFont)v7;
  }
}

double UIFont.languageAwareExtraBottomPadding(for:)()
{
  return 0.0;
}

uint64_t static _UIFontTextStyleVariant.cnk_shortMedium.getter()
{
  return 264;
}

id ParticipantVideoCameraView.__allocating_init(style:)(char a1)
{
  char v2 = a1 & 1;
  id v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = v2;
  v11.receiver = v3;
  v11.super_class = v1;
  return OUTLINED_FUNCTION_0_82((uint64_t)v3, sel_initWithFrame_, v4, v5, v6, v7, v8, v9, v11);
}

id ParticipantVideoCameraView.videoLayer.getter()
{
  id v1 = objc_msgSend(v0, sel_layer);
  return v1;
}

BOOL static ParticipantVideoCameraView.Style.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void ParticipantVideoCameraView.Style.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int ParticipantVideoCameraView.Style.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ParticipantVideoCameraView.Style(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ParticipantVideoCameraView.Style.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ParticipantVideoCameraView.Style()
{
  return ParticipantVideoCameraView.Style.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ParticipantVideoCameraView.Style(uint64_t a1)
{
  ParticipantVideoCameraView.Style.hash(into:)(a1, *v1);
}

id ParticipantVideoCameraView.init(style:)(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = a1 & 1;
  v11.receiver = v1;
  v11.super_class = ObjectType;
  return OUTLINED_FUNCTION_0_82((uint64_t)ObjectType, sel_initWithFrame_, v4, v5, v6, v7, v8, v9, v11);
}

id ParticipantVideoCameraView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantVideoCameraView.init(coder:)()
{
}

id ParticipantVideoCameraView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantVideoCameraView.init(frame:)()
{
}

id ParticipantVideoCameraView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t lazy protocol witness table accessor for type ParticipantVideoCameraView.Style and conformance ParticipantVideoCameraView.Style()
{
  unint64_t result = lazy protocol witness table cache variable for type ParticipantVideoCameraView.Style and conformance ParticipantVideoCameraView.Style;
  if (!lazy protocol witness table cache variable for type ParticipantVideoCameraView.Style and conformance ParticipantVideoCameraView.Style)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantVideoCameraView.Style and conformance ParticipantVideoCameraView.Style);
  }
  return result;
}

uint64_t type metadata accessor for ParticipantVideoCameraView()
{
  return self;
}

uint64_t method lookup function for ParticipantVideoCameraView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ParticipantVideoCameraView);
}

uint64_t dispatch thunk of ParticipantVideoCameraView.__allocating_init(style:)(char a1)
{
  return (*(uint64_t (**)(void))(v1 + 88))(a1 & 1);
}

unsigned char *storeEnumTagSinglePayload for ParticipantVideoCameraView.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C32C8F04);
      case 4:
        *(_DWORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticipantVideoCameraView.Style()
{
  return &type metadata for ParticipantVideoCameraView.Style;
}

void key path getter for ParticipantBorderView.borderWidth : ParticipantBorderView(void **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x68))();
}

uint64_t key path setter for ParticipantBorderView.borderWidth : ParticipantBorderView(double *a1, void **a2)
{
  return (*(uint64_t (**)(double))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x70))(*a1);
}

void ParticipantBorderView.borderWidth.didset()
{
  id v1 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView), sel_maskView);
  if (v1)
  {
    objc_super v2 = v1;
    id v3 = objc_msgSend(v1, sel_layer);
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
    objc_msgSend(v3, sel_setBorderWidth_);
  }
}

double ParticipantBorderView.borderWidth.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *(double *)v0;
}

uint64_t ParticipantBorderView.borderWidth.setter(double a1)
{
  return ParticipantBorderView.borderWidth.setter(&OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_borderWidth, (uint64_t (*)(uint64_t))ParticipantBorderView.borderWidth.didset, a1);
}

uint64_t (*ParticipantBorderView.borderWidth.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return ParticipantBorderView.borderWidth.modify;
}

uint64_t ParticipantBorderView.borderWidth.modify(uint64_t a1, char a2)
{
  return ParticipantBorderView.borderWidth.modify(a1, a2, (uint64_t (*)(uint64_t))ParticipantBorderView.borderWidth.didset);
}

void key path getter for ParticipantBorderView.customCornerRadius : ParticipantBorderView(void **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x80))();
}

uint64_t key path setter for ParticipantBorderView.customCornerRadius : ParticipantBorderView(double *a1, void **a2)
{
  return (*(uint64_t (**)(double))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x88))(*a1);
}

void ParticipantBorderView.customCornerRadius.didset()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView), sel_maskView));
  if (v1)
  {
    objc_super v2 = v1;
    id v3 = (double *)(v0 + OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_customCornerRadius);
    swift_beginAccess();
    objc_msgSend(v2, sel__setContinuousCornerRadius_, *v3);
  }
}

double ParticipantBorderView.customCornerRadius.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *(double *)v0;
}

uint64_t ParticipantBorderView.customCornerRadius.setter(double a1)
{
  return ParticipantBorderView.borderWidth.setter(&OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_customCornerRadius, (uint64_t (*)(uint64_t))ParticipantBorderView.customCornerRadius.didset, a1);
}

uint64_t ParticipantBorderView.borderWidth.setter(void *a1, uint64_t (*a2)(uint64_t), double a3)
{
  unsigned int v6 = (double *)(v3 + *a1);
  uint64_t v7 = swift_beginAccess();
  *unsigned int v6 = a3;
  return a2(v7);
}

uint64_t (*ParticipantBorderView.customCornerRadius.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return ParticipantBorderView.customCornerRadius.modify;
}

uint64_t ParticipantBorderView.customCornerRadius.modify(uint64_t a1, char a2)
{
  return ParticipantBorderView.borderWidth.modify(a1, a2, (uint64_t (*)(uint64_t))ParticipantBorderView.customCornerRadius.didset);
}

uint64_t ParticipantBorderView.borderWidth.modify(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

id ParticipantBorderView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

char *ParticipantBorderView.init(frame:)()
{
  OUTLINED_FUNCTION_7();
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_borderWidth] = 0x4008000000000000;
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_customCornerRadius;
  uint64_t v2 = one-time initialization token for shared;
  uint64_t v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  *(double *)&v3[v1] = (*(double (**)(void))(*(void *)static Defaults.shared + 384))();
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView;
  id v5 = objc_msgSend(self, sel_effectWithStyle_, 13);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v5);

  *(void *)&v3[v4] = v6;
  type metadata accessor for ParticipantBorderView();
  double v7 = OUTLINED_FUNCTION_6_2();
  id v10 = objc_msgSendSuper2(v8, v9, v7);
  objc_super v11 = self;
  uint64_t v12 = (char *)v10;
  id v13 = objc_msgSend(v11, sel_clearColor);
  objc_msgSend(v12, sel_setBackgroundColor_, v13);

  uint64_t v14 = OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView;
  id v15 = *(id *)&v12[OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView];
  objc_msgSend(v12, sel_bounds);
  objc_msgSend(v15, sel_setFrame_);

  objc_msgSend(v12, sel_addSubview_, *(void *)&v12[v14]);
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  id v17 = objc_msgSend(v16, sel_layer);
  closure #1 in ParticipantBorderView.init(frame:)(v17, v12);

  id v18 = objc_msgSend(v11, sel_clearColor);
  objc_msgSend(v16, sel_setBackgroundColor_, v18);

  uint64_t v19 = (double *)&v12[OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_customCornerRadius];
  swift_beginAccess();
  objc_msgSend(v16, sel__setContinuousCornerRadius_, *v19);
  id v20 = *(id *)&v12[v14];
  id v21 = v16;
  objc_msgSend(v20, sel_setMaskView_, v21);

  return v12;
}

id closure #1 in ParticipantBorderView.init(frame:)(void *a1, void *a2)
{
  id v4 = objc_msgSend(self, sel_blackColor);
  id v5 = objc_msgSend(v4, sel_CGColor);

  objc_msgSend(a1, sel_setBorderColor_, v5);
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *a2) + 0x68))();
  return objc_msgSend(a1, sel_setBorderWidth_);
}

id ParticipantBorderView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantBorderView.init(coder:)(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_borderWidth] = 0x4008000000000000;
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_customCornerRadius;
  if (one-time initialization token for shared != -1) {
    a1 = swift_once();
  }
  *(double *)&v1[v3] = (*(double (**)(uint64_t))(*(void *)static Defaults.shared + 384))(a1);
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView;
  id v5 = objc_msgSend(self, sel_effectWithStyle_, 13);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v5);

  *(void *)&v2[v4] = v6;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ParticipantBorderView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for ParticipantBorderView();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  ParticipantBorderView._layout()();
}

void ParticipantBorderView._layout()()
{
  objc_super v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
  id v2 = objc_msgSend(v1, sel_maskView);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v3, sel_setFrame_);
  }
}

id ParticipantBorderView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ParticipantBorderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ParticipantBorderView()
{
  return self;
}

uint64_t method lookup function for ParticipantBorderView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ParticipantBorderView);
}

uint64_t dispatch thunk of ParticipantBorderView.borderWidth.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ParticipantBorderView.borderWidth.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ParticipantBorderView.borderWidth.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ParticipantBorderView.customCornerRadius.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ParticipantBorderView.customCornerRadius.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ParticipantBorderView.customCornerRadius.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t static StagedCollaboration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8)) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for StagedCollaboration(0);
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_6_78();
  if (v5)
  {
    if (!v6) {
      return 0;
    }
    BOOL v9 = *v7 == *v8 && v5 == v6;
    if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  OUTLINED_FUNCTION_6_78();
  if (v10)
  {
    if (!v11) {
      return 0;
    }
    BOOL v14 = *v12 == *v13 && v10 == v11;
    if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  uint64_t v15 = *(int *)(v4 + 36);
  id v16 = *(void **)(a1 + v15);
  id v17 = *(void **)(a2 + v15);
  if (v16)
  {
    if (v17)
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      id v18 = v17;
      id v19 = v16;
      char v20 = static NSObject.== infix(_:_:)();

      if (v20) {
        return static NSObject.== infix(_:_:)() & 1;
      }
    }
  }
  else if (!v17)
  {
    return static NSObject.== infix(_:_:)() & 1;
  }
  return 0;
}

uint64_t type metadata accessor for StagedCollaboration(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for StagedCollaboration);
}

uint64_t Collaboration.title.getter()
{
  if (*(void *)(v0 + 56) == 1) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

id UIImage.__allocating_init(data:)(uint64_t a1, unint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v6 = objc_msgSend(v4, sel_initWithData_, isa);
  outlined consume of Data._Representation(a1, a2);

  return v6;
}

Swift::Int StagedCollaboration.hashValue.getter()
{
  return Hasher._finalize()();
}

void StagedCollaboration.init(foregroundApp:shareableContent:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + 8) = 2;
  id v6 = (int *)type metadata accessor for StagedCollaboration(0);
  UUID.init()();
  *(void *)a3 = a1;
  *(void *)(a3 + v6[10]) = a2;
  double v7 = a1;
  id v8 = a2;
  uint64_t v9 = outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(objc_msgSend(v8, sel_metadata), (SEL *)&selRef_title);
  uint64_t v10 = (uint64_t *)(a3 + v6[7]);
  *uint64_t v10 = v9;
  v10[1] = v11;
  uint64_t v12 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v7) + 0x68))();
  id v13 = (uint64_t *)(a3 + v6[8]);
  uint64_t *v13 = v12;
  v13[1] = v14;
  if (one-time initialization token for collaboration != -1) {
    swift_once();
  }
  uint64_t v15 = static ActivityType.Image.collaboration;
  id v16 = (id)static ActivityType.Image.collaboration;

  *(void *)(a3 + v6[9]) = v15;
}

BOOL Collaboration.isAppInstalled.getter()
{
  return *(unsigned char *)(v0 + 16) != 0;
}

uint64_t Collaboration.State.init(highlightState:)(unint64_t a1)
{
  if (a1 >= 3) {
    return 3;
  }
  else {
    return 0x201u >> (8 * a1);
  }
}

BOOL static Collaboration.State.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void Collaboration.State.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int Collaboration.State.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Collaboration.State(char *a1, char *a2)
{
  return static Collaboration.State.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Collaboration.State()
{
  return Collaboration.State.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance Collaboration.State(uint64_t a1)
{
  Collaboration.State.hash(into:)(a1, *v1);
}

uint64_t Collaboration.Metadata.localizedApplicationName.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t Collaboration.Metadata.title.getter()
{
  return OUTLINED_FUNCTION_35();
}

void *Collaboration.Metadata.image.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

id Collaboration.Metadata.init(localizedApplicationName:title:imageData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, void *a7@<X8>)
{
  if (a6 >> 60 == 15)
  {
    id result = 0;
  }
  else
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    id result = UIImage.__allocating_init(data:)(a5, a6);
  }
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = result;
  return result;
}

void Collaboration.Metadata.hash(into:)()
{
  if (v0[1])
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (v0[3])
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  uint64_t v1 = (void *)v0[4];
  if (v1)
  {
    Hasher._combine(_:)(1u);
    id v2 = v1;
    OUTLINED_FUNCTION_8_52();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

uint64_t static Collaboration.Metadata.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = a1[3];
    uint64_t v10 = a2[3];
    if (v9)
    {
      if (!v10) {
        return 0;
      }
      if (a1[2] != a2[2] || v9 != v10)
      {
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t result = 0;
        if ((v12 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    id v13 = (void *)a1[4];
    uint64_t v14 = (void *)a2[4];
    if (v13)
    {
      if (v14)
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
        id v15 = v14;
        id v16 = v13;
        char v17 = static NSObject.== infix(_:_:)();

        if (v17) {
          return 1;
        }
      }
    }
    else if (!v14)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

Swift::Int Collaboration.Metadata.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Collaboration.Metadata()
{
  return Hasher._finalize()();
}

uint64_t Collaboration.uniqueIdentifier.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t Collaboration.state.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

void Collaboration.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

uint64_t Collaboration.activeRemoteParticipantCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t Collaboration.bundleIdentifier.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t Collaboration.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of Collaboration.Metadata?(v1 + 48, a1);
}

uint64_t Collaboration.messagesIdentifier.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t Collaboration.highlightURL.getter()
{
  type metadata accessor for Collaboration(0);
  type metadata accessor for URL();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

uint64_t Collaboration.isLocallyInitiated.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Collaboration(0) + 48));
}

void Collaboration.init(highlight:state:)(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + 17) = 2;
  *(void *)(a3 + 24) = 0;
  id v6 = objc_msgSend(a1, sel_collaborationIdentifier);
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v9;
  *(unsigned char *)(a3 + 16) = a2;
  id v10 = SWCollaborationHighlight.applicationRecord.getter();
  uint64_t v11 = v10;
  if (v10)
  {
    id v12 = v10;
    uint64_t v13 = outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v12, (SEL *)&selRef_bundleIdentifier);
    uint64_t v15 = v14;
    id v16 = objc_msgSend(v12, sel_localizedName);
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  *(void *)(a3 + 32) = v13;
  *(void *)(a3 + 40) = v15;
  uint64_t v20 = outlined bridged method (pb) of @objc SWCollaborationHighlight.title.getter(a1);
  *(void *)(a3 + 48) = v17;
  *(void *)(a3 + 56) = v19;
  *(void *)(a3 + 64) = v20;
  *(void *)(a3 + 72) = v21;
  *(void *)(a3 + 80) = 0;
  *(void *)(a3 + 88) = SWCollaborationHighlight.messagesIdentifier.getter();
  *(void *)(a3 + 96) = v22;
  id v23 = objc_msgSend(a1, sel_URL);
  uint64_t v24 = type metadata accessor for Collaboration(0);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v25 = self;
  id v26 = objc_msgSend(v25, sel_sharedInstance);
  id v27 = objc_msgSend(v26, sel_frontmostAudioOrVideoCall);

  if (v27)
  {
    id v28 = objc_msgSend(v25, sel_sharedInstance);
    id v29 = objc_msgSend(v28, sel_activeConversationForCall_, v27);

    if (v29)
    {
      id v30 = objc_msgSend(v25, sel_sharedInstance);
      id v31 = objc_msgSend(v30, sel_conversationManager);

      id v32 = objc_msgSend(v31, sel_collaborationManager);
      if (v32)
      {
        unsigned __int8 v33 = objc_msgSend(v32, sel_isCollaborationLocallyInitiatedForConversation_, v29);

        *(unsigned char *)(a3 + *(int *)(v24 + 48)) = v33;
        return;
      }
    }
    else
    {
      id v29 = v27;
    }
  }
  *(unsigned char *)(a3 + *(int *)(v24 + 48)) = 0;
}

id SWCollaborationHighlight.applicationRecord.getter()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(self, sel_sharedManager);
  id v3 = objc_msgSend(v0, sel_URL);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL._bridgeToObjectiveC()(v8);
  id v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v11 = objc_msgSend(v2, sel_lsAppRecordForURL_, v10);

  if (!v11) {
    return v11;
  }
  id v12 = v11;
  uint64_t v13 = outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v12, (SEL *)&selRef_bundleIdentifier);
  if (!v14) {
    return v11;
  }
  if (v13 == 0xD00000000000001CLL && v14 == 0x80000001C37A5A60)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      return v11;
    }
  }
  id v16 = objc_msgSend(self, sel_sharedInstance);
  id v17 = objc_msgSend(v16, sel_conversationManager);

  id v18 = objc_msgSend(v1, sel_collaborationIdentifier);
  if (!v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v18 = (id)MEMORY[0x1C87730B0](v19);
    swift_bridgeObjectRelease();
  }
  id v20 = objc_msgSend(v17, sel_ckBundleIDForCollaborationIdentifier_, v18);

  if (!v20)
  {

    return 0;
  }
  uint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
LABEL_14:

    swift_bridgeObjectRelease();
    return 0;
  }
  id v23 = (uint64_t *)(v21 + 40);
  while (1)
  {
    uint64_t v25 = *(v23 - 1);
    uint64_t v24 = *v23;
    objc_allocWithZone(MEMORY[0x1E4F223C8]);
    swift_bridgeObjectRetain();
    id v11 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(v25, v24, 1);
    if (v11) {
      break;
    }
    v23 += 2;
    if (!--v22) {
      goto LABEL_14;
    }
  }

  swift_bridgeObjectRelease();
  return v11;
}

uint64_t SWCollaborationHighlight.messagesIdentifier.getter()
{
  id v1 = objc_msgSend(v0, sel_attributions);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for SLAttribution);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_35();
  }
  if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_7;
  }
LABEL_3:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0) {
    id v3 = (id)MEMORY[0x1C87744F0](0, v2);
  }
  else {
    id v3 = *(id *)(v2 + 32);
  }
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v4, sel_uniqueIdentifier);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  return OUTLINED_FUNCTION_35();
}

uint64_t Collaboration.subtitle.getter()
{
  if (*(void *)(v0 + 56) == 1) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void *Collaboration.image.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Collaboration(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v5 = 0;
  if (*(void *)(v1 + 56) != 1)
  {
    id v5 = *(void **)(v1 + 80);
    id v6 = v5;
  }
  outlined init with copy of Collaboration(v1, (uint64_t)v4, (void (*)(void))type metadata accessor for Collaboration);
  if (!v5)
  {
    v8[15] = v4[17];
    id v5 = (void *)ActivityType.placeholderImage.getter();
  }
  outlined destroy of Collaboration((uint64_t)v4);
  return v5;
}

uint64_t Collaboration.icon.getter()
{
  return ActivityType.icon.getter();
}

uint64_t Collaboration.concatenatedDescription.getter()
{
  if (v0[7] == 1 || v0[9] == 0)
  {
    id v2 = objc_msgSend(self, sel_conversationKit);
    uint64_t v3 = OUTLINED_FUNCTION_0_83(22, 0x80000001C37A59A0);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = v0[8];
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t Collaboration.ongoingDescription.getter()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  v6._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001C37A59C0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v2.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v6._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v6)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t Collaboration.metadataHash.getter()
{
  return Optional<A>.hashValue.getter();
}

uint64_t Collaboration.collaboration.getter@<X0>(uint64_t a1@<X8>)
{
  return Collaboration.collaboration.getter((void (*)(void))type metadata accessor for Collaboration, type metadata accessor for Collaboration, a1);
}

uint64_t protocol witness for Activity.uniqueIdentifier.getter in conformance Collaboration()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void protocol witness for Activity.type.getter in conformance Collaboration(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

uint64_t protocol witness for Activity.activeRemoteParticipantCount.getter in conformance Collaboration()
{
  return *(void *)(v0 + 24);
}

uint64_t protocol witness for Activity.bundleIdentifier.getter in conformance Collaboration()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t protocol witness for Activity.ongoingDescription.getter in conformance Collaboration()
{
  return Collaboration.ongoingDescription.getter();
}

id StagedCollaboration.foregroundApp.getter()
{
  return *v0;
}

void StagedCollaboration.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t StagedCollaboration.uuid.getter()
{
  type metadata accessor for StagedCollaboration(0);
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

uint64_t StagedCollaboration.title.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t StagedCollaboration.subtitle.getter()
{
  return OUTLINED_FUNCTION_35();
}

void *StagedCollaboration.image.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for StagedCollaboration(0) + 36));
  id v2 = v1;
  return v1;
}

id StagedCollaboration.shareableContent.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for StagedCollaboration(0) + 40));
  return v1;
}

uint64_t StagedCollaboration.description.getter()
{
  uint64_t v1 = 7104878;
  _StringGuts.grow(_:)(80);
  v2._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v2._object = (void *)0x80000001C37A59F0;
  String.append(_:)(v2);
  id v17 = *v0;
  type metadata accessor for ForegroundApp();
  id v3 = v17;
  v4._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x6974202020200A2CLL;
  v5._object = (void *)0xED0000203A656C74;
  String.append(_:)(v5);
  uint64_t v6 = type metadata accessor for StagedCollaboration(0);
  if (*(void **)((char *)v0 + *(int *)(v6 + 28) + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = String.init<A>(reflecting:)();
    unint64_t v9 = v8;
  }
  else
  {
    unint64_t v9 = 0xE300000000000000;
    uint64_t v7 = 7104878;
  }
  unint64_t v10 = v9;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  v11._object = (void *)0x80000001C37A5A20;
  v11._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v11);
  if (*(void **)((char *)v0 + *(int *)(v6 + 32) + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = String.init<A>(reflecting:)();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v13 = (void *)0xE300000000000000;
  }
  v14._uint64_t countAndFlagsBits = v1;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 62;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  return 0;
}

void StagedCollaboration.hash(into:)()
{
  uint64_t v1 = (int *)type metadata accessor for StagedCollaboration(0);
  if (*(void *)(v0 + v1[7] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (*(void *)(v0 + v1[8] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Swift::String v2 = *(void **)(v0 + v1[9]);
  if (v2)
  {
    Hasher._combine(_:)(1u);
    id v3 = v2;
    OUTLINED_FUNCTION_8_52();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StagedCollaboration()
{
  return Hasher._finalize()();
}

uint64_t StagedCollaboration.uniqueIdentifier.getter()
{
  return UUID.uuidString.getter();
}

uint64_t StagedCollaboration.activeRemoteParticipantCount.getter()
{
  return 0;
}

uint64_t StagedCollaboration.bundleIdentifier.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t StagedCollaboration.isAppInstalled.getter()
{
  return 1;
}

uint64_t StagedCollaboration.icon.getter()
{
  return ActivityType.icon.getter();
}

uint64_t StagedCollaboration.concatenatedDescription.getter()
{
  if (!*(void *)(v0 + *(int *)(type metadata accessor for StagedCollaboration(0) + 28) + 8))
  {
    id v1 = objc_msgSend(self, sel_conversationKit);
    OUTLINED_FUNCTION_0_83(26, 0x80000001C37A5A40);
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_35();
}

void StagedCollaboration.ongoingDescription.getter()
{
}

Swift::Int StagedCollaboration.metadataHash.getter()
{
  return Hasher._finalize()();
}

uint64_t StagedCollaboration.stagedCollaboration.getter@<X0>(uint64_t a1@<X8>)
{
  return Collaboration.collaboration.getter((void (*)(void))type metadata accessor for StagedCollaboration, type metadata accessor for StagedCollaboration, a1);
}

uint64_t Collaboration.collaboration.getter@<X0>(void (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3;
  outlined init with copy of Collaboration(v6, a3, a1);
  uint64_t v8 = a2(0);
  return __swift_storeEnumTagSinglePayload(a3, 0, 1, v8);
}

void protocol witness for Activity.type.getter in conformance StagedCollaboration(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t protocol witness for Activity.title.getter in conformance StagedCollaboration(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t protocol witness for Activity.subtitle.getter in conformance StagedCollaboration(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

void *protocol witness for Activity.image.getter in conformance StagedCollaboration(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + *(int *)(a1 + 36));
  id v3 = v2;
  return v2;
}

uint64_t outlined bridged method (pb) of @objc SWCollaborationHighlight.title.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_title);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined bridged method (ob) of @objc LPLinkMetadata.title.getter(void *a1)
{
  return outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(a1, (SEL *)&selRef_title);
}

uint64_t outlined init with copy of Collaboration.Metadata?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Metadata?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for Collaboration(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for Collaboration);
}

unint64_t lazy protocol witness table accessor for type Collaboration.Metadata and conformance Collaboration.Metadata()
{
  unint64_t result = lazy protocol witness table cache variable for type Collaboration.Metadata and conformance Collaboration.Metadata;
  if (!lazy protocol witness table cache variable for type Collaboration.Metadata and conformance Collaboration.Metadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Metadata and conformance Collaboration.Metadata);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Collaboration.Metadata and conformance Collaboration.Metadata;
  if (!lazy protocol witness table cache variable for type Collaboration.Metadata and conformance Collaboration.Metadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Metadata and conformance Collaboration.Metadata);
  }
  return result;
}

uint64_t outlined init with copy of Collaboration(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_35();
  v5(v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type Collaboration.State and conformance Collaboration.State()
{
  unint64_t result = lazy protocol witness table cache variable for type Collaboration.State and conformance Collaboration.State;
  if (!lazy protocol witness table cache variable for type Collaboration.State and conformance Collaboration.State)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.State and conformance Collaboration.State);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type StagedCollaboration and conformance StagedCollaboration()
{
  unint64_t result = lazy protocol witness table cache variable for type StagedCollaboration and conformance StagedCollaboration;
  if (!lazy protocol witness table cache variable for type StagedCollaboration and conformance StagedCollaboration)
  {
    type metadata accessor for StagedCollaboration(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StagedCollaboration and conformance StagedCollaboration);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Collaboration(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(void *)(a1 + 40) = a2[5];
    uint64_t v8 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8 == 1)
    {
      long long v9 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v9;
      *(void *)(a1 + 80) = a2[10];
    }
    else
    {
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v8;
      uint64_t v11 = a2[9];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v11;
      id v12 = (void *)a2[10];
      *(void *)(a1 + 80) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v13 = v12;
    }
    uint64_t v14 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v14;
    uint64_t v15 = *(int *)(a3 + 44);
    uint64_t v16 = a1 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = type metadata accessor for URL();
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    *(unsigned char *)(a1 + *(int *)(a3 + 48)) = *((unsigned char *)a2 + *(int *)(a3 + 48));
  }
  return a1;
}

uint64_t destroy for Collaboration(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for Collaboration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
  }
  else
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    uint64_t v9 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v9;
    uint64_t v10 = *(void **)(a2 + 80);
    *(void *)(a1 + 80) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = v10;
  }
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  uint64_t v13 = *(int *)(a3 + 44);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  *(unsigned char *)(a1 + *(int *)(a3 + 48)) = *(unsigned char *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t assignWithCopy for Collaboration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (long long *)(a1 + 48);
  uint64_t v7 = (long long *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) == 1)
  {
    if (v8 == 1)
    {
      long long v9 = *v7;
      long long v10 = *(_OWORD *)(a2 + 64);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *uint64_t v6 = v9;
      *(_OWORD *)(a1 + 64) = v10;
    }
    else
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      uint64_t v13 = *(void **)(a2 + 80);
      *(void *)(a1 + 80) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v14 = v13;
    }
  }
  else if (v8 == 1)
  {
    outlined destroy of Collaboration.Metadata(a1 + 48);
    uint64_t v11 = *(void *)(a2 + 80);
    long long v12 = *(_OWORD *)(a2 + 64);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 64) = v12;
    *(void *)(a1 + 80) = v11;
  }
  else
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void **)(a1 + 80);
    uint64_t v16 = *(void **)(a2 + 80);
    *(void *)(a1 + 80) = v16;
    id v17 = v16;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(int *)(a3 + 44);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  *(unsigned char *)(a1 + *(int *)(a3 + 48)) = *(unsigned char *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t outlined destroy of Collaboration.Metadata(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for Collaboration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 48)) = *(unsigned char *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t assignWithTake for Collaboration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56) != 1)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    if (v7 != 1)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void **)(a1 + 80);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);

      goto LABEL_6;
    }
    outlined destroy of Collaboration.Metadata(a1 + 48);
  }
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
LABEL_6:
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 44);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(unsigned char *)(a1 + *(int *)(a3 + 48)) = *(unsigned char *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C32CC278);
}

uint64_t sub_1C32CC278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_46_0(*(void *)(a1 + 8));
  }
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = a1 + *(int *)(a3 + 44);
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for Collaboration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C32CC308);
}

void sub_1C32CC308()
{
  OUTLINED_FUNCTION_5();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = type metadata accessor for URL();
    uint64_t v6 = v1 + *(int *)(v4 + 44);
    __swift_storeEnumTagSinglePayload(v6, v0, v0, v5);
  }
}

uint64_t type metadata completion function for Collaboration()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Collaboration.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C32CC520);
      case 4:
        *(_DWORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for Collaboration.State()
{
}

void destroy for Collaboration.Metadata(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for Collaboration.Metadata(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for Collaboration.Metadata(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for Collaboration.Metadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration.Metadata(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Collaboration.Metadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for Collaboration.Metadata()
{
}

char *initializeBufferWithCopyOfBuffer for StagedCollaboration(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[8] = *((unsigned char *)a2 + 8);
    uint64_t v8 = a3[6];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = &v7[v14];
    id v17 = (char **)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *(void *)uint64_t v16 = *v17;
    *((void *)v16 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v18;
    uint64_t v19 = &v7[v15];
    uint64_t v20 = (char **)((char *)a2 + v15);
    uint64_t v21 = v20[1];
    *(void *)uint64_t v19 = *v20;
    *((void *)v19 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v21;
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = *(char **)((char *)a2 + v22);
    *(void *)&v7[v22] = v24;
    uint64_t v25 = *(char **)((char *)a2 + v23);
    *(void *)&v7[v23] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = v24;
    id v27 = v25;
  }
  return v7;
}

void destroy for StagedCollaboration(id *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[6];
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v6 = *(id *)((char *)a1 + a2[10]);
}

uint64_t initializeWithCopy for StagedCollaboration(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v13);
  uint64_t v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (void *)(a1 + v14);
  uint64_t v19 = (void *)(a2 + v14);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[9];
  uint64_t v22 = a3[10];
  uint64_t v23 = *(void **)(a2 + v21);
  *(void *)(a1 + v2ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v23;
  uint64_t v24 = *(void **)(a2 + v22);
  *(void *)(a1 + v22) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v25 = v23;
  id v26 = v24;
  return a1;
}

uint64_t assignWithCopy for StagedCollaboration(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = *(void **)(a1 + v19);
  uint64_t v21 = *(void **)(a2 + v19);
  *(void *)(a1 + v19) = v21;
  id v22 = v21;

  uint64_t v23 = a3[10];
  uint64_t v24 = *(void **)(a2 + v23);
  id v25 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = v24;
  id v26 = v24;

  return a1;
}

uint64_t initializeWithTake for StagedCollaboration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  uint64_t v11 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v1ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = *(void *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for StagedCollaboration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  id v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v2ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = *(void *)(a2 + v21);

  uint64_t v23 = a3[10];
  uint64_t v24 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);

  return a1;
}

uint64_t getEnumTagSinglePayload for StagedCollaboration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C32CCD6C);
}

uint64_t sub_1C32CCD6C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_46_0(*a1);
  }
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = (uint64_t)a1 + *(int *)(a3 + 24);
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for StagedCollaboration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C32CCDFC);
}

void sub_1C32CCDFC()
{
  OUTLINED_FUNCTION_5();
  if (v3)
  {
    void *v1 = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = type metadata accessor for UUID();
    uint64_t v6 = (uint64_t)v1 + *(int *)(v4 + 24);
    __swift_storeEnumTagSinglePayload(v6, v0, v0, v5);
  }
}

uint64_t type metadata completion function for StagedCollaboration()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ObservableNotificationHandler.init(name:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 0;
  ObservationRegistrar.init()();
  uint64_t v7 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  id v9 = a1;
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBCFD8];
  v11[2] = v10;
  void v11[3] = v12;
  v11[4] = v9;
  v11[5] = v8;
  swift_release();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v6, (uint64_t)&async function pointer to partial apply for closure #1 in ObservableNotificationHandler.init(name:), (uint64_t)v11);
  ObservableNotificationHandler.notificationTask.setter();

  return v2;
}

uint64_t ObservableNotificationHandler.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ObservableNotificationHandler___observationRegistrar;
  type metadata accessor for ObservationRegistrar();
  OUTLINED_FUNCTION_12_0();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return v0;
}

uint64_t ObservableNotificationHandler.notificationTask.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_50();
  (*(void (**)(void))(v0 + 216))();
  swift_release();
  return swift_retain();
}

uint64_t ObservableNotificationHandler.notificationTask.setter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_8_53();
  v0();
  swift_release();
  return swift_release();
}

uint64_t ObservableNotificationHandler.trackingProperty.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_50();
  (*(void (**)(void))(v1 + 216))();
  swift_release();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t ObservableNotificationHandler.trackingProperty.setter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_8_53();
  v0();
  return swift_release();
}

Swift::Void __swiftcall ObservableNotificationHandler.willReturnChangingValue()()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_50();
  (*(void (**)(void))(v0 + 216))();
  swift_release();
}

uint64_t ObservableNotificationHandler.access<A>(keyPath:)()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t ObservableNotificationHandler.withMutation<A, B>(keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t ObservableNotificationHandler.notificationTask.init@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t key path setter for ObservableNotificationHandler.notificationTask : ObservableNotificationHandler()
{
  return ObservableNotificationHandler.notificationTask.setter();
}

uint64_t closure #1 in ObservableNotificationHandler.notificationTask.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  swift_retain();
  return swift_release();
}

uint64_t ObservableNotificationHandler.trackingProperty.init@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1C32CD488()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t ObservableNotificationHandler.__allocating_init(name:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ObservableNotificationHandler.init(name:)(a1);
  return v2;
}

uint64_t closure #1 in ObservableNotificationHandler.init(name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  v5[15] = type metadata accessor for MainActor();
  v5[16] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[17] = v7;
  v5[18] = v6;
  return MEMORY[0x1F4188298](closure #1 in ObservableNotificationHandler.init(name:), v7, v6);
}

uint64_t closure #1 in ObservableNotificationHandler.init(name:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncMapSequence<NSNotificationCenter.Notifications, String>);
  v0[19] = v1;
  v0[20] = *(void *)(v1 - 8);
  v0[21] = OUTLINED_FUNCTION_191();
  id v2 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v3 = NSNotificationCenter.notifications(named:object:)();

  v0[11] = v3;
  type metadata accessor for NSNotificationCenter.Notifications();
  lazy protocol witness table accessor for type NSNotificationCenter.Notifications and conformance NSNotificationCenter.Notifications((unint64_t *)&lazy protocol witness table cache variable for type NSNotificationCenter.Notifications and conformance NSNotificationCenter.Notifications, MEMORY[0x1F418C1A8]);
  AsyncMapSequence.init(_:transform:)();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncMapSequence<NSNotificationCenter.Notifications, String>.Iterator);
  v0[22] = v4;
  OUTLINED_FUNCTION_1(v4);
  v0[23] = v5;
  v0[24] = *(void *)(v6 + 64);
  v0[25] = OUTLINED_FUNCTION_191();
  v0[26] = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  OUTLINED_FUNCTION_191();
  MEMORY[0x1C8774690](v1);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.Iterator.transform.getter();
  AsyncMapSequence.Iterator.init(_:transform:)();
  swift_task_dealloc();
  swift_beginAccess();
  uint64_t v7 = static MainActor.shared.getter();
  v0[27] = v7;
  if (v7)
  {
    swift_getObjectType();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  v0[28] = v8;
  v0[29] = v10;
  return MEMORY[0x1F4188298](closure #1 in ObservableNotificationHandler.init(name:), v8, v10);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;

  uint64_t v1 = type metadata accessor for Notification();
  v0[30] = v1;
  OUTLINED_FUNCTION_1(v1);
  v0[31] = v2;
  v0[32] = OUTLINED_FUNCTION_191();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notification?);
  uint64_t v3 = OUTLINED_FUNCTION_191();
  v0[33] = v3;
  v0[34] = AsyncMapSequence.Iterator.baseIterator.modify();
  lazy protocol witness table accessor for type NSNotificationCenter.Notifications and conformance NSNotificationCenter.Notifications(&lazy protocol witness table cache variable for type NSNotificationCenter.Notifications.Iterator and conformance NSNotificationCenter.Notifications.Iterator, MEMORY[0x1F418C198]);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[35] = v4;
  *uint64_t v4 = v0;
  v4[1] = closure #1 in ObservableNotificationHandler.init(name:);
  return MEMORY[0x1F4187C80](v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v10;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v5 = v4;
  *(void *)(v3 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = *(void *)(v3 + 224);
    uint64_t v7 = *(void *)(v3 + 232);
    uint64_t v8 = closure #1 in ObservableNotificationHandler.init(name:);
  }
  else
  {
    (*(void (**)(void))(v3 + 272))();
    uint64_t v6 = *(void *)(v3 + 224);
    uint64_t v7 = *(void *)(v3 + 232);
    uint64_t v8 = closure #1 in ObservableNotificationHandler.init(name:);
  }
  return MEMORY[0x1F4188298](v8, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  void *v11;
  uint64_t v12;
  int *v14;
  uint64_t v15;

  uint64_t v1 = v0[33];
  id v2 = v0[30];
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    outlined destroy of Notification?(v1);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = v0[17];
    uint64_t v4 = v0[18];
    return MEMORY[0x1F4188298](closure #1 in ObservableNotificationHandler.init(name:), v3, v4);
  }
  else
  {
    uint64_t v5 = v0[22];
    uint64_t v6 = v0[23];
    (*(void (**)(void, uint64_t, uint64_t))(v0[31] + 32))(v0[32], v1, v2);
    swift_task_dealloc();
    uint64_t v7 = swift_task_alloc();
    v0[37] = v7;
    (*(void (**)(void))(v6 + 16))();
    uint64_t v8 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[38] = v9;
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v0[39] = v10;
    v10(v7, v5);
    uint64_t v14 = (int *)((char *)v8 + *v8);
    uint64_t v11 = (void *)swift_task_alloc();
    unsigned char v0[40] = v11;
    *uint64_t v11 = v0;
    v11[1] = closure #1 in ObservableNotificationHandler.init(name:);
    uint64_t v12 = v0[32];
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 9, v12);
  }
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_17_2();
  (*(void (**)(void))(v0 + 272))();
  swift_task_dealloc();
  return swift_task_dealloc();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = (void *)*v0;
  id v2 = (void *)*v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v3 = v2;
  uint64_t v4 = v1[32];
  uint64_t v5 = v1[31];
  uint64_t v6 = v1[30];
  *uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  v2[41] = v1[10];
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v7 = v1[29];
  uint64_t v8 = v1[28];
  return MEMORY[0x1F4188298](closure #1 in ObservableNotificationHandler.init(name:), v8, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 136);
  id v2 = *(void *)(v0 + 144);
  return MEMORY[0x1F4188298](closure #1 in ObservableNotificationHandler.init(name:), v1, v2);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t (*v10)(void);
  uint64_t v12;

  swift_bridgeObjectRelease();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    OUTLINED_FUNCTION_50();
    (*(void (**)(void))(v1 + 224))();
    swift_release();
    swift_release();
    id v2 = static MainActor.shared.getter();
    v0[27] = v2;
    if (v2)
    {
      swift_getObjectType();
      uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    v0[28] = v3;
    v0[29] = v5;
    return MEMORY[0x1F4188298](closure #1 in ObservableNotificationHandler.init(name:), v3, v5);
  }
  else
  {
    swift_release();
    uint64_t v6 = OUTLINED_FUNCTION_2_84();
    v7(v6);
    uint64_t v8 = OUTLINED_FUNCTION_4_80();
    v9(v8);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t (*v5)(void);
  uint64_t v7;

  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_2_84();
  v2(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_80();
  v4(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1C32CE170()
{
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ObservableNotificationHandler.init(name:)(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = partial apply for closure #1 in AsyncCancellableTimer.wait(with:);
  return closure #1 in ObservableNotificationHandler.init(name:)(a1, v4, v5, v7, v6);
}

uint64_t type metadata accessor for ObservableNotificationHandler()
{
  uint64_t result = type metadata singleton initialization cache for ObservableNotificationHandler;
  if (!type metadata singleton initialization cache for ObservableNotificationHandler) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t closure #1 in closure #1 in ObservableNotificationHandler.init(name:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](closure #1 in closure #1 in ObservableNotificationHandler.init(name:), 0, 0);
}

uint64_t closure #1 in closure #1 in ObservableNotificationHandler.init(name:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  void *v1 = 0;
  v1[1] = 0xE000000000000000;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ObservableNotificationHandler.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ObservableNotificationHandler___observationRegistrar;
  type metadata accessor for ObservationRegistrar();
  OUTLINED_FUNCTION_12_0();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return swift_deallocClassInstance();
}

uint64_t ObjC metadata update function for ObservableNotificationHandler()
{
  return type metadata accessor for ObservableNotificationHandler();
}

uint64_t type metadata completion function for ObservableNotificationHandler()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ObservableNotificationHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ObservableNotificationHandler);
}

uint64_t dispatch thunk of ObservableNotificationHandler.__allocating_init(name:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of ObservableNotificationHandler.willReturnChangingValue()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of ObservableNotificationHandler.access<A>(keyPath:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ObservableNotificationHandler.withMutation<A, B>(keyPath:_:)()
{
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 224))();
}

void partial apply for closure #1 in ObservableNotificationHandler.trackingProperty.setter()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 24) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1C32CE508@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ObservableNotificationHandler.notificationTask.getter();
  *a1 = result;
  return result;
}

uint64_t partial apply for closure #1 in ObservableNotificationHandler.notificationTask.setter()
{
  return closure #1 in ObservableNotificationHandler.notificationTask.setter(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t lazy protocol witness table accessor for type NSNotificationCenter.Notifications and conformance NSNotificationCenter.Notifications(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void specialized MutableCollection.subscript.getter(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v4 = *(void *)(a3 + 16);
  if (v4 < a1 || (uint64_t)v4 < v3) {
    goto LABEL_11;
  }
  if (v3 < 0)
  {
LABEL_12:
    __break(1u);
    JUMPOUT(0x1C32CE6A4);
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_49_9();
}

void static RecentsCollectionViewSection.callItemCases.getter()
{
  specialized MutableCollection.subscript.getter(1, (uint64_t)&outlined read-only object #0 of static RecentsCollectionViewSection.allCases.getter);
  OUTLINED_FUNCTION_51_9();
  OUTLINED_FUNCTION_64_3();
  specialized Array.init<A>(_:)();
}

ConversationKit::RecentsCollectionViewSection_optional __swiftcall RecentsCollectionViewSection.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 13;
  if ((unint64_t)rawValue < 0xD) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (ConversationKit::RecentsCollectionViewSection_optional)rawValue;
}

uint64_t RecentsCollectionViewSection.rawValue.getter()
{
  return *v0;
}

ConversationKit::RecentsCollectionViewSection_optional protocol witness for RawRepresentable.init(rawValue:) in conformance RecentsCollectionViewSection(Swift::Int *a1)
{
  return RecentsCollectionViewSection.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance RecentsCollectionViewSection@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RecentsCollectionViewSection.rawValue.getter();
  *a1 = result;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance RecentsCollectionViewSection(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static RecentsCollectionViewSection.allCases.getter;
}

uint64_t RecentsCollectionViewModel.sections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecentsCollectionViewModel.init(with:now:upcomingSectionItemLimit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = static RecentsCollectionViewModel.sections(from:now:upcomingSectionItemLimit:)(a1, a2, a3);
  swift_bridgeObjectRelease();
  type metadata accessor for Date();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = OUTLINED_FUNCTION_28_6();
  uint64_t result = v7(v6);
  *a4 = v5;
  return result;
}

uint64_t RecentsCollectionViewModel.sectionable(for:identifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *v4;
  if (*(void *)(v6 + 16)
    && (uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(*(unsigned __int8 *)result), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void *)(*(void *)(v6 + 56) + 8 * result);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v12 = v10 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        outlined init with copy of IDSLookupManager(v12, (uint64_t)&v18);
        uint64_t v13 = v19;
        uint64_t v14 = v20;
        __swift_project_boxed_opaque_existential_1(&v18, v19);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14) == a2 && v15 == a3) {
          break;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_16;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
        v12 += 40;
        if (!--v11)
        {
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      outlined init with take of Notice(&v18, a4);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_14:
      *(void *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

void RecentsCollectionViewModel.sectionable(with:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v86 = v1;
  uint64_t v85 = v2;
  uint64_t v79 = v3;
  uint64_t v84 = type metadata accessor for RecentOngoingConversationMetadata(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2_3();
  uint64_t v83 = v5;
  uint64_t v82 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v81 = v7;
  uint64_t v90 = type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2_3();
  uint64_t v87 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  uint64_t v11 = OUTLINED_FUNCTION_8(v10);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_4();
  uint64_t v89 = v14;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_10_5();
  uint64_t v91 = v16;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v17);
  uint64_t v92 = (uint64_t)&v78 - v18;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_42();
  uint64_t v88 = v20;
  uint64_t v21 = *v0;
  specialized _NativeDictionary.makeIterator()(v96, *v0);
  uint64_t v22 = v96[0];
  uint64_t v93 = v96[1];
  int64_t v23 = v96[3];
  unint64_t v24 = v96[4];
  int64_t v25 = (unint64_t)(v96[2] + 64) >> 6;
  uint64_t v78 = v21;
  swift_bridgeObjectRetain_n();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  if (!v24) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v27 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  unint64_t v28 = v27 | (v23 << 6);
  while (1)
  {
    uint64_t v38 = *(void *)(*(void *)(v22 + 56) + 8 * v28);
    uint64_t v21 = *(void *)(v38 + 16);
    uint64_t v39 = *(void *)(v26 + 16);
    if (__OFADD__(v39, v21))
    {
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      OUTLINED_FUNCTION_1_7();
      OUTLINED_FUNCTION_33_4();
      __break(1u);
      JUMPOUT(0x1C32CF20CLL);
    }
    swift_bridgeObjectRetain();
    if (!swift_isUniquelyReferenced_nonNull_native() || v39 + v21 > *(void *)(v26 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v26 = v40;
    }
    if (*(void *)(v38 + 16))
    {
      uint64_t v41 = *(void *)(v26 + 16);
      if ((*(void *)(v26 + 24) >> 1) - v41 < v21) {
        goto LABEL_72;
      }
      unint64_t v42 = v26 + 40 * v41 + 32;
      if (v38 + 32 < v42 + 40 * v21 && v42 < v38 + 32 + 40 * v21) {
        goto LABEL_75;
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCollectionViewSectionable);
      swift_arrayInitWithCopy();
      if (v21)
      {
        uint64_t v44 = *(void *)(v26 + 16);
        BOOL v45 = __OFADD__(v44, v21);
        uint64_t v46 = (char *)(v44 + v21);
        if (v45) {
          goto LABEL_73;
        }
        *(void *)(v26 + 16) = v46;
      }
    }
    else if (v21)
    {
      goto LABEL_71;
    }
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v29 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      goto LABEL_74;
    }
    uint64_t v30 = v91;
    if (v29 >= v25) {
      break;
    }
    unint64_t v31 = *(void *)(v93 + 8 * v29);
    int64_t v32 = v23 + 1;
    if (!v31)
    {
      if (v23 + 2 >= v25) {
        break;
      }
      OUTLINED_FUNCTION_56_7();
      if (!v31)
      {
        if (v33 + 2 >= v25) {
          break;
        }
        OUTLINED_FUNCTION_56_7();
        if (!v31)
        {
          if (v34 + 3 >= v25) {
            break;
          }
          OUTLINED_FUNCTION_56_7();
          if (!v31)
          {
            if (v35 + 4 >= v25) {
              break;
            }
            OUTLINED_FUNCTION_56_7();
            if (!v31)
            {
              int64_t v32 = v36 + 5;
              if (v36 + 5 >= v25) {
                break;
              }
              unint64_t v31 = *(void *)(v93 + 8 * v32);
              if (!v31)
              {
                int64_t v37 = v23 + 7;
                do
                {
                  if (v37 >= v25) {
                    goto LABEL_38;
                  }
                  unint64_t v31 = *(void *)(v93 + 8 * v37++);
                }
                while (!v31);
                int64_t v32 = v37 - 1;
              }
            }
          }
        }
      }
    }
    unint64_t v24 = (v31 - 1) & v31;
    unint64_t v28 = __clz(__rbit64(v31)) + (v32 << 6);
    int64_t v23 = v32;
  }
LABEL_38:
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v47 = *(void *)(v26 + 16);
  if (v47)
  {
    uint64_t v48 = v26 + 32;
    swift_bridgeObjectRetain();
    uint64_t v49 = MEMORY[0x1E4FBC860];
    uint64_t v50 = v80;
    do
    {
      outlined init with copy of IDSLookupManager(v48, (uint64_t)v95);
      outlined init with copy of IDSLookupManager((uint64_t)v95, (uint64_t)&v94);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCollectionViewSectionable);
      int v51 = swift_dynamicCast();
      __swift_storeEnumTagSinglePayload((uint64_t)v13, v51 ^ 1u, 1, v50);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v50) == 1)
      {
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
      }
      else
      {
        uint64_t v52 = v88;
        _s15ConversationKit15RecentsCallItemVWObTm_1((uint64_t)v13, v88, (void (*)(void))type metadata accessor for RecentsCallItem);
        _s15ConversationKit15RecentsCallItemVWObTm_1(v52, v92, (void (*)(void))type metadata accessor for RecentsCallItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v49 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v49 + 16) + 1, 1, v49);
        }
        unint64_t v54 = *(void *)(v49 + 16);
        unint64_t v53 = *(void *)(v49 + 24);
        uint64_t v21 = v54 + 1;
        if (v54 >= v53 >> 1)
        {
          char v57 = OUTLINED_FUNCTION_57_5(v53);
          uint64_t v49 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v57, v54 + 1, 1, v49);
        }
        *(void *)(v49 + 16) = v21;
        OUTLINED_FUNCTION_6_49();
        _s15ConversationKit15RecentsCallItemVWObTm_1(v92, v49 + v55 + *(void *)(v56 + 72) * v54, (void (*)(void))type metadata accessor for RecentsCallItem);
      }
      v48 += 40;
      --v47;
    }
    while (v47);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v49 = MEMORY[0x1E4FBC860];
    uint64_t v50 = v80;
  }
  uint64_t v58 = *(void *)(v49 + 16);
  int64_t v59 = v87;
  if (!v58)
  {
    uint64_t v74 = v79;
    uint64_t v75 = 1;
    uint64_t v76 = v50;
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_6_49();
  uint64_t v61 = v49 + v60;
  uint64_t v63 = *(void *)(v62 + 72);
  swift_bridgeObjectRetain();
  while (2)
  {
    _s15ConversationKit15RecentsCallItemVWOcTm_2(v61, v30, (void (*)(void))type metadata accessor for RecentsCallItem);
    _s15ConversationKit15RecentsCallItemVWOcTm_2(v30, (uint64_t)v59, (void (*)(void))type metadata accessor for RecentsCallItemType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v67 = (uint64_t)v59;
        uint64_t v65 = v83;
        _s15ConversationKit15RecentsCallItemVWObTm_1(v67, v83, (void (*)(void))type metadata accessor for RecentOngoingConversationMetadata);
        OUTLINED_FUNCTION_43_12(*(int *)(v84 + 28));
        uint64_t v66 = type metadata accessor for RecentOngoingConversationMetadata;
        goto LABEL_57;
      case 2u:
        uint64_t v21 = (uint64_t)*v59;
        goto LABEL_58;
      case 3u:
      case 4u:
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_1((uint64_t)v59, (void (*)(void))type metadata accessor for RecentsCallItemType);
        goto LABEL_63;
      default:
        uint64_t v64 = (uint64_t)v59;
        uint64_t v65 = v81;
        _s15ConversationKit15RecentsCallItemVWObTm_1(v64, v81, (void (*)(void))type metadata accessor for RecentCallRecentItemMetadata);
        OUTLINED_FUNCTION_43_12(*(int *)(v82 + 44));
        uint64_t v66 = type metadata accessor for RecentCallRecentItemMetadata;
LABEL_57:
        _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v65, (void (*)(void))v66);
        int64_t v59 = v87;
        if (!v21) {
          goto LABEL_63;
        }
LABEL_58:
        id v68 = (id)v21;
        outlined consume of ConversationLink?((void *)v21);
        id v69 = [v68 (SEL)0x1F6AF398ALL];

        uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v71;

        if (v70 != v85 || v21 != v86)
        {
          char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          int64_t v59 = v87;
          if (v73) {
            goto LABEL_67;
          }
LABEL_63:
          _s15ConversationKit19RecentsCallItemTypeOWOhTm_1(v30, (void (*)(void))type metadata accessor for RecentsCallItem);
          v61 += v63;
          if (!--v58)
          {
            swift_bridgeObjectRelease();
            uint64_t v74 = v79;
            uint64_t v75 = 1;
            goto LABEL_68;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_67:
        swift_bridgeObjectRelease();
        uint64_t v77 = v79;
        _s15ConversationKit15RecentsCallItemVWObTm_1(v30, v79, (void (*)(void))type metadata accessor for RecentsCallItem);
        uint64_t v74 = v77;
        uint64_t v75 = 0;
LABEL_68:
        uint64_t v76 = v80;
LABEL_69:
        __swift_storeEnumTagSinglePayload(v74, v75, 1, v76);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_28();
        return;
    }
  }
}

void RecentsCollectionViewModel.videoMessageCallItem(withUUID:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v62 = v2;
  uint64_t v58 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = 0;
  v57[2] = type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_4();
  v57[1] = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_10_5();
  uint64_t v60 = v10;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v11);
  uint64_t v64 = (uint64_t)v57 - v12;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_42();
  uint64_t v63 = v14;
  uint64_t v15 = *v0;
  specialized _NativeDictionary.makeIterator()(v68, v15);
  uint64_t v16 = v68[0];
  uint64_t v65 = v68[1];
  int64_t v17 = v68[3];
  unint64_t v18 = v68[4];
  int64_t v19 = (unint64_t)(v68[2] + 64) >> 6;
  uint64_t v59 = v15;
  swift_bridgeObjectRetain_n();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (!v18) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v22 = v21 | (v17 << 6);
  while (1)
  {
    uint64_t v31 = *(void *)(*(void *)(v16 + 56) + 8 * v22);
    uint64_t v1 = *(void *)(v31 + 16);
    uint64_t v32 = *(void *)(v20 + 16);
    if (__OFADD__(v32, v1))
    {
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      OUTLINED_FUNCTION_1_7();
      OUTLINED_FUNCTION_33_4();
      __break(1u);
LABEL_65:
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_1((uint64_t)v7, (void (*)(void))type metadata accessor for RecentsCallItem);
      swift_bridgeObjectRelease();
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain();
    if (!swift_isUniquelyReferenced_nonNull_native() || v32 + v1 > *(void *)(v20 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v20 = v33;
    }
    if (*(void *)(v31 + 16))
    {
      uint64_t v34 = *(void *)(v20 + 16);
      if ((*(void *)(v20 + 24) >> 1) - v34 < v1) {
        goto LABEL_61;
      }
      unint64_t v35 = v20 + 40 * v34 + 32;
      if (v31 + 32 < v35 + 40 * v1 && v35 < v31 + 32 + 40 * v1) {
        goto LABEL_64;
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCollectionViewSectionable);
      swift_arrayInitWithCopy();
      if (v1)
      {
        uint64_t v37 = *(void *)(v20 + 16);
        BOOL v38 = __OFADD__(v37, v1);
        uint64_t v39 = v37 + v1;
        if (v38) {
          goto LABEL_62;
        }
        *(void *)(v20 + 16) = v39;
      }
    }
    else if (v1)
    {
      goto LABEL_60;
    }
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v23 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_63;
    }
    if (v23 >= v19) {
      goto LABEL_38;
    }
    unint64_t v24 = *(void *)(v65 + 8 * v23);
    int64_t v25 = v17 + 1;
    if (!v24)
    {
      if (v17 + 2 >= v19) {
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_54_7();
      if (!v24)
      {
        if (v26 + 2 >= v19) {
          goto LABEL_38;
        }
        OUTLINED_FUNCTION_54_7();
        if (!v24)
        {
          if (v27 + 3 >= v19) {
            goto LABEL_38;
          }
          OUTLINED_FUNCTION_54_7();
          if (!v24)
          {
            if (v28 + 4 >= v19) {
              goto LABEL_38;
            }
            OUTLINED_FUNCTION_54_7();
            if (!v24)
            {
              int64_t v25 = v29 + 5;
              if (v29 + 5 >= v19) {
                goto LABEL_38;
              }
              unint64_t v24 = *(void *)(v65 + 8 * v25);
              if (!v24) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
    int64_t v17 = v25;
  }
  int64_t v30 = v17 + 7;
  while (v30 < v19)
  {
    unint64_t v24 = *(void *)(v65 + 8 * v30++);
    if (v24)
    {
      int64_t v25 = v30 - 1;
      goto LABEL_20;
    }
  }
LABEL_38:
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v40 = *(void *)(v20 + 16);
  if (v40)
  {
    uint64_t v41 = v20 + 32;
    swift_bridgeObjectRetain();
    uint64_t v42 = MEMORY[0x1E4FBC860];
    OUTLINED_FUNCTION_59_6();
    do
    {
      outlined init with copy of IDSLookupManager(v41, (uint64_t)v67);
      outlined init with copy of IDSLookupManager((uint64_t)v67, (uint64_t)&v66);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCollectionViewSectionable);
      int v43 = swift_dynamicCast();
      __swift_storeEnumTagSinglePayload((uint64_t)v7, v43 ^ 1u, 1, v1);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v1) == 1)
      {
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
      }
      else
      {
        uint64_t v44 = v63;
        _s15ConversationKit15RecentsCallItemVWObTm_1((uint64_t)v7, v63, (void (*)(void))type metadata accessor for RecentsCallItem);
        _s15ConversationKit15RecentsCallItemVWObTm_1(v44, v64, (void (*)(void))type metadata accessor for RecentsCallItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v42 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v42 + 16) + 1, 1, v42);
        }
        unint64_t v46 = *(void *)(v42 + 16);
        unint64_t v45 = *(void *)(v42 + 24);
        if (v46 >= v45 >> 1)
        {
          char v47 = OUTLINED_FUNCTION_57_5(v45);
          uint64_t v42 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v47, v46 + 1, 1, v42);
        }
        *(void *)(v42 + 16) = v46 + 1;
        _s15ConversationKit15RecentsCallItemVWObTm_1(v64, v42+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v46, (void (*)(void))type metadata accessor for RecentsCallItem);
      }
      v41 += 40;
      --v40;
    }
    while (v40);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v42 = MEMORY[0x1E4FBC860];
    OUTLINED_FUNCTION_59_6();
  }
  uint64_t v48 = *(void *)(v42 + 16);
  uint64_t v49 = v61;
  uint64_t v50 = v62;
  uint64_t v7 = v60;
  if (v48)
  {
    uint64_t v51 = v42 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v52 = *(void *)(v19 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      _s15ConversationKit15RecentsCallItemVWOcTm_2(v51, (uint64_t)v7, (void (*)(void))type metadata accessor for RecentsCallItem);
      char v53 = closure #3 in RecentsCollectionViewModel.videoMessageCallItem(withUUID:)((uint64_t)v7, v50);
      if (v49) {
        goto LABEL_65;
      }
      if (v53)
      {
        swift_bridgeObjectRelease();
        uint64_t v56 = v58;
        _s15ConversationKit15RecentsCallItemVWObTm_1((uint64_t)v7, v58, (void (*)(void))type metadata accessor for RecentsCallItem);
        uint64_t v54 = v56;
        uint64_t v55 = 0;
        goto LABEL_58;
      }
      _s15ConversationKit19RecentsCallItemTypeOWOhTm_1((uint64_t)v7, (void (*)(void))type metadata accessor for RecentsCallItem);
      v51 += v52;
      if (!--v48)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v54 = v58;
  uint64_t v55 = 1;
LABEL_58:
  __swift_storeEnumTagSinglePayload(v54, v55, 1, v1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #3 in RecentsCollectionViewModel.videoMessageCallItem(withUUID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = (char *)v36 - v6;
  uint64_t v8 = (void *)RecentsCallItem.messageIndicatorViewModel.getter();
  uint64_t v37 = v2;
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_messageUUID);

    MEMORY[0x1F4188790](v11);
    if (v10)
    {
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v12 = type metadata accessor for UUID();
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v12 = type metadata accessor for UUID();
      uint64_t v13 = 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v36 - v6, v13, 1, v12);
    uint64_t v15 = outlined init with take of RecentsCollectionViewSectionable?((uint64_t)v36 - v6, (uint64_t)v36 - v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  else
  {
    uint64_t v14 = type metadata accessor for UUID();
    uint64_t v15 = __swift_storeEnumTagSinglePayload((uint64_t)v36 - v6, 1, 1, v14);
  }
  v36[3] = v36;
  MEMORY[0x1F4188790](v15);
  unint64_t v16 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  int64_t v17 = (char *)v36 - v16;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)v36 - v16, a2, v18);
  __swift_storeEnumTagSinglePayload((uint64_t)v36 - v16, 0, 1, v18);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  _OWORD v36[2] = v36;
  MEMORY[0x1F4188790](v20 - 8);
  unint64_t v22 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t)&v22[*(int *)(v23 + 56)];
  outlined init with copy of UUID?((uint64_t)v7, (uint64_t)v22);
  outlined init with copy of UUID?((uint64_t)v36 - v16, v24);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v18);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v36 - v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    int v26 = __swift_getEnumTagSinglePayload(v24, 1, v18);
    if (v26 == 1) {
      uint64_t v27 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
    }
    else {
      uint64_t v27 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    }
    if (v26 == 1) {
      char v28 = -1;
    }
    else {
      char v28 = 0;
    }
  }
  else
  {
    MEMORY[0x1F4188790](EnumTagSinglePayload);
    uint64_t v29 = (char *)v36 - v16;
    outlined init with copy of UUID?((uint64_t)v22, (uint64_t)v29);
    uint64_t v30 = __swift_getEnumTagSinglePayload(v24, 1, v18);
    if (v30 == 1)
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v29, v18);
      uint64_t v27 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
      char v28 = 0;
    }
    else
    {
      v36[1] = v36;
      __n128 v31 = MEMORY[0x1F4188790](v30);
      v36[0] = v36;
      uint64_t v33 = (char *)v36 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 32))(v33, v24, v18, v31);
      lazy protocol witness table accessor for type UUID and conformance UUID();
      char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v19 + 8);
      v34(v33, v18);
      uint64_t v27 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v34(v29, v18);
    }
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v22, v27);
  return v28 & 1;
}

void *specialized UnsafeMutablePointer.initialize(from:count:)(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  unint64_t v3 = a1 + 32 * a2;
  if (a3 + 32 * a2 > a1)
  {
    BOOL v4 = v3 >= a3;
    BOOL v5 = v3 == a3;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  unint64_t v6 = (void *)OUTLINED_FUNCTION_24_28();
  return memcpy(v6, v7, v8);
}

{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  unint64_t v3 = a1 + 4 * a2;
  if (a3 + 4 * a2 > a1)
  {
    BOOL v4 = v3 >= a3;
    BOOL v5 = v3 == a3;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  unint64_t v6 = (void *)OUTLINED_FUNCTION_24_28();
  return memcpy(v6, v7, v8);
}

{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;
  uint64_t vars8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_15_16();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_33_4();
    __break(1u);
    return result;
  }
  unint64_t v3 = a1 + 72 * a2;
  if (a3 + 72 * a2 > a1)
  {
    BOOL v4 = v3 >= a3;
    BOOL v5 = v3 == a3;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  unint64_t v6 = (void *)OUTLINED_FUNCTION_24_28();
  return memcpy(v6, v7, v8);
}

unint64_t specialized _NativeDictionary._insert(at:key:value:)(unint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = a6[6] + 24 * result;
  *(unsigned char *)uint64_t v6 = a2 & 1;
  *(void *)(v6 + 8) = a3;
  *(_WORD *)(v6 + 16) = a4;
  *(unsigned char *)(v6 + 18) = BYTE2(a4) & 1;
  *(unsigned char *)(v6 + 19) = BYTE3(a4);
  *(unsigned char *)(v6 + 20) = BYTE4(a4) & 1;
  *(unsigned char *)(v6 + 2ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = BYTE5(a4) & 1;
  *(unsigned char *)(v6 + 22) = BYTE6(a4) & 1;
  *(void *)(a6[7] + 8 * result) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, _OWORD *a2, uint64_t a3)
{
  *(void *)(a3 + 8 * (a1 >> 6) + 64) |= 1 << a1;
  outlined init with take of Any(a2, (_OWORD *)(*(void *)(a3 + 56) + 32 * a1));
  OUTLINED_FUNCTION_16_34();
  if (v5) {
    __break(1u);
  }
  else {
    *(void *)(a3 + 16) = v4;
  }
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = OUTLINED_FUNCTION_28_23(a1, a2, a3, a4, a5);
  outlined init with take of Any(v8, (_OWORD *)(v7 + 32 * v6));
  OUTLINED_FUNCTION_16_34();
  if (v10) {
    __break(1u);
  }
  else {
    *(void *)(a5 + 16) = v9;
  }
}

{
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_10_52(a1, a2, a3, a4, a5);
  if (v7) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_41_15(v5, v6);
  }
}

{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  long long v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  char v5 = OUTLINED_FUNCTION_28_23(a1, a2, a3, a4, a5);
  BOOL v8 = v7 + 40 * v5;
  char v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)BOOL v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = *(void *)(v6 + 16);
  uint64_t v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_41_15(v6, v13);
  }
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_11_41(a1, a2, a3, a4);
  if (v6) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_38_14(v4, v5);
  }
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a5[6] + aConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * a1);
  *uint64_t v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_41_15((uint64_t)a5, v8);
  }
}

unint64_t specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result = OUTLINED_FUNCTION_68_6(a1, a2, a3);
  *(unsigned char *)(v6 + result) = v5;
  BOOL v7 = (void *)(*(void *)(v4 + 56) + 16 * result);
  *BOOL v7 = v8;
  v7[1] = v9;
  uint64_t v10 = *(void *)(v4 + 16);
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    *(void *)(v4 + 16) = v12;
  }
  return result;
}

{
  unint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  unint64_t result = OUTLINED_FUNCTION_68_6(a1, a2, a3);
  *(void *)(v6 + 8 * result) = v5;
  BOOL v7 = (void *)(*(void *)(v4 + 56) + 32 * result);
  *BOOL v7 = v8;
  v7[1] = v9;
  v7[2] = v10;
  v7[3] = v11;
  uint64_t v12 = *(void *)(v4 + 16);
  uint64_t v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    *(void *)(v4 + 16) = v14;
  }
  return result;
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + aConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = a2 & 1;
  *(void *)(a4[7] + 8 * aConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_38_14((uint64_t)a4, v6);
  }
}

unint64_t specialized _NativeDictionary._insert(at:key:value:)(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  BOOL v7 = (void *)(a6[7] + 16 * result);
  *BOOL v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_8(v9);
  _s15ConversationKit15RecentsCallItemVWObTm_1(a2, v8 + *(void *)(v10 + 72) * a1, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
  *(void *)(a4[7] + 8 * aConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = a3;
  OUTLINED_FUNCTION_16_34();
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v11;
  }
}

uint64_t specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v49 = a4;
  uint64_t v38 = result;
  uint64_t v37 = a2;
  uint64_t v43 = a3;
  if (a3 == a2) {
    return result;
  }
  uint64_t v4 = 40 * v43 - 40;
  while (2)
  {
    uint64_t v50 = v38;
    uint64_t v39 = v4;
    uint64_t v5 = v4;
    do
    {
      uint64_t v6 = *v49;
      uint64_t v53 = v5;
      uint64_t v7 = v6 + v5;
      outlined init with copy of IDSLookupManager(v6 + v5 + 40, (uint64_t)&v57);
      outlined init with copy of IDSLookupManager(v7, (uint64_t)v54);
      uint64_t v8 = type metadata accessor for Date();
      uint64_t v60 = v36;
      uint64_t v52 = *(void *)(v8 - 8);
      uint64_t v9 = *(void *)(v52 + 64);
      MEMORY[0x1F4188790](v8);
      unint64_t v45 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v51 = &v36[-v45];
      uint64_t v11 = v58;
      uint64_t v10 = v59;
      char v12 = __swift_project_boxed_opaque_existential_1(&v57, v58);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64);
      MEMORY[0x1F4188790](v13 - 8);
      unint64_t v44 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v15 = &v36[-v44];
      unint64_t v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      char v47 = v12;
      uint64_t v48 = v11;
      uint64_t v17 = v11;
      uint64_t v18 = v10;
      uint64_t v19 = v10 + 8;
      unint64_t v46 = v16;
      v16(v17, v18);
      if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v8) == 1)
      {
        uint64_t v20 = outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for Date?);
        uint64_t v21 = v53;
        goto LABEL_8;
      }
      uint64_t v41 = v19;
      uint64_t v40 = v18;
      unint64_t v22 = *(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v52 + 32);
      uint64_t v23 = v22(v51, v15, v8);
      uint64_t v42 = v36;
      MEMORY[0x1F4188790](v23);
      uint64_t v24 = &v36[-v45];
      uint64_t v26 = v55;
      uint64_t v25 = v56;
      uint64_t v27 = __swift_project_boxed_opaque_existential_1(v54, v55);
      unint64_t v45 = (unint64_t)v36;
      MEMORY[0x1F4188790](v27);
      char v28 = &v36[-v44];
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v25);
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v8) == 1)
      {
        (*(void (**)(unsigned char *, uint64_t))(v52 + 8))(v51, v8);
        uint64_t v20 = outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for Date?);
        uint64_t v21 = v53;
        uint64_t v18 = v40;
LABEL_8:
        MEMORY[0x1F4188790](v20);
        v46(v48, v18);
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, v8);
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t *)&demangling cache variable for type metadata for Date?);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
        unint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
        if (EnumTagSinglePayload == 1) {
          break;
        }
        goto LABEL_11;
      }
      v22(v24, v28, v8);
      uint64_t v30 = v51;
      char v31 = static Date.> infix(_:_:)();
      uint64_t v32 = *(void (**)(unsigned char *, uint64_t))(v52 + 8);
      v32(v24, v8);
      v32(v30, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      unint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
      uint64_t v21 = v53;
      if ((v31 & 1) == 0) {
        break;
      }
LABEL_11:
      uint64_t v33 = *v49;
      if (!*v49)
      {
        __break(1u);
        return result;
      }
      uint64_t v34 = v33 + v21;
      outlined init with take of Notice((long long *)(v33 + v21 + 40), (uint64_t)&v57);
      long long v35 = *(_OWORD *)(v34 + 16);
      *(_OWORD *)(v34 + 40) = *(_OWORD *)v34;
      *(_OWORD *)(v34 + 56) = v35;
      *(void *)(v34 + 72) = *(void *)(v34 + 32);
      unint64_t result = outlined init with take of Notice(&v57, v34);
      uint64_t v5 = v21 - 40;
      ++v50;
    }
    while (v43 != v50);
    uint64_t v4 = v39 + 40;
    if (++v43 != v37) {
      continue;
    }
    return result;
  }
}

{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  char v12 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v6 = (void *)(v5 + 16 * v4);
    while (2)
    {
      uint64_t v7 = v12;
      uint64_t v8 = v6;
      do
      {
        unint64_t result = StringProtocol.localizedStandardCompare<A>(_:)();
        if (result != -1) {
          break;
        }
        if (!v5)
        {
          __break(1u);
          return result;
        }
        uint64_t v9 = *v8;
        uint64_t v10 = v8[1];
        *(_OWORD *)uint64_t v8 = *((_OWORD *)v8 - 1);
        *(v8 - ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v10;
        *(v8 - 2) = v9;
        v8 -= 2;
        ++v7;
      }
      while (v4 != v7);
      ++v4;
      v6 += 2;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

{
  uint64_t v4;
  unsigned char *v5;
  unsigned int v6;
  uint64_t v7;
  unsigned char *v8;
  unsigned int v9;

  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = (unsigned char *)(*a4 + a3);
    while (2)
    {
      uint64_t v6 = *(unsigned __int8 *)(v4 + a3);
      uint64_t v7 = result;
      uint64_t v8 = v5;
      do
      {
        uint64_t v9 = *(v8 - 1);
        if (v6 >= v9) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *uint64_t v8 = v9;
        *--uint64_t v8 = v6;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      ++v5;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

{
  uint64_t v5;
  void *v6;
  void (*v7)(char *);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *);
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t);
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (**v26)(char *, uint64_t);
  void *v27;
  void (*v28)(char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (**v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;

  uint64_t v24 = a2;
  uint64_t v25 = result;
  char v31 = a3;
  if (a3 != a2)
  {
    unint64_t result = type metadata accessor for IndexPath();
    uint64_t v5 = result;
    uint64_t v6 = *(void **)(result - 8);
    uint64_t v7 = (void (*)(void))v6[2];
    uint64_t v27 = v6 + 2;
    char v28 = (void (*)(char *))v7;
    uint64_t v8 = v6[9];
    uint64_t v34 = v6[8];
    long long v35 = a4;
    uint64_t v26 = (uint64_t (**)(char *, uint64_t))(v6 + 1);
    uint64_t v32 = (uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 4);
    uint64_t v39 = v8 * (v31 - 1);
    uint64_t v29 = v8;
    uint64_t v9 = v8 * v31;
    while (2)
    {
      uint64_t v10 = 0;
      uint64_t v36 = v25;
      uint64_t v30 = v9;
      do
      {
        uint64_t v38 = &v23;
        uint64_t v33 = v9 + v10;
        uint64_t v11 = v34;
        MEMORY[0x1F4188790](result);
        char v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v13 = v28;
        uint64_t v14 = ((uint64_t (*)(char *))v28)(v12);
        uint64_t v37 = &v23;
        MEMORY[0x1F4188790](v14);
        v13(v12);
        _s10Foundation4UUIDVACSQAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, MEMORY[0x1F418BF68]);
        LOBYTE(v13) = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v15 = *v26;
        (*v26)(v12, v5);
        unint64_t v16 = v35;
        unint64_t result = v15((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
        uint64_t v9 = v30;
        if ((v13 & 1) == 0) {
          break;
        }
        uint64_t v17 = *v16;
        if (!*v16)
        {
          __break(1u);
          return result;
        }
        uint64_t v18 = v17 + v30 + v10;
        uint64_t v19 = (char *)(v17 + v39 + v10);
        MEMORY[0x1F4188790](result);
        uint64_t v21 = (char *)&v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
        unint64_t v22 = *v32;
        (*v32)(v21, v18, v5);
        swift_arrayInitWithTakeFrontToBack();
        unint64_t result = v22(v19, (uint64_t)v21, v5);
        v10 -= v29;
        ++v36;
      }
      while (v31 != v36);
      v39 += v29;
      v9 += v29;
      if (++v31 != v24) {
        continue;
      }
      break;
    }
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
    while (2)
    {
      uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
      unint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      char v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1)) {
          break;
        }
        unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        unint64_t result = *v12;
        uint64_t v10 = v12[1];
        *(_OWORD *)char v12 = *((_OWORD *)v12 - 1);
        *(v12 - ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  long long v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  void v35[3];
  uint64_t v36;
  uint64_t v37;
  long long v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;

  char v28 = a2;
  uint64_t v29 = result;
  uint64_t v32 = a3;
  if (a3 != a2)
  {
    uint64_t v4 = a4;
    uint64_t v5 = 40 * v32 - 40;
    char v31 = a4;
    while (2)
    {
      uint64_t v6 = v29;
      uint64_t v30 = v5;
      while (1)
      {
        uint64_t v7 = *v4 + v5;
        outlined init with copy of IDSLookupManager(v7 + 40, (uint64_t)&v38);
        outlined init with copy of IDSLookupManager(v7, (uint64_t)v35);
        uint64_t v8 = v39;
        uint64_t v9 = v40;
        __swift_project_boxed_opaque_existential_1(&v38, v39);
        uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 104))(v8, v9);
        if (!v10) {
          break;
        }
        uint64_t v11 = (void *)v10;
        char v12 = v36;
        uint64_t v13 = v37;
        __swift_project_boxed_opaque_existential_1(v35, v36);
        uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 104))(v12, v13);
        if (v14)
        {
          uint64_t v15 = (void *)v14;
          uint64_t v34 = type metadata accessor for Date();
          uint64_t v41 = &v27;
          unint64_t v16 = *(void *)(v34 - 8);
          uint64_t v17 = *(void *)(v16 + 64);
          MEMORY[0x1F4188790](v34);
          uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v19 = objc_msgSend(v11, sel_timestamp);
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v33 = &v27;
          MEMORY[0x1F4188790](v20);
          uint64_t v21 = objc_msgSend(v15, sel_timestamp);
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          LOBYTE(v2ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = static Date.> infix(_:_:)();
          unint64_t v22 = *(void (**)(char *, uint64_t))(v16 + 8);
          uint64_t v23 = v34;
          v22(v18, v34);
          v22(v18, v23);
          uint64_t v4 = v31;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
          unint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
          if ((v21 & 1) == 0) {
            goto LABEL_13;
          }
        }
        else
        {

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
          unint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
        }
        uint64_t v24 = *v4;
        if (!*v4)
        {
          __break(1u);
          return result;
        }
        uint64_t v25 = v24 + v5;
        outlined init with take of Notice((long long *)(v24 + v5 + 40), (uint64_t)&v38);
        uint64_t v26 = *(_OWORD *)(v25 + 16);
        *(_OWORD *)(v25 + 40) = *(_OWORD *)v25;
        *(_OWORD *)(v25 + 56) = v26;
        *(void *)(v25 + 72) = *(void *)(v25 + 32);
        unint64_t result = outlined init with take of Notice(&v38, v25);
        v5 -= 40;
        if (v32 == ++v6) {
          goto LABEL_13;
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      unint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
LABEL_13:
      uint64_t v5 = v30 + 40;
      if (++v32 != v28) {
        continue;
      }
      break;
    }
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  long long v18;
  uint64_t v19;
  uint64_t v20;

  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 40 * a3 + 24;
    while (2)
    {
      uint64_t v9 = v7 + 40 * v4;
      unint64_t result = *(void *)(v9 + 16);
      uint64_t v10 = *(void *)(v9 + 24);
      uint64_t v11 = v6;
      char v12 = v8;
      do
      {
        if (result == *(void *)(v12 - 48) && v10 == *(void *)(v12 - 40)) {
          break;
        }
        unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t v14 = v12 - 24;
        uint64_t v15 = *(_OWORD *)v12;
        unint64_t v16 = *(void *)(v12 - 32);
        uint64_t v18 = *(_OWORD *)(v12 - 64);
        uint64_t v17 = *(_OWORD *)(v12 - 48);
        *(_OWORD *)(v12 - 40) = *(_OWORD *)v12;
        v12 -= 40;
        uint64_t v19 = *(void *)(v12 + 16);
        uint64_t v20 = *(void *)(v12 + 24);
        unint64_t result = *(void *)(v12 + 32);
        *(_OWORD *)uint64_t v14 = v18;
        *(_OWORD *)(v14 + 16) = v17;
        *(void *)(v14 + 32) = v16;
        *(void *)(v12 - 24) = v19;
        *(void *)(v12 - 16) = v20;
        *(void *)(v12 - 8) = result;
        uint64_t v10 = v15;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 40;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (uint64_t)(a2 - a1) / 40;
  uint64_t v10 = a3 - a2;
  uint64_t v11 = (uint64_t)(a3 - a2) / 40;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - a2) / 40, a4);
    char v12 = (char *)(v4 + 40 * v11);
    if (v7 >= v6 || v10 < 40) {
      goto LABEL_51;
    }
    unint64_t v91 = v7;
    unint64_t v45 = (uint64_t *)(a3 - 40);
    unint64_t v93 = v4;
    while (1)
    {
      uint64_t v92 = v45;
      unint64_t v94 = (unint64_t)v12;
      uint64_t v80 = v12 - 40;
      outlined init with copy of IDSLookupManager((uint64_t)(v12 - 40), (uint64_t)v98);
      unint64_t v101 = v6;
      unint64_t v81 = v6 - 40;
      outlined init with copy of IDSLookupManager(v6 - 40, (uint64_t)v95);
      uint64_t v46 = type metadata accessor for Date();
      uint64_t v89 = &v76;
      uint64_t v88 = *(char **)(v46 - 8);
      uint64_t v47 = *((void *)v88 + 8);
      MEMORY[0x1F4188790](v46);
      unint64_t v79 = (v47 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v87 = (char *)&v76 - v79;
      uint64_t v49 = v99;
      uint64_t v48 = v100;
      uint64_t v50 = __swift_project_boxed_opaque_existential_1(v98, v99);
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      uint64_t v90 = &v76;
      uint64_t v52 = *(void *)(*(void *)(v51 - 8) + 64);
      MEMORY[0x1F4188790](v51 - 8);
      unint64_t v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      uint64_t v84 = v50;
      uint64_t v85 = (void *)v48;
      uint64_t v86 = v49;
      uint64_t v83 = (char *)(v48 + 8);
      unint64_t v82 = (unint64_t)v54;
      v54(v49, v48);
      if (__swift_getEnumTagSinglePayload((uint64_t)&v76 - v53, 1, v46) == 1) {
        break;
      }
      uint64_t v55 = (void (*)(char *, char *, uint64_t))*((void *)v88 + 4);
      uint64_t v78 = v88 + 32;
      uint64_t v77 = v55;
      uint64_t v56 = ((uint64_t (*)(char *, char *, uint64_t))v55)(v87, (char *)&v76 - v53, v46);
      MEMORY[0x1F4188790](v56);
      long long v57 = (char *)&v76 - v79;
      uint64_t v58 = v96;
      uint64_t v59 = v97;
      uint64_t v60 = __swift_project_boxed_opaque_existential_1(v95, v96);
      uint64_t v90 = &v76;
      MEMORY[0x1F4188790](v60);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v59);
      uint64_t v61 = v46;
      if (__swift_getEnumTagSinglePayload((uint64_t)&v76 - v53, 1, v46) == 1)
      {
        (*((void (**)(char *, uint64_t))v88 + 1))(v87, v46);
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v76 - v53, (uint64_t *)&demangling cache variable for type metadata for Date?);
        unint64_t v4 = v93;
        unint64_t v6 = v101;
        goto LABEL_33;
      }
      v77(v57, (char *)&v76 - v53, v46);
      uint64_t v65 = v87;
      char v64 = static Date.> infix(_:_:)();
      uint64_t v66 = (void (*)(char *, uint64_t))*((void *)v88 + 1);
      v66(v57, v61);
      v66(v65, v61);
      unint64_t v4 = v93;
      unint64_t v6 = v101;
LABEL_35:
      uint64_t v67 = v92;
      id v68 = v92 + 5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
      if (v64)
      {
        BOOL v69 = v68 != (void *)v6 || (unint64_t)v67 >= v6;
        uint64_t v70 = (_OWORD *)v81;
        unint64_t v6 = v81;
        char v12 = (char *)v94;
        if (!v69) {
          goto LABEL_47;
        }
      }
      else
      {
        BOOL v71 = v68 != (void *)v94 || (unint64_t)v67 >= v94;
        char v12 = v80;
        uint64_t v70 = v80;
        if (!v71) {
          goto LABEL_47;
        }
      }
      long long v72 = *v70;
      long long v73 = v70[1];
      v67[4] = *((void *)v70 + 4);
      *(_OWORD *)uint64_t v67 = v72;
      *((_OWORD *)v67 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v73;
LABEL_47:
      unint64_t v45 = v67 - 5;
      if ((unint64_t)v12 <= v4 || v6 <= v91) {
        goto LABEL_51;
      }
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v76 - v53, (uint64_t *)&demangling cache variable for type metadata for Date?);
    unint64_t v6 = v101;
    unint64_t v4 = v93;
LABEL_33:
    uint64_t v62 = MEMORY[0x1F4188790](v86);
    v63(v62);
    char v64 = __swift_getEnumTagSinglePayload((uint64_t)&v76 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v46) != 1;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v76 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for Date?);
    goto LABEL_35;
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (uint64_t)(a2 - a1) / 40, a4);
  char v12 = (char *)(v4 + 40 * v9);
  if (v6 < a3 && v8 >= 40)
  {
    uint64_t v13 = (uint64_t *)&demangling cache variable for type metadata for Date?;
    unint64_t v94 = v4 + 40 * v9;
    unint64_t v81 = a3;
    while (1)
    {
      unint64_t v101 = v6;
      outlined init with copy of IDSLookupManager(v6, (uint64_t)v98);
      unint64_t v93 = v4;
      outlined init with copy of IDSLookupManager(v4, (uint64_t)v95);
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v90 = &v76;
      uint64_t v89 = *(uint64_t **)(v14 - 8);
      uint64_t v15 = v89[8];
      MEMORY[0x1F4188790](v14);
      uint64_t v83 = (char *)((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v88 = (char *)((char *)&v76 - v83);
      uint64_t v16 = v99;
      uint64_t v17 = v100;
      uint64_t v18 = __swift_project_boxed_opaque_existential_1(v98, v99);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(v13);
      uint64_t v92 = &v76;
      uint64_t v20 = v13;
      uint64_t v21 = *(void *)(*(void *)(v19 - 8) + 64);
      MEMORY[0x1F4188790](v19 - 8);
      unint64_t v82 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
      unint64_t v22 = (char *)&v76 - v82;
      uint64_t v23 = *(void **)(v17 + 8);
      uint64_t v85 = v18;
      uint64_t v86 = v17;
      uint64_t v87 = (char *)v16;
      uint64_t v24 = v17;
      uint64_t v25 = v14;
      uint64_t v84 = v23;
      ((void (*)(uint64_t, uint64_t))v23)(v16, v24);
      if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v14) == 1) {
        break;
      }
      unint64_t v91 = v7;
      uint64_t v80 = (char *)v89[4];
      uint64_t v26 = ((uint64_t (*)(char *, char *, uint64_t))v80)(v88, v22, v14);
      uint64_t v92 = &v76;
      MEMORY[0x1F4188790](v26);
      uint64_t v27 = (char *)((char *)&v76 - v83);
      uint64_t v28 = v96;
      uint64_t v29 = v97;
      uint64_t v30 = __swift_project_boxed_opaque_existential_1(v95, v96);
      uint64_t v83 = (char *)&v76;
      MEMORY[0x1F4188790](v30);
      char v31 = (char *)&v76 - v82;
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v14) == 1)
      {
        ((void (*)(char *, uint64_t))v89[1])(v88, v14);
        uint64_t v20 = (uint64_t *)&demangling cache variable for type metadata for Date?;
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for Date?);
        unint64_t v6 = v101;
        unint64_t v7 = v91;
LABEL_9:
        uint64_t v32 = MEMORY[0x1F4188790](v87);
        v33(v32);
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v14);
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v20);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
        uint64_t v13 = v20;
        unint64_t v4 = v93;
        if (EnumTagSinglePayload != 1) {
          goto LABEL_14;
        }
        goto LABEL_10;
      }
      ((void (*)(char *, char *, uint64_t))v80)(v27, v31, v14);
      uint64_t v38 = v88;
      char v39 = static Date.> infix(_:_:)();
      uint64_t v40 = (void (*)(char *, uint64_t))v89[1];
      v40(v27, v25);
      v40(v38, v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
      unint64_t v4 = v93;
      unint64_t v6 = v101;
      unint64_t v7 = v91;
      uint64_t v13 = (uint64_t *)&demangling cache variable for type metadata for Date?;
      if (v39)
      {
LABEL_14:
        BOOL v35 = v7 == v6;
        unint64_t v36 = v6;
        v6 += 40;
        BOOL v37 = !v35 || v7 >= v6;
        goto LABEL_17;
      }
LABEL_10:
      BOOL v35 = v7 == v4;
      unint64_t v36 = v4;
      v4 += 40;
      BOOL v37 = !v35 || v7 >= v4;
LABEL_17:
      char v12 = (char *)v94;
      unint64_t v41 = v81;
      if (v37)
      {
        long long v42 = *(_OWORD *)v36;
        long long v43 = *(_OWORD *)(v36 + 16);
        *(void *)(v7 + 32) = *(void *)(v36 + 32);
        *(_OWORD *)unint64_t v7 = v42;
        *(_OWORD *)(v7 + 16) = v43;
      }
      v7 += 40;
      if (v4 >= (unint64_t)v12 || v6 >= v41) {
        goto LABEL_25;
      }
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v22, v20);
    unint64_t v6 = v101;
    goto LABEL_9;
  }
LABEL_25:
  unint64_t v6 = v7;
LABEL_51:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (uint64_t)&v12[-v4] / 40, v6);
  return 1;
}

{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char *v26;
  id v27;
  void (*v28)(char *, uint64_t);
  BOOL v29;
  unint64_t v30;
  BOOL v31;
  long long v32;
  long long v33;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  id v48;
  uint64_t v49;
  id v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  void *v54;
  BOOL v55;
  BOOL v56;
  long long v57;
  long long v58;
  void v61[2];
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  unint64_t v66;
  unint64_t v67;
  void v68[3];
  uint64_t v69;
  uint64_t v70;
  void v71[3];
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;

  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (uint64_t)(a2 - a1) / 40;
  uint64_t v10 = a3 - a2;
  uint64_t v11 = (uint64_t)(a3 - a2) / 40;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - a2) / 40, a4);
    char v12 = (void *)(v4 + 40 * v11);
    if (v7 >= v6 || v10 < 40) {
      goto LABEL_55;
    }
    unint64_t v36 = v5 - 40;
    uint64_t v66 = v4;
    while (1)
    {
      uint64_t v67 = (unint64_t)v12;
      uint64_t v65 = v12 - 5;
      outlined init with copy of IDSLookupManager((uint64_t)(v12 - 5), (uint64_t)v71);
      BOOL v37 = (void *)(v6 - 40);
      outlined init with copy of IDSLookupManager(v6 - 40, (uint64_t)v68);
      uint64_t v38 = v72;
      char v39 = v73;
      __swift_project_boxed_opaque_existential_1(v71, v72);
      uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 104))(v38, v39);
      if (v40)
      {
        unint64_t v41 = (void *)v40;
        uint64_t v74 = v6;
        long long v42 = v69;
        long long v43 = v70;
        __swift_project_boxed_opaque_existential_1(v68, v69);
        unint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 104))(v42, v43);
        if (v44)
        {
          unint64_t v45 = (void *)v44;
          uint64_t v63 = type metadata accessor for Date();
          char v64 = v61;
          uint64_t v62 = *(void *)(v63 - 8);
          uint64_t v46 = *(void *)(v62 + 64);
          MEMORY[0x1F4188790](v63);
          uint64_t v47 = (char *)v61 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v48 = objc_msgSend(v41, sel_timestamp);
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          v61[1] = v61;
          MEMORY[0x1F4188790](v49);
          uint64_t v50 = objc_msgSend(v45, sel_timestamp);
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v51 = static Date.> infix(_:_:)();
          uint64_t v52 = *(void (**)(char *, uint64_t))(v62 + 8);
          unint64_t v53 = v63;
          v52(v47, v63);
          v52(v47, v53);
          unint64_t v4 = v66;
        }
        else
        {

          uint64_t v51 = 1;
        }
        unint64_t v6 = v74;
      }
      else
      {
        uint64_t v51 = 0;
      }
      char v12 = (void *)v67;
      uint64_t v54 = (void *)(v36 + 40);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
      if (v51)
      {
        uint64_t v55 = v54 != (void *)v6 || v36 >= v6;
        unint64_t v6 = (unint64_t)v37;
        if (!v55) {
          goto LABEL_49;
        }
      }
      else
      {
        uint64_t v56 = v54 != v12 || v36 >= (unint64_t)v12;
        char v12 = v65;
        BOOL v37 = v65;
        if (!v56) {
          goto LABEL_49;
        }
      }
      long long v57 = *(_OWORD *)v37;
      uint64_t v58 = *((_OWORD *)v37 + 1);
      *(void *)(v36 + 32) = v37[4];
      *(_OWORD *)unint64_t v36 = v57;
      *(_OWORD *)(v36 + 16) = v58;
LABEL_49:
      v36 -= 40;
      if ((unint64_t)v12 <= v4 || v6 <= v7) {
        goto LABEL_55;
      }
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (uint64_t)(a2 - a1) / 40, a4);
  char v12 = (void *)(v4 + 40 * v9);
  if (v6 < v5 && v8 >= 40)
  {
    uint64_t v67 = v4 + 40 * v9;
    uint64_t v63 = v5;
    do
    {
      outlined init with copy of IDSLookupManager(v6, (uint64_t)v71);
      uint64_t v66 = v4;
      outlined init with copy of IDSLookupManager(v4, (uint64_t)v68);
      uint64_t v13 = v72;
      uint64_t v14 = v73;
      __swift_project_boxed_opaque_existential_1(v71, v72);
      uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 104))(v13, v14);
      uint64_t v74 = v6;
      if (v15)
      {
        uint64_t v16 = (void *)v15;
        uint64_t v17 = v69;
        uint64_t v18 = v70;
        __swift_project_boxed_opaque_existential_1(v68, v69);
        uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 104))(v17, v18);
        if (!v19)
        {

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
          unint64_t v4 = v66;
          char v12 = (void *)v67;
LABEL_23:
          uint64_t v30 = v74;
          unint64_t v6 = v74 + 40;
          if (v7 == v74 && v7 < v6) {
            goto LABEL_16;
          }
          goto LABEL_15;
        }
        uint64_t v20 = (void *)v19;
        uint64_t v21 = type metadata accessor for Date();
        uint64_t v65 = v61;
        unint64_t v22 = *(void *)(v21 - 8);
        uint64_t v23 = *(void *)(v22 + 64);
        MEMORY[0x1F4188790](v21);
        uint64_t v24 = objc_msgSend(v16, sel_timestamp);
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        char v64 = v61;
        MEMORY[0x1F4188790](v25);
        uint64_t v26 = (char *)v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v27 = objc_msgSend(v20, sel_timestamp);
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v27) = static Date.> infix(_:_:)();
        uint64_t v28 = *(void (**)(char *, uint64_t))(v22 + 8);
        v28(v26, v21);
        v28(v26, v21);
        uint64_t v5 = v63;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
        unint64_t v4 = v66;
        char v12 = (void *)v67;
        if (v27) {
          goto LABEL_23;
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
        unint64_t v4 = v66;
      }
      uint64_t v29 = v7 == v4;
      uint64_t v30 = v4;
      v4 += 40;
      char v31 = !v29 || v7 >= v4;
      unint64_t v6 = v74;
      if (!v31) {
        goto LABEL_16;
      }
LABEL_15:
      uint64_t v32 = *(_OWORD *)v30;
      uint64_t v33 = *(_OWORD *)(v30 + 16);
      *(void *)(v7 + 32) = *(void *)(v30 + 32);
      *(_OWORD *)unint64_t v7 = v32;
      *(_OWORD *)(v7 + 16) = v33;
LABEL_16:
      v7 += 40;
    }
    while (v4 < (unint64_t)v12 && v6 < v5);
  }
  unint64_t v6 = v7;
LABEL_55:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (uint64_t)((uint64_t)v12 - v4) / 40, v6);
  return 1;
}

unint64_t lazy protocol witness table accessor for type [RecentsCollectionViewSection] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [RecentsCollectionViewSection] and conformance [A];
  if (!lazy protocol witness table cache variable for type [RecentsCollectionViewSection] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [RecentsCollectionViewSection]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [RecentsCollectionViewSection] and conformance [A]);
  }
  return result;
}

uint64_t dispatch thunk of RecentsCollectionViewSectionable.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RecentsCollectionViewSectionable.sectionDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RecentsCollectionViewSectionable.dataSourceId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RecentsCollectionViewSectionable.isOngoing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RecentsCollectionViewSectionable.sectionOverride.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

ValueMetadata *type metadata accessor for RecentsCollectionViewModel()
{
  return &type metadata for RecentsCollectionViewModel;
}

uint64_t outlined init with take of RecentsCollectionViewSectionable?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_46();
  v4();
  return a2;
}

uint64_t outlined init with take of ParticipantGridView.FrozenFrameOverlayState(uint64_t a1, uint64_t a2)
{
  return a2;
}

void OUTLINED_FUNCTION_41_15(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 16) = a2;
}

uint64_t CallDisplayInfo.displayName.getter()
{
  unint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  unint64_t v3 = 0xE000000000000000;
  uint64_t v4 = 0;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      id v5 = (id)v1;
      if ((objc_msgSend(v5, sel_isBranded) & 1) != 0
        && (uint64_t v6 = outlined bridged method (pb) of @objc TUContinuityCall.callerIdSubstring.getter(v5), v7))
      {
        uint64_t v4 = v6;
      }
      else
      {
        id v34 = objc_msgSend(v5, sel_displayName);
        uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      outlined consume of CallDisplayInfo((void *)v1, v2, 1);
      break;
    case 2:
      if (v1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
        outlined consume of CallDisplayInfo((void *)v1, v2, 2);
      }
      else
      {
        uint64_t v8 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v9 = MEMORY[0x1E4FBC860];
      if (v8)
      {
        uint64_t v40 = MEMORY[0x1E4FBC860];
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        if (v8 < 0)
        {
          __break(1u);
          JUMPOUT(0x1C32D2788);
        }
        unint64_t v3 = 0;
        uint64_t v9 = v40;
        do
        {
          if ((v1 & 0xC000000000000001) != 0) {
            id v10 = (id)MEMORY[0x1C87744F0](v3, v1);
          }
          else {
            id v10 = *(id *)(v1 + 8 * v3 + 32);
          }
          uint64_t v11 = v10;
          id v12 = objc_msgSend(v10, sel_displayName);
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;

          uint64_t v40 = v9;
          unint64_t v16 = *(void *)(v9 + 16);
          if (v16 >= *(void *)(v9 + 24) >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v9 = v40;
          }
          ++v3;
          *(void *)(v9 + 16) = v16 + 1;
          uint64_t v17 = v9 + 16 * v16;
          *(void *)(v17 + 32) = v13;
          *(void *)(v17 + 40) = v15;
        }
        while (v8 != v3);
      }
      uint64_t v39 = v9;
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ListFormatStyle<StringStyle, [String]>);
      uint64_t v38 = v36;
      OUTLINED_FUNCTION_4();
      uint64_t v19 = v18;
      MEMORY[0x1F4188790](v20);
      unint64_t v22 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ListFormatStyle<StringStyle, [String]>.ListType);
      _OWORD v36[2] = v36;
      OUTLINED_FUNCTION_4();
      uint64_t v25 = v24;
      MEMORY[0x1F4188790](v26);
      OUTLINED_FUNCTION_62();
      (*(void (**)(unint64_t, void, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E4F27228], v23);
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ListFormatStyle<StringStyle, [String]>.Width);
      v36[1] = v36;
      OUTLINED_FUNCTION_4();
      uint64_t v29 = v28;
      MEMORY[0x1F4188790](v30);
      uint64_t v32 = (char *)v36 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, void, uint64_t))(v29 + 104))(v32, *MEMORY[0x1E4F27238], v27);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [String] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [String]);
      static FormatStyle.list<A>(type:width:)();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v27);
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v3, v23);
      lazy protocol witness table accessor for type ListFormatStyle<StringStyle, [String]> and conformance ListFormatStyle<A, B>();
      uint64_t v33 = v37;
      Sequence.formatted<A>(_:)();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v33);
      swift_bridgeObjectRelease();
      uint64_t v4 = v40;
      break;
    case 3:
      return v4;
    default:
      swift_bridgeObjectRetain();
      uint64_t v4 = v1;
      break;
  }
  return v4;
}

uint64_t CallDisplayInfo.displayLabel.getter()
{
  if (*(unsigned char *)(v0 + 16) != 1) {
    return 0;
  }
  id v1 = *(id *)v0;
  if (!objc_msgSend(v1, sel_isBranded)
    || (outlined bridged method (pb) of @objc TUContinuityCall.callerIdSubstring.getter(v1),
        uint64_t v3 = v2,
        swift_bridgeObjectRelease(),
        !v3))
  {
    id v6 = objc_msgSend(v1, sel_callerIdSubstring);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_17_37();

      return v5;
    }
    OUTLINED_FUNCTION_17_37();
    return 0;
  }
  id v4 = objc_msgSend(v1, sel_displayName);
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_17_37();
  return v5;
}

BOOL CallDisplayInfo.isHeld.getter()
{
  return *(unsigned char *)(v0 + 16) == 1 && objc_msgSend(*(id *)v0, sel_status) == 2;
}

id CallDisplayInfo.isBrandedCall.getter()
{
  if (*(unsigned char *)(v0 + 16) == 1) {
    return objc_msgSend(*(id *)v0, sel_isBranded);
  }
  else {
    return 0;
  }
}

uint64_t static CallDisplayInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void **)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1:
      if (v7 != 1) {
        goto LABEL_16;
      }
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
      outlined copy of CallDisplayInfo((id)v6, (id)v5, 1);
      outlined copy of CallDisplayInfo(v3, v2, 1);
      char v9 = static NSObject.== infix(_:_:)();
      id v10 = (void *)OUTLINED_FUNCTION_20_34(v3, v2, 1);
      char v12 = 1;
      goto LABEL_20;
    case 2:
      if (v7 != 2) {
        goto LABEL_16;
      }
      outlined copy of CallDisplayInfo(*(id *)a2, *(id *)(a2 + 8), 2);
      outlined copy of CallDisplayInfo(v3, v2, 2);
      specialized static Array<A>.== infix(_:_:)((uint64_t)v3, v6, v13, v14, v15, v16, v17, v18, v30, v31, v32, v33);
      char v9 = v19;
      id v10 = (void *)OUTLINED_FUNCTION_20_34(v3, v2, 2);
      char v12 = 2;
      goto LABEL_20;
    case 3:
      if (v7 != 3 || (v5 | v6) != 0) {
        goto LABEL_16;
      }
      uint64_t v27 = (void *)OUTLINED_FUNCTION_29_0();
      outlined consume of CallDisplayInfo(v27, v28, 3);
      outlined consume of CallDisplayInfo(0, 0, 3);
      char v9 = 1;
      return v9 & 1;
    default:
      if (*(unsigned char *)(a2 + 16))
      {
LABEL_16:
        outlined copy of CallDisplayInfo(*(id *)a2, *(id *)(a2 + 8), v7);
        uint64_t v21 = (void *)OUTLINED_FUNCTION_29_0();
        outlined copy of CallDisplayInfo(v21, v22, v4);
        uint64_t v23 = (void *)OUTLINED_FUNCTION_29_0();
        uint64_t v25 = (void *)OUTLINED_FUNCTION_20_34(v23, v24, v4);
        outlined consume of CallDisplayInfo(v25, v26, v7);
        char v9 = 0;
      }
      else
      {
        if (v3 == (void *)v6 && v2 == (void *)v5)
        {
          char v9 = 1;
        }
        else
        {
          OUTLINED_FUNCTION_29_0();
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        outlined copy of CallDisplayInfo((id)v6, (id)v5, 0);
        outlined copy of CallDisplayInfo(v3, v2, 0);
        id v10 = (void *)OUTLINED_FUNCTION_20_34(v3, v2, 0);
        char v12 = 0;
LABEL_20:
        outlined consume of CallDisplayInfo(v10, v11, v12);
      }
      return v9 & 1;
  }
}

uint64_t ConversationPresentationStateProvider.audioVideoMode.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

void ConversationPresentationStateProvider.audioVideoModePublisher.getter()
{
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<TUConversationAVMode, Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<TUConversationAVMode, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<TUConversationAVMode, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<TUConversationAVMode, Never>);
  lazy protocol witness table accessor for type TUConversationAVMode and conformance TUConversationAVMode();
  OUTLINED_FUNCTION_5_85();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<TUConversationAVMode, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<TUConversationAVMode, Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_4_11();
  v2(v1);
  OUTLINED_FUNCTION_12_46();
  OUTLINED_FUNCTION_15_0();
}

uint64_t ConversationPresentationStateProvider.callDisplayStatus.getter()
{
  return CurrentValueSubject.value.getter();
}

void ConversationPresentationStateProvider.callDisplayStatusPublisher.getter()
{
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<CallDisplayStatus, Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<CallDisplayStatus, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<CallDisplayStatus, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<CallDisplayStatus, Never>);
  lazy protocol witness table accessor for type CallDisplayStatus and conformance CallDisplayStatus();
  OUTLINED_FUNCTION_5_85();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<CallDisplayStatus, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<CallDisplayStatus, Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_4_11();
  v2(v1);
  OUTLINED_FUNCTION_12_46();
  OUTLINED_FUNCTION_15_0();
}

uint64_t ConversationPresentationStateProvider.isSendingVideo.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

uint64_t ConversationPresentationStateProvider.isSendingVideoPublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  OUTLINED_FUNCTION_8_55();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_3_93();
  v2(v1);
  return OUTLINED_FUNCTION_14_43();
}

uint64_t ConversationPresentationStateProvider.isMuted.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

uint64_t ConversationPresentationStateProvider.isMutedPublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  OUTLINED_FUNCTION_8_55();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_3_93();
  v2(v1);
  return OUTLINED_FUNCTION_14_43();
}

uint64_t ConversationPresentationStateProvider.callDisplayInfo.getter()
{
  return CurrentValueSubject.value.getter();
}

void ConversationPresentationStateProvider.callDisplayInfoPublisher.getter()
{
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<CallDisplayInfo, Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<CallDisplayInfo, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<CallDisplayInfo, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<CallDisplayInfo, Never>);
  lazy protocol witness table accessor for type CallDisplayInfo and conformance CallDisplayInfo();
  OUTLINED_FUNCTION_5_85();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<CallDisplayInfo, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<CallDisplayInfo, Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_4_11();
  v2(v1);
  OUTLINED_FUNCTION_12_46();
  OUTLINED_FUNCTION_15_0();
}

uint64_t ConversationPresentationStateProvider.callDurationString.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

void ConversationPresentationStateProvider.callDurationStringPublisher.getter()
{
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<String?, Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<String?, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<String?, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<String?, Never>);
  lazy protocol witness table accessor for type String? and conformance <A> A?();
  OUTLINED_FUNCTION_5_85();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<String?, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<String?, Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_4_11();
  v2(v1);
  OUTLINED_FUNCTION_12_46();
  OUTLINED_FUNCTION_15_0();
}

uint64_t ConversationPresentationStateProvider.image.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

void ConversationPresentationStateProvider.imagePublisher.getter()
{
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<UIImage?, Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<UIImage?, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<UIImage?, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<UIImage?, Never>);
  lazy protocol witness table accessor for type UIImage? and conformance <A> A?();
  OUTLINED_FUNCTION_5_85();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<UIImage?, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<UIImage?, Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_4_11();
  v2(v1);
  OUTLINED_FUNCTION_12_46();
  OUTLINED_FUNCTION_15_0();
}

uint64_t ConversationPresentationStateProvider.isOneToOneModeEnabled.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

uint64_t ConversationPresentationStateProvider.isOneToOneModeEnabledPublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  OUTLINED_FUNCTION_8_55();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_3_93();
  v2(v1);
  return OUTLINED_FUNCTION_14_43();
}

uint64_t ConversationPresentationStateProvider.heldCallDisplayName.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

void ConversationPresentationStateProvider.heldCallDisplayNamePublisher.getter()
{
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<String?, Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<String?, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<String?, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<String?, Never>);
  lazy protocol witness table accessor for type String? and conformance <A> A?();
  OUTLINED_FUNCTION_5_85();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<String?, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<String?, Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_4_11();
  v2(v1);
  OUTLINED_FUNCTION_12_46();
  OUTLINED_FUNCTION_15_0();
}

uint64_t ConversationPresentationStateProvider.isEmergency.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t ConversationPresentationStateProvider.contactsByHandle.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

void ConversationPresentationStateProvider.contactsByHandlePublisher.getter()
{
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<[TUHandle : CNContact?], Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<[TUHandle : CNContact?], Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<[TUHandle : CNContact?], Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<[TUHandle : CNContact?], Never>);
  lazy protocol witness table accessor for type [TUHandle : CNContact?] and conformance <> [A : B]();
  OUTLINED_FUNCTION_5_85();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<[TUHandle : CNContact?], Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<[TUHandle : CNContact?], Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_4_11();
  v2(v1);
  OUTLINED_FUNCTION_12_46();
  OUTLINED_FUNCTION_15_0();
}

uint64_t ConversationPresentationStateProvider.ignoreLetMeInRequests.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

uint64_t ConversationPresentationStateProvider.ignoreLetMeInRequestsPublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  OUTLINED_FUNCTION_8_55();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_3_93();
  v2(v1);
  return OUTLINED_FUNCTION_14_43();
}

uint64_t ConversationPresentationStateProvider.isRTTCall.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

uint64_t ConversationPresentationStateProvider.isRTTCallPublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  OUTLINED_FUNCTION_8_55();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_3_93();
  v2(v1);
  return OUTLINED_FUNCTION_14_43();
}

uint64_t ConversationPresentationStateProvider.shouldShowRTTUpgrade.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

uint64_t ConversationPresentationStateProvider.shouldShowRTTUpgradePublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  OUTLINED_FUNCTION_8_55();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>>);
  OUTLINED_FUNCTION_5_17();
  uint64_t v1 = OUTLINED_FUNCTION_3_93();
  v2(v1);
  return OUTLINED_FUNCTION_14_43();
}

uint64_t key path getter for ConversationPresentationStateProvider.stateManager : ConversationPresentationStateProvider@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 128;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v4);
  uint64_t v6 = *(void *)(v3 + 136);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t key path setter for ConversationPresentationStateProvider.stateManager : ConversationPresentationStateProvider(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 136) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t ConversationPresentationStateProvider.stateManager.getter()
{
  OUTLINED_FUNCTION_6_79();
  return MEMORY[0x1C8776240](v0);
}

uint64_t ConversationPresentationStateProvider.stateManager.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 136) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*ConversationPresentationStateProvider.stateManager.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v1 + 128);
  uint64_t v5 = *(void *)(v1 + 136);
  v3[3] = v4;
  v3[4] = v5;
  return ConversationPresentationStateProvider.stateManager.modify;
}

void ConversationPresentationStateProvider.stateManager.modify(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 136) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t ConversationPresentationStateProvider.__allocating_init(avMode:callDisplayStatus:isSendingVideo:isMuted:callDisplayInfo:callDurationString:image:isOneToOneModeEnabled:isEmergency:heldCallDisplayName:contactsByHandle:ignoreLetMeInRequests:isRTTCall:shouldShowRTTUpgrade:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, char a9, char a10)
{
  uint64_t v13 = swift_allocObject();
  ConversationPresentationStateProvider.init(avMode:callDisplayStatus:isSendingVideo:isMuted:callDisplayInfo:callDurationString:image:isOneToOneModeEnabled:isEmergency:heldCallDisplayName:contactsByHandle:ignoreLetMeInRequests:isRTTCall:shouldShowRTTUpgrade:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v13;
}

uint64_t ConversationPresentationStateProvider.init(avMode:callDisplayStatus:isSendingVideo:isMuted:callDisplayInfo:callDurationString:image:isOneToOneModeEnabled:isEmergency:heldCallDisplayName:contactsByHandle:ignoreLetMeInRequests:isRTTCall:shouldShowRTTUpgrade:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, char a9, char a10)
{
  uint64_t v11 = v10;
  *(void *)(v10 + 136) = 0;
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<TUConversationAVMode, Never>);
  OUTLINED_FUNCTION_8_9();
  *(void *)(v10 + 16) = OUTLINED_FUNCTION_7_72();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<CallDisplayStatus, Never>);
  OUTLINED_FUNCTION_8_9();
  *(void *)(v10 + 24) = OUTLINED_FUNCTION_7_72();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  OUTLINED_FUNCTION_8_9();
  *(void *)(v10 + 32) = OUTLINED_FUNCTION_7_72();
  OUTLINED_FUNCTION_6_36();
  *(void *)(v10 + 40) = OUTLINED_FUNCTION_7_72();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<UIImage?, Never>);
  OUTLINED_FUNCTION_8_9();
  id v13 = a8;
  *(void *)(v10 + 64) = CurrentValueSubject.init(_:)();
  OUTLINED_FUNCTION_6_36();
  *(void *)(v10 + 72) = OUTLINED_FUNCTION_7_72();
  *(unsigned char *)(v10 + 88) = a10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<String?, Never>);
  OUTLINED_FUNCTION_8_9();
  *(void *)(v10 + 56) = OUTLINED_FUNCTION_7_72();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<CallDisplayInfo, Never>);
  OUTLINED_FUNCTION_8_9();
  *(void *)(v10 + 48) = OUTLINED_FUNCTION_7_72();
  swift_allocObject();
  *(void *)(v10 + 80) = OUTLINED_FUNCTION_7_72();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<[TUHandle : CNContact?], Never>);
  OUTLINED_FUNCTION_8_9();
  *(void *)(v10 + 96) = OUTLINED_FUNCTION_7_72();
  OUTLINED_FUNCTION_6_36();
  *(void *)(v10 + 104) = OUTLINED_FUNCTION_7_72();
  OUTLINED_FUNCTION_6_36();
  *(void *)(v10 + 112) = OUTLINED_FUNCTION_7_72();
  OUTLINED_FUNCTION_6_36();
  uint64_t v14 = OUTLINED_FUNCTION_7_72();

  *(void *)(v11 + 120) = v14;
  return v11;
}

Swift::Void __swiftcall ConversationPresentationStateProvider.toggleSendingVideo()()
{
  OUTLINED_FUNCTION_6_79();
  if (MEMORY[0x1C8776240]())
  {
    OUTLINED_FUNCTION_15_47();
    OUTLINED_FUNCTION_3_23();
    v0();
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall ConversationPresentationStateProvider.toggleMuted()()
{
  OUTLINED_FUNCTION_6_79();
  if (MEMORY[0x1C8776240]())
  {
    OUTLINED_FUNCTION_15_47();
    OUTLINED_FUNCTION_3_23();
    v0();
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall ConversationPresentationStateProvider.endCall()()
{
  OUTLINED_FUNCTION_6_79();
  if (MEMORY[0x1C8776240]())
  {
    OUTLINED_FUNCTION_15_47();
    OUTLINED_FUNCTION_3_23();
    v0();
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall ConversationPresentationStateProvider.updatePresentationSize(_:)(CGSize a1)
{
  OUTLINED_FUNCTION_6_79();
  if (MEMORY[0x1C8776240]())
  {
    OUTLINED_FUNCTION_15_47();
    OUTLINED_FUNCTION_3_23();
    v1();
    swift_unknownObjectRelease();
  }
}

uint64_t ConversationPresentationStateProvider.updateRemoteVideoPresentationState(_:)(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v1 + 128);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 136);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall ConversationPresentationStateProvider.upgradeToRTT()()
{
  OUTLINED_FUNCTION_6_79();
  if (MEMORY[0x1C8776240]())
  {
    OUTLINED_FUNCTION_15_47();
    OUTLINED_FUNCTION_3_23();
    v0();
    swift_unknownObjectRelease();
  }
}

uint64_t ConversationPresentationStateProvider.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 128);
  return v0;
}

uint64_t ConversationPresentationStateProvider.__deallocating_deinit()
{
  ConversationPresentationStateProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ConversationPresentationStateProviding.audioVideoMode.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.audioVideoMode.getter();
}

void protocol witness for ConversationPresentationStateProviding.audioVideoModePublisher.getter in conformance ConversationPresentationStateProvider()
{
}

uint64_t protocol witness for ConversationPresentationStateProviding.callDisplayStatus.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.callDisplayStatus.getter();
}

void protocol witness for ConversationPresentationStateProviding.callDisplayStatusPublisher.getter in conformance ConversationPresentationStateProvider()
{
}

uint64_t protocol witness for ConversationPresentationStateProviding.isSendingVideo.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.isSendingVideo.getter() & 1;
}

uint64_t protocol witness for ConversationPresentationStateProviding.isSendingVideoPublisher.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.isSendingVideoPublisher.getter();
}

uint64_t protocol witness for ConversationPresentationStateProviding.isMuted.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.isMuted.getter() & 1;
}

uint64_t protocol witness for ConversationPresentationStateProviding.isMutedPublisher.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.isMutedPublisher.getter();
}

uint64_t protocol witness for ConversationPresentationStateProviding.heldCallDisplayName.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.heldCallDisplayName.getter();
}

void protocol witness for ConversationPresentationStateProviding.heldCallDisplayNamePublisher.getter in conformance ConversationPresentationStateProvider()
{
}

uint64_t protocol witness for ConversationPresentationStateProviding.callDisplayInfo.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.callDisplayInfo.getter();
}

void protocol witness for ConversationPresentationStateProviding.callDisplayInfoPublisher.getter in conformance ConversationPresentationStateProvider()
{
}

uint64_t protocol witness for ConversationPresentationStateProviding.image.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.image.getter();
}

void protocol witness for ConversationPresentationStateProviding.imagePublisher.getter in conformance ConversationPresentationStateProvider()
{
}

uint64_t protocol witness for ConversationPresentationStateProviding.isOneToOneModeEnabled.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.isOneToOneModeEnabled.getter() & 1;
}

uint64_t protocol witness for ConversationPresentationStateProviding.isOneToOneModeEnabledPublisher.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.isOneToOneModeEnabledPublisher.getter();
}

uint64_t protocol witness for ConversationPresentationStateProviding.contactsByHandle.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.contactsByHandle.getter();
}

void protocol witness for ConversationPresentationStateProviding.contactsByHandlePublisher.getter in conformance ConversationPresentationStateProvider()
{
}

uint64_t protocol witness for ConversationPresentationStateProviding.isEmergency.getter in conformance ConversationPresentationStateProvider()
{
  return *(unsigned __int8 *)(*(void *)v0 + 88);
}

uint64_t protocol witness for ConversationPresentationStateProviding.callDurationString.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.callDurationString.getter();
}

void protocol witness for ConversationPresentationStateProviding.callDurationStringPublisher.getter in conformance ConversationPresentationStateProvider()
{
}

uint64_t protocol witness for ConversationPresentationStateProviding.ignoreLetMeInRequests.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.ignoreLetMeInRequests.getter() & 1;
}

uint64_t protocol witness for ConversationPresentationStateProviding.ignoreLetMeInRequestsPublisher.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.ignoreLetMeInRequestsPublisher.getter();
}

uint64_t protocol witness for ConversationPresentationStateProviding.isRTTCall.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.isRTTCall.getter() & 1;
}

uint64_t protocol witness for ConversationPresentationStateProviding.isRTTCallPublisher.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.isRTTCallPublisher.getter();
}

uint64_t protocol witness for ConversationPresentationStateProviding.shouldShowRTTUpgrade.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.shouldShowRTTUpgrade.getter() & 1;
}

uint64_t protocol witness for ConversationPresentationStateProviding.shouldShowRTTUpgradePublisher.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.shouldShowRTTUpgradePublisher.getter();
}

void protocol witness for ConversationPresentationStateProviding.toggleSendingVideo() in conformance ConversationPresentationStateProvider()
{
}

void protocol witness for ConversationPresentationStateProviding.toggleMuted() in conformance ConversationPresentationStateProvider()
{
}

void protocol witness for ConversationPresentationStateProviding.endCall() in conformance ConversationPresentationStateProvider()
{
}

void protocol witness for ConversationPresentationStateProviding.updatePresentationSize(_:) in conformance ConversationPresentationStateProvider(double a1, double a2)
{
}

uint64_t protocol witness for ConversationPresentationStateProviding.updateRemoteVideoPresentationState(_:) in conformance ConversationPresentationStateProvider(uint64_t a1)
{
  return ConversationPresentationStateProvider.updateRemoteVideoPresentationState(_:)(a1);
}

void protocol witness for ConversationPresentationStateProviding.upgradeToRTT() in conformance ConversationPresentationStateProvider()
{
}

uint64_t ConversationPresentationStateProvider.onAudioVideoModeUpdated(_:)()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t ConversationPresentationStateProvider.onCallDisplayStatusUpdated(_:)()
{
  return CurrentValueSubject.send(_:)();
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onSendingVideoStateUpdated(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onMutedStateUpdated(_:)(Swift::Bool a1)
{
}

uint64_t ConversationPresentationStateProvider.onCallDisplayInfoUpdated(_:)()
{
  return CurrentValueSubject.send(_:)();
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onCallDurationUpdated(_:)(Swift::String_optional a1)
{
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onImageUpdated(_:)(UIImage_optional a1)
{
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onOneToOneModeEnabledStateUpdated(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onHeldCallDisplayNameUpdated(_:)(Swift::String_optional a1)
{
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onContactsByHandleUpdated(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onIgnoreLetMeInReqestsUpdated(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onRTTCallStateChange(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onShouldShowRTTUpgradeChange(_:)(Swift::Bool a1)
{
}

unint64_t lazy protocol witness table accessor for type ListFormatStyle<StringStyle, [String]> and conformance ListFormatStyle<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ListFormatStyle<StringStyle, [String]> and conformance ListFormatStyle<A, B>;
  if (!lazy protocol witness table cache variable for type ListFormatStyle<StringStyle, [String]> and conformance ListFormatStyle<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ListFormatStyle<StringStyle, [String]>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ListFormatStyle<StringStyle, [String]> and conformance ListFormatStyle<A, B>);
  }
  return result;
}

uint64_t outlined bridged method (pb) of @objc TUContinuityCall.callerIdSubstring.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_callerIdSubstring);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id outlined copy of CallDisplayInfo(id result, id a2, char a3)
{
  if (a3 == 2) {
    return (id)swift_bridgeObjectRetain();
  }
  if (a3 != 1)
  {
    if (a3) {
      return result;
    }
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TUConversationAVMode and conformance TUConversationAVMode()
{
  unint64_t result = lazy protocol witness table cache variable for type TUConversationAVMode and conformance TUConversationAVMode;
  if (!lazy protocol witness table cache variable for type TUConversationAVMode and conformance TUConversationAVMode)
  {
    type metadata accessor for TUConversationAVMode(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationAVMode and conformance TUConversationAVMode);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CallDisplayStatus and conformance CallDisplayStatus()
{
  unint64_t result = lazy protocol witness table cache variable for type CallDisplayStatus and conformance CallDisplayStatus;
  if (!lazy protocol witness table cache variable for type CallDisplayStatus and conformance CallDisplayStatus)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallDisplayStatus and conformance CallDisplayStatus);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CallDisplayInfo and conformance CallDisplayInfo()
{
  unint64_t result = lazy protocol witness table cache variable for type CallDisplayInfo and conformance CallDisplayInfo;
  if (!lazy protocol witness table cache variable for type CallDisplayInfo and conformance CallDisplayInfo)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallDisplayInfo and conformance CallDisplayInfo);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type String? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type String? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type String? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for String?);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type UIImage? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type UIImage? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type UIImage? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for UIImage?);
    lazy protocol witness table accessor for type UIImage and conformance NSObject(&lazy protocol witness table cache variable for type UIImage and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIImage? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CNContact? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type CNContact? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type CNContact? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CNContact?);
    lazy protocol witness table accessor for type UIImage and conformance NSObject(&lazy protocol witness table cache variable for type CNContact and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for CNContact);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CNContact? and conformance <A> A?);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type UIImage and conformance NSObject(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSObject(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.audioVideoMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.audioVideoModePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.callDisplayStatus.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.callDisplayStatusPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isSendingVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isSendingVideoPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isMuted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isMutedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.heldCallDisplayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.heldCallDisplayNamePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.callDisplayInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.callDisplayInfoPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.image.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.imagePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isOneToOneModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isOneToOneModeEnabledPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.contactsByHandle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.contactsByHandlePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isEmergency.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.callDurationString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.callDurationStringPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.ignoreLetMeInRequests.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.ignoreLetMeInRequestsPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isRTTCall.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isRTTCallPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.shouldShowRTTUpgrade.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.shouldShowRTTUpgradePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.toggleSendingVideo()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.toggleMuted()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.endCall()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.updatePresentationSize(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.updateRemoteVideoPresentationState(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 256))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.upgradeToRTT()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

void destroy for CallDisplayInfo(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for CallDisplayInfo(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of CallDisplayInfo(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CallDisplayInfo(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of CallDisplayInfo(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  int v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  outlined consume of CallDisplayInfo(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CallDisplayInfo(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  outlined consume of CallDisplayInfo(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for CallDisplayInfo()
{
  return &type metadata for CallDisplayInfo;
}

uint64_t dispatch thunk of ConversationPresentationStateManaging.toggleSendingVideo()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ConversationPresentationStateManaging.toggleMuted()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConversationPresentationStateManaging.endCall()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ConversationPresentationStateManaging.updatePresentationSize(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ConversationPresentationStateManaging.updateRemoteVideoPresentationState(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ConversationPresentationStateManaging.upgradeToRTT()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t type metadata accessor for ConversationPresentationStateProvider()
{
  return self;
}

uint64_t method lookup function for ConversationPresentationStateProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationPresentationStateProvider);
}

uint64_t dispatch thunk of ConversationPresentationStateProvider.__allocating_init(avMode:callDisplayStatus:isSendingVideo:isMuted:callDisplayInfo:callDurationString:image:isOneToOneModeEnabled:isEmergency:heldCallDisplayName:contactsByHandle:ignoreLetMeInRequests:isRTTCall:shouldShowRTTUpgrade:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v45 = a5;
  uint64_t v46 = a8;
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  OUTLINED_FUNCTION_5_3();
  uint64_t v44 = v10;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_2_3();
  uint64_t v54 = v12;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_5_3();
  uint64_t v55 = v13;
  OUTLINED_FUNCTION_50_0();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v48 = (char *)&v40 - v16;
  uint64_t v17 = a4;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_2_3();
  uint64_t v49 = v18;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_5_3();
  uint64_t v47 = v20;
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_10_5();
  uint64_t v43 = v22;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v40 - v24;
  uint64_t v26 = dispatch thunk of Collection.count.getter();
  if (!v26) {
    return static Array._allocateUninitialized(_:)();
  }
  Swift::Int v27 = v26;
  uint64_t v41 = AssociatedTypeWitness;
  uint64_t v58 = MEMORY[0x1C87745E0](v17);
  uint64_t v50 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v27);
  long long v42 = v25;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if (v27 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v29 = (void (**)(char *))(v55 + 16);
    uint64_t v51 = v55 + 8;
    uint64_t v55 = a6;
    uint64_t v30 = v48;
    uint64_t v31 = v42;
    while (1)
    {
      uint64_t v32 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
      (*v29)(v30);
      v32(v57, 0);
      uint64_t v33 = v56;
      v52(v30, v54);
      if (v33) {
        break;
      }
      uint64_t v56 = 0;
      OUTLINED_FUNCTION_26_2();
      v34();
      ContiguousArray.append(_:)();
      dispatch thunk of Collection.formIndex(after:)();
      if (!--v27)
      {
        uint64_t v35 = v47;
        uint64_t v36 = v43;
        uint64_t v37 = v41;
        (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v43, v31, v41);
        _expectEnd<A>(of:is:)();
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v37);
        return v58;
      }
    }
    OUTLINED_FUNCTION_26_2();
    v38();
    OUTLINED_FUNCTION_26_2();
    v39();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v46, v54, v45);
  }
  return result;
}

uint64_t _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v56 = a4;
  long long v57 = a1;
  uint64_t v58 = a2;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  uint64_t v55 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v41 = (char *)v40 - v17;
  uint64_t v18 = type metadata accessor for Optional();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v51 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v40 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  v40[1] = (char *)v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v50 = (char *)v40 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v59 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v30 = (char *)v40 - v29;
  Swift::Int v31 = dispatch thunk of Sequence.underestimatedCount.getter();
  uint64_t v60 = MEMORY[0x1C87745E0](v56);
  uint64_t v56 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v50, v48, v52);
  uint64_t result = dispatch thunk of Sequence.makeIterator()();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      dispatch thunk of IteratorProtocol.next()();
      uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v59);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v33)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v33)(v23, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      if (!--v31)
      {
        uint64_t v34 = v54;
        uint64_t v35 = (uint64_t)v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v34 = v54;
  uint64_t v35 = (uint64_t)v51;
LABEL_9:
  dispatch thunk of IteratorProtocol.next()();
  if (__swift_getEnumTagSinglePayload(v35, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v36 = (uint64_t)v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v59);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v36, v46);
    return v60;
  }
  else
  {
    uint64_t v37 = *(char **)(v34 + 32);
    uint64_t v54 = v34 + 32;
    uint64_t v55 = v37;
    uint64_t v38 = (void (**)(char *, uint64_t))(v34 + 8);
    uint64_t v39 = v41;
    uint64_t v36 = (uint64_t)v51;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v55)(v39, v36, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      dispatch thunk of IteratorProtocol.next()();
      if (__swift_getEnumTagSinglePayload(v36, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v59);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

BOOL Float.isAboveThreshold.getter(float a1)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  return (*(float (**)(void))(v2 + 328))() < (float)(a1 + 0.01);
}

BOOL static MostActiveParticipantsController.ProminenceChangeReason.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void MostActiveParticipantsController.ProminenceChangeReason.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int MostActiveParticipantsController.ProminenceChangeReason.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MostActiveParticipantsController<A>.ProminenceChangeReason(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MostActiveParticipantsController.ProminenceChangeReason.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MostActiveParticipantsController<A>.ProminenceChangeReason()
{
  return MostActiveParticipantsController.ProminenceChangeReason.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance MostActiveParticipantsController<A>.ProminenceChangeReason(uint64_t a1)
{
  MostActiveParticipantsController.ProminenceChangeReason.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MostActiveParticipantsController<A>.ProminenceChangeReason()
{
  Hasher.init(_seed:)();
  MostActiveParticipantsController.ProminenceChangeReason.hash(into:)((uint64_t)v2, *v0);
  return Hasher._finalize()();
}

uint64_t MostActiveParticipantsController.ActivityDetails.participantIdentifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t MostActiveParticipantsController.ActivityDetails.participantIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.participantIdentifier.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float MostActiveParticipantsController.ActivityDetails.currentEMA.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_27_28(*(int *)(a1 + 36));
}

void MostActiveParticipantsController.ActivityDetails.currentEMA.setter(uint64_t a1, float a2)
{
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.currentEMA.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float MostActiveParticipantsController.ActivityDetails.currentTimeScale.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_27_28(*(int *)(a1 + 40));
}

void MostActiveParticipantsController.ActivityDetails.currentTimeScale.setter(uint64_t a1, float a2)
{
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.currentTimeScale.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MostActiveParticipantsController.ActivityDetails.isActive.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

uint64_t MostActiveParticipantsController.ActivityDetails.isActive.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 44)) = result;
  return result;
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.isActive.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float MostActiveParticipantsController.ActivityDetails.prominenceWeight.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_27_28(*(int *)(a1 + 48));
}

void MostActiveParticipantsController.ActivityDetails.prominenceWeight.setter(uint64_t a1, float a2)
{
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.prominenceWeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float MostActiveParticipantsController.ActivityDetails.audioPriority.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_27_28(*(int *)(a1 + 52));
}

void MostActiveParticipantsController.ActivityDetails.audioPriority.setter(uint64_t a1, float a2)
{
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.audioPriority.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float MostActiveParticipantsController.ActivityDetails.videoPriority.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_27_28(*(int *)(a1 + 56));
}

void MostActiveParticipantsController.ActivityDetails.videoPriority.setter(uint64_t a1, float a2)
{
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.videoPriority.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

BOOL static MostActiveParticipantsController.ActivityDetails.== infix(_:_:)()
{
  OUTLINED_FUNCTION_4_15();
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t active = type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  OUTLINED_FUNCTION_15_48(*(int *)(active + 36));
  if (!v4) {
    return 0;
  }
  OUTLINED_FUNCTION_15_48(*(int *)(v3 + 40));
  if (!v4) {
    return 0;
  }
  if (*(unsigned __int8 *)(v1 + *(int *)(v5 + 44)) != *(unsigned __int8 *)(v0 + *(int *)(v5 + 44))) {
    return 0;
  }
  OUTLINED_FUNCTION_15_48(*(int *)(v5 + 48));
  if (!v4) {
    return 0;
  }
  OUTLINED_FUNCTION_15_48(*(int *)(v6 + 52));
  if (!v4) {
    return 0;
  }
  OUTLINED_FUNCTION_15_48(*(int *)(v7 + 56));
  return v4 != 0;
}

int *MostActiveParticipantsController.ActivityDetails.init(participantIdentifier:currentEMA:currentTimeScale:isActive:prominenceWeight:audioPriority:videoPriority:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>, float a5@<S0>, float a6@<S1>, float a7@<S2>, float a8@<S3>, float a9@<S4>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t result = (int *)type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  *(float *)(a4 + result[9]) = a5;
  *(float *)(a4 + result[10]) = a6;
  *(unsigned char *)(a4 + result[11]) = a2;
  *(float *)(a4 + result[12]) = a7;
  *(float *)(a4 + result[13]) = a8;
  *(float *)(a4 + result[14]) = a9;
  return result;
}

BOOL protocol witness for static Comparable.< infix(_:_:) in conformance MostActiveParticipantsController<A>.ActivityDetails(uint64_t a1, uint64_t a2)
{
  return static MostActiveParticipantsController.ActivityDetails.< infix(_:_:)(a1, a2);
}

BOOL static MostActiveParticipantsController.ActivityDetails.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t active = type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  return (float)(*(float *)(a2 + *(int *)(active + 36)) * *(float *)(a2 + *(int *)(active + 48))) < (float)(*(float *)(a1 + *(int *)(active + 36)) * *(float *)(a1 + *(int *)(active + 48)));
}

uint64_t protocol witness for static Comparable.<= infix(_:_:) in conformance MostActiveParticipantsController<A>.ActivityDetails()
{
  return MEMORY[0x1F4183768]();
}

uint64_t protocol witness for static Comparable.>= infix(_:_:) in conformance MostActiveParticipantsController<A>.ActivityDetails()
{
  return MEMORY[0x1F4183760]();
}

uint64_t protocol witness for static Comparable.> infix(_:_:) in conformance MostActiveParticipantsController<A>.ActivityDetails()
{
  return MEMORY[0x1F4183758]();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MostActiveParticipantsController<A>.ActivityDetails()
{
  return static MostActiveParticipantsController.ActivityDetails.== infix(_:_:)();
}

uint64_t key path getter for MostActiveParticipantsController.mostActiveParticipantDidChange : <A>MostActiveParticipantsController<A>@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(unsigned __int8 *a1)@<X8>)
{
  long long v11 = *(_OWORD *)(a3 + a2 - 16);
  uint64_t v5 = *a1;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = *(void *)(v5 + 24);
  if (v6)
  {
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = v11;
    *(void *)(v8 + 32) = v6;
    *(void *)(v8 + 40) = v7;
    uint64_t v9 = partial apply for thunk for @escaping @callee_guaranteed (@unowned MostActiveParticipantsController<A>.ProminenceChangeReason) -> ();
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  *a4 = v9;
  a4[1] = (uint64_t (*)(unsigned __int8 *))v8;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v6);
}

uint64_t key path setter for MostActiveParticipantsController.mostActiveParticipantDidChange : <A>MostActiveParticipantsController<A>(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (*a1)
  {
    uint64_t v7 = a4 + a3;
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(void *)(v8 + 32) = v5;
    *(void *)(v8 + 40) = v6;
    uint64_t v9 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed MostActiveParticipantsController<A>.ProminenceChangeReason) -> (@out ());
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v10 = *a2;
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v8;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v5);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v11);
}

uint64_t MostActiveParticipantsController.mostActiveParticipantDidChange.getter()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 16);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return v1;
}

uint64_t MostActiveParticipantsController.mostActiveParticipantDidChange.setter()
{
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v3);
}

uint64_t (*MostActiveParticipantsController.mostActiveParticipantDidChange.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path getter for MostActiveParticipantsController.participantEMADidChange : <A>MostActiveParticipantsController<A>@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(uint64_t a1, float *a2, float *a3, float *a4)@<X8>)
{
  long long v11 = *(_OWORD *)(a3 + a2 - 16);
  uint64_t v5 = *a1;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = *(void *)(v5 + 40);
  if (v6)
  {
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = v11;
    *(void *)(v8 + 32) = v6;
    *(void *)(v8 + 40) = v7;
    uint64_t v9 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A, @unowned Float, @unowned Float, @unowned Float) -> ();
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  *a4 = v9;
  a4[1] = (uint64_t (*)(uint64_t, float *, float *, float *))v8;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v6);
}

uint64_t key path setter for MostActiveParticipantsController.participantEMADidChange : <A>MostActiveParticipantsController<A>(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (*a1)
  {
    uint64_t v7 = a4 + a3;
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(void *)(v8 + 32) = v5;
    *(void *)(v8 + 40) = v6;
    uint64_t v9 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A, @in_guaranteed Float, @in_guaranteed Float, @in_guaranteed Float) -> (@out ());
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v10 = *a2;
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 32);
  *(void *)(v10 + 32) = v9;
  *(void *)(v10 + 40) = v8;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v5);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v11);
}

uint64_t MostActiveParticipantsController.participantEMADidChange.getter()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 32);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return v1;
}

uint64_t MostActiveParticipantsController.participantEMADidChange.setter()
{
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v3);
}

uint64_t (*MostActiveParticipantsController.participantEMADidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MostActiveParticipantsController.currentVideoProminentIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_7_73();
  uint64_t v4 = v1 + *(void *)(v3 + 112);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_7_73();
  type metadata accessor for Optional();
  OUTLINED_FUNCTION_0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
}

uint64_t MostActiveParticipantsController.currentVideoProminentIdentifier.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_7_73();
  uint64_t v4 = v1 + *(void *)(v3 + 112);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_7_73();
  type metadata accessor for Optional();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t (*MostActiveParticipantsController.currentVideoProminentIdentifier.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t MostActiveParticipantsController.configuration.getter()
{
  OUTLINED_FUNCTION_50();
  uint64_t v2 = v0 + *(void *)(v1 + 120);
  OUTLINED_FUNCTION_2();
  return *(void *)v2;
}

uint64_t MostActiveParticipantsController.configuration.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_50();
  uint64_t v4 = (void *)(v1 + *(void *)(v3 + 120));
  uint64_t result = OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = a1;
  return result;
}

uint64_t (*MostActiveParticipantsController.configuration.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

BOOL MostActiveParticipantsController.mostActiveParticipantProminenceChangeReason.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 80);
  uint64_t v3 = type metadata accessor for Optional();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = (uint64_t)v0 + *(void *)(v1 + 112);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  BOOL v8 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v2) != 1;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

uint64_t MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter()
{
  uint64_t v11 = static Array._allocateUninitialized(_:)();
  OUTLINED_FUNCTION_50();
  uint64_t v2 = *(void **)(v0 + *(void *)(v1 + 152));
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = &v11;
  *(void *)(v3 + 24) = v0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = partial apply for closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter;
  *(void *)(v4 + 24) = v3;
  aBlock[4] = partial apply for thunk for @callee_guaranteed () -> ();
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_50;
  uint64_t v5 = _Block_copy(aBlock);
  uint64_t v6 = v2;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v5);

  _Block_release(v5);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = v11;
    swift_release();
    return v9;
  }
  return result;
}

uint64_t closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = (uint64_t *)((char *)a2 + *(void *)(*a2 + 128));
  swift_beginAccess();
  uint64_t v13 = *v4;
  uint64_t v11 = *(void *)(v3 + 80);
  uint64_t v12 = *(void *)(v3 + 88);
  type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  uint64_t v5 = type metadata accessor for Array();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, uint64_t))partial apply for closure #1 in MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:), (uint64_t)&v10, v5, v11, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  swift_bridgeObjectRelease();
  *a1 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t MostActiveParticipantsController.__allocating_init(participantIdentifiers:configuration:)()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t v0 = swift_allocObject();
  MostActiveParticipantsController.init(participantIdentifiers:configuration:)();
  return v0;
}

void MostActiveParticipantsController.init(participantIdentifiers:configuration:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v32 = v3;
  uint64_t v33 = v2;
  uint64_t v4 = *v0;
  *((_OWORD *)v1 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  __swift_storeEnumTagSinglePayload((uint64_t)v1 + *(void *)(v4 + 112), 1, 1, *(void *)(v4 + 80));
  OUTLINED_FUNCTION_13_30();
  uint64_t v6 = *(void *)(v5 + 128);
  OUTLINED_FUNCTION_37_14();
  type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  *(void *)((char *)v1 + v6) = static Array._allocateUninitialized(_:)();
  OUTLINED_FUNCTION_13_30();
  *(void *)((char *)v1 + *(void *)(v7 + 136)) = 0;
  OUTLINED_FUNCTION_13_30();
  static Date.distantPast.getter();
  OUTLINED_FUNCTION_13_30();
  uint64_t v9 = *(void *)(v8 + 152);
  uint64_t v31 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_5_3();
  uint64_t v34 = v11;
  uint64_t v35 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v10);
  static DispatchQoS.unspecified.getter();
  type metadata accessor for OS_dispatch_queue.Attributes();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_118();
  v37[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, MEMORY[0x1F41AB088]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_21();
  (*(void (**)(uint64_t, void))(v18 + 104))(v17 - v16, *MEMORY[0x1E4FBCC50]);
  *(void *)((char *)v1 + v9) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  OUTLINED_FUNCTION_13_30();
  *(void *)((char *)v1 + *(void *)(v19 + 120)) = v32;
  uint64_t v20 = *(void **)((char *)v1 + v9);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v33;
  *(void *)(v21 + 16) = v1;
  *(void *)(v21 + 24) = v22;
  v37[4] = partial apply for closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:);
  v37[5] = v21;
  v37[0] = MEMORY[0x1E4F143A8];
  v37[1] = 1107296256;
  uint64_t v37[2] = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v37[3] = &block_descriptor_13_1;
  uint64_t v23 = _Block_copy(v37);
  MEMORY[0x1F4188790](v23);
  uint64_t v24 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = v20;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_61();
  uint64_t v36 = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF78]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C8773BA0](0, v24, v24, v23);
  _Block_release(v23);

  uint64_t v27 = OUTLINED_FUNCTION_31_23();
  v28(v27);
  OUTLINED_FUNCTION_26_2();
  v30(v29);
  swift_release();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  v11[4] = a2;
  v11[2] = *(void *)(v3 + 80);
  void v11[3] = *(void *)(v3 + 88);
  uint64_t v4 = type metadata accessor for Array();
  uint64_t active = type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, uint64_t))partial apply for closure #1 in closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:), (uint64_t)v11, v4, active, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  uint64_t v9 = (uint64_t *)((char *)a1 + *(void *)(*a1 + 128));
  swift_beginAccess();
  uint64_t *v9 = v8;
  return swift_bridgeObjectRelease();
}

int *closure #1 in closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  float v8 = (*(float (**)(void))(*(void *)static Defaults.shared + 408))();
  return MostActiveParticipantsController.ActivityDetails.init(participantIdentifier:currentEMA:currentTimeScale:isActive:prominenceWeight:audioPriority:videoPriority:)((uint64_t)v6, 0, a2, a3, 0.0, v8, 1.0, 0.0, 0.0);
}

void MostActiveParticipantsController.update(_:mediaPriorities:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_7_73();
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v26 - v8;
  long long v11 = v10[1];
  long long v28 = *v10;
  long long v29 = v11;
  long long v30 = v10[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v26 - v8, v12, v4);
  OUTLINED_FUNCTION_42_15();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = OUTLINED_FUNCTION_30_22(v13);
  *(void *)(v14 + 24) = *(void *)(v15 + 88);
  *(void *)(v14 + 32) = v0;
  uint64_t v16 = OUTLINED_FUNCTION_11_42(v14);
  v17(v16);
  uint64_t v18 = (_OWORD *)(v6 + v1);
  long long v19 = v29;
  *uint64_t v18 = v28;
  v18[1] = v19;
  _OWORD v18[2] = v30;
  v27[4] = partial apply for closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:);
  void v27[5] = v6;
  v27[0] = MEMORY[0x1E4F143A8];
  v27[1] = 1107296256;
  v27[2] = thunk for @escaping @callee_guaranteed () -> ();
  _OWORD v27[3] = &block_descriptor_19_0;
  _Block_copy(v27);
  v26[0] = OUTLINED_FUNCTION_44_11();
  OUTLINED_FUNCTION_5_3();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_22_31();
  OUTLINED_FUNCTION_49_10();
  outlined retain of ParticipantMediaPriorities((void **)&v28);
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_5_1();
  v26[1] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF78]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OUTLINED_FUNCTION_5_86();
  _Block_release(v2);

  uint64_t v24 = OUTLINED_FUNCTION_21_3();
  v25(v24);
  (*(void (**)(uint64_t, void))(v21 + 8))(v6, v26[0]);
  swift_release();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 80);
  uint64_t v76 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v75 = (char *)&v66 - v8;
  uint64_t v68 = type metadata accessor for Optional();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v10 = (char *)&v66 - v9;
  uint64_t v11 = *(void *)(v6 + 88);
  uint64_t active = (int *)type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  uint64_t v72 = *((void *)active - 1);
  uint64_t v13 = MEMORY[0x1F4188790](active);
  BOOL v69 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v66 = (char *)&v66 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  long long v19 = (char *)&v66 - v18;
  MEMORY[0x1F4188790](v17);
  BOOL v71 = (char *)&v66 - v20;
  uint64_t v21 = (uint64_t *)((char *)a1 + *(void *)(v6 + 128));
  swift_beginAccess();
  uint64_t v81 = *v21;
  uint64_t v78 = v7;
  uint64_t v79 = v11;
  uint64_t v74 = v11;
  uint64_t v77 = a2;
  uint64_t v80 = a2;
  uint64_t v22 = type metadata accessor for Array();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v70 = v22;
  Collection.firstIndex(where:)();
  swift_bridgeObjectRelease();
  Swift::Int v73 = v82;
  int v23 = v83;
  float v25 = *(float *)(a3 + 40);
  float v24 = *(float *)(a3 + 44);
  float v26 = v24 + 0.01;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(float (**)(void))(*(void *)static Defaults.shared + 328))() < v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v10, v77, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
    uint64_t v28 = (uint64_t)a1 + *(void *)(*a1 + 112);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 40))(v28, v10, v68);
    uint64_t v27 = swift_endAccess();
  }
  float v29 = v25 + 0.01;
  uint64_t v30 = static Defaults.shared;
  uint64_t v31 = (float (**)(uint64_t))(*(void *)static Defaults.shared + 328);
  uint64_t v32 = (float (*)(void))*v31;
  if ((*v31)(v27) >= (float)(v25 + 0.01) && v32() >= v26)
  {
    if (v23)
    {
      uint64_t v45 = v75;
      uint64_t v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v77, v7);
      float v35 = (*(float (**)(uint64_t))(*(void *)v30 + 408))(v46);
      float v36 = 0.0;
      float v37 = 1.0;
      uint64_t v38 = v71;
      uint64_t v39 = (uint64_t)v71;
      uint64_t v40 = (uint64_t)v45;
      char v41 = 0;
      goto LABEL_13;
    }
    swift_beginAccess();
    long long v57 = v66;
    Array.subscript.getter();
    uint64_t v58 = swift_endAccess();
    int v59 = v57[active[11]];
    if ((v59 ^ (((float (*)(uint64_t))v32)(v58) >= v29))) {
      float v60 = *(float *)&v57[active[10]];
    }
    else {
      float v60 = (*(float (**)(void))(*(void *)v30 + 408))();
    }
    uint64_t v47 = v72;
    uint64_t v38 = v71;
    uint64_t v48 = v70;
    uint64_t v61 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v77, v7);
    float v62 = *(float *)&v57[active[9]];
    float v51 = *(float *)&v57[active[12]];
    (*(void (**)(char *, int *))(v47 + 8))(v57, active);
    uint64_t v52 = (uint64_t)v38;
    uint64_t v53 = (uint64_t)v61;
    float v54 = v62;
    float v55 = v60;
    char v56 = 0;
LABEL_20:
    MostActiveParticipantsController.ActivityDetails.init(participantIdentifier:currentEMA:currentTimeScale:isActive:prominenceWeight:audioPriority:videoPriority:)(v53, v56, v7, v52, v54, v55, v51, v25, v24);
    swift_beginAccess();
    Array._makeMutableAndUnique()();
    uint64_t v63 = *v21;
    Swift::Int v64 = v73;
    Array._checkSubscript_mutating(_:)(v73);
    (*(void (**)(unint64_t, char *, int *))(v47 + 24))(v63+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v64, v38, active);
    TPNumberPadCharacter.rawValue.getter(v48);
    goto LABEL_21;
  }
  if (!v23)
  {
    swift_beginAccess();
    Array.subscript.getter();
    uint64_t v42 = swift_endAccess();
    int v43 = v19[active[11]];
    if ((v43 ^ (((float (*)(uint64_t))v32)(v42) >= v29))) {
      float v44 = *(float *)&v19[active[10]];
    }
    else {
      float v44 = (*(float (**)(void))(*(void *)v30 + 408))();
    }
    uint64_t v47 = v72;
    uint64_t v38 = v71;
    uint64_t v48 = v70;
    uint64_t v49 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v77, v7);
    float v50 = *(float *)&v19[active[9]];
    float v51 = *(float *)&v19[active[12]];
    (*(void (**)(char *, int *))(v47 + 8))(v19, active);
    uint64_t v52 = (uint64_t)v38;
    uint64_t v53 = (uint64_t)v49;
    float v54 = v50;
    float v55 = v44;
    char v56 = 1;
    goto LABEL_20;
  }
  uint64_t v33 = v75;
  uint64_t v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v77, v7);
  float v35 = (*(float (**)(uint64_t))(*(void *)v30 + 408))(v34);
  float v36 = 1.0;
  float v37 = 1.0;
  uint64_t v38 = v71;
  uint64_t v39 = (uint64_t)v71;
  uint64_t v40 = (uint64_t)v33;
  char v41 = 1;
LABEL_13:
  MostActiveParticipantsController.ActivityDetails.init(participantIdentifier:currentEMA:currentTimeScale:isActive:prominenceWeight:audioPriority:videoPriority:)(v40, v41, v7, v39, v36, v35, v37, v25, v24);
  uint64_t v47 = v72;
  (*(void (**)(char *, char *, int *))(v72 + 16))(v69, v38, active);
  swift_beginAccess();
  Array.append(_:)();
LABEL_21:
  swift_endAccess();
  MostActiveParticipantsController.startEMATimerIfNecessary()();
  return (*(uint64_t (**)(char *, int *))(v47 + 8))(v38, active);
}

void MostActiveParticipantsController.startEMATimerIfNecessary()()
{
  OUTLINED_FUNCTION_35_14();
  uint64_t v3 = v0;
  uint64_t v4 = (char *)*v0;
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_21();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = *((void *)v4 + 19);
  uint64_t v13 = *(void **)((char *)v0 + v12);
  *(void *)(v10 - v9) = v13;
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v10 - v9, *MEMORY[0x1E4FBCBE8], v5);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  uint64_t ObjectType = v7 + 8;
  OUTLINED_FUNCTION_50_1();
  v16();
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_13_30();
  uint64_t v18 = *(void *)(v17 + 136);
  if (!*(void *)((char *)v3 + v18))
  {
    long long v57 = v4;
    uint64_t v58 = v18;
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for OS_dispatch_source);
    long long v19 = *(void **)((char *)v3 + v12);
    uint64_t v20 = type metadata accessor for OS_dispatch_source.TimerFlags();
    int v59 = &v54;
    OUTLINED_FUNCTION_5_3();
    uint64_t v22 = v21;
    MEMORY[0x1F4188790](v23);
    OUTLINED_FUNCTION_5_1();
    v60[0] = MEMORY[0x1E4FBC860];
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1(&lazy protocol witness table cache variable for type OS_dispatch_source.TimerFlags and conformance OS_dispatch_source.TimerFlags, MEMORY[0x1F41AB170]);
    id v24 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_source.TimerFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_source.TimerFlags] and conformance [A], &demangling cache variable for type metadata for [OS_dispatch_source.TimerFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v25 = static OS_dispatch_source.makeTimerSource(flags:queue:)();

    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v20);
    int v59 = (uint64_t *)v25;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = type metadata accessor for DispatchTime();
    char v56 = &v54;
    OUTLINED_FUNCTION_5_3();
    uint64_t v2 = v26;
    uint64_t v28 = MEMORY[0x1F4188790](v27);
    uint64_t v4 = (char *)&v54 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x1F4188790](v28);
    uint64_t v1 = (char *)&v54 - v30;
    static DispatchTime.now()();
    if (one-time initialization token for shared == -1)
    {
LABEL_4:
      OUTLINED_FUNCTION_50();
      (*(void (**)(void))(v31 + 416))();
      MEMORY[0x1C8772E20](v1);
      uint64_t v32 = *(void (**)(char *, uint64_t))(v2 + 8);
      v32(v1, v11);
      OUTLINED_FUNCTION_3_2();
      double v34 = (*(double (**)(void))(v33 + 416))();
      uint64_t v35 = type metadata accessor for DispatchTimeInterval();
      float v55 = &v54;
      OUTLINED_FUNCTION_5_3();
      uint64_t v36 = v11;
      uint64_t v38 = v37;
      MEMORY[0x1F4188790](v39);
      OUTLINED_FUNCTION_118();
      default argument 2 of OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(&static Defaults.shared);
      MEMORY[0x1C8773D10](v4, &static Defaults.shared, ObjectType, v34);
      (*(void (**)(uint64_t *, uint64_t))(v38 + 8))(&static Defaults.shared, v35);
      v32(v4, v36);
      uint64_t v40 = swift_allocObject();
      swift_weakInit();
      char v41 = (void *)swift_allocObject();
      uint64_t v42 = v57;
      uint64_t v41[2] = *((void *)v57 + 10);
      uint64_t v41[3] = *((void *)v42 + 11);
      double v41[4] = v40;
      float v55 = (uint64_t *)v40;
      v60[4] = partial apply for closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary();
      v60[5] = v41;
      v60[0] = MEMORY[0x1E4F143A8];
      v60[1] = 1107296256;
      void v60[2] = thunk for @escaping @callee_guaranteed () -> ();
      v60[3] = &block_descriptor_78;
      int v43 = _Block_copy(v60);
      char v56 = (uint64_t *)type metadata accessor for DispatchQoS();
      long long v57 = (char *)&v54;
      OUTLINED_FUNCTION_5_3();
      MEMORY[0x1F4188790](v44);
      OUTLINED_FUNCTION_61();
      swift_retain();
      default argument 0 of OS_dispatch_source.setEventHandler(qos:flags:handler:)();
      uint64_t v45 = type metadata accessor for DispatchWorkItemFlags();
      uint64_t v54 = (uint64_t)&v54;
      OUTLINED_FUNCTION_5_3();
      uint64_t v47 = v46;
      MEMORY[0x1F4188790](v48);
      OUTLINED_FUNCTION_21();
      uint64_t v51 = v50 - v49;
      default argument 1 of OS_dispatch_source.setEventHandler(qos:flags:handler:)();
      uint64_t v52 = v59;
      OS_dispatch_source.setEventHandler(qos:flags:handler:)();
      _Block_release(v43);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v51, v45);
      OUTLINED_FUNCTION_3_8();
      v53();
      swift_release();
      swift_release();
      OS_dispatch_source.resume()();
      *(void *)((char *)v3 + v58) = v52;
      swift_unknownObjectRelease();
      goto LABEL_5;
    }
LABEL_7:
    swift_once();
    goto LABEL_4;
  }
LABEL_5:
  OUTLINED_FUNCTION_33_2();
}

void MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)()
{
  OUTLINED_FUNCTION_31();
  char v2 = v1;
  uint64_t v3 = *v0;
  uint64_t v4 = *(const void **)(*v0 + 80);
  OUTLINED_FUNCTION_5_3();
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v23 - v10;
  uint64_t v12 = *(void **)((char *)v0 + *(void *)(v3 + 152));
  (*(void (**)(char *))(v6 + 16))((char *)v23 - v10);
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = v13 + v8;
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = v4;
  *((void *)v15 + 3) = *(void *)(v3 + 88);
  *((void *)v15 + 4) = v0;
  (*(void (**)(char *, char *, const void *))(v6 + 32))(&v15[v13], v11, v4);
  v15[v14] = v2;
  v24[4] = partial apply for closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:);
  void v24[5] = v15;
  v24[0] = MEMORY[0x1E4F143A8];
  v24[1] = 1107296256;
  void v24[2] = thunk for @escaping @callee_guaranteed () -> ();
  void v24[3] = &block_descriptor_25_2;
  _Block_copy(v24);
  v23[0] = OUTLINED_FUNCTION_44_11();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_62();
  id v17 = v12;
  OUTLINED_FUNCTION_49_10();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_5_1();
  v23[1] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF78]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_15_35();
  OUTLINED_FUNCTION_5_86();
  _Block_release(v4);

  uint64_t v19 = OUTLINED_FUNCTION_21_3();
  v20(v19);
  uint64_t v21 = OUTLINED_FUNCTION_19_34();
  v22(v21);
  swift_release();
  OUTLINED_FUNCTION_28();
}

void closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    MostActiveParticipantsController.updateActiveParticipantsEMA()();
    MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)();
  }
}

void MostActiveParticipantsController.boostParticipantEMAToMax(_:)()
{
  OUTLINED_FUNCTION_35_14();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_7_73();
  uint64_t v4 = *(void *)(v3 + 80);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_7_73();
  uint64_t v7 = *(void *)(v6 + 88);
  uint64_t active = type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  OUTLINED_FUNCTION_5_3();
  uint64_t v39 = v9;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_10_5();
  uint64_t v38 = v11;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v37 - v13;
  OUTLINED_FUNCTION_7_73();
  uint64_t v16 = (uint64_t *)(v0 + *(void *)(v15 + 128));
  OUTLINED_FUNCTION_2();
  uint64_t v44 = *v16;
  uint64_t v41 = v4;
  uint64_t v42 = v7;
  uint64_t v40 = v7;
  uint64_t v43 = v2;
  uint64_t v17 = type metadata accessor for Array();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  Collection.firstIndex(where:)();
  swift_bridgeObjectRelease();
  if (v46)
  {
    uint64_t v18 = OUTLINED_FUNCTION_28_24();
    v19(v18);
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    OUTLINED_FUNCTION_50();
    (*(void (**)(void))(v20 + 408))();
    OUTLINED_FUNCTION_50();
    (*(void (**)(void))(v21 + 424))();
    float v22 = OUTLINED_FUNCTION_46_13();
    OUTLINED_FUNCTION_32_22((uint64_t)v14, v22, v23, v24, v25);
    OUTLINED_FUNCTION_6_1();
    Array.append(_:)();
    swift_endAccess();
  }
  else
  {
    Swift::Int v26 = v45;
    swift_beginAccess();
    Array.subscript.getter();
    swift_endAccess();
    uint64_t v27 = OUTLINED_FUNCTION_28_24();
    v28(v27);
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    OUTLINED_FUNCTION_50();
    (*(void (**)(void))(v29 + 424))();
    float v30 = OUTLINED_FUNCTION_46_13();
    uint64_t v31 = v38;
    OUTLINED_FUNCTION_32_22(v38, v30, v32, v33, v34);
    OUTLINED_FUNCTION_6_1();
    Array._makeMutableAndUnique()();
    uint64_t v35 = *v16;
    Array._checkSubscript_mutating(_:)(v26);
    uint64_t v36 = v39;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v39 + 40))(v35+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v26, v31, active);
    TPNumberPadCharacter.rawValue.getter(v17);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, active);
  }
  OUTLINED_FUNCTION_33_2();
}

uint64_t MostActiveParticipantsController.updateActiveParticipantsEMA()()
{
  OUTLINED_FUNCTION_43_13();
  OUTLINED_FUNCTION_43_13();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v73 = v3;
  uint64_t v72 = v2;
  uint64_t active = (int *)type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  OUTLINED_FUNCTION_5_3();
  uint64_t v87 = v5;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_10_5();
  uint64_t v86 = v7;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v70 - v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = type metadata accessor for Optional();
  OUTLINED_FUNCTION_5_3();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_10_5();
  uint64_t v89 = v16;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v17);
  uint64_t v88 = (Swift::Int *)((char *)&v70 - v18);
  uint64_t v19 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_21();
  float v25 = (void *)(v24 - v23);
  OUTLINED_FUNCTION_43_13();
  uint64_t v27 = *(void *)(v26 + 152);
  uint64_t v74 = v0;
  uint64_t v28 = *(void **)((char *)v0 + v27);
  *float v25 = v28;
  (*(void (**)(void *, void, uint64_t))(v21 + 104))(v25, *MEMORY[0x1E4FBCBE8], v19);
  id v29 = v28;
  LOBYTE(v28) = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_3_8();
  uint64_t result = v30();
  if (v28)
  {
    float v32 = v74;
    float v33 = (void *)((char *)v74 + *(void *)(*v74 + 128));
    OUTLINED_FUNCTION_2();
    uint64_t v85 = v33;
    v99[13] = *v33;
    uint64_t v34 = type metadata accessor for Array();
    uint64_t WitnessTable = swift_getWitnessTable();
    MEMORY[0x1C87732D0](aBlock, v34, WitnessTable);
    v99[7] = aBlock[0];
    OUTLINED_FUNCTION_37_14();
    type metadata accessor for EnumeratedSequence();
    EnumeratedSequence.makeIterator()();
    unsigned __int8 v83 = v32 + 4;
    OUTLINED_FUNCTION_2();
    uint64_t v84 = v34;
    type metadata accessor for EnumeratedSequence.Iterator();
    OUTLINED_FUNCTION_41_16();
    *(void *)(v37 - 256) = v36;
    EnumeratedSequence.Iterator.next()();
    uint64_t v39 = *(void (**)(Swift::Int *, uint64_t, uint64_t))(v14 + 32);
    uint64_t v38 = v14 + 32;
    uint64_t v40 = v88;
    Swift::Int v82 = v39;
    v39(v88, WitnessTable, v12);
    if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, TupleTypeMetadata2) != 1)
    {
      uint64_t v78 = *(void (**)(char *, char *, int *))(v87 + 32);
      uint64_t v77 = v87 + 16;
      uint64_t v76 = v87 + 40;
      uint64_t v70 = v99;
      uint64_t v79 = v87 + 32;
      uint64_t v75 = v87 + 8;
      BOOL v71 = v10;
      uint64_t v81 = v12;
      uint64_t v80 = v38;
      do
      {
        Swift::Int v41 = *v40;
        v78(v10, (char *)v40 + *(int *)(TupleTypeMetadata2 + 48), active);
        uint64_t v42 = swift_allocBox();
        uint64_t v44 = v43;
        uint64_t v45 = v87;
        char v46 = *(void (**)(uint64_t, char *, int *))(v87 + 16);
        v46((uint64_t)v43, v10, active);
        OUTLINED_FUNCTION_11_0();
        uint64_t v47 = active[10];
        float v48 = *(float *)&v44[v47] + 1.0;
        if (v44[active[11]]) {
          float v49 = 1.0;
        }
        else {
          float v49 = 0.0;
        }
        float v50 = (float)(v49 * (float)(2.0 / (float)(v48 + 1.0)))
            + (float)(*(float *)&v44[active[9]] * (float)(1.0 - (float)(2.0 / (float)(v48 + 1.0))));
        *(float *)&v44[v47] = v48;
        *(float *)&v44[active[9]] = v50;
        uint64_t v51 = v86;
        v46(v86, v44, active);
        uint64_t v52 = v85;
        OUTLINED_FUNCTION_6_1();
        uint64_t v53 = v84;
        Array._makeMutableAndUnique()();
        uint64_t v54 = *v52;
        Array._checkSubscript_mutating(_:)(v41);
        (*(void (**)(unint64_t, uint64_t, int *))(v45 + 40))(v54+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v41, v51, active);
        TPNumberPadCharacter.rawValue.getter(v53);
        swift_endAccess();
        uint64_t v55 = *v83;
        if (*v83)
        {
          uint64_t v56 = v74[5];
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
          swift_retain();
          uint64_t v97 = static OS_dispatch_queue.main.getter();
          uint64_t v57 = swift_allocObject();
          uint64_t v58 = v72;
          *(void *)(v57 + 16) = v73;
          *(void *)(v57 + 24) = v58;
          *(void *)(v57 + 32) = v55;
          *(void *)(v57 + 40) = v56;
          uint64_t v94 = v56;
          *(void *)(v57 + 48) = v42;
          uint64_t v96 = v42;
          *(float *)(v57 + 56) = v50;
          v99[2] = partial apply for closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA();
          v99[3] = v57;
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 1107296256;
          v99[0] = thunk for @escaping @callee_guaranteed () -> ();
          v99[1] = &block_descriptor_69;
          unint64_t v91 = _Block_copy(aBlock);
          _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v55);
          swift_retain();
          swift_release();
          uint64_t v93 = type metadata accessor for DispatchQoS();
          uint64_t v95 = &v70;
          OUTLINED_FUNCTION_5_3();
          uint64_t v92 = v59;
          MEMORY[0x1F4188790](v60);
          OUTLINED_FUNCTION_62();
          static DispatchQoS.unspecified.getter();
          uint64_t v54 = type metadata accessor for DispatchWorkItemFlags();
          uint64_t v90 = &v70;
          OUTLINED_FUNCTION_5_3();
          MEMORY[0x1F4188790](v61);
          OUTLINED_FUNCTION_5_1();
          aBlock[0] = MEMORY[0x1E4FBC860];
          _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF78]);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
          lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
          dispatch thunk of SetAlgebra.init<A>(_:)();
          float v62 = v91;
          uint64_t v63 = (void *)v97;
          MEMORY[0x1C8773BA0](0, v45, v51, v91);
          _Block_release(v62);

          outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v55);
          OUTLINED_FUNCTION_50_1();
          v65(v64);
          OUTLINED_FUNCTION_26_2();
          v67(v66);
          uint64_t v10 = v71;
        }
        OUTLINED_FUNCTION_26_2();
        v69(v68);
        swift_release();
        OUTLINED_FUNCTION_41_16();
        EnumeratedSequence.Iterator.next()();
        uint64_t v40 = v88;
        v82(v88, v54, v81);
      }
      while (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, TupleTypeMetadata2) != 1);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)()
{
  OUTLINED_FUNCTION_35_14();
  uint64_t v5 = v0;
  char v7 = v6;
  uint64_t v8 = *v0;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_64();
  uint64_t v13 = *(void **)((char *)v0 + *(void *)(v8 + 152));
  void *v1 = v13;
  uint64_t v14 = OUTLINED_FUNCTION_19_3();
  v15(v14);
  id v16 = v13;
  uint64_t v17 = _dispatchPreconditionTest(_:)();
  uint64_t v18 = OUTLINED_FUNCTION_36_16();
  v19(v18);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_13_30();
  uint64_t v17 = (uint64_t)v0 + *(void *)(v20 + 128);
  OUTLINED_FUNCTION_11_0();
  type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  type metadata accessor for Array();
  swift_getWitnessTable();
  swift_getWitnessTable();
  v52[0] = Sequence<>.sorted()();
  uint64_t v21 = Array.init<A>(_:)();
  uint64_t v2 = MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(v21);
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    *(void *)uint64_t v17 = v2;
    goto LABEL_9;
  }
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v51 = v48;
  OUTLINED_FUNCTION_5_3();
  uint64_t v23 = v22;
  uint64_t v11 = *(void *)(v24 + 64);
  MEMORY[0x1F4188790](v25);
  Date.init()();
  OUTLINED_FUNCTION_13_30();
  uint64_t v27 = (char *)v0 + *(void *)(v26 + 144);
  uint64_t v28 = OUTLINED_FUNCTION_2();
  uint64_t v3 = v48;
  MEMORY[0x1F4188790](v28);
  id v29 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  uint64_t v49 = (uint64_t)v27;
  v29((char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v9);
  Date.timeIntervalSince(_:)();
  double v4 = v30;
  float v50 = (void *)v23;
  uint64_t v31 = *(void (**)(void))(v23 + 8);
  OUTLINED_FUNCTION_50_1();
  v31();
  OUTLINED_FUNCTION_50_1();
  v31();
  if (one-time initialization token for shared != -1) {
    goto LABEL_12;
  }
LABEL_4:
  OUTLINED_FUNCTION_50();
  if ((*(double (**)(void))(v32 + 456))() >= v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:)();
  char v34 = v33;
  swift_bridgeObjectRelease();
  *(void *)uint64_t v17 = v2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();
  uint64_t v35 = v5[2];
  if (v35 && (v34 & 1) != 0)
  {
    uint64_t v36 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v37 = MEMORY[0x1F4188790](v5[3]);
    swift_retain();
    Date.init()();
    uint64_t v38 = v49;
    OUTLINED_FUNCTION_6_1();
    ((void (*)(uint64_t, char *, uint64_t))v50[5])(v38, v36, v9);
    swift_endAccess();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v51 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = v35;
    v39[3] = v37;
    v48[2] = v37;
    double v39[4] = v5;
    v52[4] = partial apply for closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:);
    id v52[5] = v39;
    v52[0] = MEMORY[0x1E4F143A8];
    v52[1] = 1107296256;
    void v52[2] = thunk for @escaping @callee_guaranteed () -> ();
    v52[3] = &block_descriptor_63_0;
    uint64_t v40 = _Block_copy(v52);
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v35);
    swift_retain();
    swift_release();
    uint64_t v49 = type metadata accessor for DispatchQoS();
    float v50 = v48;
    OUTLINED_FUNCTION_5_3();
    MEMORY[0x1F4188790](v41);
    OUTLINED_FUNCTION_5_1();
    static DispatchQoS.unspecified.getter();
    uint64_t v42 = type metadata accessor for DispatchWorkItemFlags();
    v48[1] = v48;
    OUTLINED_FUNCTION_5_3();
    uint64_t v44 = v43;
    MEMORY[0x1F4188790](v45);
    OUTLINED_FUNCTION_118();
    v52[0] = MEMORY[0x1E4FBC860];
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF78]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    char v46 = v51;
    MEMORY[0x1C8773BA0](0, v37, v3, v40);
    _Block_release(v40);

    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v35);
    (*(void (**)(void *, uint64_t))(v44 + 8))(v3, v42);
    OUTLINED_FUNCTION_3_8();
    v47();
  }
LABEL_10:
  OUTLINED_FUNCTION_33_2();
}

void MostActiveParticipantsController.markParticipantAsReacting(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_7_73();
  OUTLINED_FUNCTION_5_3();
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)v20 - v5;
  OUTLINED_FUNCTION_7_73();
  uint64_t v7 = OUTLINED_FUNCTION_25_30();
  v8(v7);
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = OUTLINED_FUNCTION_30_22(v9);
  *(void *)(v10 + 24) = *(void *)(v11 + 88);
  *(void *)(v10 + 32) = v0;
  uint64_t v12 = OUTLINED_FUNCTION_11_42(v10);
  v13(v12);
  v21[4] = partial apply for closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:);
  v21[5] = v3;
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 1107296256;
  v21[2] = thunk for @escaping @callee_guaranteed () -> ();
  void v21[3] = &block_descriptor_31_0;
  _Block_copy(v21);
  v20[0] = OUTLINED_FUNCTION_44_11();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_22_31();
  OUTLINED_FUNCTION_49_10();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_5_1();
  v20[1] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF78]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_15_35();
  OUTLINED_FUNCTION_5_86();
  _Block_release(v1);

  uint64_t v16 = OUTLINED_FUNCTION_21_3();
  v17(v16);
  uint64_t v18 = OUTLINED_FUNCTION_19_34();
  v19(v18);
  swift_release();
  OUTLINED_FUNCTION_28();
}

void closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)()
{
}

void MostActiveParticipantsController.markParticipantAsOffline(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_7_73();
  OUTLINED_FUNCTION_5_3();
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v21 - v6;
  OUTLINED_FUNCTION_7_73();
  uint64_t v8 = OUTLINED_FUNCTION_25_30();
  v9(v8);
  OUTLINED_FUNCTION_42_15();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = OUTLINED_FUNCTION_30_22(v10);
  *(void *)(v11 + 24) = *(void *)(v12 + 88);
  uint64_t v13 = OUTLINED_FUNCTION_11_42(v11);
  v14(v13);
  *(void *)(v4 + vConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v0;
  v22[4] = partial apply for closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:);
  void v22[5] = v4;
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 1107296256;
  void v22[2] = thunk for @escaping @callee_guaranteed () -> ();
  void v22[3] = &block_descriptor_37_0;
  _Block_copy(v22);
  v21[0] = OUTLINED_FUNCTION_44_11();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_22_31();
  OUTLINED_FUNCTION_49_10();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_5_1();
  v21[1] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF78]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_15_35();
  OUTLINED_FUNCTION_5_86();
  _Block_release(v2);

  uint64_t v17 = OUTLINED_FUNCTION_21_3();
  v18(v17);
  uint64_t v19 = OUTLINED_FUNCTION_19_34();
  v20(v19);
  swift_release();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)a2 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v9 = *(void *)(v8 + 88);
  uint64_t active = type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  uint64_t v11 = *(void *)(active - 8);
  uint64_t v12 = MEMORY[0x1F4188790](active);
  uint64_t v24 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v23 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  float v16 = (*(float (**)(void))(*(void *)static Defaults.shared + 408))();
  MostActiveParticipantsController.ActivityDetails.init(participantIdentifier:currentEMA:currentTimeScale:isActive:prominenceWeight:audioPriority:videoPriority:)((uint64_t)v7, 0, v4, (uint64_t)v15, 0.0, v16, 1.0, 0.0, 0.0);
  uint64_t v17 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 128));
  uint64_t v18 = swift_beginAccess();
  uint64_t v25 = *v17;
  MEMORY[0x1F4188790](v18);
  *(&v23 - 4) = v4;
  *(&v23 - 3) = v9;
  *(&v23 - 2) = a1;
  uint64_t v19 = type metadata accessor for Array();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  Collection.firstIndex(where:)();
  swift_bridgeObjectRelease();
  if (v27 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v24, v15, active);
    swift_beginAccess();
    Array.append(_:)();
  }
  else
  {
    Swift::Int v20 = v26;
    swift_beginAccess();
    Array._makeMutableAndUnique()();
    uint64_t v21 = *v17;
    Array._checkSubscript_mutating(_:)(v20);
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 24))(v21+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v20, v15, active);
    TPNumberPadCharacter.rawValue.getter(v19);
  }
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, active);
}

uint64_t closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA()(void (*a1)(char *, float, float, float), float a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  uint64_t v12 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, a5);
  a1(v10, a2, *(float *)(v12 + *(int *)(active + 52)), *(float *)(v12 + *(int *)(active + 56)));
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a5);
}

uint64_t MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(*(void *)v1 + 88);
  OUTLINED_FUNCTION_37_14();
  uint64_t active = type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  uint64_t v6 = MEMORY[0x1C8773490](a1, active);
  if (v6 > 2)
  {
    uint64_t v11 = type metadata accessor for Array();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v13 = MEMORY[0x1C87732D0](&v25, v11, WitnessTable);
    uint64_t v24 = v25;
    uint64_t v14 = MEMORY[0x1F4188790](v13);
    uint64_t v22 = v3;
    uint64_t v23 = v4;
    MEMORY[0x1F4188790](v14);
    void v20[2] = v3;
    v20[3] = v4;
    void v20[4] = partial apply for closure #2 in MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:);
    v20[5] = v15;
    uint64_t v16 = type metadata accessor for EnumeratedSequence();
    uint64_t v17 = swift_getWitnessTable();
    uint64_t v10 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, char *))partial apply for thunk for @callee_guaranteed (@unowned Int, @in_guaranteed MostActiveParticipantsController<A>.ActivityDetails) -> (@out MostActiveParticipantsController<A>.ActivityDetails), (uint64_t)v20, v16, active, MEMORY[0x1E4FBC248], v17, MEMORY[0x1E4FBC278], v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = a1;
    MEMORY[0x1F4188790](v6);
    uint64_t v22 = v3;
    uint64_t v23 = v4;
    uint64_t v7 = type metadata accessor for Array();
    uint64_t v8 = swift_getWitnessTable();
    return _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, uint64_t))partial apply for closure #1 in MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:), (uint64_t)&v21, v7, active, MEMORY[0x1E4FBC248], v8, MEMORY[0x1E4FBC278], v9);
  }
  return v10;
}

void MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *v0;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_43_13();
  uint64_t v9 = *(void **)((char *)v0 + *(void *)(v8 + 152));
  void *v1 = v9;
  uint64_t v10 = OUTLINED_FUNCTION_19_3();
  v11(v10);
  id v12 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t v13 = OUTLINED_FUNCTION_36_16();
  v14(v13);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  *(void *)&long long v36 = v5;
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_2();
  uint64_t v15 = *(void *)(v6 + 80);
  uint64_t v16 = *(void *)(v6 + 88);
  type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  OUTLINED_FUNCTION_37_14();
  uint64_t v35 = v3;
  type metadata accessor for Array();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v17 = Collection.prefix(_:)();
  v34[1] = v34;
  long long v36 = v38;
  long long v37 = v39;
  MEMORY[0x1F4188790](v17);
  _OWORD v33[2] = v15;
  long long v33[3] = v16;
  OUTLINED_FUNCTION_37_14();
  uint64_t v18 = type metadata accessor for ArraySlice();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v1 = (void *)_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, uint64_t))partial apply for closure #1 in MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:), (uint64_t)v33, v18, v15, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v20);
  swift_unknownObjectRelease();
  *(void *)&long long v36 = v35;
  swift_bridgeObjectRetain();
  uint64_t v21 = Collection.prefix(_:)();
  long long v36 = v38;
  long long v37 = v39;
  MEMORY[0x1F4188790](v21);
  v33[-2] = v15;
  v33[-1] = v16;
  uint64_t v6 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, uint64_t))partial apply for closure #1 in MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:), (uint64_t)&v33[-4], v18, v15, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v22);
  swift_unknownObjectRelease();
  if ((static Array<A>.== infix(_:_:)() & 1) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_5:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1C37696D0;
      *(void *)&long long v38 = v1;
      uint64_t v24 = type metadata accessor for Array();
      uint64_t v25 = >> prefix<A>(_:)((uint64_t)&v38, v24);
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      uint64_t v28 = MEMORY[0x1E4FBB1A0];
      *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v29 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v23 + 64) = v29;
      *(void *)(v23 + 32) = v25;
      *(void *)(v23 + 40) = v27;
      *(void *)&long long v38 = v6;
      uint64_t v30 = >> prefix<A>(_:)((uint64_t)&v38, v24);
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      *(void *)(v23 + 96) = v28;
      *(void *)(v23 + 104) = v29;
      *(void *)(v23 + 72) = v30;
      *(void *)(v23 + 80) = v32;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      goto LABEL_6;
    }
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(uint64_t (*a1)(BOOL))
{
  BOOL v2 = MostActiveParticipantsController.mostActiveParticipantProminenceChangeReason.getter();
  return a1(v2);
}

void closure #1 in MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t active = type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(active - 8) + 16))(a2, a1, active);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  *(float *)(a2 + *(int *)(active + 48)) = (*(float (**)(void))(*(void *)static Defaults.shared + 448))();
}

void closure #2 in MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t active = type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(active - 8) + 16))(a3, a2, active);
  if (a1 == 2)
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    (*(void (**)(void))(*(void *)static Defaults.shared + 440))();
  }
  else if (a1 == 1)
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    (*(void (**)(void))(*(void *)static Defaults.shared + 432))();
  }
  else if (a1)
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    float v7 = (*(float (**)(void))(*(void *)static Defaults.shared + 448))();
  }
  else
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    (*(void (**)(void))(*(void *)static Defaults.shared + 424))();
  }
  *(float *)(a3 + *(int *)(active + 48)) = v7;
}

uint64_t thunk for @callee_guaranteed (@unowned Int, @in_guaranteed MostActiveParticipantsController<A>.ActivityDetails) -> (@out MostActiveParticipantsController<A>.ActivityDetails)(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4 = *(void *)a1;
  type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary()()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    MostActiveParticipantsController.updateActiveParticipantsEMA()();
    MostActiveParticipantsController.activityDetailsAboveThreshold()();
    if (v1) {
      MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)();
    }
    return swift_release();
  }
  return result;
}

void MostActiveParticipantsController.activityDetailsAboveThreshold()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 80);
  uint64_t v32 = *(void *)(*v0 + 88);
  uint64_t active = type metadata accessor for MostActiveParticipantsController.ActivityDetails();
  type metadata accessor for Optional();
  OUTLINED_FUNCTION_5_3();
  uint64_t v34 = v4;
  uint64_t v35 = v3;
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v5);
  float v7 = (char *)&v32 - v6;
  uint64_t v8 = type metadata accessor for Optional();
  OUTLINED_FUNCTION_5_3();
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_21();
  uint64_t v20 = *(void **)((char *)v0 + *(void *)(v1 + 152));
  *(void *)(v19 - v18) = v20;
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v19 - v18, *MEMORY[0x1E4FBCBE8], v14);
  id v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_3_8();
  v22();
  if (v20)
  {
    OUTLINED_FUNCTION_50();
    uint64_t v24 = (uint64_t)v0 + *(void *)(v23 + 112);
    OUTLINED_FUNCTION_2();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v24, v8);
    __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v2);
    uint64_t v25 = OUTLINED_FUNCTION_31_23();
    v26(v25);
    uint64_t v27 = (uint64_t *)((char *)v0 + *(void *)(*v0 + 128));
    uint64_t v28 = OUTLINED_FUNCTION_2();
    uint64_t v36 = *v27;
    MEMORY[0x1F4188790](v28);
    uint64_t v29 = v32;
    *(&v32 - 2) = v2;
    *(&v32 - ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v29;
    uint64_t v30 = active;
    type metadata accessor for Array();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    Sequence.first(where:)();
    swift_bridgeObjectRelease();
    __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v30);
    OUTLINED_FUNCTION_26_2();
    v31();
    OUTLINED_FUNCTION_28();
  }
  else
  {
    __break(1u);
  }
}

BOOL closure #1 in MostActiveParticipantsController.activityDetailsAboveThreshold()(uint64_t a1)
{
  float v1 = *(float *)(a1 + *(int *)(type metadata accessor for MostActiveParticipantsController.ActivityDetails() + 36));
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return (*(float (**)(void))(*(void *)static Defaults.shared + 464))() < v1;
}

uint64_t *MostActiveParticipantsController.deinit()
{
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v0[2]);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v0[4]);
  OUTLINED_FUNCTION_50();
  type metadata accessor for Optional();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v1();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_50();
  type metadata accessor for Date();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v2();

  return v0;
}

uint64_t MostActiveParticipantsController.__deallocating_deinit()
{
  MostActiveParticipantsController.deinit();
  OUTLINED_FUNCTION_3_2();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MostActiveParticipantsController.ActivityDetails()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C32DBC44()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter()
{
  return closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter(*(uint64_t **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1C32DBC84()
{
  return swift_deallocObject();
}

uint64_t sub_1C32DBC94()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)()
{
  return closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C32DBCDC()
{
  OUTLINED_FUNCTION_5_3();
  unint64_t v3 = (*(void *)(v2 + 64)
      + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v4 = OUTLINED_FUNCTION_106();
  v5(v4);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)()
{
  OUTLINED_FUNCTION_3_94();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  unint64_t v5 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)(*(uint64_t **)(v0 + 32), v0 + v5, v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
}

void **outlined retain of ParticipantMediaPriorities(void **a1)
{
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t sub_1C32DBE14()
{
  OUTLINED_FUNCTION_5_3();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_106();
  v1(v0);
  return swift_deallocObject();
}

void partial apply for closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)()
{
  OUTLINED_FUNCTION_3_94();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  unint64_t v5 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)(*(void *)(v0 + 32), v0 + v5, *(unsigned char *)(v0 + v5 + *(void *)(v4 + 64)));
}

uint64_t sub_1C32DBEEC()
{
  OUTLINED_FUNCTION_5_3();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_106();
  v1(v0);
  return swift_deallocObject();
}

void partial apply for closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)()
{
}

uint64_t sub_1C32DBFBC()
{
  OUTLINED_FUNCTION_26_2();
  v0();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:)()
{
  OUTLINED_FUNCTION_3_94();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  unint64_t v5 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:)(v0 + v5, *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t base witness table accessor for Equatable in MostActiveParticipantsController<A>.ProminenceChangeReason()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for Equatable in MostActiveParticipantsController<A>.ActivityDetails()
{
  return swift_getWitnessTable();
}

uint64_t type metadata completion function for MostActiveParticipantsController()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for MostActiveParticipantsController()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for MostActiveParticipantsController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MostActiveParticipantsController);
}

uint64_t dispatch thunk of MostActiveParticipantsController.__allocating_init(participantIdentifiers:configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

unsigned char *storeEnumTagSinglePayload for MostActiveParticipantsController.ProminenceChangeReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C32DC30CLL);
      case 4:
        *(_DWORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for MostActiveParticipantsController.ProminenceChangeReason()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for MostActiveParticipantsController.Configuration()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata instantiation function for MostActiveParticipantsController.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

uint64_t type metadata completion function for MostActiveParticipantsController.ActivityDetails()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MostActiveParticipantsController.ActivityDetails(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7 & 0xFC | 3;
  int v9 = v7 & 0x100000;
  if (v8 > 7
    || v9 != 0
    || ((((((((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 15) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL)
     + 4 > 0x18)
  {
    uint64_t v12 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v12 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v13 = (_DWORD *)(((unint64_t)v4 + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL);
    uint64_t v14 = (_DWORD *)(((unint64_t)a2 + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL);
    _DWORD *v13 = *v14;
    unint64_t v15 = ((unint64_t)v13 + 7) & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v16 = ((unint64_t)v14 + 7) & 0xFFFFFFFFFFFFFFFCLL;
    *(_DWORD *)unint64_t v15 = *(_DWORD *)v16;
    *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
    uint64_t v17 = (_DWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFFCLL);
    uint64_t v18 = (_DWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFFCLL);
    *uint64_t v17 = *v18;
    uint64_t v19 = (_DWORD *)(((unint64_t)v17 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    uint64_t v20 = (_DWORD *)(((unint64_t)v18 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    *uint64_t v19 = *v20;
    *(_DWORD *)(((unint64_t)v19 + 7) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v20 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  }
  return v4;
}

uint64_t destroy for MostActiveParticipantsController.ActivityDetails(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t initializeWithCopy for MostActiveParticipantsController.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 3;
  int v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v10 = ((unint64_t)v8 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  *(_DWORD *)unint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = (_DWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v12 = (_DWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFFCLL);
  *uint64_t v11 = *v12;
  uint64_t v13 = (_DWORD *)(((unint64_t)v11 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v14 = (_DWORD *)(((unint64_t)v12 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  _DWORD *v13 = *v14;
  *(_DWORD *)(((unint64_t)v13 + 7) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v14 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t assignWithCopy for MostActiveParticipantsController.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 3;
  int v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v10 = ((unint64_t)v8 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  *(_DWORD *)unint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = (_DWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v12 = (_DWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFFCLL);
  *uint64_t v11 = *v12;
  uint64_t v13 = (_DWORD *)(((unint64_t)v11 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v14 = (_DWORD *)(((unint64_t)v12 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  _DWORD *v13 = *v14;
  *(_DWORD *)(((unint64_t)v13 + 7) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v14 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t initializeWithTake for MostActiveParticipantsController.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 3;
  int v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v10 = ((unint64_t)v8 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  *(_DWORD *)unint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = (_DWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v12 = (_DWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFFCLL);
  *uint64_t v11 = *v12;
  uint64_t v13 = (_DWORD *)(((unint64_t)v11 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v14 = (_DWORD *)(((unint64_t)v12 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  _DWORD *v13 = *v14;
  *(_DWORD *)(((unint64_t)v13 + 7) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v14 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t assignWithTake for MostActiveParticipantsController.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 3;
  int v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v10 = ((unint64_t)v8 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  *(_DWORD *)unint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = (_DWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v12 = (_DWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFFCLL);
  *uint64_t v11 = *v12;
  uint64_t v13 = (_DWORD *)(((unint64_t)v11 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  uint64_t v14 = (_DWORD *)(((unint64_t)v12 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  _DWORD *v13 = *v14;
  *(_DWORD *)(((unint64_t)v13 + 7) & 0xFFFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v14 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for MostActiveParticipantsController.ActivityDetails(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 15) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL)
       + 4;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFFC;
    if ((v8 & 0xFFFFFFFC) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C32DCA34);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_21:
        int v15 = v14 - 1;
        if (v10)
        {
          int v15 = 0;
          LODWORD(v10) = *a1;
        }
        int v16 = v7 + (v10 | v15);
        return (v16 + 1);
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unsigned int v18 = *(unsigned __int8 *)((((((unint64_t)a1 + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 4);
  if (v18 < 2) {
    return 0;
  }
  int v16 = (v18 + 2147483646) & 0x7FFFFFFF;
  return (v16 + 1);
}

void storeEnumTagSinglePayload for MostActiveParticipantsController.ActivityDetails(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((((((v9 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 15) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL)
      + 4;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((((v9 + 3) & 0xFFFFFFFC) + 15) & 0xFFFFFFFC) + 7) & 0xFFFFFFFC) + 7) & 0xFFFFFFFC) == 0xFFFFFFFC) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((((((v9 + 3) & 0xFFFFFFFC) + 15) & 0xFFFFFFFC) + 7) & 0xFFFFFFFC) + 7) & 0xFFFFFFFC) == 0xFFFFFFFC) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((((((((v9 + 3) & 0xFFFFFFFC) + 15) & 0xFFFFFFFC) + 7) & 0xFFFFFFFC) + 7) & 0xFFFFFFFC) != 0xFFFFFFFC)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((((((((v9 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 15) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL)+ 4);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1C32DCC30);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0xFE)
        {
          *(unsigned char *)(((((unint64_t)&a1[v9 + 3] & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 4) = a2 + 1;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_1C32DCC58()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A, @in_guaranteed Float, @in_guaranteed Float, @in_guaranteed Float) -> (@out ())(uint64_t a1, float a2, float a3, float a4)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, float *, float *, float *))(v4 + 32);
  float v8 = a3;
  float v9 = a2;
  float v7 = a4;
  return v5(a1, &v9, &v8, &v7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A, @unowned Float, @unowned Float, @unowned Float) -> ()(uint64_t a1, float *a2, float *a3, float *a4)
{
  return (*(uint64_t (**)(float, float, float))(v4 + 32))(*a2, *a3, *a4);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed MostActiveParticipantsController<A>.ProminenceChangeReason) -> (@out ())(char a1)
{
  unint64_t v2 = *(uint64_t (**)(char *))(v1 + 32);
  char v4 = a1 & 1;
  return v2(&v4);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned MostActiveParticipantsController<A>.ProminenceChangeReason) -> ()(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 32))(*a1);
}

uint64_t sub_1C32DCD70()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)()
{
  return closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(*(uint64_t (**)(BOOL))(v0 + 16));
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return partial apply for closure #1 in MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:)(a1, a2);
}

{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

void partial apply for closure #2 in MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t partial apply for thunk for @callee_guaranteed (@unowned Int, @in_guaranteed MostActiveParticipantsController<A>.ActivityDetails) -> (@out MostActiveParticipantsController<A>.ActivityDetails)(char *a1)
{
  return thunk for @callee_guaranteed (@unowned Int, @in_guaranteed MostActiveParticipantsController<A>.ActivityDetails) -> (@out MostActiveParticipantsController<A>.ActivityDetails)(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 32));
}

void partial apply for closure #1 in MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1C32DCE20()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA()()
{
  return closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA()(*(void (**)(char *, float, float, float))(v0 + 32), *(float *)(v0 + 56), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 16));
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.boostParticipantEMAToMax(_:)()
{
  return partial apply for closure #1 in MostActiveParticipantsController.boostParticipantEMAToMax(_:)() & 1;
}

{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

BOOL partial apply for closure #1 in MostActiveParticipantsController.activityDetailsAboveThreshold()(uint64_t a1)
{
  return closure #1 in MostActiveParticipantsController.activityDetailsAboveThreshold()(a1);
}

uint64_t sub_1C32DCEB0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C32DCEE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary()()
{
  return closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary()();
}

int *partial apply for closure #1 in closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return closure #1 in closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)(a1, *(void *)(v2 + 16), a2);
}

uint64_t key path getter for PushToTalkDisclosureButton.text : PushToTalkDisclosureButton@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x70))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for PushToTalkDisclosureButton.text : PushToTalkDisclosureButton(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x78);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

void PushToTalkDisclosureButton.text.didset()
{
  id v1 = PushToTalkDisclosureButton.label.getter();
  uint64_t v2 = &v0[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_text];
  swift_beginAccess();
  uint64_t v3 = *((void *)v2 + 1);
  if (v3)
  {
    uint64_t v4 = *(void *)v2;
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)MEMORY[0x1C87730B0](v4, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  objc_msgSend(v1, sel_setText_, v5);

  uint64_t v6 = *((void *)v2 + 1);
  if (v6)
  {
    uint64_t v7 = *(void *)v2;
    swift_bridgeObjectRetain();
    float v8 = (void *)MEMORY[0x1C87730B0](v7, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    float v8 = 0;
  }
  objc_msgSend(v0, sel_setAccessibilityLabel_, v8);
}

uint64_t PushToTalkDisclosureButton.text.getter()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_text);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void PushToTalkDisclosureButton.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_text);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  PushToTalkDisclosureButton.text.didset();
}

void (*PushToTalkDisclosureButton.text.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return PushToTalkDisclosureButton.text.modify;
}

void PushToTalkDisclosureButton.text.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    PushToTalkDisclosureButton.text.didset();
  }
}

id PushToTalkDisclosureButton.label.getter()
{
  return PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton____lazy_storage___label, (uint64_t (*)(uint64_t))closure #1 in PushToTalkDisclosureButton.label.getter);
}

id closure #1 in PushToTalkDisclosureButton.label.getter(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  if (one-time initialization token for disclosureButtonLabel != -1) {
    swift_once();
  }
  objc_msgSend(v2, sel_setFont_, static Fonts.PTT.disclosureButtonLabel);
  id v3 = objc_msgSend(a1, sel_tintColor);
  objc_msgSend(v2, sel_setTextColor_, v3);

  objc_msgSend(v2, sel_setNumberOfLines_, 1);
  objc_msgSend(v2, sel_setClipsToBounds_, 1);
  objc_msgSend(v2, sel_setLineBreakMode_, 4);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  LODWORD(v4) = 1144750080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);
  objc_msgSend(v2, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB27B0]);
  objc_msgSend(v2, sel_setMinimumContentSizeCategory_, *MEMORY[0x1E4FB27C8]);
  return v2;
}

id PushToTalkDisclosureButton.chevronImageView.getter()
{
  return PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton____lazy_storage___chevronImageView, (uint64_t (*)(uint64_t))closure #1 in PushToTalkDisclosureButton.chevronImageView.getter);
}

id PushToTalkDisclosureButton.label.getter(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  double v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    double v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id closure #1 in PushToTalkDisclosureButton.chevronImageView.getter(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  uint64_t v3 = (void *)*MEMORY[0x1E4FB28C8];
  uint64_t v11 = 0x2E6E6F7276656863;
  unint64_t v12 = 0xEF64726177726F66;
  uint64_t v13 = 2;
  int v14 = v3;
  LOWORD(v15) = 0;
  uint64_t v16 = 5;
  LOBYTE(v17) = 0;
  uint64_t v18 = 0;
  id v4 = v3;
  id v5 = static UIImage.symbolImage(for:)((uint64_t)&v11);

  swift_bridgeObjectRelease();
  if (v5)
  {
    objc_msgSend(v2, sel_setNumberOfLines_, 1, v11, v12, v13, v14, v15, v16, v17, v18);
    objc_msgSend(v2, sel_setClipsToBounds_, 1);
    if (one-time initialization token for disclosureButtonLabel != -1) {
      swift_once();
    }
    objc_msgSend(v2, sel_setFont_, static Fonts.PTT.disclosureButtonLabel);
    objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
    id v6 = objc_msgSend(a1, sel_tintColor);
    objc_msgSend(v2, sel_setTextColor_, v6);

    LODWORD(v7) = 1144750080;
    objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);
    id v8 = objc_msgSend(self, sel_textAttachmentWithImage_, v5);
    id v9 = objc_msgSend(self, sel_attributedStringWithAttachment_, v8);

    objc_msgSend(v2, sel_setAttributedText_, v9);
    objc_msgSend(v2, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB27B0]);
    objc_msgSend(v2, sel_setMinimumContentSizeCategory_, *MEMORY[0x1E4FB27C8]);
  }
  return v2;
}

id PushToTalkDisclosureButton.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

char *PushToTalkDisclosureButton.init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = &v0[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_text];
  *(void *)id v1 = 0;
  *((void *)v1 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_contentView;
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  double v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, sel_init);
  *(void *)&v4[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton____lazy_storage___label] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton____lazy_storage___chevronImageView] = 0;

  uint64_t v20 = type metadata accessor for PushToTalkDisclosureButton();
  double v5 = OUTLINED_FUNCTION_6_2();
  id v8 = objc_msgSendSuper2(v6, v7, v5, v4, v20);
  uint64_t v9 = one-time initialization token for disclosureButtonLabel;
  unint64_t v10 = (char *)v8;
  if (v9 != -1) {
    swift_once();
  }
  objc_msgSend(v10, sel_setTintColor_, static Colors.PTT.disclosureButtonLabel);
  id v11 = PushToTalkDisclosureButton.chevronImageView.getter();
  LODWORD(v12) = 1148846080;
  objc_msgSend(v11, sel_setContentCompressionResistancePriority_forAxis_, 0, v12);

  uint64_t v13 = OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_contentView;
  int v14 = *(void **)&v10[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_contentView];
  objc_msgSend(v10, sel_addSubview_, v14);
  id v15 = v14;
  id v16 = PushToTalkDisclosureButton.label.getter();
  OUTLINED_FUNCTION_2_85((uint64_t)v16);

  id v17 = *(id *)&v10[v13];
  id v18 = PushToTalkDisclosureButton.chevronImageView.getter();
  OUTLINED_FUNCTION_2_85((uint64_t)v18);

  PushToTalkDisclosureButton.setupConstraints()();
  return v10;
}

uint64_t type metadata accessor for PushToTalkDisclosureButton()
{
  return self;
}

id PushToTalkDisclosureButton.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PushToTalkDisclosureButton.init(coder:)()
{
  id v1 = &v0[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_text];
  *(void *)id v1 = 0;
  *((void *)v1 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_contentView;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton____lazy_storage___label] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton____lazy_storage___chevronImageView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void PushToTalkDisclosureButton.setupConstraints()()
{
  id v1 = v0;
  id v2 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_contentView];
  id v3 = PushToTalkDisclosureButton.label.getter();
  id v4 = PushToTalkDisclosureButton.chevronImageView.getter();

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C3769580;
  id v6 = objc_msgSend(v2, sel_topAnchor);
  id v7 = objc_msgSend(v1, sel_topAnchor);
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  *(void *)(v5 + 32) = v8;
  id v9 = objc_msgSend(v2, sel_leadingAnchor);
  id v10 = OUTLINED_FUNCTION_1_13((uint64_t)objc_msgSend(v1, sel_leadingAnchor));

  *(void *)(v5 + 40) = v10;
  id v11 = objc_msgSend(v2, sel_trailingAnchor);
  id v12 = OUTLINED_FUNCTION_1_13((uint64_t)objc_msgSend(v1, (SEL)&selRef_supportsDynamicSystemUI + 4));

  *(void *)(v5 + 48) = v12;
  id v13 = objc_msgSend(v2, sel_bottomAnchor);
  id v14 = OUTLINED_FUNCTION_1_13((uint64_t)objc_msgSend(v1, sel_bottomAnchor));

  *(void *)(v5 + 56) = v14;
  uint64_t v45 = v5;
  specialized Array._endMutation()();
  unint64_t v15 = v5;
  id v16 = PushToTalkDisclosureButton.label.getter();
  id v17 = objc_msgSend(v16, sel_centerYAnchor);

  id v18 = objc_msgSend(v2, sel_centerYAnchor);
  id v43 = objc_msgSend(v17, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v18);

  id v19 = PushToTalkDisclosureButton.label.getter();
  id v20 = objc_msgSend(v19, sel_leadingAnchor);

  id v21 = objc_msgSend(v2, sel_leadingAnchor);
  id v42 = objc_msgSend(v20, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v21);

  id v22 = PushToTalkDisclosureButton.chevronImageView.getter();
  id v23 = objc_msgSend(v22, sel_centerYAnchor);

  id v24 = objc_msgSend(v2, sel_centerYAnchor);
  id v25 = objc_msgSend(v23, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v24);

  id v26 = PushToTalkDisclosureButton.chevronImageView.getter();
  id v27 = objc_msgSend(v26, sel_leadingAnchor);

  id v28 = PushToTalkDisclosureButton.label.getter();
  id v29 = objc_msgSend(v28, sel_trailingAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v29, 3.0);
  id v31 = PushToTalkDisclosureButton.chevronImageView.getter();
  id v32 = objc_msgSend(v31, sel_trailingAnchor);

  id v33 = objc_msgSend(v2, sel_trailingAnchor);
  id v34 = objc_msgSend(v32, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v33);

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v35, 5))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v35 + 5, 1);
    specialized Array._endMutation()();
    id v32 = v43;
    MEMORY[0x1C87733A0]();
    if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_5;
    }
  }
  OUTLINED_FUNCTION_1_4();
LABEL_5:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v36 = v42;
  MEMORY[0x1C87733A0]();
  if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    OUTLINED_FUNCTION_1_4();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v37 = v25;
  MEMORY[0x1C87733A0]();
  if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    OUTLINED_FUNCTION_1_4();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v38 = v30;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_68();
  if (v39) {
    OUTLINED_FUNCTION_1_4();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v40 = v34;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_68();
  if (v39) {
    OUTLINED_FUNCTION_1_4();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v41 = self;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_activateConstraints_, isa);
}

id PushToTalkDisclosureButton.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PushToTalkDisclosureButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for PushToTalkDisclosureButton(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PushToTalkDisclosureButton);
}

uint64_t dispatch thunk of PushToTalkDisclosureButton.text.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of PushToTalkDisclosureButton.text.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of PushToTalkDisclosureButton.text.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

UIMenu __swiftcall UIMenu.init(menuItems:)(Swift::OpaquePointer menuItems)
{
  if ((unint64_t)menuItems._rawValue >> 62)
  {
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenuElement);
    UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenuElement);
    UIMenuElementSize preferredElementSize = (UIMenuElementSize)menuItems._rawValue;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_29_1();
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v3, v4, v7, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v6);
}

id static UIDeferredMenuElement.uncached(_:)(uint64_t a1, uint64_t a2)
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  v9[4] = partial apply for closure #1 in static UIDeferredMenuElement.uncached(_:);
  v9[5] = v5;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  _OWORD v9[2] = thunk for @escaping @callee_guaranteed (@guaranteed @escaping @callee_guaranteed (@guaranteed [UIMenuElement]) -> ()) -> ();
  void v9[3] = &block_descriptor_51;
  Swift::OpaquePointer v6 = _Block_copy(v9);
  swift_retain();
  swift_release();
  id v7 = objc_msgSend(ObjCClassFromMetadata, sel_elementWithUncachedProvider_, v6);
  _Block_release(v6);
  return v7;
}

uint64_t closure #1 in static UIDeferredMenuElement.uncached(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  uint64_t v12 = static MainActor.shared.getter();
  id v13 = (void *)swift_allocObject();
  uint64_t v14 = MEMORY[0x1E4FBCFD8];
  void v13[2] = v12;
  void v13[3] = v14;
  v13[4] = a1;
  v13[5] = a2;
  v13[6] = a3;
  v13[7] = a4;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t sub_1C32DE5A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in static UIDeferredMenuElement.uncached(_:)(uint64_t a1, uint64_t a2)
{
  return closure #1 in static UIDeferredMenuElement.uncached(_:)(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6)
{
  v6[4] = a4;
  v6[5] = a5;
  v6[6] = type metadata accessor for MainActor();
  v6[7] = static MainActor.shared.getter();
  id v10 = (uint64_t (*)(void))((char *)a6 + *a6);
  uint64_t v8 = (void *)swift_task_alloc();
  v6[8] = v8;
  *uint64_t v8 = v6;
  v8[1] = closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:);
  return v10();
}

uint64_t closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:)(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:);
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    uint64_t v8 = closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:);
  }
  return MEMORY[0x1F4188298](v8, v5, v7);
}

uint64_t closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:)()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = (void (*)(uint64_t))v0[4];
  swift_release();
  v2(v1);
  swift_bridgeObjectRelease();
  Swift::String v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t (*v15)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  id v18 = v0;
  swift_release();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 72);
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationControls);
  Swift::String v3 = v1;
  uint64_t v4 = v1;
  uint64_t v5 = Logger.logObject.getter();
  uint64_t v6 = static os_log_type_t.error.getter();
  uint64_t v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 72);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    id v10 = swift_slowAlloc();
    id v17 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    *(void *)(v0 + 16) = v8;
    uint64_t v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v12 = String.init<A>(reflecting:)();
    *(void *)(v0 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v5, v6, "Error getting menu elements: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v10, -1, -1);
    MEMORY[0x1C87760E0](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = *(void **)(v0 + 72);
  (*(void (**)(void))(v0 + 32))(MEMORY[0x1E4FBC860]);

  unint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed @escaping @callee_guaranteed (@guaranteed [UIMenuElement]) -> ()) -> ()(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  Swift::String v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned NSArray) -> (), v4);
  swift_release();
  return swift_release();
}

void thunk for @escaping @callee_unowned @convention(block) (@unowned NSArray) -> ()(uint64_t a1, uint64_t a2)
{
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenuElement);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

uint64_t static UIMenuBuilder.buildArray(_:)()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = specialized _copySequenceToContiguousArray<A>(_:)(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static UIMenuBuilder.buildOptional(_:)(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = a1;
  }
  else {
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static UIMenuBuilder.buildPartialBlock(first:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIMenuBuilder.Item>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C3769620;
  outlined init with copy of IDSLookupManager(a1, v2 + 32);
  return v2;
}

uint64_t static UIMenuBuilder.buildPartialBlock(accumulated:next:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIMenuBuilder.Item>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3769620;
  outlined init with copy of IDSLookupManager(a2, inited + 32);
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> static UIMenuBuilder.buildPartialBlock(accumulated:next:)()
{
}

UIMenu UIMenu.init(title:options:_:)(uint64_t a1, uint64_t a2, UIMenuIdentifier_optional a3, uint64_t (*a4)(void))
{
  UIMenuElementSize v23 = MEMORY[0x1E4FBC860];
  UIMenuElementSize v24 = MEMORY[0x1E4FBC860];
  uint64_t v5 = a4();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    children._rawValue = (void *)v5;
    uint64_t v7 = v5 + 32;
    while (1)
    {
      outlined init with copy of IDSLookupManager(v7, (uint64_t)v22);
      outlined init with copy of IDSLookupManager((uint64_t)v22, (uint64_t)v21);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIMenuBuilder.Item);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
      if (OUTLINED_FUNCTION_1_100()) {
        break;
      }
      outlined init with copy of IDSLookupManager((uint64_t)v22, (uint64_t)v21);
      if (swift_dynamicCast())
      {
        UIMenuElementSize v10 = v23;
        if ((unint64_t)v23 >> 62)
        {
          type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenuElement);
          swift_bridgeObjectRetain();
          UIMenuElementSize v11 = _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenuElement);
          UIMenuElementSize v11 = v10;
        }
        swift_bridgeObjectRelease();
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIMenu);
        OUTLINED_FUNCTION_29_1();
        UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v12, v13, v25, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v11, children);
        MEMORY[0x1C87733A0]();
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          OUTLINED_FUNCTION_2_86();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
        UIMenuElementSize v23 = MEMORY[0x1E4FBC860];
        goto LABEL_15;
      }
      outlined init with copy of IDSLookupManager((uint64_t)v22, (uint64_t)v21);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIMenu);
      if (OUTLINED_FUNCTION_1_100())
      {
        id v8 = v20;
        MEMORY[0x1C87733A0]();
        UIMenuElementSize v9 = v24;
        goto LABEL_5;
      }
LABEL_8:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
LABEL_15:
      v7 += 40;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        UIMenuElementSize v14 = v23;
        goto LABEL_21;
      }
    }
    id v8 = v20;
    MEMORY[0x1C87733A0]();
    UIMenuElementSize v9 = v23;
LABEL_5:
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      OUTLINED_FUNCTION_2_86();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  UIMenuElementSize v14 = MEMORY[0x1E4FBC860];
LABEL_21:
  if ((unint64_t)v14 >> 62)
  {
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenuElement);
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenuElement);
  }
  swift_bridgeObjectRelease();
  specialized Array.append<A>(contentsOf:)();
  UIMenuElementSize preferredElementSize = v24;
  OUTLINED_FUNCTION_29_1();
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v15, v16, v26, a3, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children);
}

uint64_t specialized _copySequenceToContiguousArray<A>(_:)(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v8 = MEMORY[0x1E4FBC860] + 32;
  while (1)
  {
    while (1)
    {
      if (!v4) {
        goto LABEL_5;
      }
      unint64_t v9 = *(void *)(v4 + 16);
      if (v3 == v9) {
        break;
      }
      if (v3 >= v9) {
        goto LABEL_32;
      }
      outlined init with copy of IDSLookupManager(v4 + 40 * v3 + 32, (uint64_t)v25);
      outlined init with take of UIMenuBuilder.Item?((uint64_t)v25, (uint64_t)&v27);
      if (!*((void *)&v28 + 1)) {
        goto LABEL_27;
      }
      uint64_t result = outlined init with take of Notice(&v27, (uint64_t)v30);
      if (!v5)
      {
        unint64_t v12 = v7[3];
        if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_35;
        }
        int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
        if (v13 <= 1) {
          uint64_t v14 = 1;
        }
        else {
          uint64_t v14 = v13;
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIMenuBuilder.Item>);
        Swift::String v15 = (void *)swift_allocObject();
        uint64_t v16 = (uint64_t)(_swift_stdlib_malloc_size(v15) - 32) / 40;
        v15[2] = v14;
        v15[3] = 2 * v16;
        unint64_t v17 = (unint64_t)(v15 + 4);
        unint64_t v18 = v7[3];
        unint64_t v19 = v18 >> 1;
        if (v7[2])
        {
          if (v15 != v7 || v17 >= (unint64_t)&v7[5 * v19 + 4]) {
            memmove(v15 + 4, v7 + 4, 40 * v19);
          }
          v7[2] = 0;
        }
        uint64_t v8 = v17 + 40 * v19;
        uint64_t v5 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - (v18 >> 1);
        uint64_t result = swift_release();
        uint64_t v7 = v15;
      }
      BOOL v21 = __OFSUB__(v5--, 1);
      if (v21) {
        goto LABEL_33;
      }
      ++v3;
      uint64_t result = outlined init with take of Notice(v30, v8);
      v8 += 40;
    }
    uint64_t v26 = 0;
    memset(v25, 0, sizeof(v25));
    uint64_t result = outlined destroy of UIMenuBuilder.Item?((uint64_t)v25);
LABEL_5:
    unint64_t v10 = *(void *)(a1 + 16);
    if (v6 == v10)
    {
      uint64_t v29 = 0;
      long long v27 = 0u;
      long long v28 = 0u;
LABEL_27:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = outlined destroy of UIMenuBuilder.Item?((uint64_t)&v27);
      unint64_t v22 = v7[3];
      if (v22 >= 2)
      {
        unint64_t v23 = v22 >> 1;
        BOOL v21 = __OFSUB__(v23, v5);
        unint64_t v24 = v23 - v5;
        if (v21) {
          goto LABEL_34;
        }
        v7[2] = v24;
      }
      return (uint64_t)v7;
    }
    if (v6 >= v10) {
      break;
    }
    uint64_t v11 = *(void *)(a1 + 8 * v6 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v3 = 0;
    uint64_t v4 = v11;
    ++v6;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for UIMenuBuilder()
{
  return &type metadata for UIMenuBuilder;
}

ValueMetadata *type metadata accessor for UIMenuDivider()
{
  return &type metadata for UIMenuDivider;
}

uint64_t outlined destroy of UIMenuBuilder.Item?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIMenuBuilder.Item?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with take of UIMenuBuilder.Item?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIMenuBuilder.Item?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C32DF46C()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned NSArray) -> ()(uint64_t a1)
{
  thunk for @escaping @callee_unowned @convention(block) (@unowned NSArray) -> ()(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C32DF4AC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:)(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (int *)v1[6];
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:)(a1, v4, v5, v6, v7, v8);
}

void specialized EffectsHandler.updateEffectsViews(localVideoEnabled:)(char a1)
{
  uint64_t v3 = MultiwayViewController.constraintController.getter();
  if (!v3) {
    return;
  }
  uint64_t v11 = (char *)v3;
  uint64_t v4 = MultiwayViewController.effectsBrowserViewController.getter();
  if (!v4)
  {
    uint64_t v5 = v11;
    goto LABEL_6;
  }
  id v10 = (id)v4;
  MultiwayViewController.effectsAvailabilityDidChange(_:)(a1 & 1);
  if (a1)
  {

    uint64_t v5 = v10;
LABEL_6:

    return;
  }
  uint64_t v6 = (uint64_t *)&v11[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState];
  swift_beginAccess();
  uint64_t v7 = *v6;
  if ((unint64_t)(*v6 - 1) < 3)
  {
    uint64_t v7 = 1;
  }
  else if ((unint64_t)(v7 - 4) < 3)
  {
    uint64_t v7 = 4;
  }
  objc_msgSend(v1, sel_setControlsState_animated_, v7, 1);
  id v8 = objc_msgSend(v10, sel_view);
  if (v8)
  {
    unint64_t v9 = v8;
    objc_msgSend(v8, sel_setAlpha_, 0.0);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall EffectsHandler.updateEffectsViews(localVideoEnabled:)(Swift::Bool localVideoEnabled)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = (*(uint64_t (**)())(v2 + 152))();
  if (!v6) {
    return;
  }
  uint64_t v16 = (char *)v6;
  uint64_t v7 = OUTLINED_FUNCTION_2_76();
  uint64_t v9 = v8(v7);
  if (!v9)
  {
    id v10 = v16;
    goto LABEL_6;
  }
  id v15 = (id)v9;
  (*(void (**)(Swift::Bool, uint64_t, uint64_t))(v3 + 168))(localVideoEnabled, v4, v3);
  if (localVideoEnabled)
  {

    id v10 = v15;
LABEL_6:

    return;
  }
  uint64_t v11 = (uint64_t *)&v16[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState];
  swift_beginAccess();
  uint64_t v12 = *v11;
  if ((unint64_t)(*v11 - 1) < 3)
  {
    uint64_t v12 = 1;
  }
  else if ((unint64_t)(v12 - 4) < 3)
  {
    uint64_t v12 = 4;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 160))(v12, 1, v4, v3);
  id v13 = objc_msgSend(v15, sel_view);
  if (v13)
  {
    uint64_t v14 = v13;
    objc_msgSend(v13, sel_setAlpha_, 0.0);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall EffectsHandler.wipeEffectsState()()
{
  if ((*(uint64_t (**)(void))(v0 + 32))())
  {
    uint64_t v1 = OUTLINED_FUNCTION_2_76();
    uint64_t v3 = v2(v1);
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      self;
      uint64_t v5 = (void *)swift_dynamicCastObjCClass();
      if (v5) {
        objc_msgSend(v5, sel_removeAllEffects);
      }
    }
    uint64_t v6 = OUTLINED_FUNCTION_2_76();
    id v8 = (void *)v7(v6);
    if (v8)
    {
      id v9 = v8;
      objc_msgSend(v8, sel_setMode_, 0);
    }
  }
}

Swift::Void __swiftcall EffectsHandler.handleAVCServerTimeout()()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  os_log(_:dso:log:type:_:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v22 = static OS_dispatch_queue.main.getter();
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = v4;
  void v6[3] = v3;
  v6[4] = v2;
  aBlock[4] = partial apply for closure #1 in EffectsHandler.handleAVCServerTimeout();
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_52;
  uint64_t v7 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = v5;
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v20 = (void *)v22;
  MEMORY[0x1C8773BA0](0, v13, v19, v7);
  _Block_release(v7);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v14);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
}

id specialized EffectsHandler.automation_setEffectsMode(enabled:)(char a1)
{
  OUTLINED_FUNCTION_3_11();
  id result = *v1;
  if (*v1) {
    return objc_msgSend(result, sel_setMode_, a1 & 1);
  }
  return result;
}

Swift::Void __swiftcall EffectsHandler.automation_setEffectsMode(enabled:)(Swift::Bool enabled)
{
  uint64_t v3 = OUTLINED_FUNCTION_1_101(enabled, v1);
  uint64_t v5 = (void *)v4(v3);
  if (v5)
  {
    id v6 = v5;
    objc_msgSend(v5, sel_setMode_, enabled);
  }
}

id specialized EffectsHandler.updateAVCEffects(with:)(unint64_t a1)
{
  OUTLINED_FUNCTION_3_11();
  id result = *v1;
  if (*v1)
  {
    if (a1 >= 3) {
      uint64_t v4 = 1;
    }
    else {
      uint64_t v4 = a1;
    }
    return objc_msgSend(result, sel_setEffectType_, v4);
  }
  return result;
}

void EffectsHandler.updateAVCEffects(with:)(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_1_101(a1, a2);
  uint64_t v5 = (void *)v4(v3);
  if (v5)
  {
    if (a1 >= 3) {
      uint64_t v6 = 1;
    }
    else {
      uint64_t v6 = a1;
    }
    id v7 = v5;
    objc_msgSend(v5, sel_setEffectType_, v6);
  }
}

uint64_t specialized EffectsHandler.setUpEffectsObjectsIfNecessary()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)MultiwayViewController.effectsViewController.getter();

  if (!v2)
  {
    type metadata accessor for CameraViewController();
    uint64_t v3 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithMode_, *MEMORY[0x1E4F57D80]);
    specialized EffectsHandler.setUpEffectsViews(using:)(v3);
  }
  uint64_t v4 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects];
  uint64_t result = swift_beginAccess();
  if (!*v4)
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t result = (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 144))();
    if (result)
    {
      uint64_t v6 = swift_dynamicCastObjCProtocolConditional();
      if (v6 && (uint64_t v7 = v6, swift_getObjectType(), (v8 = dynamic_cast_existential_1_conditional(v7)) != 0))
      {
        uint64_t v9 = v8;
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCEffects);
        swift_getObjectType();
        v1;
        id v10 = specialized AVCEffects.__allocating_init(delegate:)(v9);
        MultiwayViewController.avcEffects.setter(v10);
        uint64_t result = *v4;
        if (*v4) {
          return (uint64_t)objc_msgSend((id)result, sel_setMode_, 0);
        }
      }
      else
      {
        OUTLINED_FUNCTION_6_80();
        uint64_t result = OUTLINED_FUNCTION_2_87();
        __break(1u);
      }
    }
  }
  return result;
}

Swift::Void __swiftcall EffectsHandler.setUpEffectsObjectsIfNecessary()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(v0 + 40))();

  if (!v2)
  {
    type metadata accessor for CameraViewController();
    id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithMode_, *MEMORY[0x1E4F57D80]);
    OUTLINED_FUNCTION_5_87();
    v4();
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v1 + 88);
  uint64_t v6 = OUTLINED_FUNCTION_7_74();
  uint64_t v7 = (void *)v5(v6);

  if (!v7)
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 144))())
    {
      uint64_t v8 = swift_dynamicCastObjCProtocolConditional();
      if (v8 && (v9 = v8, swift_getObjectType(), (uint64_t v10 = dynamic_cast_existential_1_conditional(v9)) != 0))
      {
        uint64_t v11 = v10;
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCEffects);
        swift_getObjectType();
        swift_unknownObjectRetain();
        specialized AVCEffects.__allocating_init(delegate:)(v11);
        OUTLINED_FUNCTION_5_87();
        v12();
        uint64_t v13 = OUTLINED_FUNCTION_7_74();
        uint64_t v14 = (void *)v5(v13);
        if (v14)
        {
          uint64_t v15 = v14;
          objc_msgSend(v14, sel_setMode_, 0);
        }
      }
      else
      {
        OUTLINED_FUNCTION_6_80();
        OUTLINED_FUNCTION_2_87();
        __break(1u);
      }
    }
  }
}

void specialized EffectsHandler.setUpEffectsViews(using:)(char *a1)
{
  uint64_t v3 = MultiwayViewController.inCallControlsViewController.getter();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    objc_msgSend(a1, sel_setDelegate_, swift_dynamicCastObjCProtocolUnconditional());
    swift_getObjectType();
    dynamic_cast_existential_1_unconditional((uint64_t)v1);
    uint64_t v6 = v5;
    uint64_t v7 = &a1[OBJC_IVAR____TtC15ConversationKit20CameraViewController_cameraDelegate];
    swift_beginAccess();
    *((void *)v7 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v6;
    swift_unknownObjectWeakAssign();
    objc_msgSend(a1, sel_setUsesInternalCaptureSession_, 0);
    objc_msgSend(a1, sel_setShowsViewfinder_, 0);
    objc_msgSend(a1, sel_setEffectsPickerHidden_animated_, 1, 0);
    objc_msgSend(a1, sel_setEffectsPickerDrawer_, 0);
    id v8 = objc_msgSend(a1, sel_view);
    if (v8)
    {
      uint64_t v9 = v8;
      objc_msgSend(v8, sel_setAlpha_, 0.0);

      id v10 = objc_msgSend(a1, sel_view);
      if (v10)
      {
        uint64_t v11 = v10;
        objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

        uint64_t v12 = a1;
        MultiwayViewController.effectsViewController.setter(a1);
        id v13 = v1;
        objc_msgSend(v12, sel_willMoveToParentViewController_, 0);
        id v14 = objc_msgSend(v12, sel_view);
        if (v14)
        {
          uint64_t v15 = v14;
          objc_msgSend(v14, sel_removeFromSuperview);

          objc_msgSend(v12, sel_removeFromParentViewController);
          objc_msgSend(v13, sel_addChildViewController_, v12);
          uint64_t v16 = MultiwayViewController.localParticipantView.getter();
          if (v16)
          {
            uint64_t v17 = (void *)v16;
            type metadata accessor for LocalParticipantView();
            if (swift_dynamicCastClass())
            {
              uint64_t v18 = (UIView *)objc_msgSend(v12, sel_view);
              if (!v18)
              {
LABEL_24:
                __break(1u);
                return;
              }
              unint64_t v19 = v18;
              LocalParticipantView.addEffectsView(effectsView:)(v18);

              uint64_t v17 = v19;
            }
          }
          objc_msgSend(v12, sel_didMoveToParentViewController_, v13);

          uint64_t v20 = swift_dynamicCastObjCProtocolConditional();
          if (v20)
          {
            uint64_t v21 = v20;
            swift_getObjectType();
            uint64_t v22 = dynamic_cast_existential_1_conditional(v21);
            if (v22)
            {
              uint64_t v24 = v22;
              uint64_t v25 = v23;
              uint64_t ObjectType = swift_getObjectType();
              id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F57DA0]), sel_initWithDelegate_contentPresenter_, v12, v24);
              objc_msgSend(v26, sel_setContentPresenterDelegate_, v24);
              objc_msgSend(v13, sel_loadViewIfNeeded);
              id v27 = v26;
              MultiwayViewController.effectsBrowserViewController.setter(v26);
              long long v28 = v4;
              uint64_t v29 = *(void (**)(id, uint64_t, uint64_t))(v25 + 72);
              id v30 = v27;
              v29(v26, ObjectType, v25);
              uint64_t v4 = v28;
            }
          }
          uint64_t v31 = MultiwayViewController.constraintController.getter();
          if (!v31) {
            goto LABEL_17;
          }
          id v32 = (void *)v31;
          id v33 = v13;
          id v34 = objc_msgSend(v33, sel_view);
          if (v34)
          {
            uint64_t v35 = v34;
            id v36 = (void *)MultiwayViewController.localParticipantView.getter();
            id v37 = objc_msgSend(v12, sel_view);
            id v38 = (void *)MultiwayViewController.effectsControlsViewController.getter();
            MultiwayViewConstraintsController.updateConstraints(with:controlsViewController:localParticipantView:effectsView:effectsBrowserViewController:)((uint64_t)v35, v4, (uint64_t)v36, v37, v38);

            id v39 = objc_msgSend(v33, sel_view);
            if (v39)
            {
              id v40 = v39;
              objc_msgSend(v39, sel_layoutIfNeeded);

LABEL_17:
              return;
            }
            goto LABEL_23;
          }
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_21;
  }
}

void EffectsHandler.setUpEffectsViews(using:)(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2;
  uint64_t v56 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 144))(a2, a3);
  if (v56)
  {
    uint64_t v7 = swift_dynamicCastObjCProtocolConditional();
    if (!v7) {
      goto LABEL_31;
    }
    objc_msgSend(a1, sel_setDelegate_, v7);
    swift_getObjectType();
    if (!dynamic_cast_existential_1_conditional(v3)) {
      goto LABEL_31;
    }
    uint64_t v9 = v8;
    id v10 = &a1[OBJC_IVAR____TtC15ConversationKit20CameraViewController_cameraDelegate];
    swift_beginAccess();
    *((void *)v10 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v9;
    swift_unknownObjectWeakAssign();
    objc_msgSend(a1, sel_setUsesInternalCaptureSession_, 0);
    objc_msgSend(a1, sel_setShowsViewfinder_, 0);
    objc_msgSend(a1, sel_setEffectsPickerHidden_animated_, 1, 0);
    objc_msgSend(a1, sel_setEffectsPickerDrawer_, 0);
    uint64_t v11 = &selRef_ringButton;
    id v12 = objc_msgSend(a1, sel_view);
    if (v12)
    {
      id v13 = v12;
      objc_msgSend(v12, sel_setAlpha_, 0.0);

      id v14 = objc_msgSend(a1, sel_view);
      if (v14)
      {
        uint64_t v15 = v14;
        objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

        uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(a3 + 48);
        uint64_t v17 = a1;
        v16(a1, v5, a3);
        self;
        uint64_t v18 = swift_dynamicCastObjCClass();
        if (!v18) {
          goto LABEL_14;
        }
        unint64_t v19 = (void *)v18;
        swift_unknownObjectRetain();
        objc_msgSend(v17, sel_willMoveToParentViewController_, 0);
        id v20 = objc_msgSend(v17, sel_view);
        if (v20)
        {
          uint64_t v21 = v20;
          objc_msgSend(v20, sel_removeFromSuperview);

          objc_msgSend(v17, sel_removeFromParentViewController);
          objc_msgSend(v19, sel_addChildViewController_, v17);
          uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 128))(v5, a3);
          if (v22)
          {
            uint64_t v23 = (void *)v22;
            type metadata accessor for LocalParticipantView();
            if (swift_dynamicCastClass())
            {
              uint64_t v24 = (UIView *)objc_msgSend(v17, sel_view);
              if (!v24)
              {
LABEL_30:
                __break(1u);
LABEL_31:
                OUTLINED_FUNCTION_6_80();
                _assertionFailure(_:_:file:line:flags:)();
                __break(1u);
                return;
              }
              uint64_t v25 = v24;
              LocalParticipantView.addEffectsView(effectsView:)(v24);

              uint64_t v23 = v25;
            }
          }
          objc_msgSend(v17, sel_didMoveToParentViewController_, v19);
          swift_unknownObjectRelease();
LABEL_14:
          uint64_t v26 = swift_dynamicCastObjCProtocolConditional();
          uint64_t v55 = v17;
          if (v26)
          {
            uint64_t v27 = v26;
            swift_getObjectType();
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
            uint64_t v28 = dynamic_cast_existential_1_superclass_conditional(v27);
            if (v28)
            {
              uint64_t v30 = v28;
              uint64_t v31 = v29;
              uint64_t ObjectType = swift_getObjectType();
              id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F57DA0]), sel_initWithDelegate_contentPresenter_, v17, v30);
              objc_msgSend(v32, sel_setContentPresenterDelegate_, v30);
              (*(void (**)(id, uint64_t, uint64_t))(a3 + 176))(v32, v5, a3);
              uint64_t v33 = v5;
              id v34 = *(void (**)(id, uint64_t, uint64_t))(v31 + 72);
              id v35 = v32;
              v34(v32, ObjectType, v31);
              uint64_t v5 = v33;
              uint64_t v11 = (char **)0x1F6DD7000;
            }
          }
          self;
          uint64_t v36 = swift_dynamicCastObjCClass();
          if (!v36) {
            goto LABEL_23;
          }
          id v37 = (void *)v36;
          id v38 = v11;
          uint64_t v39 = v5;
          id v40 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 152);
          swift_unknownObjectRetain();
          uint64_t v41 = v39;
          uint64_t v42 = v40(v39, a3);
          if (!v42)
          {
            swift_unknownObjectRelease();
            goto LABEL_23;
          }
          id v43 = (void *)v42;
          uint64_t v44 = v38;
          id v45 = [v37 (SEL)v38 + 1944];
          if (v45)
          {
            char v46 = v45;
            uint64_t v47 = v41;
            float v48 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 128))(v41, a3);
            uint64_t v49 = v44;
            id v50 = [v55 (SEL)v44 + 1944];
            uint64_t v51 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 136))(v47, a3);
            MultiwayViewConstraintsController.updateConstraints(with:controlsViewController:localParticipantView:effectsView:effectsBrowserViewController:)((uint64_t)v46, v56, (uint64_t)v48, v50, v51);

            id v52 = [v37 (SEL)v49 + 1944];
            if (v52)
            {
              uint64_t v53 = v52;
              objc_msgSend(v52, sel_layoutIfNeeded);
              swift_unknownObjectRelease();

LABEL_23:
              return;
            }
            goto LABEL_29;
          }
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_27;
  }
}

void closure #1 in EffectsHandler.handleAVCServerTimeout()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 152))(a2, a3);
  if (v5)
  {
    uint64_t v6 = (char *)v5;
    (*(void (**)(void, uint64_t, uint64_t))(a3 + 168))(0, a2, a3);
    uint64_t v7 = &v6[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState];
    swift_beginAccess();
    if (*(void *)v7 <= 6uLL && ((1 << *(void *)v7) & 0x6C) != 0) {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 160))(1, 1, a2, a3);
    }
    (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  }
}

uint64_t sub_1C32E0D4C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in EffectsHandler.handleAVCServerTimeout()()
{
  closure #1 in EffectsHandler.handleAVCServerTimeout()(v0[4], v0[2], v0[3]);
}

id specialized AVCEffects.__allocating_init(delegate:)(uint64_t a1)
{
  id v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithDelegate_, a1);
  swift_unknownObjectRelease();
  return v1;
}

uint64_t dynamic_cast_existential_1_superclass_conditional(uint64_t a1)
{
  uint64_t result = swift_dynamicCastMetatype();
  if (result)
  {
    if (swift_conformsToProtocol2()) {
      return a1;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of EffectsHandler.updateEffectsViews(localVideoEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of EffectsHandler.wipeEffectsState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EffectsHandler.removeAllEffectsObjects()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EffectsHandler.effectsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EffectsHandler.effectsViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EffectsHandler.effectsViewController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EffectsHandler.effectsViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of EffectsHandler.effectsBrowserViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EffectsHandler.effectsBrowserViewController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of EffectsHandler.effectsBrowserViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of EffectsHandler.avcEffects.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EffectsHandler.avcEffects.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of EffectsHandler.avcEffects.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of EffectsHandler.handleAVCServerTimeout()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of EffectsHandler.automation_setEffectsMode(enabled:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of EffectsHandler.localParticipantView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of EffectsHandler.effectsControlsViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of EffectsHandler.inCallControlsViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of EffectsHandler.constraintController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of EffectsHandler.setControlsState(_:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

uint64_t dispatch thunk of EffectsHandler.effectsAvailabilityDidChange(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of EffectsHandler.embedEffectsBrowserViewController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of EffectsHandler.updateAVCEffects(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of EffectsHandler.setUpEffectsObjectsIfNecessary()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of EffectsHandler.setUpEffectsViews(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dynamic_cast_existential_1_unconditional(uint64_t a1)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    return a1;
  }
  __break(1u);
  return result;
}

double static SystemApertureLayoutMargins.concentric.getter@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

id outlined copy of SystemApertureLayoutMargins(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1) {
    return result;
  }
  return result;
}

void destroy for SystemApertureLayoutMargins(uint64_t a1)
{
}

void outlined consume of SystemApertureLayoutMargins(id a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1) {
}
  }

uint64_t initializeWithCopy for SystemApertureLayoutMargins(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  outlined copy of SystemApertureLayoutMargins(*(id *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for SystemApertureLayoutMargins(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  outlined copy of SystemApertureLayoutMargins(*(id *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  outlined consume of SystemApertureLayoutMargins(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SystemApertureLayoutMargins(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  outlined consume of SystemApertureLayoutMargins(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemApertureLayoutMargins(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemApertureLayoutMargins(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTag for SystemApertureLayoutMargins(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t destructiveInjectEnumTag for SystemApertureLayoutMargins(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SystemApertureLayoutMargins()
{
  return &type metadata for SystemApertureLayoutMargins;
}

uint64_t AudioMuteButtonViewModel.__allocating_init(service:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  AudioMuteButtonViewModel.init(service:)(a1);
  return v2;
}

uint64_t AudioMuteButtonViewModel.init(service:)(long long *a1)
{
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  outlined init with take of Notice(a1, v1 + 16);
  return v1;
}

uint64_t AudioMuteButtonViewModel.controlType.getter()
{
  return AudioMuteButtonViewModel.config.getter();
}

uint64_t AudioMuteButtonViewModel.config.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Font.Leading();
  OUTLINED_FUNCTION_4();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_21();
  uint64_t v8 = v7 - v6;
  if (v1[8])
  {
    uint64_t v9 = v1[8];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = swift_allocObject();
    strcpy((char *)(v10 + 16), "mic.slash.fill");
    *(unsigned char *)(v10 + 3ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = -18;
    uint64_t v11 = static Color.white.getter();
    static Font.subheadline.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v8, *MEMORY[0x1E4F3E0F8], v2);
    uint64_t v12 = Font.leading(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
    id v13 = self;
    id v14 = objc_msgSend(v13, sel_conversationKit, xmmword_1C376AA10, 0x401C000000000000, v11, v12, _s15ConversationKit12SystemSymbolVAASbRszlE19catalystCallControl4name5color15backgroundColorACySbGSS_7SwiftUI0K0VSbcAKSbctFZSSSbcfU_TA_0, v10, specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color), 0, specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color), 0, closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:), 0, partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:), 0, partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:), 0);
    v28._object = (void *)0xE000000000000000;
    OUTLINED_FUNCTION_4_6();
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v28._uint64_t countAndFlagsBits = 0;
    Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v14, v15, v28);

    v19.super.Class isa = (Class)objc_msgSend(v13, sel_conversationKit);
    v29._object = (void *)0xE000000000000000;
    OUTLINED_FUNCTION_4_6();
    v20._uint64_t countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    v29._uint64_t countAndFlagsBits = 0;
    Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, v19, v20, v29);

    uint64_t v24 = v1[5];
    uint64_t v25 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v24);
    LOBYTE(v19.super.isa) = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 168))(v24, v25);
    swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<Bool>);
    swift_allocObject();
    uint64_t v9 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)((uint64_t)&v27, v18._countAndFlagsBits, (uint64_t)v18._object, 0, v23._countAndFlagsBits, (uint64_t)v23._object, 0xD000000000000013, 0x80000001C37971D0, (uint64_t)v19.super.isa & 1, 1);
    v1[8] = v9;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v9;
}

BOOL AudioMuteButtonViewModel.enabled(for:)(uint64_t a1)
{
  return (a1 & 0xE100000000) != 0x100000000;
}

Swift::Void __swiftcall AudioMuteButtonViewModel.onAppear()()
{
  AudioMuteButtonViewModel.observeMutedStates()();
  AudioMuteButtonViewModel.updateLabels()();
}

Swift::Void __swiftcall AudioMuteButtonViewModel.observeMutedStates()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>);
  OUTLINED_FUNCTION_4();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_21();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 176))(v9, v10);
  id v17 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1F4188790](v11 - 8);
  OUTLINED_FUNCTION_21();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v14, 1, 1, v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  type metadata accessor for NSRunLoop();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, (uint64_t *)&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  Publisher.receive<A>(on:options:)();
  outlined destroy of NSRunLoop.SchedulerOptions?(v14);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>);
  uint64_t v16 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  v1[7] = v16;
  swift_release();
}

uint64_t AudioMuteButtonViewModel.updateLabels()()
{
  ((void (*)(void))AudioMuteButtonViewModel.config.getter)();
  char v0 = specialized StateHolder.state.getter();
  uint64_t v1 = swift_release();
  AudioMuteButtonViewModel.config.getter(v1);
  id v2 = objc_msgSend(self, sel_conversationKit);
  unint64_t v9 = 0xE000000000000000;
  if (v0)
  {
    unint64_t v3 = 0x80000001C37A60C0;
    unint64_t v4 = 0xD000000000000010;
  }
  else
  {
    unint64_t v4 = 0x4D5F524557415244;
    unint64_t v3 = 0xEE0058415F455455;
  }
  v5.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  uint64_t v7 = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, v5, (NSBundle)v2, v6, *(Swift::String *)(&v9 - 1));

  specialized IconButtonConfig.accessibilityLabel.setter();
  return swift_release();
}

Swift::Void __swiftcall AudioMuteButtonViewModel.didTap()()
{
  AudioMuteButtonViewModel.config.getter();
  char v1 = specialized StateHolder.state.getter();
  specialized StateHolder.state.setter((v1 & 1) == 0);
  swift_release();
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  AudioMuteButtonViewModel.config.getter();
  char v4 = specialized StateHolder.state.getter();
  swift_release();
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 184))(v4 & 1, v2, v3);
  AudioMuteButtonViewModel.updateLabels()();
}

uint64_t closure #1 in AudioMuteButtonViewModel.observeMutedStates()(unsigned __int8 *a1)
{
  int v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    AudioMuteButtonViewModel.config.getter();
    int v3 = specialized StateHolder.state.getter() & 1;
    swift_release();
    if (v1 != v3)
    {
      AudioMuteButtonViewModel.config.getter();
      specialized StateHolder.state.setter(v1);
      swift_release();
      AudioMuteButtonViewModel.updateLabels()();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C32E1C64()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C32E1C9C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in AudioMuteButtonViewModel.config.getter(char a1)
{
  if (a1) {
    return static Color.red.getter();
  }
  else {
    return static Color.white.getter();
  }
}

uint64_t closure #2 in AudioMuteButtonViewModel.config.getter()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    AudioMuteButtonViewModel.didTap()();
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #2 in AudioMuteButtonViewModel.config.getter()
{
  return closure #2 in AudioMuteButtonViewModel.config.getter();
}

uint64_t AudioMuteButtonViewModel.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  return v0;
}

uint64_t AudioMuteButtonViewModel.__deallocating_deinit()
{
  AudioMuteButtonViewModel.deinit();
  return swift_deallocClassInstance();
}

BOOL protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance AudioMuteButtonViewModel(uint64_t a1)
{
  return AudioMuteButtonViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL);
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance AudioMuteButtonViewModel()
{
  return AudioMuteButtonViewModel.controlType.getter();
}

void protocol witness for CallControlsButtonViewModel.onAppear() in conformance AudioMuteButtonViewModel()
{
}

uint64_t partial apply for closure #1 in AudioMuteButtonViewModel.observeMutedStates()(unsigned __int8 *a1)
{
  return closure #1 in AudioMuteButtonViewModel.observeMutedStates()(a1);
}

uint64_t sub_1C32E1E20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AudioMuteButtonViewModel.config.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for AudioMuteButtonViewModel()
{
  return self;
}

uint64_t method lookup function for AudioMuteButtonViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudioMuteButtonViewModel);
}

uint64_t dispatch thunk of AudioMuteButtonViewModel.__allocating_init(service:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, __int16 a10)
{
  void (*v29)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  void v37[3];
  uint64_t v38;
  uint64_t v39;
  long long v40;
  uint64_t v41;

  uint64_t v11 = v10;
  uint64_t v19 = a2;
  outlined init with copy of Environment<DynamicTypeSize>.Content(a2, (uint64_t)&v40, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  if (v41)
  {
    outlined init with take of Notice(&v40, (uint64_t)v37);
    id v35 = a1;
    uint64_t v36 = a8;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    uint64_t v21 = v19;
    uint64_t v22 = a3;
    uint64_t v23 = a4;
    uint64_t v24 = a7;
    char v25 = a6;
    uint64_t v26 = a5;
    uint64_t v27 = v38;
    uint64_t v28 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    Swift::String v29 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v28 + 8);
    uint64_t v30 = v27;
    a7 = v24;
    a4 = v23;
    a3 = v22;
    uint64_t v19 = v21;
    a1 = v35;
    uint64_t v31 = v28;
    a5 = v26;
    a6 = v25;
    v29(&v40, v30, v31);
    a8 = v36;
    id v32 = static UIImage.symbolImage(for:)((uint64_t)&v40);
    outlined release of SymbolImageDescription((uint64_t)&v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v40, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
    id v32 = 0;
  }
  uint64_t v33 = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, double, _WORD))(v11 + 456))(a1, v32, a3, a4, a5, a6 & 1, a7, a8, a9, a10 & 0x101);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v19, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  return v33;
}

uint64_t InCallControlButtonConfiguration.Regular.init(contentColor:discContentColor:disc:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = a5 & 1;
  return result;
}

double InCallControlButtonConfiguration.init(regular:flat:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(a1, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for InCallControlButtonConfiguration.Regular?);
  char v9 = v13;
  double result = *(double *)v12;
  long long v11 = v12[1];
  *(_OWORD *)a5 = v12[0];
  *(_OWORD *)(a5 + 16) = v11;
  *(unsigned char *)(a5 + 32) = v9;
  *(void *)(a5 + 40) = a2;
  *(void *)(a5 + 48) = a3;
  *(void *)(a5 + 56) = a4;
  return result;
}

uint64_t InCallControlButton.__allocating_init(style:imageName:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, char a10)
{
  uint64_t v18 = a2;
  outlined init with copy of Environment<DynamicTypeSize>.Content(a2, (uint64_t)&v38, &demangling cache variable for type metadata for ImageName?);
  if (v39)
  {
    outlined init with take of Notice(&v38, (uint64_t)v40);
    uint64_t v20 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    uint64_t v37 = v18;
    uint64_t v21 = a1;
    uint64_t v22 = a5;
    uint64_t v23 = a8;
    char v36 = a6;
    uint64_t v24 = a3;
    uint64_t v25 = a4;
    uint64_t v26 = a7;
    uint64_t v27 = v41;
    uint64_t v28 = v42;
    Swift::String v29 = __swift_project_boxed_opaque_existential_1(v40, v41);
    uint64_t v30 = v27;
    a8 = v23;
    a5 = v22;
    a1 = v21;
    uint64_t v18 = v37;
    uint64_t v31 = v28;
    a7 = v26;
    a4 = v25;
    a3 = v24;
    a6 = v36;
    uint64_t v32 = specialized static UIImage.image(named:)((uint64_t)v29, v20, v30, v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v38, &demangling cache variable for type metadata for ImageName?);
    uint64_t v32 = 0;
  }
  HIBYTE(v35) = 1;
  LOBYTE(v35) = a10 & 1;
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, double, __int16))(v10 + 456))(a1, v32, a3, a4, a5, a6 & 1, a7, a8, a9, v35);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v18, &demangling cache variable for type metadata for ImageName?);
  return v33;
}

uint64_t key path getter for InCallControlButton.callbackCancellable : InCallControlButton@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xD0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for InCallControlButton.callbackCancellable : InCallControlButton(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xD8);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t InCallControlButton.callbackCancellable.getter()
{
  return swift_retain();
}

uint64_t InCallControlButton.callbackCancellable.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_callbackCancellable);
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*InCallControlButton.callbackCancellable.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

void *InCallControlButton.imageView.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView);
  id v2 = v1;
  return v1;
}

uint64_t InCallControlButton.style.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style);
}

void *InCallControlButton.label.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  id v2 = v1;
  return v1;
}

id InCallControlButton.discView.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView);
}

uint64_t key path getter for InCallControlButton.image : InCallControlButton@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x118))();
  *a2 = result;
  return result;
}

uint64_t key path setter for InCallControlButton.image : InCallControlButton(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x120);
  id v4 = *a1;
  return v3(v2);
}

void *InCallControlButton.image.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  id v2 = v1;
  return v1;
}

void InCallControlButton.image.setter(void *a1)
{
  OUTLINED_FUNCTION_4_10();
  uint64_t v3 = *v1;
  void *v1 = a1;
  id v4 = a1;

  InCallControlButton.updateImage()();
  InCallControlButton.updateColors()();
}

void (*InCallControlButton.image.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return InCallControlButton.image.modify;
}

void InCallControlButton.image.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    InCallControlButton.updateImage()();
    InCallControlButton.updateColors()();
  }
}

uint64_t InCallControlButton.imageLoadingTask.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageLoadingTask);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageLoadingTask) = a1;
  swift_retain();
  if (v2)
  {
    MEMORY[0x1C8773690](v2, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    swift_release();
  }
  return swift_release();
}

void InCallControlButton.updateImage()()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v2 - 8);
  OUTLINED_FUNCTION_17_0();
  uint64_t v3 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView);
  if (v3)
  {
    id v4 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x118);
    id v12 = v3;
    uint64_t v5 = v4();
    if (v5)
    {
      Swift::String v6 = (void *)v5;
      static TaskPriority.userInitiated.getter();
      uint64_t v7 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload(v0, 0, 1, v7);
      uint64_t v8 = swift_allocObject();
      swift_unknownObjectWeakInit();
      char v9 = (void *)swift_allocObject();
      _OWORD v9[2] = 0;
      void v9[3] = 0;
      v9[4] = v6;
      v9[5] = v8;
      id v10 = v6;
      uint64_t v11 = _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5(v0, (uint64_t)&async function pointer to partial apply for closure #1 in InCallControlButton.updateImage(), (uint64_t)v9);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0, &demangling cache variable for type metadata for TaskPriority?);
      InCallControlButton.imageLoadingTask.setter(v11);
    }
    else
    {
      InCallControlButton.imageLoadingTask.setter(0);
      objc_msgSend(v12, sel_setImage_, 0);
    }
  }
}

uint64_t closure #1 in InCallControlButton.updateImage()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 56) = a5;
  return MEMORY[0x1F4188298](closure #1 in InCallControlButton.updateImage(), 0, 0);
}

uint64_t closure #1 in InCallControlButton.updateImage()()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_imageByPreparingForDisplay);
  if (!v1) {
    id v1 = *(id *)(v0 + 48);
  }
  *(void *)(v0 + 64) = v1;
  uint64_t v2 = *(void *)(v0 + 56) + 16;
  swift_beginAccess();
  uint64_t v3 = (void *)MEMORY[0x1C8776240](v2);
  OUTLINED_FUNCTION_23_0();
  swift_unknownObjectWeakInit();

  type metadata accessor for MainActor();
  *(void *)(v0 + 72) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in InCallControlButton.updateImage(), v5, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_23_0();
  specialized closure #1 in closure #1 in InCallControlButton.updateImage()(v0, v1);
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4188298](closure #1 in InCallControlButton.updateImage(), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void specialized closure #1 in closure #1 in InCallControlButton.updateImage()(uint64_t a1, uint64_t a2)
{
  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v4 = (void *)MEMORY[0x1C8776240](a1);
    if (v4)
    {
      uint64_t v5 = v4;
      objc_msgSend(v4, sel_setImage_, a2);
    }
  }
}

uint64_t key path getter for InCallControlButton.symbolDescription : InCallControlButton@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x150))(v4);
  return outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v4, a2, &demangling cache variable for type metadata for SymbolImageDescription?);
}

uint64_t key path setter for InCallControlButton.symbolDescription : InCallControlButton(uint64_t a1, void **a2)
{
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(a1, (uint64_t)v5, &demangling cache variable for type metadata for SymbolImageDescription?);
  uint64_t v3 = *(uint64_t (**)(void *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x158);
  outlined retain of SymbolImageDescription?(v5, (void (*)(void, void, void, void, void, void, void, void))outlined copy of SymbolImageDescription?);
  return v3(v5);
}

void InCallControlButton.symbolDescription.didset(void *a1)
{
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)a1, (uint64_t)v37, &demangling cache variable for type metadata for SymbolImageDescription?);
  uint64_t v14 = v37[0];
  uint64_t v15 = v37[1];
  uint64_t v3 = v37[4];
  uint64_t v16 = v37[2];
  id v17 = (void *)v37[3];
  uint64_t v18 = v37[5];
  uint64_t v19 = v37[6];
  uint64_t v20 = (void *)v37[7];
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_symbolDescription);
  swift_beginAccess();
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  uint64_t v8 = v4[2];
  uint64_t v7 = (void *)v4[3];
  uint64_t v10 = v4[4];
  uint64_t v9 = v4[5];
  uint64_t v11 = v4[6];
  id v12 = (void *)v4[7];
  if (!v5)
  {
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)a1, (uint64_t)&v40, &demangling cache variable for type metadata for SymbolImageDescription?);
    if (!v41) {
      return;
    }
    goto LABEL_6;
  }
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)a1, (uint64_t)v38, &demangling cache variable for type metadata for SymbolImageDescription?);
  if (!v39)
  {
LABEL_6:
    uint64_t v21 = v6;
    uint64_t v22 = v5;
    uint64_t v23 = v8;
    uint64_t v24 = v7;
    uint64_t v25 = v10;
    uint64_t v26 = v9;
    uint64_t v27 = v11;
    uint64_t v28 = v12;
    uint64_t v29 = v14;
    uint64_t v30 = v15;
    uint64_t v31 = v16;
    uint64_t v32 = v17;
    uint64_t v33 = v3;
    uint64_t v34 = v18;
    uint64_t v35 = v19;
    char v36 = v20;
    outlined copy of SymbolImageDescription?(v6, v5, v8, v7, v10, v9, v11, v12);
    outlined retain of SymbolImageDescription?(a1, (void (*)(void, void, void, void, void, void, void, void))outlined copy of SymbolImageDescription?);
    outlined release of (SymbolImageDescription?, SymbolImageDescription?)((uint64_t)&v21);
    goto LABEL_7;
  }
  uint64_t v21 = v14;
  uint64_t v22 = v15;
  uint64_t v23 = v16;
  uint64_t v24 = v17;
  LOWORD(v25) = v3 & 0x101;
  uint64_t v26 = v18;
  LOBYTE(v27) = v19 & 1;
  uint64_t v28 = v20;
  uint64_t v40 = v6;
  uint64_t v41 = v5;
  uint64_t v42 = v8;
  id v43 = v7;
  __int16 v44 = v10 & 0x101;
  uint64_t v45 = v9;
  char v46 = v11 & 1;
  uint64_t v47 = v12;
  outlined copy of SymbolImageDescription?(v6, v5, v8, v7, v10, v9, v11, v12);
  outlined retain of SymbolImageDescription?(a1, (void (*)(void, void, void, void, void, void, void, void))outlined copy of SymbolImageDescription?);
  char v13 = static SymbolImageDescription.== infix(_:_:)((uint64_t)&v40, (uint64_t)&v21);
  outlined retain of SymbolImageDescription?(a1, (void (*)(void, void, void, void, void, void, void, void))outlined consume of SymbolImageDescription?);
  outlined consume of SymbolImageDescription?(v6, v5, v8, v7, v10, v9, v11, v12);
  if ((v13 & 1) == 0) {
LABEL_7:
  }
    InCallControlButton.updateSymbol()();
}

void InCallControlButton.symbolDescription.getter(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_symbolDescription);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = (void *)v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v11 = v3[6];
  uint64_t v10 = (void *)v3[7];
  outlined copy of SymbolImageDescription?(v4, v5, v6, v7, v8, v9, v11, v10);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = (uint64_t)v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v11;
  a1[7] = (uint64_t)v10;
}

void *InCallControlButton.symbolDescription.setter(void *a1)
{
  OUTLINED_FUNCTION_4_10();
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v1, (uint64_t)v12, &demangling cache variable for type metadata for SymbolImageDescription?);
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = (void *)v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v10 = v1[6];
  uint64_t v9 = (void *)v1[7];
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)a1, (uint64_t)v1, &demangling cache variable for type metadata for SymbolImageDescription?);
  outlined retain of SymbolImageDescription?(v12, (void (*)(void, void, void, void, void, void, void, void))outlined copy of SymbolImageDescription?);
  outlined retain of SymbolImageDescription?(a1, (void (*)(void, void, void, void, void, void, void, void))outlined copy of SymbolImageDescription?);
  outlined consume of SymbolImageDescription?(v3, v4, v5, v6, v7, v8, v10, v9);
  InCallControlButton.symbolDescription.didset(v12);
  outlined retain of SymbolImageDescription?(a1, (void (*)(void, void, void, void, void, void, void, void))outlined consume of SymbolImageDescription?);
  return outlined retain of SymbolImageDescription?(v12, (void (*)(void, void, void, void, void, void, void, void))outlined consume of SymbolImageDescription?);
}

void (*InCallControlButton.symbolDescription.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0xE0uLL);
  *a1 = v3;
  v3[27] = v1;
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_symbolDescription);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v7 = v4[2];
  uint64_t v8 = (void *)v4[3];
  uint64_t v9 = v4[4];
  uint64_t v10 = v4[5];
  uint64_t v11 = v4[6];
  id v12 = (void *)v4[7];
  v3[16] = *v4;
  v3[17] = v6;
  v3 += 16;
  v3[2] = v7;
  v3[3] = v8;
  v3[4] = v9;
  void v3[5] = v10;
  v3[6] = v11;
  v3[7] = v12;
  outlined copy of SymbolImageDescription?(v5, v6, v7, v8, v9, v10, v11, v12);
  return InCallControlButton.symbolDescription.modify;
}

void InCallControlButton.symbolDescription.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a1 + 128;
  if (a2)
  {
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v3, v2, &demangling cache variable for type metadata for SymbolImageDescription?);
    outlined retain of SymbolImageDescription?((void *)v2, (void (*)(void, void, void, void, void, void, void, void))outlined copy of SymbolImageDescription?);
    InCallControlButton.symbolDescription.setter((void *)v2);
    outlined consume of SymbolImageDescription?(*(void *)(v2 + 128), *(void *)(v2 + 136), *(void *)(v2 + 144), *(void **)(v2 + 152), *(void *)(v2 + 160), *(void *)(v2 + 168), *(void *)(v2 + 176), *(void **)(v2 + 184));
  }
  else
  {
    outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v3, v2 + 64, &demangling cache variable for type metadata for SymbolImageDescription?);
    InCallControlButton.symbolDescription.setter((void *)(v2 + 64));
  }
  free((void *)v2);
}

uint64_t key path getter for InCallControlButton.text : InCallControlButton@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x168))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for InCallControlButton.text : InCallControlButton(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x170);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t InCallControlButton.text.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  if (!v1) {
    return 0;
  }
  id v2 = objc_msgSend(v1, sel_text);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

void InCallControlButton.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  if (v3)
  {
    if (a2)
    {
      uint64_t v4 = (void *)MEMORY[0x1C87730B0](a1, a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = 0;
    }
    objc_msgSend(v3, sel_setText_, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  InCallControlButton.hyphenateLabelText()();
}

void (*InCallControlButton.text.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = InCallControlButton.text.getter();
  a1[1] = v3;
  return InCallControlButton.text.modify;
}

void InCallControlButton.text.modify(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    InCallControlButton.text.setter(v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    InCallControlButton.text.setter(*a1, v2);
  }
}

uint64_t key path getter for InCallControlButton.colorConfiguration : InCallControlButton@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x180))();
  *a2 = result;
  return result;
}

uint64_t key path setter for InCallControlButton.colorConfiguration : InCallControlButton(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x188);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t InCallControlButton.colorConfiguration.getter()
{
  return swift_bridgeObjectRetain();
}

void InCallControlButton.colorConfiguration.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_10();
  void *v1 = a1;
  swift_bridgeObjectRelease();
  InCallControlButton.updateColors()();
}

void (*InCallControlButton.colorConfiguration.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return InCallControlButton.colorConfiguration.modify;
}

void InCallControlButton.colorConfiguration.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    InCallControlButton.updateColors()();
  }
}

id InCallControlButton.isSelected.getter()
{
  return InCallControlButton.isSelected.getter((SEL *)&selRef_isSelected);
}

void *InCallControlButton.isSelected.setter(char a1)
{
  uint64_t v3 = (objc_class *)type metadata accessor for InCallControlButton();
  v7.receiver = v1;
  v7.super_class = v3;
  char v4 = objc_msgSendSuper2(&v7, sel_isSelected);
  v6.receiver = v1;
  v6.super_class = v3;
  objc_msgSendSuper2(&v6, sel_setSelected_, a1 & 1);
  return InCallControlButton.isSelected.didset(v4);
}

void *InCallControlButton.isSelected.didset(char a1)
{
  int v2 = a1 & 1;
  uint64_t result = objc_msgSend(v1, sel_isSelected);
  if (result != v2)
  {
    InCallControlButton.updateColors()();
    return InCallControlButton.updateSymbol()();
  }
  return result;
}

id InCallControlButton.isHighlighted.getter()
{
  return InCallControlButton.isSelected.getter((SEL *)&selRef_isHighlighted);
}

void InCallControlButton.isHighlighted.setter(char a1)
{
}

id InCallControlButton.isEnabled.getter()
{
  return InCallControlButton.isSelected.getter((SEL *)&selRef_isEnabled);
}

id InCallControlButton.isSelected.getter(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for InCallControlButton();
  return objc_msgSendSuper2(&v4, *a1);
}

void InCallControlButton.isEnabled.setter(char a1)
{
}

void InCallControlButton.isHighlighted.setter(char a1, SEL *a2)
{
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for InCallControlButton();
  objc_msgSendSuper2(&v5, *a2, a1 & 1);
  InCallControlButton.updateColors()();
}

void key path getter for InCallControlButton.cnkContentAlpha : InCallControlButton(void **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x198))();
}

uint64_t key path setter for InCallControlButton.cnkContentAlpha : InCallControlButton(double *a1, void **a2)
{
  return (*(uint64_t (**)(double))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x1A0))(*a1);
}

id InCallControlButton.cnkContentAlpha.didset()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C376A6F0;
  int v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView);
  *(void *)(inited + 32) = v2;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView);
  *(void *)(inited + 40) = v3;
  objc_super v4 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView);
  *(void *)(inited + 48) = v4;
  objc_super v5 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  *(void *)(inited + 56) = v5;
  uint64_t v21 = (void *)inited;
  id result = (id)specialized Array._endMutation()();
  unint64_t v7 = v21[2];
  if (!v7)
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  uint64_t v8 = (double *)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_cnkContentAlpha);
  uint64_t v9 = (void *)v21[4];
  if (v9)
  {
    swift_beginAccess();
    double v10 = *v8;
    id v11 = v5;
    id v12 = v2;
    id v13 = v3;
    id v14 = v4;
    id result = objc_msgSend(v9, sel_setAlpha_, v10);
    unint64_t v7 = v21[2];
  }
  else
  {
    id v15 = v5;
    id v16 = v2;
    id v17 = v3;
    id result = v4;
  }
  if (v7 < 2) {
    goto LABEL_16;
  }
  uint64_t v18 = (void *)v21[5];
  if (v18)
  {
    swift_beginAccess();
    id result = objc_msgSend(v18, sel_setAlpha_, *v8);
    unint64_t v7 = v21[2];
  }
  if (v7 < 3) {
    goto LABEL_17;
  }
  uint64_t v19 = (void *)v21[6];
  if (v19)
  {
    swift_beginAccess();
    id result = objc_msgSend(v19, sel_setAlpha_, *v8);
    unint64_t v7 = v21[2];
  }
  if (v7 < 4) {
    goto LABEL_18;
  }
  uint64_t v20 = (void *)v21[7];
  if (v20)
  {
    swift_beginAccess();
    objc_msgSend(v20, sel_setAlpha_, *v8);
  }
  return (id)swift_bridgeObjectRelease();
}

double InCallControlButton.cnkContentAlpha.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *(double *)v0;
}

id InCallControlButton.cnkContentAlpha.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_cnkContentAlpha);
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  return InCallControlButton.cnkContentAlpha.didset();
}

id (*InCallControlButton.cnkContentAlpha.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return InCallControlButton.cnkContentAlpha.modify;
}

id InCallControlButton.cnkContentAlpha.modify(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return InCallControlButton.cnkContentAlpha.didset();
  }
  return result;
}

uint64_t key path getter for InCallControlButton.menuDataSource : InCallControlButton@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x1B0))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for InCallControlButton.menuDataSource : InCallControlButton(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x1B8);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

id InCallControlButton.menuDataSource.didset()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_menuDataSource];
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2) {
    swift_unknownObjectRelease();
  }
  objc_msgSend(v0, sel_setContextMenuInteractionEnabled_, v2 != 0);
  uint64_t v3 = MEMORY[0x1C8776240](v1);
  if (v3) {
    swift_unknownObjectRelease();
  }
  return objc_msgSend(v0, sel_setShowsMenuAsPrimaryAction_, v3 != 0);
}

uint64_t InCallControlButton.menuDataSource.getter()
{
  OUTLINED_FUNCTION_5_4();
  return MEMORY[0x1C8776240](v0);
}

uint64_t InCallControlButton.menuDataSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_menuDataSource;
  OUTLINED_FUNCTION_11_0();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  InCallControlButton.menuDataSource.didset();
  return swift_unknownObjectRelease();
}

void (*InCallControlButton.menuDataSource.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_menuDataSource;
  void v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlButton.menuDataSource.modify;
}

void InCallControlButton.menuDataSource.modify(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
    InCallControlButton.menuDataSource.didset();
  }
  free(v3);
}

char *InCallControlButton.__allocating_init(style:image:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(char *a1, void *a2, uint64_t a3, uint64_t *a4, int a5, int a6, uint64_t a7, uint64_t a8, double a9, char a10, char a11)
{
  id v19 = objc_allocWithZone(v11);
  return InCallControlButton.init(style:image:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(a1, a2, a3, a4, a9, v20, v21, a7, a8, a10, a11);
}

char *InCallControlButton.init(style:image:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(char *a1, void *a2, uint64_t a3, uint64_t *a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  id v12 = v11;
  *(void *)&v11[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_callbackCancellable] = 0;
  id v16 = (char *)OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView;
  *(void *)&v11[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView] = 0;
  uint64_t v17 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView;
  *(void *)&v11[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView] = 0;
  uint64_t v18 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_paragraphStyle;
  id v19 = objc_allocWithZone(MEMORY[0x1E4FB0848]);
  uint64_t v20 = (char *)v12;
  id v21 = objc_msgSend(v19, sel_init);
  LODWORD(v22) = 1.0;
  objc_msgSend(v21, sel_setHyphenationFactor_, v22);
  objc_msgSend(v21, sel_setAlignment_, 1);
  *(void *)((char *)v12 + v18) = v21;
  uint64_t v23 = (void **)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_image];
  *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_image] = 0;
  *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageLoadingTask] = 0;
  uint64_t v24 = &v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_symbolDescription];
  *(_OWORD *)uint64_t v24 = 0u;
  *((_OWORD *)v24 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0u;
  *((_OWORD *)v24 + 2) = 0u;
  *((_OWORD *)v24 + 3) = 0u;
  *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_cnkContentAlpha] = 0x3FF0000000000000;
  *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_menuDataSource + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style] = a1;
  if ((unint64_t)a1 > 6)
  {
    unint64_t v149 = 0;
    unint64_t v150 = 0xE000000000000000;
    _StringGuts.grow(_:)(70);
    v128._uint64_t countAndFlagsBits = 0xD000000000000044;
    v128._object = (void *)0x80000001C37A6110;
    String.append(_:)(v128);
    unint64_t v147 = (unint64_t)a1;
    v129._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v129);
    swift_bridgeObjectRelease();
LABEL_100:
    OUTLINED_FUNCTION_2_88();
    __break(1u);
    JUMPOUT(0x1C32E5110);
  }
  uint64_t v25 = &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService;
  if (a1 == (char *)3)
  {
    v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_isUsingVisualEffects] = 0;
    goto LABEL_5;
  }
  if (one-time initialization token for shared != -1) {
    goto LABEL_95;
  }
  while (2)
  {
    v20[v25[323]] = ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 320))() & 1) == 0;
LABEL_5:
    id v26 = OUTLINED_FUNCTION_6_81(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_);
    uint64_t v138 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView;
    *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView] = v26;
    uint64_t v27 = self;
    id v28 = v26;
    id v143 = v27;
    id v29 = objc_msgSend(v27, sel_clearColor);
    OUTLINED_FUNCTION_5_67((uint64_t)v29, sel_setBackgroundColor_);

    unint64_t v144 = (unint64_t)a1;
    uint64_t v141 = a2;
    if (v20[v25[323]] == 1)
    {
      if ((unint64_t)(a1 - 1) >= 2)
      {
        if (a1 != (char *)6)
        {
          id v46 = closure #3 in InCallControlButton.init(style:image:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)();
          long long v38 = *(void **)&v16[(void)v12];
          *(void *)&v16[(void)v12] = v46;
LABEL_21:

          goto LABEL_22;
        }
        id v30 = objc_msgSend(self, sel_effectWithStyle_, 1);
      }
      else
      {
        if (one-time initialization token for backgroundBlurEffect != -1) {
          swift_once();
        }
        id v30 = (id)static Colors.InCallControls.backgroundBlurEffect;
      }
      uint64_t v31 = v30;
      id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v30);
      objc_msgSend(v32, sel_setAutoresizingMask_, 18);

      uint64_t v33 = *(void **)&v16[(void)v12];
      *(void *)&v16[(void)v12] = v32;

      uint64_t v34 = self;
      if (one-time initialization token for backgroundBlurEffect != -1) {
        swift_once();
      }
      id v35 = objc_msgSend(v34, sel__effectForBlurEffect_vibrancyStyle_, static Colors.InCallControls.backgroundBlurEffect, 110);
      id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v35);

      objc_msgSend(v36, sel_setAutoresizingMask_, 18);
      uint64_t v37 = *(void **)((char *)v12 + v17);
      *(void *)((char *)v12 + v17) = v36;

      long long v38 = *(void **)((char *)v12 + v17);
      if (v38)
      {
        uint64_t v39 = *(void **)&v16[(void)v12];
        if (v39)
        {
          id v40 = v38;
          id v41 = objc_msgSend(v39, sel_contentView);
          objc_msgSend(v41, sel_addSubview_, v40);

          uint64_t v42 = *(void **)&v16[(void)v12];
          if (v42)
          {
            id v43 = objc_msgSend(v42, sel_contentView);
            id v44 = objc_msgSend(v143, sel_whiteColor);
            id v45 = objc_msgSend(v44, sel_colorWithAlphaComponent_, 0.1);

            a1 = (char *)v144;
            objc_msgSend(v43, sel_setBackgroundColor_, v45);

            long long v38 = v40;
          }
        }
        else
        {
          id v47 = v38;
        }
        goto LABEL_21;
      }
    }
LABEL_22:
    id v48 = OUTLINED_FUNCTION_6_81(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_);
    *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView] = v48;
    id v49 = v48;
    id v50 = objc_msgSend(v143, sel_clearColor);
    OUTLINED_FUNCTION_5_67((uint64_t)v50, sel_setBackgroundColor_);

    uint64_t v51 = *(void **)&v16[(void)v12];
    if (v51)
    {
      id v52 = v51;
      if (a9)
      {
        uint64_t v53 = (void *)MEMORY[0x1C87730B0](a8, a9);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v53 = 0;
      }
      objc_msgSend(v51, sel__setGroupName_, v53);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    switch((unint64_t)a1)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 6uLL:
        goto LABEL_29;
      case 4uLL:
      case 5uLL:
        if (a2)
        {
LABEL_29:
          id v54 = OUTLINED_FUNCTION_6_81(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_);
          *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView] = v54;
          if (v54) {
            objc_msgSend(v54, sel_setContentMode_, 1);
          }
          OUTLINED_FUNCTION_11_0();
          uint64_t v55 = *v23;
          *uint64_t v23 = a2;
          id v56 = a2;
        }
        else
        {
          *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView] = 0;
          OUTLINED_FUNCTION_11_0();
          uint64_t v55 = *v23;
          *uint64_t v23 = 0;
        }

        uint64_t v57 = a4;
        switch(MEMORY[0x1E4FB28D8])
        {
          case 0:
          case 1:
          case 2:
          case 3:
          case 6:
            if (a4)
            {
              id v58 = OUTLINED_FUNCTION_6_81(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_);
              uint64_t v59 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label;
              *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label] = v58;
              if (v58)
              {
                uint64_t v60 = v58;
                objc_msgSend(v58, sel_setLineBreakMode_, 0);
                id v61 = v60;
                float v62 = (void *)MEMORY[0x1C87730B0](a3, a4);
                uint64_t v63 = swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_5_67(v63, sel_setText_);
              }
              else
              {
                swift_bridgeObjectRelease();
              }
              uint64_t v64 = &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService;
              uint64_t v65 = *(void **)&v20[v59];
              if (v65)
              {
                self;
                id v66 = v65;
                id v67 = OUTLINED_FUNCTION_14_44();
                objc_msgSend(v66, sel_setFont_, v67);
              }
            }
            else
            {
              *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label] = 0;
              uint64_t v64 = &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService;
            }
            uint64_t v57 = &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService;
            if ((v144 & 0xFFFFFFFFFFFFFFFELL) != 4) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 4:
            id v68 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
            uint64_t v69 = swift_bridgeObjectRetain();
            id v70 = OUTLINED_FUNCTION_13_50(v69, sel_initWithFrame_);
            uint64_t v71 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label;
            *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label] = v70;
            if (v70)
            {
              uint64_t v72 = v70;
              objc_msgSend(v70, (SEL)&selRef_subtitleLabelContainer, 4);
              id v73 = v72;
              if (a4)
              {
                uint64_t v74 = (void *)MEMORY[0x1C87730B0](a3, a4);
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v74 = 0;
              }
              OUTLINED_FUNCTION_24_29();
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v57 = &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService;
            }
            Swift::Int v82 = *(void **)&v20[v71];
            uint64_t v64 = &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService;
            if (!v82) {
              goto LABEL_61;
            }
            self;
            id v83 = v82;
            id v84 = OUTLINED_FUNCTION_14_44();
            v85.super.Class isa = UIFont.caseSensitive()().super.isa;

            break;
          case 5:
            id v75 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
            uint64_t v76 = swift_bridgeObjectRetain();
            id v77 = OUTLINED_FUNCTION_13_50(v76, sel_initWithFrame_);
            uint64_t v78 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label;
            *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label] = v77;
            if (v77)
            {
              uint64_t v79 = v77;
              objc_msgSend(v77, (SEL)&selRef_subtitleLabelContainer, 4);
              id v80 = v79;
              if (a4)
              {
                uint64_t v81 = (void *)MEMORY[0x1C87730B0](a3, a4);
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v81 = 0;
              }
              OUTLINED_FUNCTION_24_29();
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v57 = &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService;
            }
            uint64_t v86 = *(void **)&v20[v78];
            uint64_t v64 = &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService;
            if (!v86) {
              goto LABEL_61;
            }
            self;
            id v83 = v86;
            v85.super.Class isa = (Class)OUTLINED_FUNCTION_14_44();
            break;
          default:
            unint64_t v147 = 0;
            unint64_t v148 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            _StringGuts.grow(_:)(43);
            swift_bridgeObjectRelease();
            unint64_t v147 = 0xD000000000000029;
            unint64_t v148 = 0x80000001C37A6190;
            uint64_t v146 = a1;
            type metadata accessor for CNKInCallControlButtonStyle(0);
            v132._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
            String.append(_:)(v132);
            swift_bridgeObjectRelease();
            goto LABEL_100;
        }
        objc_msgSend(v83, (SEL)&selRef_capturedDidChangeNotification_, v85.super.isa);

LABEL_61:
        swift_bridgeObjectRelease();
LABEL_62:
        id v87 = objc_msgSend(*(id *)&v20[v138], sel_layer);
        objc_msgSend(v87, sel_setMasksToBounds_, 1);

        objc_msgSend(*(id *)&v20[v138], sel_setClipsToBounds_, 1);
LABEL_63:
        if (one-time initialization token for button != -1) {
          swift_once();
        }
        *(void *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_colorConfiguration] = static Colors.InCallControls.button;
        swift_bridgeObjectRetain();

        uint64_t v88 = (objc_class *)type metadata accessor for InCallControlButton();
        v145.receiver = v20;
        v145.super_class = v88;
        id v12 = objc_msgSendSuper2(&v145, sel_initWithFrame_, 0.0, 0.0, a5, a5 * 1.5);
        InCallControlButton.updateImage()();
        uint64_t v89 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView;
        uint64_t v90 = *(void **)((char *)v12 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView);
        unint64_t v91 = (char *)v12;
        id v92 = v90;
        id v16 = v91;
        a4 = (uint64_t *)v92;
        objc_msgSend(v16, sel_setUserInteractionEnabled_, 1);
        if (a10)
        {
          id v93 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1AC8]), sel_initWithDelegate_, v16);
          objc_msgSend(v16, sel_addInteraction_, v93);
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C3769B20;
        a1 = *(char **)((char *)v12 + v89);
        *(void *)(inited + 32) = a1;
        a3 = v57[319];
        uint64_t v23 = *(void ***)&v16[a3];
        *(void *)(inited + 40) = v23;
        uint64_t v139 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView;
        a9 = v89;
        uint64_t v20 = *(char **)&v16[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView];
        *(void *)(inited + 48) = v20;
        uint64_t v25 = *(uint64_t **)&v16[v64[320]];
        *(void *)(inited + 56) = v25;
        uint64_t v17 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView;
        a2 = *(void **)&v16[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView];
        *(void *)(inited + 64) = a2;
        uint64_t v135 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label;
        uint64_t v95 = *(void **)&v16[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label];
        *(void *)(inited + 72) = v95;
        unint64_t v147 = inited;
        specialized Array._endMutation()();
        uint64_t v96 = (void *)v147;
        if (*(void *)(v147 + 16) < 6uLL)
        {
          __break(1u);
LABEL_95:
          swift_once();
          continue;
        }
        uint64_t v134 = v17;
        uint64_t v97 = *(void **)(v147 + 32);
        id v98 = v95;
        if (v97)
        {
          id v99 = v97;
          uint64_t v100 = a1;
          unint64_t v101 = v23;
          uint64_t v102 = v20;
          uint64_t v103 = v25;
          id v104 = a2;
          objc_msgSend(v99, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
          OUTLINED_FUNCTION_5_88();
        }
        else
        {
          id v105 = a1;
          id v106 = v23;
          id v107 = v20;
          id v108 = v25;
          id v109 = a2;
        }
        uint64_t v110 = (void *)v96[5];
        if (v110)
        {
          id v111 = v110;
          objc_msgSend(v111, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
          OUTLINED_FUNCTION_5_88();
        }
        uint64_t v112 = (void *)v96[6];
        if (v112)
        {
          id v113 = v112;
          objc_msgSend(v113, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
          OUTLINED_FUNCTION_5_88();
        }
        uint64_t v114 = (void *)v96[7];
        if (v114)
        {
          id v115 = v114;
          objc_msgSend(v115, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
          OUTLINED_FUNCTION_5_88();
        }
        uint64_t v116 = (void *)v96[8];
        if (v116)
        {
          id v117 = v116;
          objc_msgSend(v117, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
          OUTLINED_FUNCTION_5_88();
        }
        char v118 = (void *)v96[9];
        if (v118)
        {
          id v119 = v118;
          objc_msgSend(v119, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
          OUTLINED_FUNCTION_5_88();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v16, sel_addSubview_, *(void *)((char *)v12 + a9));

        uint64_t v120 = *(void **)&v16[a3];
        if (v120)
        {
          id v121 = v120;
          objc_msgSend(a4, sel_addSubview_, v121);
        }
        objc_msgSend(*(id *)((char *)v12 + a9), sel_addSubview_, *(void *)&v16[v139]);
        if (v144 > 6)
        {
          unint64_t v147 = 0;
          unint64_t v148 = 0xE000000000000000;
          _StringGuts.grow(_:)(42);
          swift_bridgeObjectRelease();
          unint64_t v147 = 0xD000000000000028;
          unint64_t v148 = 0x80000001C37A61C0;
          uint64_t v146 = (char *)v144;
          v133._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v133);
          swift_bridgeObjectRelease();
          goto LABEL_100;
        }
        if (((1 << v144) & 0x4F) != 0)
        {
          uint64_t v122 = *(void **)&v16[v135];
          if (v122)
          {
            id v123 = v122;
            InCallControlButton.addConstraintsForLabeledDisc(size:label:)(v123, a5);
            goto LABEL_90;
          }
          InCallControlButton.addConstraintsForDisc(size:)(a5);
        }
        else
        {
          uint64_t v124 = *(void **)&v16[v134];
          if (v124)
          {
            id v123 = v124;
            InCallControlButton.addConstraintsForPillWithImageView(_:imageSpacing:isImageTrailing:)(v123, 0, 1, a11 & 1);
LABEL_90:
          }
          else
          {
            InCallControlButton.addConstraintsForPill()();
          }
        }
        uint64_t v125 = v16;
        id v126 = objc_msgSend(v143, sel_clearColor);
        objc_msgSend(v125, sel_setBackgroundColor_, v126);

        InCallControlButton.updateColors()();
        return v125;
      default:
        unint64_t v149 = 0;
        unint64_t v150 = 0xE000000000000000;
        id v130 = a2;
        _StringGuts.grow(_:)(44);
        swift_bridgeObjectRelease();
        unint64_t v149 = 0xD00000000000002ALL;
        unint64_t v150 = 0x80000001C37A6160;
        unint64_t v147 = (unint64_t)a1;
        type metadata accessor for CNKInCallControlButtonStyle(0);
        v131._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
        String.append(_:)(v131);
        swift_bridgeObjectRelease();
        goto LABEL_100;
    }
  }
}

id closure #3 in InCallControlButton.init(style:image:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)()
{
  uint64_t v0 = self;
  if (one-time initialization token for backgroundBlurEffect != -1) {
    swift_once();
  }
  id v1 = objc_msgSend(v0, sel__effectForBlurEffect_vibrancyStyle_, static Colors.InCallControls.backgroundBlurEffect, 112);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v1);

  id v3 = objc_msgSend(v2, sel_contentView);
  id v4 = objc_msgSend(self, sel_tintColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  return v2;
}

id InCallControlButton.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlButton.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_callbackCancellable] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView] = 0;
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_paragraphStyle;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  LODWORD(v3) = 1.0;
  objc_msgSend(v2, sel_setHyphenationFactor_, v3);
  objc_msgSend(v2, sel_setAlignment_, 1);
  *(void *)&v0[v1] = v2;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_image] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageLoadingTask] = 0;
  id v4 = &v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_symbolDescription];
  *(_OWORD *)id v4 = 0u;
  *((_OWORD *)v4 + ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  *((_OWORD *)v4 + 3) = 0u;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_cnkContentAlpha] = 0x3FF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_menuDataSource + 8] = 0;
  swift_unknownObjectWeakInit();

  OUTLINED_FUNCTION_4_81();
  __break(1u);
}

Swift::Void __swiftcall InCallControlButton.layoutSubviews()()
{
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for InCallControlButton();
  objc_msgSendSuper2(&v21, sel_layoutSubviews);
  switch(*(void *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style])
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 6:
      uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView];
      objc_msgSend(v1, sel_bounds);
      double v3 = v2;
      objc_msgSend(v1, sel_bounds);
      if (v4 >= v3) {
        double v5 = v3;
      }
      else {
        double v5 = v4;
      }
      double v6 = v5 * 0.5;
      id v7 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView], sel_layer);
      objc_msgSend(v7, sel_setCornerRadius_, v6);

      uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView];
      if (v8) {
        objc_msgSend(v8, sel__setCornerRadius_continuous_maskedCorners_, 0, 15, v6);
      }
      break;
    case 4:
      id v9 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView], sel_layer);
      id v10 = objc_msgSend(v0, sel_traitCollection);
      _UITableViewDefaultSectionCornerRadiusForTraitCollection();
      double v12 = v11;

      objc_msgSend(v9, sel_setCornerRadius_, v12);
      break;
    case 5:
      objc_msgSend(v0, sel_bounds);
      double v14 = v13 * 0.5;
      id v15 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView], sel_layer);
      objc_msgSend(v15, sel_setCornerRadius_, v14);

      id v16 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView];
      id v17 = objc_msgSend(v16, sel_layer);
      objc_msgSend(v17, sel_setCornerRadius_, v14);

      id v18 = objc_msgSend(v16, sel_layer);
      objc_msgSend(v18, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

      id v19 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView];
      if (v19) {
        objc_msgSend(v19, sel__setContinuousCornerRadius_, v14);
      }
      break;
    default:
      _StringGuts.grow(_:)(52);
      v20._object = (void *)0x80000001C37A61F0;
      v20._uint64_t countAndFlagsBits = 0xD000000000000032;
      String.append(_:)(v20);
      v22._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      OUTLINED_FUNCTION_17_38(v22);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_2_88();
      __break(1u);
      JUMPOUT(0x1C32E56DCLL);
  }
}

uint64_t InCallControlButton.updateSymbolDescribing(_:)(uint64_t a1)
{
  double v2 = v1;
  outlined init with copy of Environment<DynamicTypeSize>.Content(a1, (uint64_t)&v10, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  if (v11)
  {
    outlined init with take of Notice(&v10, (uint64_t)v7);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    uint64_t v3 = v8;
    uint64_t v4 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v4 + 8))(&v10, v3, v4);
    id v5 = static UIImage.symbolImage(for:)((uint64_t)&v10);
    outlined release of SymbolImageDescription((uint64_t)&v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v10, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
    id v5 = 0;
  }
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x120))(v5);
}

void InCallControlButton.addConstraintsForDisc(size:)(double a1)
{
  double v2 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView];
  if (v2)
  {
    id v10 = *(id *)&v1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView];
    if (*(void *)&v1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style] == 2)
    {
      uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView];
      if (v4)
      {
        id v5 = v2;
        id v6 = objc_msgSend(v4, sel_contentView);
        objc_msgSend(v6, sel_addSubview_, v5);
      }
      else
      {
        id v8 = v2;
      }
    }
    else
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView], sel_addSubview_, v2);
    }
    LODWORD(v7) = 1148846080;
    uint64_t v9 = (void *)MEMORY[0x1C8775630](objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 0, v7));
    closure #1 in InCallControlButton.addConstraintsForDisc(size:)(v1, (uint64_t)v10, a1);
  }
  else
  {
    OUTLINED_FUNCTION_4_81();
    __break(1u);
  }
}

void closure #1 in InCallControlButton.addConstraintsForDisc(size:)(char *a1, uint64_t a2, double a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<NSLayoutConstraint?>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C377AAB0;
  id v6 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView];
  id v7 = objc_msgSend(v6, sel_topAnchor);
  id v8 = objc_msgSend(a1, sel_topAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(void *)(inited + 32) = v9;
  id v10 = objc_msgSend(v6, sel_leadingAnchor);
  id v11 = objc_msgSend(a1, sel_leadingAnchor);
  id v12 = objc_msgSend(v10, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v11);

  *(void *)(inited + 40) = v12;
  id v13 = objc_msgSend(v6, sel_trailingAnchor);
  id v14 = objc_msgSend(a1, sel_trailingAnchor);
  id v15 = objc_msgSend(v13, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v14);

  *(void *)(inited + 48) = v15;
  id v16 = objc_msgSend(v6, sel_bottomAnchor);
  id v17 = objc_msgSend(a1, sel_bottomAnchor);
  id v18 = objc_msgSend(v16, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v17);

  *(void *)(inited + 56) = v18;
  id v19 = objc_msgSend(v6, sel_widthAnchor);
  id v20 = objc_msgSend(v19, sel_constraintEqualToConstant_, a3);

  type metadata accessor for UILayoutPriority(0);
  lazy protocol witness table accessor for type UIControlState and conformance UIControlState((unint64_t *)&lazy protocol witness table cache variable for type UILayoutPriority and conformance UILayoutPriority, type metadata accessor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v2ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = v89;
  objc_msgSend(v20, sel_setPriority_, v21);
  *(void *)(inited + 64) = v20;
  id v22 = objc_msgSend(v6, sel_heightAnchor);
  id v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, a3);

  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v24) = v89;
  objc_msgSend(v23, sel_setPriority_, v24);
  *(void *)(inited + 72) = v23;
  id v25 = objc_msgSend(v6, sel_heightAnchor);
  id v26 = objc_msgSend(v6, sel_widthAnchor);
  id v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  LODWORD(v28) = 1148846080;
  objc_msgSend(v27, sel_setPriority_, v28);
  *(void *)(inited + 80) = v27;
  uint64_t v29 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView;
  id v30 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView];
  if (v30)
  {
    id v31 = objc_msgSend(v30, sel_topAnchor);
    id v32 = objc_msgSend(v6, sel_topAnchor);
    id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);
  }
  else
  {
    id v33 = 0;
  }
  *(void *)(inited + 88) = v33;
  uint64_t v34 = *(void **)&a1[v29];
  if (v34)
  {
    id v35 = objc_msgSend(v34, sel_bottomAnchor);
    id v36 = objc_msgSend(v6, sel_bottomAnchor);
    id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);
  }
  else
  {
    id v37 = 0;
  }
  *(void *)(inited + 96) = v37;
  long long v38 = *(void **)&a1[v29];
  if (v38)
  {
    id v39 = objc_msgSend(v38, sel_leadingAnchor);
    id v40 = objc_msgSend(v6, sel_leadingAnchor);
    id v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);
  }
  else
  {
    id v41 = 0;
  }
  *(void *)(inited + 104) = v41;
  uint64_t v42 = *(void **)&a1[v29];
  if (v42)
  {
    id v43 = objc_msgSend(v42, sel_trailingAnchor);
    id v44 = objc_msgSend(v6, sel_trailingAnchor);
    id v45 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v44);
  }
  else
  {
    id v45 = 0;
  }
  *(void *)(inited + 112) = v45;
  uint64_t v46 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView;
  id v47 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView];
  if (v47)
  {
    id v48 = objc_msgSend(v47, sel_topAnchor);
    id v49 = objc_msgSend(v6, sel_topAnchor);
    id v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);
  }
  else
  {
    id v50 = 0;
  }
  *(void *)(inited + 120) = v50;
  uint64_t v51 = *(void **)&a1[v46];
  if (v51)
  {
    id v52 = objc_msgSend(v51, sel_bottomAnchor);
    id v53 = objc_msgSend(v6, sel_bottomAnchor);
    id v54 = objc_msgSend(v52, sel_constraintEqualToAnchor_, v53);
  }
  else
  {
    id v54 = 0;
  }
  *(void *)(inited + 128) = v54;
  uint64_t v55 = *(void **)&a1[v46];
  if (v55)
  {
    id v56 = objc_msgSend(v55, sel_leadingAnchor);
    id v57 = objc_msgSend(v6, sel_leadingAnchor);
    id v58 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v57);
  }
  else
  {
    id v58 = 0;
  }
  *(void *)(inited + 136) = v58;
  uint64_t v59 = *(void **)&a1[v46];
  if (v59)
  {
    id v60 = objc_msgSend(v59, sel_trailingAnchor);
    id v61 = objc_msgSend(v6, sel_trailingAnchor);
    id v62 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v61);
  }
  else
  {
    id v62 = 0;
  }
  *(void *)(inited + 144) = v62;
  uint64_t v63 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView];
  id v64 = objc_msgSend(v63, sel_topAnchor, a2);
  id v65 = objc_msgSend(v6, sel_topAnchor);
  id v66 = objc_msgSend(v64, sel_constraintEqualToAnchor_, v65);

  *(void *)(inited + 152) = v66;
  id v67 = objc_msgSend(v63, sel_bottomAnchor);
  id v68 = objc_msgSend(v6, sel_bottomAnchor);
  id v69 = objc_msgSend(v67, sel_constraintEqualToAnchor_, v68);

  *(void *)(inited + 160) = v69;
  id v70 = objc_msgSend(v63, sel_leadingAnchor);
  id v71 = objc_msgSend(v6, sel_leadingAnchor);
  id v72 = objc_msgSend(v70, sel_constraintEqualToAnchor_, v71);

  *(void *)(inited + 168) = v72;
  id v73 = objc_msgSend(v63, sel_trailingAnchor);
  id v74 = objc_msgSend(v6, sel_trailingAnchor);
  id v75 = objc_msgSend(v73, sel_constraintEqualToAnchor_, v74);

  *(void *)(inited + 176) = v75;
  id v76 = objc_msgSend(v88, sel_centerXAnchor);
  id v77 = objc_msgSend(v6, sel_centerXAnchor);
  id v78 = objc_msgSend(v76, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v77);

  *(void *)(inited + 184) = v78;
  id v79 = objc_msgSend(v88, sel_centerYAnchor);
  id v80 = objc_msgSend(v6, sel_centerYAnchor);
  id v81 = objc_msgSend(v79, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v80);

  *(void *)(inited + 192) = v81;
  specialized Array._endMutation()();
  uint64_t v90 = MEMORY[0x1E4FBC860];
  for (uint64_t i = 32; i != 200; i += 8)
  {
    id v83 = *(void **)(inited + i);
    if (v83)
    {
      id v84 = v83;
      MEMORY[0x1C87733A0]();
      if (*(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  UIFont v85 = self;
  swift_bridgeObjectRelease();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v85, sel_activateConstraints_, isa);
}

void InCallControlButton.addConstraintsForLabeledDisc(size:label:)(void *a1, double a2)
{
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView];
  if (v4)
  {
    id v13 = *(id *)&v2[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView];
    if (*(void *)&v2[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style] == 2)
    {
      id v6 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView];
      if (v6)
      {
        id v7 = v4;
        id v8 = objc_msgSend(v6, sel_contentView);
        objc_msgSend(v8, sel_addSubview_, v7);
      }
      else
      {
        id v10 = v4;
      }
    }
    else
    {
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView], sel_addSubview_, v4);
    }
    LODWORD(v9) = 1148846080;
    objc_msgSend(a1, sel_setContentHuggingPriority_forAxis_, 1, v9);
    LODWORD(v1ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1) = 1148846080;
    objc_msgSend(a1, sel_setContentCompressionResistancePriority_forAxis_, 1, v11);
    id v12 = (void *)MEMORY[0x1C8775630](objc_msgSend(v2, sel_addSubview_, a1));
    closure #1 in InCallControlButton.addConstraintsForLabeledDisc(size:label:)(v2, v13, a1, a2);
  }
  else
  {
    OUTLINED_FUNCTION_4_81();
    __break(1u);
  }
}

void closure #1 in InCallControlButton.addConstraintsForLabeledDisc(size:label:)(char *a1, void *a2, void *a3, double a4)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<NSLayoutConstraint?>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C377AAC0;
  id v7 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView];
  id v8 = objc_msgSend(v7, sel_topAnchor);
  id v9 = objc_msgSend(a1, sel_topAnchor);
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(void *)(inited + 32) = v10;
  id v11 = objc_msgSend(v7, sel_leadingAnchor);
  id v12 = objc_msgSend(a1, sel_leadingAnchor);
  id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(void *)(inited + 40) = v13;
  id v14 = objc_msgSend(v7, sel_trailingAnchor);
  id v15 = objc_msgSend(a1, sel_trailingAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(inited + 48) = v16;
  id v17 = objc_msgSend(v7, sel_widthAnchor);
  id v18 = objc_msgSend(v17, sel_constraintEqualToConstant_, a4);

  *(void *)(inited + 56) = v18;
  id v19 = objc_msgSend(v7, sel_heightAnchor);
  id v20 = objc_msgSend(v19, sel_constraintEqualToConstant_, a4);

  *(void *)(inited + 64) = v20;
  uint64_t v21 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView;
  id v22 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView];
  if (v22)
  {
    id v23 = objc_msgSend(v22, sel_topAnchor);
    id v24 = objc_msgSend(v7, sel_topAnchor);
    id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);
  }
  else
  {
    id v25 = 0;
  }
  *(void *)(inited + 72) = v25;
  id v26 = *(void **)&a1[v21];
  if (v26)
  {
    id v27 = objc_msgSend(v26, sel_bottomAnchor);
    id v28 = objc_msgSend(v7, sel_bottomAnchor);
    id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);
  }
  else
  {
    id v29 = 0;
  }
  *(void *)(inited + 80) = v29;
  id v30 = *(void **)&a1[v21];
  if (v30)
  {
    id v31 = objc_msgSend(v30, sel_leadingAnchor);
    id v32 = objc_msgSend(v7, sel_leadingAnchor);
    id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);
  }
  else
  {
    id v33 = 0;
  }
  *(void *)(inited + 88) = v33;
  uint64_t v34 = *(void **)&a1[v21];
  if (v34)
  {
    id v35 = objc_msgSend(v34, sel_trailingAnchor);
    id v36 = objc_msgSend(v7, sel_trailingAnchor);
    id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);
  }
  else
  {
    id v37 = 0;
  }
  *(void *)(inited + 96) = v37;
  long long v38 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView];
  id v39 = objc_msgSend(v38, sel_topAnchor);
  id v40 = objc_msgSend(v7, sel_topAnchor);
  id v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);

  *(void *)(inited + 104) = v41;
  id v42 = objc_msgSend(v38, sel_bottomAnchor);
  id v43 = objc_msgSend(v7, (SEL)&selRef_canOpenURL_ + 5);
  id v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  *(void *)(inited + 112) = v44;
  id v45 = objc_msgSend(v38, sel_leadingAnchor);
  id v46 = objc_msgSend(v7, sel_leadingAnchor);
  id v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v46);

  *(void *)(inited + 120) = v47;
  id v48 = objc_msgSend(v38, sel_trailingAnchor);
  id v49 = objc_msgSend(v7, sel_trailingAnchor);
  id v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

  *(void *)(inited + 128) = v50;
  id v51 = objc_msgSend(a2, sel_centerXAnchor);
  id v52 = objc_msgSend(v7, (SEL)&selRef_separatorLayoutGuide);
  id v53 = objc_msgSend(v51, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v52);

  *(void *)(inited + 136) = v53;
  id v54 = objc_msgSend(a2, sel_centerYAnchor);
  id v55 = objc_msgSend(v7, sel_centerYAnchor);
  id v56 = objc_msgSend(v54, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v55);

  *(void *)(inited + 144) = v56;
  id v57 = objc_msgSend(a3, sel_topAnchor);
  id v58 = [v7 (SEL)0x1F74D6625];
  id v59 = objc_msgSend(v57, sel_constraintEqualToAnchor_constant_, v58, 5.0);

  *(void *)(inited + 152) = v59;
  id v60 = objc_msgSend(a3, sel_centerXAnchor);
  id v61 = objc_msgSend(v7, sel_centerXAnchor);
  id v62 = objc_msgSend(v60, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v61);

  *(void *)(inited + 160) = v62;
  id v63 = [a3 (SEL)0x1F74D6625];
  id v64 = [a1 (SEL)0x1F74D6625];
  id v65 = objc_msgSend(v63, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v64);

  *(void *)(inited + 168) = v65;
  specialized Array._endMutation()();
  uint64_t v73 = MEMORY[0x1E4FBC860];
  for (uint64_t i = 32; i != 176; i += 8)
  {
    id v67 = *(void **)(inited + i);
    if (v67)
    {
      id v68 = v67;
      MEMORY[0x1C87733A0]();
      if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  id v69 = self;
  swift_bridgeObjectRelease();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v69, sel_activateConstraints_, isa);
}