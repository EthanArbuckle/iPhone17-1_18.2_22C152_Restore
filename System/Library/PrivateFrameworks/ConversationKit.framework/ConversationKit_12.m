unint64_t lazy protocol witness table accessor for type RTTType and conformance RTTType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RTTType and conformance RTTType;
  if (!lazy protocol witness table cache variable for type RTTType and conformance RTTType)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RTTType and conformance RTTType);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RTTType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C369BA34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for RTTType()
{
}

void destroy for PeoplePickerAction(void **a1)
{
  v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if (v2 - 1 < 0) {
}
  }

uint64_t initializeBufferWithCopyOfBuffer for PeoplePickerAction(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  LODWORD(v4) = -1;
  if (*(void *)a2 < 0xFFFFFFFFuLL) {
    unsigned int v4 = *(void **)a2;
  }
  if ((int)v4 - 1 < 0)
  {
    *(void *)a1 = v3;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    id v5 = v3;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  }
  return a1;
}

uint64_t assignWithCopy for PeoplePickerAction(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  LODWORD(v5) = -1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v6) = -1;
  }
  else {
    unsigned int v6 = *(void **)a1;
  }
  int v7 = v6 - 1;
  v8 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL) {
    id v5 = *(void **)a2;
  }
  int v9 = v5 - 1;
  if (v7 < 0)
  {
    if (v9 < 0)
    {
      *(void *)a1 = v8;
      id v13 = v8;

      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      return a1;
    }

    goto LABEL_11;
  }
  if ((v9 & 0x80000000) == 0)
  {
LABEL_11:
    v11 = *(void **)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(void *)a1 = v11;
    return a1;
  }
  *(void *)a1 = v8;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v10 = v8;
  return a1;
}

uint64_t assignWithTake for PeoplePickerAction(uint64_t a1, unint64_t *a2)
{
  unsigned int v4 = *(void **)a1;
  LODWORD(v5) = -1;
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    id v5 = *(void **)a1;
  }
  if ((int)v5 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (*a2 < 0xFFFFFFFF) {
      unint64_t v6 = *a2;
    }
    if ((int)v6 - 1 < 0)
    {
      *(void *)a1 = *a2;

      goto LABEL_9;
    }
  }
  *(void *)a1 = *a2;
LABEL_9:
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PeoplePickerAction(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFF9 && *((unsigned char *)a1 + 9)) {
    return (*(_DWORD *)a1 + 2147483641);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 5;
  if (v5 >= 7) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PeoplePickerAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF9)
  {
    *(void *)result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483641;
    if (a3 >= 0x7FFFFFF9) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF9) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(void *)result = a2 + 6;
    }
  }
  return result;
}

uint64_t getEnumTag for PeoplePickerAction(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t destructiveInjectEnumTag for PeoplePickerAction(uint64_t result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    uint64_t v2 = a2 - 0x7FFFFFFF;
    *(unsigned char *)(result + 8) = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = a2;
  }
  *(void *)result = v2;
  return result;
}

void type metadata accessor for PeoplePickerAction()
{
}

uint64_t getEnumTagSinglePayload for ActionBarButtonsStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C369BDCCLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 2;
  if (v8 <= 2) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActionBarButtonsStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C369BEB4);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for ActionBarButtonsStyle()
{
}

uint64_t dispatch thunk of PeoplePickerActionBarDelegate.actionBar(_:selectedAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t ObjC metadata update function for PeoplePickerActionBar()
{
  return type metadata accessor for PeoplePickerActionBar();
}

void type metadata completion function for PeoplePickerActionBar()
{
  _sSo8UIButtonC5UIKitE13ConfigurationVSgMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for UIButton.Configuration?, MEMORY[0x1E4FB1290]);
  if (v0 <= 0x3F)
  {
    _sSo8UIButtonC5UIKitE13ConfigurationVSgMaTm_0(319, &lazy cache variable for type metadata for DropdownViewModel.MenuItem?, (void (*)(uint64_t))type metadata accessor for DropdownViewModel.MenuItem);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for PeoplePickerActionBar(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PeoplePickerActionBar);
}

uint64_t dispatch thunk of PeoplePickerActionBar.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.buttonsStyle.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.buttonsStyle.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.buttonsStyle.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.handleToDisplay.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.handleToDisplay.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.handleToDisplay.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.generatingLinksEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.generatingLinksEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.generatingLinksEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

unint64_t dispatch thunk of PeoplePickerActionBar.serviceAvailability.getter()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 384))();
  return v1 & 1 | ((unint64_t)(BYTE1(v1) & 1) << 8) | ((unint64_t)(BYTE2(v1) & 1) << 16) | ((unint64_t)(BYTE3(v1) & 1) << 24) | ((unint64_t)(BYTE4(v1) & 1) << 32) | ((unint64_t)(BYTE5(v1) & 1) << 40);
}

uint64_t dispatch thunk of PeoplePickerActionBar.serviceAvailability.setter(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x188))(a1 & 0x10101010101);
}

uint64_t dispatch thunk of PeoplePickerActionBar.serviceAvailability.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.addPersonButton(avLess:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.inviteWithMessagesButton.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x268))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.audioVideoDropdownViewModel.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x340))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.faceTimeAudioDropdownMenuItem.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x370))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.__allocating_init(frame:buttonsStyle:)()
{
  return (*(uint64_t (**)(void))(v0 + 960))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.updateButtonsState()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x408))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.updateStateForAudioVideoButtons()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x410))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.updateStateForInviteWithButton()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x418))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.updateStateForAddPersonButton(avLess:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x420))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.updateStateForSharePlayButtons()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x428))();
}

void _sSo8UIButtonC5UIKitE13ConfigurationVSgMaTm_0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C369C700()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in PeoplePickerActionBar.updateLinkButtonsEnabled()()
{
  closure #1 in PeoplePickerActionBar.updateLinkButtonsEnabled()(v0);
}

void partial apply for closure #1 in closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter(uint64_t a1)
{
  closure #1 in closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter(a1, v1);
}

void partial apply for closure #2 in closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter(uint64_t a1)
{
  closure #1 in closure #1 in PeoplePickerActionBar.audioVideoCallMenu.getter(a1, v1, 1);
}

void partial apply for closure #1 in closure #1 in PeoplePickerActionBar.audioVideoCallMenu.getter(uint64_t a1)
{
  closure #1 in closure #1 in PeoplePickerActionBar.audioVideoCallMenu.getter(a1, v1, 2);
}

uint64_t sub_1C369C794()
{
  return 8;
}

uint64_t sub_1C369C7A0()
{
  return swift_release();
}

uint64_t sub_1C369C7A8(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1C369C7BC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C369C7C8()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in PeoplePickerActionBar.faceTimeAudioDropdownMenuItem.getter()
{
  return closure #1 in closure #1 in PeoplePickerActionBar.faceTimeAudioDropdownMenuItem.getter(*(void **)(v0 + 16));
}

void partial apply for closure #1 in closure #1 in PeoplePickerActionBar.audioVideoDropdownViewModel.getter()
{
  closure #1 in closure #1 in PeoplePickerActionBar.audioVideoDropdownViewModel.getter(v0);
}

uint64_t InCallBannerViewConstraintManager.__allocating_init(layoutIdiom:containingGuide:containingView:visibleGuide:bannerView:bannerDodgingGuide:)(char *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v12 = swift_allocObject();
  InCallBannerViewConstraintManager.init(layoutIdiom:containingGuide:containingView:visibleGuide:bannerView:bannerDodgingGuide:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

id InCallBannerViewConstraintManager.hiddenGuide.getter()
{
  return *(id *)(v0 + 72);
}

id InCallBannerViewConstraintManager.visibleGuide.getter()
{
  return *(id *)(v0 + 80);
}

id InCallBannerViewConstraintManager.visibleTranslation.getter()
{
  return objc_msgSend(*(id *)(v0 + 56), sel_constant);
}

id InCallBannerViewConstraintManager.visibleTranslation.setter()
{
  return objc_msgSend(*(id *)(v0 + 56), sel_setConstant_);
}

id (*InCallBannerViewConstraintManager.visibleTranslation.modify(void *a1))(uint64_t a1)
{
  unsigned int v3 = *(void **)(v1 + 56);
  a1[1] = v3;
  objc_msgSend(v3, sel_constant);
  *a1 = v4;
  return InCallBannerViewConstraintManager.visibleTranslation.modify;
}

id InCallBannerViewConstraintManager.visibleTranslation.modify(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setConstant_, *(double *)a1);
}

uint64_t InCallBannerViewConstraintManager.init(layoutIdiom:containingGuide:containingView:visibleGuide:bannerView:bannerDodgingGuide:)(char *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  char v12 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSLayoutConstraint]);
  lazy protocol witness table accessor for type InCallBannerState and conformance InCallBannerState();
  *(void *)(v6 + 64) = Dictionary.init(dictionaryLiteral:)();
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1940]), sel_init);
  objc_msgSend(a3, sel_addLayoutGuide_, v13);
  *(unsigned char *)(v6 + 16) = v12;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 72) = v13;
  *(void *)(v6 + 80) = a4;
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = a6;
  id v14 = a2;
  id v15 = a3;
  id v16 = v13;
  id v17 = a4;
  id v18 = a5;
  id v19 = a6;
  id v20 = objc_msgSend(v18, sel_topAnchor);
  id v21 = objc_msgSend(v17, sel_topAnchor);
  id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(void *)(v6 + 56) = v22;
  v23 = self;
  InCallBannerViewConstraintManager.layoutGuideConstraints()();
  type metadata accessor for NSLayoutConstraint();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_activateConstraints_, isa);

  return v6;
}

unint64_t lazy protocol witness table accessor for type InCallBannerState and conformance InCallBannerState()
{
  unint64_t result = lazy protocol witness table cache variable for type InCallBannerState and conformance InCallBannerState;
  if (!lazy protocol witness table cache variable for type InCallBannerState and conformance InCallBannerState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallBannerState and conformance InCallBannerState);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type InCallBannerState and conformance InCallBannerState;
  if (!lazy protocol witness table cache variable for type InCallBannerState and conformance InCallBannerState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallBannerState and conformance InCallBannerState);
  }
  return result;
}

uint64_t InCallBannerViewConstraintManager.layoutGuideConstraints()()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C3769600;
  unsigned int v3 = *(void **)(v1 + 48);
  id v4 = objc_msgSend(v3, sel_leadingAnchor);
  uint64_t v5 = *(void **)(v1 + 32);
  id v6 = objc_msgSend(v5, sel_leadingAnchor);
  unsigned int v7 = &selRef_ringButton;
  id v8 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);

  *(void *)(v2 + 32) = v8;
  id v9 = objc_msgSend(v3, sel_trailingAnchor);
  id v10 = objc_msgSend(v5, sel_trailingAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(void *)(v2 + 40) = v11;
  id v12 = *(id *)(v1 + 72);
  id v13 = objc_msgSend(v12, sel_leadingAnchor);
  id v14 = *(id *)(v1 + 80);
  id v15 = objc_msgSend(v14, sel_leadingAnchor);
  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);

  *(void *)(v2 + 48) = v16;
  id v17 = objc_msgSend(v12, sel_trailingAnchor);
  id v18 = objc_msgSend(v14, sel_trailingAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(void *)(v2 + 56) = v19;
  id v20 = objc_msgSend(v12, sel_heightAnchor);
  id v21 = objc_msgSend(v14, sel_heightAnchor);
  id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(void *)(v2 + 64) = v22;
  specialized Array._endMutation()();
  unint64_t v23 = v2;
  uint64_t v56 = v2;
  if (*(unsigned char *)(v1 + 16))
  {
    id v24 = objc_msgSend(v14, sel_centerXAnchor);
    v25 = *(void **)(v1 + 24);
    id v26 = objc_msgSend(v25, sel_centerXAnchor);
    id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);

    id v28 = objc_msgSend(v14, sel_topAnchor);
    id v29 = objc_msgSend(v25, sel_topAnchor);
    id v14 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

    id v12 = objc_msgSend(v12, sel_bottomAnchor);
    id v30 = objc_msgSend(v5, sel_topAnchor);
    static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v31 = static Defaults.shared;
    (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
    uint64_t v32 = static Platform.current.getter();
    (*(void (**)(uint64_t))(*(void *)v31 + 488))(v32);
    id v33 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v30, -16.0);

    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!__OFADD__(v34, 3))
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v34 + 3, 1);
      specialized Array._endMutation()();
      id v35 = v27;
      goto LABEL_19;
    }
    __break(1u);
    goto LABEL_28;
  }
  id v55 = v5;
  id v26 = objc_msgSend(v14, sel_leadingAnchor);
  id v30 = *(id *)(v1 + 24);
  unsigned int v7 = (char **)objc_msgSend(v30, sel_leadingAnchor);
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1) {
LABEL_28:
  }
    swift_once();
  uint64_t v36 = static Defaults.shared;
  (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
  if (static Platform.current.getter() == 2) {
    double v37 = -20.0;
  }
  else {
    double v37 = 0.0;
  }
  (*(void (**)(void))(*(void *)v36 + 488))();
  id v54 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v7, v37);

  id v38 = objc_msgSend(v14, sel_bottomAnchor);
  id v39 = objc_msgSend(v30, sel_bottomAnchor);
  v40.n128_f64[0] = static Layout.MediaPip.padding.getter();
  uint64_t v41 = static Defaults.shared;
  (*(void (**)(__n128))(*(void *)static Defaults.shared + 384))(v40);
  swift_beginAccess();
  if (static AmbientState.isPresented) {
    double v42 = 10.0;
  }
  else {
    double v42 = 0.0;
  }
  uint64_t v43 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(void *)v41 + 488))(v43);
  id v14 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v39, -v42);

  id v44 = objc_msgSend(v12, sel_topAnchor);
  id v45 = objc_msgSend(v55, sel_bottomAnchor);
  v46.n128_f64[0] = static Layout.MediaPip.padding.getter();
  uint64_t v47 = static Defaults.shared;
  (*(void (**)(__n128))(*(void *)static Defaults.shared + 384))(v46);
  uint64_t v48 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(void *)v47 + 488))(v48);
  id v33 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v45, 16.0);

  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v49 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = v49 + 3;
  if (__OFADD__(v49, 3))
  {
    __break(1u);
    return result;
  }
  specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(result, 1);
  specialized Array._endMutation()();
  id v35 = v54;
LABEL_19:
  v51 = v35;
  MEMORY[0x1C87733A0]();
  if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v52 = v14;
  MEMORY[0x1C87733A0]();
  if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v53 = v33;
  MEMORY[0x1C87733A0]();
  if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  return v56;
}

id *InCallBannerViewConstraintManager.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InCallBannerViewConstraintManager.__deallocating_deinit()
{
  InCallBannerViewConstraintManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t InCallBannerViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(uint64_t a1)
{
  unsigned __int8 v2 = *(unsigned char *)(a1 + 16);
  return InCallBannerViewConstraintManager.constraints(forState:)(&v2);
}

uint64_t InCallBannerViewConstraintManager.constraints(forState:)(unsigned __int8 *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 64);
  if (*(void *)(v3 + 16) && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(*(void *)(v3 + 56) + 8 * v4);
    swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[NSLayoutConstraint]>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C376BA10;
    *(void *)(inited + 32) = InCallBannerViewConstraintManager.horizontalConstraints(forState:)();
    *(void *)(inited + 40) = InCallBannerViewConstraintManager.verticalConstraints(forState:)();
    v11[0] = v2;
    *(void *)(inited + 48) = InCallBannerViewConstraintManager.layoutGuideConstraints(forState:)(v11);
    *(void *)id v11 = MEMORY[0x1E4FBC860];
    for (uint64_t i = 32; i != 56; i += 8)
    {
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
    }
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    uint64_t v6 = *(void *)v11;
    swift_beginAccess();
    uint64_t v9 = swift_bridgeObjectRetain();
    specialized Dictionary._Variant.setValue(_:forKey:)(v9, v2);
    swift_endAccess();
  }
  return v6;
}

uint64_t protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance InCallBannerViewConstraintManager(uint64_t a1)
{
  return InCallBannerViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(a1);
}

void sub_1C369D660(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 176))();
}

uint64_t sub_1C369D6AC(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 184))(*a1);
}

uint64_t type metadata accessor for InCallBannerViewConstraintManager()
{
  return self;
}

uint64_t method lookup function for InCallBannerViewConstraintManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InCallBannerViewConstraintManager);
}

uint64_t dispatch thunk of InCallBannerViewConstraintManager.visibleTranslation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of InCallBannerViewConstraintManager.visibleTranslation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of InCallBannerViewConstraintManager.visibleTranslation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of InCallBannerViewConstraintManager.__allocating_init(layoutIdiom:containingGuide:containingView:visibleGuide:bannerView:bannerDodgingGuide:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t InCallBannerViewConstraintManager.horizontalConstraints(forState:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C3769610;
  uint64_t v2 = *(void **)(v0 + 40);
  id v3 = objc_msgSend(v2, sel_centerXAnchor);
  unint64_t v4 = *(void **)(v0 + 80);
  id v5 = objc_msgSend(v4, sel_centerXAnchor);
  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v5);

  *(void *)(v1 + 32) = v6;
  id v7 = objc_msgSend(v2, sel_widthAnchor);
  id v8 = objc_msgSend(v4, sel_widthAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(void *)(v1 + 40) = v9;
  specialized Array._endMutation()();
  return v1;
}

uint64_t InCallBannerViewConstraintManager.verticalConstraints(forState:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C3769610;
  uint64_t v2 = *(void **)(v0 + 56);
  *(void *)(v1 + 32) = v2;
  id v3 = *(void **)(v0 + 40);
  id v4 = v2;
  id v5 = objc_msgSend(v3, sel_heightAnchor);
  id v6 = objc_msgSend(*(id *)(v0 + 80), sel_heightAnchor);
  id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  *(void *)(v1 + 40) = v7;
  specialized Array._endMutation()();
  return v1;
}

uint64_t InCallBannerViewConstraintManager.layoutGuideConstraints(forState:)(unsigned __int8 *a1)
{
  int v2 = *a1;
  if (one-time initialization token for bottomInsetAfterPadding != -1) {
    swift_once();
  }
  double v3 = *(double *)&static Layout.MediaPip.bottomInsetAfterPadding;
  double v4 = static Layout.MediaPip.padding.getter();
  if (*(unsigned char *)(v1 + 16))
  {
    if (v2)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      if (v2 == 1)
      {
        uint64_t v5 = swift_allocObject();
        *(_OWORD *)(v5 + 16) = xmmword_1C3769610;
        id v6 = *(void **)(v1 + 48);
        id v7 = objc_msgSend(v6, sel_topAnchor);
        id v8 = objc_msgSend(*(id *)(v1 + 80), sel_bottomAnchor);
        id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, v3);
      }
      else
      {
        uint64_t v5 = swift_allocObject();
        *(_OWORD *)(v5 + 16) = xmmword_1C3769610;
        id v6 = *(void **)(v1 + 48);
        id v7 = objc_msgSend(v6, sel_topAnchor);
        id v8 = objc_msgSend(*(id *)(v1 + 80), sel_bottomAnchor);
        id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 58.0);
      }

      *(void *)(v5 + 32) = v9;
      id v10 = objc_msgSend(v6, sel_bottomAnchor);
      id v11 = objc_msgSend(*(id *)(v1 + 24), sel_bottomAnchor);
      id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, v4);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1C3769610;
      id v17 = *(void **)(v1 + 48);
      id v18 = objc_msgSend(v17, sel_topAnchor);
      id v19 = *(void **)(v1 + 24);
      id v20 = objc_msgSend(v19, sel_topAnchor);
      id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, -v4);

      *(void *)(v5 + 32) = v21;
      id v10 = objc_msgSend(v17, sel_bottomAnchor);
      id v11 = objc_msgSend(v19, sel_bottomAnchor);
      id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, v4);
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C3769610;
    id v13 = *(void **)(v1 + 48);
    id v14 = objc_msgSend(v13, sel_topAnchor);
    id v15 = objc_msgSend(*(id *)(v1 + 24), sel_topAnchor);
    id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, -v4);

    *(void *)(v5 + 32) = v16;
    id v10 = objc_msgSend(v13, sel_bottomAnchor);
    id v11 = objc_msgSend(*(id *)(v1 + 80), sel_topAnchor);
    id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, -v3);
  }
  id v22 = v12;

  *(void *)(v5 + 40) = v22;
  specialized Array._endMutation()();
  return v5;
}

BOOL static CallScreeningAnsweringState.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = a1[2];
  uint64_t v6 = a2[2];
  return specialized static CKStateMachineContainer.== infix(_:_:)(v5, v6);
}

uint64_t CallScreeningAnsweringState.init(prevState:callUUID:onEnterState:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, void *a5@<X8>)
{
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  uint64_t v10 = swift_allocObject();
  uint64_t result = swift_weakInit();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = v10;
  a5[3] = a3;
  a5[4] = a4;
  return result;
}

uint64_t CallScreeningAnsweringState.init(prevState:onEnterState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a4 = v10;
  a4[1] = v9;
  a4[2] = v8;
  a4[3] = a2;
  a4[4] = a3;
  return result;
}

uint64_t CallScreeningAnsweringState.callUUID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CallScreeningAnsweringState.stateMachineContainer.getter()
{
  return swift_retain();
}

uint64_t CallScreeningAnsweringState.onEnterState.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  return v1;
}

uint64_t CallScreeningAnsweringState.willExit(to:)(void *a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_9_91();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = CallScreeningState.stateMachine.getter(a2, WitnessTable);
  if (result)
  {
    uint64_t v32 = v8;
    uint64_t v33 = v6;
    v35[0] = *v2;
    OUTLINED_FUNCTION_4_126();
    v14();
    outlined retain of String((uint64_t)v35);
    swift_retain();
    swift_retain();
    outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined copy of CallScreening.State);
    outlined retain of String((uint64_t)v35);
    swift_retain();
    swift_retain();
    outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined copy of CallScreening.State);
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      int v29 = v17;
      uint64_t v19 = v18;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v36 = v30;
      *(_DWORD *)uint64_t v19 = 136446466;
      uint64_t v31 = v3;
      os_log_t v28 = v15;
      unint64_t v20 = CallScreeningAnsweringState.description.getter();
      unint64_t v22 = v21;
      outlined release of String((uint64_t)v35);
      swift_release();
      swift_release();
      uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined release of String((uint64_t)v35);
      swift_release();
      swift_release();
      *(_WORD *)(v19 + 12) = 2082;
      outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined copy of CallScreening.State);
      unint64_t v23 = CallScreening.State.description.getter();
      unint64_t v25 = v24;
      outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined consume of CallScreening.State);
      uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v25, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined consume of CallScreening.State);
      outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined consume of CallScreening.State);
      os_log_t v26 = v28;
      _os_log_impl(&dword_1C2F90000, v28, (os_log_type_t)v29, "%{public}s Exiting to %{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
      swift_unknownObjectRelease();
    }
    else
    {
      outlined release of String((uint64_t)v35);
      swift_release();
      swift_release();
      outlined release of String((uint64_t)v35);
      swift_release();
      swift_release();
      outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined consume of CallScreening.State);
      outlined retain of CallScreening.State(a1, (void (*)(void, void, void, void, void, void, void))outlined consume of CallScreening.State);
      swift_unknownObjectRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v11, v33);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CallScreeningAnsweringState.enteredState()()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  uint64_t v5 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_9_91();
  uint64_t WitnessTable = swift_getWitnessTable();
  if (CallScreeningState.stateMachine.getter(v4, WitnessTable))
  {
    uint64_t v29 = v7;
    uint64_t v30 = v5;
    uint64_t v12 = v1[1];
    uint64_t v28 = *v1;
    os_log_t v26 = (void (*)(void *, uint64_t, uint64_t))v1[3];
    uint64_t v13 = v1[4];
    OUTLINED_FUNCTION_4_126();
    v14();
    uint64_t v27 = v12;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v25 = v13;
    swift_retain();
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v24 = v2;
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v23 = swift_slowAlloc();
      v31[0] = v23;
      *(_DWORD *)uint64_t v18 = 136446210;
      v22[1] = v18 + 4;
      unint64_t v19 = CallScreeningAnsweringState.description.getter();
      v31[7] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v21 = v27;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      _os_log_impl(&dword_1C2F90000, v15, v16, "EnteredState %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
      uint64_t v21 = v27;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
    v26(v3, v28, v21);
    swift_unknownObjectRelease();
  }
}

uint64_t CallScreeningAnsweringState.update(with:)(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  uint64_t v4 = type metadata accessor for Logger();
  v3[20] = v4;
  v3[21] = *(void *)(v4 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v5 = static CKStateMachineActor.shared;
  v3[27] = static CKStateMachineActor.shared;
  return MEMORY[0x1F4188298](CallScreeningAnsweringState.update(with:), v5, 0);
}

uint64_t CallScreeningAnsweringState.update(with:)()
{
  uint64_t v106 = v0;
  uint64_t v1 = *(void *)(v0 + 152);
  v109 = *(uint64_t **)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 136);
  v105[0] = 0;
  v105[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(80);
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0xE000000000000000;
  v3._countAndFlagsBits = 0x617473206C6C6163;
  v3._object = (void *)0xED0000203A737574;
  String.append(_:)(v3);
  int v102 = *(unsigned __int8 *)(v2 + 32);
  *(unsigned char *)(v0 + 272) = v102;
  _print_unlocked<A, B>(_:_:)();
  v4._countAndFlagsBits = 0xD00000000000001ALL;
  v4._object = (void *)0x80000001C37BDE40;
  String.append(_:)(v4);
  char log = *(unsigned char *)(v2 + 35);
  if (log) {
    uint64_t v5 = 1702195828;
  }
  else {
    uint64_t v5 = 0x65736C6166;
  }
  if (*(unsigned char *)(v2 + 35)) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  unint64_t v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x657263537369202CLL;
  v8._object = (void *)0xEF203A676E696E65;
  String.append(_:)(v8);
  char v95 = *(unsigned char *)(v2 + 33);
  if (v95) {
    uint64_t v9 = 1702195828;
  }
  else {
    uint64_t v9 = 0x65736C6166;
  }
  if (*(unsigned char *)(v2 + 33)) {
    unint64_t v10 = 0xE400000000000000;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x80000001C37BDE60;
  v12._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v12);
  uint64_t v13 = *(void *)(v2 + 40);
  *(void *)(v0 + 88) = v13;
  v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v0 + 72);
  unint64_t v16 = *(void *)(v0 + 80);
  uint64_t v17 = *(void *)(v1 + 32);
  long long v18 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 32) = v18;
  *(void *)(v0 + 48) = v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v20 = (uint64_t *)CallScreeningState.stateMachine.getter((uint64_t)v109, WitnessTable);
  *(void *)(v0 + 224) = v20;
  v109 = v20;
  if (v20)
  {
    uint64_t v87 = v13;
    uint64_t v21 = *(void *)(v0 + 136);
    *(_OWORD *)(v0 + 56) = *(_OWORD *)*(void *)(v0 + 152);
    unint64_t v22 = *(void *)(v21 + 24);
    BOOL v23 = *(void *)(v21 + 16) == *(void *)(v0 + 56) && v22 == *(void *)(v0 + 64);
    uint64_t v88 = *(void *)(v21 + 16);
    if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v94 = v0 + 56;
      uint64_t v90 = v15;
      uint64_t v24 = *(void *)(*(void *)(v0 + 144) + 16);
      OUTLINED_FUNCTION_12_75();
      uint64_t v100 = v25;
      OUTLINED_FUNCTION_4_126();
      v26();
      swift_bridgeObjectRetain_n();
      uint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.default.getter();
      BOOL v29 = os_log_type_enabled(v27, v28);
      uint64_t v30 = *(void *)(v0 + 168);
      uint64_t v92 = *(void *)(v0 + 160);
      uint64_t v93 = *(void *)(v0 + 208);
      unint64_t v91 = v16;
      if (v29)
      {
        uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_37();
        uint64_t v32 = OUTLINED_FUNCTION_9_0();
        OUTLINED_FUNCTION_6_114(v32);
        *(_DWORD *)uint64_t v31 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 128) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v105);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C2F90000, v27, v28, "Answering machine state updating with %{public}s", v31, 0xCu);
        OUTLINED_FUNCTION_119();
        uint64_t v24 = v89;
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      double v42 = *(NSObject **)(v30 + 8);
      ((void (*)(uint64_t, uint64_t))v42)(v93, v92);
      uint64_t v43 = *(long long **)(v0 + 152);
      uint64_t v44 = swift_allocObject();
      *(void *)(v0 + 232) = v44;
      uint64_t v45 = v100;
      *(void *)(v44 + 16) = v24;
      *(void *)(v44 + 24) = v100;
      long long v47 = *v43;
      long long v46 = v43[1];
      *(void *)(v44 + 64) = *((void *)v43 + 4);
      *(_OWORD *)(v44 + 32) = v47;
      *(_OWORD *)(v44 + 48) = v46;
      if (v102 != 1)
      {
        if (v102 == 4 && (log & 1) != 0)
        {
          outlined retain of String(v94);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_release();
          goto LABEL_43;
        }
        goto LABEL_35;
      }
      if ((v95 & 1) == 0)
      {
LABEL_35:
        outlined retain of String(v94);
        swift_retain();
        swift_retain();
        uint64_t v58 = OUTLINED_FUNCTION_2_133();
        v59(v58);
        swift_bridgeObjectRetain();
        v60 = Logger.logObject.getter();
        os_log_type_t v61 = static os_log_type_t.default.getter();
        BOOL v62 = os_log_type_enabled(v60, v61);
        uint64_t v63 = *(void *)(v0 + 184);
        uint64_t v104 = *(void *)(v0 + 160);
        if (v62)
        {
          os_log_t logb = v42;
          v64 = (uint8_t *)OUTLINED_FUNCTION_37();
          uint64_t v65 = OUTLINED_FUNCTION_9_0();
          OUTLINED_FUNCTION_6_114(v65);
          *(_DWORD *)v64 = 136446210;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 112) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v90, v91, v105);
          uint64_t v45 = v100;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C2F90000, v60, v61, "Transitioning to ending state, recieved %{public}s", v64, 0xCu);
          OUTLINED_FUNCTION_119();
          OUTLINED_FUNCTION_3();
          OUTLINED_FUNCTION_3();

          ((void (*)(uint64_t, uint64_t))logb)(v63, v104);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          ((void (*)(uint64_t, uint64_t))v42)(v63, v104);
        }
        uint64_t v101 = *(void *)(v45 + 32) + **(int **)(v45 + 32);
        v66 = (void *)swift_task_alloc();
        *(void *)(v0 + 256) = v66;
        void *v66 = v0;
        v66[1] = CallScreeningAnsweringState.update(with:);
        uint64_t v108 = v45;
        goto LABEL_39;
      }
      outlined retain of String(v94);
      swift_retain();
      swift_retain();
      if (v87)
      {
        os_log_t loga = v42;
        uint64_t v69 = OUTLINED_FUNCTION_2_133();
        v70(v69);
        swift_bridgeObjectRetain();
        v71 = Logger.logObject.getter();
        os_log_type_t v72 = static os_log_type_t.default.getter();
        BOOL v73 = os_log_type_enabled(v71, v72);
        uint64_t v74 = *(void *)(v0 + 192);
        uint64_t v75 = *(void *)(v0 + 160);
        if (v73)
        {
          uint64_t v96 = *(void *)(v0 + 192);
          v76 = (uint8_t *)OUTLINED_FUNCTION_37();
          uint64_t v77 = OUTLINED_FUNCTION_9_0();
          OUTLINED_FUNCTION_6_114(v77);
          *(_DWORD *)v76 = 136446210;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 120) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v90, v91, v105);
          uint64_t v45 = v100;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C2F90000, v71, v72, "Transitioning to screening state, recieved %{public}s", v76, 0xCu);
          OUTLINED_FUNCTION_119();
          OUTLINED_FUNCTION_3();
          OUTLINED_FUNCTION_3();

          uint64_t v78 = v96;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          uint64_t v78 = v74;
        }
        ((void (*)(uint64_t, uint64_t))loga)(v78, v75);
        uint64_t v101 = *(void *)(v45 + 32) + **(int **)(v45 + 32);
        v86 = (void *)swift_task_alloc();
        *(void *)(v0 + 240) = v86;
        void *v86 = v0;
        v86[1] = CallScreeningAnsweringState.update(with:);
        uint64_t v108 = v45;
LABEL_39:
        __asm { BRAA            X9, X16 }
      }
      swift_bridgeObjectRelease();
      uint64_t v79 = OUTLINED_FUNCTION_2_133();
      v80(v79);
      v81 = Logger.logObject.getter();
      os_log_type_t v82 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v81, v82))
      {
        v83 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v83 = 0;
        _os_log_impl(&dword_1C2F90000, v81, v82, "Call is answered but the streaming token is 0, waiting for updates.", v83, 2u);
        OUTLINED_FUNCTION_3();
      }
      uint64_t v84 = *(void *)(v0 + 200);
      uint64_t v85 = *(void *)(v0 + 160);

      swift_unknownObjectRelease();
      swift_release();
      ((void (*)(uint64_t, uint64_t))v42)(v84, v85);
    }
    else
    {
      uint64_t v48 = *(void *)(v0 + 136);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_12_75();
      OUTLINED_FUNCTION_4_126();
      v49();
      outlined retain of AnsweringMachineCallStatus(v48);
      outlined retain of AnsweringMachineCallStatus(v48);
      v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.default.getter();
      BOOL v52 = os_log_type_enabled(v50, v51);
      uint64_t v54 = *(void *)(v0 + 168);
      uint64_t v53 = *(void *)(v0 + 176);
      uint64_t v55 = *(void *)(v0 + 160);
      uint64_t v56 = *(void *)(v0 + 136);
      if (v52)
      {
        uint64_t v103 = *(void *)(v0 + 176);
        v57 = (uint8_t *)OUTLINED_FUNCTION_37();
        v105[0] = OUTLINED_FUNCTION_9_0();
        *(_DWORD *)v57 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 104) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v88, v22, v105);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined release of AnsweringMachineCallStatus(v56);
        outlined release of AnsweringMachineCallStatus(v56);
        _os_log_impl(&dword_1C2F90000, v50, v51, "Answering machine state ignoreing stateupdate for call with nonmathcing uuid %{public}s", v57, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();

        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v103, v55);
      }
      else
      {
        swift_unknownObjectRelease();
        outlined release of AnsweringMachineCallStatus(v56);
        outlined release of AnsweringMachineCallStatus(v56);

        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for answeringMachine != -1) {
      swift_once();
    }
    uint64_t v33 = *(void *)(v0 + 136);
    __swift_project_value_buffer(*(void *)(v0 + 160), (uint64_t)static Logger.answeringMachine);
    outlined retain of AnsweringMachineCallStatus(v33);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v37 = *(void *)(v0 + 136);
    if (v36)
    {
      v109 = (uint64_t *)(v0 + 96);
      id v38 = (uint8_t *)OUTLINED_FUNCTION_37();
      v105[0] = OUTLINED_FUNCTION_9_0();
      *(_DWORD *)id v38 = 136446210;
      uint64_t v39 = *(void *)(v37 + 16);
      unint64_t v40 = *(void *)(v37 + 24);
      swift_bridgeObjectRetain();
      uint64_t v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, v105);
      uint64_t *v109 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined release of AnsweringMachineCallStatus(v37);
      _os_log_impl(&dword_1C2F90000, v34, v35, "Answering machine state ignoring stateupdate uuid %{public}s because our statemachine is nill", v38, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
      outlined release of AnsweringMachineCallStatus(*(void *)(v0 + 136));
    }
  }
LABEL_43:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v67 = *(uint64_t (**)(void))(v0 + 8);
  return v67();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v6;

  OUTLINED_FUNCTION_0_66();
  *(void *)(v2 + 248) = v0;
  swift_task_dealloc();
  Swift::String v3 = *(void *)(v1 + 216);
  if (v0) {
    Swift::String v4 = CallScreeningAnsweringState.update(with:);
  }
  else {
    Swift::String v4 = CallScreeningAnsweringState.update(with:);
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v6;

  OUTLINED_FUNCTION_0_66();
  *(void *)(v2 + 264) = v0;
  swift_task_dealloc();
  Swift::String v3 = *(void *)(v1 + 216);
  if (v0) {
    Swift::String v4 = CallScreeningAnsweringState.update(with:);
  }
  else {
    Swift::String v4 = CallScreeningAnsweringState.update(with:);
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_10_84();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_10_84();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void closure #1 in CallScreeningAnsweringState.update(with:)(long long *a1, void *a2)
{
  outlined init with take of CallScreening.State(a1, (uint64_t)v6);
  if (v7 >> 61 == 3)
  {
    v7 &= 0x1FFFFFFFFFFFFFFFuLL;
    if (v6[0] == *a2 && v6[1] == a2[1]) {
      char v3 = 1;
    }
    else {
      char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  else
  {
    char v3 = 0;
    v7 &= 0x1FFFFFFFFFFFFFFFuLL;
  }
  lazy protocol witness table accessor for type CKStateMachineError and conformance CKStateMachineError();
  Swift::String v4 = (void *)swift_allocError();
  if (v3) {

  }
  else {
    swift_willThrow();
  }
}

uint64_t protocol witness for CallScreeningState.willExit(to:) in conformance CallScreeningAnsweringState<A>(void *a1, uint64_t a2)
{
  return CallScreeningAnsweringState.willExit(to:)(a1, a2);
}

void protocol witness for CallScreeningState.enteredState() in conformance CallScreeningAnsweringState<A>()
{
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningAnsweringState<A>(uint64_t a1, uint64_t a2)
{
  long long v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v6;
  *(void *)(v3 + 48) = *(void *)(v2 + 32);
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 56) = v7;
  *unint64_t v7 = v3;
  v7[1] = protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningAnsweringState<A>;
  return CallScreeningAnsweringState.update(with:)(a1, a2);
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningAnsweringState<A>()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t CallScreeningAnsweringState.description.getter()
{
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  uint64_t v2 = *v0;
  uint64_t v1 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD000000000000019;
}

uint64_t sub_1C369FC60()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallScreeningAnsweringState.update(with:)(long long *a1)
{
  closure #1 in CallScreeningAnsweringState.update(with:)(a1, (void *)(v1 + 32));
}

uint64_t instantiation function for generic protocol witness table for CallScreeningAnsweringState<A>(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t destroy for CallScreeningAnsweringState()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CallScreeningAnsweringState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CallScreeningAnsweringState(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[4];
  a1[3] = a2[3];
  a1[4] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CallScreeningAnsweringState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for CallScreeningAnsweringState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t CallScreeningActor.ActorType.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t CallScreeningActor.ActorType.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t CallScreeningActor.ActorType.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  return v0;
}

uint64_t CallScreeningActor.ActorType.init()()
{
  swift_defaultActor_initialize();
  return v0;
}

uint64_t CallScreeningActor.ActorType.unownedExecutor.getter()
{
  return v0;
}

uint64_t protocol witness for Actor.unownedExecutor.getter in conformance CallScreeningActor.ActorType()
{
  return CallScreeningActor.ActorType.unownedExecutor.getter();
}

uint64_t static CallScreeningActor.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t type metadata accessor for CallScreeningActor.ActorType()
{
  return self;
}

uint64_t protocol witness for static GlobalActor.sharedUnownedExecutor.getter in conformance CallScreeningActor()
{
  return MEMORY[0x1F4187F20]();
}

ValueMetadata *type metadata accessor for CallScreeningActor()
{
  return &type metadata for CallScreeningActor;
}

uint64_t method lookup function for CallScreeningActor.ActorType(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CallScreeningActor.ActorType);
}

uint64_t dispatch thunk of CallScreeningActor.ActorType.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t AlternatingLabelController.__allocating_init(label:timeInterval:alternatingBetween:observer:)()
{
  OUTLINED_FUNCTION_3_140();
  double v7 = OUTLINED_FUNCTION_1_146();
  return specialized AlternatingLabelController.__allocating_init(label:timeInterval:alternatingBetween:observer:)(v0, v1, v2, v3, v7, v4, v5, v6);
}

uint64_t AlternatingLabelController.init(label:timeInterval:alternatingBetween:observer:)()
{
  OUTLINED_FUNCTION_3_140();
  double v7 = OUTLINED_FUNCTION_1_146();
  return specialized AlternatingLabelController.init(label:timeInterval:alternatingBetween:observer:)(v0, v1, v7, v2, v3, v4, v5, v6);
}

Swift::Void __swiftcall AlternatingLabelController.start()()
{
  uint64_t v2 = v0;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x1F4188790](v3);
  char v4 = OUTLINED_FUNCTION_2_134();
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  uint64_t v5 = OUTLINED_FUNCTION_2_52();
  v6(v5);
  _dispatchPreconditionTest(_:)();
  uint64_t v7 = OUTLINED_FUNCTION_1_18();
  uint64_t v9 = v8(v7);
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 264))(v9);
    unint64_t v10 = self;
    double v11 = v2[5];
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = partial apply for closure #1 in AlternatingLabelController.start();
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
    aBlock[3] = &block_descriptor_109;
    uint64_t v13 = _Block_copy(aBlock);
    swift_release();
    id v14 = objc_msgSend(v10, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v13, v11);
    _Block_release(v13);
    uint64_t v15 = (void *)*((void *)v2 + 2);
    *((void *)v2 + 2) = v14;
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #1 in AlternatingLabelController.start()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v4;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #1 in AlternatingLabelController.start()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a4;
  return MEMORY[0x1F4188298](closure #1 in closure #1 in AlternatingLabelController.start(), 0, 0);
}

uint64_t closure #1 in closure #1 in AlternatingLabelController.start()()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    type metadata accessor for MainActor();
    *(void *)(v0 + 64) = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return MEMORY[0x1F4188298](closure #1 in closure #1 in AlternatingLabelController.start(), v3, v2);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

{
  uint64_t v1;

  swift_release();
  AlternatingLabelController.updateLabel()();
  swift_release();
  return MEMORY[0x1F4188298](closure #1 in closure #1 in DurationLabelController.start(), 0, 0);
}

Swift::Void __swiftcall AlternatingLabelController.stop()()
{
  uint64_t v2 = v0;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x1F4188790](v3);
  char v4 = OUTLINED_FUNCTION_2_134();
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  uint64_t v5 = OUTLINED_FUNCTION_2_52();
  v6(v5);
  _dispatchPreconditionTest(_:)();
  uint64_t v7 = OUTLINED_FUNCTION_1_18();
  v8(v7);
  if (v4)
  {
    objc_msgSend(*(id *)(v2 + 16), sel_invalidate);
    uint64_t v9 = *(void **)(v2 + 16);
    *(void *)(v2 + 16) = 0;
  }
  else
  {
    __break(1u);
  }
}

void AlternatingLabelController.updateLabel()()
{
  unint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v2 >= v3 - 1) {
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(v0 + 56);
  unint64_t v1 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_8:
    unint64_t v1 = 0;
  }
  *(void *)(v0 + 56) = v1;
  uint64_t v3 = *(void *)(v0 + 48);
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v1, (v3 & 0xC000000000000001) == 0, v3);
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    id v5 = (id)MEMORY[0x1C87744F0](v1, v3);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  id v5 = *(id *)(v3 + 8 * v1 + 32);
LABEL_11:
  uint64_t v6 = self;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = partial apply for closure #1 in AlternatingLabelController.updateLabel();
  uint64_t v18 = v7;
  uint64_t v13 = MEMORY[0x1E4F143A8];
  uint64_t v14 = 1107296256;
  uint64_t v15 = thunk for @escaping @callee_guaranteed () -> ();
  unint64_t v16 = &block_descriptor_20_1;
  Swift::String v8 = _Block_copy(&v13);
  swift_release();
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v5;
  uint64_t v17 = partial apply for closure #2 in AlternatingLabelController.updateLabel();
  uint64_t v18 = v10;
  uint64_t v13 = MEMORY[0x1E4F143A8];
  uint64_t v14 = 1107296256;
  uint64_t v15 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
  unint64_t v16 = &block_descriptor_27_1;
  double v11 = _Block_copy(&v13);
  id v12 = v5;
  swift_release();
  objc_msgSend(v6, sel_animateWithDuration_animations_completion_, v8, v11, 0.2);
  _Block_release(v11);
  _Block_release(v8);
}

void closure #2 in AlternatingLabelController.updateLabel()(char a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    uint64_t v7 = (void *)MEMORY[0x1C8776240](Strong + 24);
    uint64_t v8 = *(void *)(v6 + 32);
    swift_release();
    if (v7)
    {
      if ((a1 & 1) == 0) {
        objc_msgSend(v7, sel_setAlpha_, 0.0);
      }
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 16);
      id v11 = a3;
      v10(a3, ObjectType, v8);
      swift_beginAccess();
      uint64_t v12 = swift_weakLoadStrong();
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = MEMORY[0x1C8776240](v12 + 64);
        uint64_t v15 = *(void *)(v13 + 72);
        swift_release();
        if (v14)
        {
          uint64_t v16 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
          swift_unknownObjectRelease();
        }
      }
      uint64_t v17 = self;
      uint64_t v18 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      aBlock[4] = partial apply for closure #1 in closure #2 in AlternatingLabelController.updateLabel();
      aBlock[5] = v18;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_31_2;
      unint64_t v19 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v17, sel_animateWithDuration_animations_, v19, 0.2);
      _Block_release(v19);
    }
  }
}

void closure #1 in AlternatingLabelController.updateLabel()(double a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)MEMORY[0x1C8776240](Strong + 24);
    swift_release();
    if (v3)
    {
      objc_msgSend(v3, sel_setAlpha_, a1);
    }
  }
}

uint64_t AlternatingLabelController.deinit()
{
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 24);
  swift_bridgeObjectRelease();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 64);
  return v0;
}

uint64_t AlternatingLabelController.__deallocating_deinit()
{
  AlternatingLabelController.deinit();
  return swift_deallocClassInstance();
}

uint64_t specialized AlternatingLabelController.__allocating_init(label:timeInterval:alternatingBetween:observer:)(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  type metadata accessor for AlternatingLabelController();
  uint64_t v15 = swift_allocObject();
  return specialized AlternatingLabelController.init(label:timeInterval:alternatingBetween:observer:)(a1, a2, a5, a3, a4, v15, a7, a8);
}

uint64_t specialized AlternatingLabelController.init(label:timeInterval:alternatingBetween:observer:)(void *a1, unint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(a6 + 16) = 0;
  *(void *)(a6 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a6 + 56) = 0;
  *(void *)(a6 + 72) = 0;
  swift_unknownObjectWeakInit();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    if (!v15) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v15) {
      goto LABEL_6;
    }
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0) {
    id v16 = (id)MEMORY[0x1C87744F0](0, a2);
  }
  else {
    id v16 = *(id *)(a2 + 32);
  }
  uint64_t v15 = (uint64_t)v16;
LABEL_6:
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a8 + 16))(v15, a7, a8);
  *(void *)(a6 + 32) = a8;
  swift_unknownObjectWeakAssign();

  *(void *)(a6 + 48) = a2;
  *(double *)(a6 + 40) = a3;
  *(void *)(a6 + 72) = a5;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return a6;
}

uint64_t sub_1C36A0DE4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AlternatingLabelController.start()()
{
  return closure #1 in AlternatingLabelController.start()();
}

uint64_t dispatch thunk of AlternatingLabelObserver.labelUpdated()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AlternatingLabel.attributedText.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AlternatingLabel.attributedText.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AlternatingLabel.attributedText.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for AlternatingLabelController()
{
  return self;
}

uint64_t method lookup function for AlternatingLabelController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AlternatingLabelController);
}

uint64_t dispatch thunk of AlternatingLabelController.__allocating_init(label:timeInterval:alternatingBetween:observer:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of AlternatingLabelController.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of AlternatingLabelController.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

void partial apply for closure #1 in AlternatingLabelController.updateLabel()()
{
}

uint64_t sub_1C36A0F3C()
{
  swift_release();

  return swift_deallocObject();
}

void partial apply for closure #2 in AlternatingLabelController.updateLabel()(char a1)
{
  closure #2 in AlternatingLabelController.updateLabel()(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void partial apply for closure #1 in closure #2 in AlternatingLabelController.updateLabel()()
{
}

uint64_t sub_1C36A0FA4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in AlternatingLabelController.start()(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return closure #1 in closure #1 in AlternatingLabelController.start()(a1, v4, v5, v6);
}

Swift::Void __swiftcall UIVisualEffectView.applyEffect(_:)(ConversationKit::PlatformEffectViewStyle a1)
{
  id v2 = objc_msgSend(self, sel_effectWithStyle_, qword_1C378B490[a1]);
  objc_msgSend(v1, sel_setEffect_, v2);
}

Swift::Void __swiftcall UIVisualEffectView.removeEffect()()
{
  objc_msgSend(v0, sel_setEffect_, 0);
}

id static ClarityUIContactAvatar.requiredDescriptor(for:)(uint64_t a1)
{
  id v1 = objc_msgSend(self, sel_settingsWithContactStore_, a1);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BB40]), sel_initWithSettings_, v1);

  id v3 = objc_msgSend(v2, sel_descriptorForRequiredKeys);
  return v3;
}

ConversationKit::ClarityUIContactAvatar __swiftcall ClarityUIContactAvatar.init(cnContact:contactStore:)(CNContact cnContact, CNContactStore contactStore)
{
  *(CNContact *)uint64_t v2 = cnContact;
  *(CNContactStore *)(v2 + 8) = contactStore;
  result.contactStore = contactStore;
  result.cnContact = cnContact;
  return result;
}

id ClarityUIContactAvatar.cnContact.getter()
{
  return *v0;
}

void ClarityUIContactAvatar.cnContact.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*ClarityUIContactAvatar.cnContact.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id ClarityUIContactAvatar.contactStore.getter()
{
  return *(id *)(v0 + 8);
}

void ClarityUIContactAvatar.contactStore.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*ClarityUIContactAvatar.contactStore.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id ClarityUIContactAvatar.makeUIViewController(context:)()
{
  uint64_t v1 = *(void **)v0;
  id v2 = objc_msgSend(self, sel_settingsWithContactStore_, *(void *)(v0 + 8));
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BB40]), sel_initWithSettings_, v2);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C3769830;
  *(void *)(v4 + 32) = v1;
  specialized Array._endMutation()();
  type metadata accessor for CNContact();
  id v5 = v1;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setContacts_, isa);

  return v3;
}

void ClarityUIContactAvatar.updateUIViewController(_:context:)(void *a1)
{
  id v3 = *v1;
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = (void *)v4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C3769830;
    *(void *)(v6 + 32) = v3;
    specialized Array._endMutation()();
    type metadata accessor for CNContact();
    id v7 = a1;
    id v8 = v3;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setContacts_, isa);
  }
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ClarityUIContactAvatar(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar();
  return MEMORY[0x1F40FAB70](a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ClarityUIContactAvatar(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar();
  return MEMORY[0x1F40FAB28](a1, a2, a3, v6);
}

void protocol witness for View.body.getter in conformance ClarityUIContactAvatar()
{
}

ValueMetadata *type metadata accessor for ClarityUIContactAvatar()
{
  return &type metadata for ClarityUIContactAvatar;
}

uint64_t static ViewBuilder.buildBlock<each A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  id v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t TupleTypeMetadata = *v5;
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    OUTLINED_FUNCTION_21();
    uint64_t v9 = (void *)(v8 - v7);
    if (a2)
    {
      uint64_t v10 = v5;
      id v11 = v9;
      uint64_t v12 = a2;
      do
      {
        uint64_t v13 = *v10++;
        *v11++ = v13;
        --v12;
      }
      while (v12);
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  OUTLINED_FUNCTION_48();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_21();
  if (a2)
  {
    uint64_t v15 = TupleTypeMetadata + 32;
    uint64_t v16 = a2;
    do
    {
      ++v5;
      v4 += 8;
      OUTLINED_FUNCTION_48();
      (*(void (**)(void))(v17 + 16))();
      v15 += 16;
      --v16;
    }
    while (v16);
  }
  return TupleView.init(_:)();
}

uint64_t specialized ClarityUIShadowedContent.init(shape:isPressed:invertsInnerShadows:includesDropShadow:content:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>);
  MEMORY[0x1F4188790](v11 - 8);
  OUTLINED_FUNCTION_21();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>);
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_21();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_61();
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>);
  BOOL v23 = (int *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_21();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = v23[19];
  *(void *)(v26 + v27) = static Color.white.getter();
  *(_DWORD *)(v26 + v23[20]) = 1050253722;
  uint64_t v28 = v23[21];
  *(void *)(v26 + v28) = static Color.black.getter();
  *(_DWORD *)(v26 + v23[22]) = 1050253722;
  *(void *)(v26 + v23[23]) = 0x4000000000000000;
  *(void *)(v26 + v23[24]) = 0x3FF0000000000000;
  *(void *)(v26 + v23[25]) = 0xBFF0000000000000;
  outlined init with copy of RoundedRectangle(a1, v26);
  *(unsigned char *)(v26 + v23[15]) = a2;
  *(unsigned char *)(v26 + v23[16]) = a3;
  *(unsigned char *)(v26 + v23[17]) = a4;
  *(void *)uint64_t v14 = static VerticalAlignment.center.getter();
  *(void *)(v14 + 8) = 0;
  *(unsigned char *)(v14 + 16) = 0;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>);
  closure #1 in closure #1 in closure #1 in EnteredNumbersView.body.getter(a5, a6, a7, a8, v14 + *(int *)(v29 + 44));
  LOBYTE(v27) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  outlined init with copy of LinkShareCoordinatorProtocol?(v14, v19, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>);
  uint64_t v38 = v19 + *(int *)(v16 + 44);
  *(unsigned char *)uint64_t v38 = v27;
  *(void *)(v38 + 8) = v31;
  *(void *)(v38 + 16) = v33;
  *(void *)(v38 + 24) = v35;
  *(void *)(v38 + 32) = v37;
  *(unsigned char *)(v38 + 40) = 0;
  outlined destroy of NSRunLoop.SchedulerOptions?(v14, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>);
  uint64_t v39 = static Color.clarityUIButtonBackground.getter();
  LOBYTE(v27) = static Edge.Set.all.getter();
  outlined init with copy of LinkShareCoordinatorProtocol?(v19, v9, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>);
  uint64_t v40 = v9 + *(int *)(v21 + 44);
  *(void *)uint64_t v40 = v39;
  *(unsigned char *)(v40 + 8) = v27;
  outlined destroy of NSRunLoop.SchedulerOptions?(v19, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>);
  outlined destroy of RoundedRectangle(a1);
  _sypSgWObTm_0(v9, v26 + v23[18], &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  _sypSgWObTm_0(v26, a9, &demangling cache variable for type metadata for ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t ClarityUIShadowedContent.init(shape:isPressed:invertsInnerShadows:includesDropShadow:content:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  OUTLINED_FUNCTION_5_3();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_61();
  uint64_t v17 = (int *)type metadata accessor for ClarityUIShadowedContent();
  uint64_t v18 = v17[17];
  *(void *)(a8 + v18) = static Color.white.getter();
  *(_DWORD *)(a8 + v17[18]) = 1050253722;
  uint64_t v19 = v17[19];
  *(void *)(a8 + v19) = static Color.black.getter();
  *(_DWORD *)(a8 + v17[20]) = 1050253722;
  *(void *)(a8 + v17[21]) = 0x4000000000000000;
  *(void *)(a8 + v17[22]) = 0x3FF0000000000000;
  *(void *)(a8 + v17[23]) = 0xBFF0000000000000;
  uint64_t v20 = *(void *)(a7 - 8);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(a8, a1, a7);
  *(unsigned char *)(a8 + v17[13]) = a2;
  *(unsigned char *)(a8 + v17[14]) = a3;
  *(unsigned char *)(a8 + v17[15]) = a4;
  a5(v21);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a1, a7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(a8 + v17[16], v8, a6);
}

uint64_t type metadata accessor for ClarityUIShadowedContent()
{
  return swift_getGenericMetadata();
}

uint64_t default argument 1 of View.clipShape<A>(_:style:)()
{
  return 256;
}

uint64_t ClarityUIShadowedContent.shape.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_4_25(*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16), a2);
}

uint64_t ClarityUIShadowedContent.shape.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_3_12(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*ClarityUIShadowedContent.shape.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIShadowedContent.isPressed.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_8_87(*(int *)(a1 + 52));
}

uint64_t ClarityUIShadowedContent.isPressed.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_7_108(a1, *(int *)(a2 + 52));
}

uint64_t (*ClarityUIShadowedContent.isPressed.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIShadowedContent.invertsInnerShadows.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_8_87(*(int *)(a1 + 56));
}

uint64_t ClarityUIShadowedContent.invertsInnerShadows.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_7_108(a1, *(int *)(a2 + 56));
}

uint64_t (*ClarityUIShadowedContent.invertsInnerShadows.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIShadowedContent.includesDropShadow.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_8_87(*(int *)(a1 + 60));
}

uint64_t ClarityUIShadowedContent.includesDropShadow.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_7_108(a1, *(int *)(a2 + 60));
}

uint64_t (*ClarityUIShadowedContent.includesDropShadow.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIShadowedContent.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_4_25(*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16), a2);
}

uint64_t ClarityUIShadowedContent.content.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_3_12(v2 + *(int *)(a2 + 64), *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*ClarityUIShadowedContent.content.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIShadowedContent.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v57 = *(void *)(a1 + 40);
  uint64_t v48 = *(void *)(v57 + 8);
  uint64_t v4 = type metadata accessor for _ShadowView();
  OUTLINED_FUNCTION_5_3();
  uint64_t v62 = v5;
  MEMORY[0x1F4188790](v6);
  os_log_type_t v61 = (char *)&v43 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  OUTLINED_FUNCTION_5_3();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_21();
  uint64_t v44 = v13 - v12;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v76 = v4;
  uint64_t v77 = WitnessTable;
  uint64_t v53 = v4;
  uint64_t v54 = WitnessTable;
  swift_getOpaqueTypeMetadata2();
  OUTLINED_FUNCTION_6_115();
  uint64_t v46 = type metadata accessor for TupleView();
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v47 = type metadata accessor for _OverlayModifier();
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_5_3();
  uint64_t v50 = v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v52 = type metadata accessor for _ClipEffect();
  uint64_t v51 = type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_5_3();
  uint64_t v59 = v17;
  MEMORY[0x1F4188790](v18);
  v64 = (char *)&v43 - v19;
  uint64_t v58 = type metadata accessor for _BackgroundModifier();
  uint64_t v20 = type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_5_3();
  uint64_t v60 = v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v49 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v25 = MEMORY[0x1F4188790](v24);
  uint64_t v55 = (char *)&v43 - v26;
  uint64_t v27 = v56;
  uint64_t v28 = v44;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 16))(v44, v56 + *(int *)(a1 + 64), v8, v25);
  uint64_t v65 = v8;
  uint64_t v66 = v3;
  uint64_t v67 = *(void *)(a1 + 32);
  uint64_t v29 = v67;
  uint64_t v68 = v57;
  uint64_t v69 = v27;
  static Alignment.center.getter();
  View.overlay<A>(alignment:content:)();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v28, v8);
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v74 = v29;
  uint64_t v75 = v30;
  uint64_t v57 = MEMORY[0x1E4F3CC28];
  uint64_t v31 = swift_getWitnessTable();
  View.clipShape<A>(_:style:)();
  OUTLINED_FUNCTION_26_2();
  v32();
  static Color.clarityUIButtonShadowColor.getter();
  ClarityUIShadowedContent.shadowRadius.getter(a1);
  ClarityUIShadowedContent.shadowXOffset.getter(a1);
  ClarityUIShadowedContent.shadowYOffset.getter(a1);
  Shape.fillShadow(color:radius:x:y:)();
  swift_release();
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v72 = v31;
  uint64_t v73 = v33;
  uint64_t v34 = swift_getWitnessTable();
  static Alignment.center.getter();
  uint64_t v35 = v49;
  View.background<A>(_:alignment:)();
  OUTLINED_FUNCTION_26_2();
  v36();
  OUTLINED_FUNCTION_26_2();
  v37();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v70 = v34;
  uint64_t v71 = v38;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = v55;
  static ViewBuilder.buildExpression<A>(_:)(v35, v20, v39);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v60 + 8);
  v41(v35, v20);
  static ViewBuilder.buildExpression<A>(_:)(v40, v20, v39);
  return ((uint64_t (*)(char *, uint64_t))v41)(v40, v20);
}

uint64_t closure #1 in ClarityUIShadowedContent.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v63 = a5;
  uint64_t v65 = a4;
  uint64_t v73 = a6;
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v71 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v57 - v12;
  uint64_t v76 = *(void *)(v14 + 8);
  uint64_t v15 = type metadata accessor for _ShadowView();
  uint64_t v74 = v15;
  uint64_t v79 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v69 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v57 - v18;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)uint64_t v96 = v15;
  *(void *)&v96[8] = WitnessTable;
  uint64_t OpaqueTypeConformance2 = MEMORY[0x1E4F3E480];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v78 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x1F4188790](OpaqueTypeMetadata2);
  uint64_t v72 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v70 = (char *)&v57 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v67 = (char *)&v57 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v68 = (char *)&v57 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v57 - v29;
  __n128 v32 = MEMORY[0x1F4188790](v31);
  uint64_t v77 = (char *)&v57 - v33;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v60 = v9 + 16;
  v64 = v34;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v34)(v13, a1, a3, v32);
  *(void *)uint64_t v96 = a2;
  *(void *)&v96[8] = a3;
  uint64_t v35 = a3;
  *(void *)&v96[16] = v65;
  *(void *)&v96[24] = v63;
  uint64_t v36 = (int *)type metadata accessor for ClarityUIShadowedContent();
  uint64_t v65 = v36[14];
  uint64_t v63 = v36[21];
  swift_retain();
  uint64_t v58 = v35;
  Shape.fillShadow(color:radius:x:y:)();
  swift_release();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v61 = v9 + 8;
  uint64_t v62 = v37;
  v37(v13, v35);
  float v38 = *(float *)(a1 + v36[18]);
  int v84 = 1065353216;
  uint64_t v86 = 0;
  uint64_t v85 = 0;
  uint64_t v87 = 0x3F80000000000000;
  uint64_t v89 = 0;
  uint64_t v88 = 0;
  uint64_t v90 = 0x3F80000000000000;
  uint64_t v92 = 0;
  uint64_t v91 = 0;
  int v93 = 0;
  float v94 = -v38;
  float v95 = v38;
  uint64_t v39 = v74;
  uint64_t v40 = WitnessTable;
  View._colorMatrix(_:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v79 + 8);
  v79 += 8;
  uint64_t v59 = v41;
  v41(v19, v39);
  *(void *)uint64_t v96 = v39;
  *(void *)&v96[8] = v40;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static ViewBuilder.buildExpression<A>(_:)(v30, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  double v42 = *(void (**)(char *, uint64_t))(v78 + 8);
  v42(v30, OpaqueTypeMetadata2);
  uint64_t v43 = v71;
  uint64_t v44 = v58;
  v64(v71, a1, v58);
  swift_retain();
  uint64_t v45 = v69;
  Shape.fillShadow(color:radius:x:y:)();
  swift_release();
  v62(v43, v44);
  float v46 = *(float *)(a1 + v36[20]);
  *(_OWORD *)&v96[4] = 0uLL;
  *(_OWORD *)&v96[20] = 0x3F80000000000000uLL;
  uint64_t v97 = 0;
  uint64_t v98 = 0x3F80000000000000;
  uint64_t v100 = 0;
  uint64_t v99 = 0;
  *(_DWORD *)uint64_t v96 = 1065353216;
  int v101 = 0;
  float v102 = -v46;
  float v103 = v46;
  uint64_t v47 = v67;
  uint64_t v48 = v74;
  View._colorMatrix(_:)();
  v59(v45, v48);
  uint64_t v49 = v68;
  uint64_t v50 = OpaqueTypeConformance2;
  static ViewBuilder.buildExpression<A>(_:)(v47, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  v42(v47, OpaqueTypeMetadata2);
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  uint64_t v52 = v70;
  uint64_t v53 = v77;
  v51(v70, v77, OpaqueTypeMetadata2);
  v83[0] = v52;
  uint64_t v54 = v52;
  uint64_t v55 = v72;
  v51(v72, v49, OpaqueTypeMetadata2);
  v83[1] = v55;
  v82[0] = OpaqueTypeMetadata2;
  v82[1] = OpaqueTypeMetadata2;
  uint64_t v80 = v50;
  uint64_t v81 = v50;
  static ViewBuilder.buildBlock<each A>(_:)((uint64_t)v83, 2, (uint64_t)v82);
  v42(v49, OpaqueTypeMetadata2);
  v42(v53, OpaqueTypeMetadata2);
  v42(v55, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v42)(v54, OpaqueTypeMetadata2);
}

uint64_t partial apply for closure #1 in ClarityUIShadowedContent.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in ClarityUIShadowedContent.body.getter(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t ClarityUIShadowedContent.shadowRadius.getter(uint64_t result)
{
  if (*(unsigned char *)(v1 + *(int *)(result + 60)) == 1 && (*(unsigned char *)(v1 + *(int *)(result + 52)) & 1) == 0) {
    return MEMORY[0x1F40F8D10]();
  }
  return result;
}

uint64_t ClarityUIShadowedContent.shadowXOffset.getter(uint64_t result)
{
  if (*(unsigned char *)(v1 + *(int *)(result + 60)) == 1 && (*(unsigned char *)(v1 + *(int *)(result + 52)) & 1) == 0) {
    return static ClarityUIMetrics.buttonShadowOffset.getter();
  }
  return result;
}

double ClarityUIShadowedContent.shadowYOffset.getter(uint64_t a1)
{
  double result = 0.0;
  if (*(unsigned char *)(v1 + *(int *)(a1 + 60)) == 1 && (*(unsigned char *)(v1 + *(int *)(a1 + 52)) & 1) == 0)
  {
    static ClarityUIMetrics.buttonShadowOffset.getter();
    return v3;
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIShadowedContent<A, B>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata completion function for ClarityUIShadowedContent()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ClarityUIShadowedContent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((((((((((((((v11 + ((v6 + v9 + 3) & ~(unint64_t)v9)) & 0xFFFFFFFFFFFFFFF8)
                  + 11) & 0xFFFFFFFFFFFFFFF8)
                + 11) & 0xFFFFFFFFFFFFFFF8)
              + 11) & 0xFFFFFFFFFFFFFFF8)
            + 11) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  int v14 = (*(_DWORD *)(v5 + 80) | v9) & 0x100000;
  if (v13 > 7 || v14 != 0 || v12 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v17 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    uint64_t v18 = (char *)v4 + v6;
    *uint64_t v18 = *((unsigned char *)a2 + v6);
    v18[1] = *((unsigned char *)a2 + v6 + 1);
    v18[2] = *((unsigned char *)a2 + v6 + 2);
    uint64_t v19 = (char *)a2 + v6 + v10;
    uint64_t v20 = ((unint64_t)v4 + v6 + v10 + 3) & ~v10;
    uint64_t v21 = (unint64_t)(v19 + 3) & ~v10;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v20, v21, v7);
    uint64_t v22 = (void *)((v11 + v20) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = (void *)((v11 + v21) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v22 = *v23;
    uint64_t v24 = (_DWORD *)(((unint64_t)v22 + 11) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = (_DWORD *)(((unint64_t)v23 + 11) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v24 = *v25;
    uint64_t v26 = (void *)(((unint64_t)v24 + 11) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v27 = (void *)(((unint64_t)v25 + 11) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v26 = *v27;
    uint64_t v28 = (_DWORD *)(((unint64_t)v26 + 11) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v29 = (_DWORD *)(((unint64_t)v27 + 11) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v28 = *v29;
    uint64_t v30 = (void *)(((unint64_t)v28 + 11) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v31 = (void *)(((unint64_t)v29 + 11) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v30 = *v31;
    __n128 v32 = (void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v33 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
    *__n128 v32 = *v33;
    *(void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ClarityUIShadowedContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) - 8) + 8;
  (*(void (**)(void))v4)();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(void *)(v4 + 56)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 3) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ClarityUIShadowedContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = (unsigned char *)(v7 + a1);
  int v9 = (unsigned char *)(v7 + a2);
  unsigned char *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (unint64_t)&v8[v12 + 3] & ~v12;
  uint64_t v14 = (unint64_t)&v9[v12 + 3] & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 48) + 7;
  uint64_t v16 = (void *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  uint64_t v18 = (_DWORD *)(((unint64_t)v16 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (_DWORD *)(((unint64_t)v17 + 11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  uint64_t v20 = (void *)(((unint64_t)v18 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v19 + 11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  uint64_t v22 = (_DWORD *)(((unint64_t)v20 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (_DWORD *)(((unint64_t)v21 + 11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v22 = *v23;
  uint64_t v24 = (void *)(((unint64_t)v22 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)(((unint64_t)v23 + 11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v24 = *v25;
  uint64_t v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v26 = *v27;
  *(void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ClarityUIShadowedContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = (unsigned char *)(v7 + a1);
  int v9 = (unsigned char *)(v7 + a2);
  unsigned char *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (unint64_t)&v8[v12 + 3] & ~v12;
  uint64_t v14 = (unint64_t)&v9[v12 + 3] & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 40) + 7;
  unint64_t v16 = (v15 + v13) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = v15 + v14;
  unint64_t v18 = (v17 & 0xFFFFFFFFFFFFFFF8) + 11;
  *(void *)unint64_t v16 = *(void *)(v17 & 0xFFFFFFFFFFFFFFF8);
  v16 += 11;
  swift_retain();
  swift_release();
  unint64_t v19 = (v18 & 0xFFFFFFFFFFFFFFF8) + 11;
  *(_DWORD *)(v16 & 0xFFFFFFFFFFFFFFF8) = *(_DWORD *)(v18 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = (v16 & 0xFFFFFFFFFFFFFFF8) + 11;
  unint64_t v21 = (v19 & 0xFFFFFFFFFFFFFFF8) + 11;
  *(void *)(v20 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v19 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v22 = (v20 & 0xFFFFFFFFFFFFFFF8) + 11;
  swift_retain();
  swift_release();
  *(_DWORD *)(v22 & 0xFFFFFFFFFFFFFFF8) = *(_DWORD *)(v21 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void *)(((v22 & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)(((v21 & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8);
  void *v23 = *v24;
  uint64_t v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v25 = *v26;
  *(void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t initializeWithTake for ClarityUIShadowedContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = (unsigned char *)(v7 + a1);
  int v9 = (unsigned char *)(v7 + a2);
  unsigned char *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (unint64_t)&v8[v12 + 3] & ~v12;
  uint64_t v14 = (unint64_t)&v9[v12 + 3] & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 32) + 7;
  unint64_t v16 = (void *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v16 = *v17;
  unint64_t v18 = (_DWORD *)(((unint64_t)v16 + 11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = (_DWORD *)(((unint64_t)v17 + 11) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v18 = *v19;
  unint64_t v20 = (void *)(((unint64_t)v18 + 11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (void *)(((unint64_t)v19 + 11) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v20 = *v21;
  unint64_t v22 = (_DWORD *)(((unint64_t)v20 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (_DWORD *)(((unint64_t)v21 + 11) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v22 = *v23;
  uint64_t v24 = (void *)(((unint64_t)v22 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)(((unint64_t)v23 + 11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v24 = *v25;
  uint64_t v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v26 = *v27;
  *(void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for ClarityUIShadowedContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = (unsigned char *)(v7 + a1);
  int v9 = (unsigned char *)(v7 + a2);
  unsigned char *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (unint64_t)&v8[v12 + 3] & ~v12;
  uint64_t v14 = (unint64_t)&v9[v12 + 3] & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 24) + 7;
  unint64_t v16 = (v15 + v13) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v15 + v14) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = *(void *)v17;
  v17 += 11;
  *(void *)unint64_t v16 = v18;
  v16 += 11;
  swift_release();
  unint64_t v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 11;
  *(_DWORD *)(v16 & 0xFFFFFFFFFFFFFFF8) = *(_DWORD *)(v17 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = ((v16 & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v19 & 0xFFFFFFFFFFFFFFF8) + 11;
  *(void *)unint64_t v20 = *(void *)(v19 & 0xFFFFFFFFFFFFFFF8);
  v20 += 11;
  swift_release();
  *(_DWORD *)(v20 & 0xFFFFFFFFFFFFFFF8) = *(_DWORD *)(v21 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v22 = (void *)(((v20 & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void *)(((v21 & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v22 = *v23;
  uint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v24 = *v25;
  *(void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIShadowedContent(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = a3 + 16;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v6 + 8);
  unsigned int v7 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  uint64_t v8 = *(void *)(v4 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v7 <= v9) {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  uint64_t v11 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v10;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = *(void *)(*(void *)(v4 - 8) + 64) + 7;
  if (v13 < a2)
  {
    unint64_t v15 = ((((((((((((((v14 + ((v11 + v12 + 3) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)
                + 11) & 0xFFFFFFFFFFFFFFF8)
              + 11) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    unsigned int v16 = a2 - v13;
    uint64_t v17 = v15 & 0xFFFFFFF8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v18 = 2;
    }
    else {
      unsigned int v18 = v16 + 1;
    }
    if (v18 >= 0x10000) {
      unsigned int v19 = 4;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v18 < 0x100) {
      unsigned int v19 = 1;
    }
    if (v18 >= 2) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = 0;
    }
    switch(v20)
    {
      case 1:
        int v21 = *((unsigned __int8 *)a1 + v15);
        if (!v21) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v21 = *(unsigned __int16 *)((char *)a1 + v15);
        if (v21) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C36A3888);
      case 4:
        int v21 = *(int *)((char *)a1 + v15);
        if (!v21) {
          break;
        }
LABEL_25:
        int v23 = v21 - 1;
        if (v17)
        {
          int v23 = 0;
          int v24 = *a1;
        }
        else
        {
          int v24 = 0;
        }
        return v13 + (v24 | v23) + 1;
      default:
        break;
    }
  }
  if (v7 == v13)
  {
    uint64_t v9 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
    uint64_t v4 = v5;
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v9, v4);
  }
  a1 = (int *)(((unint64_t)a1 + v11 + v12 + 3) & ~v12);
  if (v9 == v13) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v9, v4);
  }
  unint64_t v25 = *(void *)(((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8);
  if (v25 >= 0xFFFFFFFF) {
    LODWORD(v25) = -1;
  }
  return (v25 + 1);
}

void storeEnumTagSinglePayload for ClarityUIShadowedContent(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = a1;
  uint64_t v8 = a4 + 16;
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v8 + 8);
  uint64_t v9 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v10 = *(void *)(v6 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v9 <= v11) {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(*(void *)(v6 - 8) + 64) + 7;
  unint64_t v16 = ((((((((((((((v15 + ((v13 + v14 + 3) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)
              + 11) & 0xFFFFFFFFFFFFFFF8)
            + 11) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v12 >= a3)
  {
    int v20 = 0;
  }
  else
  {
    unsigned int v17 = a3 - v12;
    if (((((((((((((((v15 + ((v13 + v14 + 3) & ~v14)) & 0xFFFFFFF8) + 11) & 0xFFFFFFF8)
                 + 11) & 0xFFFFFFF8)
               + 11) & 0xFFFFFFF8)
             + 11) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v18 = v17 + 1;
    else {
      unsigned int v18 = 2;
    }
    if (v18 >= 0x10000) {
      int v19 = 4;
    }
    else {
      int v19 = 2;
    }
    if (v18 < 0x100) {
      int v19 = 1;
    }
    if (v18 >= 2) {
      int v20 = v19;
    }
    else {
      int v20 = 0;
    }
  }
  if (a2 > v12)
  {
    if (((((((((((((((v15 + ((v13 + v14 + 3) & ~v14)) & 0xFFFFFFF8) + 11) & 0xFFFFFFF8)
                 + 11) & 0xFFFFFFF8)
               + 11) & 0xFFFFFFF8)
             + 11) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      int v21 = a2 - v12;
    else {
      int v21 = 1;
    }
    if (((((((((((((((v15 + ((v13 + v14 + 3) & ~v14)) & 0xFFFFFFF8) + 11) & 0xFFFFFFF8)
                 + 11) & 0xFFFFFFF8)
               + 11) & 0xFFFFFFF8)
             + 11) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v22 = ~v12 + a2;
      bzero(a1, ((((((((((((((v15 + ((v13 + v14 + 3) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)+ 11) & 0xFFFFFFFFFFFFFFF8)+ 11) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *uint64_t v5 = v22;
    }
    switch(v20)
    {
      case 1:
        *((unsigned char *)v5 + v16) = v21;
        return;
      case 2:
        *(_WORD *)((char *)v5 + v16) = v21;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)((char *)v5 + v16) = v21;
        return;
      default:
        return;
    }
  }
  switch(v20)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x1C36A3B24);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (!a2) {
        return;
      }
LABEL_34:
      if (v9 == v12)
      {
        uint64_t v11 = v9;
        uint64_t v6 = v7;
      }
      else
      {
        a1 = (char *)((unint64_t)&a1[v13 + 3 + v14] & ~v14);
        if (v11 != v12)
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v23 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v23 = (a2 - 1);
          }
          *(void *)((unint64_t)&a1[v15] & 0xFFFFFFFFFFFFFFF8) = v23;
          return;
        }
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v11, v6);
      return;
  }
}

uint64_t sub_1C36A3B4C()
{
  return swift_getWitnessTable();
}

BOOL _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF10Foundation3URLV_s5NeverOytTg5103_s15ConversationKit32VideoMessagePlayerViewControllerC11viewDidLoadyyFy10Foundation3URLVcACcfu_yAGcfu0_0G3Kit0ijklM0CTf1cn_n(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Environment<DynamicTypeSize>.Content(a1, (uint64_t)v6, &demangling cache variable for type metadata for URL?);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  int v9 = EnumTagSinglePayload;
  if (EnumTagSinglePayload != 1)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    __n128 v11 = MEMORY[0x1F4188790](EnumTagSinglePayload);
    uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v10 + 32))(v13, v6, v7, v11);
    VideoMessagePlayerViewController.setupVideo(with:)();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v7);
  }

  return v9 == 1;
}

id VideoMessagePlayerViewController.__allocating_init(viewModel:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return VideoMessagePlayerViewController.init(viewModel:)(a1);
}

uint64_t _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  taskCreateFlags(priority:isChildTask:copyTaskLocals:inheritContext:enqueueJob:addPendingGroupTaskUnconditionally:isDiscardingTask:)(a1, 0, 0, 0, 1, 0, 0);
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  return swift_task_create();
}

void *specialized VideoMessagePlayerManager.init(videoMessageViewModel:)(uint64_t a1)
{
  v1[2] = 0;
  v1[4] = MEMORY[0x1E4FBC870];
  v1[5] = 0;
  swift_unknownObjectWeakInit();
  v1[3] = a1;
  return v1;
}

uint64_t specialized VideoMessagePlayerManager.setupVideo(with:)(void *a1)
{
  swift_beginAccess();
  id v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = a1;
  id v4 = a1;

  id v5 = objc_msgSend(v4, sel_currentItem);
  if (v5)
  {
    uint64_t v6 = v5;
    swift_retain();
    specialized VideoMessagePlayerManager.fetchDuration(from:)(v6);
    swift_release();
  }
  return specialized VideoMessagePlayerManager.setUpNotifications()();
}

void *specialized VideoMessagePlayerManager.fetchDuration(from:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __n128 v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, __n128))((*MEMORY[0x1E4FBC8C8] & **(void **)(v1 + 24))
                                                                    + 0x120))(&v15, v5);
  if ((v15 & 1) == 0)
  {
    uint64_t v9 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v9);
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    __n128 v11 = (void *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v10;
    v11[5] = a1;
    id v12 = a1;
    uint64_t v13 = _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5((uint64_t)v7, (uint64_t)&async function pointer to partial apply for specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:), (uint64_t)v11);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for TaskPriority?);
    *(void *)(v2 + 40) = v13;
    return (void *)swift_release();
  }
  return result;
}

uint64_t specialized VideoMessagePlayerManager.setUpNotifications()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  __n128 v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  id v6 = *(id *)(v0 + 16);
  if (v6)
  {
    id v6 = objc_msgSend(v6, sel_currentItem);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, NSRunLoop>);
      uint64_t v33 = &v26;
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v31 = v8;
      uint64_t v32 = v9;
      MEMORY[0x1F4188790](v8);
      __n128 v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v12 = type metadata accessor for NSNotificationCenter.Publisher();
      uint64_t v29 = &v26;
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v27 = v12;
      uint64_t v28 = v13;
      MEMORY[0x1F4188790](v12);
      uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v16 = objc_msgSend(self, sel_defaultCenter);
      unsigned int v17 = (void *)MEMORY[0x1C87730B0](0xD000000000000028, 0x80000001C37AE260);
      id v18 = v7;
      id v30 = v18;
      NSNotificationCenter.publisher(for:object:)();

      id v34 = objc_msgSend(self, sel_mainRunLoop);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
      uint64_t v26 = (uint64_t)&v26;
      MEMORY[0x1F4188790](v19 - 8);
      int v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v22 = type metadata accessor for NSRunLoop.SchedulerOptions();
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v22);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
      lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
      lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
      uint64_t v23 = v27;
      Publisher.receive<A>(on:options:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v23);
      swift_allocObject();
      swift_weakInit();
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<NSNotificationCenter.Publisher, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, NSRunLoop>);
      uint64_t v24 = v31;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v24);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();

      id v6 = (id)swift_release();
    }
  }
  (*(void (**)(id))((*MEMORY[0x1E4FBC8C8] & **(void **)(v1 + 24)) + 0x108))(v6);
  swift_allocObject();
  swift_weakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<VideoMessageControlsView.PlayState>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

id specialized VideoMessagePlayerManager.setupVideo(with:)(uint64_t a1)
{
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVAsset);
  uint64_t v2 = type metadata accessor for URL();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  id v7 = @nonobjc AVAsset.__allocating_init(url:)(v6);
  id v8 = objc_allocWithZone(MEMORY[0x1E4F16620]);
  id v9 = @nonobjc AVPlayerItem.init(asset:automaticallyLoadedAssetKeys:)(v7, (uint64_t)&outlined read-only object #0 of specialized VideoMessagePlayerManager.setupVideo(with:));
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F16608]), sel_initWithPlayerItem_, v9);
  specialized VideoMessagePlayerManager.setupVideo(with:)(v10);

  return v10;
}

void specialized closure #1 in VideoMessagePlayerManager.setUpNotifications()()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  if (Strong)
  {
    uint64_t v2 = *(id *)(Strong + 24);
    uint64_t v3 = swift_release();
    int v4 = (*(unsigned __int8 (**)(uint64_t))((*v1 & *v2) + 0xF0))(v3);

    if (!v4) {
      goto LABEL_5;
    }
  }
  swift_beginAccess();
  uint64_t v5 = swift_weakLoadStrong();
  if (v5)
  {
    id v6 = *(id *)(v5 + 24);
    uint64_t v7 = swift_release();
    int v8 = (*(unsigned __int8 (**)(uint64_t))((*v1 & *v6) + 0xF0))(v7);

    if (v8 == 1)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v9 = swift_weakLoadStrong();
      if (v9)
      {
        id v10 = *(id *)(v9 + 24);
        swift_release();
        (*(void (**)(uint64_t))((*v1 & *v10) + 0xF8))(3);
      }
      swift_beginAccess();
      uint64_t v11 = swift_weakLoadStrong();
      if (v11)
      {
        uint64_t v12 = v11;
        swift_beginAccess();
        uint64_t v13 = *(void **)(v12 + 16);
        if (v13)
        {
          id v14 = v13;
          swift_release();
          uint64_t v15 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
          v16[0] = *MEMORY[0x1E4F1FA48];
          v16[1] = *(void *)(MEMORY[0x1E4F1FA48] + 8);
          v16[2] = v15;
          objc_msgSend(v14, sel_seekToTime_, v16);
        }
        else
        {
          swift_release();
        }
      }
    }
  }
}

uint64_t specialized closure #2 in VideoMessagePlayerManager.setUpNotifications()(char a1)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    specialized VideoMessagePlayerManager.updatePlayer(with:)(a1);
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    specialized VideoMessagePlayerManager.updateHostController(using:)(a1);
    return swift_release();
  }
  return result;
}

uint64_t specialized VideoMessagePlayerManager.updatePlayer(with:)(unsigned __int8 a1)
{
  uint64_t v2 = (id *)(v1 + 16);
  if (a1 >= 2u)
  {
    swift_beginAccess();
    if (*v2) {
      objc_msgSend(*v2, sel_setRate_, 0.0);
    }
  }
  else
  {
    swift_beginAccess();
    if (*v2)
    {
      LODWORD(v3) = 1.0;
      objc_msgSend(*v2, sel_setRate_, v3);
    }
  }
  return swift_endAccess();
}

void specialized VideoMessagePlayerManager.updateHostController(using:)(char a1)
{
  double v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(unsigned char *)(v4 + 24) = a1;
  v6[4] = partial apply for specialized closure #1 in VideoMessagePlayerManager.updateHostController(using:);
  v6[5] = v4;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = thunk for @escaping @callee_guaranteed () -> ();
  v6[3] = &block_descriptor_110;
  uint64_t v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_animateWithDuration_animations_, v5, 0.25);
  _Block_release(v5);
}

uint64_t specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 64) = a4;
  *(void *)(v5 + 72) = a5;
  return MEMORY[0x1F4188298](specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:), 0, 0);
}

uint64_t specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:)()
{
  OUTLINED_FUNCTION_17_2();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[10] = Strong;
  if (Strong)
  {
    v0[11] = type metadata accessor for MainActor();
    v0[12] = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return MEMORY[0x1F4188298](specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:), v3, v2);
  }
  else
  {
    OUTLINED_FUNCTION_6();
    return v4();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v3;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();
  *(void *)(v0 + 104) = objc_msgSend(v1, sel_asset);
  return MEMORY[0x1F4188298](specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:), 0, 0);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AVAsyncProperty<AVAsset, CMTime>);
  *(void *)(v0 + 112) = static AVPartialAsyncProperty<A>.duration.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  void *v1 = v0;
  v1[1] = specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:);
  uint64_t v2 = OUTLINED_FUNCTION_7_42();
  return MEMORY[0x1F4182DC0](v2, v3);
}

{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t (*v6)();
  uint64_t v8;

  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(void **)(v2 + 104);
  if (v0)
  {

    swift_release();
    uint64_t v6 = closure #1 in VideoMessagePlayerManager.fetchDuration(from:);
  }
  else
  {
    swift_release();

    uint64_t v6 = specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:);
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = v0[5];
  v0[19] = v0[6];
  uint64_t v2 = v0[7];
  v0[16] = v1;
  v0[17] = v2;
  v0[18] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:), v4, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  double v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  uint64_t v2 = *(void **)(v1 + 24);
  CMTime.seconds.getter();
  if (v3 <= 0.0) {
    goto LABEL_6;
  }
  if (one-time initialization token for timeFormatter != -1) {
    swift_once();
  }
  uint64_t v4 = (id)static NSDateComponentsFormatter.timeFormatter;
  CMTime.seconds.getter();
  uint64_t v5 = objc_msgSend(v4, sel_stringFromTimeInterval_);

  if (v5)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    int v8 = v7;
  }
  else
  {
LABEL_6:
    uint64_t v6 = OUTLINED_FUNCTION_14_75();
    int v8 = v9;
  }
  (*(void (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x158))(v6, v8);
  return MEMORY[0x1F4188298](closure #1 in VideoMessagePlayerManager.fetchDuration(from:), 0, 0);
}

Swift::String __swiftcall TimeFormattable.durationString()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = *(double (**)(void))(v1 + 8);
  if (v4() <= 0.0) {
    goto LABEL_6;
  }
  if (one-time initialization token for timeFormatter != -1) {
    swift_once();
  }
  id v5 = (id)static NSDateComponentsFormatter.timeFormatter;
  ((void (*)(uint64_t, uint64_t))v4)(v3, v2);
  id v6 = objc_msgSend(v5, sel_stringFromTimeInterval_);

  if (v6)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    uint64_t v10 = v7;
    uint64_t v11 = v9;
  }
  else
  {
LABEL_6:
    uint64_t v10 = OUTLINED_FUNCTION_14_75();
  }
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

void specialized closure #1 in VideoMessagePlayerManager.updateHostController(using:)(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 48;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1C8776240](v3);
  if (v4)
  {
    id v5 = v4;
    id v6 = objc_msgSend(v4, sel_navigationController);

    if (v6)
    {
      id v7 = objc_msgSend(v6, sel_navigationBar);

      double v8 = 1.0;
      if (!a2) {
        double v8 = 0.0;
      }
      objc_msgSend(v7, sel_setAlpha_, v8);
    }
  }
}

id @nonobjc AVPlayer.rate.setter()
{
  return objc_msgSend(v0, sel_setRate_);
}

id @nonobjc AVPlayer.currentItem.getter()
{
  id v1 = objc_msgSend(v0, sel_currentItem);
  return v1;
}

AVPlayer __swiftcall AVPlayer.__allocating_init(playerItem:)(AVPlayerItem_optional playerItem)
{
  Class isa = playerItem.value.super.isa;
  uint64_t v2 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithPlayerItem_, playerItem.value.super.isa);

  uint64_t v4 = v2;
  result._player = v3;
  result.super.Class isa = v4;
  return result;
}

id @nonobjc AVPlayer.seek(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a1;
  v5[1] = a2;
  v5[2] = a3;
  return objc_msgSend(v3, sel_seekToTime_, v5);
}

uint64_t VideoMessagePlayerViewModel.showsSaveInMenu.getter()
{
  if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x210))()) {
    return objc_msgSend(self, sel_isCommunicationSafetyEnabled) ^ 1;
  }
  else {
    return 0;
  }
}

char *VideoMessagePlayerViewController.controls.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (void *)((char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  id v7 = (void *)((char *)v34 - v6);
  double v8 = (int *)type metadata accessor for VideoMessageControlsView(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)v34 - v13;
  MEMORY[0x1F4188790](v15);
  unsigned int v17 = (char *)v34 - v16;
  uint64_t v18 = OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___controls;
  uint64_t v19 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___controls);
  if (v19)
  {
    uint64_t v20 = *(char **)(v0 + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___controls);
  }
  else
  {
    v34[1] = objc_retain(*(id *)(v0
                               + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_videoMessageViewModel));
    int v21 = VideoMessagePlayerViewController.playerStateManager.getter();
    swift_beginAccess();
    uint64_t v22 = (void *)v21[2];
    id v23 = v22;
    swift_release();
    *id v7 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    swift_storeEnumTagMultiPayload();
    *uint64_t v4 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    *(void *)unsigned int v17 = swift_getKeyPath();
    v17[8] = 0;
    outlined init with take of Environment<UserInterfaceSizeClass?>((uint64_t)v7, (uint64_t)&v17[v8[5]]);
    outlined init with take of Environment<UserInterfaceSizeClass?>((uint64_t)v4, (uint64_t)&v17[v8[6]]);
    uint64_t v24 = (uint64_t *)&v17[v8[7]];
    type metadata accessor for VideoMessagePlayerViewModel(0);
    _s15ConversationKit27VideoMessagePlayerViewModelCAC7Combine16ObservableObjectAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
    *uint64_t v24 = ObservedObject.init(wrappedValue:)();
    v24[1] = v25;
    uint64_t v26 = &v17[v8[8]];
    char v35 = 0;
    State.init(wrappedValue:)();
    uint64_t v27 = v37;
    *uint64_t v26 = v36;
    *((void *)v26 + 1) = v27;
    *(void *)&v17[v8[9]] = v22;
    *(void *)&v17[v8[10]] = 0x3FC51EB851EB851FLL;
    *(void *)&v17[v8[11]] = 0x4077C00000000000;
    outlined init with copy of VideoMessageControlsView((uint64_t)v17, (uint64_t)v14);
    id v28 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LockScreenHostingController<VideoMessageControlsView>));
    uint64_t v29 = OUTLINED_FUNCTION_198();
    outlined init with copy of VideoMessageControlsView(v29, (uint64_t)v11);
    UIHostingController.init(rootView:)();
    uint64_t v30 = OUTLINED_FUNCTION_198();
    outlined destroy of VideoMessageControlsView(v30);
    outlined destroy of VideoMessageControlsView((uint64_t)v17);
    uint64_t v31 = *(void **)(v1 + v18);
    *(void *)(v1 + v18) = v26;
    uint64_t v20 = v26;

    uint64_t v19 = 0;
  }
  id v32 = v19;
  return v20;
}

void *VideoMessagePlayerViewController.playerStateManager.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___playerStateManager;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___playerStateManager))
  {
    uint64_t v2 = *(void **)(v0
                    + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___playerStateManager);
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_videoMessageViewModel);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VideoMessagePlayerManager<AVPlayer>);
    swift_allocObject();
    uint64_t v2 = specialized VideoMessagePlayerManager.init(videoMessageViewModel:)((uint64_t)v4);
    *(void *)(v3 + v1) = v2;
    id v5 = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id VideoMessagePlayerViewController.init(viewModel:)(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_avPlayerLayer;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F16650]);
  id v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___controls] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___playerStateManager] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_videoMessageViewModel] = a1;
  id v6 = a1;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for VideoMessagePlayerViewController();
  id v7 = objc_msgSendSuper2(&v9, sel_initWithNibName_bundle_, 0, 0);

  return v7;
}

id VideoMessagePlayerViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void VideoMessagePlayerViewController.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_avPlayerLayer;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F16650]), sel_init);
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___controls] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___playerStateManager] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall VideoMessagePlayerViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  v22[3] = *(id *)MEMORY[0x1E4F143B8];
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for VideoMessagePlayerViewController();
  objc_msgSendSuper2(&v21, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2) {
    __break(1u);
  }
  id v3 = v2;
  id v4 = objc_msgSend(self, sel_blackColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  id v5 = self;
  id v6 = objc_msgSend(v5, sel_sharedInstance);
  uint64_t v7 = *MEMORY[0x1E4F14F98];
  uint64_t v8 = *MEMORY[0x1E4F15060];
  v22[0] = 0;
  unsigned int v9 = objc_msgSend(v6, sel_setCategory_mode_options_error_, v7, v8, 14, v22);

  if (v9)
  {
    id v10 = v22[0];
  }
  else
  {
    id v11 = v22[0];
    uint64_t v12 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
  id v13 = objc_msgSend(v5, sel_sharedInstance);
  v22[0] = 0;
  unsigned int v14 = objc_msgSend(v13, sel_setActive_withOptions_error_, 1, 0, v22);

  if (v14)
  {
    id v15 = v22[0];
  }
  else
  {
    id v16 = v22[0];
    unsigned int v17 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
  uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_videoMessageViewModel];
  uint64_t v19 = (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & *v18) + 0x180))(v15);
  outlined bridged method (mbnn) of @objc UIViewController.title.setter(v19, v20, v1);
  VideoMessagePlayerViewController.configureNavigationBar()();
  _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF10Foundation3URLV_s5NeverOytTg5103_s15ConversationKit32VideoMessagePlayerViewControllerC11viewDidLoadyyFy10Foundation3URLVcACcfu_yAGcfu0_0G3Kit0ijklM0CTf1cn_n((uint64_t)v18 + OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel_videoMessageURL, v1);
  VideoMessagePlayerViewController.addControls()();
  VideoMessagePlayerViewController.playerStateManager.getter();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  swift_release();
}

Swift::Void __swiftcall VideoMessagePlayerViewController.viewDidLayoutSubviews()()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for VideoMessagePlayerViewController();
  objc_msgSendSuper2(&v12, sel_viewDidLayoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_avPlayerLayer];
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_bounds);
    double v5 = v4;
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;

    objc_msgSend(v1, sel_setFrame_, v5, v7, v9, v11);
  }
  else
  {
    __break(1u);
  }
}

void VideoMessagePlayerViewController.configureNavigationBar()()
{
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_3_141();
  id v70 = v0;
  if (((*(uint64_t (**)(void))(v2 + 624))() & 1) != 0
    || (OUTLINED_FUNCTION_3_141(), ((*(uint64_t (**)(void))(v3 + 672))() & 1) != 0))
  {
    OUTLINED_FUNCTION_3_141();
    (*(void (**)(void *__return_ptr))(v4 + 480))(v72);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
    double v5 = self;
    id v6 = objc_msgSend(v5, sel_conversationKit);
    OUTLINED_FUNCTION_11_1(0xD000000000000015, 0x80000001C37B1200);

    double v7 = (void *)swift_allocObject();
    OUTLINED_FUNCTION_17_62(v7);
    swift_retain();
    uint64_t v67 = partial apply for closure #1 in VideoMessagePlayerViewController.configureNavigationBar();
    id v68 = v6;
    double v8 = (void *)OUTLINED_FUNCTION_2_135();
    double v9 = 0;
    if (VideoMessagePlayerViewModel.showsSaveInMenu.getter())
    {
      id v10 = objc_msgSend(v5, sel_conversationKit, 0, 0, 0, partial apply for closure #1 in VideoMessagePlayerViewController.configureNavigationBar(), v6);
      OUTLINED_FUNCTION_11_1(0xD000000000000012, 0x80000001C37B1240);

      uint64_t v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v67 = partial apply for closure #2 in VideoMessagePlayerViewController.configureNavigationBar();
      id v68 = (id)v11;
      double v9 = (void *)OUTLINED_FUNCTION_2_135();
    }
    id v12 = objc_msgSend(v5, sel_conversationKit, 0, 0, 0, v67, v68);
    OUTLINED_FUNCTION_11_1(0xD00000000000001ALL, 0x80000001C37B1220);

    id v13 = (void *)swift_allocObject();
    OUTLINED_FUNCTION_17_62(v13);
    swift_retain();
    unsigned int v14 = (void *)OUTLINED_FUNCTION_2_135();
    v72[0] = MEMORY[0x1E4FBC860];
    id v15 = v8;
    MEMORY[0x1C87733A0](v15);
    if (*(void *)((v72[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      OUTLINED_FUNCTION_6_116();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (v9)
    {
      id v16 = v9;
      MEMORY[0x1C87733A0](v16, v17, v18, v19, v20);
      OUTLINED_FUNCTION_15_78();
      if (v21) {
        OUTLINED_FUNCTION_6_116();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    id v22 = v14;
    MEMORY[0x1C87733A0](v22);
    OUTLINED_FUNCTION_15_78();
    if (v21) {
      OUTLINED_FUNCTION_6_116();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    UIMenuElementSize v23 = v72[0];

    uint64_t v1 = v0;
    if ((unint64_t)v23 >> 62)
    {
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenuElement);
      swift_bridgeObjectRetain();
      UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenuElement);
      UIMenuElementSize preferredElementSize = v23;
    }
    swift_bridgeObjectRelease();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIMenu);
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v74.value.super.Class isa = 0;
    v74.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v25, (Swift::String_optional)0, v74, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)2).super.super.isa;
    id v27 = objc_msgSend(v0, sel_navigationItem);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIBarButtonItem);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    id v28 = (objc_class *)@nonobjc UIImage.__allocating_init(systemName:)();
    uint64_t v29 = isa;
    v73.value.super.Class isa = v28;
    v73.is_nil = 0;
    v75.value.super.super.Class isa = isa;
    v30.super.super.Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v73, v75, v76).super.super.isa;
    objc_msgSend(v27, sel_setRightBarButtonItem_, v30.super.super.isa);
    swift_release();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_3_141();
    if (((*(uint64_t (**)(void))(v64 + 528))() & 1) == 0) {
      goto LABEL_17;
    }
    id v27 = objc_msgSend(v0, sel_navigationItem);
    v72[3] = type metadata accessor for VideoMessagePlayerViewController();
    v72[0] = v0;
    id v65 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v66 = v0;
    v30.super.super.Class isa = (Class)@nonobjc UIBarButtonItem.init(barButtonSystemItem:target:action:)(3, v72, (uint64_t)sel_save);
    objc_msgSend(v27, sel_setRightBarButtonItem_, v30.super.super.isa);
  }

LABEL_17:
  id v31 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v31, sel_setLargeTitleDisplayMode_, 2);

  id v32 = objc_msgSend(v1, sel_navigationController);
  if (!v32
    || (uint64_t v33 = v32,
        id v34 = objc_msgSend(v32, sel_navigationBar),
        v33,
        id v35 = objc_msgSend(v34, sel_standardAppearance),
        v34,
        (id v71 = v35) == 0))
  {
    id v71 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB19D8]), sel_init);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  uint64_t inited = swift_initStackObject();
  uint64_t v37 = (void **)MEMORY[0x1E4FB0700];
  *(_OWORD *)(inited + 16) = xmmword_1C3769620;
  float v38 = *v37;
  *(void *)(inited + 32) = *v37;
  uint64_t v39 = self;
  id v40 = v38;
  id v41 = objc_msgSend(v39, sel_systemWhiteColor);
  uint64_t v42 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIColor);
  *(void *)(inited + 64) = v42;
  *(void *)(inited + 40) = v41;
  type metadata accessor for NSAttributedStringKey(0);
  _s15ConversationKit27VideoMessagePlayerViewModelCAC7Combine16ObservableObjectAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
  Dictionary.init(dictionaryLiteral:)();
  Class v43 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v71, sel_setTitleTextAttributes_, v43);

  id v69 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14B0]), sel_initWithStyle_, 0);
  id v44 = objc_msgSend(v69, sel_normal);
  uint64_t v45 = swift_initStackObject();
  *(_OWORD *)(v45 + 16) = xmmword_1C3769620;
  *(void *)(v45 + 32) = v40;
  id v46 = v40;
  uint64_t v47 = v39;
  id v48 = objc_msgSend(v39, sel_systemWhiteColor);
  *(void *)(v45 + 64) = v42;
  *(void *)(v45 + 40) = v48;
  Dictionary.init(dictionaryLiteral:)();
  Class v49 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_setTitleTextAttributes_, v49);

  id v50 = objc_msgSend(v71, sel_backButtonAppearance);
  id v51 = objc_msgSend(v50, sel_normal);
  id v52 = objc_msgSend(v50, sel_normal);
  id v53 = objc_msgSend(v52, sel_backgroundImage);

  if (v53)
  {
    uint64_t v54 = v47;
    id v55 = objc_msgSend(v47, sel_systemWhiteColor);
    id v56 = objc_msgSend(v53, sel_imageWithTintColor_, v55);
  }
  else
  {
    id v56 = 0;
    uint64_t v54 = v47;
  }
  objc_msgSend(v51, sel_setBackgroundImage_, v56);

  objc_msgSend(v71, sel_setButtonAppearance_, v69);
  objc_msgSend(v71, sel_setBackButtonAppearance_, v69);
  id v57 = objc_msgSend(v70, sel_navigationController);
  if (v57)
  {
    uint64_t v58 = v57;
    id v59 = objc_msgSend(v57, sel_navigationBar);

    objc_msgSend(v59, sel_setStandardAppearance_, v71);
  }
  id v60 = objc_msgSend(v70, sel_navigationController);
  if (v60)
  {
    uint64_t v61 = v60;
    id v62 = objc_msgSend(v60, sel_navigationBar);

    id v63 = objc_msgSend(v54, sel_systemWhiteColor);
    objc_msgSend(v62, sel_setTintColor_, v63);
  }
}

void closure #2 in VideoMessagePlayerViewController.configureNavigationBar()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    VideoMessagePlayerViewController.save()();
  }
}

uint64_t VideoMessagePlayerViewController.save()()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setRightBarButtonItem_, 0);

  OUTLINED_FUNCTION_0_3();
  (*(void (**)(uint64_t))(v2 + 584))(1);
  OUTLINED_FUNCTION_0_3();
  (*(void (**)(void *__return_ptr))(v3 + 432))(v7);
  uint64_t v4 = (void (*)(uint64_t))v7[6];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = swift_release();
  v4(v5);
  return swift_release();
}

void VideoMessagePlayerViewController.setupVideo(with:)()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_layer);

    uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_avPlayerLayer];
    objc_msgSend(v4, sel_insertSublayer_atIndex_, v5, 0);

    VideoMessagePlayerViewController.playerStateManager.getter();
    uint64_t v6 = OUTLINED_FUNCTION_198();
    id v7 = specialized VideoMessagePlayerManager.setupVideo(with:)(v6);
    swift_release();
    objc_msgSend(v5, sel_setPlayer_, v7);

    OUTLINED_FUNCTION_0_3();
    (*(void (**)(uint64_t *__return_ptr))(v8 + 288))(&v11);
    double v9 = (id *)MEMORY[0x1E4F15AF8];
    if ((_BYTE)v11) {
      double v9 = (id *)MEMORY[0x1E4F15AF0];
    }
    id v10 = *v9;
    objc_msgSend(v5, sel_setVideoGravity_, v10);
  }
  else
  {
    __break(1u);
  }
}

void VideoMessagePlayerViewController.addControls()()
{
  id v1 = VideoMessagePlayerViewController.controls.getter();
  id v2 = objc_msgSend(v1, sel_view);

  if (!v2)
  {
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  uint64_t v3 = VideoMessagePlayerViewController.controls.getter();
  id v4 = OUTLINED_FUNCTION_13_79(v3);

  if (!v4)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v5 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  id v6 = OUTLINED_FUNCTION_9_12();
  if (!v6)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v7 = v6;
  uint64_t v8 = VideoMessagePlayerViewController.controls.getter();
  id v9 = objc_msgSend(v8, sel_view);

  if (!v9)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v7, sel_addSubview_, v9);

  id v10 = VideoMessagePlayerViewController.controls.getter();
  objc_msgSend(v0, sel_addChildViewController_, v10);

  uint64_t v11 = VideoMessagePlayerViewController.controls.getter();
  objc_msgSend(v11, sel_didMoveToParentViewController_, v0);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C3769580;
  id v13 = VideoMessagePlayerViewController.controls.getter();
  id v14 = OUTLINED_FUNCTION_13_79(v13);

  if (!v14)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v15 = objc_msgSend(v14, sel_leadingAnchor);

  id v16 = OUTLINED_FUNCTION_9_12();
  if (!v16)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v17 = v16;
  id v18 = objc_msgSend(v16, sel_leadingAnchor);

  id v19 = OUTLINED_FUNCTION_6_17();
  *(void *)(v12 + 32) = v19;
  uint64_t v20 = VideoMessagePlayerViewController.controls.getter();
  id v21 = OUTLINED_FUNCTION_13_79(v20);

  if (!v21)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v22 = objc_msgSend(v21, sel_trailingAnchor);

  id v23 = OUTLINED_FUNCTION_9_12();
  if (!v23)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v24 = v23;
  id v25 = objc_msgSend(v23, sel_trailingAnchor);

  id v26 = OUTLINED_FUNCTION_6_17();
  *(void *)(v12 + 40) = v26;
  id v27 = VideoMessagePlayerViewController.controls.getter();
  id v28 = OUTLINED_FUNCTION_13_79(v27);

  if (!v28)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v29 = objc_msgSend(v28, sel_topAnchor);

  id v30 = OUTLINED_FUNCTION_9_12();
  if (!v30)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v31 = v30;
  id v32 = objc_msgSend(v30, sel_topAnchor);

  id v33 = OUTLINED_FUNCTION_6_17();
  *(void *)(v12 + 48) = v33;
  id v34 = VideoMessagePlayerViewController.controls.getter();
  id v35 = objc_msgSend(v34, sel_view);

  if (!v35)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v36 = objc_msgSend(v35, sel_bottomAnchor);

  id v37 = OUTLINED_FUNCTION_9_12();
  if (!v37)
  {
LABEL_27:
    __break(1u);
    return;
  }
  float v38 = v37;
  uint64_t v39 = self;
  id v40 = objc_msgSend(v38, sel_bottomAnchor);

  id v41 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v40);
  *(void *)(v12 + 56) = v41;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v39, sel_activateConstraints_, isa);
}

Swift::Void __swiftcall VideoMessagePlayerViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for VideoMessagePlayerViewController();
  objc_msgSendSuper2(&v10, sel_viewDidDisappear_, a1);
  id v3 = objc_msgSend(self, sel_sharedInstance);
  id v9 = 0;
  unsigned int v4 = objc_msgSend(v3, sel_setActive_withOptions_error_, 0, 0, &v9);

  id v5 = v9;
  if (v4)
  {
    id v6 = v5;
  }
  else
  {
    id v7 = v9;
    uint64_t v8 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

id VideoMessagePlayerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v4 = v3;
  if (a2)
  {
    MEMORY[0x1C87730B0]();
    OUTLINED_FUNCTION_198();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }
  id v6 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v3, a3);

  return v6;
}

void VideoMessagePlayerViewController.init(nibName:bundle:)()
{
}

id VideoMessagePlayerViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoMessagePlayerViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id one-time initialization function for timeFormatter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28BF8]), sel_init);
  objc_msgSend(v0, sel_setZeroFormattingBehavior_, 0x10000);
  id result = objc_msgSend(v0, sel_setAllowedUnits_, 192);
  static NSDateComponentsFormatter.timeFormatter = (uint64_t)v0;
  return result;
}

double Int.duration.getter(uint64_t a1)
{
  return (double)a1;
}

double protocol witness for TimeFormattable.duration.getter in conformance Int()
{
  return Int.duration.getter(*v0);
}

uint64_t protocol witness for TimeFormattable.duration.getter in conformance CMTime()
{
  return CMTime.duration.getter(*v0, v0[1], v0[2]);
}

uint64_t type metadata accessor for VideoMessagePlayerViewController()
{
  return self;
}

uint64_t taskCreateFlags(priority:isChildTask:copyTaskLocals:inheritContext:enqueueJob:addPendingGroupTaskUnconditionally:isDiscardingTask:)(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Environment<DynamicTypeSize>.Content(a1, (uint64_t)v16, &demangling cache variable for type metadata for TaskPriority?);
  uint64_t v17 = type metadata accessor for TaskPriority();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, &demangling cache variable for type metadata for TaskPriority?);
    uint64_t result = 0;
    if ((a2 & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    unsigned __int8 v19 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    uint64_t result = v19;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      if (a3) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  result |= 0x100uLL;
  if (a3)
  {
LABEL_4:
    result |= 0x400uLL;
    if ((a4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  if ((a4 & 1) == 0)
  {
LABEL_5:
    if ((a5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_15:
  result |= 0x800uLL;
  if (a5) {
LABEL_6:
  }
    result |= 0x1000uLL;
LABEL_7:
  if (a6) {
    result |= 0x2000uLL;
  }
  if (a7) {
    return result | 0x4000;
  }
  return result;
}

uint64_t method lookup function for VideoMessagePlayerViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VideoMessagePlayerViewController);
}

uint64_t dispatch thunk of VideoMessagePlayerViewController.__allocating_init(viewModel:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of TimeFormattable.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C36A776C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C36A77A4()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:)()
{
  uint64_t v2 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  uint64_t v6 = OUTLINED_FUNCTION_7_42();
  return specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:)(v6, v7, v2, v4, v3);
}

uint64_t sub_1C36A78A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t specialized closure #2 in VideoMessagePlayerManager.setUpNotifications()(char *a1)
{
  return specialized closure #2 in VideoMessagePlayerManager.setUpNotifications()(*a1);
}

uint64_t partial apply for specialized closure #2 in VideoMessagePlayerManager.setUpNotifications()(char *a1)
{
  return specialized closure #2 in VideoMessagePlayerManager.setUpNotifications()(a1);
}

void partial apply for specialized closure #1 in VideoMessagePlayerManager.setUpNotifications()()
{
}

uint64_t sub_1C36A78F4()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for specialized closure #1 in VideoMessagePlayerManager.updateHostController(using:)()
{
  specialized closure #1 in VideoMessagePlayerManager.updateHostController(using:)(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t outlined init with take of Environment<UserInterfaceSizeClass?>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of VideoMessageControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoMessageControlsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of VideoMessageControlsView(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VideoMessageControlsView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s15ConversationKit27VideoMessagePlayerViewModelCAC7Combine16ObservableObjectAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in VideoMessagePlayerViewController.configureNavigationBar()()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t objectdestroy_28Tm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C36A7B30()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #2 in VideoMessagePlayerViewController.configureNavigationBar()(uint64_t a1)
{
  closure #2 in VideoMessagePlayerViewController.configureNavigationBar()(a1, v1);
}

uint64_t ConversationControlsJoinCountdownActionController.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ConversationControlsJoinCountdownActionController.init()();
  return v0;
}

uint64_t key path getter for CountdownVoucher.countdownObject : CountdownVoucher@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CountdownVoucher(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of CountdownVoucher(a1, (uint64_t)v6);
  uint64_t v7 = MEMORY[0x1C8776240](v6);
  uint64_t v8 = *((void *)v6 + 1);
  uint64_t result = outlined destroy of CountdownVoucher((uint64_t)v6);
  *a2 = v7;
  a2[1] = v8;
  return result;
}

uint64_t CountdownVoucher.countdownObject.getter()
{
  return MEMORY[0x1C8776240](v0);
}

uint64_t CountdownVoucher.countdownObject.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*CountdownVoucher.countdownObject.modify(uint64_t *a1))(uint64_t a1)
{
  a1[2] = v1;
  uint64_t v3 = MEMORY[0x1C8776240](v1);
  uint64_t v4 = *(void *)(v1 + 8);
  *a1 = v3;
  a1[1] = v4;
  return DefaultParticipantCaptionsProviderCreator.participantCaptionsProviderDelegate.modify;
}

uint64_t CountdownVoucher.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_7_109();
  OUTLINED_FUNCTION_0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  return v5(a1, v1, v3);
}

uint64_t CountdownVoucher.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t static CountdownVoucher.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)() & 1;
}

Swift::Int CountdownVoucher.hashValue.getter()
{
  return Hasher._finalize()();
}

uint64_t CountdownVoucher.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 8) = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for CountdownVoucher(0);
  return UUID.init()();
}

uint64_t CountdownVoucher.init(countdownObject:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 8) = a1;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  type metadata accessor for CountdownVoucher(0);
  return UUID.init()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance CountdownVoucher()
{
  return Hasher._finalize()();
}

uint64_t key path setter for ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart : ConversationControlsJoinCountdownActionController.CountdownInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 104))(v6);
}

uint64_t ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.getter@<X0>(uint64_t a1@<X8>)
{
  return ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.getter(&OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart, a1);
}

uint64_t ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.setter(uint64_t a1)
{
  return ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.setter(a1, &OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart);
}

uint64_t (*ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path setter for ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded : ConversationControlsJoinCountdownActionController.CountdownInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 128))(v6);
}

uint64_t ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded.getter@<X0>(uint64_t a1@<X8>)
{
  return ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.getter(&OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded, a1);
}

uint64_t ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return outlined init with copy of Date?(v4, a2);
}

uint64_t ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded.setter(uint64_t a1)
{
  return ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.setter(a1, &OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded);
}

uint64_t ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.setter(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  swift_beginAccess();
  outlined assign with take of Date?(a1, v4);
  return swift_endAccess();
}

uint64_t (*ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t ConversationControlsJoinCountdownActionController.CountdownInfo.deinit()
{
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart, (uint64_t *)&demangling cache variable for type metadata for Date?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded, (uint64_t *)&demangling cache variable for type metadata for Date?);
  return v0;
}

uint64_t ConversationControlsJoinCountdownActionController.CountdownInfo.__deallocating_deinit()
{
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart, (uint64_t *)&demangling cache variable for type metadata for Date?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_3_2();
  return swift_deallocClassInstance();
}

uint64_t ConversationControlsJoinCountdownActionController.CountdownInfo.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart;
  type metadata accessor for Date();
  OUTLINED_FUNCTION_10_2(v1);
  OUTLINED_FUNCTION_10_2(v0+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded);
  return v0;
}

uint64_t ConversationControlsJoinCountdownActionController.CountdownInfo.init()()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart;
  type metadata accessor for Date();
  OUTLINED_FUNCTION_10_2(v1);
  OUTLINED_FUNCTION_10_2(v0+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded);
  return v0;
}

uint64_t ConversationControlsJoinCountdownActionController.init()()
{
  *(void *)(v0 + 24) = MEMORY[0x1E4FBC870];
  type metadata accessor for ConversationControlsJoinCountdownActionController.CountdownInfo(0);
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 0;
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = v1
     + OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart;
  uint64_t v3 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  __swift_storeEnumTagSinglePayload(v1+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded, 1, 1, v3);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBF8]), sel_initWithObject_, v1);
  swift_release();
  *(void *)(v0 + 16) = v4;
  return v0;
}

uint64_t type metadata accessor for CountdownVoucher(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CountdownVoucher);
}

uint64_t outlined assign with take of Date?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ConversationControlsJoinCountdownActionController.CountdownInfo(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConversationControlsJoinCountdownActionController.CountdownInfo);
}

uint64_t ConversationControlsJoinCountdownActionController.startCountdownIfNecessary(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for CountdownVoucher(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)aBlock - v13;
  *(void *)((char *)&aBlock[1] - v13) = a2;
  swift_unknownObjectWeakInit();
  UUID.init()();
  uint64_t v15 = *(void **)(v4 + 16);
  outlined init with copy of CountdownVoucher((uint64_t)v14, (uint64_t)v11);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v4;
  outlined init with take of CountdownVoucher((uint64_t)v11, v17 + v16);
  id v18 = (void *)(v17 + ((v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  *id v18 = a1;
  v18[1] = a2;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = partial apply for closure #1 in ConversationControlsJoinCountdownActionController.startCountdownIfNecessary(for:);
  *(void *)(v19 + 24) = v17;
  aBlock[4] = partial apply for thunk for @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ();
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ();
  aBlock[3] = &block_descriptor_111;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v15;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v21, sel_performWhileLocked_, v20);

  _Block_release(v20);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (a1)
  {
    __break(1u);
  }
  else if (one-time initialization token for conversationControls == -1)
  {
    goto LABEL_3;
  }
  swift_once();
LABEL_3:
  uint64_t v22 = type metadata accessor for Logger();
  __swift_project_value_buffer(v22, (uint64_t)static Logger.conversationControls);
  id v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    id v25 = (_WORD *)swift_slowAlloc();
    _WORD *v25 = 0;
    OUTLINED_FUNCTION_168(&dword_1C2F90000, v26, v27, "Generating countdown voucher");
    MEMORY[0x1C87760E0](v25, -1, -1);
  }

  outlined init with take of CountdownVoucher((uint64_t)v14, a3);
  return swift_release();
}

uint64_t closure #1 in ConversationControlsJoinCountdownActionController.startCountdownIfNecessary(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for CountdownVoucher(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v34 - v13;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  double v15 = (*(double (**)(void))(*(void *)static Defaults.shared + 1048))();
  outlined init with copy of CountdownVoucher(a3, (uint64_t)v11);
  swift_beginAccess();
  specialized Set._Variant.insert(_:)();
  outlined destroy of CountdownVoucher((uint64_t)v14);
  swift_endAccess();
  if (ConversationControlsJoinCountdownActionController.isInCountdown(_:)())
  {
    uint64_t v35 = a5;
    uint64_t v16 = type metadata accessor for Date();
    v34[1] = v34;
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(void *)(v17 + 64);
    MEMORY[0x1F4188790](v16);
    unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    __n128 v21 = MEMORY[0x1F4188790](v20 - 8);
    id v23 = (char *)v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(__n128))(*(void *)a1 + 96))(v21);
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v16) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for Date?);
    }
    else
    {
      uint64_t v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))((char *)v34 - v19, v23, v16);
      uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)static Defaults.shared + 1048))(v24);
      double v27 = v26;
      MEMORY[0x1F4188790](v25);
      Date.init()();
      Date.timeIntervalSince(_:)();
      double v29 = v28;
      id v30 = *(void (**)(char *, uint64_t))(v17 + 8);
      v30((char *)v34 - v19, v16);
      v30((char *)v34 - v19, v16);
      double v15 = v27 - v29;
    }
    a5 = v35;
  }
  else
  {
    (*(void (**)(void))(*(void *)a2 + 272))();
  }
  uint64_t ObjectType = swift_getObjectType();
  double v32 = (*(double (**)(void))(*(void *)static Defaults.shared + 1048))();
  return (*(uint64_t (**)(uint64_t, uint64_t, double, double))(a5 + 8))(ObjectType, a5, v15, v32);
}

uint64_t sub_1C36A8F1C()
{
  uint64_t v1 = (int *)(type metadata accessor for CountdownVoucher(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  swift_unknownObjectWeakDestroy();
  unint64_t v3 = v0 + v2 + v1[7];
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  (*(void (**)(unint64_t))(v4 + 8))(v3);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationControlsJoinCountdownActionController.startCountdownIfNecessary(for:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CountdownVoucher(0);
  OUTLINED_FUNCTION_1(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = v1 + v8;
  uint64_t v11 = (uint64_t *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  return closure #1 in ConversationControlsJoinCountdownActionController.startCountdownIfNecessary(for:)(a1, v9, v10, v12, v13);
}

uint64_t sub_1C36A90AC()
{
  return OUTLINED_FUNCTION_7_44();
}

uint64_t ConversationControlsJoinCountdownActionController.invalidate(voucher:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  MEMORY[0x1F4188790](v0 - 8);
  OUTLINED_FUNCTION_21();
  uint64_t v3 = v2 - v1;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.conversationControls);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (_WORD *)swift_slowAlloc();
    *uint64_t v7 = 0;
    OUTLINED_FUNCTION_168(&dword_1C2F90000, v8, v9, "Invalidating countdown voucher");
    MEMORY[0x1C87760E0](v7, -1, -1);
  }

  swift_beginAccess();
  specialized Set._Variant.remove(_:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, &demangling cache variable for type metadata for CountdownVoucher?);
  return swift_endAccess();
}

Swift::Void __swiftcall ConversationControlsJoinCountdownActionController.storeCountdownEndedDate()()
{
  objc_msgSend(*(id *)(v0 + 32), sel_invalidate);
  uint64_t v1 = *(void **)(v0 + 32);
  *(void *)(v0 + 32) = 0;

  uint64_t v2 = *(void **)(v0 + 16);
  v5[4] = specialized thunk for @callee_guaranteed (@guaranteed ConversationControlsJoinCountdownActionController.CountdownInfo) -> ();
  v5[5] = 0;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 1107296256;
  v5[2] = thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ();
  void v5[3] = &block_descriptor_7_1;
  uint64_t v3 = _Block_copy(v5);
  id v4 = v2;
  swift_release();
  objc_msgSend(v4, sel_performWhileLocked_, v3);

  _Block_release(v3);
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
}

uint64_t closure #1 in ConversationControlsJoinCountdownActionController.storeCountdownEndedDate()(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  uint64_t v5 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v5);
  return (*(uint64_t (**)(char *))(*(void *)a1 + 128))(v4);
}

Swift::Void __swiftcall ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()()
{
  if ((*(unsigned char *)(v0 + 48) & 1) == 0)
  {
    *(unsigned char *)(v0 + 48) = 1;
    type metadata accessor for OS_dispatch_queue();
    uint64_t v1 = type metadata accessor for DispatchQoS.QoSClass();
    OUTLINED_FUNCTION_4();
    uint64_t v3 = v2;
    MEMORY[0x1F4188790](v4);
    OUTLINED_FUNCTION_21();
    uint64_t v7 = v6 - v5;
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v6 - v5, *MEMORY[0x1E4FBCB30], v1);
    uint64_t v26 = static OS_dispatch_queue.global(qos:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = partial apply for closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown();
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_13_5;
    uint64_t v9 = _Block_copy(aBlock);
    uint64_t v10 = type metadata accessor for DispatchQoS();
    v25[1] = v25;
    OUTLINED_FUNCTION_4();
    uint64_t v12 = v11;
    MEMORY[0x1F4188790](v13);
    OUTLINED_FUNCTION_21();
    uint64_t v16 = v15 - v14;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v17 = type metadata accessor for DispatchWorkItemFlags();
    v25[0] = v25;
    OUTLINED_FUNCTION_4();
    uint64_t v19 = v18;
    MEMORY[0x1F4188790](v20);
    OUTLINED_FUNCTION_21();
    uint64_t v23 = v22 - v21;
    uint64_t v27 = MEMORY[0x1E4FBC860];
    _s10Foundation4UUIDVACSHAAWlTm_7((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAEC8]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v24 = (void *)v26;
    MEMORY[0x1C8773BA0](0, v16, v23, v9);
    _Block_release(v9);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v17);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
    swift_release();
    swift_release();
  }
}

uint64_t closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()()
{
  aBlock[10] = *(id *)MEMORY[0x1E4F143B8];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v56 = result;
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v5 = objc_msgSend(self, sel_conversationKit);
  id v6 = outlined bridged method (mbbnn) of @objc NSBundle.url(forResource:withExtension:)(0x776F64746E756F63, 0xEE00746165622D6ELL, 6709603, 0xE300000000000000, v5);

  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (char *)v50 - v10;
  if (!v6)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v50 - v10, 1, 1, v1);
    goto LABEL_8;
  }
  MEMORY[0x1F4188790](v8);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v55 = v2;
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  v12(v11, (char *)v50 - v4, v1);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v1);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v1) == 1)
  {
LABEL_8:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for URL?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    return swift_release();
  }
  uint64_t v13 = (char *)v50 - v4;
  v12((char *)v50 - v4, v11, v1);
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_sharedInstance);
  uint64_t v16 = *MEMORY[0x1E4F14F98];
  uint64_t v17 = *MEMORY[0x1E4F15050];
  aBlock[0] = 0;
  unsigned int v18 = objc_msgSend(v15, sel_setCategory_mode_options_error_, v16, v17, 2, aBlock);

  if (v18)
  {
    id v19 = aBlock[0];
    id v20 = objc_msgSend(v14, sel_sharedInstance);
    aBlock[0] = 0;
    unsigned int v21 = objc_msgSend(v20, sel_setActive_withOptions_error_, 1, 0, aBlock);

    uint64_t v23 = v56;
    id v24 = aBlock[0];
    if (v21)
    {
      __n128 v25 = MEMORY[0x1F4188790](v22);
      uint64_t v26 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t, __n128))(v27 + 16))(v26, v13, v1, v25);
      objc_allocWithZone(MEMORY[0x1E4F153C0]);
      id v28 = v24;
      id v29 = @nonobjc AVAudioPlayer.init(contentsOf:)((uint64_t)v26);
      float v38 = *(void **)(v23 + 40);
      *(void *)(v23 + 40) = v29;

      id v40 = *(void **)(v23 + 40);
      if (v40)
      {
        LODWORD(v39) = 1.0;
        objc_msgSend(v40, sel_setVolume_, v39);
      }
      type metadata accessor for OS_dispatch_queue();
      uint64_t v54 = static OS_dispatch_queue.main.getter();
      id v41 = (void *)swift_allocObject();
      swift_weakInit();
      aBlock[4] = partial apply for closure #1 in closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown();
      aBlock[5] = v41;
      aBlock[0] = (id)MEMORY[0x1E4F143A8];
      aBlock[1] = (id)1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_60_1;
      v50[0] = _Block_copy(aBlock);
      swift_release();
      uint64_t v52 = type metadata accessor for DispatchQoS();
      id v53 = v50;
      uint64_t v51 = *(void *)(v52 - 8);
      MEMORY[0x1F4188790](v52);
      Class v43 = (char *)v50 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
      static DispatchQoS.unspecified.getter();
      uint64_t v44 = type metadata accessor for DispatchWorkItemFlags();
      v50[1] = v50;
      uint64_t v45 = *(void *)(v44 - 8);
      MEMORY[0x1F4188790](v44);
      uint64_t v47 = (char *)v50 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
      aBlock[0] = (id)MEMORY[0x1E4FBC860];
      _s10Foundation4UUIDVACSHAAWlTm_7((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAEC8]);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v48 = (const void *)v50[0];
      Class v49 = (void *)v54;
      MEMORY[0x1C8773BA0](0, v43, v47, v50[0]);
      _Block_release(v48);
      swift_release();

      (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v43, v52);
      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v13, v1);
    }
    id v32 = aBlock[0];
    id v31 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
  else
  {
    id v30 = aBlock[0];
    id v31 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C3769620;
  aBlock[0] = v31;
  id v34 = v31;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  uint64_t v35 = String.init<A>(reflecting:)();
  uint64_t v37 = v36;
  *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v33 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v33 + 32) = v35;
  *(void *)(v33 + 40) = v37;
  os_log(_:dso:log:type:_:)();
  swift_release();
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v13, v1);
}

uint64_t closure #1 in closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    (*(void (**)(uint64_t))(*(void *)result + 280))(result);
    uint64_t v2 = *(void **)(v1 + 16);
    aBlock[4] = specialized thunk for @callee_guaranteed (@guaranteed ConversationControlsJoinCountdownActionController.CountdownInfo) -> ();
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ();
    aBlock[3] = &block_descriptor_63_1;
    uint64_t v3 = _Block_copy(aBlock);
    id v4 = v2;
    swift_release();
    objc_msgSend(v4, sel_performWhileLocked_, v3);
    swift_release();

    _Block_release(v3);
    uint64_t result = swift_isEscapingClosureAtFileLocation();
    if (result) {
      __break(1u);
    }
  }
  return result;
}

uint64_t closure #1 in closure #1 in closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  uint64_t v5 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v5);
  return (*(uint64_t (**)(char *))(*(void *)a1 + 104))(v4);
}

Swift::Void __swiftcall ConversationControlsJoinCountdownActionController.startCountingDown()()
{
  uint64_t v1 = v0;
  objc_msgSend(*(id *)(v0 + 32), sel_invalidate);
  uint64_t v2 = *(void **)(v0 + 32);
  *(void *)(v0 + 32) = 0;

  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1840]), sel_initWithStyle_, 1);
  objc_msgSend(v4, sel_impactOccurred);
  swift_beginAccess();
  uint64_t v5 = swift_bridgeObjectRetain();
  specialized Sequence.compactMap<A>(_:)(v5);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    id v19 = v4;
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(v7 + 40);
    do
    {
      uint64_t v10 = *v9;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v10 + 16);
      swift_unknownObjectRetain();
      v12(ObjectType, v10);
      swift_unknownObjectRelease();
      v9 += 2;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    id v4 = v19;
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = self;
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v3;
  aBlock[4] = partial apply for closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown();
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  aBlock[3] = &block_descriptor_23_0;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v17 = objc_msgSend(v13, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v16, 1.0);
  _Block_release(v16);
  unsigned int v18 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = v17;

  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_release();
}

uint64_t closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = (void *)result;
    uint64_t v7 = (uint64_t *)(a3 + 16);
    swift_beginAccess();
    if (__OFADD__(*v7, 1))
    {
      __break(1u);
    }
    else
    {
      ++*v7;
      uint64_t v8 = (void *)v6[2];
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = partial apply for closure #1 in closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown();
      *(void *)(v3 + 24) = v6;
      aBlock[4] = partial apply for thunk for @callee_guaranteed (@guaranteed RecentsLinkControllerModel) -> ();
      aBlock[5] = v3;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed RecentLinkCallItems) -> ();
      aBlock[3] = &block_descriptor_56_0;
      uint64_t v9 = _Block_copy(aBlock);
      id v10 = v8;
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v10, sel_performWhileLocked_, v9);

      _Block_release(v9);
      LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v9 & 1) == 0)
      {
        swift_beginAccess();
        uint64_t v3 = *v7;
        if (one-time initialization token for shared == -1) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_19:
    swift_once();
LABEL_5:
    double v11 = (*(double (**)(void))(*(void *)static Defaults.shared + 1048))();
    if ((~*(void *)&v11 & 0x7FF0000000000000) != 0)
    {
      if (v11 > -9.22337204e18)
      {
        if (v11 < 9.22337204e18)
        {
          if (v3 < (uint64_t)v11) {
            return swift_release_n();
          }
          (*(void (**)(void))(*v6 + 264))();
          swift_beginAccess();
          uint64_t v12 = swift_bridgeObjectRetain();
          specialized Sequence.compactMap<A>(_:)(v12);
          uint64_t v14 = v13;
          swift_bridgeObjectRelease();
          uint64_t v15 = *(void *)(v14 + 16);
          if (v15)
          {
            swift_bridgeObjectRetain();
            uint64_t v16 = (uint64_t *)(v14 + 40);
            do
            {
              uint64_t v17 = *v16;
              uint64_t ObjectType = swift_getObjectType();
              id v19 = *(void (**)(uint64_t, uint64_t))(v17 + 32);
              swift_unknownObjectRetain();
              v19(ObjectType, v17);
              swift_unknownObjectRelease();
              v16 += 2;
              --v15;
            }
            while (v15);
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          if (one-time initialization token for conversationKit == -1)
          {
LABEL_14:
            static os_log_type_t.default.getter();
            os_log(_:dso:log:type:_:)();
            return swift_release_n();
          }
LABEL_23:
          swift_once();
          goto LABEL_14;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  return result;
}

uint64_t closure #1 in closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown()(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(a2 + 40), sel_play);
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  specialized Sequence.compactMap<A>(_:)(v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t *)(v4 + 40);
    do
    {
      uint64_t v7 = *v6;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 24);
      swift_unknownObjectRetain();
      v9(ObjectType, v7);
      swift_unknownObjectRelease();
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t ConversationControlsJoinCountdownActionController.isInCountdown(_:)()
{
  uint64_t v0 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v5);
  unint64_t v6 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = (char *)v41 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  MEMORY[0x1F4188790](v8 - 8);
  OUTLINED_FUNCTION_11_80();
  (*(void (**)(void))(v10 + 96))();
  OUTLINED_FUNCTION_12_36((uint64_t)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v11)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for Date?);
LABEL_22:
    char v39 = 0;
    return v39 & 1;
  }
  uint64_t v12 = *(uint64_t (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v13 = v12((char *)v41 - v6, (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v0);
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = (char *)v41 - v6;
  Date.init()();
  char v15 = static Date.> infix(_:_:)();
  if (v15)
  {
    uint64_t v16 = *(void (**)(void))(v2 + 8);
    OUTLINED_FUNCTION_1_147();
    v16();
    OUTLINED_FUNCTION_1_147();
    v16();
    goto LABEL_22;
  }
  Class v43 = (char *)v12;
  uint64_t v45 = v41;
  Date.timeIntervalSince(_:)();
  double v18 = v17;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v44 = v14;
  if (v18 <= (*(double (**)(void))(*(void *)static Defaults.shared + 1048))() + 0.01)
  {
    uint64_t v42 = (void (*)(void))v41;
    MEMORY[0x1F4188790](v19);
    MEMORY[0x1F4188790](v28);
    OUTLINED_FUNCTION_8_88();
    OUTLINED_FUNCTION_11_80();
    (*(void (**)(void))(v29 + 120))();
    OUTLINED_FUNCTION_12_36(v9);
    if (v11)
    {
      id v30 = *(void (**)(void))(v2 + 8);
      OUTLINED_FUNCTION_1_147();
      v30();
      OUTLINED_FUNCTION_1_147();
      v30();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v9, (uint64_t *)&demangling cache variable for type metadata for Date?);
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t))v43)((char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v0);
      _s10Foundation4UUIDVACSHAAWlTm_7(&lazy protocol witness table cache variable for type Date and conformance Date, MEMORY[0x1F418BA88]);
      uint64_t v37 = dispatch thunk of static Comparable.< infix(_:_:)();
      if ((v37 & 1) == 0)
      {
        MEMORY[0x1F4188790](v37);
        OUTLINED_FUNCTION_8_88();
        static Date.+ infix(_:_:)();
        char v39 = dispatch thunk of static Comparable.< infix(_:_:)() ^ 1;
        id v40 = *(void (**)(void))(v2 + 8);
        OUTLINED_FUNCTION_1_147();
        v40();
        OUTLINED_FUNCTION_1_147();
        v40();
        OUTLINED_FUNCTION_1_147();
        v40();
        OUTLINED_FUNCTION_1_147();
        v40();
        return v39 & 1;
      }
      float v38 = *(void (**)(void))(v2 + 8);
      OUTLINED_FUNCTION_1_147();
      v38();
      OUTLINED_FUNCTION_1_147();
      v38();
      ((void (*)(char *, uint64_t))v38)(v7, v0);
    }
    char v39 = 1;
    return v39 & 1;
  }
  MEMORY[0x1F4188790](v19);
  Class v43 = (char *)((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = (char *)((char *)v41 - v43);
  OUTLINED_FUNCTION_11_80();
  uint64_t v42 = *(void (**)(void))(v21 + 120);
  v42();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v0);
  uint64_t v23 = outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for Date?);
  __n128 v24 = MEMORY[0x1F4188790](v23);
  uint64_t v25 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v2 + 16))((char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v0, v24);
  if (EnumTagSinglePayload == 1)
  {
    uint64_t v26 = *(uint64_t (**)(void))(v2 + 8);
    OUTLINED_FUNCTION_1_147();
    uint64_t v27 = v26();
LABEL_16:
    MEMORY[0x1F4188790](v27);
    OUTLINED_FUNCTION_8_88();
    OUTLINED_FUNCTION_3_2();
    (*(void (**)(void))(v35 + 1048))();
    static Date.+ infix(_:_:)();
    __swift_storeEnumTagSinglePayload(v9, 0, 1, v0);
    OUTLINED_FUNCTION_11_80();
    (*(void (**)(uint64_t))(v36 + 128))(v9);
    ((void (*)(char *, uint64_t))v26)(v44, v0);
    ((void (*)(char *, uint64_t))v26)(v7, v0);
    goto LABEL_22;
  }
  v41[1] = v41;
  __n128 v31 = MEMORY[0x1F4188790](v25);
  id v32 = (char *)((char *)v41 - v43);
  ((void (*)(__n128))v42)(v31);
  uint64_t result = OUTLINED_FUNCTION_12_36((uint64_t)v32);
  if (!v11)
  {
    char v34 = static Date.< infix(_:_:)();
    uint64_t v26 = *(uint64_t (**)(void))(v2 + 8);
    OUTLINED_FUNCTION_1_147();
    v26();
    OUTLINED_FUNCTION_1_147();
    uint64_t v27 = v26();
    if ((v34 & 1) == 0)
    {
      OUTLINED_FUNCTION_1_147();
      v26();
      ((void (*)(char *, uint64_t))v26)(v7, v0);
      goto LABEL_22;
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

id *ConversationControlsJoinCountdownActionController.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ConversationControlsJoinCountdownActionController.__deallocating_deinit()
{
  ConversationControlsJoinCountdownActionController.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for CountdownControllerDelegate.startCountdownIfNecessary(for:) in conformance ConversationControlsJoinCountdownActionController()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t protocol witness for CountdownControllerDelegate.invalidate(voucher:) in conformance ConversationControlsJoinCountdownActionController()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t sub_1C36AB02C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()()
{
  return closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()();
}

uint64_t sub_1C36AB06C()
{
  return OUTLINED_FUNCTION_7_44();
}

uint64_t sub_1C36AB078()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown()(uint64_t a1)
{
  return closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown()(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t lazy protocol witness table accessor for type CountdownVoucher and conformance CountdownVoucher()
{
  unint64_t result = lazy protocol witness table cache variable for type CountdownVoucher and conformance CountdownVoucher;
  if (!lazy protocol witness table cache variable for type CountdownVoucher and conformance CountdownVoucher)
  {
    type metadata accessor for CountdownVoucher(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CountdownVoucher and conformance CountdownVoucher);
  }
  return result;
}

uint64_t sub_1C36AB11C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 96))();
}

uint64_t sub_1C36AB164(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 120))();
}

uint64_t dispatch thunk of CountdownObject.initializeCountdownView(with:fullValue:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CountdownObject.startCountdown()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CountdownObject.tick()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CountdownObject.countdownEnded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CountdownVoucher(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_unknownObjectWeakCopyInit();
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for CountdownVoucher(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakDestroy();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for CountdownVoucher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_unknownObjectWeakCopyInit();
  *(void *)(v6 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = v6 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for CountdownVoucher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_unknownObjectWeakCopyAssign();
  *(void *)(v6 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = v6 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for CountdownVoucher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_unknownObjectWeakTakeInit();
  *(void *)(v6 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = v6 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for CountdownVoucher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_unknownObjectWeakTakeAssign();
  *(void *)(v6 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = v6 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CountdownVoucher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C36AB584);
}

uint64_t sub_1C36AB584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
      return (*(_DWORD *)a1 & 0x7FFFFFFFu) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
}

uint64_t storeEnumTagSinglePayload for CountdownVoucher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C36AB620);
}

void *sub_1C36AB620(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
    result[1] = 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for CountdownVoucher()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of CountdownControllerDelegate.startCountdownIfNecessary(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of CountdownControllerDelegate.invalidate(voucher:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for ConversationControlsJoinCountdownActionController()
{
  return self;
}

uint64_t method lookup function for ConversationControlsJoinCountdownActionController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationControlsJoinCountdownActionController);
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.startCountdownIfNecessary(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.invalidate(voucher:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.storeCountdownEndedDate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.startCountingDown()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t ObjC metadata update function for ConversationControlsJoinCountdownActionController.CountdownInfo()
{
  return type metadata accessor for ConversationControlsJoinCountdownActionController.CountdownInfo(0);
}

void type metadata completion function for ConversationControlsJoinCountdownActionController.CountdownInfo()
{
  type metadata accessor for Date?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ConversationControlsJoinCountdownActionController.CountdownInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationControlsJoinCountdownActionController.CountdownInfo);
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t _s10Foundation4UUIDVACSHAAWlTm_7(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown()(uint64_t a1)
{
  return closure #1 in closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown()(a1, v1);
}

uint64_t sub_1C36ABA74()
{
  return OUTLINED_FUNCTION_7_44();
}

uint64_t partial apply for closure #1 in closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()()
{
  return closure #1 in closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()();
}

uint64_t LinkDetailViewModel.__allocating_init(recentsCallItem:)(uint64_t a1)
{
  return LinkDetailViewModel.init(recentsCallItem:)(a1);
}

uint64_t key path getter for LinkDetailViewModel.canRevokeLink : LinkDetailViewModel@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 144))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for LinkDetailViewModel.canRevokeLink : LinkDetailViewModel()
{
  return LinkDetailViewModel.canRevokeLink.setter();
}

uint64_t LinkDetailViewModel.canRevokeLink.getter()
{
  return ConversationControlsManager.shouldOpenMessages.getter();
}

uint64_t LinkDetailViewModel.canRevokeLink.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

uint64_t LinkDetailViewModel.$canRevokeLink.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canRevokeLink, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t LinkDetailViewModel.$canRevokeLink.setter(uint64_t a1)
{
  return LinkDetailViewModel.$canRevokeLink.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canRevokeLink, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t key path getter for LinkDetailViewModel.canShareLink : LinkDetailViewModel@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 192))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for LinkDetailViewModel.canShareLink : LinkDetailViewModel()
{
  return LinkDetailViewModel.canShareLink.setter();
}

uint64_t LinkDetailViewModel.canShareLink.getter()
{
  return ConversationControlsManager.shouldOpenMessages.getter();
}

uint64_t LinkDetailViewModel.canShareLink.setter()
{
  return ShareCardViewModel.shouldShowEndActivity.setter();
}

uint64_t key path setter for LinkDetailViewModel.$canRevokeLink : LinkDetailViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_62();
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v6, a1);
  return a6(v6);
}

uint64_t LinkDetailViewModel.$canShareLink.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canShareLink, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t LinkDetailViewModel.$canShareLink.setter(uint64_t a1)
{
  return LinkDetailViewModel.$canRevokeLink.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canShareLink, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t key path getter for LinkDetailViewModel.invitedMemberHandles : LinkDetailViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 240))();
  *a2 = result;
  return result;
}

uint64_t key path setter for LinkDetailViewModel.invitedMemberHandles : LinkDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 248);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t LinkDetailViewModel.invitedMemberHandles.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t LinkDetailViewModel.invitedMemberHandles.setter()
{
  return static Published.subscript.setter();
}

uint64_t (*LinkDetailViewModel.invitedMemberHandles.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  uint64_t KeyPath = swift_getKeyPath();
  v2[6] = OUTLINED_FUNCTION_16_4(KeyPath);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for LinkDetailViewModel.$invitedMemberHandles : LinkDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 272))(v7);
}

uint64_t LinkDetailViewModel.$invitedMemberHandles.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__invitedMemberHandles, &demangling cache variable for type metadata for Published<Set<TUHandle>?>);
}

uint64_t LinkDetailViewModel.$invitedMemberHandles.setter(uint64_t a1)
{
  return LinkDetailViewModel.$canRevokeLink.setter(a1, &demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__invitedMemberHandles, &demangling cache variable for type metadata for Published<Set<TUHandle>?>);
}

void (*LinkDetailViewModel.$invitedMemberHandles.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher);
  OUTLINED_FUNCTION_5_5(v4);
  v3[5] = v5;
  size_t v7 = *(void *)(v6 + 64);
  v3[6] = malloc(v7);
  v3[7] = malloc(v7);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return LinkDetailViewModel.$invitedMemberHandles.modify;
}

void LinkDetailViewModel.$invitedMemberHandles.modify(uint64_t a1, char a2)
{
}

uint64_t key path getter for LinkDetailViewModel.linkTitle : LinkDetailViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 288))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for LinkDetailViewModel.linkTitle : LinkDetailViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 296);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t LinkDetailViewModel.linkTitle.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t LinkDetailViewModel.linkTitle.setter()
{
  return static Published.subscript.setter();
}

uint64_t (*LinkDetailViewModel.linkTitle.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  uint64_t KeyPath = swift_getKeyPath();
  v2[6] = OUTLINED_FUNCTION_16_4(KeyPath);
  return LinkDetailHeaderView.invitedMemberHandles.modify;
}

uint64_t key path setter for LinkDetailViewModel.$linkTitle : LinkDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>.Publisher);
  __n128 v5 = MEMORY[0x1F4188790](v4);
  size_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 320))(v7);
}

uint64_t LinkDetailViewModel.$linkTitle.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__linkTitle, (uint64_t *)&demangling cache variable for type metadata for Published<String?>);
}

uint64_t LinkDetailViewModel.$linkTitle.setter(uint64_t a1)
{
  return LinkDetailViewModel.$canRevokeLink.setter(a1, &demangling cache variable for type metadata for Published<String?>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__linkTitle, (uint64_t *)&demangling cache variable for type metadata for Published<String?>);
}

void (*LinkDetailViewModel.$linkTitle.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>.Publisher);
  OUTLINED_FUNCTION_5_5(v4);
  v3[5] = v5;
  size_t v7 = *(void *)(v6 + 64);
  v3[6] = malloc(v7);
  v3[7] = malloc(v7);
  OUTLINED_FUNCTION_9_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return LinkDetailViewModel.$linkTitle.modify;
}

void LinkDetailViewModel.$linkTitle.modify(uint64_t a1, char a2)
{
}

void LinkDetailViewModel.$invitedMemberHandles.modify(uint64_t a1, char a2, void (*a3)(void *))
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)(*(void *)a1 + 48);
  uint64_t v6 = *(void **)(*(void *)a1 + 56);
  if (a2)
  {
    uint64_t v7 = v4[4];
    uint64_t v8 = v4[5];
    (*(void (**)(void, void *, uint64_t))(v8 + 16))(*(void *)(*(void *)a1 + 48), v6, v7);
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    a3(*(void **)(*(void *)a1 + 56));
  }
  free(v6);
  free(v5);
  free(v4);
}

double key path getter for LinkDetailViewModel.conversationLink : LinkDetailViewModel@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(long long *__return_ptr))(**(void **)a1 + 336))(&v5);
  uint64_t v3 = v6;
  double result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(void *)(a2 + 16) = v3;
  return result;
}

uint64_t key path setter for LinkDetailViewModel.conversationLink : LinkDetailViewModel(id *a1)
{
  id v1 = *a1;
  swift_bridgeObjectRetain();
  swift_retain();
  return LinkDetailViewModel.conversationLink.setter();
}

uint64_t LinkDetailViewModel.conversationLink.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  return swift_release();
}

uint64_t LinkDetailViewModel.conversationLink.setter()
{
  return static Published.subscript.setter();
}

uint64_t LinkDetailViewModel.$conversationLink.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__conversationLink, &demangling cache variable for type metadata for Published<ConversationLink>);
}

uint64_t LinkDetailViewModel.$conversationLink.setter(uint64_t a1)
{
  return LinkDetailViewModel.$canRevokeLink.setter(a1, &demangling cache variable for type metadata for Published<ConversationLink>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__conversationLink, &demangling cache variable for type metadata for Published<ConversationLink>);
}

uint64_t LinkDetailViewModel.$canRevokeLink.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_21();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11 - v10, a1, v6);
  OUTLINED_FUNCTION_6_1();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v6);
}

uint64_t LinkDetailViewModel.wantsCustomContactDetailsPresentation.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t LinkDetailViewModel.wantsCustomContactDetailsPresentation.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_0_1();
  unsigned char *v1 = a1;
  return result;
}

uint64_t (*LinkDetailViewModel.wantsCustomContactDetailsPresentation.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path setter for LinkDetailViewModel.delegate : LinkDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 416);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t LinkDetailViewModel.delegate.getter()
{
  OUTLINED_FUNCTION_5_4();
  return MEMORY[0x1C8776240](v0);
}

uint64_t LinkDetailViewModel.delegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_1();
  *(void *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*LinkDetailViewModel.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_delegate;
  v3[5] = v1;
  v3[6] = v4;
  OUTLINED_FUNCTION_9_2();
  uint64_t v5 = MEMORY[0x1C8776240](v1);
  uint64_t v6 = *(void *)(v1 + 8);
  v3[3] = v5;
  v3[4] = v6;
  return InCallControlsBaseCell.delegate.modify;
}

uint64_t key path setter for LinkDetailViewModel.recentsCallItem : LinkDetailViewModel(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for RecentsCallItem(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of RecentsCallItem(a1, (uint64_t)v6);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_recentsCallItem;
  swift_beginAccess();
  outlined assign with take of RecentsCallItem((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t LinkDetailViewModel.recentsCallItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_recentsCallItem;
  swift_beginAccess();
  return outlined init with copy of RecentsCallItem(v3, a1);
}

uint64_t LinkDetailViewModel.init(recentsCallItem:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  OUTLINED_FUNCTION_4();
  uint64_t v34 = v3;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_21();
  uint64_t v32 = v6 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_21();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_4();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_62();
  uint64_t v18 = v1 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canRevokeLink;
  Published.init(initialValue:)();
  uint64_t v29 = v18;
  uint64_t v30 = v16;
  uint64_t v19 = *(void (**)(uint64_t))(v16 + 32);
  uint64_t v20 = OUTLINED_FUNCTION_9_92();
  v19(v20);
  uint64_t v21 = v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canShareLink;
  Published.init(initialValue:)();
  uint64_t v28 = v21;
  uint64_t v22 = OUTLINED_FUNCTION_9_92();
  v19(v22);
  uint64_t v23 = v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__invitedMemberHandles;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>?);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v23, v13, v7);
  uint64_t v24 = v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__linkTitle;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v24, v32, v31);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_wantsCustomContactDetailsPresentation) = 0;
  uint64_t v25 = v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_delegate;
  *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  RecentsCallItem.conversationLink.getter();
  outlined destroy of RecentsCallItem(a1);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v26(v29, v14);
  v26(v28, v14);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v23, v7);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v24, v31);
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v25);
  type metadata accessor for LinkDetailViewModel();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1C36AD044@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 144))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C36AD08C()
{
  return LinkDetailViewModel.canRevokeLink.setter();
}

uint64_t sub_1C36AD0B4@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 192))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C36AD0FC()
{
  return LinkDetailViewModel.canShareLink.setter();
}

uint64_t sub_1C36AD124@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 240))();
  *a1 = result;
  return result;
}

uint64_t sub_1C36AD16C@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 288))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t type metadata accessor for LinkDetailViewModel()
{
  uint64_t result = type metadata singleton initialization cache for LinkDetailViewModel;
  if (!type metadata singleton initialization cache for LinkDetailViewModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LinkDetailViewModel.validateEditingPermissions()()
{
  (*(void (**)(void **__return_ptr))(*(void *)v0 + 336))(&v3);
  uint64_t v1 = v3;
  swift_release();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_isLocallyCreated);

  LinkDetailViewModel.canRevokeLink.setter();
  return LinkDetailViewModel.canShareLink.setter();
}

Swift::Void __swiftcall LinkDetailViewModel.joinCall()()
{
  if ((*(uint64_t (**)(void))(*(void *)v0 + 408))())
  {
    uint64_t v2 = v1;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 8))(v0, ObjectType, v2);
    swift_unknownObjectRelease();
  }
}

uint64_t LinkDetailViewModel.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canRevokeLink;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canShareLink, v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>);
  OUTLINED_FUNCTION_12_0();
  uint64_t v4 = OUTLINED_FUNCTION_28_6();
  v5(v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  OUTLINED_FUNCTION_12_0();
  uint64_t v6 = OUTLINED_FUNCTION_28_6();
  v7(v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationLink>);
  OUTLINED_FUNCTION_12_0();
  uint64_t v8 = OUTLINED_FUNCTION_28_6();
  v9(v8);
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_delegate);
  outlined destroy of RecentsCallItem(v0 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_recentsCallItem);
  return v0;
}

uint64_t LinkDetailViewModel.__deallocating_deinit()
{
  LinkDetailViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C36AD504()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_1C36AD540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for LinkDetailViewModel.$canRevokeLink : LinkDetailViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, LinkDetailViewModel.$canRevokeLink.setter);
}

uint64_t sub_1C36AD574()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t sub_1C36AD5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for LinkDetailViewModel.$canRevokeLink : LinkDetailViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, LinkDetailViewModel.$canShareLink.setter);
}

uint64_t sub_1C36AD5E4()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t sub_1C36AD62C()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t sub_1C36AD674()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t sub_1C36AD6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for LinkDetailViewModel.$canRevokeLink : LinkDetailViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<ConversationLink>.Publisher, LinkDetailViewModel.$conversationLink.setter);
}

uint64_t sub_1C36AD6EC@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 384))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C36AD73C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 392))(*a1);
}

uint64_t sub_1C36AD78C@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 408))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C36AD7DC()
{
  OUTLINED_FUNCTION_5_9();
  return (*(uint64_t (**)(void))(v0 + 432))();
}

uint64_t dispatch thunk of LinkDetailViewModelDelegate.didJoinCall(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of LinkDetailViewModelDelegate.handleContactDetailsPresentation(for:with:sourceRect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t ObjC metadata update function for LinkDetailViewModel()
{
  return type metadata accessor for LinkDetailViewModel();
}

void type metadata completion function for LinkDetailViewModel()
{
  type metadata accessor for Published<Bool>(319, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Set<TUHandle>?>(319, &lazy cache variable for type metadata for Published<Set<TUHandle>?>, &demangling cache variable for type metadata for Set<TUHandle>?);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Set<TUHandle>?>(319, (unint64_t *)&lazy cache variable for type metadata for Published<String?>, &demangling cache variable for type metadata for String?);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<ConversationLink>);
        if (v3 <= 0x3F)
        {
          type metadata accessor for RecentsCallItem(319);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t method lookup function for LinkDetailViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LinkDetailViewModel);
}

uint64_t dispatch thunk of LinkDetailViewModel.canRevokeLink.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$canRevokeLink.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of LinkDetailViewModel.canShareLink.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$canShareLink.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of LinkDetailViewModel.invitedMemberHandles.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of LinkDetailViewModel.invitedMemberHandles.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of LinkDetailViewModel.invitedMemberHandles.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$invitedMemberHandles.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$invitedMemberHandles.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$invitedMemberHandles.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of LinkDetailViewModel.linkTitle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of LinkDetailViewModel.linkTitle.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of LinkDetailViewModel.linkTitle.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$linkTitle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$linkTitle.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$linkTitle.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of LinkDetailViewModel.conversationLink.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$conversationLink.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of LinkDetailViewModel.wantsCustomContactDetailsPresentation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of LinkDetailViewModel.wantsCustomContactDetailsPresentation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of LinkDetailViewModel.wantsCustomContactDetailsPresentation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of LinkDetailViewModel.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of LinkDetailViewModel.delegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of LinkDetailViewModel.delegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of LinkDetailViewModel.recentsCallItem.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of LinkDetailViewModel.__allocating_init(recentsCallItem:)()
{
  return (*(uint64_t (**)(void))(v0 + 456))();
}

uint64_t dispatch thunk of LinkDetailViewModel.joinCall()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t outlined assign with take of RecentsCallItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RecentsCallItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t static InCallControlsMode.== infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1 >> 5)
  {
    case 1:
      if ((a2 & 0xE0) != 0x20) {
        goto LABEL_18;
      }
      goto LABEL_10;
    case 2:
      if ((a2 & 0xE0) != 0x40) {
        goto LABEL_18;
      }
LABEL_10:
      char v2 = ((a1 & 1) == 0) ^ a2;
      return v2 & 1;
    case 3:
      if (a1 == 96)
      {
        if (a2 == 96) {
          goto LABEL_16;
        }
      }
      else if (a2 == 97)
      {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 4:
      if (a1 == 128)
      {
        if (a2 != 128) {
          goto LABEL_18;
        }
LABEL_16:
        char v2 = 1;
        return v2 & 1;
      }
      if (a2 == 129) {
        goto LABEL_16;
      }
LABEL_18:
      char v2 = 0;
      return v2 & 1;
    case 5:
      if (a1 != 160 && a2 == 161) {
        goto LABEL_16;
      }
      goto LABEL_18;
    default:
      if (a2 >= 0x20u) {
        goto LABEL_18;
      }
      goto LABEL_16;
  }
}

uint64_t InCallControlsMode.debugDescription.getter(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t v2 = a1 >> 5;
  uint64_t result = 0x6C6C61436E692ELL;
  switch(v2)
  {
    case 1:
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      unint64_t v13 = 0xD000000000000011;
      goto LABEL_4;
    case 2:
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_43_0();
      unint64_t v13 = v4 + 9;
LABEL_4:
      if (v1) {
        uint64_t v5 = 1702195828;
      }
      else {
        uint64_t v5 = 0x65736C6166;
      }
      if (v1) {
        unint64_t v6 = 0xE400000000000000;
      }
      else {
        unint64_t v6 = 0xE500000000000000;
      }
      unint64_t v7 = v6;
      String.append(_:)(*(Swift::String *)&v5);
      swift_bridgeObjectRelease();
      v8._countAndFlagsBits = 41;
      v8._object = (void *)0xE100000000000000;
      String.append(_:)(v8);
      uint64_t result = v13;
      break;
    case 3:
      OUTLINED_FUNCTION_43_0();
      uint64_t result = v9 - 1;
      break;
    case 4:
      OUTLINED_FUNCTION_43_0();
      uint64_t v11 = v10 | 2;
      if (v1 == 128) {
        uint64_t result = 0x6E696D6F636E692ELL;
      }
      else {
        uint64_t result = v11;
      }
      break;
    case 5:
      OUTLINED_FUNCTION_43_0();
      if (v1 == 160) {
        uint64_t result = v12 + 3;
      }
      else {
        uint64_t result = v12;
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t InCallControlsMode.supportsShareMenuButton.getter(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t v2 = a1 >> 5;
  uint64_t result = 0;
  switch(v2)
  {
    case 1:
      BOOL v4 = (v1 & 1) == 0;
      goto LABEL_5;
    case 2:
    case 4:
    case 5:
      return result;
    case 3:
      BOOL v4 = v1 == 96;
LABEL_5:
      uint64_t result = v4;
      break;
    default:
      uint64_t result = OUTLINED_FUNCTION_4_3();
      break;
  }
  return result;
}

BOOL InCallControlsMode.isAVLess.getter()
{
  return OUTLINED_FUNCTION_373();
}

BOOL InCallControlsMode.isInCall.getter(unsigned __int8 a1)
{
  return a1 < 0x20u;
}

BOOL InCallControlsMode.isStaging.getter()
{
  return OUTLINED_FUNCTION_373();
}

BOOL InCallControlsMode.isNotApproved.getter()
{
  return OUTLINED_FUNCTION_373();
}

uint64_t InCallControlsMode.allowsHiding.getter(unsigned __int8 a1)
{
  int v1 = (a1 >> 5) - 1;
  uint64_t result = 0;
  switch(v1)
  {
    case 0:
    case 1:
      return result;
    case 2:
      return (a1 & 0xFE) != 96;
    case 3:
      if (a1 != 128) {
        goto LABEL_6;
      }
      goto LABEL_4;
    case 4:
      if (a1 != 160) {
        goto LABEL_6;
      }
LABEL_4:
      uint64_t result = 0;
      break;
    default:
LABEL_6:
      uint64_t result = OUTLINED_FUNCTION_4_3();
      break;
  }
  return result;
}

uint64_t InCallControlsMode.wantsStagingBehavior.getter(unsigned __int8 a1)
{
  int v1 = a1 >> 5;
  if (v1 == 1) {
    return OUTLINED_FUNCTION_4_3();
  }
  if (v1 == 2)
  {
    if ((a1 & 1) == 0) {
      return OUTLINED_FUNCTION_4_3();
    }
  }
  else if (v1 == 3 && a1 == 96)
  {
    return OUTLINED_FUNCTION_4_3();
  }
  return 0;
}

BOOL InCallControlsMode.isHandoffEligible.getter()
{
  return OUTLINED_FUNCTION_373();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance InCallControlsMode()
{
  return InCallControlsMode.debugDescription.getter(*v0);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsMode(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static InCallControlsMode.== infix(_:_:)(*a1, *a2);
}

uint64_t getEnumTagSinglePayload for InCallControlsMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x7B)
  {
    if (a2 + 133 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 133) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 134;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v5 >= 0x7A) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *storeEnumTagSinglePayload for InCallControlsMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 133 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 133) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7B) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7A)
  {
    unsigned int v6 = ((a2 - 123) >> 8) + 1;
    *uint64_t result = a2 - 123;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C36AE4A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t getEnumTag for InCallControlsMode(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 <= 0x5F) {
    return v1 >> 5;
  }
  else {
    return (v1 & 1 | (2 * (v1 >> 5))) - 3;
  }
}

unsigned char *destructiveProjectEnumData for InCallControlsMode(unsigned char *result)
{
  *result &= 0x1Fu;
  return result;
}

unsigned char *destructiveInjectEnumTag for InCallControlsMode(unsigned char *result, unsigned int a2)
{
  if (a2 < 3) {
    LOBYTE(v2) = *result & 1 | (32 * a2);
  }
  else {
    unsigned int v2 = (((_BYTE)a2 - 3) & 1 | (32 * ((a2 - 3) >> 1))) + 96;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsMode()
{
  return &type metadata for InCallControlsMode;
}

Swift::Void __swiftcall ConversationControlsShareCardHandle.invalidate()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_invalidate);
}

uint64_t ConversationControlsShareCardHandle.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ConversationControlsShareCardHandle.init()();
  return v0;
}

Swift::Void __swiftcall ConversationControlsShareCardHandle.activate()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_activateWithOptions_, 0);
}

uint64_t ConversationControlsShareCardHandle.init()()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone(MEMORY[0x1E4FA6BB0]);
  id v3 = @nonobjc SBSRemoteAlertDefinition.init(serviceName:viewControllerClassName:)(0xD000000000000017, 0x80000001C37A2D70, 0xD000000000000030, 0x80000001C37BE520);
  id v4 = objc_msgSend(self, sel_newHandleWithDefinition_configurationContext_, v3, 0);

  *(void *)(v1 + 16) = v4;
  return v1;
}

uint64_t ConversationControlsShareCardHandle.deinit()
{
  return v0;
}

uint64_t ConversationControlsShareCardHandle.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id @nonobjc SBSRemoteAlertDefinition.init(serviceName:viewControllerClassName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = (void *)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  Swift::String v8 = (void *)MEMORY[0x1C87730B0](a3, a4);
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v4, sel_initWithServiceName_viewControllerClassName_, v7, v8);

  return v9;
}

uint64_t type metadata accessor for ConversationControlsShareCardHandle()
{
  return self;
}

uint64_t method lookup function for ConversationControlsShareCardHandle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationControlsShareCardHandle);
}

uint64_t dispatch thunk of ConversationControlsShareCardHandle.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit32MostActiveParticipantsControllerC15ActivityDetailsVy10Foundation4UUIDV_GGG_APs5NeverOTg506_sSi15f5Kit32hijk3C15lm38Vyx_GAFIgynr_Si6offset_AF7elementtAFs5p140OIegnrzr_SHRzlTR10Foundation4UUIDV_TG504_s15a5Kit32cdef79C22applyProminenceWeights33_96A8A9BA1FE613479F021FF747BF6BADLL06sortedE0SayAC15gH47U54_GGAJ_tFAISi_AItXEfU0_10Foundation4UUIDV_Tg5Tf3nnnpf_nTf1cn_n(uint64_t a1)
{
  uint64_t v36 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v2 = v36;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v28 = a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails));
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](&v26);
  Swift::String v8 = (char *)&v26 - v7;
  uint64_t v27 = v3;
  uint64_t v35 = v9;
  if (v3)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v34 = &v26;
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t v29 = &v26;
      uint64_t v30 = v11;
      unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
      uint64_t v31 = *(void *)(*(void *)(v11 - 8) + 72);
      unint64_t v32 = v12;
      MEMORY[0x1F4188790](v28 + v12 + v31 * v10);
      unint64_t v13 = (char *)&v26 + *(int *)(v4 + 48) - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
      outlined init with copy of Conversation?(v14, (uint64_t)v13, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t v15 = (uint64_t)&v8[*(int *)(v4 + 48)];
      uint64_t v33 = v10;
      *(void *)Swift::String v8 = v10;
      outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v13, v15, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t active = outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails));
      MEMORY[0x1F4188790](active);
      uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v19 = *v6;
      outlined init with copy of Conversation?((uint64_t)v6 + *(int *)(v4 + 48), (uint64_t)v18, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      if (v19 == 2)
      {
        if (one-time initialization token for shared != -1) {
          swift_once();
        }
        (*(void (**)(void))(*(void *)static Defaults.shared + 440))();
        uint64_t v20 = v33;
      }
      else if (v19 == 1)
      {
        uint64_t v20 = v33;
        if (one-time initialization token for shared != -1) {
          swift_once();
        }
        (*(void (**)(void))(*(void *)static Defaults.shared + 432))();
      }
      else
      {
        uint64_t v20 = v33;
        if (v19)
        {
          if (one-time initialization token for shared != -1) {
            swift_once();
          }
          float v21 = (*(float (**)(void))(*(void *)static Defaults.shared + 448))();
        }
        else
        {
          if (one-time initialization token for shared != -1) {
            swift_once();
          }
          (*(void (**)(void))(*(void *)static Defaults.shared + 424))();
        }
      }
      *(float *)&v18[*(int *)(v30 + 48)] = v21;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails));
      uint64_t v2 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v2 = v36;
      }
      unint64_t v22 = *(void *)(v2 + 16);
      if (v22 >= *(void *)(v2 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v2 = v36;
      }
      uint64_t v10 = v20 + 1;
      *(void *)(v2 + 16) = v22 + 1;
      outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v18, v2 + v32 + v22 * v31, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails));
      uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
      MEMORY[0x1F4188790](v4);
      unsigned int v6 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      uint64_t v35 = &v26;
      MEMORY[0x1F4188790](v23);
      Swift::String v8 = (char *)&v26 - v24;
    }
    while (v27 != v10);
  }
  swift_bridgeObjectRelease();
  return v2;
}

BOOL specialized MostActiveParticipantsController.mostActiveParticipantProminenceChangeReason.getter()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  swift_beginAccess();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Conversation?(v1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v5 = type metadata accessor for UUID();
  BOOL v6 = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) != 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  return v6;
}

uint64_t specialized MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter()
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  OUTLINED_FUNCTION_50();
  uint64_t v2 = *(void **)(v0 + *(void *)(v1 + 152));
  uint64_t v3 = OUTLINED_FUNCTION_26();
  *(void *)(v3 + 16) = &v11;
  *(void *)(v3 + 24) = v0;
  uint64_t v4 = OUTLINED_FUNCTION_26();
  *(void *)(v4 + 16) = partial apply for specialized closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter;
  *(void *)(v4 + 24) = v3;
  aBlock[4] = partial apply for thunk for @callee_guaranteed () -> ();
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_50_1;
  uint64_t v5 = _Block_copy(aBlock);
  BOOL v6 = v2;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v5);

  _Block_release(v5);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = v11;
    swift_release();
    return v9;
  }
  return result;
}

uint64_t specialized closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter(void *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 128));
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    unint64_t v22 = a1;
    uint64_t v28 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v5, 0);
    uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails)
                   - 8);
    unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v21[1] = v4;
    uint64_t v9 = v4 + v8;
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v10 - 8);
    uint64_t v27 = *(void *)(v12 + 64);
    uint64_t v26 = *(void *)(v7 + 72);
    uint64_t v25 = *(void *)(v7 + 64);
    uint64_t v23 = v12 + 32;
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    do
    {
      uint64_t v13 = MEMORY[0x1F4188790](v10);
      uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x1F4188790](v13);
      uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      outlined init with copy of Conversation?(v9, (uint64_t)v17, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      (*v24)(v15, v17, v11);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t v6 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v28;
      }
      unint64_t v19 = *(void *)(v6 + 16);
      unint64_t v18 = *(void *)(v6 + 24);
      if (v19 >= v18 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
        uint64_t v6 = v28;
      }
      *(void *)(v6 + 16) = v19 + 1;
      uint64_t v10 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(v6+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v19, v15, v11);
      uint64_t v28 = v6;
      v9 += v26;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    a1 = v22;
  }
  *a1 = v6;
  return swift_bridgeObjectRelease();
}

void specialized MostActiveParticipantsController.init(participantIdentifiers:configuration:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v31 = v3;
  uint64_t v32 = v2;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  OUTLINED_FUNCTION_50();
  uint64_t v5 = v0 + *(void *)(v4 + 112);
  uint64_t v6 = type metadata accessor for UUID();
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + *(void *)(*(void *)v1 + 128)) = MEMORY[0x1E4FBC860];
  uint64_t v8 = v7;
  OUTLINED_FUNCTION_13_30();
  *(void *)(v1 + *(void *)(v9 + 136)) = 0;
  OUTLINED_FUNCTION_13_30();
  static Date.distantPast.getter();
  OUTLINED_FUNCTION_13_30();
  uint64_t v11 = *(void *)(v10 + 152);
  v30[1] = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  uint64_t v33 = v13;
  uint64_t v34 = v12;
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v12);
  static DispatchQoS.unspecified.getter();
  type metadata accessor for OS_dispatch_queue.Attributes();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_21();
  v36[0] = v8;
  _s10Foundation4UUIDVACSHAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, MEMORY[0x1F41AB110]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v30[2] = MEMORY[0x1E4FBB350];
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_21();
  (*(void (**)(uint64_t, void))(v20 + 104))(v19 - v18, *MEMORY[0x1E4FBCC50]);
  *(void *)(v1 + v11) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  OUTLINED_FUNCTION_13_30();
  *(void *)(v1 + *(void *)(v21 + 120)) = v31;
  unint64_t v22 = *(void **)(v1 + v11);
  uint64_t v23 = OUTLINED_FUNCTION_26();
  uint64_t v24 = v32;
  *(void *)(v23 + 16) = v1;
  *(void *)(v23 + 24) = v24;
  v36[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:);
  v36[5] = v23;
  v36[0] = MEMORY[0x1E4F143A8];
  v36[1] = 1107296256;
  v36[2] = thunk for @escaping @callee_guaranteed () -> ();
  v36[3] = &block_descriptor_99_0;
  uint64_t v25 = _Block_copy(v36);
  MEMORY[0x1F4188790](v25);
  uint64_t v26 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = v22;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_16_0();
  uint64_t v35 = MEMORY[0x1E4FBC860];
  _s10Foundation4UUIDVACSHAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAEB8]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OUTLINED_FUNCTION_31_12();
  MEMORY[0x1C8773BA0]();
  _Block_release(v25);

  OUTLINED_FUNCTION_50_1();
  v29();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v34);
  swift_release();
  OUTLINED_FUNCTION_28();
}

uint64_t specialized closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v22 = a1;
    uint64_t v28 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v5 = type metadata accessor for UUID();
    uint64_t v6 = 0;
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v25 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v26 = v2;
    uint64_t v23 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v24 = v7 + 16;
    do
    {
      uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      id v27 = &v21;
      uint64_t v9 = *((void *)v8 - 1);
      MEMORY[0x1F4188790](v8);
      uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      __n128 v13 = MEMORY[0x1F4188790](v12);
      uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v16 = *(void (**)(char *, __n128))(v7 + 16);
      v16(v15, v13);
      ((void (*)(char *, char *, uint64_t))v16)(v11, v15, v5);
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      float v17 = (*(float (**)(void))(*(void *)static Defaults.shared + 408))();
      *(_DWORD *)&v11[v8[9]] = 0;
      *(float *)&v11[v8[10]] = v17;
      v11[v8[11]] = 0;
      *(_DWORD *)&v11[v8[12]] = 1065353216;
      *(_DWORD *)&v11[v8[13]] = 0;
      *(_DWORD *)&v11[v8[14]] = 0;
      (*v23)(v15, v5);
      uint64_t v3 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v3 = v28;
      }
      unint64_t v18 = *(void *)(v3 + 16);
      if (v18 >= *(void *)(v3 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v3 = v28;
      }
      ++v6;
      *(void *)(v3 + 16) = v18 + 1;
      outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v11, v3+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v18, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    }
    while (v26 != v6);
    a1 = v22;
  }
  uint64_t v19 = (void *)(a1 + *(void *)(*(void *)a1 + 128));
  swift_beginAccess();
  *uint64_t v19 = v3;
  return swift_bridgeObjectRelease();
}

void specialized MostActiveParticipantsController.update(_:mediaPriorities:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_50();
  uint64_t v6 = *(void **)(v0 + *(void *)(v5 + 152));
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v20 = OUTLINED_FUNCTION_10_85(v12, v13, v14, v15, v16, v17, v18, v19, v41);
  v21(v20);
  unint64_t v22 = (v10 + ((*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = OUTLINED_FUNCTION_19_56(v23);
  v25(v24);
  uint64_t v26 = (_OWORD *)(v4 + v22);
  long long v27 = *(_OWORD *)(v2 + 16);
  *uint64_t v26 = *(_OWORD *)v2;
  v26[1] = v27;
  v26[2] = *(_OWORD *)(v2 + 32);
  v42[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:);
  v42[5] = v4;
  v42[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v42[2] = thunk for @escaping @callee_guaranteed () -> ();
  v42[3] = &block_descriptor_77;
  uint64_t v28 = _Block_copy(v42);
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_63();
  id v30 = v6;
  swift_retain();
  outlined retain of ParticipantMediaPriorities((void **)v2);
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_5_1();
  _s10Foundation4UUIDVACSHAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAEB8]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v32 = OUTLINED_FUNCTION_484();
  MEMORY[0x1C8773BA0](v32);
  _Block_release(v28);

  OUTLINED_FUNCTION_29_4();
  v36(v33, v34, v35);
  OUTLINED_FUNCTION_36_31();
  v40(v37, v38, v39);
  swift_release();
  OUTLINED_FUNCTION_28();
}

void specialized closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t *)(a1 + *(void *)(*(void *)a1 + 128));
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v68 = a2;
  uint64_t v70 = a2;
  swift_bridgeObjectRetain();
  unint64_t v67 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for specialized closure #1 in closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:), (uint64_t)v69, v7);
  char v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  uint64_t v66 = *((void *)v10 - 1);
  uint64_t v11 = *(void *)(v66 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  float v14 = *(float *)(a3 + 40);
  float v13 = *(float *)(a3 + 44);
  float v15 = v13 + 0.01;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(float (**)(void))(*(void *)static Defaults.shared + 328))() < v15)
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    MEMORY[0x1F4188790](v17 - 8);
    uint64_t v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, v68, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v20);
    uint64_t v21 = a1 + *(void *)(*(void *)a1 + 112);
    swift_beginAccess();
    outlined assign with take of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v19, v21, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v16 = swift_endAccess();
  }
  float v22 = v14 + 0.01;
  uint64_t v23 = static Defaults.shared;
  uint64_t v24 = (float (**)(uint64_t))(*(void *)static Defaults.shared + 328);
  uint64_t v25 = (float (*)(void))*v24;
  if ((*v24)(v16) < (float)(v14 + 0.01) || v25() < v15)
  {
    if ((v9 & 1) == 0)
    {
      MEMORY[0x1F4188790](v26);
      uint64_t v28 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      if ((v67 & 0x8000000000000000) != 0)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (v67 >= *(void *)(*v6 + 16))
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      uint64_t v29 = *(unsigned __int8 *)(v66 + 80);
      uint64_t v30 = *v6 + ((v29 + 32) & ~v29);
      uint64_t v31 = *(void *)(v66 + 72);
      uint64_t v65 = v27;
      uint64_t v66 = v31;
      uint64_t v32 = outlined init with copy of Conversation?(v30 + v31 * v67, (uint64_t)v28, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      int v33 = v28[v10[11]];
      if (v33 == ((float (*)(uint64_t))v25)(v32) >= v22) {
        float v34 = (*(float (**)(void))(*(void *)v23 + 408))();
      }
      else {
        float v34 = *(float *)&v28[v10[10]];
      }
      uint64_t v44 = type metadata accessor for UUID();
      uint64_t v45 = *(void *)(v44 - 8);
      __n128 v46 = MEMORY[0x1F4188790](v44);
      id v48 = (char *)&v65 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v45 + 16))(v48, v68, v44, v46);
      int v49 = *(_DWORD *)&v28[v10[9]];
      int v50 = *(_DWORD *)&v28[v10[12]];
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v12, v48, v44);
      *(_DWORD *)&v12[v10[9]] = v49;
      *(float *)&v12[v10[10]] = v34;
      v12[v10[11]] = 1;
      *(_DWORD *)&v12[v10[12]] = v50;
      *(float *)&v12[v10[13]] = v14;
      *(float *)&v12[v10[14]] = v13;
LABEL_24:
      swift_beginAccess();
      uint64_t v63 = *v6;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v6 = v63;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v63 = specialized _ArrayBuffer._consumeAndCreateNew()();
        *uint64_t v6 = v63;
      }
      if (v67 < *(void *)(v63 + 16))
      {
        outlined assign with copy of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v12, v63 + ((v29 + 32) & ~(unint64_t)v29) + v66 * v67);
        goto LABEL_28;
      }
      __break(1u);
      goto LABEL_30;
    }
    char v35 = 1;
    float v36 = 1.0;
LABEL_21:
    uint64_t v51 = type metadata accessor for UUID();
    uint64_t v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))((char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v68, v51);
    float v53 = (*(float (**)(uint64_t))(*(void *)v23 + 408))(v52);
    *(float *)&v12[v10[9]] = v36;
    *(float *)&v12[v10[10]] = v53;
    v12[v10[11]] = v35;
    *(_DWORD *)&v12[v10[12]] = 1065353216;
    *(float *)&v12[v10[13]] = v14;
    *(float *)&v12[v10[14]] = v13;
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v54 = *(void *)(*v6 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v54);
    uint64_t v55 = *v6;
    *(void *)(v55 + 16) = v54 + 1;
    outlined init with copy of Conversation?((uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v55+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v54, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
LABEL_28:
    swift_endAccess();
    specialized MostActiveParticipantsController.startEMATimerIfNecessary()();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    return;
  }
  if (v9)
  {
    char v35 = 0;
    float v36 = 0.0;
    goto LABEL_21;
  }
  MEMORY[0x1F4188790](v26);
  uint64_t v38 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v67 & 0x8000000000000000) != 0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v65 = v37;
  if (v67 < *(void *)(*v6 + 16))
  {
    uint64_t v29 = *(unsigned __int8 *)(v66 + 80);
    uint64_t v39 = *v6 + ((v29 + 32) & ~v29);
    uint64_t v66 = *(void *)(v66 + 72);
    uint64_t v40 = outlined init with copy of Conversation?(v39 + v66 * v67, (uint64_t)v38, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    int v41 = v38[v10[11]];
    if (v41 == ((float (*)(uint64_t))v25)(v40) >= v22) {
      float v43 = (*(float (**)(uint64_t))(*(void *)v23 + 408))(v42);
    }
    else {
      float v43 = *(float *)&v38[v10[10]];
    }
    uint64_t v56 = type metadata accessor for UUID();
    uint64_t v57 = *(void *)(v56 - 8);
    __n128 v58 = MEMORY[0x1F4188790](v56);
    id v60 = (char *)&v65 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v57 + 16))(v60, v68, v56, v58);
    int v61 = *(_DWORD *)&v38[v10[9]];
    int v62 = *(_DWORD *)&v38[v10[12]];
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v38, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v12, v60, v56);
    *(_DWORD *)&v12[v10[9]] = v61;
    *(float *)&v12[v10[10]] = v43;
    v12[v10[11]] = 0;
    *(_DWORD *)&v12[v10[12]] = v62;
    *(float *)&v12[v10[13]] = v14;
    *(float *)&v12[v10[14]] = v13;
    goto LABEL_24;
  }
LABEL_33:
  __break(1u);
}

uint64_t specialized MostActiveParticipantsController.startEMATimerIfNecessary()()
{
  uint64_t v3 = v0;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  char v8 = (uint64_t *)((char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(*(void *)v3 + 152);
  uint64_t v10 = *(void **)(v3 + v9);
  void *v8 = v10;
  (*(void (**)(void *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4FBCBE8], v4, v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  float v13 = *(uint64_t (**)(void *, uint64_t))(v5 + 8);
  uint64_t v12 = (char *)(v5 + 8);
  uint64_t result = v13(v8, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_4;
  }
  if (*(void *)(v3 + *(void *)(*(void *)v3 + 136))) {
    return result;
  }
  uint64_t v46 = *(void *)(*(void *)v3 + 136);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for OS_dispatch_source);
  float v15 = *(void **)(v3 + v9);
  uint64_t v16 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t ObjectType = &v43;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC860];
  _s10Foundation4UUIDVACSHAAWlTm_8(&lazy protocol witness table cache variable for type OS_dispatch_source.TimerFlags and conformance OS_dispatch_source.TimerFlags, MEMORY[0x1F41AB168]);
  id v20 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_source.TimerFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_source.TimerFlags] and conformance [A], &demangling cache variable for type metadata for [OS_dispatch_source.TimerFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v21 = static OS_dispatch_source.makeTimerSource(flags:queue:)();

  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v47 = v21;
  uint64_t ObjectType = (uint64_t *)swift_getObjectType();
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v45 = &v43;
  uint64_t v2 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v1 = (char *)&v43 - v24;
  static DispatchTime.now()();
  if (one-time initialization token for shared != -1) {
    goto LABEL_7;
  }
LABEL_4:
  (*(void (**)(void))(*(void *)static Defaults.shared + 416))();
  MEMORY[0x1C8772E20](v1);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
  uint64_t v26 = v25(v1, v9);
  double v27 = (*(double (**)(uint64_t))(*(void *)static Defaults.shared + 416))(v26);
  uint64_t v28 = type metadata accessor for DispatchTimeInterval();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (uint64_t *)((char *)&v43 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = ObjectType;
  default argument 2 of OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v31);
  MEMORY[0x1C8773D10](v12, v31, v32, v27);
  (*(void (**)(void *, uint64_t))(v29 + 8))(v31, v28);
  v25(v12, v9);
  uint64_t v33 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary();
  aBlock[5] = v33;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_83_1;
  float v34 = _Block_copy(aBlock);
  uint64_t v44 = type metadata accessor for DispatchQoS();
  uint64_t v45 = &v43;
  uint64_t v35 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v37 = (char *)&v43 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v38 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = (uint64_t)&v43;
  uint64_t v39 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  int v41 = (char *)&v43 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  default argument 1 of OS_dispatch_source.setEventHandler(qos:flags:handler:)();
  uint64_t v42 = v47;
  OS_dispatch_source.setEventHandler(qos:flags:handler:)();
  _Block_release(v34);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v44);
  swift_release();
  swift_release();
  OS_dispatch_source.resume()();
  *(void *)(v3 + v46) = v42;
  return swift_unknownObjectRelease();
}

void specialized MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)()
{
  OUTLINED_FUNCTION_31();
  char v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_50();
  __n128 v6 = *(void **)(v0 + *(void *)(v5 + 152));
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v11);
  id v20 = OUTLINED_FUNCTION_10_85(v12, v13, v14, v15, v16, v17, v18, v19, v36);
  v21(v20);
  uint64_t v22 = ((*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v10;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = OUTLINED_FUNCTION_19_56(v23);
  v25(v24);
  *(unsigned char *)(v4 + v22) = v2;
  v37[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:);
  v37[5] = v4;
  v37[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v37[2] = thunk for @escaping @callee_guaranteed () -> ();
  v37[3] = &block_descriptor_29_5;
  uint64_t v26 = _Block_copy(v37);
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_62();
  id v28 = v6;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_5_1();
  _s10Foundation4UUIDVACSHAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAEB8]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_32_6();
  OUTLINED_FUNCTION_5_86();
  _Block_release(v26);

  uint64_t v30 = OUTLINED_FUNCTION_21_3();
  v31(v30);
  OUTLINED_FUNCTION_36_31();
  v35(v32, v33, v34);
  swift_release();
  OUTLINED_FUNCTION_28();
}

void specialized closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    specialized MostActiveParticipantsController.updateActiveParticipantsEMA()();
    specialized MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(0);
  }
}

uint64_t specialized MostActiveParticipantsController.boostParticipantEMAToMax(_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_50();
  __n128 v6 = (uint64_t *)(v1 + *(void *)(v5 + 128));
  OUTLINED_FUNCTION_2();
  uint64_t v7 = *v6;
  uint64_t v29 = a1;
  swift_bridgeObjectRetain();
  unint64_t v8 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for specialized closure #1 in MostActiveParticipantsController.boostParticipantEMAToMax(_:), (uint64_t)v28, v7);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    OUTLINED_FUNCTION_4();
    unint64_t v8 = v18;
    MEMORY[0x1F4188790](v19);
    OUTLINED_FUNCTION_24_55();
    OUTLINED_FUNCTION_0();
    uint64_t v20 = OUTLINED_FUNCTION_42_27();
    v21(v20);
    if (one-time initialization token for shared == -1)
    {
LABEL_10:
      OUTLINED_FUNCTION_50();
      (*(void (**)(void))(v22 + 408))();
      OUTLINED_FUNCTION_50();
      float v24 = (*(float (**)(void))(v23 + 424))();
      OUTLINED_FUNCTION_5_116(v24, 0.01);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v25 = *(void *)(*v6 + 16);
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
      uint64_t v26 = *v6;
      *(void *)(v26 + 16) = v25 + 1;
      outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails(v10, v26+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v25, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      return swift_endAccess();
    }
LABEL_16:
    swift_once();
    goto LABEL_10;
  }
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v8 < *(void *)(*v6 + 16))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
    unint64_t v3 = *(void *)(*(void *)(v11 - 8) + 72) * v8;
    MEMORY[0x1F4188790](v11);
    OUTLINED_FUNCTION_24_55();
    OUTLINED_FUNCTION_0();
    uint64_t v12 = OUTLINED_FUNCTION_42_27();
    v13(v12);
    if (one-time initialization token for shared == -1) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
  __break(1u);
LABEL_14:
  swift_once();
LABEL_5:
  OUTLINED_FUNCTION_50();
  float v15 = (*(float (**)(void))(v14 + 424))();
  OUTLINED_FUNCTION_5_116(v15, 0.01);
  uint64_t v16 = *v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *__n128 v6 = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v16 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *__n128 v6 = v16;
  }
  if (v8 >= *(void *)(v16 + 16))
  {
    __break(1u);
    goto LABEL_16;
  }
  outlined assign with take of MostActiveParticipantsController<UUID>.ActivityDetails(v10, v16 + v2 + v3, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  return swift_endAccess();
}

void specialized MostActiveParticipantsController.updateActiveParticipantsEMA()()
{
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_50();
  uint64_t v4 = *(void **)(v0 + *(void *)(v3 + 152));
  void *v1 = v4;
  OUTLINED_FUNCTION_19();
  v5();
  id v6 = v4;
  LOBYTE(v4) = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_3_8();
  v7();
  if (v4)
  {
    OUTLINED_FUNCTION_50();
    uint64_t v9 = (uint64_t *)(v0 + *(void *)(v8 + 128));
    OUTLINED_FUNCTION_2();
    UIImage_optional v73 = v9;
    uint64_t v10 = *v9;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails)?);
    uint64_t v12 = OUTLINED_FUNCTION_8(v11);
    MEMORY[0x1F4188790](v12);
    uint64_t v75 = v13;
    unint64_t v74 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v14 = (void **)((char *)&v69 - v74);
    unint64_t v15 = *(void *)(v10 + 16);
    uint64_t v76 = v10;
    swift_bridgeObjectRetain();
    uint64_t v72 = (uint64_t *)(v0 + 32);
    uint64_t v16 = OUTLINED_FUNCTION_2();
    unint64_t v17 = 0;
    id v69 = v88;
    int v84 = v14;
    uint64_t v70 = v0;
    unint64_t v71 = v15;
    while (1)
    {
      MEMORY[0x1F4188790](v16);
      unint64_t v18 = (unint64_t *)((char *)&v69 - v74);
      if (v17 == v15)
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails));
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v19);
        unint64_t v20 = v15;
      }
      else
      {
        if (v17 >= *(void *)(v76 + 16)) {
          goto LABEL_22;
        }
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        OUTLINED_FUNCTION_1(v21);
        unint64_t v20 = v17 + 1;
        uint64_t v24 = v76
            + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))
            + *(void *)(v23 + 72) * v17;
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails));
        OUTLINED_FUNCTION_0();
        MEMORY[0x1F4188790](v26);
        OUTLINED_FUNCTION_2_3();
        uint64_t v29 = v28 + *(int *)(v27 + 48);
        outlined init with copy of Conversation?(v24, v29, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        uint64_t v30 = (uint64_t)v18 + *(int *)(v25 + 48);
        *unint64_t v18 = v17;
        outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails(v29, v30, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v25);
        uint64_t v14 = v84;
      }
      outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v18, (uint64_t)v14, &demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails)?);
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails));
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v31) == 1) {
        goto LABEL_20;
      }
      unint64_t v85 = v20;
      uint64_t v32 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t v86 = &v69;
      OUTLINED_FUNCTION_4();
      uint64_t v34 = v33;
      uint64_t v36 = *(void *)(v35 + 64);
      MEMORY[0x1F4188790](v37);
      unint64_t v38 = (v36 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v39 = (char *)&v69 - v38;
      unint64_t v40 = *v14;
      outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v14 + *(int *)(v31 + 48), (uint64_t)&v69 - v38, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t v41 = swift_allocBox();
      uint64_t v43 = v42;
      outlined init with copy of Conversation?((uint64_t)&v69 - v38, v42, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t v44 = OUTLINED_FUNCTION_11_0();
      uint64_t v45 = v32[10];
      float v46 = *(float *)(v43 + v45) + 1.0;
      float v47 = *(unsigned char *)(v43 + v32[11]) ? 1.0 : 0.0;
      float v48 = (float)(v47 * (float)(2.0 / (float)(v46 + 1.0)))
          + (float)(*(float *)(v43 + v32[9]) * (float)(1.0 - (float)(2.0 / (float)(v46 + 1.0))));
      *(float *)(v43 + v45) = v46;
      *(float *)(v43 + v32[9]) = v48;
      MEMORY[0x1F4188790](v44);
      outlined init with copy of Conversation?(v43, (uint64_t)&v69 - v38, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      int v49 = v73;
      swift_beginAccess();
      uint64_t v50 = *v49;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *int v49 = v50;
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v40 & 0x8000000000000000) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v50 = specialized _ArrayBuffer._consumeAndCreateNew()();
        *UIImage_optional v73 = v50;
        if ((v40 & 0x8000000000000000) != 0)
        {
LABEL_19:
          __break(1u);
LABEL_20:
          swift_bridgeObjectRelease();
          return;
        }
      }
      if (v40 >= *(void *)(v50 + 16)) {
        break;
      }
      outlined assign with take of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)&v69 - v38, v50+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v40, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      swift_endAccess();
      uint64_t v52 = *v72;
      if (*v72)
      {
        uint64_t v53 = *(void *)(v70 + 40);
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        swift_retain();
        uint64_t v82 = static OS_dispatch_queue.main.getter();
        uint64_t v54 = swift_allocObject();
        *(void *)(v54 + 16) = v52;
        *(void *)(v54 + 24) = v53;
        *(void *)(v54 + 32) = v41;
        uint64_t v83 = v41;
        *(float *)(v54 + 40) = v48;
        v88[2] = partial apply for specialized closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA();
        v88[3] = v54;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        v88[0] = thunk for @escaping @callee_guaranteed () -> ();
        v88[1] = &block_descriptor_41_0;
        uint64_t v79 = _Block_copy(aBlock);
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v52);
        swift_retain();
        swift_release();
        uint64_t v80 = type metadata accessor for DispatchQoS();
        uint64_t v81 = &v69;
        OUTLINED_FUNCTION_4();
        MEMORY[0x1F4188790](v55);
        OUTLINED_FUNCTION_21();
        uint64_t v78 = v39;
        uint64_t v58 = v57 - v56;
        static DispatchQoS.unspecified.getter();
        type metadata accessor for DispatchWorkItemFlags();
        uint64_t v77 = &v69;
        OUTLINED_FUNCTION_4();
        MEMORY[0x1F4188790](v59);
        OUTLINED_FUNCTION_21();
        uint64_t v62 = v61 - v60;
        aBlock[0] = MEMORY[0x1E4FBC860];
        _s10Foundation4UUIDVACSHAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAEB8]);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v63 = v79;
        uint64_t v64 = (void *)v82;
        MEMORY[0x1C8773BA0](0, v58, v62, v79);
        _Block_release(v63);

        _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v52, v53);
        OUTLINED_FUNCTION_29_4();
        v66(v65);
        OUTLINED_FUNCTION_3_8();
        v68(v67);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v78, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        swift_release();
        OUTLINED_FUNCTION_52_0();
        OUTLINED_FUNCTION_52_0();
      }
      else
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v39, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        swift_release();
      }
      uint64_t v14 = v84;
      unint64_t v15 = v71;
      unint64_t v17 = v85;
      OUTLINED_FUNCTION_52_0();
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
}

void specialized MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(uint64_t a1)
{
  uint64_t v6 = v1;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_13_30();
  uint64_t v10 = *(void **)(v1 + *(void *)(v9 + 152));
  *uint64_t v2 = v10;
  OUTLINED_FUNCTION_19();
  v11();
  id v12 = v10;
  uint64_t v13 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_50_1();
  v14();
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_13_30();
  uint64_t v13 = v1 + *(void *)(v15 + 128);
  OUTLINED_FUNCTION_11_0();
  aBlock[0] = *(void *)v13;
  swift_bridgeObjectRetain_n();
  specialized MutableCollection<>.sort(by:)(aBlock);
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)specialized MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(aBlock[0]);
  swift_release();
  if ((a1 & 1) == 0)
  {
    *(void *)uint64_t v13 = v2;
    goto LABEL_9;
  }
  a1 = type metadata accessor for Date();
  float v47 = &v43;
  OUTLINED_FUNCTION_4();
  uint64_t v17 = v16;
  uint64_t v3 = *(void *)(v18 + 64);
  MEMORY[0x1F4188790](v19);
  Date.init()();
  OUTLINED_FUNCTION_13_30();
  uint64_t v21 = v1 + *(void *)(v20 + 144);
  uint64_t v22 = OUTLINED_FUNCTION_2();
  uint64_t v4 = &v43;
  MEMORY[0x1F4188790](v22);
  uint64_t v45 = v21;
  OUTLINED_FUNCTION_2_1();
  v23();
  Date.timeIntervalSince(_:)();
  double v5 = v24;
  float v46 = (uint64_t *)v17;
  uint64_t v25 = *(void (**)(void))(v17 + 8);
  OUTLINED_FUNCTION_50_1();
  v25();
  OUTLINED_FUNCTION_50_1();
  v25();
  if (one-time initialization token for shared != -1) {
    goto LABEL_12;
  }
LABEL_4:
  OUTLINED_FUNCTION_50();
  if ((*(double (**)(void))(v26 + 456))() >= v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v27 = swift_bridgeObjectRetain();
  BOOL v28 = specialized MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:)(v27, (uint64_t)v2);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v13 = v2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();
  uint64_t v29 = *(void *)(v6 + 16);
  if (v29)
  {
    if (v28)
    {
      MEMORY[0x1F4188790](*(void *)(v6 + 24));
      uint64_t v30 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v32 = v31;
      swift_retain();
      Date.init()();
      uint64_t v33 = v45;
      swift_beginAccess();
      ((void (*)(uint64_t, char *, uint64_t))v46[5])(v33, v30, a1);
      swift_endAccess();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      float v47 = (uint64_t *)static OS_dispatch_queue.main.getter();
      uint64_t v34 = (void *)swift_allocObject();
      void v34[2] = v29;
      v34[3] = v32;
      uint64_t v44 = v32;
      v34[4] = v6;
      aBlock[4] = (uint64_t)partial apply for specialized closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:);
      aBlock[5] = (uint64_t)v34;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      void aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = (uint64_t)&block_descriptor_35_4;
      uint64_t v35 = _Block_copy(aBlock);
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v29);
      swift_retain();
      swift_release();
      uint64_t v45 = type metadata accessor for DispatchQoS();
      float v46 = &v43;
      OUTLINED_FUNCTION_4();
      MEMORY[0x1F4188790](v36);
      OUTLINED_FUNCTION_5_1();
      static DispatchQoS.unspecified.getter();
      uint64_t v37 = type metadata accessor for DispatchWorkItemFlags();
      uint64_t v43 = (uint64_t)&v43;
      OUTLINED_FUNCTION_4();
      uint64_t v39 = v38;
      MEMORY[0x1F4188790](v40);
      OUTLINED_FUNCTION_118();
      aBlock[0] = MEMORY[0x1E4FBC860];
      _s10Foundation4UUIDVACSHAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAEB8]);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v41 = v47;
      MEMORY[0x1C8773BA0](0, v32, v4, v35);
      _Block_release(v35);

      _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v29, v44);
      (*(void (**)(uint64_t *, uint64_t))(v39 + 8))(v4, v37);
      OUTLINED_FUNCTION_3_8();
      v42();
      OUTLINED_FUNCTION_52_0();
    }
  }
}

void specialized MostActiveParticipantsController.markParticipantAsOffline(_:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_50();
  uint64_t v2 = *(void **)(v0 + *(void *)(v1 + 152));
  uint64_t v3 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_2_1();
  v9();
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  *(void *)(v11 + ((v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v0;
  v20[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:);
  v20[5] = v11;
  v20[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v20[2] = thunk for @escaping @callee_guaranteed () -> ();
  v20[3] = &block_descriptor_89_1;
  id v12 = _Block_copy(v20);
  v19[0] = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_62();
  id v14 = v2;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_5_1();
  v19[1] = MEMORY[0x1E4FBC860];
  _s10Foundation4UUIDVACSHAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAEB8]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_32_6();
  OUTLINED_FUNCTION_5_86();
  _Block_release(v12);

  uint64_t v16 = OUTLINED_FUNCTION_21_3();
  v17(v16);
  OUTLINED_FUNCTION_36_31();
  v18();
  swift_release();
  OUTLINED_FUNCTION_28();
}

uint64_t specialized closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  uint64_t v5 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, a1, v8);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  float v9 = (*(float (**)(void))(*(void *)static Defaults.shared + 408))();
  *(_DWORD *)&v7[v4[9]] = 0;
  *(float *)&v7[v4[10]] = v9;
  v7[v4[11]] = 0;
  *(_DWORD *)&v7[v4[12]] = 1065353216;
  *(_DWORD *)&v7[v4[13]] = 0;
  *(_DWORD *)&v7[v4[14]] = 0;
  unint64_t v10 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 128));
  uint64_t v11 = swift_beginAccess();
  uint64_t v12 = *v10;
  MEMORY[0x1F4188790](v11);
  *(&v20 - 2) = a1;
  swift_bridgeObjectRetain();
  unint64_t v13 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for specialized closure #1 in closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:), (uint64_t)(&v20 - 4), v12);
  char v15 = v14;
  swift_bridgeObjectRelease();
  if (v15)
  {
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v18 = *(void *)(*v10 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
    uint64_t v19 = *v10;
    *(void *)(v19 + 16) = v18 + 1;
    outlined init with copy of Conversation?((uint64_t)v7, v19+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v18, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    goto LABEL_9;
  }
  swift_beginAccess();
  uint64_t v16 = *v10;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v10 = v16;
  if (result)
  {
    if ((v13 & 0x8000000000000000) == 0) {
      goto LABEL_6;
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
  uint64_t v16 = result;
  *unint64_t v10 = result;
  if ((v13 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
LABEL_6:
  if (v13 < *(void *)(v16 + 16))
  {
    outlined assign with copy of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v7, v16+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13);
LABEL_9:
    swift_endAccess();
    return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t specialized closure #1 in closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t specialized closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA()(void (*a1)(char *, float, float, float), float a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  uint64_t v5 = swift_projectBox();
  swift_beginAccess();
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, v5, v6, v8);
  a1(v10, a2, *(float *)(v5 + *(int *)(v4 + 52)), *(float *)(v5 + *(int *)(v4 + 56)));
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t specialized MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 > 2)
  {
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t active = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit32MostActiveParticipantsControllerC15ActivityDetailsVy10Foundation4UUIDV_GGG_APs5NeverOTg506_sSi15f5Kit32hijk3C15lm38Vyx_GAFIgynr_Si6offset_AF7elementtAFs5p140OIegnrzr_SHRzlTR10Foundation4UUIDV_TG504_s15a5Kit32cdef79C22applyProminenceWeights33_96A8A9BA1FE613479F021FF747BF6BADLL06sortedE0SayAC15gH47U54_GGAJ_tFAISi_AItXEfU0_10Foundation4UUIDV_Tg5Tf3nnnpf_nTf1cn_n(v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t active = MEMORY[0x1E4FBC860];
    if (v2)
    {
      uint64_t v19 = MEMORY[0x1E4FBC860];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t v5 = *(void *)(v4 - 8);
      unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v18 = v4;
      uint64_t v6 = a1 + v17;
      uint64_t v7 = *(void *)(v5 + 64);
      uint64_t v8 = *(void *)(v5 + 72);
      do
      {
        MEMORY[0x1F4188790](v4);
        uint64_t v9 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x1F4188790](v10);
        uint64_t v12 = (char *)&v16 - v11;
        outlined init with copy of Conversation?(v6, (uint64_t)&v16 - v11, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        outlined init with copy of Conversation?((uint64_t)v12, (uint64_t)v9, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        if (one-time initialization token for shared != -1) {
          swift_once();
        }
        *(float *)&v9[*(int *)(v18 + 48)] = (*(float (**)(void))(*(void *)static Defaults.shared + 448))();
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        uint64_t active = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t active = v19;
        }
        unint64_t v13 = *(void *)(active + 16);
        if (v13 >= *(void *)(active + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t active = v19;
        }
        *(void *)(active + 16) = v13 + 1;
        uint64_t v4 = outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v9, active + v17 + v13 * v8, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        v6 += v8;
        --v2;
      }
      while (v2);
    }
  }
  return active;
}

BOOL specialized MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:)(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (void *)((char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)((char *)v2 + *(void *)(*v2 + 152));
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, unint64_t, __n128))(v6 + 104))(v9, *MEMORY[0x1E4FBCBE8], v5, v7);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, unint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) == 0) {
    goto LABEL_33;
  }
  uint64_t v12 = (void *)((char *)v2 + *(void *)(*v2 + 120));
  swift_beginAccess();
  uint64_t v13 = specialized Collection.prefix(_:)(*v12, a1);
  uint64_t v65 = v16;
  uint64_t v17 = (v15 >> 1) - v14;
  if (__OFSUB__(v15 >> 1, v14))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v18 = v13;
  unint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  if (v17)
  {
    uint64_t v19 = v14;
    unint64_t v66 = v15 >> 1;
    uint64_t v67 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v5 = v17 & ~(v17 >> 63);
    swift_bridgeObjectRetain();
    unint64_t v2 = &v67;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v5, 0);
    if (v17 < 0)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v60[1] = v18;
    uint64_t v61 = v12;
    uint64_t v62 = a2;
    uint64_t v20 = type metadata accessor for UUID();
    uint64_t v21 = v20;
    uint64_t v22 = *(void *)(v20 - 8);
    uint64_t v23 = *(void *)(v22 + 64);
    unint64_t v5 = v22 + 16;
    uint64_t v63 = v22 + 32;
    uint64_t v64 = v20;
    while (1)
    {
      MEMORY[0x1F4188790](v20);
      if (v19 >= v24) {
        break;
      }
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      unint64_t v2 = v60;
      MEMORY[0x1F4188790](v25 - 8);
      uint64_t v27 = (char *)v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
      outlined init with copy of Conversation?(v28, (uint64_t)v27, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      (*(void (**)(char *, char *, uint64_t))v5)((char *)v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v21);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      a1 = (uint64_t)v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        unint64_t v2 = &v67;
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16) + 1, 1);
        a1 = (uint64_t)v67;
      }
      unint64_t v30 = *(void *)(a1 + 16);
      unint64_t v29 = *(void *)(a1 + 24);
      if (v30 >= v29 >> 1)
      {
        unint64_t v2 = &v67;
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
        a1 = (uint64_t)v67;
      }
      *(void *)(a1 + 16) = v30 + 1;
      uint64_t v21 = v64;
      uint64_t v20 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v22 + 32))(a1+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v30, (char *)v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v64);
      uint64_t v67 = (void *)a1;
      if (v66 == ++v19)
      {
        swift_unknownObjectRelease();
        uint64_t v12 = v61;
        a2 = v62;
        unint64_t v2 = (void *)MEMORY[0x1E4FBC860];
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  a1 = MEMORY[0x1E4FBC860];
LABEL_14:
  uint64_t v31 = specialized Collection.prefix(_:)(*v12, a2);
  uint64_t v65 = v34;
  uint64_t v35 = (v33 >> 1) - v32;
  if (__OFSUB__(v33 >> 1, v32)) {
    goto LABEL_35;
  }
  uint64_t v36 = v31;
  if (v35)
  {
    uint64_t v37 = v32;
    unint64_t v66 = v33 >> 1;
    uint64_t v67 = v2;
    unint64_t v5 = v35 & ~(v35 >> 63);
    swift_bridgeObjectRetain();
    unint64_t v2 = &v67;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v5, 0);
    if (v35 < 0)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v61 = (uint64_t *)v36;
    uint64_t v38 = type metadata accessor for UUID();
    uint64_t v39 = v38;
    uint64_t v40 = *(void *)(v38 - 8);
    uint64_t v41 = *(void *)(v40 + 64);
    uint64_t v63 = v38;
    uint64_t v64 = v41;
    uint64_t v62 = v40 + 32;
    while (1)
    {
      MEMORY[0x1F4188790](v38);
      uint64_t v43 = (char *)v60 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v37 >= v44) {
        break;
      }
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      MEMORY[0x1F4188790](v45 - 8);
      float v47 = (char *)v60 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
      outlined init with copy of Conversation?(v48, (uint64_t)v47, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v43, v47, v39);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v47, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      unint64_t v2 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2[2] + 1, 1);
        unint64_t v2 = v67;
      }
      unint64_t v5 = v2[2];
      unint64_t v49 = v2[3];
      if (v5 >= v49 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v5 + 1, 1);
        unint64_t v2 = v67;
      }
      v2[2] = v5 + 1;
      uint64_t v39 = v63;
      uint64_t v38 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v40 + 32))((unint64_t)v2+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v5, v43, v63);
      uint64_t v67 = v2;
      if (v66 == ++v37) {
        goto LABEL_26;
      }
    }
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
LABEL_26:
  swift_unknownObjectRelease();
  specialized static Array<A>.== infix(_:_:)();
  LOBYTE(v5) = v50;
  if ((v50 & 1) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_29:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_1C37696D0;
      uint64_t v67 = (void *)a1;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UUID]);
      uint64_t v52 = String.init<A>(reflecting:)();
      uint64_t v54 = v53;
      uint64_t v55 = MEMORY[0x1E4FBB1A0];
      *(void *)(v51 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v56 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v51 + 64) = v56;
      *(void *)(v51 + 32) = v52;
      *(void *)(v51 + 40) = v54;
      uint64_t v67 = v2;
      uint64_t v57 = String.init<A>(reflecting:)();
      *(void *)(v51 + 96) = v55;
      *(void *)(v51 + 104) = v56;
      *(void *)(v51 + 72) = v57;
      *(void *)(v51 + 80) = v58;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      goto LABEL_30;
    }
LABEL_38:
    swift_once();
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
LABEL_30:
  swift_bridgeObjectRelease();
  return (v5 & 1) == 0;
}

uint64_t specialized closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(uint64_t (*a1)(BOOL))
{
  BOOL v2 = specialized MostActiveParticipantsController.mostActiveParticipantProminenceChangeReason.getter();
  return a1(v2);
}

uint64_t default argument 2 of OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = *MEMORY[0x1E4FBCAA0];
  type metadata accessor for DispatchTimeInterval();
  OUTLINED_FUNCTION_0();
  unint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 104);
  return v5(a1, v2, v3);
}

uint64_t specialized closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary()()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    specialized MostActiveParticipantsController.updateActiveParticipantsEMA()();
    if (specialized MostActiveParticipantsController.activityDetailsAboveThreshold()()) {
      specialized MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(1);
    }
    return swift_release();
  }
  return result;
}

uint64_t specialized MostActiveParticipantsController.activityDetailsAboveThreshold()()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](v1);
  unint64_t v5 = (void *)((char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v0 + *(void *)(*(void *)v0 + 152));
  *unint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t, __n128))(v2 + 104))(v5, *MEMORY[0x1E4FBCBE8], v1, v3);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v5, v1);
  if (v6)
  {
    uint64_t v9 = v0 + *(void *)(*(void *)v0 + 112);
    swift_beginAccess();
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    MEMORY[0x1F4188790](v10 - 8);
    uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    outlined init with copy of Conversation?(v9, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v13 = type metadata accessor for UUID();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails?);
    MEMORY[0x1F4188790](v14 - 8);
    uint64_t v32 = (uint64_t)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v16 = (uint64_t *)(v0 + *(void *)(*(void *)v0 + 128));
    swift_beginAccess();
    uint64_t v17 = *v16;
    uint64_t v18 = *(void *)(v17 + 16);
    v31[1] = v17;
    if (v18)
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = v17 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
      uint64_t v22 = *(void *)(v20 + 72);
      uint64_t v23 = *(void *)(v20 + 64);
      uint64_t v24 = swift_bridgeObjectRetain();
      while (1)
      {
        MEMORY[0x1F4188790](v24);
        outlined init with copy of Conversation?(v21, (uint64_t)v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        float v25 = *(float *)((char *)v31 + *(int *)(v19 + 36) - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
        if (one-time initialization token for shared != -1) {
          swift_once();
        }
        if ((*(float (**)(void))(*(void *)static Defaults.shared + 464))() < v25) {
          break;
        }
        uint64_t v24 = outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        v21 += v22;
        if (!--v18) {
          goto LABEL_10;
        }
      }
      uint64_t v27 = v32;
      outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v32, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      __swift_storeEnumTagSinglePayload(v27, 0, 1, v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_10:
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t v27 = v32;
      __swift_storeEnumTagSinglePayload(v32, 1, 1, v26);
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    int v29 = __swift_getEnumTagSinglePayload(v27, 1, v28);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v27, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails?);
    return v29 != 1 || EnumTagSinglePayload != 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t default argument 0 of OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t default argument 1 of OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t one-time initialization function for conversationStateManager()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.conversationStateManager);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.conversationStateManager);
  return Logger.init(subsystem:category:)();
}

uint64_t ConversationStateManager.presentationStateProvider.getter()
{
  return OUTLINED_FUNCTION_17_5();
}

uint64_t ConversationStateManager.localParticipantStateProvider.getter()
{
  return OUTLINED_FUNCTION_17_5();
}

uint64_t ConversationStateManager.remoteParticipantsStateProvider.getter()
{
  return OUTLINED_FUNCTION_17_5();
}

uint64_t ConversationStateManager.captioningStateManager.getter()
{
  return OUTLINED_FUNCTION_17_5();
}

void ConversationStateManager.__allocating_init(call:callCenter:defaults:)()
{
  id v1 = objc_allocWithZone(v0);
  OUTLINED_FUNCTION_102();
  ConversationStateManager.init(call:callCenter:defaults:)();
}

void ConversationStateManager.init(call:callCenter:defaults:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v219 = v1;
  uint64_t v210 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v220 = (uint64_t *)type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  v218 = v9;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_2_3();
  v221 = v11;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_cancellables] = MEMORY[0x1E4FBC870];
  uint64_t v12 = type metadata accessor for ConversationController(0);
  uint64_t v13 = self;
  uint64_t v14 = v0;
  uint64_t v216 = v8;
  swift_unknownObjectRetain();
  id v15 = objc_msgSend(v13, sel_sharedInstance);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)static PlaceholderCallCenter.shared;
  uint64_t v17 = (objc_class *)type metadata accessor for CallCenter();
  id v18 = objc_allocWithZone(v17);
  v229 = v17;
  v230 = (uint64_t (*)())&protocol witness table for CallCenter;
  *(void *)&long long v227 = CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v15, v16, 1, 1);
  uint64_t v244 = 0;
  memset(v243, 0, sizeof(v243));
  v241 = &type metadata for DefaultParticipantMediaProviderCreator;
  v242 = &protocol witness table for DefaultParticipantMediaProviderCreator;
  uint64_t v19 = OUTLINED_FUNCTION_20();
  uint64_t v20 = v19 + 16;
  *(void *)&long long v239 = v19;
  uint64_t v21 = swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantMediaProviderCreator(v21, v20);
  v237 = &type metadata for DefaultParticipantCaptionsProviderCreator;
  v238 = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
  uint64_t v22 = OUTLINED_FUNCTION_26();
  uint64_t v23 = v22 + 16;
  uint64_t v234 = v22;
  v233[1] = 0;
  uint64_t v24 = swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantCaptionsProviderCreator(v24, v23);
  id v25 = objc_msgSend(self, sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  uint64_t v26 = (void *)swift_allocObject();
  v233[3] = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  v233[4] = &protocol witness table for TUIDSLookupManager;
  v233[0] = v25;
  uint64_t v27 = type metadata accessor for UUID();
  _s10Foundation4UUIDVACSHAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BBA8]);
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v222 = v27;
  OUTLINED_FUNCTION_31_12();
  v26[2] = Dictionary.init(dictionaryLiteral:)();
  v26[3] = Dictionary.init(dictionaryLiteral:)();
  v26[5] = 0;
  swift_unknownObjectWeakInit();
  v26[6] = v28;
  outlined init with copy of IDSLookupManager((uint64_t)v233, (uint64_t)(v26 + 7));
  id v29 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v29, sel_addObserver_selector_name_object_, v26, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E4FADEC0], v233[0]);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v233);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v30 = static Defaults.shared;
  uint64_t v31 = v216;
  uint64_t v32 = swift_getObjectType();
  swift_retain();
  v213 = (uint64_t *)v32;
  specialized ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(v216, (uint64_t)&v227, (uint64_t)&v239, (uint64_t)&v234, 1, (uint64_t)v243, 1, (uint64_t)v26, v30, (uint64_t)&protocol witness table for Defaults, v12, v32, v6, v199, v200, v201, v202, v203, (uint64_t)v204,
    v205,
    (uint64_t)v206,
    (uint64_t)v207,
    (objc_class *)v208,
    *((uint64_t *)&v208 + 1),
    v209);
  *(void *)&v14[OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_conversationController] = v33;
  *(void *)&v14[OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_callCenter] = v4;
  uint64_t v34 = (uint64_t)v14;
  id v35 = v33;
  id v36 = v4;
  id v37 = objc_msgSend(v36, sel_neighborhoodActivityConduit);
  *(void *)(v34 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_conduit) = v37;
  id v206 = v37;
  id v212 = v36;
  id v38 = objc_msgSend(v36, sel_videoDeviceController);
  v217 = (char *)OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_localVideoController;
  *(void *)(v34 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_localVideoController) = v38;
  uint64_t v39 = (void *)(v34 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_defaults);
  uint64_t v40 = v219;
  *uint64_t v39 = v210;
  v39[1] = v40;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  uint64_t v41 = self;
  swift_unknownObjectRetain();
  id v42 = objc_msgSend(v41, sel_mainRunLoop);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  v214 = (void (**)(uint64_t *))v6;
  uint64_t v44 = OUTLINED_FUNCTION_8(v43);
  MEMORY[0x1F4188790](v44);
  OUTLINED_FUNCTION_64();
  uint64_t v45 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v28, 1, 1, v45);
  uint64_t v46 = static NSTimer.publish(every:tolerance:on:in:options:)();

  uint64_t v47 = OUTLINED_FUNCTION_102();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v47, v48);
  v207 = (char *)v34;
  *(void *)(v34 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_callDurationStringTimer) = v46;
  closure #1 in ConversationStateManager.init(call:callCenter:defaults:)(v31, (uint64_t (**)(void, void))v6, (uint64_t)&v227);
  long long v208 = v227;
  HIDWORD(v209) = v228;
  id v215 = v35;
  ConversationController.lookupActiveConversation()();
  outlined init with copy of Conversation?((uint64_t)v243, (uint64_t)&v227, &demangling cache variable for type metadata for Conversation?);
  if (v229)
  {
    uint64_t v49 = OUTLINED_FUNCTION_21_55();
    uint64_t v51 = v50(v49);
    uint64_t v52 = specialized Set.count.getter(v51);
    if (v52)
    {
      uint64_t v53 = v52;
      v233[0] = MEMORY[0x1E4FBC860];
      specialized ContiguousArray.reserveCapacity(_:)();
      if ((v51 & 0xC000000000000001) != 0)
      {
        uint64_t v54 = __CocoaSet.startIndex.getter();
        char v56 = 1;
      }
      else
      {
        uint64_t v54 = specialized _NativeSet.startIndex.getter(v51);
        char v56 = v57 & 1;
      }
      uint64_t v234 = v54;
      uint64_t v235 = v55;
      char v236 = v56;
      if (v53 < 0)
      {
        __break(1u);
        goto LABEL_75;
      }
      uint64_t v58 = v51 & 0xFFFFFFFFFFFFFF8;
      if (v51 < 0) {
        uint64_t v58 = v51;
      }
      uint64_t v219 = v58;
      do
      {
        uint64_t v59 = v234;
        uint64_t v60 = v235;
        char v61 = v236;
        uint64_t v62 = OUTLINED_FUNCTION_46_24();
        specialized Set.subscript.getter(v62, v63, v64, v65);
        uint64_t v67 = v66;
        objc_msgSend(v66, sel_handle);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if ((v51 & 0xC000000000000001) != 0)
        {
          if ((v61 & 1) == 0) {
            goto LABEL_76;
          }
          if (__CocoaSet.Index.handleBitPattern.getter()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>.Index);
          uint64_t v77 = (void (*)(uint64_t))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          uint64_t v78 = OUTLINED_FUNCTION_51_21();
          v77(v78);
        }
        else
        {
          uint64_t v68 = OUTLINED_FUNCTION_46_24();
          uint64_t v72 = specialized _NativeSet.index(after:)(v68, v69, v70, v71);
          uint64_t v74 = v73;
          char v76 = v75;
          outlined consume of Set<TUHandle>.Index._Variant(v59, v60, v61);
          uint64_t v234 = v72;
          uint64_t v235 = v74;
          char v236 = v76 & 1;
        }
        --v53;
      }
      while (v53);
      outlined consume of Set<TUHandle>.Index._Variant(v234, v235, v236);
      swift_bridgeObjectRelease();
      uint64_t v6 = (uint64_t)v214;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v227);
    swift_bridgeObjectRelease();
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v227, &demangling cache variable for type metadata for Conversation?);
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNContact?);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  uint64_t v79 = Dictionary.init(dictionaryLiteral:)();
  id v80 = objc_msgSend(v212, sel_callWithStatus_, 2);
  uint64_t v219 = v79;
  if (v80)
  {
    uint64_t v81 = v80;
    uint64_t v82 = v216;
    uint64_t v83 = (uint64_t)v213;
    uint64_t v84 = OUTLINED_FUNCTION_23_59();
    uint64_t v86 = v85(v84);
    uint64_t v201 = v87;
    uint64_t v202 = v86;
  }
  else
  {
    uint64_t v201 = 0;
    uint64_t v202 = 0;
    uint64_t v82 = v216;
    uint64_t v83 = (uint64_t)v213;
  }
  uint64_t v88 = OUTLINED_FUNCTION_23_59();
  if (v89(v88)) {
    uint64_t v90 = 1;
  }
  else {
    uint64_t v90 = 2;
  }
  Call.displayStatus.getter(v83, v6, (uint64_t)&v234);
  LOWORD(v233[0]) = v234;
  HIDWORD(v233[0]) = HIDWORD(v234);
  uint64_t v91 = OUTLINED_FUNCTION_23_59();
  char v93 = v92(v91);
  uint64_t v94 = OUTLINED_FUNCTION_23_59();
  LODWORD(v205) = v95(v94);
  long long v239 = v208;
  char v240 = BYTE4(v209);
  *(void *)&long long v227 = v82;
  uint64_t v96 = *(void *)(v6 + 8);
  uint64_t v97 = *(uint64_t (**)(uint64_t, uint64_t))(v96 + 16);
  outlined copy of CallDisplayInfo((id)v208, *((id *)&v208 + 1), SBYTE4(v209));
  uint64_t v98 = (void *)v97(v83, v96);
  uint64_t v203 = v99;
  v204 = v98;
  outlined init with copy of Conversation?((uint64_t)v243, (uint64_t)&v227, &demangling cache variable for type metadata for Conversation?);
  uint64_t v100 = v229;
  if (v229)
  {
    int v101 = v230;
    __swift_project_boxed_opaque_existential_1(&v227, (uint64_t)v229);
    float v102 = (void *)(*((uint64_t (**)(objc_class *, uint64_t (*)()))v101 + 6))(v100, v101);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v227);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v227, &demangling cache variable for type metadata for Conversation?);
    float v102 = 0;
  }
  char v103 = ConversationController.isOneToOneModeEnabled.getter();
  char v104 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 392))(v213, v6);
  outlined init with copy of Conversation?((uint64_t)v243, (uint64_t)&v227, &demangling cache variable for type metadata for Conversation?);
  v105 = v229;
  char v106 = v93;
  uint64_t v107 = v90;
  if (v229)
  {
    uint64_t v108 = v230;
    __swift_project_boxed_opaque_existential_1(&v227, (uint64_t)v229);
    (*((void (**)(objc_class *, uint64_t (*)()))v108 + 30))(v105, v108);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v227);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v227, &demangling cache variable for type metadata for Conversation?);
  }
  v214[19](v213);
  id v109 = v215;
  ConversationController.shouldShowRTTUpgrade.getter();
  type metadata accessor for ConversationPresentationStateProvider();
  swift_allocObject();
  uint64_t v110 = ConversationPresentationStateProvider.init(avMode:callDisplayStatus:isSendingVideo:isMuted:callDisplayInfo:callDurationString:image:isOneToOneModeEnabled:isEmergency:heldCallDisplayName:contactsByHandle:ignoreLetMeInRequests:isRTTCall:shouldShowRTTUpgrade:)(v107, (uint64_t)v233, v106 & 1, v205 & 1, (uint64_t)&v239, (uint64_t)v204, v203, v102, v103 & 1, v104 & 1);
  v111 = &unk_1EA355000;
  v112 = v207;
  *(void *)&v207[OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_presentationStateProvider] = v110;
  uint64_t v113 = (uint64_t)v109 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_2();
  outlined init with copy of Participant(v113, (uint64_t)v221);
  TUVideoDeviceController.currentCameraEffectsState.getter((char *)&v227);
  LODWORD(v239) = v227;
  type metadata accessor for ConversationLocalParticipantStateProvider();
  swift_allocObject();
  v114 = &unk_1EA355000;
  *(void *)&v112[OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_localParticipantStateProvider] = ConversationLocalParticipantStateProvider.init(localParticipant:localParticipantCameraEffectsState:isMutedTalking:)((uint64_t)v221, (int *)&v239, 0);
  OUTLINED_FUNCTION_2();
  type metadata accessor for ConversationRemoteParticipantsStateProvider();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v115 = &unk_1EA355000;
  *(void *)&v112[OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_remoteParticipantsStateProvider] = ConversationRemoteParticipantsStateProvider.init(remoteParticipants:)();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  v116 = static ConversationCapabilities.shared;
  type metadata accessor for CaptioningStateManager();
  swift_allocObject();
  *(void *)&v112[OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_captioningStateManager] = CaptioningStateManager.init(capabilities:)(v116);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  unint64_t v117 = (*((unsigned __int8 *)v218 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v218 + 80);
  uint64_t v219 = v218[9];
  uint64_t v118 = swift_allocObject();
  *(_OWORD *)(v118 + 16) = xmmword_1C3769620;
  outlined init with copy of Participant(v113, v118 + v117);
  *(void *)&long long v227 = v118;
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  uint64_t v119 = v227;
  uint64_t v120 = *(void *)(v227 + 16);
  if (v120)
  {
    *(void *)&long long v227 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v120, 0);
    uint64_t v205 = v119;
    uint64_t v121 = v119 + v117;
    uint64_t v122 = v222;
    OUTLINED_FUNCTION_5_3();
    uint64_t v125 = v124;
    v218 = *(uint64_t **)(v126 + 64);
    v127 = (void (**)(char *, char *, uint64_t))(v124 + 16);
    v217 = (char *)(v124 + 32);
    do
    {
      MEMORY[0x1F4188790](v123);
      v129 = (char *)&v200 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0);
      v130 = v221;
      outlined init with copy of Participant(v121, (uint64_t)v221);
      (*v127)(v129, &v130[*((int *)v220 + 5)], v122);
      outlined destroy of Participant((uint64_t)v130);
      uint64_t v131 = v227;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v131 + 16) + 1, 1);
        uint64_t v131 = v227;
      }
      unint64_t v133 = *(void *)(v131 + 16);
      unint64_t v132 = *(void *)(v131 + 24);
      if (v133 >= v132 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v132 > 1, v133 + 1, 1);
        uint64_t v131 = v227;
      }
      *(void *)(v131 + 16) = v133 + 1;
      uint64_t v122 = v222;
      uint64_t v123 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v125 + 32))(v131+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(void *)(v125 + 72) * v133, v129, v222);
      *(void *)&long long v227 = v131;
      v121 += v219;
      --v120;
    }
    while (v120);
    swift_bridgeObjectRelease();
    v112 = v207;
    v111 = (void *)&unk_1EA355000;
    v114 = (void *)&unk_1EA355000;
    v115 = (void *)&unk_1EA355000;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v122 = v222;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>);
  swift_allocObject();
  specialized MostActiveParticipantsController.init(participantIdentifiers:configuration:)();
  *(void *)&v112[OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_mostActiveParticipantsController] = v134;

  v232.receiver = v112;
  v232.super_class = ObjectType;
  v135 = (char *)objc_msgSendSuper2(&v232, sel_init);
  uint64_t v136 = *(void *)&v135[v111[62]];
  OUTLINED_FUNCTION_11_0();
  *(void *)(v136 + 136) = &protocol witness table for ConversationStateManager;
  swift_unknownObjectWeakAssign();
  uint64_t v137 = *(void *)&v135[v114[63]];
  OUTLINED_FUNCTION_11_0();
  *(void *)(v137 + 48) = &protocol witness table for ConversationStateManager;
  swift_unknownObjectWeakAssign();
  uint64_t v138 = *(void *)&v135[v115[64]];
  OUTLINED_FUNCTION_11_0();
  *(void *)(v138 + 48) = &protocol witness table for ConversationStateManager;
  swift_unknownObjectWeakAssign();
  v139 = v135;
  swift_retain();
  CaptioningStateManager.captionsRecognizerStateManager.setter();
  swift_release();
  ConversationStateManager.registerForCallStateUpdates()();
  ConversationStateManager.registerConversationControllerCallbacks()();
  ConversationStateManager.registerForMostActiveParticipantControllerCallbacks()();
  ConversationController.lookupActiveConversation()();
  v140 = v214;
  if (!v241)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v239, &demangling cache variable for type metadata for Conversation?);
    v149 = v213;
    v150 = (void *)((uint64_t (*)(uint64_t *, void (**)(uint64_t *)))v140[20])(v213, v140);
    uint64_t v151 = (uint64_t)objc_msgSend(v150, sel_isTelephonyProvider);

    if (v151)
    {
      v220 = &v200;
      v221 = v139;
      OUTLINED_FUNCTION_5_3();
      uint64_t v219 = v152;
      uint64_t v154 = *(void *)(v153 + 64);
      MEMORY[0x1F4188790](v155);
      unint64_t v156 = (v154 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v158 = OUTLINED_FUNCTION_8(v157);
      MEMORY[0x1F4188790](v158);
      OUTLINED_FUNCTION_16_0();
      ((void (*)(uint64_t *, void (**)(uint64_t *)))v140[7])(v149, v140);
      if (__swift_getEnumTagSinglePayload(v151, 1, v122) != 1)
      {
        uint64_t v186 = v219;
        v213 = *(uint64_t **)(v219 + 32);
        v217 = (char *)&v200 - v156;
        ((void (*)(char *, uint64_t))v213)((char *)&v200 - v156, v151);
        v214 = (void (**)(uint64_t *))objc_msgSend(v212, sel_queue);
        uint64_t v187 = OUTLINED_FUNCTION_20();
        uint64_t v188 = swift_unknownObjectWeakInit();
        v218 = &v200;
        MEMORY[0x1F4188790](v188);
        v189 = (char *)&v200 - v156;
        OUTLINED_FUNCTION_2_1();
        v190();
        unint64_t v191 = (*(unsigned __int8 *)(v186 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v186 + 80);
        uint64_t v192 = swift_allocObject();
        uint64_t ObjectType = (objc_class *)v187;
        *(void *)(v192 + 16) = v187;
        ((void (*)(unint64_t, char *, uint64_t))v213)(v192 + v191, v189, v122);
        v230 = partial apply for closure #5 in ConversationStateManager.init(call:callCenter:defaults:);
        uint64_t v231 = v192;
        *(void *)&long long v227 = MEMORY[0x1E4F143A8];
        *((void *)&v227 + 1) = 1107296256;
        v228 = thunk for @escaping @callee_guaranteed () -> ();
        v229 = (objc_class *)&block_descriptor_112;
        v204 = _Block_copy(&v227);
        v207 = (char *)type metadata accessor for DispatchQoS();
        v213 = &v200;
        OUTLINED_FUNCTION_4();
        MEMORY[0x1F4188790](v193);
        OUTLINED_FUNCTION_118();
        swift_retain();
        static DispatchQoS.unspecified.getter();
        type metadata accessor for DispatchWorkItemFlags();
        uint64_t v205 = (uint64_t)&v200;
        OUTLINED_FUNCTION_4();
        MEMORY[0x1F4188790](v194);
        OUTLINED_FUNCTION_5_1();
        *(void *)&long long v239 = MEMORY[0x1E4FBC860];
        _s10Foundation4UUIDVACSHAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAEB8]);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        v195 = v204;
        v196 = v214;
        MEMORY[0x1C8773BA0](0, v122, v154, v204);

        _Block_release(v195);
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_34_39();

        OUTLINED_FUNCTION_3_8();
        v197();
        OUTLINED_FUNCTION_29_4();
        v198();
        (*(void (**)(char *, uint64_t))(v186 + 8))(v217, v222);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v243, &demangling cache variable for type metadata for Conversation?);
        swift_release();
        swift_release();
        goto LABEL_72;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v151, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v159 = ((uint64_t (*)(uint64_t *, void (**)(uint64_t *)))v140[21])(v149, v140);
      unint64_t v160 = specialized _copyCollectionToContiguousArray<A>(_:)(v159);
      swift_bridgeObjectRelease();
      v161 = v221;
      ConversationStateManager.updateDisplayProperties(using:)(v160);
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      swift_release();

      OUTLINED_FUNCTION_34_39();
    }
    else
    {

      outlined consume of CallDisplayInfo((void *)v208, *((id *)&v208 + 1), SBYTE4(v209));
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v243, &demangling cache variable for type metadata for Conversation?);
LABEL_72:
    OUTLINED_FUNCTION_28();
    return;
  }
  v221 = v139;
  outlined init with take of Notice(&v239, (uint64_t)&v227);
  uint64_t v141 = OUTLINED_FUNCTION_21_55();
  uint64_t v143 = v142(v141);
  uint64_t v144 = specialized Set.count.getter(v143);
  if (!v144)
  {
    swift_bridgeObjectRelease();
    unint64_t v162 = MEMORY[0x1E4FBC860];
LABEL_71:
    v185 = v221;
    ConversationStateManager.updateDisplayProperties(using:)(v162);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_34_39();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v243, &demangling cache variable for type metadata for Conversation?);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v227);
    goto LABEL_72;
  }
  uint64_t v145 = v144;
  unint64_t v226 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v143 & 0xC000000000000001) != 0)
  {
    uint64_t v146 = __CocoaSet.startIndex.getter();
    char v148 = 1;
  }
  else
  {
    uint64_t v146 = specialized _NativeSet.startIndex.getter(v143);
    char v148 = v163 & 1;
  }
  uint64_t v223 = v146;
  uint64_t v224 = v147;
  char v225 = v148;
  if ((v145 & 0x8000000000000000) == 0)
  {
    uint64_t v164 = v143 & 0xFFFFFFFFFFFFFF8;
    if (v143 < 0) {
      uint64_t v164 = v143;
    }
    uint64_t v222 = v164;
    do
    {
      uint64_t v165 = v223;
      uint64_t v166 = v224;
      char v167 = v225;
      uint64_t v168 = OUTLINED_FUNCTION_50_21();
      specialized Set.subscript.getter(v168, v169, v170, v171);
      v173 = v172;
      objc_msgSend(v172, sel_handle);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if ((v143 & 0xC000000000000001) != 0)
      {
        if ((v167 & 1) == 0) {
          goto LABEL_77;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>.Index);
        v183 = (void (*)(uint64_t))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        uint64_t v184 = OUTLINED_FUNCTION_51_21();
        v183(v184);
      }
      else
      {
        uint64_t v174 = OUTLINED_FUNCTION_50_21();
        uint64_t v178 = specialized _NativeSet.index(after:)(v174, v175, v176, v177);
        uint64_t v180 = v179;
        char v182 = v181;
        outlined consume of Set<TUHandle>.Index._Variant(v165, v166, v167);
        uint64_t v223 = v178;
        uint64_t v224 = v180;
        char v225 = v182 & 1;
      }
      --v145;
    }
    while (v145);
    outlined consume of Set<TUHandle>.Index._Variant(v223, v224, v225);
    unint64_t v162 = v226;
    swift_bridgeObjectRelease();
    goto LABEL_71;
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
}

uint64_t closure #1 in ConversationStateManager.init(call:callCenter:defaults:)@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(void, void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = static ConversationStateManager.displayName(call:conversationController:)(a1, a2);
  uint64_t v7 = v6;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = a2[14](ObjectType, a2);
  if (result)
  {
    *(void *)a3 = v5;
    *(void *)(a3 + 8) = v7;
    *(unsigned char *)(a3 + 16) = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t result = (uint64_t)Call.continuityCall.getter(ObjectType, (uint64_t)a2);
    if (result)
    {
      *(void *)a3 = result;
      *(void *)(a3 + 8) = 0;
      char v10 = 1;
    }
    else
    {
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      char v10 = 3;
    }
    *(unsigned char *)(a3 + 16) = v10;
  }
  return result;
}

uint64_t static ConversationStateManager.displayName(call:conversationController:)(uint64_t a1, uint64_t (**a2)(void, void))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (void *)a2[20](ObjectType, a2);
  unsigned int v5 = objc_msgSend(v4, sel_isTelephonyProvider);

  if (v5) {
    return a2[8](ObjectType, a2);
  }
  if ((a2[14](ObjectType, a2) & 1) == 0 || (uint64_t v6 = ConversationController.conversationDisplayName.getter(), !v7))
  {
    id v9 = objc_msgSend(self, sel_conversationKit);
    v14._object = (void *)0xE000000000000000;
    v10._uint64_t countAndFlagsBits = 0x454D495445434146;
    v10._object = (void *)0xE800000000000000;
    v11.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v11.value._object = (void *)0xEF74694B6E6F6974;
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v14._uint64_t countAndFlagsBits = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v14)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  return v6;
}

id Call.continuityCall.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v56 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v53 = (char *)((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (char *)((char *)&v43 - v53);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  __n128 v9 = MEMORY[0x1F4188790](v7 - 8);
  unint64_t v10 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v54 = *(void (**)(uint64_t, uint64_t, __n128))(a2 + 48);
  uint64_t v55 = a2 + 48;
  v54(a1, a2, v9);
  UUID.init(uuidString:)();
  uint64_t v11 = v4;
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)&v43 - v10, 1, v4) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v43 - v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    return 0;
  }
  else
  {
    uint64_t v13 = v56;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v6, (char *)&v43 - v10, v11);
    Swift::String v14 = closure #1 in Call.continuityCall.getter();
    uint64_t v48 = v15;
    uint64_t v49 = (uint64_t)v14;
    uint64_t v16 = closure #2 in Call.continuityCall.getter();
    int v47 = v16;
    uint64_t v51 = &v43;
    __n128 v17 = MEMORY[0x1F4188790](v16);
    id v18 = *(uint64_t (**)(__n128))(v13 + 16);
    uint64_t v50 = (char *)&v43 - v53;
    uint64_t v19 = v11;
    uint64_t v20 = v18(v17);
    uint64_t v53 = (char *)&v43;
    __n128 v21 = MEMORY[0x1F4188790](v20);
    uint64_t v22 = (char *)&v43 - v10;
    uint64_t v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 456))(a1, a2, v21);
    uint64_t v52 = v6;
    if (v23)
    {
      uint64_t v24 = v23;
      id v25 = objc_msgSend(v23, sel_UUID);

      static UUID._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v26 = 1;
    }
    uint64_t v27 = __swift_storeEnumTagSinglePayload((uint64_t)v22, v26, 1, v19);
    uint64_t v46 = &v43;
    __n128 v28 = MEMORY[0x1F4188790](v27);
    (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 56))(a1, a2, v28);
    unsigned int v45 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 184))(a1, a2);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    char v29 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 352))(a1, a2);
    Class isa = NSNumber.init(BOOLeanLiteral:)(v29 & 1).super.super.isa;
    char v30 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 304))(a1, a2);
    Class v31 = NSNumber.init(BOOLeanLiteral:)(v30 & 1).super.super.isa;
    uint64_t v32 = ((uint64_t (*)(uint64_t, uint64_t))v54)(a1, a2);
    uint64_t v34 = v33;
    uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
    uint64_t v37 = v36;
    uint64_t v38 = Dictionary.init(dictionaryLiteral:)();
    id v39 = objc_allocWithZone(MEMORY[0x1E4FADB18]);
    id v40 = @nonobjc TUContinuityCallInfo.init(callIdentifier:callerIdSubstring:displayName:isBranded:contactIdentifiersByHandle:senderIdentityShortName:senderIdentityName:handlesHash:)(v32, v34, v49, v48, v35, v37, v47 & 1, v38, 0, 0, 0, 0, 0, 0xF000000000000000);
    id v41 = objc_allocWithZone(MEMORY[0x1E4FADB10]);
    id v12 = @nonobjc TUContinuityCall.init(uuid:conversationUUID:callGroupUUID:status:isMuted:isCameraEnabled:callInfo:)(v50, (uint64_t)v22, (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v45, isa, v31, v40);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v19);
  }
  return v12;
}

uint64_t Call.displayStatus.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 104);
  swift_unknownObjectRetain();
  char v7 = v6(a1, v3);
  LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 96))(a1, v3);
  LODWORD(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 184))(a1, v3);
  uint64_t result = swift_unknownObjectRelease();
  *(unsigned char *)a3 = v7 & 1;
  *(unsigned char *)(a3 + 1) = v6 & 1;
  *(_DWORD *)(a3 + 4) = v3;
  return result;
}

id TUVideoDeviceController.currentCameraEffectsState.getter@<X0>(char *a1@<X8>)
{
  unsigned int v3 = objc_msgSend(v1, sel_currentInputSupportsCinematicFraming);
  unsigned __int8 v4 = objc_msgSend(v1, sel_isCinematicFramingEnabled);
  if (v3) {
    char v5 = v4;
  }
  else {
    char v5 = 2;
  }
  unsigned int v6 = objc_msgSend(v1, sel_supportsCameraBlur);
  unsigned __int8 v7 = objc_msgSend(v1, sel_cameraBlurEnabled);
  if (v6) {
    char v8 = v7;
  }
  else {
    char v8 = 2;
  }
  unsigned int v9 = objc_msgSend(v1, sel_currentInputSupportsStudioLight);
  unsigned __int8 v10 = objc_msgSend(v1, sel_isStudioLightEnabled);
  if (v9) {
    char v11 = v10;
  }
  else {
    char v11 = 2;
  }
  unsigned int v12 = objc_msgSend(v1, sel_currentInputSupportsReactionEffects);
  id result = objc_msgSend(v1, sel_isReactionEffectGestureEnabled);
  *a1 = v5;
  if (v12) {
    char v14 = (char)result;
  }
  else {
    char v14 = 2;
  }
  a1[1] = v8;
  a1[2] = v11;
  a1[3] = v14;
  return result;
}

uint64_t ConversationStateManager.registerForCallStateUpdates()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, OS_dispatch_queue>);
  uint64_t v56 = *(void *)(v0 - 8);
  uint64_t v1 = *(void *)(v56 + 64);
  MEMORY[0x1F4188790](v0);
  unint64_t v45 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = (char *)&v44 - v45;
  uint64_t v3 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  uint64_t v52 = *(void *)(v54 + 64);
  MEMORY[0x1F4188790](v3);
  unint64_t v51 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  char v5 = (char *)&v44 - v51;
  id v50 = self;
  id v6 = objc_msgSend(v50, sel_defaultCenter);
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v47 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v62[0] = (id)static OS_dispatch_queue.main.getter();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  uint64_t v60 = *(void *)(*(void *)(v7 - 8) + 64);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v57 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  unsigned int v9 = (char *)&v44 - v57;
  uint64_t v59 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v59);
  uint64_t v49 = _s10Foundation4UUIDVACSHAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher, MEMORY[0x1F418C1F0]);
  uint64_t v58 = lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v10 = v55;
  Publisher.receive<A>(on:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  char v11 = *(void (**)(char *, uint64_t))(v54 + 8);
  v54 += 8;
  uint64_t v44 = v11;
  v11(v5, v10);
  swift_allocObject();
  uint64_t v12 = v48;
  swift_unknownObjectWeakInit();
  uint64_t v53 = MEMORY[0x1E4F1AAB8];
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type Publishers.ReceiveOn<NSNotificationCenter.Publisher, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, OS_dispatch_queue>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v56 + 8);
  v56 += 8;
  v13(v2, v0);
  uint64_t v14 = v12 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_cancellables;
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  uint64_t v15 = swift_release();
  MEMORY[0x1F4188790](v15);
  uint64_t v16 = (char *)&v44 - v45;
  *(void *)&double v18 = MEMORY[0x1F4188790](v17).n128_u64[0];
  uint64_t v19 = (char *)&v44 - v51;
  id v20 = objc_msgSend(v50, sel_defaultCenter, v18);
  NSNotificationCenter.publisher(for:object:)();

  v62[0] = (id)static OS_dispatch_queue.main.getter();
  MEMORY[0x1F4188790](v62[0]);
  __n128 v21 = (char *)&v44 - v57;
  __swift_storeEnumTagSinglePayload((uint64_t)&v44 - v57, 1, 1, v59);
  uint64_t v22 = v55;
  Publisher.receive<A>(on:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  v44(v19, v22);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v13(v16, v0);
  uint64_t v46 = v14;
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.Merge<NSNotificationCenter.Publisher, NSNotificationCenter.Publisher>, OS_dispatch_queue>);
  uint64_t v56 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Merge<NSNotificationCenter.Publisher, NSNotificationCenter.Publisher>);
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  __n128 v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v30 = MEMORY[0x1F4188790](v29).n128_u64[0];
  id v31 = v50;
  id v32 = objc_msgSend(v50, sel_defaultCenter, v30);
  NSNotificationCenter.publisher(for:object:)();

  id v34 = objc_msgSend(v31, sel_defaultCenter, MEMORY[0x1F4188790](v33).n128_f64[0]);
  NSNotificationCenter.publisher(for:object:)();

  Publishers.Merge.init(_:_:)();
  v62[0] = (id)static OS_dispatch_queue.main.getter();
  MEMORY[0x1F4188790](v62[0]);
  uint64_t v35 = (char *)&v44 - v57;
  __swift_storeEnumTagSinglePayload((uint64_t)&v44 - v57, 1, 1, v59);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Merge<NSNotificationCenter.Publisher, NSNotificationCenter.Publisher> and conformance Publishers.Merge<A, B>, &demangling cache variable for type metadata for Publishers.Merge<NSNotificationCenter.Publisher, NSNotificationCenter.Publisher>);
  Publisher.receive<A>(on:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  swift_allocObject();
  uint64_t v36 = v48;
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Publishers.Merge<NSNotificationCenter.Publisher, NSNotificationCenter.Publisher>, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.Merge<NSNotificationCenter.Publisher, NSNotificationCenter.Publisher>, OS_dispatch_queue>);
  uint64_t v37 = v54;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v37);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<NSTimer.TimerPublisher, OS_dispatch_queue>);
  uint64_t v39 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  id v41 = (char *)&v44 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62[0] = *(id *)(v36 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_callDurationStringTimer);
  swift_retain();
  id v61 = (id)static OS_dispatch_queue.main.getter();
  MEMORY[0x1F4188790](v61);
  id v42 = (char *)&v44 - v57;
  __swift_storeEnumTagSinglePayload((uint64_t)&v44 - v57, 1, 1, v59);
  type metadata accessor for NSTimer.TimerPublisher();
  _s10Foundation4UUIDVACSHAAWlTm_8(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, MEMORY[0x1F418C220]);
  Publisher.receive<A>(on:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<NSTimer.TimerPublisher, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<NSTimer.TimerPublisher, OS_dispatch_queue>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  NSTimer.TimerPublisher.connect()();
  __swift_project_boxed_opaque_existential_1(v62, (uint64_t)v62[3]);
  swift_beginAccess();
  Cancellable.store(in:)();
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
}

uint64_t ConversationStateManager.registerConversationControllerCallbacks()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_conversationController);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  swift_beginAccess();
  uint64_t v4 = *v3;
  char v5 = v3[1];
  *uint64_t v3 = partial apply for closure #1 in ConversationStateManager.registerConversationControllerCallbacks();
  v3[1] = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v2;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v4, v5);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant);
  swift_beginAccess();
  uint64_t v8 = *v7;
  unsigned int v9 = v7[1];
  *uint64_t v7 = partial apply for closure #1 in ConversationStateManager.registerConversationControllerCallbacks();
  v7[1] = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v8, v9);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v11 = (void (**)(char))(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  swift_beginAccess();
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  char *v11 = partial apply for closure #3 in ConversationStateManager.registerConversationControllerCallbacks();
  v11[1] = (void (*)(char))v10;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v12, v13);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = (void (**)(uint64_t, uint64_t))(v1
                                               + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  swift_beginAccess();
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  *uint64_t v15 = partial apply for closure #4 in ConversationStateManager.registerConversationControllerCallbacks();
  v15[1] = (void (*)(uint64_t, uint64_t))v14;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v16, v17);
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = (void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  swift_beginAccess();
  id v20 = *v19;
  __n128 v21 = v19[1];
  *uint64_t v19 = partial apply for closure #5 in ConversationStateManager.registerConversationControllerCallbacks();
  v19[1] = (void (*)(uint64_t))v18;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v20, v21);
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v23 = (void (**)(uint64_t, uint64_t))(v1
                                               + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  swift_beginAccess();
  uint64_t v24 = *v23;
  uint64_t v25 = v23[1];
  void *v23 = partial apply for closure #6 in ConversationStateManager.registerConversationControllerCallbacks();
  v23[1] = (void (*)(uint64_t, uint64_t))v22;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v24, v25);
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v27 = (void (**)(uint64_t, uint64_t))(v1
                                               + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  swift_beginAccess();
  __n128 v28 = *v27;
  uint64_t v29 = v27[1];
  *uint64_t v27 = partial apply for closure #4 in ConversationStateManager.registerConversationControllerCallbacks();
  v27[1] = (void (*)(uint64_t, uint64_t))v26;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v28, v29);
  uint64_t v30 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v31 = (void (**)(uint64_t, uint64_t))(v1
                                               + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  swift_beginAccess();
  id v32 = *v31;
  uint64_t v33 = v31[1];
  *id v31 = partial apply for closure #8 in ConversationStateManager.registerConversationControllerCallbacks();
  v31[1] = (void (*)(uint64_t, uint64_t))v30;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v32, v33);
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v35 = (void (**)(uint64_t, uint64_t))(v1
                                               + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  swift_beginAccess();
  uint64_t v36 = *v35;
  uint64_t v37 = v35[1];
  *uint64_t v35 = partial apply for closure #8 in ConversationStateManager.registerConversationControllerCallbacks();
  v35[1] = (void (*)(uint64_t, uint64_t))v34;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v36, v37);
  uint64_t v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v39 = (void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
  swift_beginAccess();
  uint64_t v40 = *v39;
  id v41 = v39[1];
  *uint64_t v39 = partial apply for closure #10 in ConversationStateManager.registerConversationControllerCallbacks();
  v39[1] = (void (*)(uint64_t))v38;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v40, v41);
  uint64_t v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v43 = (void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
  swift_beginAccess();
  uint64_t v44 = *v43;
  unint64_t v45 = v43[1];
  *uint64_t v43 = partial apply for closure #11 in ConversationStateManager.registerConversationControllerCallbacks();
  v43[1] = (void (*)(uint64_t))v42;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v44, v45);
  uint64_t v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v47 = (void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
  swift_beginAccess();
  uint64_t v48 = *v47;
  uint64_t v49 = v47[1];
  *uint64_t v47 = partial apply for closure #11 in ConversationStateManager.registerConversationControllerCallbacks();
  v47[1] = (void (*)(uint64_t))v46;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v48, v49);
  uint64_t v50 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v51 = (void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
  swift_beginAccess();
  uint64_t v52 = *v51;
  uint64_t v53 = v51[1];
  uint64_t *v51 = partial apply for closure #11 in ConversationStateManager.registerConversationControllerCallbacks();
  v51[1] = (void (*)(uint64_t))v50;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v52, v53);
  uint64_t v54 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v55 = (void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
  swift_beginAccess();
  uint64_t v56 = *v55;
  unint64_t v57 = v55[1];
  *uint64_t v55 = partial apply for closure #11 in ConversationStateManager.registerConversationControllerCallbacks();
  v55[1] = (void (*)(uint64_t))v54;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v56, v57);
  uint64_t v58 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v59 = (void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
  swift_beginAccess();
  uint64_t v60 = *v59;
  id v61 = v59[1];
  *uint64_t v59 = partial apply for closure #11 in ConversationStateManager.registerConversationControllerCallbacks();
  v59[1] = (void (*)(uint64_t))v58;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v60, v61);
  uint64_t v62 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v63 = *v7;
  char v64 = v7[1];
  *uint64_t v7 = partial apply for closure #16 in ConversationStateManager.registerConversationControllerCallbacks();
  v7[1] = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v62;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v63, v64);
  uint64_t v65 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v66 = (void (**)(uint64_t))(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
  swift_beginAccess();
  uint64_t v67 = *v66;
  uint64_t v68 = v66[1];
  void *v66 = partial apply for closure #17 in ConversationStateManager.registerConversationControllerCallbacks();
  v66[1] = (void (*)(uint64_t))v65;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v67, v68);
  uint64_t v69 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v70 = (void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  swift_beginAccess();
  uint64_t v71 = *v70;
  uint64_t v72 = v70[1];
  *uint64_t v70 = partial apply for closure #18 in ConversationStateManager.registerConversationControllerCallbacks();
  v70[1] = (void (*)(uint64_t))v69;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v71, v72);
  uint64_t v73 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v74 = (void (**)(char, char))(v1
                                         + OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  swift_beginAccess();
  char v75 = *v74;
  char v76 = v74[1];
  *uint64_t v74 = partial apply for closure #19 in ConversationStateManager.registerConversationControllerCallbacks();
  v74[1] = (void (*)(char, char))v73;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v75, v76);
  uint64_t v77 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v78 = (void (**)(uint64_t, uint64_t))(v1
                                               + OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  swift_beginAccess();
  uint64_t v79 = *v78;
  id v80 = v78[1];
  *uint64_t v78 = partial apply for closure #20 in ConversationStateManager.registerConversationControllerCallbacks();
  v78[1] = (void (*)(uint64_t, uint64_t))v77;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v79, v80);
  uint64_t v81 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v82 = (void (**)(char))(v1
                                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  swift_beginAccess();
  uint64_t v83 = *v82;
  uint64_t v84 = v82[1];
  *uint64_t v82 = partial apply for closure #21 in ConversationStateManager.registerConversationControllerCallbacks();
  v82[1] = (void (*)(char))v81;
  return _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v83, v84);
}

Swift::Void __swiftcall ConversationStateManager.registerForMostActiveParticipantControllerCallbacks()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_mostActiveParticipantsController);
  uint64_t v2 = OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)(v1 + 16) = partial apply for closure #1 in ConversationStateManager.registerForMostActiveParticipantControllerCallbacks();
  *(void *)(v1 + 24) = v2;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v3, v4);
}

unint64_t ConversationStateManager.updateDisplayProperties(using:)(unint64_t result)
{
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    id result = swift_bridgeObjectRelease();
    if (!v2) {
      return result;
    }
  }
  else if (!*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  ConversationStateManager.updateImage(using:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNContact?);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  uint64_t v1 = Dictionary.init(dictionaryLiteral:)();
  ConversationPresentationStateProvider.onContactsByHandleUpdated(_:)((Swift::OpaquePointer)v1);
  return swift_bridgeObjectRelease();
}

uint64_t closure #5 in ConversationStateManager.init(call:callCenter:defaults:)(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  unint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v4 = (void *)v2;
    id v5 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_callCenter);

    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    id v7 = objc_msgSend(v5, sel_callsWithGroupUUID_, isa);

    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v8 = MEMORY[0x1E4FBC860];
  }
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_6;
    }
LABEL_14:
    swift_bridgeObjectRelease_n();
    unint64_t v16 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_14;
  }
LABEL_6:
  if (v9 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v11 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v12 = (id)MEMORY[0x1C87744F0](v11, v8);
    }
    else {
      id v12 = *(id *)(v8 + 8 * v11 + 32);
    }
    uint64_t v13 = v12;
    ++v11;
    id v14 = objc_msgSend(v12, sel_remoteParticipantHandles);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    uint64_t v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Array.append<A>(contentsOf:)(v15);
  }
  while (v9 != v11);
  swift_bridgeObjectRelease_n();
  unint64_t v16 = v3;
LABEL_15:
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x1C8776240](v1);
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    ConversationStateManager.updateDisplayProperties(using:)(v16);
  }
  return swift_bridgeObjectRelease();
}

uint64_t ConversationStateManager.updateImage(using:)()
{
  ConversationController.lookupActiveConversation()();
  if (!v5) {
    return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v4, &demangling cache variable for type metadata for Conversation?);
  }
  outlined init with take of Notice(&v4, (uint64_t)v6);
  uint64_t v0 = v7;
  uint64_t v1 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v9.value.super.Class isa = (Class)(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(v0, v1);
  Class isa = v9.value.super.isa;
  ConversationPresentationStateProvider.onImageUpdated(_:)(v9);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

id ConversationStateManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ConversationStateManager.init()()
{
}

id ConversationStateManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall ConversationStateManager.toggleSendingVideo()()
{
  OUTLINED_FUNCTION_31();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v1 = OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  v12[4] = partial apply for closure #1 in ConversationStateManager.toggleSendingVideo();
  v12[5] = v1;
  v12[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v12[2] = thunk for @escaping @callee_guaranteed () -> ();
  v12[3] = &block_descriptor_14_2;
  objc_super v2 = _Block_copy(v12);
  swift_release();
  uint64_t v3 = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_63();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_1();
  v12[0] = MEMORY[0x1E4FBC860];
  _s10Foundation4UUIDVACSHAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAEB8]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_32_6();
  uint64_t v8 = OUTLINED_FUNCTION_484();
  MEMORY[0x1C8773BA0](v8);
  _Block_release(v2);

  uint64_t v9 = OUTLINED_FUNCTION_21_3();
  v10(v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConversationStateManager.toggleSendingVideo()(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_conversationController);

    ConversationController.toggleLocalVideo(shouldPauseIfStopped:)(0);
  }
}

Swift::Void __swiftcall ConversationStateManager.toggleMuted()()
{
}

Swift::Void __swiftcall ConversationStateManager.endCall()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v4 + 160);
  swift_unknownObjectRetain();
  uint64_t v7 = OUTLINED_FUNCTION_102();
  uint64_t v8 = (void *)v6(v7);
  unsigned int v9 = objc_msgSend(v8, sel_isTelephonyProvider);

  if (v9)
  {
    uint64_t v10 = type metadata accessor for UUID();
    id v41 = v34;
    OUTLINED_FUNCTION_4();
    uint64_t v40 = v11;
    uint64_t v13 = *(void *)(v12 + 64);
    MEMORY[0x1F4188790](v14);
    unint64_t v15 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v42 = (char *)v34 - v15;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v17 = OUTLINED_FUNCTION_8(v16);
    MEMORY[0x1F4188790](v17);
    OUTLINED_FUNCTION_118();
    uint64_t v18 = OUTLINED_FUNCTION_102();
    v19(v18);
    if (__swift_getEnumTagSinglePayload(v1, 1, v10) != 1)
    {
      uint64_t v20 = v40;
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 32);
      v36(v42, v1, v10);
      id v38 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_callCenter), sel_queue);
      uint64_t v21 = OUTLINED_FUNCTION_20();
      uint64_t v22 = swift_unknownObjectWeakInit();
      uint64_t v39 = v34;
      MEMORY[0x1F4188790](v22);
      uint64_t v37 = v10;
      OUTLINED_FUNCTION_2_1();
      v23();
      unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v25 = swift_allocObject();
      void v34[2] = v21;
      *(void *)(v25 + 16) = v21;
      v36((char *)(v25 + v24), (uint64_t)v34 - v15, v10);
      v44[4] = partial apply for closure #1 in ConversationStateManager.endCall();
      v44[5] = v25;
      v44[0] = MEMORY[0x1E4F143A8];
      v44[1] = 1107296256;
      v44[2] = thunk for @escaping @callee_guaranteed () -> ();
      v44[3] = &block_descriptor_21_2;
      v34[0] = _Block_copy(v44);
      uint64_t v35 = type metadata accessor for DispatchQoS();
      uint64_t v36 = (void (*)(char *, uint64_t, uint64_t))v34;
      OUTLINED_FUNCTION_4();
      uint64_t v27 = v26;
      MEMORY[0x1F4188790](v28);
      OUTLINED_FUNCTION_118();
      swift_retain();
      static DispatchQoS.unspecified.getter();
      type metadata accessor for DispatchWorkItemFlags();
      v34[1] = v34;
      OUTLINED_FUNCTION_4();
      MEMORY[0x1F4188790](v29);
      OUTLINED_FUNCTION_64();
      uint64_t v43 = MEMORY[0x1E4FBC860];
      _s10Foundation4UUIDVACSHAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAEB8]);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v30 = (const void *)v34[0];
      id v31 = v38;
      MEMORY[0x1C8773BA0](0, v21, v25, v34[0]);
      _Block_release(v30);
      swift_unknownObjectRelease();

      OUTLINED_FUNCTION_3_8();
      v32();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v21, v35);
      OUTLINED_FUNCTION_29_4();
      v33();
      swift_release();
      swift_release();
      goto LABEL_6;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  (*(void (**)(void, uint64_t, uint64_t))(v4 + 440))(0, ObjectType, v4);
  swift_unknownObjectRelease();
LABEL_6:
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConversationStateManager.endCall()(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (char *)v2;
    uint64_t v4 = OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_callCenter;
    id v5 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_callCenter);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    id v7 = objc_msgSend(v5, sel_callsWithGroupUUID_, isa);

    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v9) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9)
      {
LABEL_4:
        if (v9 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v9; ++i)
        {
          if ((v8 & 0xC000000000000001) != 0) {
            id v11 = (id)MEMORY[0x1C87744F0](i, v8);
          }
          else {
            id v11 = *(id *)(v8 + 8 * i + 32);
          }
          uint64_t v12 = v11;
          objc_msgSend(*(id *)&v3[v4], sel_disconnectCall_withReason_, v11, 0);
        }
      }
    }

    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall ConversationStateManager.updatePresentationSize(_:)(CGSize a1)
{
  double height = a1.height;
  double width = a1.width;
  OUTLINED_FUNCTION_2();
  self;
  uint64_t v3 = (void *)swift_dynamicCastObjCClass();
  if (v3) {
    objc_msgSend(v3, sel_setRemoteVideoPresentationSize_, width, height);
  }
}

uint64_t ConversationStateManager.updateRemoteVideoPresentationState(_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_2();
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = one-time initialization token for conversationStateManager;
    swift_unknownObjectRetain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationStateManager);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v12 = v9;
      *(_DWORD *)unint64_t v8 = 136315138;
      type metadata accessor for TUCallRemoteVideoPresentationState(0);
      uint64_t v10 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v6, v7, "Updating remote video presentation state: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v9, -1, -1);
      MEMORY[0x1C87760E0](v8, -1, -1);
    }

    objc_msgSend(v3, sel_setRemoteVideoPresentationState_, a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall ConversationStateManager.upgradeToRTT()()
{
  OUTLINED_FUNCTION_2();
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    swift_unknownObjectRetain();
    id v3 = objc_msgSend(v2, sel_provider);
    unsigned int v4 = objc_msgSend(v3, sel_isTelephonyProvider);

    if (v4) {
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_callCenter), sel_setTTYType_forCall_, 1, v2);
    }
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall ConversationStateManager.toggleCinematicFramingEffectState()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_localVideoController);
  if (objc_msgSend(v1, sel_currentInputSupportsCinematicFraming))
  {
    uint64_t v2 = objc_msgSend(v1, sel_isCinematicFramingEnabled) ^ 1;
    objc_msgSend(v1, sel_setCinematicFramingEnabled_, v2);
  }
}

Swift::Void __swiftcall ConversationStateManager.toggleCameraBlurEffectState()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_localVideoController);
  if (objc_msgSend(v1, sel_supportsCameraBlur)) {
    TUVideoDeviceController.setCameraBlurEnabled(_:)(objc_msgSend(v1, sel_cameraBlurEnabled) != 1);
  }
}

Swift::Void __swiftcall ConversationStateManager.toggleStudioLightEffectState()()
{
}

Swift::Void __swiftcall ConversationStateManager.toggleReactionsEffectState()()
{
}

id ConversationStateManager.toggleStudioLightEffectState()(SEL *a1, SEL *a2, const char **a3)
{
  uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_localVideoController);
  id result = [v6 *a1];
  if (result)
  {
    uint64_t v8 = [v6 *a2] ^ 1;
    uint64_t v9 = *a3;
    return objc_msgSend(v6, v9, v8);
  }
  return result;
}

Swift::Void __swiftcall ConversationStateManager.update(presentationContexts:)(Swift::OpaquePointer presentationContexts)
{
}

void ConversationStateManager.userDidSelect(participantID:)()
{
}

Swift::Void __swiftcall ConversationStateManager.enableCaptionsRecognizer()()
{
}

Swift::Void __swiftcall ConversationStateManager.disableCaptionsRecognizer()()
{
}

Swift::Void __swiftcall ConversationStateManager.setIgnoreLetMeIn(_:)(Swift::Bool a1)
{
}

uint64_t closure #1 in ConversationStateManager.registerForCallStateUpdates()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v2);
  if (result)
  {
    unsigned int v4 = (void *)result;
    uint64_t v5 = *(void *)(result + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_conversationController)
       + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    uint64_t v6 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 304);
    swift_unknownObjectRetain();
    LOBYTE(v5) = v8(ObjectType, v6);
    swift_unknownObjectRelease();
    swift_retain();
    ConversationPresentationStateProvider.onSendingVideoStateUpdated(_:)(v5 & 1);

    return swift_release();
  }
  return result;
}

uint64_t closure #2 in ConversationStateManager.registerForCallStateUpdates()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v2);
  if (result)
  {
    unsigned int v4 = (void *)result;
    uint64_t v5 = *(void *)(result + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_conversationController)
       + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    uint64_t v6 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 352);
    swift_unknownObjectRetain();
    LOBYTE(v5) = v8(ObjectType, v6);
    swift_unknownObjectRelease();
    swift_retain();
    ConversationPresentationStateProvider.onMutedStateUpdated(_:)(v5 & 1);

    return swift_release();
  }
  return result;
}

void closure #3 in ConversationStateManager.registerForCallStateUpdates()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    unsigned int v4 = (void *)v3;
    ConversationStateManager.updateRTTState()();
  }
}

void ConversationStateManager.updateRTTState()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 152);
  swift_unknownObjectRetain();
  LOBYTE(v1) = v4(ObjectType, v2);
  swift_unknownObjectRelease();
  ConversationPresentationStateProvider.onRTTCallStateChange(_:)(v1 & 1);
  ConversationController.shouldShowRTTUpgrade.getter();
  ConversationPresentationStateProvider.onShouldShowRTTUpgradeChange(_:)(v5 & 1);
}

uint64_t closure #4 in ConversationStateManager.registerForCallStateUpdates()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v2);
  if (result)
  {
    unsigned int v4 = (void *)result;
    uint64_t v5 = *(void *)(result + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_conversationController)
       + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    uint64_t v6 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 16);
    swift_retain();
    v10.value._uint64_t countAndFlagsBits = v9(ObjectType, v8);
    ConversationPresentationStateProvider.onCallDurationUpdated(_:)(v10);

    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void closure #1 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_63();
  char v8 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v9();
  _dispatchPreconditionTest(_:)();
  uint64_t v10 = OUTLINED_FUNCTION_5_12();
  v11(v10);
  if (v8)
  {
    OUTLINED_FUNCTION_2();
    uint64_t v12 = MEMORY[0x1C8776240](a5 + 16);
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      CurrentValueSubject.send(_:)();
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #5 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C8776240](a2 + 16);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      ConversationStateManager.conversationControllerParticipantsDidChange()();
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #6 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    swift_beginAccess();
    uint64_t v9 = MEMORY[0x1C8776240](a3 + 16);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      ConversationStateManager.conversationControllerDidUpdateRemoteParticipant(_:)();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t ConversationStateManager.conversationControllerDidUpdateRemoteParticipant(_:)()
{
  if ((Participant.isActive.getter() & 1) == 0)
  {
    type metadata accessor for Participant(0);
    specialized MostActiveParticipantsController.markParticipantAsOffline(_:)();
  }
  return ConversationStateManager.conversationControllerParticipantsDidChange()();
}

void closure #4 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_62();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v3 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v9();
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v3, v5);
  if (v10)
  {
    OUTLINED_FUNCTION_2();
    uint64_t v11 = MEMORY[0x1C8776240](a3 + 16);
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      ConversationStateManager.conversationControllerParticipantsDidChange()();
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #8 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_63();
  char v7 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v3 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v8();
  _dispatchPreconditionTest(_:)();
  uint64_t v9 = OUTLINED_FUNCTION_5_12();
  v10(v9);
  if (v7)
  {
    if (*(void *)(a1 + *(int *)(type metadata accessor for Participant(0) + 28)))
    {
      OUTLINED_FUNCTION_2();
      uint64_t v11 = MEMORY[0x1C8776240](a3 + 16);
      if (v11)
      {
        uint64_t v12 = (void *)v11;
        ConversationStateManager.conversationControllerDidUpdateRemoteParticipant(_:)();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #10 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    swift_beginAccess();
    uint64_t v9 = MEMORY[0x1C8776240](a2 + 16);
    if (v9)
    {
      char v10 = (void *)v9;
      ConversationStateManager.conversationControllerMediaPrioritiesDidChange(_:)(a1);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t ConversationStateManager.conversationControllerMediaPrioritiesDidChange(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v40);
  uint64_t v41 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_defaults + 8);
  uint64_t ObjectType = swift_getObjectType();
  HIDWORD(v42) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 288))(ObjectType, v7);
  LODWORD(v42) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 296))(ObjectType, v7);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    id v38 = v5;
    uint64_t v39 = v1;
    *(void *)&v48[0] = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v10 = *(void *)&v48[0];
    uint64_t v11 = (float *)(a1 + 76);
    do
    {
      uint64_t v12 = *(void **)(v11 - 11);
      uint64_t v13 = *(void *)(v11 - 9);
      char v14 = *((unsigned char *)v11 - 28);
      uint64_t v43 = *(void *)(v11 - 5);
      uint64_t v15 = *(void *)(v11 - 3);
      if ((v42 & 0x100000000) != 0) {
        float v16 = *(v11 - 1);
      }
      else {
        float v16 = 0.0;
      }
      if (v42) {
        float v17 = *v11;
      }
      else {
        float v17 = 0.0;
      }
      *(void *)&v48[0] = v10;
      unint64_t v19 = *(void *)(v10 + 16);
      unint64_t v18 = *(void *)(v10 + 24);
      unint64_t v20 = v19 + 1;
      id v21 = v12;
      swift_bridgeObjectRetain();
      if (v19 >= v18 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v10 = *(void *)&v48[0];
      }
      *(void *)(v10 + 16) = v20;
      uint64_t v22 = v10 + 48 * v19;
      *(void *)(v22 + 32) = v21;
      *(void *)(v22 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v13;
      *(unsigned char *)(v22 + 48) = v14;
      *(void *)(v22 + 56) = v43;
      *(void *)(v22 + 64) = v15;
      *(float *)(v22 + 72) = v16;
      *(float *)(v22 + 76) = v17;
      v11 += 12;
      --v9;
    }
    while (v9);
    uint64_t v5 = v38;
    goto LABEL_14;
  }
  uint64_t v10 = MEMORY[0x1E4FBC860];
  unint64_t v20 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (v20)
  {
LABEL_14:
    uint64_t v23 = 32;
    uint64_t v24 = v40;
    uint64_t v25 = v41;
    do
    {
      long long v26 = *(_OWORD *)(v10 + v23);
      long long v27 = *(_OWORD *)(v10 + v23 + 32);
      v48[1] = *(_OWORD *)(v10 + v23 + 16);
      v48[2] = v27;
      v48[0] = v26;
      long long v28 = *(_OWORD *)(v10 + v23);
      long long v29 = *(_OWORD *)(v10 + v23 + 16);
      uint64_t v49 = *(void *)(v10 + v23 + 32);
      v48[3] = v28;
      v48[4] = v29;
      long long v44 = v28;
      long long v45 = v29;
      uint64_t v46 = v49;
      outlined retain of ParticipantMediaPriorities((void **)v48);
      ConversationController.participant(with:)((uint64_t)&v44, v30, v31, v32, v33, v34, v35, v36, (uint64_t)v38, v39, v40, v41, v42, v43, v44, *((uint64_t *)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46,
        v47);
      if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v24) == 1)
      {
        outlined release of ParticipantMediaPriorities((id *)v48);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        outlined init with take of Participant((uint64_t)v5, v25);
        specialized MostActiveParticipantsController.update(_:mediaPriorities:)();
        outlined destroy of Participant(v25);
        outlined release of ParticipantMediaPriorities((id *)v48);
      }
      v23 += 48;
      --v20;
    }
    while (v20);
    return swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t ConversationStateManager.cameraEffectsStateDidChange()()
{
  TUVideoDeviceController.currentCameraEffectsState.getter((char *)&v1);
  return ConversationLocalParticipantStateProvider.onCameraEffectsStateChanged(_:)();
}

void closure #11 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    ConversationStateManager.cameraEffectsStateDidChange()();
  }
}

void closure #16 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    ConversationStateManager.cameraEffectsStateDidChange()();
  }
}

void closure #17 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C8776240](a2 + 16);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      PassthroughSubject.send(_:)();
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #18 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C8776240](a2 + 16);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      ConversationPresentationStateProvider.onAudioVideoModeUpdated(_:)();
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #19 in ConversationStateManager.registerConversationControllerCallbacks()(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    swift_beginAccess();
    uint64_t v10 = MEMORY[0x1C8776240](a3 + 16);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      ConversationPresentationStateProvider.onOneToOneModeEnabledStateUpdated(_:)(a1 & 1);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #20 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)&v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBE8], v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    swift_beginAccess();
    uint64_t v10 = MEMORY[0x1C8776240](a3 + 16);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      uint64_t v12 = *(void **)(v10 + OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_callCenter);
      uint64_t ObjectType = swift_getObjectType();
      char v14 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 48);
      id v15 = v12;
      uint64_t v16 = v14(ObjectType, a2);
      float v17 = (void *)MEMORY[0x1C87730B0](v16);
      swift_bridgeObjectRelease();
      id v18 = objc_msgSend(v15, sel_callWithCallUUID_, v17);

      if (v18)
      {
        id v19 = v18;
        unsigned __int8 v20 = objc_msgSend(v19, sel_isConnecting);
        unsigned __int8 v21 = objc_msgSend(v19, sel_isConnected);
        unsigned int v22 = objc_msgSend(v19, sel_status);

        v23[0] = v20;
        v23[1] = v21;
        unsigned int v24 = v22;
        ConversationStateManager.conversationControllerCallStatusDidChange(_:)();
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void ConversationStateManager.conversationControllerCallStatusDidChange(_:)()
{
  ConversationPresentationStateProvider.onCallDisplayStatusUpdated(_:)();
  ConversationStateManager.updateRTTState()();
}

void closure #3 in ConversationStateManager.registerConversationControllerCallbacks()(char a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v4 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v12();
  char v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v4, v8);
  if (v13)
  {
    OUTLINED_FUNCTION_2();
    uint64_t v14 = MEMORY[0x1C8776240](a2 + 16);
    if (v14)
    {
      id v15 = (void *)v14;
      a4(a1 & 1);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t ConversationStateManager.conversationControllerParticipantsDidChange()()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  ConversationRemoteParticipantsStateProvider.onParticipantsChanged(_:)((Swift::OpaquePointer)v0);
  swift_bridgeObjectRelease();
  uint64_t v1 = ConversationController.conversationDisplayName.getter();
  if (v2)
  {
    uint64_t countAndFlagsBits = v1;
    object = v2;
  }
  else
  {
    id v5 = objc_msgSend(self, sel_conversationKit);
    v42._object = (void *)0xE000000000000000;
    v6._uint64_t countAndFlagsBits = 0x454D495445434146;
    v6._object = (void *)0xE800000000000000;
    v7.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v7.value._object = (void *)0xEF74694B6E6F6974;
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v42._uint64_t countAndFlagsBits = 0;
    Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v42);
    uint64_t countAndFlagsBits = v9._countAndFlagsBits;
    object = v9._object;
  }
  v40[0] = countAndFlagsBits;
  v40[1] = object;
  char v41 = 0;
  ConversationPresentationStateProvider.onCallDisplayInfoUpdated(_:)();
  swift_bridgeObjectRelease();
  ConversationController.lookupActiveConversation()();
  outlined init with copy of Conversation?((uint64_t)v40, (uint64_t)v37, &demangling cache variable for type metadata for Conversation?);
  uint64_t v10 = v38;
  if (!v38)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v37, &demangling cache variable for type metadata for Conversation?);
    unint64_t v18 = MEMORY[0x1E4FBC860];
LABEL_21:
    ConversationStateManager.updateDisplayProperties(using:)(v18);
    swift_bridgeObjectRelease();
    if (CaptioningStateManager.isCaptioningEnabled.getter()) {
      ConversationController.captionsRecognizerShouldBeRunning.setter();
    }
    return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v40, &demangling cache variable for type metadata for Conversation?);
  }
  uint64_t v11 = v39;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 96))(v10, v11);
  uint64_t v13 = specialized Set.count.getter(v12);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    unint64_t v18 = MEMORY[0x1E4FBC860];
LABEL_20:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    goto LABEL_21;
  }
  uint64_t v14 = v13;
  unint64_t v36 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v12 & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaSet.startIndex.getter();
    unsigned __int8 v17 = 1;
  }
  else
  {
    uint64_t result = specialized _NativeSet.startIndex.getter(v12);
    unsigned __int8 v17 = v19 & 1;
  }
  uint64_t v33 = result;
  uint64_t v34 = v16;
  unsigned __int8 v35 = v17;
  if ((v14 & 0x8000000000000000) == 0)
  {
    do
    {
      uint64_t v20 = v33;
      uint64_t v21 = v34;
      uint64_t v22 = v35;
      specialized Set.subscript.getter(v33, v34, v35, v12);
      unsigned int v24 = v23;
      id v25 = objc_msgSend(v23, sel_handle);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = specialized ContiguousArray._endMutation()();
      if ((v12 & 0xC000000000000001) != 0)
      {
        if ((v22 & 1) == 0) {
          goto LABEL_25;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>.Index);
        uint64_t v31 = (void (*)(unsigned char *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v31(v32, 0);
      }
      else
      {
        uint64_t v26 = specialized _NativeSet.index(after:)(v20, v21, v22, v12);
        uint64_t v28 = v27;
        char v30 = v29;
        outlined consume of Set<TUHandle>.Index._Variant(v20, v21, v22);
        uint64_t v33 = v26;
        uint64_t v34 = v28;
        unsigned __int8 v35 = v30 & 1;
      }
      --v14;
    }
    while (v14);
    outlined consume of Set<TUHandle>.Index._Variant(v33, v34, v35);
    unint64_t v18 = v36;
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void closure #1 in ConversationStateManager.registerForMostActiveParticipantControllerCallbacks()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  Swift::String v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *Swift::String v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C8776240](a2 + 16);
    if (v8)
    {
      Swift::String v9 = (void *)v8;
      ConversationStateManager.mostActiveParticipantDidChange(with:)();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t ConversationStateManager.mostActiveParticipantDidChange(with:)()
{
  uint64_t active = specialized MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter();
  ConversationRemoteParticipantsStateProvider.onMostActiveParticipantsChanged(_:)((Swift::OpaquePointer)active);
  return swift_bridgeObjectRelease();
}

void *closure #1 in Call.continuityCall.getter()
{
  self;
  uint64_t v0 = (void *)swift_dynamicCastObjCClass();
  if (v0)
  {
    swift_unknownObjectRetain();
    id v1 = objc_msgSend(v0, sel_localizedLabel);
    if (v1)
    {
      uint64_t v2 = v1;
      uint64_t v0 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();

      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      return 0;
    }
  }
  return v0;
}

uint64_t closure #2 in Call.continuityCall.getter()
{
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    id v1 = (void *)result;
    swift_unknownObjectRetain();
    id v2 = objc_msgSend(v1, sel_imageURL);
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    MEMORY[0x1F4188790](v3 - 8);
    uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v2)
    {
      uint64_t v6 = type metadata accessor for URL();
      uint64_t v7 = *(void *)(v6 - 8);
      MEMORY[0x1F4188790](v6);
      Swift::String v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v5, v9, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
      if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) != 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for URL?);
        id v10 = objc_msgSend(v1, sel_localizedLabel);
        if (v10)
        {

          id v11 = objc_msgSend(v1, sel_callDirectoryName);
          if (!v11)
          {
            swift_unknownObjectRelease();
            return 1;
          }
        }
        swift_unknownObjectRelease();
        return 0;
      }
    }
    else
    {
      uint64_t v12 = type metadata accessor for URL();
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v12);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for URL?);
    swift_unknownObjectRelease();
    return 0;
  }
  return result;
}

id @nonobjc TUContinuityCallInfo.init(callIdentifier:callerIdSubstring:displayName:isBranded:contactIdentifiersByHandle:senderIdentityShortName:senderIdentityName:handlesHash:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  uint64_t v20 = (void *)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v21 = (void *)MEMORY[0x1C87730B0](a3, a4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = 0;
  }
  uint64_t v22 = (void *)MEMORY[0x1C87730B0](a5, a6);
  swift_bridgeObjectRelease();
  v23.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  if (a10)
  {
    unsigned int v24 = (void *)MEMORY[0x1C87730B0](a9, a10);
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v24 = 0;
  }
  if (a12)
  {
    id v25 = (void *)MEMORY[0x1C87730B0](a11, a12);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v25 = 0;
  }
  if (a14 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data?(a13, a14);
  }
  id v27 = objc_msgSend(v14, sel_initWithCallIdentifier_callerIdSubstring_displayName_isBranded_contactIdentifiersByHandle_senderIdentityShortName_senderIdentityName_handlesHash_, v20, v21, v22, a7 & 1, v23.super.isa, v24, v25, isa);

  return v27;
}

id @nonobjc TUContinuityCall.init(uuid:conversationUUID:callGroupUUID:status:isMuted:isCameraEnabled:callInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, void *a5, void *a6, void *a7)
{
  v13.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
  uint64_t v14 = type metadata accessor for UUID();
  Class isa = 0;
  if (__swift_getEnumTagSinglePayload(a2, 1, v14) != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a2, v14);
  }
  if (__swift_getEnumTagSinglePayload(a3, 1, v14) == 1)
  {
    Class v16 = 0;
  }
  else
  {
    Class v16 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a3, v14);
  }
  id v17 = objc_msgSend(v19, sel_initWithUUID_conversationUUID_callGroupUUID_status_isMuted_isCameraEnabled_callInfo_, v13.super.isa, isa, v16, a4, a5, a6, a7);

  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
  return v17;
}

uint64_t sub_1C36BA910()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C36BA948()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

uint64_t specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v14 = a2;
  uint64_t v16 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    unint64_t v18 = a4;
    do
    {
      uint64_t v15 = v4;
      uint64_t v5 = v4 - 1;
      uint64_t v6 = *a4;
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t v20 = &v13;
      uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 72);
      uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
      MEMORY[0x1F4188790](v6 + v8 * v4);
      unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
      outlined init with copy of Conversation?(v11, (uint64_t)&v13 - v10, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      id v19 = &v13;
      uint64_t v17 = v8;
      MEMORY[0x1F4188790](v6 + v8 * v5);
      outlined init with copy of Conversation?(v12, (uint64_t)&v13 - v10, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v13 - v10, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      uint64_t result = outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v13 - v10, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      a4 = v18;
      uint64_t v4 = v15 + 1;
    }
    while (v15 + 1 != v14);
  }
  return result;
}

uint64_t partial apply for closure #5 in ConversationStateManager.init(call:callCenter:defaults:)()
{
  return partial apply for closure #5 in ConversationStateManager.init(call:callCenter:defaults:)((uint64_t (*)(uint64_t, uint64_t))closure #5 in ConversationStateManager.init(call:callCenter:defaults:));
}

uint64_t _s10Foundation4UUIDVACSHAAWlTm_8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void partial apply for closure #1 in ConversationStateManager.registerForMostActiveParticipantControllerCallbacks()(char a1)
{
  closure #1 in ConversationStateManager.registerForMostActiveParticipantControllerCallbacks()(a1 & 1, v1);
}

void partial apply for closure #1 in ConversationStateManager.toggleSendingVideo()()
{
  closure #1 in ConversationStateManager.toggleSendingVideo()(v0);
}

uint64_t objectdestroy_8Tm_0()
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_106();
  v1(v0);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationStateManager.endCall()()
{
  return partial apply for closure #5 in ConversationStateManager.init(call:callCenter:defaults:)((uint64_t (*)(uint64_t, uint64_t))closure #1 in ConversationStateManager.endCall());
}

uint64_t partial apply for closure #5 in ConversationStateManager.init(call:callCenter:defaults:)(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3, v4);
}

uint64_t type metadata accessor for ConversationStateManager()
{
  return self;
}

uint64_t method lookup function for ConversationStateManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationStateManager);
}

uint64_t dispatch thunk of ConversationStateManager.__allocating_init(call:callCenter:defaults:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1C36BBDD0()
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_106();
  v1(v0);
  OUTLINED_FUNCTION_31_12();
  return swift_deallocObject();
}

void partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)()
{
  uint64_t v1 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  char v8 = *(unsigned char *)(v0 + v6 + *(void *)(v5 + 64));
  specialized closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)(v7, v0 + v6, v8);
}

uint64_t sub_1C36BBEC8()
{
  return objectdestroy_31Tm_0();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)()
{
  return specialized closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(*(uint64_t (**)(BOOL))(v0 + 16));
}

uint64_t outlined init with copy of Conversation?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_26_0(a1, a2, a3);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_33_3();
  v5(v4);
  return v3;
}

uint64_t outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_26_0(a1, a2, a3);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_33_3();
  v5(v4);
  return v3;
}

uint64_t sub_1C36BBF6C()
{
  return objectdestroy_31Tm_0();
}

uint64_t objectdestroy_31Tm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA()()
{
  return specialized closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA()(*(void (**)(char *, float, float, float))(v0 + 16), *(float *)(v0 + 40));
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.boostParticipantEMAToMax(_:)()
{
  return specialized closure #1 in closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)() & 1;
}

uint64_t sub_1C36BBFF0()
{
  swift_release();
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter()
{
  return specialized closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C36BC028()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  closure #1 in ConversationStateManager.registerConversationControllerCallbacks()(a1, a2, a3, a4, v4);
}

void partial apply for closure #3 in ConversationStateManager.registerConversationControllerCallbacks()(char a1)
{
  closure #3 in ConversationStateManager.registerConversationControllerCallbacks()(a1, v1, (uint64_t)&OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_localParticipantStateProvider, (void (*)(void))ConversationLocalParticipantStateProvider.onMutedTalkingStateChanged(_:));
}

void partial apply for closure #4 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2)
{
  closure #4 in ConversationStateManager.registerConversationControllerCallbacks()(a1, a2, v2);
}

void partial apply for closure #5 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1)
{
  closure #5 in ConversationStateManager.registerConversationControllerCallbacks()(a1, v1);
}

void partial apply for closure #6 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2)
{
  closure #6 in ConversationStateManager.registerConversationControllerCallbacks()(a1, a2, v2);
}

void partial apply for closure #8 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2)
{
  closure #8 in ConversationStateManager.registerConversationControllerCallbacks()(a1, a2, v2);
}

void partial apply for closure #10 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1)
{
  closure #10 in ConversationStateManager.registerConversationControllerCallbacks()(a1, v1);
}

void partial apply for closure #11 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1)
{
  closure #11 in ConversationStateManager.registerConversationControllerCallbacks()(a1, v1);
}

void partial apply for closure #16 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  closure #16 in ConversationStateManager.registerConversationControllerCallbacks()(a1, a2, a3, a4, v4);
}

void partial apply for closure #17 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1)
{
  closure #17 in ConversationStateManager.registerConversationControllerCallbacks()(a1, v1);
}

void partial apply for closure #18 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1)
{
  closure #18 in ConversationStateManager.registerConversationControllerCallbacks()(a1, v1);
}

void partial apply for closure #19 in ConversationStateManager.registerConversationControllerCallbacks()(char a1, char a2)
{
  closure #19 in ConversationStateManager.registerConversationControllerCallbacks()(a1, a2 & 1, v2);
}

void partial apply for closure #20 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1, uint64_t a2)
{
  closure #20 in ConversationStateManager.registerConversationControllerCallbacks()(a1, a2, v2);
}

void partial apply for closure #21 in ConversationStateManager.registerConversationControllerCallbacks()(char a1)
{
  closure #3 in ConversationStateManager.registerConversationControllerCallbacks()(a1, v1, (uint64_t)&OBJC_IVAR____TtC15ConversationKit24ConversationStateManager_presentationStateProvider, (void (*)(void))ConversationPresentationStateProvider.onIgnoreLetMeInReqestsUpdated(_:));
}

uint64_t sub_1C36BC15C()
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  unint64_t v3 = (*(void *)(v2 + 64)
      + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v4 = OUTLINED_FUNCTION_106();
  v5(v4);

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_31_12();
  return swift_deallocObject();
}

void partial apply for specialized closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)()
{
  uint64_t v1 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  specialized closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)(v7, v0 + v6, v8);
}

uint64_t outlined assign with copy of MostActiveParticipantsController<UUID>.ActivityDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of MostActiveParticipantsController<UUID>.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_26_0(a1, a2, a3);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_33_3();
  v5(v4);
  return v3;
}

uint64_t sub_1C36BC330()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary()()
{
  return specialized closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary()();
}

uint64_t sub_1C36BC370()
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:)()
{
  uint64_t v1 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_1(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = *(void *)(v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return specialized closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:)(v0 + v6, v7);
}

uint64_t partial apply for closure #1 in ConversationStateManager.registerForCallStateUpdates()(uint64_t a1)
{
  return closure #1 in ConversationStateManager.registerForCallStateUpdates()(a1, v1);
}

uint64_t partial apply for closure #2 in ConversationStateManager.registerForCallStateUpdates()(uint64_t a1)
{
  return closure #2 in ConversationStateManager.registerForCallStateUpdates()(a1, v1);
}

void partial apply for closure #3 in ConversationStateManager.registerForCallStateUpdates()(uint64_t a1)
{
  closure #3 in ConversationStateManager.registerForCallStateUpdates()(a1, v1);
}

uint64_t partial apply for closure #4 in ConversationStateManager.registerForCallStateUpdates()(uint64_t a1)
{
  return closure #4 in ConversationStateManager.registerForCallStateUpdates()(a1, v1);
}

uint64_t sub_1C36BC494()
{
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)()
{
  return specialized closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t partial apply for specialized closure #1 in closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)()
{
  return partial apply for specialized closure #1 in MostActiveParticipantsController.boostParticipantEMAToMax(_:)() & 1;
}

uint64_t FTServerBag.isServerFaceTimeMyselfEnabled.getter()
{
  uint64_t result = (uint64_t)objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    uint64_t v1 = (void *)result;
    id v2 = outlined bridged method (mbnn) of @objc FTServerBag.object(forKey:)(0xD00000000000001ALL, 0x80000001C37BE6B0, (void *)result);

    if (v2)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v4, 0, sizeof(v4));
    }
    outlined init with take of Any?((uint64_t)v4, (uint64_t)v5);
    if (v6)
    {
      if (swift_dynamicCast()) {
        return v3;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)v5);
    }
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FTServerBag.remoteControlEnabled.getter()
{
  if (outlined bridged method (mbnn) of @objc FTServerBag.object(forKey:)(0xD00000000000001FLL, 0x80000001C37BE6D0, v0))
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  outlined init with take of Any?((uint64_t)v4, (uint64_t)v5);
  if (!v6)
  {
    outlined destroy of Any?((uint64_t)v5);
    return 1;
  }
  type metadata accessor for NSNumber();
  if ((swift_dynamicCast() & 1) == 0) {
    return 1;
  }
  id v1 = objc_msgSend(v3, sel_BOOLValue);

  return (uint64_t)v1;
}

id outlined bridged method (mbnn) of @objc FTServerBag.object(forKey:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(a3, sel_objectForKey_, v4);

  return v5;
}

uint64_t Conversation.currentSharePlayActivity.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = Conversation.activities.getter(a1, a2);
  uint64_t v3 = Array<A>.currentSharePlayActivity.getter(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t Conversation.currentCollaboration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = Conversation.activities.getter(a1, a2);
  Array<A>.currentCollaboration.getter(v4, a3);
  return swift_bridgeObjectRelease();
}

BOOL Conversation.isContinuitySession.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(a2 + 272))();
  id v3 = objc_msgSend(v2, sel_mode);

  return v3 == (id)2;
}

uint64_t Conversation.avModeForSystemAperture.getter()
{
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_63();
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 56))();
  OUTLINED_FUNCTION_31_12();
  v3();
  if (v2 == 4)
  {
    uint64_t v4 = OUTLINED_FUNCTION_2_76();
    uint64_t v6 = v5(v4);
    specialized LazySequence<>.count.getter(v6);
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = OUTLINED_FUNCTION_14_77();
  v8(v7);
  uint64_t v9 = OUTLINED_FUNCTION_2_76();
  return v10(v9);
}

uint64_t TUConversation.participantListDisplayName.getter()
{
  id v1 = objc_msgSend(v0, sel_displayName);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v4 = v3;

  swift_bridgeObjectRelease();
  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    id v6 = objc_msgSend(v0, sel_displayName);
    uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    id v6 = objc_msgSend(self, sel_conversationKit);
    v13._object = (void *)0xE000000000000000;
    v8._uint64_t countAndFlagsBits = 0x454D495445434146;
    v8._object = (void *)0xE800000000000000;
    v9.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v9.value._object = (void *)0xEF74694B6E6F6974;
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v13._uint64_t countAndFlagsBits = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v6, v10, v13)._countAndFlagsBits;
  }
  uint64_t v11 = countAndFlagsBits;

  return v11;
}

uint64_t Conversation.currentScreenSharingRequest.getter(uint64_t a1, uint64_t a2)
{
  return Conversation.currentScreenSharingRequest(ignoring:)(MEMORY[0x1E4FBC860], a1, a2);
}

BOOL Conversation.cnk_allowsVideoMessaging.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_16_0();
  (*(void (**)(void))(v6 + 264))();
  uint64_t v7 = OUTLINED_FUNCTION_1_148();
  v8(v7);
  if (v2)
  {
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 88))(a1, a2);
    uint64_t v10 = specialized LazySequence<>.count.getter(v9);
    swift_bridgeObjectRelease();
    BOOL v11 = v10 == 1;
  }
  else
  {
    BOOL v11 = 0;
  }
  uint64_t v12 = OUTLINED_FUNCTION_8_89();
  v13(v12);
  return v11;
}

uint64_t Conversation.currentActivity.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = Conversation.activities.getter(a1, a2);
  uint64_t v3 = Array<A>.sortedActivities.getter(v2);
  specialized Collection.first.getter(v3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id TUConversation.stagedSharePlayActivity.getter()
{
  id v1 = objc_msgSend(v0, sel_stagedActivitySession);
  return v1;
}

uint64_t Conversation.currentScreenSharingRequest(ignoring:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!Conversation.canDisplayScreenSharingRequest.getter(a2, a3)) {
    return 0;
  }
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 352))(a2, a3);
  swift_bridgeObjectRetain();
  specialized Set._Variant.filter(_:)(v6, a1);
  specialized Collection.first.getter();
  uint64_t v8 = v7;
  swift_release();
  return v8;
}

BOOL Conversation.isLinkSharingSupported.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v5 - 8);
  OUTLINED_FUNCTION_63();
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  uint64_t v6 = type metadata accessor for UUID();
  BOOL v7 = __swift_getEnumTagSinglePayload(v2, 1, v6) == 1;
  outlined destroy of Conversation?(v2, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  return v7;
}

Swift::Bool __swiftcall Conversation.isLocalMemberAuthorizedToChangeGroupMembership()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  unint64_t v4 = (void *)(*(uint64_t (**)(void))(v1 + 168))();

  if (v4)
  {
    uint64_t v5 = OUTLINED_FUNCTION_2_76();
    BOOL v7 = (void *)v6(v5);
    if (!v7) {
      return 1;
    }
    uint64_t v8 = v7;
    unsigned __int8 v9 = objc_msgSend(v7, sel_canCreateConversations);

    return v9;
  }
  else
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 200);
    return v10(v3, v2);
  }
}

uint64_t TUConversation.isRestricted.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *(void *)static RestrictedConversationChecker.shared)
                                            + 0x80))(v0) & 1;
}

uint64_t Conversation.containsAuthorizedToChangeGroupMembership(participantWithHandle:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = OUTLINED_FUNCTION_4_127(a1, a2);
  uint64_t v4 = v3(v2);
  if (!v4) {
    return 1;
  }
  uint64_t v5 = (void *)v4;
  OUTLINED_FUNCTION_31_12();
  char v8 = Conversation.containsInvited(participantWithHandle:inLink:)(v6, v7);

  return v8 & 1;
}

void Conversation.displayableActiveParticipants.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (*(uint64_t (**)(void))(a2 + 104))();
  v9[2] = a1;
  v9[3] = a2;
  uint64_t v10 = v2;
  specialized Set._Variant.filter(_:)(partial apply for closure #1 in Conversation.displayableActiveParticipants.getter, (uint64_t)v9, v5);
  id v7 = v6;
  Conversation.untrustedActiveLightweightParticipants.getter(a1, a2);
  specialized Set.union<A>(_:)(v8, v7);
}

void Conversation.allHandles(excludeOtherInvitedHandles:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = a1;
  uint64_t v6 = OUTLINED_FUNCTION_4_127(a1, a2);
  unint64_t v8 = (void *)v7(v6);
  unint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 128))(a2, a3);
  specialized Set.union<A>(_:)(v9, v8);
  if ((v10 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = MEMORY[0x1E4FBC870];
    v61[0] = MEMORY[0x1E4FBC870];
    __CocoaSet.makeIterator()();
    uint64_t v12 = __CocoaSet.Iterator.next()();
    if (v12)
    {
      uint64_t v13 = v12;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
      while (1)
      {
        uint64_t v65 = v13;
        swift_dynamicCast();
        if (v5 & 1) != 0 && (objc_msgSend(v62, sel_isOtherInvitedHandle))
        {
        }
        else
        {
          uint64_t v14 = v61[0];
          unint64_t v15 = *(void *)(v61[0] + 16);
          if (*(void *)(v61[0] + 24) <= v15)
          {
            specialized _NativeSet.resize(capacity:)(v15 + 1);
            uint64_t v14 = v61[0];
          }
          unint64_t v16 = NSObject._rawHashValue(seed:)(*(void *)(v14 + 40)) & ~(-1 << *(unsigned char *)(v14 + 32));
          if (((-1 << v16) & ~*(void *)(v14 + 56 + 8 * (v16 >> 6))) == 0)
          {
            OUTLINED_FUNCTION_17();
            while (++v20 != v21 || (v19 & 1) == 0)
            {
              BOOL v22 = v20 == v21;
              if (v20 == v21) {
                uint64_t v20 = 0;
              }
              v19 |= v22;
              if (*(void *)(v18 + 8 * v20) != -1)
              {
                OUTLINED_FUNCTION_13_42();
                goto LABEL_18;
              }
            }
            __break(1u);
            __break(1u);
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
            return;
          }
          OUTLINED_FUNCTION_18_8();
LABEL_18:
          OUTLINED_FUNCTION_10_86(v17);
          *(void *)(v23 + 8 * v24) = v62;
          ++*(void *)(v14 + 16);
        }
        uint64_t v13 = __CocoaSet.Iterator.next()();
        if (!v13)
        {
          uint64_t v11 = v61[0];
          break;
        }
      }
    }
    swift_release();
  }
  else
  {
    uint64_t v11 = specialized _NativeSet.filter(_:)(v10, v5 & 1);
  }
  specialized Sequence.compactMap<A>(_:)(v11);
  uint64_t v26 = v25;
  swift_release();
  id v27 = (void *)specialized Set.init<A>(_:)(v26);
  Conversation.displayableActiveParticipants.getter(a2, a3);
  uint64_t v29 = v28;
  uint64_t v30 = specialized LazySequence<>.count.getter(v28);
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v60 = v27;
    uint64_t v65 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v29 & 0xC000000000000001) != 0)
    {
      uint64_t v32 = (void *)__CocoaSet.startIndex.getter();
      char v34 = 1;
    }
    else
    {
      uint64_t v32 = (void *)specialized _NativeSet.startIndex.getter(v29);
      char v34 = v36 & 1;
    }
    id v62 = v32;
    uint64_t v63 = v33;
    char v64 = v34;
    if (v31 < 0) {
      goto LABEL_41;
    }
    do
    {
      id v38 = v62;
      uint64_t v37 = v63;
      char v39 = v64;
      uint64_t v40 = OUTLINED_FUNCTION_9_93();
      specialized Set.subscript.getter(v40, v41, v42, v43);
      long long v45 = v44;
      id v46 = objc_msgSend(v44, sel_handle);
      id v47 = (id)TUNormalizedHandleForTUHandle();

      if (!v47) {
        id v48 = objc_msgSend(v45, sel_handle);
      }

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if ((v29 & 0xC000000000000001) != 0)
      {
        if ((v39 & 1) == 0) {
          goto LABEL_42;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Set<TUConversationParticipant>.Index);
        uint64_t v58 = (void (*)(uint64_t *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v58(v61, 0);
      }
      else
      {
        uint64_t v49 = OUTLINED_FUNCTION_9_93();
        uint64_t v53 = (void *)specialized _NativeSet.index(after:)(v49, v50, v51, v52);
        uint64_t v55 = v54;
        char v57 = v56;
        outlined consume of Set<TUHandle>.Index._Variant((uint64_t)v38, v37, v39);
        id v62 = v53;
        uint64_t v63 = v55;
        char v64 = v57 & 1;
      }
      --v31;
    }
    while (v31);
    outlined consume of Set<TUHandle>.Index._Variant((uint64_t)v62, v63, v64);
    uint64_t v35 = v65;
    swift_bridgeObjectRelease();
    id v27 = v60;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x1E4FBC860];
  }
  unint64_t v59 = specialized Set.init<A>(_:)(v35);
  specialized Set.union<A>(_:)(v59, v27);
}

uint64_t Conversation.containsKickable(participantWithHandle:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 216);
  id v7 = (void *)v6(a2, a3);
  if (v7)
  {
    unint64_t v8 = v7;
    char v9 = Conversation.containsInvited(participantWithHandle:inLink:)(a1, v7);

    char v10 = v9 ^ 1;
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C37696D0;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    id v12 = a1;
    uint64_t v13 = String.init<A>(reflecting:)();
    uint64_t v15 = v14;
    uint64_t v16 = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v17 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v11 + 64) = v17;
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v15;
    if (v6(a2, a3))
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
      uint64_t v18 = String.init<A>(reflecting:)();
    }
    else
    {
      unint64_t v19 = 0xE300000000000000;
      uint64_t v18 = 7104878;
    }
    *(void *)(v11 + 96) = v16;
    *(void *)(v11 + 104) = v17;
    *(void *)(v11 + 72) = v18;
    *(void *)(v11 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v19;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t Conversation.activities.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 320))();
  specialized _copyCollectionToContiguousArray<A>(_:)(v4);
  swift_bridgeObjectRelease();
  specialized _arrayForceCast<A, B>(_:)();
  uint64_t v6 = v5;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(a2 + 304))(a1, a2);
  specialized _arrayForceCast<A, B>(_:)();
  swift_bridgeObjectRelease();
  specialized Array.append<A>(contentsOf:)();
  return v6;
}

uint64_t Array<A>.currentSharePlayActivity.getter(uint64_t a1)
{
  uint64_t v1 = Array<A>.sortedActivities.getter(a1);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      outlined init with copy of IDSLookupManager(v3, (uint64_t)&v8);
      __swift_project_boxed_opaque_existential_1(&v8, v9);
      uint64_t v4 = OUTLINED_FUNCTION_2_136();
      uint64_t v6 = (void *)v5(v4);

      if (v6) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
      v3 += 40;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    outlined init with take of Notice(&v8, (uint64_t)&v10);
  }
  else
  {
LABEL_6:
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v11 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivitySession);
    if (swift_dynamicCast()) {
      return v8;
    }
    else {
      return 0;
    }
  }
  else
  {
    outlined destroy of Conversation?((uint64_t)&v10, &demangling cache variable for type metadata for Activity?);
    return 0;
  }
}

BOOL Conversation.canDisplayScreenSharingRequest.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_16_0();
  id v7 = *(void (**)(void))(v6 + 264);
  v7();
  uint64_t v8 = OUTLINED_FUNCTION_1_148();
  v9(v8);
  BOOL v10 = v2 == 2 || ((uint64_t (*)(uint64_t, uint64_t))v7)(a1, a2) == 1;
  uint64_t v11 = OUTLINED_FUNCTION_8_89();
  v12(v11);
  return v10;
}

uint64_t Array<A>.currentCollaboration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  MEMORY[0x1F4188790](v5 - 8);
  OUTLINED_FUNCTION_62();
  uint64_t v6 = Array<A>.sortedActivities.getter(a1);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = v6 + 32;
    while (1)
    {
      outlined init with copy of IDSLookupManager(v8, (uint64_t)&v18);
      uint64_t v9 = v19;
      uint64_t v10 = v20;
      __swift_project_boxed_opaque_existential_1(&v18, v19);
      (*(void (**)(uint64_t, uint64_t))(v10 + 112))(v9, v10);
      uint64_t v11 = type metadata accessor for Collaboration(0);
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v11);
      outlined destroy of Conversation?(v2, &demangling cache variable for type metadata for Collaboration?);
      if (EnumTagSinglePayload != 1) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
      v8 += 40;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    outlined init with take of Notice(&v18, (uint64_t)&v21);
  }
  else
  {
LABEL_5:
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v22 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    uint64_t v13 = type metadata accessor for Collaboration(0);
    uint64_t v14 = swift_dynamicCast() ^ 1;
    uint64_t v15 = a2;
    uint64_t v16 = v13;
  }
  else
  {
    outlined destroy of Conversation?((uint64_t)&v21, &demangling cache variable for type metadata for Activity?);
    uint64_t v16 = type metadata accessor for Collaboration(0);
    uint64_t v15 = a2;
    uint64_t v14 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v15, v14, 1, v16);
}

void Conversation.untrustedActiveLightweightParticipants.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (*(uint64_t (**)(void))(a2 + 112))();
  v6[2] = a1;
  void v6[3] = a2;
  uint64_t v7 = v2;
  specialized Set._Variant.filter(_:)(partial apply for closure #1 in Conversation.untrustedActiveLightweightParticipants.getter, (uint64_t)v6, v5);
}

uint64_t closure #1 in Conversation.untrustedActiveLightweightParticipants.getter(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 144))(a3, a4);
  specialized Sequence.first(where:)(v5, v4);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (!v7) {
    return 1;
  }
  unsigned int v8 = objc_msgSend(v7, sel_isValidated);

  return v8 ^ 1;
}

uint64_t closure #1 in Conversation.displayableActiveParticipants.getter(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 584))() & 1) == 0) {
    return 1;
  }
  id v7 = objc_msgSend(v6, sel_identifier);
  unsigned int v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 176))(a3, a4);
  if (!v8) {
    return 1;
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_identifier);

  if (v7 != v10) {
    return 1;
  }
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)static Logger.conversationController);
  id v12 = v6;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    long long v18 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412290;
    id v16 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *long long v18 = v12;

    _os_log_impl(&dword_1C2F90000, v13, v14, "Excluding participant %@ from displayable participants because it's the local participant", v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v18, -1, -1);
    MEMORY[0x1C87760E0](v15, -1, -1);
  }
  else
  {
  }
  return 0;
}

uint64_t Conversation.containsPending(participantWithHandle:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)a1;
  uint64_t v3 = OUTLINED_FUNCTION_4_127(a1, a2);
  uint64_t v5 = v4(v3);
  specialized Sequence.contains(where:)(v5, v2);
  LOBYTE(v2) = v6;
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t Conversation.containsInvited(participantWithHandle:inLink:)(void *a1, id a2)
{
  id v3 = objc_msgSend(a2, sel_invitedMemberHandles);
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  if (!v3
    || (v3,
        id v5 = objc_msgSend(a2, sel_originatorHandle),
        v5,
        !v5))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v6 = 7104878;
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C376BA10;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
    id v8 = a2;
    uint64_t v9 = String.init<A>(reflecting:)();
    uint64_t v11 = v10;
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v12 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v7 + 64) = v12;
    *(void *)(v7 + 32) = v9;
    *(void *)(v7 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v11;
    id v13 = objc_msgSend(v8, sel_invitedMemberHandles);
    if (v13)
    {
      os_log_type_t v14 = v13;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      lazy protocol witness table accessor for type TUScreenSharingRequest and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      static Set._unconditionallyBridgeFromObjectiveC(_:)();

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>);
      uint64_t v15 = String.init<A>(reflecting:)();
    }
    else
    {
      unint64_t v16 = 0xE300000000000000;
      uint64_t v15 = 7104878;
    }
    uint64_t v4 = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 96) = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 104) = v12;
    *(void *)(v7 + 72) = v15;
    *(void *)(v7 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v16;
    if (objc_msgSend(v8, sel_originatorHandle))
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      uint64_t v6 = String.init<A>(reflecting:)();
    }
    else
    {
      unint64_t v17 = 0xE300000000000000;
    }
    *(void *)(v7 + 136) = v4;
    *(void *)(v7 + 144) = v12;
    *(void *)(v7 + 112) = v6;
    *(void *)(v7 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v17;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  id v18 = objc_msgSend(a2, sel_invitedMemberHandles);
  if (v18)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUScreenSharingRequest and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    uint64_t v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    LODWORD(v18) = specialized Set.contains(_:)(a1, v19);
    swift_bridgeObjectRelease();
  }
  id v20 = objc_msgSend(a2, sel_originatorHandle);
  if (v20)
  {
    long long v21 = v20;
    unsigned int v22 = objc_msgSend(v20, sel_isEquivalentToHandle_, a1);
  }
  else
  {
    unsigned int v22 = 0;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C376BA10;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  id v24 = a1;
  uint64_t v25 = String.init<A>(reflecting:)();
  uint64_t v27 = v26;
  *(void *)(v23 + 56) = v4;
  unint64_t v28 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v23 + 64) = v28;
  *(void *)(v23 + 32) = v25;
  *(void *)(v23 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v27;
  uint64_t v29 = String.init<A>(reflecting:)();
  *(void *)(v23 + 96) = v4;
  *(void *)(v23 + 104) = v28;
  *(void *)(v23 + 72) = v29;
  *(void *)(v23 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v30;
  uint64_t v31 = String.init<A>(reflecting:)();
  *(void *)(v23 + 136) = v4;
  *(void *)(v23 + 144) = v28;
  *(void *)(v23 + 112) = v31;
  *(void *)(v23 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v32;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  return (v18 | v22) & 1;
}

uint64_t TUConversation.reportUUID.getter()
{
  id v1 = objc_msgSend(v0, sel_report);
  id v2 = objc_msgSend(v1, sel_conversationID);

  if (v2)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  }
  type metadata accessor for UUID();
  uint64_t v3 = OUTLINED_FUNCTION_12_76();
  return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
}

uint64_t TUConversation.collaborations.getter()
{
  uint64_t v0 = type metadata accessor for Collaboration(0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 272))() & 1) == 0) {
    return MEMORY[0x1E4FBC860];
  }
  id v4 = TUConversation.highlight.getter();
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = v4;
  unint64_t v6 = (unint64_t)TUConversation.highlightState.getter();
  if (v6 >= 3) {
    char v7 = 3;
  }
  else {
    char v7 = 0x201u >> (8 * v6);
  }
  id v8 = v5;
  Collaboration.init(highlight:state:)(v8, v7, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Collaboration>);
  unint64_t v9 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C3769620;
  outlined init with take of Collaboration((uint64_t)v3, v10 + v9);

  return v10;
}

id TUConversation.highlight.getter()
{
  id v1 = objc_msgSend(self, sel_sharedInstance);
  id v2 = objc_msgSend(v1, sel_conversationManager);

  id v3 = objc_msgSend(v2, sel_collaborationForConversation_, v0);
  return v3;
}

id TUConversation.highlightState.getter()
{
  id v1 = objc_msgSend(self, sel_sharedInstance);
  id v2 = objc_msgSend(v1, sel_conversationManager);

  id v3 = objc_msgSend(v2, sel_collaborationStateForConversation_, v0);
  return v3;
}

id TUConversation.videoEnabled.getter()
{
  return objc_msgSend(v0, sel_isVideoEnabled);
}

uint64_t TUConversation.bundleIdentifier.getter()
{
  uint64_t v1 = outlined bridged method (ob) of @objc NSBundle.bundleIdentifier.getter(objc_msgSend(v0, sel_provider));
  if (v2) {
    return v1;
  }
  id v4 = objc_msgSend(v0, sel_provider);
  id v5 = objc_msgSend(v4, sel_identifier);

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v3;
}

id TUConversation.messagesGroupPhoto.getter()
{
  uint64_t v1 = outlined bridged method (pb) of @objc TUConversation.messagesGroupPhotoData.getter(v0);
  if (v2 >> 60 == 15) {
    return 0;
  }
  uint64_t v4 = v1;
  unint64_t v5 = v2;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  return UIImage.__allocating_init(data:)(v4, v5);
}

void protocol witness for Conversation.uuid.getter in conformance TUConversation()
{
}

void @nonobjc TUConversation.uuid.getter()
{
  id v1 = objc_msgSend(v0, sel_UUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

id protocol witness for Conversation.initiator.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.initiator.getter();
}

id @nonobjc TUConversation.initiator.getter()
{
  id v1 = objc_msgSend(v0, sel_initiator);
  return v1;
}

uint64_t protocol witness for Conversation.reportUUID.getter in conformance TUConversation()
{
  return TUConversation.reportUUID.getter();
}

uint64_t protocol witness for Conversation.messagesGroupUUID.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.messagesGroupUUID.getter();
}

uint64_t @nonobjc TUConversation.messagesGroupUUID.getter()
{
  id v1 = objc_msgSend(v0, sel_messagesGroupUUID);
  if (v1)
  {
    unint64_t v2 = v1;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  }
  type metadata accessor for UUID();
  uint64_t v3 = OUTLINED_FUNCTION_12_76();
  return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
}

uint64_t protocol witness for Conversation.messagesGroupName.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.messagesGroupName.getter();
}

uint64_t @nonobjc TUConversation.messagesGroupName.getter()
{
  return outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v0, (SEL *)&selRef_messagesGroupName);
}

id protocol witness for Conversation.messagesGroupPhoto.getter in conformance TUConversation()
{
  return TUConversation.messagesGroupPhoto.getter();
}

id protocol witness for Conversation.state.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.state.getter();
}

id @nonobjc TUConversation.state.getter()
{
  return objc_msgSend(v0, sel_state);
}

id protocol witness for Conversation.letMeInRequestState.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.letMeInRequestState.getter();
}

id @nonobjc TUConversation.letMeInRequestState.getter()
{
  return objc_msgSend(v0, sel_letMeInRequestState);
}

id protocol witness for Conversation.avcSessionToken.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.avcSessionToken.getter();
}

id @nonobjc TUConversation.avcSessionToken.getter()
{
  return objc_msgSend(v0, sel_avcSessionToken);
}

uint64_t protocol witness for Conversation.avcSessionIdentifier.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.avcSessionIdentifier.getter();
}

uint64_t @nonobjc TUConversation.avcSessionIdentifier.getter()
{
  return outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v0, (SEL *)&selRef_avcSessionIdentifier);
}

uint64_t protocol witness for Conversation.remoteMembers.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.remoteMembers.getter((SEL *)&selRef_remoteMembers);
}

uint64_t protocol witness for Conversation.mergedRemoteMembers.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.remoteMembers.getter((SEL *)&selRef_mergedRemoteMembers);
}

uint64_t protocol witness for Conversation.activeRemoteParticipants.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.remoteMembers.getter((SEL *)&selRef_activeRemoteParticipants);
}

uint64_t protocol witness for Conversation.activeLightweightParticipants.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.remoteMembers.getter((SEL *)&selRef_activeLightweightParticipants);
}

uint64_t protocol witness for Conversation.mergedActiveRemoteParticipants.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.remoteMembers.getter((SEL *)&selRef_mergedActiveRemoteParticipants);
}

uint64_t protocol witness for Conversation.pendingMembers.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.remoteMembers.getter((SEL *)&selRef_pendingMembers);
}

uint64_t protocol witness for Conversation.rejectedMembers.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.remoteMembers.getter((SEL *)&selRef_rejectedMembers);
}

uint64_t protocol witness for Conversation.lightweightMembers.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.remoteMembers.getter((SEL *)&selRef_lightweightMembers);
}

uint64_t protocol witness for Conversation.otherInvitedHandles.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.remoteMembers.getter((SEL *)&selRef_otherInvitedHandles);
}

uint64_t protocol witness for Conversation.isRestricted.getter in conformance TUConversation()
{
  return TUConversation.isRestricted.getter() & 1;
}

id protocol witness for Conversation.localMember.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.localMember.getter();
}

id @nonobjc TUConversation.localMember.getter()
{
  id v1 = objc_msgSend(v0, sel_localMember);
  return v1;
}

id protocol witness for Conversation.localParticipantAssociation.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.localParticipantAssociation.getter();
}

id @nonobjc TUConversation.localParticipantAssociation.getter()
{
  id v1 = objc_msgSend(v0, sel_localParticipantAssociation);
  return v1;
}

unint64_t protocol witness for Conversation.isOneToOneHandoffOngoing.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.isOneToOneHandoffOngoing.getter() & 1;
}

id @nonobjc TUConversation.isOneToOneHandoffOngoing.getter()
{
  return objc_msgSend(v0, sel_isOneToOneHandoffOngoing);
}

id protocol witness for Conversation.handoffEligibility.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.handoffEligibility.getter();
}

id @nonobjc TUConversation.handoffEligibility.getter()
{
  id v1 = objc_msgSend(v0, sel_handoffEligibility);
  return v1;
}

unint64_t protocol witness for Conversation.isOneToOneModeEnabled.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.isOneToOneModeEnabled.getter() & 1;
}

id @nonobjc TUConversation.isOneToOneModeEnabled.getter()
{
  return objc_msgSend(v0, sel_isOneToOneModeEnabled);
}

unint64_t protocol witness for Conversation.isLocallyCreated.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.isLocallyCreated.getter() & 1;
}

id @nonobjc TUConversation.isLocallyCreated.getter()
{
  return objc_msgSend(v0, sel_isLocallyCreated);
}

id protocol witness for Conversation.link.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.link.getter();
}

id @nonobjc TUConversation.link.getter()
{
  id v1 = objc_msgSend(v0, sel_link);
  return v1;
}

uint64_t protocol witness for Conversation.participantListDisplayName.getter in conformance TUConversation()
{
  return TUConversation.participantListDisplayName.getter();
}

id protocol witness for Conversation.localParticipantIdentifier.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.localParticipantIdentifier.getter();
}

id @nonobjc TUConversation.localParticipantIdentifier.getter()
{
  return objc_msgSend(v0, sel_localParticipantIdentifier);
}

unint64_t protocol witness for Conversation.ignoreLMIRequests.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.ignoreLMIRequests.getter() & 1;
}

id @nonobjc TUConversation.ignoreLMIRequests.getter()
{
  return objc_msgSend(v0, sel_ignoreLMIRequests);
}

unint64_t protocol witness for Conversation.isVideoEnabled.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.isVideoEnabled.getter() & 1;
}

id @nonobjc TUConversation.isVideoEnabled.getter()
{
  return objc_msgSend(v0, sel_isVideoEnabled);
}

uint64_t protocol witness for Conversation.bundleIdentifier.getter in conformance TUConversation()
{
  return TUConversation.bundleIdentifier.getter();
}

id protocol witness for Conversation.avMode.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.avMode.getter();
}

id @nonobjc TUConversation.avMode.getter()
{
  return objc_msgSend(v0, sel_avMode);
}

id protocol witness for Conversation.presentationContext.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.presentationContext.getter();
}

id @nonobjc TUConversation.presentationContext.getter()
{
  id v1 = objc_msgSend(v0, sel_presentationContext);
  return v1;
}

id protocol witness for Conversation.resolvedAudioVideoMode.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.resolvedAudioVideoMode.getter();
}

id @nonobjc TUConversation.resolvedAudioVideoMode.getter()
{
  return objc_msgSend(v0, sel_resolvedAudioVideoMode);
}

id protocol witness for Conversation.stagedSharePlayActivity.getter in conformance TUConversation()
{
  return TUConversation.stagedSharePlayActivity.getter();
}

unint64_t protocol witness for Conversation.shouldShowInvitationRingingUIForAnyHandleType.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.shouldShowInvitationRingingUIForAnyHandleType.getter() & 1;
}

id @nonobjc TUConversation.shouldShowInvitationRingingUIForAnyHandleType.getter()
{
  return objc_msgSend(v0, sel_shouldShowInvitationRingingUIForAnyHandleType);
}

uint64_t protocol witness for Conversation.collaborations.getter in conformance TUConversation()
{
  return TUConversation.collaborations.getter();
}

id protocol witness for Conversation.joinedActivitySession.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.joinedActivitySession.getter();
}

id @nonobjc TUConversation.joinedActivitySession.getter()
{
  id v1 = objc_msgSend(v0, sel_joinedActivitySession);
  return v1;
}

uint64_t protocol witness for Conversation.activitySessions.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.remoteMembers.getter((SEL *)&selRef_activitySessions);
}

unint64_t protocol witness for Conversation.isCameraMixedWithScreen.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.isCameraMixedWithScreen.getter() & 1;
}

id @nonobjc TUConversation.isCameraMixedWithScreen.getter()
{
  return objc_msgSend(v0, sel_isCameraMixedWithScreen);
}

uint64_t protocol witness for Conversation.screenSharingRequests.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.remoteMembers.getter((SEL *)&selRef_screenSharingRequests);
}

uint64_t @nonobjc TUConversation.remoteMembers.getter(SEL *a1)
{
  id v2 = [v1 *a1];
  OUTLINED_FUNCTION_31_12();
  type metadata accessor for NSObject(v3, v4);
  OUTLINED_FUNCTION_31_12();
  lazy protocol witness table accessor for type TUScreenSharingRequest and conformance NSObject(v5, v6);
  uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  return v7;
}

uint64_t Array<A>.sortedActivities.getter(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      outlined init with copy of IDSLookupManager(v4, (uint64_t)&v23);
      __swift_project_boxed_opaque_existential_1(&v23, v24);
      uint64_t v5 = OUTLINED_FUNCTION_2_136();
      uint64_t v7 = (void *)v6(v5);
      if (v7 && (v8 = v7, id v9 = objc_msgSend(v7, sel_state), v8, v9 == (id)2))
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
      }
      else
      {
        outlined init with take of Notice(&v23, (uint64_t)v20);
        uint64_t v10 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v10 = v25;
        }
        unint64_t v11 = *(void *)(v10 + 16);
        if (v11 >= *(void *)(v10 + 24) >> 1) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        uint64_t v12 = v21;
        uint64_t v13 = v22;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
        OUTLINED_FUNCTION_5_3();
        MEMORY[0x1F4188790](v14);
        unint64_t v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
        (*(void (**)(unsigned char *))(v17 + 16))(v16);
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, (uint64_t)v16, &v25, v12, v13);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      }
      v4 += 40;
      --v3;
    }
    while (v3);
    uint64_t v2 = v25;
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v23 = v2;
  swift_retain();
  specialized MutableCollection<>.sort(by:)((uint64_t *)&v23);
  swift_release();
  return v23;
}

void specialized Set._Variant.filter(_:)(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0xC000000000000001) == 0)
  {
    swift_bridgeObjectRetain();
    specialized _NativeSet.filter(_:)(a1, a2);
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v38 = v2;
  uint64_t v56 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain();
  uint64_t v42 = __CocoaSet.makeIterator()();
  uint64_t v6 = __CocoaSet.Iterator.next()();
  if (!v6)
  {
LABEL_30:
    swift_bridgeObjectRelease_n();
    swift_release();
    return;
  }
  uint64_t v7 = v6;
  uint64_t v41 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
  uint64_t v39 = a2;
  uint64_t v40 = MEMORY[0x1E4FBC838] + 8;
  while (1)
  {
    uint64_t v54 = v7;
    swift_dynamicCast();
    id v8 = v55;
    if (objc_msgSend(v55, sel_originType) != (id)1
      || !objc_msgSend(v8, sel_isLocallyOriginated)
      || objc_msgSend(v8, sel_type) != (id)1)
    {
      break;
    }
LABEL_28:

LABEL_29:
    uint64_t v7 = __CocoaSet.Iterator.next()();
    if (!v7) {
      goto LABEL_30;
    }
  }
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  long long v44 = &v38;
  MEMORY[0x1F4188790](v9 - 8);
  OUTLINED_FUNCTION_62();
  uint64_t v10 = *(void *)(a2 + 16);
  id v43 = v8;
  if (v10)
  {
    uint64_t v11 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_5_3();
    uint64_t v13 = v12;
    unint64_t v14 = a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v45 = *(void *)(v15 + 72);
    uint64_t v17 = v15 + 16;
    unint64_t v16 = *(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16);
    uint64_t v50 = v17;
    uint64_t v51 = v16;
    uint64_t v47 = v13 + 32;
    uint64_t v48 = v13;
    uint64_t v46 = v13 + 8;
    swift_bridgeObjectRetain();
    id v49 = v8;
    uint64_t v53 = v11;
    while (1)
    {
      v51(v3, v14, v11);
      __swift_storeEnumTagSinglePayload(v3, 0, 1, v11);
      uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v3, 1, v11);
      if (EnumTagSinglePayload == 1) {
        break;
      }
      uint64_t v19 = v48;
      uint64_t v20 = *(void *)(v48 + 64);
      MEMORY[0x1F4188790](EnumTagSinglePayload);
      uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v22 = v3;
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v21, v3, v53);
      id v23 = objc_msgSend(v49, sel_UUID);
      uint64_t v52 = &v38;
      MEMORY[0x1F4188790](v23);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v3 = static UUID.== infix(_:_:)();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
      uint64_t v11 = v53;
      v24(v21, v53);
      v24(v21, v11);
      if (v3)
      {

        a2 = v39;
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      v14 += v45;
      --v10;
      uint64_t v3 = v22;
      if (!v10) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    id v25 = v8;
LABEL_14:
    uint64_t v26 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload(v3, 1, 1, v26);
  }

  a2 = v39;
  swift_bridgeObjectRelease();
  id v27 = v55;
  uint64_t v3 = v56;
  unint64_t v28 = *(void *)(v56 + 16);
  if (*(void *)(v56 + 24) <= v28)
  {
    specialized _NativeSet.resize(capacity:)(v28 + 1);
    uint64_t v3 = v56;
  }
  unint64_t v29 = NSObject._rawHashValue(seed:)(*(void *)(v3 + 40)) & ~(-1 << *(unsigned char *)(v3 + 32));
  if (((-1 << v29) & ~*(void *)(v3 + 56 + 8 * (v29 >> 6))) != 0)
  {
    OUTLINED_FUNCTION_18_8();
LABEL_26:
    OUTLINED_FUNCTION_10_86(v30);
    *(void *)(v36 + 8 * v37) = v27;
    ++*(void *)(v3 + 16);
    goto LABEL_29;
  }
  OUTLINED_FUNCTION_17();
  while (++v33 != v34 || (v32 & 1) == 0)
  {
    BOOL v35 = v33 == v34;
    if (v33 == v34) {
      uint64_t v33 = 0;
    }
    v32 |= v35;
    if (*(void *)(v31 + 8 * v33) != -1)
    {
      OUTLINED_FUNCTION_13_42();
      goto LABEL_26;
    }
  }
  __break(1u);
}

uint64_t partial apply for closure #1 in Conversation.displayableActiveParticipants.getter(void **a1)
{
  return closure #1 in Conversation.displayableActiveParticipants.getter(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t specialized _NativeSet.filter(_:)(uint64_t isStackAllocationSafe, char a2)
{
  uint64_t v4 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v7 = (void *)((char *)v13 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v6, v7);
    specialized closure #1 in _NativeSet.filter(_:)(v7, v6, v4, a2 & 1);
    uint64_t v9 = v8;
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v10 = (unint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v6, v10);
    specialized closure #1 in _NativeSet.filter(_:)(v10, v6, v4, a2 & 1);
    uint64_t v9 = v11;
    swift_release();
    MEMORY[0x1C87760E0](v10, -1, -1);
  }
  return v9;
}

void specialized closure #1 in _NativeSet.filter(_:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a2;
  uint64_t v4 = a4;
  uint64_t v43 = a3;
  uint64_t v44 = 0;
  int64_t v5 = 0;
  uint64_t v6 = *(void *)(a3 + 56);
  uint64_t v39 = a1;
  uint64_t v40 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v41 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v42 = a4;
  do
  {
    while (1)
    {
LABEL_4:
      if (v9)
      {
        unint64_t v10 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v11 = v10 | (v5 << 6);
      }
      else
      {
        int64_t v12 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_36;
        }
        if (v12 >= v41)
        {
LABEL_35:
          uint64_t v37 = v43;
          swift_retain();
          specialized _NativeSet.extractSubset(using:count:)(v39, v38, v44, v37);
          swift_bridgeObjectRelease();
          return;
        }
        unint64_t v13 = *(void *)(v40 + 8 * v12);
        ++v5;
        if (!v13)
        {
          int64_t v5 = v12 + 1;
          if (v12 + 1 >= v41) {
            goto LABEL_35;
          }
          unint64_t v13 = *(void *)(v40 + 8 * v5);
          if (!v13)
          {
            int64_t v5 = v12 + 2;
            if (v12 + 2 >= v41) {
              goto LABEL_35;
            }
            unint64_t v13 = *(void *)(v40 + 8 * v5);
            if (!v13)
            {
              int64_t v14 = v12 + 3;
              if (v14 >= v41) {
                goto LABEL_35;
              }
              unint64_t v13 = *(void *)(v40 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  int64_t v5 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    goto LABEL_37;
                  }
                  if (v5 >= v41) {
                    goto LABEL_35;
                  }
                  unint64_t v13 = *(void *)(v40 + 8 * v5);
                  ++v14;
                  if (v13) {
                    goto LABEL_19;
                  }
                }
              }
              int64_t v5 = v14;
            }
          }
        }
LABEL_19:
        unint64_t v9 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v5 << 6);
      }
      id v15 = *(id *)(*(void *)(v43 + 48) + 8 * v11);
      if (objc_msgSend(v15, sel_originType, v38) != (id)1
        || !objc_msgSend(v15, sel_isLocallyOriginated)
        || objc_msgSend(v15, sel_type) != (id)1)
      {
        break;
      }
    }
    unint64_t v46 = v11;
    unint64_t v48 = v9;
    int64_t v49 = v5;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v47 = &v38;
    MEMORY[0x1F4188790](v16 - 8);
    id v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v19 = *(void *)(v4 + 16);
    id v45 = v15;
    if (v19)
    {
      uint64_t v20 = type metadata accessor for UUID();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = v21;
      uint64_t v23 = v4 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
      uint64_t v50 = *(void *)(v21 + 72);
      uint64_t v25 = v21 + 16;
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
      uint64_t v55 = v25;
      uint64_t v56 = v24;
      uint64_t v52 = v22 + 32;
      uint64_t v53 = v22;
      uint64_t v51 = v22 + 8;
      id v54 = v15;
      swift_bridgeObjectRetain();
      uint64_t v58 = v20;
      while (1)
      {
        v56(v18, v23, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
        uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20);
        if (EnumTagSinglePayload == 1) {
          break;
        }
        char v57 = &v38;
        uint64_t v27 = v53;
        uint64_t v28 = *(void *)(v53 + 64);
        MEMORY[0x1F4188790](EnumTagSinglePayload);
        unint64_t v29 = (char *)&v38 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v18, v58);
        id v30 = objc_msgSend(v54, sel_UUID);
        MEMORY[0x1F4188790](v30);
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v3ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = static UUID.== infix(_:_:)();
        uint64_t v31 = *(void (**)(char *, uint64_t))(v27 + 8);
        uint64_t v20 = v58;
        v31(v29, v58);
        v31(v29, v20);
        if (v30)
        {
          id v35 = v54;

          uint64_t v4 = v42;
          swift_bridgeObjectRelease();
          unint64_t v9 = v48;
          int64_t v5 = v49;
          goto LABEL_4;
        }
        v23 += v50;
        if (!--v19) {
          goto LABEL_29;
        }
      }
    }
    else
    {
      id v36 = v15;
      swift_bridgeObjectRetain();
LABEL_29:
      uint64_t v32 = type metadata accessor for UUID();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v32);
    }
    id v33 = v45;

    uint64_t v4 = v42;
    swift_bridgeObjectRelease();

    *(unint64_t *)((char *)v39 + ((v46 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v46;
    BOOL v34 = __OFADD__(v44++, 1);
    unint64_t v9 = v48;
    int64_t v5 = v49;
  }
  while (!v34);
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void specialized closure #1 in _NativeSet.filter(_:)(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v19 = a2;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      if ((a4 & 1) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v12) {
      goto LABEL_25;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_25;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v12) {
          goto LABEL_25;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
    if (a4)
    {
LABEL_21:
      if ((objc_msgSend(*(id *)(*(void *)(a3 + 48) + 8 * v14), sel_isOtherInvitedHandle, v19) & 1) == 0) {
        goto LABEL_22;
      }
    }
    else
    {
LABEL_22:
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_25:
        swift_retain();
        specialized _NativeSet.extractSubset(using:count:)(a1, v19, v6, a3);
        return;
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v12) {
    goto LABEL_25;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_25;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
}

uint64_t partial apply for closure #1 in Conversation.untrustedActiveLightweightParticipants.getter(void **a1)
{
  return closure #1 in Conversation.untrustedActiveLightweightParticipants.getter(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t dispatch thunk of Conversation.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Conversation.initiator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Conversation.reportUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Conversation.messagesGroupUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Conversation.messagesGroupName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Conversation.messagesGroupPhoto.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Conversation.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of Conversation.letMeInRequestState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Conversation.avcSessionToken.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Conversation.avcSessionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of Conversation.remoteMembers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of Conversation.mergedRemoteMembers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of Conversation.activeRemoteParticipants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of Conversation.activeLightweightParticipants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Conversation.mergedActiveRemoteParticipants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of Conversation.pendingMembers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of Conversation.rejectedMembers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of Conversation.lightweightMembers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of Conversation.otherInvitedHandles.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of Conversation.isRestricted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of Conversation.localMember.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of Conversation.localParticipantAssociation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of Conversation.isOneToOneHandoffOngoing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of Conversation.handoffEligibility.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of Conversation.isOneToOneModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of Conversation.isLocallyCreated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of Conversation.link.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of Conversation.participantListDisplayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of Conversation.localParticipantIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of Conversation.ignoreLMIRequests.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of Conversation.isVideoEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of Conversation.bundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of Conversation.avMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of Conversation.presentationContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of Conversation.resolvedAudioVideoMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of Conversation.stagedSharePlayActivity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t dispatch thunk of Conversation.shouldShowInvitationRingingUIForAnyHandleType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of Conversation.collaborations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of Conversation.joinedActivitySession.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of Conversation.activitySessions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))();
}

uint64_t dispatch thunk of Conversation.isCameraMixedWithScreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of Conversation.allHandles(excludeOtherInvitedHandles:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

uint64_t dispatch thunk of Conversation.containsPending(participantWithHandle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t dispatch thunk of Conversation.screenSharingRequests.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t dispatch thunk of Conversation.currentScreenSharingRequest.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 360))();
}

uint64_t lazy protocol witness table accessor for type TUScreenSharingRequest and conformance NSObject(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSObject(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return outlined init with take of Notice(&v12, v10 + 40 * a1 + 32);
}

void *SharedContentVideoView.ViewModel.init(screenProvider:screenTransform:)@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t a3@<X8>)
{
  outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails(a1, a3, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  return memcpy((void *)(a3 + 40), a2, 0x80uLL);
}

BOOL static SharedContentVideoView.ViewModel.== infix(_:_:)()
{
  Hasher.init(_seed:)();
  SharedContentVideoView.ViewModel.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  Hasher.init(_seed:)();
  SharedContentVideoView.ViewModel.hash(into:)();
  return v0 == Hasher._finalize()();
}

id SharedContentVideoView.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharedContentVideoView.configure(with:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v1[OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_viewModel];
  swift_beginAccess();
  outlined init with copy of Conversation?((uint64_t)v4, (uint64_t)v25, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
  uint64_t v5 = v26;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
  outlined init with copy of SharedContentVideoView.ViewModel(a1, (uint64_t)v25);
  if (v5 == 1)
  {
    outlined destroy of SharedContentVideoView.ViewModel((uint64_t)v25);
    goto LABEL_3;
  }
  unint64_t v7 = *((void *)v4 + 3);
  if (v7 >= 2)
  {
    uint64_t v10 = *((void *)v4 + 4);
    unint64_t v11 = __swift_project_boxed_opaque_existential_1(v4, *((void *)v4 + 3));
    uint64_t v12 = *(void *)(v7 - 8);
    MEMORY[0x1F4188790](v11);
    uint64_t v14 = (char *)&v22[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    uint64_t v8 = (*(uint64_t (**)(unint64_t, uint64_t))(v10 + 8))(v7, v10);
    char v9 = v15 & 1;
    (*(void (**)(char *, unint64_t))(v12 + 8))(v14, v7);
  }
  else
  {
    uint64_t v8 = 0;
    char v9 = 1;
  }
  outlined init with copy of Conversation?((uint64_t)v25, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  uint64_t v16 = v23;
  if (!v23)
  {
    outlined destroy of SharedContentVideoView.ViewModel((uint64_t)v25);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (v9) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v17 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  char v20 = v19;
  outlined destroy of SharedContentVideoView.ViewModel((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  if (v9)
  {
    if (v20) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((v20 & 1) != 0 || v8 != v18) {
LABEL_3:
  }
    SharedContentVideoView.registerVideoLayers(with:)(a1);
LABEL_4:
  outlined init with copy of SharedContentVideoView.ViewModel(a1, (uint64_t)v25);
  swift_beginAccess();
  outlined assign with take of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v25, (uint64_t)v4, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
  swift_endAccess();
  id v6 = objc_msgSend(v2, sel_layer);
  MEMORY[0x1F4188790](v6);
  CALayer.withoutActions(_:)((void (*)(id))partial apply for closure #1 in closure #1 in SharedContentVideoView.configure(with:));
}

uint64_t SharedContentVideoView.registerVideoLayers(with:)(uint64_t a1)
{
  outlined init with copy of Conversation?(a1, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  if (!v6) {
    return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  }
  uint64_t v2 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  id v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView), sel_layer);
  (*(void (**)(void))(v2 + 120))();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t SharedContentVideoView.ViewModel.screenProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of Conversation?(v1, a1, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
}

uint64_t SharedContentVideoView.ViewModel.screenProvider.setter(uint64_t a1)
{
  return outlined assign with take of MostActiveParticipantsController<UUID>.ActivityDetails(a1, v1, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
}

uint64_t (*SharedContentVideoView.ViewModel.screenProvider.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *SharedContentVideoView.ViewModel.screenTransform.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_2_75(a1, (const void *)(v1 + 40));
}

void *SharedContentVideoView.ViewModel.screenTransform.setter(const void *a1)
{
  return OUTLINED_FUNCTION_2_75((void *)(v1 + 40), a1);
}

uint64_t (*SharedContentVideoView.ViewModel.screenTransform.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SharedContentVideoView.ViewModel.contentsRect.getter()
{
  outlined init with copy of Conversation?(v0, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  uint64_t v1 = v5;
  if (v5)
  {
    uint64_t v2 = v6;
    __swift_project_boxed_opaque_existential_1(v4, v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 64))(v7, v1, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    outlined init with take of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v7, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  }
  return 0.0;
}

char *SharedContentVideoView.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView;
  id v3 = (objc_class *)type metadata accessor for ParticipantVideoCameraView();
  uint64_t v4 = objc_allocWithZone(v3);
  v4[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = 1;
  v11.receiver = v4;
  v11.super_class = v3;
  uint64_t v5 = v0;
  *(void *)&v0[v2] = objc_msgSendSuper2(&v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = &v5[OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_viewModel];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = 0;
  *((void *)v6 + 3) = 1;
  bzero(v6 + 32, 0x88uLL);

  v10.receiver = v5;
  v10.super_class = ObjectType;
  uint64_t v7 = (char *)OUTLINED_FUNCTION_0_75(&v10, sel_initWithFrame_);
  objc_msgSend(v7, sel_setClipsToBounds_, 1);
  uint64_t v8 = *(void **)&v7[OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView];
  outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD000000000000021, 0x80000001C37BE7E0, v8);
  objc_msgSend(v7, sel_addSubview_, v8);

  return v7;
}

id SharedContentVideoView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SharedContentVideoView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView;
  uint64_t v2 = (objc_class *)type metadata accessor for ParticipantVideoCameraView();
  id v3 = objc_allocWithZone(v2);
  v3[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = 1;
  v4.receiver = v3;
  v4.super_class = v2;
  *(void *)&v0[v1] = OUTLINED_FUNCTION_0_75(&v4, sel_initWithFrame_);
  OUTLINED_FUNCTION_5_117(OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_viewModel);

  OUTLINED_FUNCTION_2_113();
  __break(1u);
}

id SharedContentVideoView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

void SharedContentVideoView.init(frame:)()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView;
  uint64_t v2 = (objc_class *)type metadata accessor for ParticipantVideoCameraView();
  id v3 = objc_allocWithZone(v2);
  v3[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = 1;
  v4.receiver = v3;
  v4.super_class = v2;
  *(void *)&v0[v1] = OUTLINED_FUNCTION_0_75(&v4, sel_initWithFrame_);
  OUTLINED_FUNCTION_5_117(OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_viewModel);

  OUTLINED_FUNCTION_2_113();
  __break(1u);
}

Swift::Void __swiftcall SharedContentVideoView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  SharedContentVideoView._layout()();
}

uint64_t SharedContentVideoView._layout()()
{
  objc_super v1 = v0;
  objc_msgSend(v0, sel_bounds);
  uint64_t result = CGRectIsInfinite(v21);
  if ((result & 1) == 0)
  {
    objc_msgSend(v0, sel_bounds);
    uint64_t result = CGRectIsEmpty(v22);
    if ((result & 1) == 0)
    {
      objc_msgSend(v0, sel_bounds);
      double v4 = v3;
      double v6 = v5;
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 296))() & 1) == 0) {
        goto LABEL_19;
      }
      char v19 = v0;
      uint64_t v7 = outlined bridged method (ob) of @objc CALayer.sublayers.getter(objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView], sel_layer));
      if (v7) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = MEMORY[0x1E4FBC860];
      }
      if ((unint64_t)v8 >> 62) {
        goto LABEL_33;
      }
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9)
      {
LABEL_12:
        uint64_t result = self;
        if (v9 >= 1)
        {
          objc_super v10 = (void *)result;
          uint64_t v11 = 0;
          do
          {
            if ((v8 & 0xC000000000000001) != 0) {
              id v12 = (id)MEMORY[0x1C87744F0](v11, v8);
            }
            else {
              id v12 = *(id *)(v8 + 8 * v11 + 32);
            }
            uint64_t v13 = v12;
            ++v11;
            objc_msgSend(v10, sel_begin);
            objc_msgSend(v10, sel_setDisableActions_, 1);
            objc_msgSend(v13, sel_setFrame_, 0.0, 0.0, v4, v6);
            objc_msgSend(v10, sel_commit);
          }
          while (v9 != v11);
          goto LABEL_18;
        }
        __break(1u);
      }
      else
      {
        while (1)
        {
LABEL_18:
          swift_bridgeObjectRelease();
          objc_super v1 = v19;
LABEL_19:
          id v14 = objc_msgSend(v1, sel_subviews);
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
          unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v15 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v8) {
              goto LABEL_27;
            }
          }
          else
          {
            uint64_t v8 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (!v8) {
              goto LABEL_27;
            }
          }
          if (v8 >= 1) {
            break;
          }
          __break(1u);
LABEL_33:
          swift_bridgeObjectRetain();
          uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v9) {
            goto LABEL_12;
          }
        }
        for (uint64_t i = 0; i != v8; ++i)
        {
          if ((v15 & 0xC000000000000001) != 0) {
            id v17 = (id)MEMORY[0x1C87744F0](i, v15);
          }
          else {
            id v17 = *(id *)(v15 + 8 * i + 32);
          }
          uint64_t v18 = v17;
          objc_msgSend(v17, sel_setFrame_, 0.0, 0.0, v4, v6);
        }
LABEL_27:
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void closure #1 in closure #1 in SharedContentVideoView.configure(with:)(uint64_t a1, uint64_t a2)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 296))() & 1) == 0)
  {
    double v4 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView);
    id v5 = objc_msgSend(v4, sel_layer);
    SharedContentVideoView.ViewModel.contentsRect.getter();
    objc_msgSend(v5, sel_setContentsRect_, 0.0, 0.0);

    id v6 = objc_msgSend(v4, sel_layer);
    long long v7 = *(_OWORD *)(a2 + 56);
    v11[0] = *(_OWORD *)(a2 + 40);
    v11[1] = v7;
    long long v8 = *(_OWORD *)(a2 + 88);
    v11[2] = *(_OWORD *)(a2 + 72);
    v11[3] = v8;
    long long v9 = *(_OWORD *)(a2 + 120);
    v11[4] = *(_OWORD *)(a2 + 104);
    v11[5] = v9;
    long long v10 = *(_OWORD *)(a2 + 152);
    v11[6] = *(_OWORD *)(a2 + 136);
    v11[7] = v10;
    objc_msgSend(v6, sel_setTransform_, v11);
  }
}

id SharedContentVideoView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Int SharedContentVideoView.ViewModel.hashValue.getter()
{
  return Hasher._finalize()();
}

void SharedContentVideoView.ViewModel.hash(into:)()
{
  uint64_t v1 = v0;
  outlined init with copy of Conversation?(v0, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  uint64_t v2 = v9[3];
  if (!v9[3])
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    goto LABEL_5;
  }
  uint64_t v3 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  Swift::UInt v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  char v6 = v5;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  if (v6)
  {
LABEL_5:
    Hasher._combine(_:)(0);
    goto LABEL_6;
  }
  Hasher._combine(_:)(1u);
  Hasher._combine(_:)(v4);
LABEL_6:
  memcpy(v9, (const void *)(v1 + 40), sizeof(v9));
  CATransform3D.hash(into:)();
  SharedContentVideoView.ViewModel.contentsRect.getter();
  CGRect.hash(into:)(0.0, 0.0, v7, v8);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SharedContentVideoView.ViewModel()
{
  return Hasher._finalize()();
}

uint64_t outlined init with copy of SharedContentVideoView.ViewModel(uint64_t a1, uint64_t a2)
{
  return a2;
}

void partial apply for closure #1 in closure #1 in SharedContentVideoView.configure(with:)()
{
  closure #1 in closure #1 in SharedContentVideoView.configure(with:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void CGRect.hash(into:)()
{
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_0_15(v1);
  OUTLINED_FUNCTION_0_15(v0);
  v4.origin.x = OUTLINED_FUNCTION_6_2();
  CGFloat Width = CGRectGetWidth(v4);
  OUTLINED_FUNCTION_0_15(*(Swift::UInt64 *)&Width);
  v5.origin.x = OUTLINED_FUNCTION_6_2();
  CGFloat Height = CGRectGetHeight(v5);
  OUTLINED_FUNCTION_0_15(*(Swift::UInt64 *)&Height);
}

uint64_t outlined bridged method (ob) of @objc CALayer.sublayers.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_sublayers);

  if (!v2) {
    return 0;
  }
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CALayer);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t lazy protocol witness table accessor for type SharedContentVideoView.ViewModel and conformance SharedContentVideoView.ViewModel()
{
  unint64_t result = lazy protocol witness table cache variable for type SharedContentVideoView.ViewModel and conformance SharedContentVideoView.ViewModel;
  if (!lazy protocol witness table cache variable for type SharedContentVideoView.ViewModel and conformance SharedContentVideoView.ViewModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SharedContentVideoView.ViewModel and conformance SharedContentVideoView.ViewModel);
  }
  return result;
}

uint64_t type metadata accessor for SharedContentVideoView()
{
  return self;
}

uint64_t initializeWithCopy for SharedContentVideoView.ViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x80uLL);
  return a1;
}

uint64_t assignWithCopy for SharedContentVideoView.ViewModel(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(void *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(void *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *((void *)a2 + 10);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(void *)(a1 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *((void *)a2 + 15);
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  *(void *)(a1 + 136) = *((void *)a2 + 17);
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  *(void *)(a1 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *((void *)a2 + 20);
  return a1;
}

void *__swift_memcpy168_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA8uLL);
}

uint64_t assignWithTake for SharedContentVideoView.ViewModel(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedContentVideoView.ViewModel(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 168))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedContentVideoView.ViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 168) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedContentVideoView.ViewModel()
{
  return &type metadata for SharedContentVideoView.ViewModel;
}

uint64_t specialized _ArrayProtocol.filter(_:)(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_32;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v18 = v3;
    unint64_t v5 = 0;
    uint64_t v21 = v3 & 0xFFFFFFFFFFFFFF8;
    unint64_t v22 = v3 & 0xC000000000000001;
    uint64_t v19 = i;
    unint64_t v23 = a2 & 0xC000000000000001;
    uint64_t v20 = v3 + 32;
    while (1)
    {
      if (v22)
      {
        id v6 = (id)MEMORY[0x1C87744F0](v5, v18);
      }
      else
      {
        if (v5 >= *(void *)(v21 + 16)) {
          goto LABEL_30;
        }
        id v6 = *(id *)(v20 + 8 * v5);
      }
      double v7 = v6;
      if (__OFADD__(v5++, 1)) {
        goto LABEL_31;
      }
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
        if (!v9) {
          goto LABEL_22;
        }
      }
      else
      {
        uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v9) {
          goto LABEL_22;
        }
      }
      id v10 = v23 ? (id)MEMORY[0x1C87744F0](0, a2) : *(id *)(a2 + 32);
      uint64_t v3 = (uint64_t)v10;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
      char v11 = static NSObject.== infix(_:_:)();

      if ((v11 & 1) == 0) {
        break;
      }
LABEL_13:

      swift_bridgeObjectRelease();
LABEL_23:
      if (v5 == v19)
      {
        uint64_t v16 = v24;
        goto LABEL_34;
      }
    }
    if (v9 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      goto LABEL_23;
    }
    uint64_t v12 = 5;
    while (1)
    {
      uint64_t v3 = v12 - 4;
      id v13 = v23 ? (id)MEMORY[0x1C87744F0](v12 - 4, a2) : *(id *)(a2 + 8 * v12);
      id v14 = v13;
      uint64_t v15 = v12 - 3;
      if (__OFADD__(v3, 1)) {
        break;
      }
      uint64_t v3 = static NSObject.== infix(_:_:)();

      if (v3) {
        goto LABEL_13;
      }
      ++v12;
      if (v15 == v9) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    ;
  }
  uint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_34:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t specialized Sequence.flatMap<A>(_:)(unint64_t a1, void *a2, double a3)
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v9 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87744F0](i - 4, a1) : *(id *)(a1 + 8 * i);
      id v10 = v9;
      uint64_t v11 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v14 = v9;
      closure #5 in LocalParticipantControlsView.layoutViews()(&v14, a2, &v13, a3);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      specialized Array.append<A>(contentsOf:)();
      if (v11 == v7)
      {

        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }

  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;

  long long v4 = a1;
  unint64_t v22 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_11;
  }
  unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; unint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v20 = v4 & 0xC000000000000001;
    a3 = -a3;
    id v6 = 4;
    uint64_t v19 = v5;
    while (1)
    {
      uint64_t v7 = v20 ? (id)MEMORY[0x1C87744F0](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
      double v8 = v7;
      id v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      id v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1C3769610;
      uint64_t v11 = v4;
      uint64_t v12 = objc_msgSend(v8, sel_bottomAnchor);
      uint64_t v13 = objc_msgSend(a2, sel_bottomAnchor);
      id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, a3);

      *(void *)(v10 + 32) = v14;
      uint64_t v15 = objc_msgSend(v8, sel_centerXAnchor);
      uint64_t v16 = objc_msgSend(a2, sel_centerXAnchor);
      id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

      long long v4 = v11;
      *(void *)(v10 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v17;
      specialized Array._endMutation()();

      specialized Array.append<A>(contentsOf:)();
      ++v6;
      if (v9 == v19)
      {

        swift_bridgeObjectRelease();
        return v22;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }

  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

Swift::Void __swiftcall LocalParticipantControlsView.updateViews()()
{
  uint64_t v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  uint64_t v65 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(SymbolImageDescribers.LocalParticipantView, UIControl)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3769B20;
  *(unsigned char *)(inited + 32) = 1;
  unint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton];
  *(void *)(inited + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v5;
  *(unsigned char *)(inited + 48) = 0;
  id v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton];
  *(void *)(inited + 56) = v6;
  *(unsigned char *)(inited + 64) = 2;
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton];
  *(void *)(inited + 72) = v7;
  *(unsigned char *)(inited + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 3;
  double v8 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton];
  *(void *)(inited + 88) = v8;
  *(unsigned char *)(inited + 96) = 11;
  id v9 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton];
  *(void *)(inited + 104) = v9;
  *(unsigned char *)(inited + 112) = 12;
  uint64_t v69 = v0;
  id v10 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton];
  *(void *)(inited + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v10;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIControl);
  lazy protocol witness table accessor for type SymbolImageDescribers.LocalParticipantView and conformance SymbolImageDescribers.LocalParticipantView();
  id v11 = v5;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  id v15 = v9;
  id v16 = v10;
  uint64_t v17 = Dictionary.init(dictionaryLiteral:)();
  int64_t v18 = 0;
  uint64_t v19 = *(void *)(v17 + 64);
  uint64_t v66 = v17 + 64;
  uint64_t v68 = v17;
  uint64_t v20 = 1 << *(unsigned char *)(v17 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v67 = (unint64_t)(v20 + 63) >> 6;
  if ((v21 & v19) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v74 = (v22 - 1) & v22;
  int64_t v75 = v18;
  for (unint64_t i = __clz(__rbit64(v22)) | (v18 << 6); ; unint64_t i = __clz(__rbit64(v27)) + (v28 << 6))
  {
    id v30 = *(void **)(*(void *)(v68 + 56) + 8 * i);
    SymbolImageDescribers.LocalParticipantView.symbolImageDescription.getter(*(unsigned char *)(*(void *)(v68 + 48) + i), (uint64_t)v76);
    uint64_t v31 = v76[1];
    OUTLINED_FUNCTION_0_3();
    id v33 = *(uint64_t (**)(uint64_t))(v32 + 528);
    uint64_t v70 = v35;
    uint64_t v71 = v34;
    id v72 = v34;
    id v36 = v30;
    uint64_t v37 = swift_bridgeObjectRetain();
    unsigned __int8 v38 = v33(v37);
    id v39 = objc_msgSend(self, sel_currentDevice);
    id v40 = objc_msgSend(v39, sel_userInterfaceIdiom);

    uint64_t v73 = v31;
    if (v38 - 2 >= 2)
    {
      int64_t v41 = (void **)MEMORY[0x1E4FB28C8];
      if (!v38 && v40 != (id)1) {
        int64_t v41 = (void **)MEMORY[0x1E4FB28E0];
      }
    }
    else
    {
      int64_t v41 = (void **)MEMORY[0x1E4FB2998];
    }
    uint64_t v42 = *v41;
    uint64_t v43 = v77;
    int v44 = v78;
    uint64_t v45 = v79;
    uint64_t v46 = v80;
    uint64_t v47 = v76[2];
    id v81 = (id)v76[3];
    id v48 = v42;
    outlined release of BackgroundView<A>(&v81);
    type metadata accessor for InCallControlButton();
    if (swift_dynamicCastClass())
    {
      id v49 = v36;
      uint64_t v50 = 256;
      if (!v44) {
        uint64_t v50 = 0;
      }
      v82[0] = v70;
      v82[1] = v73;
      void v82[2] = v47;
      v82[3] = v48;
      v82[4] = v50 | v43;
      v82[5] = v45;
      v82[6] = v46;
      v82[7] = v71;
      OUTLINED_FUNCTION_6_63();
      (*(void (**)(void *))(v51 + 344))(v82);
      unint64_t v22 = v74;
      int64_t v18 = v75;
      uint64_t v52 = v72;
    }
    else
    {
      swift_bridgeObjectRelease();

      uint64_t v52 = v72;
      id v49 = v72;
      unint64_t v22 = v74;
      int64_t v18 = v75;
    }

    objc_msgSend(v36, sel_setNeedsLayout);
    swift_bridgeObjectRelease();

    if (v22) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v24 = __OFADD__(v18, 1);
    int64_t v25 = v18 + 1;
    uint64_t v26 = v69;
    if (v24)
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v67) {
      goto LABEL_31;
    }
    unint64_t v27 = *(void *)(v66 + 8 * v25);
    int64_t v28 = v25;
    if (!v27)
    {
      int64_t v28 = v25 + 1;
      if (v25 + 1 >= v67) {
        goto LABEL_31;
      }
      unint64_t v27 = *(void *)(v66 + 8 * v28);
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v25 + 2 >= v67) {
          goto LABEL_31;
        }
        unint64_t v27 = *(void *)(v66 + 8 * v28);
        if (!v27) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v74 = (v27 - 1) & v27;
    int64_t v75 = v28;
  }
  int64_t v29 = v25 + 3;
  if (v29 >= v67)
  {
LABEL_31:
    swift_release();
    OUTLINED_FUNCTION_6_63();
    if ((*(uint64_t (**)(void))(v53 + 784))())
    {
      LocalParticipantControlsView.addVideoMessageControls()();
    }
    else
    {
      OUTLINED_FUNCTION_6_63();
      uint64_t v55 = (void *)(*(uint64_t (**)(void))(v54 + 312))();
      if (v55)
      {
        uint64_t v56 = v55;
        id v57 = objc_msgSend(v55, sel_view);

        if (!v57) {
          goto LABEL_41;
        }
        id v58 = objc_msgSend(v57, sel_superview);

        if (v58)
        {

          OUTLINED_FUNCTION_6_63();
          if ((*(uint64_t (**)(void))(v59 + 792))()) {
            LocalParticipantControlsView.removeVideoMessageControls()();
          }
        }
      }
    }
    OUTLINED_FUNCTION_6_63();
    uint64_t v61 = (uint64_t)v65;
    (*(void (**)(void))(v60 + 600))();
    OUTLINED_FUNCTION_0_3();
    unint64_t v63 = (*(uint64_t (**)(uint64_t))(v62 + 936))(v61);
    _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0(v61, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
    char v64 = v26;
    specialized Sequence.forEach(_:)(v63, v64);
    swift_bridgeObjectRelease();
    objc_msgSend(v64, sel_setNeedsLayout);
    return;
  }
  unint64_t v27 = *(void *)(v66 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v67) {
      goto LABEL_31;
    }
    unint64_t v27 = *(void *)(v66 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

void LocalParticipantControlsView.changed(_:from:)(unsigned char *a1, unsigned char *a2)
{
  uint64_t v3 = v2;
  uint64_t v139 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_10_5();
  uint64_t v132 = v7;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_42();
  uint64_t v134 = v9;
  uint64_t v138 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_10_5();
  uint64_t v136 = v11;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_42();
  v140 = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v15 = OUTLINED_FUNCTION_8(v14);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_10_5();
  uint64_t v135 = v16;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v131 - v18;
  OUTLINED_FUNCTION_0_3();
  uint64_t v21 = *(uint64_t (**)(unsigned char *))(v20 + 936);
  uint64_t v141 = a1;
  unint64_t v22 = v21(a1);
  unint64_t v23 = v21(a2);
  swift_bridgeObjectRetain();
  unint64_t v24 = specialized _ArrayProtocol.filter(_:)(v23, v22);
  unint64_t v25 = v24;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v26 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v26)
  {
    if (v26 < 1)
    {
      __break(1u);
      goto LABEL_113;
    }
    for (uint64_t i = 0; i != v26; ++i)
    {
      if ((v25 & 0xC000000000000001) != 0) {
        id v28 = (id)MEMORY[0x1C87744F0](i, v25);
      }
      else {
        id v28 = *(id *)(v25 + 8 * i + 32);
      }
      int64_t v29 = v28;
      objc_msgSend(v28, sel_removeFromSuperview);
    }
  }
  swift_bridgeObjectRelease_n();
  unint64_t v133 = a2;
  uint64_t v137 = v19;
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v142 = v3;
  if (!v30) {
    goto LABEL_23;
  }
  if (v30 < 1)
  {
LABEL_113:
    __break(1u);
    return;
  }
  for (uint64_t j = 0; j != v30; ++j)
  {
    if ((v22 & 0xC000000000000001) != 0) {
      id v32 = (id)MEMORY[0x1C87744F0](j, v22);
    }
    else {
      id v32 = *(id *)(v22 + 8 * j + 32);
    }
    id v33 = v32;
    type metadata accessor for InCallControlButton();
    if (swift_dynamicCastClass())
    {
      uint64_t v34 = one-time initialization token for localCameraControls;
      id v35 = v33;
      if (v34 != -1) {
        swift_once();
      }
      OUTLINED_FUNCTION_6_63();
      uint64_t v37 = *(void (**)(uint64_t))(v36 + 392);
      uint64_t v38 = swift_bridgeObjectRetain();
      v37(v38);

      uint64_t v3 = v142;
    }
    objc_msgSend(v3, sel_addSubview_, v33);
  }
LABEL_23:
  swift_bridgeObjectRelease();
  id v39 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x168);
  OUTLINED_FUNCTION_31_41();
  id v40 = (void *)v39();

  int64_t v41 = v141;
  if (v40)
  {
    uint64_t v42 = (uint64_t)v137;
    outlined init with copy of ConversationControlsRecipe?((uint64_t)&v141[*(int *)(v138 + 28)], (uint64_t)v137);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v42, 1, v139);
    outlined destroy of ConversationControlsRecipe?(v42);
    if (EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_31_41();
      int v44 = (void *)v39();
      if (v44)
      {
        uint64_t v45 = v44;
        objc_msgSend(v44, sel_removeFromSuperview);
      }
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x170))(0);
    }
  }
  id v46 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v46);

  uint64_t v47 = &selRef_ringButton;
  objc_msgSend(*(id *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_collapseButton), sel_addTarget_action_forControlEvents_, v3, sel_handleCollapseButtonTapped, 64);
  BOOL v49 = VideoMessageController.State.rawValue.getter(v41[7]) == 0x7964616552746F6ELL && v48 == 0xE800000000000000;
  if (v49)
  {
    swift_bridgeObjectRelease();
    uint64_t v50 = v140;
    _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOcTm_0();
    goto LABEL_40;
  }
  OUTLINED_FUNCTION_19_57();
  OUTLINED_FUNCTION_23_32();
  uint64_t v50 = v140;
  _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOcTm_0();
  if (v30)
  {
LABEL_40:
    uint64_t v54 = _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0((uint64_t)v50, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
    goto LABEL_41;
  }
  if (VideoMessageController.State.rawValue.getter(v50[7]) == 0x616C696176616E75 && v51 == 0xEB00000000656C62)
  {
    swift_bridgeObjectRelease();
    uint64_t v53 = v136;
    outlined init with take of LocalParticipantControlsView.ViewModel();
  }
  else
  {
    OUTLINED_FUNCTION_17_63();
    OUTLINED_FUNCTION_23_32();
    uint64_t v53 = v136;
    outlined init with take of LocalParticipantControlsView.ViewModel();
    if ((v30 & 1) == 0)
    {
      _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0(v53, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
      goto LABEL_47;
    }
  }
  char v63 = *(unsigned char *)(v53 + 8);
  uint64_t v54 = _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0(v53, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v63) {
    goto LABEL_41;
  }
LABEL_47:
  static Platform.current.getter();
  OUTLINED_FUNCTION_44_23();
  if (v49) {
    goto LABEL_41;
  }
  uint64_t v64 = v135;
  outlined init with copy of ConversationControlsRecipe?((uint64_t)&v41[*(int *)(v138 + 28)], v135);
  if (__swift_getEnumTagSinglePayload(v64, 1, v139) == 1)
  {
    outlined destroy of ConversationControlsRecipe?(v64);
    goto LABEL_82;
  }
  uint64_t v79 = v134;
  outlined init with take of LocalParticipantControlsView.ViewModel();
  unsigned __int8 v80 = v142;
  OUTLINED_FUNCTION_31_41();
  id v81 = (void *)v39();

  if (!v81)
  {
    uint64_t v85 = v132;
    _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOcTm_0();
    id v86 = objc_allocWithZone((Class)type metadata accessor for CallAgainHUDView());
    uint64_t v87 = CallAgainHUDView.init(recipe:)(v85);
    objc_msgSend(v87, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v87, sel_setAccessibilityViewIsModal_, 1);
    OUTLINED_FUNCTION_20_61(*(void **)&v87[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageButton], v88, v89, (uint64_t)sel_handleVideoMessageButtonTapped);
    OUTLINED_FUNCTION_20_61(*(void **)&v87[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_callBackButton], v90, v91, (uint64_t)sel_callBack);
    OUTLINED_FUNCTION_20_61(*(void **)&v87[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_showCallDetailsButton], v92, v93, (uint64_t)sel_showCallDetails);
    OUTLINED_FUNCTION_20_61(*(void **)&v87[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_closeButton], v94, v95, (uint64_t)sel_close);
    objc_msgSend(v80, sel_addSubview_, v87);
    uint64_t v96 = *(void (**)(char *))((*MEMORY[0x1E4FBC8C8] & *v80) + 0x170);
    uint64_t v83 = v87;
    v96(v87);
    uint64_t v79 = v134;
    goto LABEL_72;
  }
  OUTLINED_FUNCTION_31_41();
  uint64_t v82 = v39();
  if (v82)
  {
    uint64_t v83 = (char *)v82;
    uint64_t v84 = v132;
    _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOcTm_0();
    (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *(void *)v83) + 0xC8))(v84);
LABEL_72:
  }
  OUTLINED_FUNCTION_31_41();
  uint64_t v97 = v39();
  if (v97)
  {
    uint64_t v98 = (void *)v97;
    id v99 = *(id *)(v97 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageButton);

    if (VideoMessageController.State.rawValue.getter(v141[7]) == 0x616C696176616E75 && v100 == 0xEB00000000656C62)
    {
      swift_bridgeObjectRelease();
      char v102 = 1;
    }
    else
    {
      char v102 = OUTLINED_FUNCTION_17_63();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v99, sel_setEnabled_, (v102 & 1) == 0);
  }
  _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0(v79, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  int64_t v41 = v141;
LABEL_82:
  char v103 = v142;
  char v104 = *(void **)((char *)v142 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoPauseButton);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  MEMORY[0x1C87730B0](0xD000000000000021, 0x80000001C37BE890);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v105 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  objc_msgSend(v104, sel_addAction_forControlEvents_, v105, 64);

  int v106 = v41[7];
  if ((v106 & 0xFE) == 2)
  {
    uint64_t v107 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v108 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v103) + 0x388))(0);
    id v109 = *(uint64_t (**)(void))((*v107 & *v103) + 0x150);
    uint64_t v110 = (void *)((uint64_t (*)(uint64_t))v109)(v108);
    OUTLINED_FUNCTION_14_75();
    OUTLINED_FUNCTION_0_3();
    (*(void (**)(void))(v111 + 344))();

    v112 = (void *)v109();
    (*(void (**)(uint64_t))((*v107 & *v112) + 0xF8))(3);

LABEL_84:
    uint64_t v47 = &selRef_ringButton;
    goto LABEL_41;
  }
  int v113 = v133[7];
  if (v113 == 5)
  {
    uint64_t v114 = VideoMessageController.State.rawValue.getter(v41[7]);
    uint64_t v116 = v115;
    if (v114 == VideoMessageController.State.rawValue.getter(5) && v116 == v117)
    {
      uint64_t v54 = swift_bridgeObjectRelease_n();
    }
    else
    {
      char v119 = OUTLINED_FUNCTION_3_1();
      swift_bridgeObjectRelease();
      uint64_t v54 = swift_bridgeObjectRelease();
      if ((v119 & 1) == 0)
      {
        OUTLINED_FUNCTION_6_63();
        uint64_t v54 = (*(uint64_t (**)(void))(v120 + 904))(0);
        goto LABEL_84;
      }
    }
  }
  uint64_t v47 = &selRef_ringButton;
  if (v106 != 6)
  {
    if (v106 == 5)
    {
      uint64_t v121 = VideoMessageController.State.rawValue.getter(v113);
      uint64_t v123 = v122;
      if (v121 == VideoMessageController.State.rawValue.getter(5) && v123 == v124)
      {
        uint64_t v54 = swift_bridgeObjectRelease_n();
      }
      else
      {
        char v126 = OUTLINED_FUNCTION_3_1();
        swift_bridgeObjectRelease();
        uint64_t v54 = swift_bridgeObjectRelease();
        uint64_t v47 = &selRef_ringButton;
        if ((v126 & 1) == 0)
        {
          v127 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v142) + 0x150))(v54);
          OUTLINED_FUNCTION_14_75();
          OUTLINED_FUNCTION_0_3();
          (*(void (**)(void))(v128 + 344))();

          LocalParticipantControlsView.startElapsedTimeCounter()();
          goto LABEL_41;
        }
      }
    }
    if (v113 == 6)
    {
      if (VideoMessageController.State.rawValue.getter(v106) == 0x6552657669746361 && v129 == 0xEF676E6964726F63)
      {
        uint64_t v54 = swift_bridgeObjectRelease();
      }
      else
      {
        OUTLINED_FUNCTION_13_73();
        uint64_t v54 = OUTLINED_FUNCTION_23_32();
      }
    }
    goto LABEL_41;
  }
  LocalParticipantControlsView.showLoading()();
LABEL_41:
  uint64_t v55 = (char *)v142;
  uint64_t v56 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v142) + 0x228);
  if ((((uint64_t (*)(uint64_t))v56)(v54) & 0x10000) != 0)
  {
    static Platform.current.getter();
    OUTLINED_FUNCTION_44_23();
    if (!v49)
    {
      uint64_t v59 = *(void **)&v55[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton];
      objc_msgSend(v59, v47[201], v55, sel_handleEffectsTapped, 64);
      uint64_t v60 = *(void **)&v55[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_controlsLayoutGuide];
      objc_msgSend(v55, sel_addLayoutGuide_, v60);
      if (static Platform.current.getter() == 1)
      {
        id v61 = objc_msgSend(v60, sel_widthAnchor);
        id v62 = objc_msgSend(v61, sel_constraintEqualToConstant_, 290.0);
      }
      else
      {
        id v65 = objc_msgSend(v60, sel_leadingAnchor);
        id v61 = objc_msgSend(v59, sel_leadingAnchor);
        id v62 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v61);

        uint64_t v55 = (char *)v142;
      }

      if ((v56() & 0x1000000) != 0) {
        id v66 = objc_msgSend(*(id *)&v55[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton], sel_trailingAnchor);
      }
      else {
        id v66 = objc_msgSend(v55, sel_trailingAnchor);
      }
      id v67 = v66;
      v140 = (unsigned char *)self;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = xmmword_1C3769580;
      id v69 = objc_msgSend(v60, sel_topAnchor);
      id v70 = objc_msgSend(v59, sel_topAnchor);
      id v71 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v70);

      *(void *)(v68 + 32) = v71;
      id v72 = objc_msgSend(v60, sel_bottomAnchor);
      id v73 = objc_msgSend(v59, sel_bottomAnchor);
      id v74 = objc_msgSend(v72, sel_constraintEqualToAnchor_, v73);

      *(void *)(v68 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v74;
      id v75 = objc_msgSend(v60, sel_trailingAnchor);
      id v76 = objc_msgSend(v75, sel_constraintEqualToAnchor_, v67);

      *(void *)(v68 + 48) = v76;
      *(void *)(v68 + 56) = v62;
      uint64_t v143 = v68;
      specialized Array._endMutation()();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      id v77 = v62;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v140, sel_activateConstraints_, isa);

      int64_t v41 = v141;
      uint64_t v55 = (char *)v142;
      uint64_t v47 = &selRef_ringButton;
    }
  }
  if (v41[1] == 1) {
    OUTLINED_FUNCTION_21_56(*(void **)&v55[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton], v57, v58, (uint64_t)sel_handleCameraBlurTapped);
  }
  if (*v41 == 1) {
    OUTLINED_FUNCTION_21_56(*(void **)&v55[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton], v57, v58, (uint64_t)sel_handleCinematicFramingTapped);
  }
  if (v41[3] == 1) {
    objc_msgSend(*(id *)&v55[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton], v47[201], v55, sel_handleCameraFlipTapped, 64);
  }
  if (v41[4] == 1) {
    objc_msgSend(*(id *)&v55[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_rotateButton], v47[201], v55, sel_handleRotateButtonTapped, 64);
  }
  if (v41[5] == 1) {
    OUTLINED_FUNCTION_21_56(*(void **)&v55[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton], v57, v58, (uint64_t)sel_handleReactionEffectGestureTapped);
  }
  if (v41[6] == 1) {
    OUTLINED_FUNCTION_21_56(*(void **)&v55[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton], v57, v58, (uint64_t)sel_handleStudioLightTapped);
  }
  LocalParticipantControlsView.updateViews()();
  LocalParticipantControlsView.updateControlsAlpha(animated:)(0);
}

Swift::Void __swiftcall LocalParticipantControlsView.layoutViews()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_10_5();
  uint64_t v320 = v4;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v5);
  v328 = (char *)&v320 - v6;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v7);
  v327 = (char *)&v320 - v8;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_42();
  uint64_t v332 = v10;
  uint64_t v11 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_10_5();
  uint64_t v365 = v13;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_42();
  uint64_t v364 = v15;
  OUTLINED_FUNCTION_0_3();
  uint64_t v17 = v16 + 528;
  uint64_t v18 = *(void (**)(void))(v16 + 528);
  v18();
  OUTLINED_FUNCTION_44_23();
  if (v20)
  {
    if (v19)
    {
      Layout.LocalParticipantViewCameraControls.init()((uint64_t)v374);
      double v21 = *(double *)v374;
    }
    else
    {
      Layout.LocalParticipantViewCameraControls.init()((uint64_t)v374);
      double v21 = *(double *)&v374[7];
    }
  }
  else
  {
    Layout.LocalParticipantViewCameraControls.init()((uint64_t)v374);
    double v21 = *(double *)&v374[3];
  }
  uint64_t v22 = static Platform.current.getter();
  unsigned __int8 v23 = ((uint64_t (*)(uint64_t))v18)(v22);
  double v24 = LocalParticipantControlsView.Style.bottomMargin.getter(v23);
  v18();
  OUTLINED_FUNCTION_45_20();
  if (v19)
  {
    Layout.LocalParticipantViewCameraControls.init()((uint64_t)v375);
    id v28 = &v377;
  }
  else
  {
    uint64_t v27 = 0;
    if (v26 != 2) {
      goto LABEL_11;
    }
    Layout.LocalParticipantViewCameraControls.init()((uint64_t)v375);
    id v28 = &v376;
  }
  uint64_t v27 = *v28;
  uint64_t v25 = static Platform.current.getter();
LABEL_11:
  uint64_t v329 = v27;
  v358 = v18;
  uint64_t v359 = v17;
  char v29 = ((uint64_t (*)(uint64_t))v18)(v25);
  double v30 = LocalParticipantControlsView.Style.buttonSize.getter(v29);
  type metadata accessor for AppUtilities();
  BOOL v367 = static AppUtilities.isRTL.getter();
  Layout.LocalParticipantViewCameraControls.init()((uint64_t)v378);
  double v354 = v379;
  static Platform.current.getter();
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v380);
  unsigned int v31 = *MEMORY[0x1E4FBBEB0];
  id v32 = *(void (**)(void))(v12 + 104);
  uint64_t v33 = v364;
  OUTLINED_FUNCTION_5_118();
  v32();
  id v369 = v1;
  int v34 = *MEMORY[0x1E4FBBEA8];
  uint64_t v35 = v365;
  OUTLINED_FUNCTION_5_118();
  v32();
  double v36 = OUTLINED_FUNCTION_23_60();
  double v351 = v37;
  double v352 = v36;
  double v350 = v38;
  double v353 = v39;
  id v40 = *(void (**)(void))(v12 + 8);
  OUTLINED_FUNCTION_15_18();
  v40();
  OUTLINED_FUNCTION_15_18();
  v40();
  unsigned int v366 = v31;
  OUTLINED_FUNCTION_5_118();
  v32();
  OUTLINED_FUNCTION_5_118();
  v32();
  double v41 = OUTLINED_FUNCTION_41_28();
  double v45 = specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(v42, v43, v44, v41, v21, v30, v30);
  double v347 = v46;
  double v348 = v45;
  double v346 = v47;
  double v349 = v48;
  OUTLINED_FUNCTION_15_18();
  v40();
  OUTLINED_FUNCTION_15_18();
  v40();
  objc_msgSend(v369, sel_bounds);
  double v49 = CGRectGetHeight(v381) - v24 - v30;
  OUTLINED_FUNCTION_5_118();
  v32();
  int v368 = v34;
  OUTLINED_FUNCTION_5_118();
  v32();
  double v50 = OUTLINED_FUNCTION_41_28();
  double v360 = specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(v51, v52, v53, v50, v49, v30, v30);
  CGFloat v361 = v54;
  CGFloat v362 = v55;
  double v370 = v56;
  OUTLINED_FUNCTION_15_18();
  v40();
  OUTLINED_FUNCTION_15_18();
  v40();
  objc_msgSend(v369, sel_bounds);
  CGRectGetWidth(v382);
  double v355 = v21;
  objc_msgSend(v369, sel_bounds);
  CGRectGetHeight(v383);
  OUTLINED_FUNCTION_5_118();
  v32();
  OUTLINED_FUNCTION_5_118();
  v32();
  double v57 = OUTLINED_FUNCTION_23_60();
  double v59 = v58;
  double v61 = v60;
  double v63 = v62;
  OUTLINED_FUNCTION_15_18();
  v40();
  OUTLINED_FUNCTION_15_18();
  v40();
  objc_msgSend(v369, sel_bounds);
  CGFloat MidX = CGRectGetMidX(v384);
  double v333 = v30 * 0.5;
  double v65 = MidX - v30 * 0.5;
  objc_msgSend(v369, sel_bounds);
  CGFloat Height = CGRectGetHeight(v385);
  double v356 = v24;
  double v67 = Height - v24 - v30;
  OUTLINED_FUNCTION_5_118();
  v32();
  uint64_t v68 = v369;
  v336 = v32;
  uint64_t v337 = v12 + 104;
  OUTLINED_FUNCTION_7_110();
  v32();
  double v343 = v30;
  double v357 = specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(v33, v35, v68, v65, v67, v30, v30);
  CGFloat v344 = v69;
  CGFloat v345 = v70;
  CGFloat v363 = v71;
  OUTLINED_FUNCTION_15_18();
  v40();
  uint64_t v338 = v12 + 8;
  uint64_t v339 = v11;
  v335 = v40;
  ((void (*)(uint64_t, uint64_t))v40)(v33, v11);
  OUTLINED_FUNCTION_28_46();
  if (v72) {
    double v73 = v57;
  }
  else {
    double v73 = v360;
  }
  if (v72) {
    double v74 = v59;
  }
  else {
    double v74 = v361;
  }
  if (v72) {
    double v75 = v61;
  }
  else {
    double v75 = v362;
  }
  double v76 = v63;
  if (!v72) {
    double v63 = v370;
  }
  CGFloat v334 = v57;
  if (v72) {
    double v57 = v360;
  }
  CGFloat v340 = v59;
  CGFloat v341 = v61;
  if (v72) {
    double v59 = v361;
  }
  if (v72) {
    double v61 = v362;
  }
  CGFloat v342 = v76;
  if (v72) {
    double v77 = v370;
  }
  else {
    double v77 = v76;
  }
  double v78 = v352;
  if (v72) {
    double v79 = v352;
  }
  else {
    double v79 = v348;
  }
  if (v72) {
    double v80 = v351;
  }
  else {
    double v80 = v347;
  }
  if (v72) {
    double v81 = v350;
  }
  else {
    double v81 = v346;
  }
  if (v72) {
    double v82 = v353;
  }
  else {
    double v82 = v349;
  }
  if (v72) {
    double v78 = v348;
  }
  double v352 = v78;
  if (v72) {
    double v83 = v347;
  }
  else {
    double v83 = v351;
  }
  double v351 = v83;
  if (v72) {
    double v84 = v346;
  }
  else {
    double v84 = v350;
  }
  double v350 = v84;
  if (v72) {
    double v85 = v349;
  }
  else {
    double v85 = v353;
  }
  double v353 = v85;
  objc_msgSend(*(id *)((char *)v68 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_collapseButton), sel_setFrame_, v79, v80, v81, v82, v320);
  double v347 = COERCE_DOUBLE(OUTLINED_FUNCTION_37_32(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton));
  double v321 = v59;
  double v322 = v57;
  double v330 = v77;
  double v331 = v61;
  objc_msgSend(*(id *)&v347, v86, v57, v59, v61, v77);
  double v346 = COERCE_DOUBLE(OUTLINED_FUNCTION_37_32(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton));
  double v325 = v74;
  double v326 = v73;
  double v323 = v63;
  double v324 = v75;
  objc_msgSend(*(id *)&v346, v87, v73, v74, v75, v63);
  OUTLINED_FUNCTION_11_9();
  double v348 = *(double *)(v88 + 432);
  *(void *)&double v349 = v88 + 432;
  if ((*(uint64_t (**)(void))&v348)())
  {
    OUTLINED_FUNCTION_38_30();
    uint64_t v90 = (void *)(*(uint64_t (**)(void))(v89 + 456))();
    objc_msgSend(v90, sel_sizeToFit);
  }
  char v91 = static Platform.current.getter();
  CGFloat v92 = v357;
  if (v91 != 1)
  {
    OUTLINED_FUNCTION_35_28();
    v93();
    OUTLINED_FUNCTION_45_20();
    if (v19 || (OUTLINED_FUNCTION_38_30(), ((*(uint64_t (**)(void))(v94 + 552))() & 1) != 0))
    {
      v390.origin.x = v360;
      v390.origin.y = v361;
      v390.size.double width = v362;
      v390.size.double height = v370;
      double MaxX = CGRectGetMaxX(v390);
      v391.origin.x = v92;
      CGFloat v107 = v344;
      double v61 = v345;
      v391.origin.y = v344;
      CGFloat v105 = v363;
      v391.size.double width = v363;
      v391.size.double height = v345;
      CGFloat MinX = CGRectGetMinX(v391);
      double v109 = v333;
      double v103 = (MaxX + MinX) * 0.5 - v333;
      v392.origin.x = v92;
      v392.origin.y = v107;
      v392.size.double width = v105;
      v392.size.double height = v61;
      double v110 = CGRectGetMaxX(v392);
      v393.origin.x = v334;
      v393.origin.y = v340;
      v393.size.double width = v341;
      v393.size.double height = v342;
      CGFloat v104 = v107;
      double v63 = (v110 + CGRectGetMinX(v393)) * 0.5 - v109;
      double v59 = v343;
    }
    else
    {
      CGFloat v95 = v334;
      v386.origin.x = v334;
      v386.origin.y = v340;
      v386.size.double width = v341;
      v386.size.double height = v342;
      double v96 = CGRectGetMinX(v386);
      CGFloat v98 = v360;
      CGFloat v97 = v361;
      v387.origin.x = v360;
      v387.origin.y = v361;
      CGFloat v99 = v362;
      v387.size.double width = v362;
      double v100 = v370;
      v387.size.double height = v370;
      CGFloat v101 = CGRectGetMaxX(v387);
      double v59 = v343;
      double v102 = (v96 - v101 - (v59 + v59)) / 3.0;
      v388.origin.x = v98;
      v388.origin.y = v97;
      v388.size.double width = v99;
      v388.size.double height = v100;
      double v103 = CGRectGetMaxX(v388) + v102;
      v389.origin.x = v95;
      v389.origin.y = v340;
      v389.size.double width = v341;
      v389.size.double height = v342;
      double v63 = CGRectGetMinX(v389) - v102 - v59;
      CGFloat v104 = v344;
      double v61 = v345;
      CGFloat v105 = v363;
      CGFloat v92 = v357;
    }
    v394.origin.x = v92;
    v394.origin.y = v104;
    v394.size.double width = v105;
    v394.size.double height = v61;
    double MinY = CGRectGetMinY(v394);
    uint64_t v112 = v364;
    uint64_t v113 = v339;
    uint64_t v114 = v336;
    OUTLINED_FUNCTION_7_110();
    v114();
    uint64_t v115 = v365;
    OUTLINED_FUNCTION_7_110();
    v114();
    uint64_t v68 = v369;
    double v116 = specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(v112, v115, v369, v103, MinY, v59, v59);
    double v370 = v117;
    CGFloat v362 = v118;
    CGFloat v119 = v105;
    double v121 = v120;
    uint64_t v122 = v335;
    ((void (*)(uint64_t, uint64_t))v335)(v115, v113);
    OUTLINED_FUNCTION_13_80();
    v122();
    v395.origin.x = v92;
    v395.origin.y = v104;
    v395.size.double width = v119;
    v395.size.double height = v61;
    double v57 = CGRectGetMinY(v395);
    OUTLINED_FUNCTION_7_110();
    v114();
    OUTLINED_FUNCTION_7_110();
    v114();
    specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(v112, v115, v68, v63, v57, v59, v59);
    OUTLINED_FUNCTION_22_54();
    OUTLINED_FUNCTION_13_80();
    v122();
    OUTLINED_FUNCTION_13_80();
    v122();
    OUTLINED_FUNCTION_11_9();
    uint64_t v124 = *(uint64_t (**)(void))(v123 + 552);
    uint64_t v125 = v124();
    if ((v125 & 0x1000000000000) != 0)
    {
      OUTLINED_FUNCTION_28_46();
      if (v126) {
        double v128 = v116;
      }
      else {
        double v128 = v63;
      }
      double v129 = v370;
      if (!v126) {
        double v129 = v57;
      }
      double v130 = v362;
      if (v126)
      {
        double v131 = v121;
      }
      else
      {
        double v130 = v59;
        double v131 = v61;
      }
      uint64_t v125 = (uint64_t)objc_msgSend(v127, sel_setFrame_, v128, v129, v130, v131);
    }
    if ((((uint64_t (*)(uint64_t))v124)(v125) & 0x10000000000) != 0)
    {
      OUTLINED_FUNCTION_28_46();
      if (v132) {
        double v134 = v63;
      }
      else {
        double v134 = v116;
      }
      double v135 = v370;
      if (v132) {
        double v135 = v57;
      }
      double v136 = v362;
      if (v132) {
        double v136 = v59;
      }
      if (v132) {
        double v137 = v61;
      }
      else {
        double v137 = v121;
      }
      objc_msgSend(v133, sel_setFrame_, v134, v135, v136, v137);
    }
  }
  uint64_t v373 = MEMORY[0x1E4FBC860];
  id v138 = objc_msgSend(v68, sel_superview);
  if (v138)
  {
    uint64_t v139 = v138;
    objc_msgSend(v138, sel_bounds);
    OUTLINED_FUNCTION_22_54();
  }
  else
  {
    objc_msgSend(v68, sel_bounds);
    OUTLINED_FUNCTION_22_54();
  }
  double v140 = v355;
  double v141 = v356;
  double v142 = OUTLINED_FUNCTION_18_64();
  objc_msgSend(v68, sel_bounds);
  v406.origin.x = v143;
  v406.origin.y = v144;
  v406.size.double width = v145;
  v406.size.double height = v146;
  v396.origin.x = v63;
  v396.origin.y = v57;
  v396.size.double width = v59;
  v396.size.double height = v61;
  CGRect v397 = CGRectIntersection(v396, v406);
  CGFloat v362 = v142 - CGRectGetHeight(v397);
  OUTLINED_FUNCTION_11_9();
  char v148 = (void *)(*(uint64_t (**)(void))(v147 + 360))();
  double MaxY = v354;
  CGFloat v150 = v363;
  if (v148)
  {
    uint64_t v151 = v148;
    id v152 = objc_msgSend(v148, sel_superview);

    if (!v152)
    {
      id v165 = v151;
LABEL_106:

      uint64_t v68 = v369;
      goto LABEL_107;
    }
    id v153 = objc_msgSend(v151, sel_leadingAnchor);
    id v154 = objc_msgSend(v68, sel_leadingAnchor);
    id v155 = OUTLINED_FUNCTION_33_36();

    id v156 = objc_msgSend(v151, sel_trailingAnchor);
    id v157 = objc_msgSend(v68, sel_trailingAnchor);
    double v370 = COERCE_DOUBLE(OUTLINED_FUNCTION_33_36());

    id v158 = objc_msgSend(v151, sel_topAnchor);
    id v159 = objc_msgSend(v68, sel_topAnchor);
    id v160 = OUTLINED_FUNCTION_33_36();

    id v161 = objc_msgSend(v151, sel_bottomAnchor);
    id v162 = objc_msgSend(v68, sel_bottomAnchor);
    id v163 = objc_msgSend(v161, sel_constraintEqualToAnchor_constant_, v162, v362);

    if (MEMORY[0x1E4FBC860] >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v164 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v164 = *(void *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (__OFADD__(v164, 4))
    {
      __break(1u);
    }
    else
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v164 + 4, 1);
      specialized Array._endMutation()();
      id v155 = v155;
      MEMORY[0x1C87733A0]();
      OUTLINED_FUNCTION_14_78();
      if (!v20)
      {
LABEL_98:
        OUTLINED_FUNCTION_27_51();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v165 = *(id *)&v370;
        MEMORY[0x1C87733A0]();
        OUTLINED_FUNCTION_14_78();
        if (v20) {
          OUTLINED_FUNCTION_8_90();
        }
        OUTLINED_FUNCTION_27_51();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v166 = v160;
        MEMORY[0x1C87733A0]();
        OUTLINED_FUNCTION_14_78();
        if (v20) {
          OUTLINED_FUNCTION_8_90();
        }
        OUTLINED_FUNCTION_27_51();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v167 = v163;
        MEMORY[0x1C87733A0]();
        OUTLINED_FUNCTION_14_78();
        if (v20) {
          OUTLINED_FUNCTION_8_90();
        }
        OUTLINED_FUNCTION_27_51();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        goto LABEL_106;
      }
    }
    OUTLINED_FUNCTION_8_90();
    goto LABEL_98;
  }
LABEL_107:
  OUTLINED_FUNCTION_35_28();
  if (v168() == 3)
  {
    char v169 = (*(uint64_t (**)(void))&v348)();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    if (v169)
    {
      uint64_t v170 = swift_allocObject();
      *(_OWORD *)(v170 + 16) = xmmword_1C3769610;
      OUTLINED_FUNCTION_11_9();
      uint64_t v172 = (*(uint64_t (**)(void))(v171 + 456))();
      v173 = *(void **)((char *)v68 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoPauseButton);
      *(void *)(v170 + 32) = v172;
      *(void *)(v170 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v173;
      unint64_t v372 = v170;
    }
    else
    {
      uint64_t v183 = swift_allocObject();
      *(_OWORD *)(v183 + 16) = xmmword_1C3769830;
      v173 = *(void **)((char *)v68 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoPauseButton);
      *(void *)(v183 + 32) = v173;
      unint64_t v372 = v183;
    }
    specialized Array._endMutation()();
    unint64_t v184 = v372;
    id v185 = v173;
    *(double *)&unint64_t v372 = MEMORY[0x1E4FBC860];
    if (v184 >> 62)
    {
      OUTLINED_FUNCTION_34_40();
      uint64_t v186 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v186) {
        goto LABEL_115;
      }
    }
    else
    {
      uint64_t v186 = *(void *)((v184 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v186)
      {
LABEL_115:
        if (v186 < 1)
        {
          __break(1u);
          goto LABEL_264;
        }
        uint64_t v187 = 0;
        v173 = (void *)(v184 & 0xC000000000000001);
        do
        {
          if (v173) {
            id v188 = (id)MEMORY[0x1C87744F0](v187, v184);
          }
          else {
            id v188 = *(id *)(v184 + 8 * v187 + 32);
          }
          v189 = v188;
          id v190 = objc_msgSend(v188, sel_superview);

          if (v190)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
          ++v187;
        }
        while (v186 != v187);
        swift_bridgeObjectRelease();
        unint64_t v191 = v372;
LABEL_127:
        *(double *)&unint64_t v372 = MEMORY[0x1E4FBC860];
        if ((v191 & 0x8000000000000000) != 0 || (v191 & 0x4000000000000000) != 0)
        {
LABEL_259:
          swift_retain();
          uint64_t v192 = _CocoaArrayWrapper.endIndex.getter();
        }
        else
        {
          uint64_t v192 = *(void *)(v191 + 16);
          swift_retain();
        }
        double v370 = *(double *)&v191;
        if (!v192)
        {
          swift_release();
          goto LABEL_139;
        }
        if (v192 >= 1)
        {
          uint64_t v193 = 0;
          unint64_t v194 = v191 & 0xC000000000000001;
          do
          {
            if (v194) {
              id v195 = (id)MEMORY[0x1C87744F0](v193, v191);
            }
            else {
              id v195 = *(id *)(v191 + 8 * v193 + 32);
            }
            v196 = v195;
            ++v193;
            id v197 = objc_msgSend(v195, sel_constraints);
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
            static Array._unconditionallyBridgeFromObjectiveC(_:)();

            specialized Array.append<A>(contentsOf:)();
            *(double *)&unint64_t v191 = v370;
          }
          while (v192 != v193);
          swift_release();
          uint64_t v68 = v369;
LABEL_139:
          v198 = self;
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          objc_msgSend(v198, sel_deactivateConstraints_, isa);

          *(double *)&unint64_t v372 = MEMORY[0x1E4FBC860];
          if (v192)
          {
            v173 = (void *)(v191 & 0xC000000000000001);
            swift_retain();
            uint64_t v200 = 0;
            do
            {
              if (v173) {
                id v201 = (id)MEMORY[0x1C87744F0](v200, v191);
              }
              else {
                id v201 = *(id *)(v191 + 8 * v200 + 32);
              }
              uint64_t v202 = v201;
              ++v200;
              id v203 = objc_msgSend(v201, sel_constraints);
              static Array._unconditionallyBridgeFromObjectiveC(_:)();

              specialized Array.append<A>(contentsOf:)();
              *(double *)&unint64_t v191 = v370;
            }
            while (v192 != v200);
            swift_release();
            Class v204 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            objc_msgSend(v198, sel_deactivateConstraints_, v204);

            *(double *)&unint64_t v372 = MEMORY[0x1E4FBC860];
            swift_retain();
            unint64_t v184 = 0;
            while (1)
            {
              if (v173) {
                id v205 = (id)MEMORY[0x1C87744F0](v184, v191);
              }
              else {
                id v205 = *(id *)(v191 + 8 * v184 + 32);
              }
              id v206 = v205;
              id v207 = objc_msgSend(v205, sel_widthAnchor);
              id v208 = objc_msgSend(v207, sel_constraintEqualToConstant_, MaxY);

              id v209 = objc_msgSend(v206, sel_heightAnchor);
              id v210 = objc_msgSend(v206, sel_widthAnchor);
              uint64_t v68 = objc_msgSend(v209, sel_constraintEqualToAnchor_, v210);

              unint64_t v211 = v372;
              unint64_t v191 = v372 >> 62;
              if (v372 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v212 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v212 = *(void *)((v372 & 0xFFFFFFFFFFFFFF8) + 0x10);
              }
              uint64_t v213 = v212 + 2;
              if (__OFADD__(v212, 2))
              {
                __break(1u);
                goto LABEL_259;
              }
              uint64_t v214 = 0;
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                || (v211 & 0x8000000000000000) != 0
                || (v211 & 0x4000000000000000) != 0)
              {
                goto LABEL_157;
              }
              if (v213 > *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                break;
              }
LABEL_163:
              specialized Array._endMutation()();
              id v217 = v208;
              MEMORY[0x1C87733A0]();
              if (*(void *)((v372 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v372 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                OUTLINED_FUNCTION_2_137();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
              v218 = v68;
              MEMORY[0x1C87733A0]();
              *(double *)&unint64_t v191 = v370;
              if (*(void *)((v372 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v372 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                OUTLINED_FUNCTION_2_137();
              }
              ++v184;
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();

              if (v192 == v184)
              {
                swift_release();
                uint64_t v68 = v369;
                goto LABEL_172;
              }
            }
            uint64_t v214 = 1;
LABEL_157:
            if (*(double *)&v191 == 0.0)
            {
              uint64_t v215 = *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            else
            {
              swift_bridgeObjectRetain();
              uint64_t v215 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            if (v215 <= v213) {
              uint64_t v216 = v213;
            }
            else {
              uint64_t v216 = v215;
            }
            *(double *)&unint64_t v372 = COERCE_DOUBLE(MEMORY[0x1C8774500](v214, v216, 1, v211));
            goto LABEL_163;
          }
          Class v219 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          objc_msgSend(v198, sel_deactivateConstraints_, v219);

LABEL_172:
          specialized Array.append<A>(contentsOf:)();
          if (static Platform.current.getter() == 1)
          {
            *(double *)&unint64_t v372 = MEMORY[0x1E4FBC860];
            v173 = *(void **)((*MEMORY[0x1E4FBC8C8] & *v68) + 0x228);
            OUTLINED_FUNCTION_12_77();
            int v220 = ((uint64_t (*)(void))v173)();
            double v63 = v343;
            if ((v220 & 0x1000000) == 0) {
              goto LABEL_176;
            }
            id v221 = *(id *)&v346;
            OUTLINED_FUNCTION_25_55();
            OUTLINED_FUNCTION_6_117();
            if (v20) {
              goto LABEL_268;
            }
            while (1)
            {
              OUTLINED_FUNCTION_11_81();
              specialized Array._endMutation()();
LABEL_176:
              OUTLINED_FUNCTION_12_77();
              if (((uint64_t (*)(void))v173)())
              {
                id v222 = objc_retain(*(id *)((char *)v68
                                         + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton));
                OUTLINED_FUNCTION_25_55();
                OUTLINED_FUNCTION_6_117();
                if (v20) {
                  OUTLINED_FUNCTION_2_137();
                }
                OUTLINED_FUNCTION_11_81();
                specialized Array._endMutation()();
              }
              OUTLINED_FUNCTION_12_77();
              if ((((uint64_t (*)(void))v173)() & 0x100) != 0)
              {
                id v223 = objc_retain(*(id *)((char *)v68
                                         + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton));
                OUTLINED_FUNCTION_25_55();
                OUTLINED_FUNCTION_6_117();
                if (v20) {
                  OUTLINED_FUNCTION_2_137();
                }
                OUTLINED_FUNCTION_11_81();
                specialized Array._endMutation()();
              }
              OUTLINED_FUNCTION_12_77();
              if ((((uint64_t (*)(void))v173)() & 0x10000) != 0)
              {
                id v224 = *(id *)&v347;
                OUTLINED_FUNCTION_25_55();
                OUTLINED_FUNCTION_6_117();
                if (v20) {
                  OUTLINED_FUNCTION_2_137();
                }
                OUTLINED_FUNCTION_11_81();
                specialized Array._endMutation()();
              }
              OUTLINED_FUNCTION_12_77();
              if ((((uint64_t (*)(void))v173)() & 0x1000000000000) != 0)
              {
                id v225 = objc_retain(*(id *)((char *)v68
                                         + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton));
                OUTLINED_FUNCTION_25_55();
                OUTLINED_FUNCTION_6_117();
                if (v20) {
                  OUTLINED_FUNCTION_2_137();
                }
                OUTLINED_FUNCTION_11_81();
                specialized Array._endMutation()();
              }
              OUTLINED_FUNCTION_12_77();
              if ((((uint64_t (*)(void))v173)() & 0x10000000000) != 0)
              {
                id v226 = objc_retain(*(id *)((char *)v68
                                         + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton));
                OUTLINED_FUNCTION_25_55();
                OUTLINED_FUNCTION_6_117();
                if (v20) {
                  OUTLINED_FUNCTION_2_137();
                }
                OUTLINED_FUNCTION_11_81();
                specialized Array._endMutation()();
              }
              OUTLINED_FUNCTION_30_35();
              double v140 = v367 ? v140 + CGRectGetMinX(*(CGRect *)&v227) : CGRectGetMaxX(*(CGRect *)&v227) - v140 - v63;
              OUTLINED_FUNCTION_30_35();
              double MaxY = CGRectGetMaxY(v405);
              unint64_t v184 = v372;
              if (v372 >> 62)
              {
LABEL_265:
                OUTLINED_FUNCTION_34_40();
                uint64_t v263 = _CocoaArrayWrapper.endIndex.getter();
                if (!v263) {
                  goto LABEL_226;
                }
              }
              else
              {
                uint64_t v263 = *(void *)((v372 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain();
                if (!v263) {
                  goto LABEL_226;
                }
              }
              if (v263 >= 1) {
                break;
              }
              __break(1u);
LABEL_268:
              OUTLINED_FUNCTION_2_137();
            }
            uint64_t v264 = 0;
            double v265 = MaxY - v141 - v63;
            OUTLINED_FUNCTION_28_46();
            if (v19) {
              double v268 = v267;
            }
            else {
              double v268 = v266;
            }
            do
            {
              if ((v184 & 0xC000000000000001) != 0) {
                id v269 = (id)MEMORY[0x1C87744F0](v264, v184);
              }
              else {
                id v269 = *(id *)(v184 + 8 * v264 + 32);
              }
              v270 = v269;
              ++v264;
              id v271 = objc_msgSend(v68, sel_traitCollection);
              objc_msgSend(v271, sel_displayScale);
              double v273 = v272;

              double v274 = ceil(v63 * v273) / v273;
              objc_msgSend(v270, sel_setFrame_, floor(v140 * v273) / v273, floor(v265 * v273) / v273, v274, v274);

              double v140 = v268 + v140;
            }
            while (v263 != v264);
LABEL_226:
            uint64_t v275 = swift_bridgeObjectRelease();
            uint64_t v276 = v332;
            (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v68) + 0x258))(v275);
            char v277 = *(unsigned char *)(v276 + 7);
            _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0(v276, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
            if (VideoMessageController.State.rawValue.getter(v277) == 0x7964616552746F6ELL
              && v278 == 0xE800000000000000)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              OUTLINED_FUNCTION_19_57();
              OUTLINED_FUNCTION_23_32();
              double v280 = v370;
              if ((v184 & 1) == 0)
              {
                v319 = v68;
                specialized Sequence.flatMap<A>(_:)(*(unint64_t *)&v280, v319, v362);
                swift_release();
                swift_bridgeObjectRelease();
                specialized Array.append<A>(contentsOf:)();
                goto LABEL_256;
              }
            }
            swift_release();
            goto LABEL_255;
          }
          swift_beginAccess();
          if (static AmbientState.isPresented == 1)
          {
            swift_release();
            if (TUDeviceHasHomeButton()) {
              double v231 = 10.0;
            }
            else {
              double v231 = v140 + 40.0;
            }
            OUTLINED_FUNCTION_30_35();
            double v232 = v141;
            double v233 = CGRectGetWidth(v398) - v231 + -50.0;
            OUTLINED_FUNCTION_30_35();
            double v234 = CGRectGetHeight(v399) - v232 + -50.0 + -30.0;
            uint64_t v235 = v364;
            uint64_t v236 = v339;
            v237 = v336;
            ((void (*)(uint64_t, void, uint64_t))v336)(v364, v366, v339);
            uint64_t v238 = v365;
            OUTLINED_FUNCTION_29_38();
            v237();
            double v370 = specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(v235, v238, v68, v233, v234, 50.0, 50.0);
            CGFloat v363 = v239;
            double v241 = v240;
            double v243 = v242;
            uint64_t v244 = v335;
            ((void (*)(uint64_t, uint64_t))v335)(v238, v236);
            OUTLINED_FUNCTION_13_80();
            v244();
            OUTLINED_FUNCTION_30_35();
            double v245 = CGRectGetHeight(v400) - v232 + -50.0 + -30.0;
            OUTLINED_FUNCTION_29_38();
            v237();
            OUTLINED_FUNCTION_29_38();
            v237();
            double v246 = specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(v235, v238, v68, v231, v245, 50.0, 50.0);
            double v248 = v247;
            double v250 = v249;
            double v252 = v251;
            OUTLINED_FUNCTION_13_80();
            v244();
            OUTLINED_FUNCTION_13_80();
            v244();
            OUTLINED_FUNCTION_28_46();
            if (v253) {
              double v254 = -70.0;
            }
            else {
              double v254 = 70.0;
            }
            double v255 = v370;
            if (!v253) {
              double v255 = v246;
            }
            double v256 = v363;
            if (v253)
            {
              double v257 = v241;
            }
            else
            {
              double v256 = v248;
              double v257 = v250;
            }
            if (v253) {
              double v258 = v243;
            }
            else {
              double v258 = v252;
            }
            double v259 = v346;
            objc_msgSend(*(id *)&v346, sel_setFrame_, v255, v256, v257, v258);
            v260 = *(void **)((char *)v68
                            + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
            objc_msgSend(*(id *)&v259, sel_frame);
            double v261 = v254 + CGRectGetMinX(v401);
            objc_msgSend(*(id *)&v259, sel_frame);
            objc_msgSend(v260, sel_setFrame_, v261, CGRectGetMinY(v402), 50.0, 50.0);
            objc_msgSend(v260, sel_frame);
            double v262 = v254 + CGRectGetMinX(v403);
            objc_msgSend(v260, sel_frame);
            double v180 = CGRectGetMinY(v404);
            uint64_t v178 = sel_setFrame_;
            double v177 = v347;
            double v179 = v262;
            double v182 = 50.0;
            double v181 = 50.0;
            goto LABEL_214;
          }
          double v282 = v321;
          double v281 = v322;
          objc_msgSend(*(id *)&v347, sel_setFrame_, v322, v321, v331, v330);
          double v283 = OUTLINED_FUNCTION_18_64();
          double v284 = v283 + OUTLINED_FUNCTION_18_64() * -0.94 - v362;
          v285 = v68;
          specialized Sequence.flatMap<A>(_:)(v191, v285, v284);
          swift_release();
          OUTLINED_FUNCTION_27_51();
          specialized Array.append<A>(contentsOf:)();
          OUTLINED_FUNCTION_11_9();
          v287 = *(void (**)(void))(v286 + 600);
          uint64_t v288 = (uint64_t)v327;
          OUTLINED_FUNCTION_32_33();
          v287();
          uint64_t v289 = *(unsigned __int8 *)(v288 + 7);
          _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0(v288, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
          if (VideoMessageController.State.rawValue.getter(v289) == 0x7964616572 && v290 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease();
            double v292 = v346;
          }
          else
          {
            uint64_t v289 = v290;
            uint64_t v288 = OUTLINED_FUNCTION_43_22();
            swift_bridgeObjectRelease();
            double v292 = v346;
            if ((v288 & 1) == 0)
            {
              v293 = (void *)OUTLINED_FUNCTION_39_32(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
              double v295 = v357;
              double v296 = v344;
              double v297 = v345;
              double v298 = v150;
              goto LABEL_242;
            }
          }
          v293 = (void *)OUTLINED_FUNCTION_39_32(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
          double v295 = v281;
          double v296 = v282;
          double v297 = v330;
          double v298 = v331;
LABEL_242:
          objc_msgSend(v293, v294, v295, v296, v298, v297);
          objc_msgSend(*(id *)&v292, (SEL)(v289 + 1048), v326, v325, v324, v323);
          uint64_t v299 = (uint64_t)v328;
          OUTLINED_FUNCTION_32_33();
          v287();
          char v300 = *(unsigned char *)(v299 + 7);
          _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0(v299, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
          if (VideoMessageController.State.rawValue.getter(v300) != 0x7964616572 || v301 != 0xE500000000000000)
          {
            char v303 = OUTLINED_FUNCTION_43_22();
            swift_bridgeObjectRelease();
            if (v303)
            {
LABEL_254:
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_1C3769F40;
              *(void *)(inited + 32) = v288;
              *(double *)(inited + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v292;
              double v311 = v347;
              *(double *)(inited + 48) = v347;
              unint64_t v371 = inited;
              specialized Array._endMutation()();
              unint64_t v312 = v371;
              id v313 = *(id *)&v292;
              id v314 = *(id *)&v311;
              v315 = v285;
              id v316 = (id)v288;
              specialized Sequence.forEach(_:)(v312, v315);
LABEL_255:
              swift_bridgeObjectRelease();
              goto LABEL_256;
            }
            uint64_t v304 = v320;
            OUTLINED_FUNCTION_32_33();
            v287();
            char v305 = *(unsigned char *)(v304 + 7);
            uint64_t v306 = v304;
            double v292 = v346;
            _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0(v306, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
            if (VideoMessageController.State.rawValue.getter(v305) != 0x6552657669746361
              || v307 != 0xEF676E6964726F63)
            {
              char v309 = OUTLINED_FUNCTION_13_73();
              swift_bridgeObjectRelease();
              if ((v309 & 1) == 0) {
                goto LABEL_256;
              }
              goto LABEL_254;
            }
          }
          swift_bridgeObjectRelease();
          goto LABEL_254;
        }
LABEL_264:
        __break(1u);
        __break(1u);
        goto LABEL_265;
      }
    }
    swift_bridgeObjectRelease();
    *(double *)&unint64_t v191 = MEMORY[0x1E4FBC860];
    goto LABEL_127;
  }
  uint64_t v174 = (void *)OUTLINED_FUNCTION_37_32(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
  objc_msgSend(v174, v175, v352, v351, v350, v353);
  OUTLINED_FUNCTION_11_9();
  if ((*(uint64_t (**)(void))(v176 + 552))())
  {
    double v177 = COERCE_DOUBLE(OUTLINED_FUNCTION_37_32(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton));
    double v179 = v357;
    double v180 = v344;
    double v181 = v345;
    double v182 = v150;
LABEL_214:
    objc_msgSend(*(id *)&v177, v178, v179, v180, v182, v181);
  }
LABEL_256:
  v317 = self;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class v318 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v317, sel_activateConstraints_, v318);
}

uint64_t sub_1C36C8094()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t closure #5 in LocalParticipantControlsView.layoutViews()@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>)
{
  uint64_t v7 = *a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C3769610;
  id v9 = objc_msgSend(v7, sel_trailingAnchor);
  id v10 = objc_msgSend(a2, sel_trailingAnchor);
  Layout.LocalParticipantViewCameraControls.init()((uint64_t)v17);
  double v11 = *(double *)&v17[7];
  static Platform.current.getter();
  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, -v11);

  *(void *)(v8 + 32) = v12;
  id v13 = objc_msgSend(v7, sel_centerYAnchor);
  id v14 = objc_msgSend(a2, sel_centerYAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, a4 * 0.5);

  *(void *)(v8 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v15;
  uint64_t v18 = v8;
  uint64_t result = specialized Array._endMutation()();
  *a3 = v18;
  return result;
}

BOOL LocalParticipantControlsView.styleSupportsCinematicFramingButton.getter()
{
  if (static Platform.current.getter() != 1) {
    return 0;
  }
  uint64_t v1 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x210);
  return v1() == 3 || v1() == 2;
}

BOOL LocalParticipantControlsView.styleSupportsCameraBlurButton.getter()
{
  uint64_t v1 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x210);
  return v1() && v1() != 1;
}

BOOL LocalParticipantControlsView.styleSupportsReactionEffectGestureButton.getter()
{
  uint64_t v1 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x210);
  v1();
  OUTLINED_FUNCTION_45_20();
  if (v3) {
    return 1;
  }
  v1();
  OUTLINED_FUNCTION_44_23();
  return v3 != 0;
}

uint64_t LocalParticipantControlsView.shouldShowEffectsButton.getter()
{
  uint64_t v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x258))(v2);
  int v6 = v4[2];
  uint64_t v7 = _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0((uint64_t)v4, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v6 == 1 && (*(unsigned __int8 (**)(uint64_t))((*v5 & *v0) + 0x210))(v7)) {
    char v8 = (*(uint64_t (**)(void))((*v5 & *v0) + 0x320))();
  }
  else {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t LocalParticipantControlsView.shouldShowCameraFlipButton.getter()
{
  uint64_t v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x258))(v2);
  int v6 = v4[3];
  uint64_t v7 = _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0((uint64_t)v4, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v6 == 1
    && (*(unsigned __int8 (**)(uint64_t))((*v5 & *v0) + 0x210))(v7)
    && (((*(uint64_t (**)(void))((*v5 & *v0) + 0x320))() & 1) != 0
     || ((*(uint64_t (**)(void))((*v5 & *v0) + 0x328))() & 1) != 0))
  {
    char v8 = (*(uint64_t (**)(void))((*v5 & *v0) + 0x330))() ^ 1;
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t LocalParticipantControlsView.shouldShowCameraBlurButton.getter()
{
  uint64_t v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x258))(v2);
  int v6 = v4[1];
  _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0((uint64_t)v4, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v6 == 1 && LocalParticipantControlsView.styleSupportsCameraBlurButton.getter()) {
    char v7 = (*(uint64_t (**)(void))((*v5 & *v0) + 0x320))();
  }
  else {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t LocalParticipantControlsView.shouldShowCinematicFramingButton.getter()
{
  uint64_t v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (unsigned __int8 *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x258))(v2);
  int v6 = *v4;
  _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0((uint64_t)v4, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v6 == 1 && LocalParticipantControlsView.styleSupportsCinematicFramingButton.getter()) {
    char v7 = (*(uint64_t (**)(void))((*v5 & *v0) + 0x320))();
  }
  else {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t LocalParticipantControlsView.shouldShowReactionEffectGestureButton.getter()
{
  uint64_t v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x258))(v2);
  int v6 = v4[5];
  _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0((uint64_t)v4, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v6 == 1 && LocalParticipantControlsView.styleSupportsReactionEffectGestureButton.getter()) {
    char v7 = (*(uint64_t (**)(void))((*v5 & *v0) + 0x320))();
  }
  else {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t LocalParticipantControlsView.shouldShowStudioLightButton.getter()
{
  uint64_t v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x258))(v2);
  int v6 = v4[6];
  _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0((uint64_t)v4, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v6 == 1 && LocalParticipantControlsView.styleSupportsReactionEffectGestureButton.getter()) {
    char v7 = (*(uint64_t (**)(void))((*v5 & *v0) + 0x320))();
  }
  else {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t LocalParticipantControlsView.updateControlsAlphaCommon(animated:)(char a1)
{
  uint64_t v3 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  int v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_collapseButton);
  char v8 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v9 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x210);
  char v10 = v9(v4);
  double v11 = 0.0;
  if (v10 == 2) {
    double v11 = 1.0;
  }
  objc_msgSend(v7, sel_setAlpha_, v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControl, Bool)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3769B20;
  id v13 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton);
  *(void *)(inited + 32) = v13;
  id v14 = v13;
  *(unsigned char *)(inited + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = LocalParticipantControlsView.shouldShowEffectsButton.getter() & 1;
  id v15 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton);
  *(void *)(inited + 48) = v15;
  id v16 = v15;
  *(unsigned char *)(inited + 56) = LocalParticipantControlsView.shouldShowCameraFlipButton.getter() & 1;
  uint64_t v17 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
  *(void *)(inited + 64) = v17;
  id v18 = v17;
  *(unsigned char *)(inited + 72) = LocalParticipantControlsView.shouldShowCameraBlurButton.getter() & 1;
  char v19 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton);
  *(void *)(inited + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v19;
  id v20 = v19;
  *(unsigned char *)(inited + 88) = LocalParticipantControlsView.shouldShowCinematicFramingButton.getter() & 1;
  double v21 = *(void **)((char *)v1
                 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton);
  *(void *)(inited + 96) = v21;
  id v22 = v21;
  *(unsigned char *)(inited + 104) = LocalParticipantControlsView.shouldShowReactionEffectGestureButton.getter() & 1;
  unsigned __int8 v23 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton);
  *(void *)(inited + 112) = v23;
  id v24 = v23;
  *(unsigned char *)(inited + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = LocalParticipantControlsView.shouldShowStudioLightButton.getter() & 1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIControl);
  lazy protocol witness table accessor for type UIControl and conformance NSObject();
  uint64_t v25 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v26;
  *(void *)(v27 + 24) = v25;
  if (a1)
  {
    id v28 = self;
    aBlock[4] = partial apply for closure #1 in LocalParticipantControlsView.updateControlsAlphaCommon(animated:);
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_113;
    char v29 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_animateWithDuration_animations_, v29, 0.25);
    _Block_release(v29);
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    closure #1 in LocalParticipantControlsView.updateControlsAlphaCommon(animated:)(v26, v25);
    swift_bridgeObjectRelease();
    uint64_t v30 = swift_release();
  }
  unsigned int v31 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoPauseButton);
  (*(void (**)(uint64_t))((*v8 & *v1) + 0x258))(v30);
  char v32 = v6[7];
  _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0((uint64_t)v6, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (VideoMessageController.State.rawValue.getter(v32) == 0x676E696D726177 && v33 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    double v37 = 1.0;
  }
  else
  {
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v36 = swift_bridgeObjectRelease();
    double v37 = 1.0;
    if ((v35 & 1) == 0)
    {
      char v38 = ((uint64_t (*)(uint64_t, double))v9)(v36, 1.0);
      double v37 = 1.0;
      if (v38 == 3) {
        double v37 = 0.0;
      }
    }
  }
  objc_msgSend(v31, sel_setAlpha_, v37);
  return swift_release();
}

void closure #1 in LocalParticipantControlsView.updateControlsAlphaCommon(animated:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (!v4) {
    return;
  }
  uint64_t v5 = (void *)v4;
  uint64_t v6 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v5) + 0x3B0);
    id v18 = *(id *)(*(void *)(a2 + 48) + 8 * i);
    v17();

    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v10) {
      goto LABEL_22;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_22;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_22;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_22:

    swift_release();
    return;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v10) {
      goto LABEL_22;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_25:
  __break(1u);
}

Swift::Void __swiftcall LocalParticipantControlsView.updateControlsAlpha(animated:)(Swift::Bool animated)
{
  uint64_t v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v37 - v7;
  MEMORY[0x1F4188790](v6);
  int64_t v10 = (char *)&v37 - v9;
  LocalParticipantControlsView.updateControlsAlphaCommon(animated:)(0);
  OUTLINED_FUNCTION_0_3();
  unint64_t v12 = *(void (**)(void))(v11 + 600);
  v12();
  char v13 = v10[7];
  _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0((uint64_t)v10, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
  BOOL v15 = VideoMessageController.State.rawValue.getter(v13) == 0x6552657669746361 && v14 == 0xEF676E6964726F63;
  if (!v15)
  {
    char v16 = OUTLINED_FUNCTION_13_73();
    uint64_t v17 = swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_13;
    }
    ((void (*)(uint64_t))v12)(v17);
    char v18 = v8[7];
    _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0((uint64_t)v8, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
    if (VideoMessageController.State.rawValue.getter(v18) != 0x7964616572 || v19 != 0xE500000000000000)
    {
      char v21 = OUTLINED_FUNCTION_43_22();
      swift_bridgeObjectRelease();
      int v22 = 0;
      if ((v21 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
LABEL_13:
  OUTLINED_FUNCTION_6_63();
  (*(void (**)(void))(v23 + 528))();
  OUTLINED_FUNCTION_45_20();
  int v22 = v15;
LABEL_16:
  OUTLINED_FUNCTION_6_63();
  if (((*(uint64_t (**)(void))(v24 + 432))() & 1) != 0 || v22)
  {
    OUTLINED_FUNCTION_6_63();
    uint64_t v26 = (void *)(*(uint64_t (**)(void))(v25 + 456))();
    uint64_t v27 = v26;
    double v28 = 0.0;
    if (v22) {
      double v28 = 1.0;
    }
    objc_msgSend(v26, sel_setAlpha_, v28);
  }
  OUTLINED_FUNCTION_6_63();
  uint64_t v30 = (void *)(*(uint64_t (**)(void))(v29 + 312))();
  if (v30)
  {
    unsigned int v31 = v30;
    id v32 = objc_msgSend(v30, sel_view);

    if (v32)
    {
      v12();
      char v33 = v5[7];
      _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0((uint64_t)v5, (void (*)(void))type metadata accessor for LocalParticipantControlsView.ViewModel);
      if (VideoMessageController.State.rawValue.getter(v33) == 0xD000000000000014 && v34 == 0x80000001C3790E10)
      {
        swift_bridgeObjectRelease();
        double v35 = 0.0;
      }
      else
      {
        char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        double v35 = 1.0;
        if (v36) {
          double v35 = 0.0;
        }
      }
      objc_msgSend(v32, sel_setAlpha_, v35);
    }
    else
    {
      __break(1u);
    }
  }
}

void closure #3 in LocalParticipantControlsView.changed(_:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (void *)MEMORY[0x1C8776240](v2);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x1F8))();
    uint64_t v7 = v6;

    if (v5)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(1, ObjectType, v7);
      swift_unknownObjectRelease();
    }
  }
}

void partial apply for closure #3 in LocalParticipantControlsView.changed(_:from:)(uint64_t a1)
{
  closure #3 in LocalParticipantControlsView.changed(_:from:)(a1, v1);
}

void protocol witness for LocalParticipantControlsViewProtocol.layoutViews() in conformance LocalParticipantControlsView()
{
}

void protocol witness for LocalParticipantControlsViewProtocol.updateViews() in conformance LocalParticipantControlsView()
{
}

void protocol witness for LocalParticipantControlsViewProtocol.updateControlsAlpha(animated:) in conformance LocalParticipantControlsView()
{
}

void protocol witness for LocalParticipantControlsViewProtocol.changed(_:from:) in conformance LocalParticipantControlsView(unsigned char *a1, unsigned char *a2)
{
}

uint64_t outlined init with take of LocalParticipantControlsView.ViewModel()
{
  uint64_t v2 = OUTLINED_FUNCTION_40_28();
  v3(v2);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOcTm_0()
{
  uint64_t v2 = OUTLINED_FUNCTION_40_28();
  v3(v2);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

uint64_t _s15ConversationKit28LocalParticipantControlsViewC0F5ModelVWOhTm_0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t lazy protocol witness table accessor for type UIControl and conformance NSObject()
{
  unint64_t result = lazy protocol witness table cache variable for type UIControl and conformance NSObject;
  if (!lazy protocol witness table cache variable for type UIControl and conformance NSObject)
  {
    type metadata accessor for NSObject(255, &lazy cache variable for type metadata for UIControl);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIControl and conformance NSObject);
  }
  return result;
}

uint64_t sub_1C36C9870()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in LocalParticipantControlsView.updateControlsAlphaCommon(animated:)()
{
  closure #1 in LocalParticipantControlsView.updateControlsAlphaCommon(animated:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

double OUTLINED_FUNCTION_41_28()
{
  return v0;
}

void onNextMainRunLoop(do:)(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_mainRunLoop);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<NSRunLoopMode>);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C3769620;
  uint64_t v6 = (void *)*MEMORY[0x1E4F1C4B8];
  *(void *)(v5 + 32) = *MEMORY[0x1E4F1C4B8];
  type metadata accessor for NSRunLoopMode(0);
  id v7 = v6;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10[4] = a1;
  v10[5] = a2;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = thunk for @escaping @callee_guaranteed () -> ();
  v10[3] = &block_descriptor_114;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performInModes_block_, isa, v9);
  _Block_release(v9);
}

void *ConversationHUDViewController.__allocating_init(recipe:presentationSize:controlsManager:context:)(uint64_t a1, void *a2, char a3)
{
  OUTLINED_FUNCTION_19_0();
  id v6 = objc_allocWithZone(v3);
  OUTLINED_FUNCTION_112();
  return ConversationHUDViewController.init(recipe:presentationSize:controlsManager:context:)(v7, a2, a3);
}

id ConversationHUDViewController.presentShareCardViewController(_:)(void *a1)
{
  uint64_t v3 = a1;
  ConversationHUDViewController.shareCardViewController.setter((uint64_t)a1);
  id v4 = &v3[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_delegate];
  OUTLINED_FUNCTION_11_0();
  *((void *)v4 + 1) = &protocol witness table for ConversationHUDViewController;
  OUTLINED_FUNCTION_35();
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_0_3();
  (*(void (**)(void))(v5 + 952))();
  return objc_msgSend(v1, sel_presentViewController_animated_completion_, v3, 1, 0);
}

id HUDShadowProperties.color.getter()
{
  return *v0;
}

float HUDShadowProperties.opacity.getter()
{
  return *(float *)(v0 + 8);
}

double HUDShadowProperties.radius.getter()
{
  return *(double *)(v0 + 16);
}

double HUDShadowProperties.offset.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t HUDShadowProperties.init(color:opacity:radius:offset:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, float a3@<S0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(void *)a2 = result;
  *(float *)(a2 + 8) = a3;
  *(double *)(a2 + 16) = a4;
  *(double *)(a2 + 24) = a5;
  *(double *)(a2 + 32) = a6;
  return result;
}

uint64_t key path getter for ConversationHUDViewController.controlsManager : ConversationHUDViewController@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xF0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationHUDViewController.controlsManager : ConversationHUDViewController(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xF8))(*a1);
}

id ConversationHUDViewController.controlsManager.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  return v1;
}

void ConversationHUDViewController.controlsManager.setter(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsManager);
  OUTLINED_FUNCTION_11_0();
  id v4 = *v3;
  *uint64_t v3 = a1;
  id v5 = a1;

  OUTLINED_FUNCTION_0_3();
  (*(void (**)(void))(v6 + 984))();
}

uint64_t (*ConversationHUDViewController.controlsManager.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return ConversationHUDViewController.controlsManager.modify;
}

uint64_t ConversationHUDViewController.controlsManager.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    OUTLINED_FUNCTION_0_20();
    return (*(uint64_t (**)(void))(v4 + 984))();
  }
  return result;
}

uint64_t key path getter for ConversationHUDViewController.context : ConversationHUDViewController@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x108))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationHUDViewController.context : ConversationHUDViewController(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x110))(*a1);
}

uint64_t ConversationHUDViewController.context.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t ConversationHUDViewController.context.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_0_1();
  unsigned char *v1 = a1;
  return result;
}

uint64_t (*ConversationHUDViewController.context.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationHUDViewController.ephemeralAlertCancellable : ConversationHUDViewController@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x120))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationHUDViewController.ephemeralAlertCancellable : ConversationHUDViewController(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x128);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t ConversationHUDViewController.ephemeralAlertCancellable.getter()
{
  return ConversationControlsManager.incomingScreenSharingRequestActivity.getter();
}

uint64_t ConversationHUDViewController.ephemeralAlertCancellable.setter(uint64_t a1)
{
  return ConversationHUDViewController.ephemeralAlertCancellable.setter(a1);
}

{
  void *v1;

  OUTLINED_FUNCTION_0_1();
  unsigned char *v1 = a1;
  return swift_release();
}

uint64_t (*ConversationHUDViewController.ephemeralAlertCancellable.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationHUDViewController.appLaunchButtonCancellable : ConversationHUDViewController@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x138))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationHUDViewController.appLaunchButtonCancellable : ConversationHUDViewController(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x140);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t ConversationHUDViewController.appLaunchButtonCancellable.getter()
{
  return ConversationControlsManager.incomingScreenSharingRequestActivity.getter();
}

uint64_t ConversationHUDViewController.appLaunchButtonCancellable.setter(uint64_t a1)
{
  return ConversationHUDViewController.ephemeralAlertCancellable.setter(a1);
}

uint64_t (*ConversationHUDViewController.appLaunchButtonCancellable.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

double key path getter for ConversationHUDViewController.shadowProperties : ConversationHUDViewController@<D0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x150))(v5);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(void *)(a2 + 32) = v6;
  return result;
}

uint64_t key path setter for ConversationHUDViewController.shadowProperties : ConversationHUDViewController(uint64_t a1, void **a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v2;
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v3 = *(uint64_t (**)(_OWORD *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x158);
  id v4 = *(id *)&v6[0];
  return v3(v6);
}

id ConversationHUDViewController.shadowProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shadowProperties;
  OUTLINED_FUNCTION_2();
  id v4 = *(void **)v3;
  int v5 = *(_DWORD *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(_DWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v3 + 16);
  *(void *)(a1 + 32) = v6;
  return v4;
}

void ConversationHUDViewController.shadowProperties.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = *(void **)v1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v4;
  *(void *)(v1 + 32) = *(void *)(a1 + 32);
}

uint64_t (*ConversationHUDViewController.shadowProperties.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path getter for ConversationHUDViewController.deferPillUpdates : ConversationHUDViewController@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x168))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ConversationHUDViewController.deferPillUpdates : ConversationHUDViewController(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x170))(*a1);
}

void ConversationHUDViewController.deferPillUpdates.didset()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v4 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_deferPillUpdates;
  uint64_t v5 = swift_beginAccess();
  if ((*v4 & 1) == 0)
  {
    if ((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))(v5))
    {
      uint64_t v6 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v6);
      ConversationHUDViewController.showAppLaunchPill(buttonType:)();
      outlined destroy of SystemUpdateNotice?((uint64_t)v3, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
    }
    else
    {
      ConversationHUDViewController.hideAppLaunchPill(remove:)(0);
    }
  }
}

uint64_t ConversationHUDViewController.deferPillUpdates.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

void ConversationHUDViewController.deferPillUpdates.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_deferPillUpdates);
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  ConversationHUDViewController.deferPillUpdates.didset();
}

uint64_t (*ConversationHUDViewController.deferPillUpdates.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return ConversationHUDViewController.deferPillUpdates.modify;
}

uint64_t ConversationHUDViewController.deferPillUpdates.modify(uint64_t a1, char a2)
{
  return ConversationHUDViewController.deferPillUpdates.modify(a1, a2, (uint64_t (*)(uint64_t))ConversationHUDViewController.deferPillUpdates.didset);
}

uint64_t key path getter for ConversationHUDViewController.pillShouldBeShowing : ConversationHUDViewController@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x180))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ConversationHUDViewController.pillShouldBeShowing : ConversationHUDViewController(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x188))(*a1);
}

uint64_t ConversationHUDViewController.pillShouldBeShowing.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t ConversationHUDViewController.pillShouldBeShowing.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_0_1();
  unsigned char *v1 = a1;
  return result;
}

uint64_t (*ConversationHUDViewController.pillShouldBeShowing.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

void ConversationHUDViewController.wantsAppLaunchPill(buttonType:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_13_13();
  MEMORY[0x1F4188790](v8);
  int64_t v10 = (char *)v29 - v9;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)v29 - v12;
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)v29 - v15;
  type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_63();
  swift_storeEnumTagMultiPayload();
  LOBYTE(v5) = static ConversationControlsAppLaunchButtonType.== infix(_:_:)(v5, v2);
  _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
  if (v5) {
    goto LABEL_38;
  }
  OUTLINED_FUNCTION_12_7();
  if ((*(uint64_t (**)(void))(v18 + 936))()) {
    goto LABEL_38;
  }
  OUTLINED_FUNCTION_12_7();
  OUTLINED_FUNCTION_14_79();
  v19();
  OUTLINED_FUNCTION_98_5();
  OUTLINED_FUNCTION_0_91();
  unsigned int v21 = (*(unsigned __int8 (**)(void))(v20 + 2112))();

  if (v21 > 0x1F) {
    goto LABEL_38;
  }
  OUTLINED_FUNCTION_12_7();
  uint64_t v23 = *(void (**)(void))(v22 + 888);
  OUTLINED_FUNCTION_33_37();
  v23();
  type metadata accessor for ConversationControlsRecipe();
  if (OUTLINED_FUNCTION_21_16((uint64_t)v16))
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    OUTLINED_FUNCTION_26_49();
  }
  else
  {
    outlined init with copy of ConversationControlsType((uint64_t)v16, (uint64_t)&v34);
    outlined destroy of SystemUpdateNotice?((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  OUTLINED_FUNCTION_12_78(11);
  outlined init with copy of FeatureEligibility?((uint64_t)&v34, (uint64_t)v31, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined init with copy of FeatureEligibility?((uint64_t)v33, (uint64_t)v3, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v32 == 255)
  {
    uint64_t v25 = (uint64_t)&demangling cache variable for type metadata for ConversationControlsType?;
    OUTLINED_FUNCTION_46_25();
    OUTLINED_FUNCTION_47_21();
    OUTLINED_FUNCTION_45_21();
    if (v24) {
      goto LABEL_37;
    }
    goto LABEL_15;
  }
  outlined init with copy of FeatureEligibility?((uint64_t)v31, (uint64_t)v30, &demangling cache variable for type metadata for ConversationControlsType?);
  OUTLINED_FUNCTION_45_21();
  if (v24)
  {
    uint64_t v25 = (uint64_t)&demangling cache variable for type metadata for ConversationControlsType?;
    OUTLINED_FUNCTION_46_25();
    OUTLINED_FUNCTION_47_21();
    outlined destroy of ConversationControlsType((uint64_t)v30);
LABEL_15:
    outlined destroy of SystemUpdateNotice?((uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for (ConversationControlsType?, ConversationControlsType?));
    goto LABEL_16;
  }
  outlined init with take of ConversationControlsType((long long *)v3, v29);
  uint64_t v25 = static ConversationControlsType.== infix(_:_:)((uint64_t)v30);
  outlined destroy of ConversationControlsType((uint64_t)v29);
  outlined destroy of SystemUpdateNotice?((uint64_t)v33, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined destroy of SystemUpdateNotice?((uint64_t)&v34, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined destroy of ConversationControlsType((uint64_t)v30);
  outlined destroy of SystemUpdateNotice?((uint64_t)v31, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v25) {
    goto LABEL_38;
  }
LABEL_16:
  OUTLINED_FUNCTION_33_37();
  v23();
  if (OUTLINED_FUNCTION_21_16((uint64_t)v13))
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    OUTLINED_FUNCTION_26_49();
  }
  else
  {
    outlined init with copy of ConversationControlsType((uint64_t)v13, (uint64_t)&v34);
    outlined destroy of SystemUpdateNotice?((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  OUTLINED_FUNCTION_12_78(12);
  outlined init with copy of FeatureEligibility?((uint64_t)&v34, (uint64_t)v31, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined init with copy of FeatureEligibility?((uint64_t)v33, v25, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v32 == 255)
  {
    uint64_t v26 = (uint64_t)&demangling cache variable for type metadata for ConversationControlsType?;
    OUTLINED_FUNCTION_46_25();
    OUTLINED_FUNCTION_47_21();
    OUTLINED_FUNCTION_45_21();
    if (v24) {
      goto LABEL_37;
    }
    goto LABEL_27;
  }
  outlined init with copy of FeatureEligibility?((uint64_t)v31, (uint64_t)v30, &demangling cache variable for type metadata for ConversationControlsType?);
  OUTLINED_FUNCTION_45_21();
  if (v24)
  {
    uint64_t v26 = (uint64_t)&demangling cache variable for type metadata for ConversationControlsType?;
    OUTLINED_FUNCTION_46_25();
    OUTLINED_FUNCTION_47_21();
    outlined destroy of ConversationControlsType((uint64_t)v30);
LABEL_27:
    outlined destroy of SystemUpdateNotice?((uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for (ConversationControlsType?, ConversationControlsType?));
    goto LABEL_28;
  }
  outlined init with take of ConversationControlsType((long long *)v25, v29);
  uint64_t v26 = static ConversationControlsType.== infix(_:_:)((uint64_t)v30);
  outlined destroy of ConversationControlsType((uint64_t)v29);
  outlined destroy of SystemUpdateNotice?((uint64_t)v33, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined destroy of SystemUpdateNotice?((uint64_t)&v34, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined destroy of ConversationControlsType((uint64_t)v30);
  outlined destroy of SystemUpdateNotice?((uint64_t)v31, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v26) {
    goto LABEL_38;
  }
LABEL_28:
  OUTLINED_FUNCTION_33_37();
  v23();
  if (OUTLINED_FUNCTION_21_16((uint64_t)v10))
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    OUTLINED_FUNCTION_26_49();
  }
  else
  {
    outlined init with copy of ConversationControlsType((uint64_t)v10, (uint64_t)&v34);
    outlined destroy of SystemUpdateNotice?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  OUTLINED_FUNCTION_12_78(24);
  outlined init with copy of FeatureEligibility?((uint64_t)&v34, (uint64_t)v31, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined init with copy of FeatureEligibility?((uint64_t)v33, v26, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v32 == 255)
  {
    OUTLINED_FUNCTION_46_25();
    OUTLINED_FUNCTION_47_21();
    OUTLINED_FUNCTION_45_21();
    if (!v24) {
      goto LABEL_40;
    }
LABEL_37:
    outlined destroy of SystemUpdateNotice?((uint64_t)v31, &demangling cache variable for type metadata for ConversationControlsType?);
    goto LABEL_38;
  }
  outlined init with copy of FeatureEligibility?((uint64_t)v31, (uint64_t)v30, &demangling cache variable for type metadata for ConversationControlsType?);
  OUTLINED_FUNCTION_45_21();
  if (!v24)
  {
    outlined init with take of ConversationControlsType((long long *)v26, v29);
    char v27 = static ConversationControlsType.== infix(_:_:)((uint64_t)v30);
    outlined destroy of ConversationControlsType((uint64_t)v29);
    outlined destroy of SystemUpdateNotice?((uint64_t)v33, &demangling cache variable for type metadata for ConversationControlsType?);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v34, &demangling cache variable for type metadata for ConversationControlsType?);
    outlined destroy of ConversationControlsType((uint64_t)v30);
    outlined destroy of SystemUpdateNotice?((uint64_t)v31, &demangling cache variable for type metadata for ConversationControlsType?);
    if (v27) {
      goto LABEL_38;
    }
    goto LABEL_41;
  }
  OUTLINED_FUNCTION_46_25();
  OUTLINED_FUNCTION_47_21();
  outlined destroy of ConversationControlsType((uint64_t)v30);
LABEL_40:
  outlined destroy of SystemUpdateNotice?((uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for (ConversationControlsType?, ConversationControlsType?));
LABEL_41:
  OUTLINED_FUNCTION_33_37();
  v23();
  if (OUTLINED_FUNCTION_21_16(v1))
  {
    outlined destroy of SystemUpdateNotice?(v1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  else
  {
    outlined init with copy of ConversationControlsType(v1, (uint64_t)v31);
    outlined destroy of SystemUpdateNotice?(v1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    outlined init with copy of ConversationControlsType((uint64_t)v31, (uint64_t)&v34);
    if (v37 != 6
      || v34 != 5
      || (int8x16_t v28 = vorrq_s8(v35, v36),
          *(void *)&vorr_s8(*(int8x8_t *)v28.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v28, v28, 8uLL))))
    {
      outlined destroy of ConversationControlsType((uint64_t)&v34);
    }
    outlined destroy of ConversationControlsType((uint64_t)v31);
  }
LABEL_38:
  OUTLINED_FUNCTION_28();
}

void key path getter for ConversationHUDViewController.cnkContentAlpha : ConversationHUDViewController(void **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x1A0))();
}

uint64_t key path setter for ConversationHUDViewController.cnkContentAlpha : ConversationHUDViewController(double *a1, void **a2)
{
  return (*(uint64_t (**)(double))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x1A8))(*a1);
}

void ConversationHUDViewController.cnkContentAlpha.didset()
{
  uint64_t v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView);
  if (v1)
  {
    uint64_t v2 = (double *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_cnkContentAlpha);
    swift_beginAccess();
    objc_msgSend(v1, sel_setAlpha_, *v2);
  }
  uint64_t v3 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
  uint64_t v4 = (double *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_cnkContentAlpha);
  swift_beginAccess();
  objc_msgSend(v3, sel_setAlpha_, *v4);

  uint64_t v5 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView;
  uint64_t v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  if (v6)
  {
    uint64_t v7 = *((void *)v5 + 1);
    uint64_t ObjectType = swift_getObjectType();
    double v9 = *v4;
    int64_t v10 = *(void (**)(uint64_t, uint64_t, double))(v7 + 32);
    id v11 = v6;
    v10(ObjectType, v7, v9);
  }
}

double ConversationHUDViewController.cnkContentAlpha.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *(double *)v0;
}

void ConversationHUDViewController.cnkContentAlpha.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_cnkContentAlpha);
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  ConversationHUDViewController.cnkContentAlpha.didset();
}

uint64_t (*ConversationHUDViewController.cnkContentAlpha.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return ConversationHUDViewController.cnkContentAlpha.modify;
}

uint64_t ConversationHUDViewController.cnkContentAlpha.modify(uint64_t a1, char a2)
{
  return ConversationHUDViewController.deferPillUpdates.modify(a1, a2, (uint64_t (*)(uint64_t))ConversationHUDViewController.cnkContentAlpha.didset);
}

uint64_t ConversationHUDViewController.deferPillUpdates.modify(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t key path getter for ConversationHUDViewController.backgroundMaterialView : ConversationHUDViewController@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x1B8))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationHUDViewController.backgroundMaterialView : ConversationHUDViewController(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x1C0))(*a1);
}

id ConversationHUDViewController.backgroundMaterialView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController____lazy_storage___backgroundMaterialView;
  uint64_t v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController____lazy_storage___backgroundMaterialView);
  if (v2)
  {
    id v3 = *(id *)((char *)v0
               + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController____lazy_storage___backgroundMaterialView);
  }
  else
  {
    id v4 = closure #1 in ConversationHUDViewController.backgroundMaterialView.getter(v0);
    uint64_t v5 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id closure #1 in ConversationHUDViewController.backgroundMaterialView.getter(void *a1)
{
  id v2 = objc_msgSend(self, sel_effectWithStyle_, 18);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v2);

  id v4 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v5 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x1A0);
  id v6 = v3;
  v5();
  objc_msgSend(v6, sel_setAlpha_);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v7 = v6;
  static Layout.ConversationControls.values.getter((uint64_t)v24);
  objc_msgSend(v7, sel__setContinuousCornerRadius_, v24[19] * 0.5 + ConversationHUDViewController.contentInsetForCornerRadius.getter());

  uint64_t v8 = *(uint64_t (**)(void))((*v4 & *a1) + 0x360);
  if (v8())
  {
    uint64_t v10 = v9;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
    char v13 = v12;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = 0;
  }
  objc_msgSend(v7, sel__setCaptureView_, v13);

  if (v8())
  {
    uint64_t v15 = v14;
    uint64_t v16 = swift_getObjectType();
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 32))(v16, v15);
    uint64_t v19 = v18;
    unsigned int v21 = v20;
    swift_unknownObjectRelease();

    uint64_t v22 = (void *)MEMORY[0x1C87730B0](v17, v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = 0;
  }
  objc_msgSend(v7, sel__setGroupName_, v22);

  return v7;
}

void ConversationHUDViewController.backgroundMaterialView.setter(uint64_t a1)
{
}

void (*ConversationHUDViewController.backgroundMaterialView.modify(id *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = ConversationHUDViewController.backgroundMaterialView.getter();
  return ConversationHUDViewController.backgroundMaterialView.modify;
}

void ConversationHUDViewController.backgroundMaterialView.modify(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    ConversationHUDViewController.backgroundMaterialView.setter((uint64_t)v3);
  }
  else
  {
    ConversationHUDViewController.backgroundMaterialView.setter((uint64_t)v2);
  }
}

double ConversationHUDViewController.contentInsetForCornerRadius.getter()
{
  OUTLINED_FUNCTION_0_20();
  char v1 = (*(uint64_t (**)(void))(v0 + 264))();
  double result = 0.0;
  if (v1 != 2)
  {
    static Layout.ConversationControls.values.getter((uint64_t)v3);
    return *(double *)&v3[13];
  }
  return result;
}

void ConversationHUDViewController.controlsView.setter(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  id v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  *id v3 = a1;
  v3[1] = a2;
}

void ConversationHUDViewController.menuContainerView.setter(uint64_t a1)
{
}

void ConversationHUDViewController.appLaunchPillView.setter(uint64_t a1)
{
}

void ConversationHUDViewController.topConstraint.setter(uint64_t a1)
{
}

void ConversationHUDViewController.bottomConstraint.setter(uint64_t a1)
{
}

void ConversationHUDViewController.shareCardViewController.setter(uint64_t a1)
{
}

void *ConversationHUDViewController.init(recipe:presentationSize:controlsManager:context:)(uint64_t a1, void *a2, char a3)
{
  OUTLINED_FUNCTION_19_0();
  uint64_t v9 = v8;
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_ephemeralAlertCancellable] = 0;
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchButtonCancellable] = 0;
  uint64_t v10 = &v3[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shadowProperties];
  id v11 = self;
  uint64_t v12 = v3;
  id v13 = objc_msgSend(v11, sel_blackColor);
  static Layout.ConversationControls.values.getter((uint64_t)v32);
  int v14 = v33;
  static Layout.ConversationControls.values.getter((uint64_t)v34);
  uint64_t v15 = v35;
  static Layout.ConversationControls.values.getter((uint64_t)v36);
  *(void *)uint64_t v10 = v13;
  *((_DWORD *)v10 + 2) = v14;
  *((void *)v10 + 2) = v15;
  *(_OWORD *)(v10 + 24) = v37;
  v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_deferPillUpdates] = 0;
  v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_pillShouldBeShowing] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_cnkContentAlpha] = 0x3FF0000000000000;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController____lazy_storage___backgroundMaterialView] = 0;
  uint64_t v16 = &v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_menuContainerView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_detailsHeightLayoutConstraint] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_detailsWidthLayoutConstraint] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_topConstraint] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_bottomConstraint] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shareCardViewController] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v17 = (uint64_t)&v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_recipe];
  uint64_t v18 = type metadata accessor for ConversationControlsRecipe();
  __swift_storeEnumTagSinglePayload(v17, 1, 1, v18);
  swift_beginAccess();
  uint64_t v19 = OUTLINED_FUNCTION_35();
  outlined assign with copy of ConversationControlsRecipe?(v19, v20);
  swift_endAccess();
  unsigned int v21 = &v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_presentationSize];
  *(void *)unsigned int v21 = v5;
  *((void *)v21 + 1) = v4;
  *(void *)&v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsManager] = a2;
  v12[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_context] = a3;
  id v22 = a2;

  v31.receiver = v12;
  v31.super_class = (Class)type metadata accessor for ConversationHUDViewController();
  id v23 = objc_msgSendSuper2(&v31, sel_initWithNibName_bundle_, 0, 0);
  char v24 = (void *)MEMORY[0x1E4FBC8C8];
  OUTLINED_FUNCTION_0_91();
  uint64_t v26 = *(uint64_t (**)(double))(v25 + 960);
  char v27 = v23;
  double v28 = OUTLINED_FUNCTION_112();
  uint64_t v29 = v26(v28);
  (*(void (**)(uint64_t))((*v24 & *v27) + 0x3D8))(v29);

  outlined destroy of SystemUpdateNotice?(v9, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  return v27;
}

uint64_t type metadata accessor for ConversationHUDViewController()
{
  uint64_t result = type metadata singleton initialization cache for ConversationHUDViewController;
  if (!type metadata singleton initialization cache for ConversationHUDViewController) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id ConversationHUDViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ConversationHUDViewController.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_ephemeralAlertCancellable] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchButtonCancellable] = 0;
  char v1 = &v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shadowProperties];
  id v2 = objc_msgSend(self, sel_blackColor);
  static Layout.ConversationControls.values.getter((uint64_t)v8);
  int v3 = v9;
  static Layout.ConversationControls.values.getter((uint64_t)v10);
  uint64_t v4 = v11;
  static Layout.ConversationControls.values.getter((uint64_t)v12);
  *(void *)char v1 = v2;
  *((_DWORD *)v1 + 2) = v3;
  *((void *)v1 + 2) = v4;
  *(_OWORD *)(v1 + 24) = v13;
  v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_deferPillUpdates] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_pillShouldBeShowing] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_cnkContentAlpha] = 0x3FF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController____lazy_storage___backgroundMaterialView] = 0;
  uint64_t v5 = &v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView];
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_menuContainerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_detailsHeightLayoutConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_detailsWidthLayoutConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_topConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_bottomConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shareCardViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_recipe];
  uint64_t v7 = type metadata accessor for ConversationControlsRecipe();
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v7);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ConversationHUDViewController.viewDidLoad()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for ConversationHUDViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  ConversationHUDViewController.setupRootView()();
  objc_msgSend(v0, sel_setOverrideUserInterfaceStyle_, 2);
}

Swift::Void __swiftcall ConversationHUDViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  OUTLINED_FUNCTION_49_2();
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for ConversationHUDViewController();
  objc_msgSendSuper2(&v14, sel_traitCollectionDidChange_);
  id v3 = objc_msgSend(v2, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!v1)
  {

LABEL_9:
    uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView];
    if (v12) {
      objc_msgSend(v12, sel_traitCollectionDidChange_, v1);
    }
    OUTLINED_FUNCTION_0_20();
    (*(void (**)(void))(v13 + 952))();
    return;
  }
  id v5 = objc_msgSend(v1, sel_preferredContentSizeCategory);
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    goto LABEL_9;
  }
}

void ConversationHUDViewController.viewWillTransition(to:with:)(void *a1)
{
  id v2 = v1;
  OUTLINED_FUNCTION_19_0();
  swift_getObjectType();
  uint64_t v29 = v1;
  uint64_t v30 = type metadata accessor for ConversationHUDViewController();
  double v4 = OUTLINED_FUNCTION_112();
  objc_msgSendSuper2(v5, v6, a1, v4);
  objc_msgSend(v1, sel_preferredContentSize);
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = OUTLINED_FUNCTION_30(v7, (uint64_t)static Logger.conversationControls);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = OUTLINED_FUNCTION_9_0();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446722;
    uint64_t v11 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &aBlock);
    OUTLINED_FUNCTION_85_7();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    OUTLINED_FUNCTION_112();
    uint64_t v13 = CGSize.debugDescription.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &aBlock);
    OUTLINED_FUNCTION_85_7();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2082;
    uint64_t v15 = CGSize.debugDescription.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &aBlock);
    OUTLINED_FUNCTION_85_7();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v8, v9, "[%{public}s] willTransition(to size: %{public}s, with coordinator:) , preffered contentSize %{public}s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  uint64_t v17 = OUTLINED_FUNCTION_20();
  *(void *)(v17 + 16) = v2;
  char v27 = (void (*)(int))partial apply for closure #1 in ConversationHUDViewController.viewWillTransition(to:with:);
  uint64_t v28 = v17;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v24 = 1107296256;
  uint64_t v25 = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
  uint64_t v26 = &block_descriptor_115;
  uint64_t v18 = _Block_copy(&aBlock);
  id v19 = v2;
  swift_release();
  uint64_t v20 = OUTLINED_FUNCTION_20();
  *(void *)(v20 + 16) = v19;
  char v27 = partial apply for closure #2 in ConversationHUDViewController.viewWillTransition(to:with:);
  uint64_t v28 = v20;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v24 = 1107296256;
  uint64_t v25 = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
  uint64_t v26 = &block_descriptor_8_0;
  unsigned int v21 = _Block_copy(&aBlock);
  id v22 = v19;
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v18, v21);
  _Block_release(v21);
  _Block_release(v18);
}

Swift::Bool __swiftcall ConversationHUDViewController._canShowWhileLocked()()
{
  return 1;
}

id ConversationHUDViewController.setupRootView()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_21();
  uint64_t v5 = v4 - v3;
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v7 = result;
    id v8 = objc_msgSend(result, sel_layer);

    objc_msgSend(v8, sel_setAllowsGroupOpacity_, 0);
    ConversationHUDViewController.setupMaterialView()();
    ConversationHUDViewController.setupControlsView(animated:)();
    uint64_t v9 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
    __swift_storeEnumTagSinglePayload(v5, 1, 1, v9);
    ConversationHUDViewController.setupAppLaunchPill(buttonType:)();
    outlined destroy of SystemUpdateNotice?(v5, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
    OUTLINED_FUNCTION_0_3();
    (*(void (**)(void))(v10 + 952))();
    __swift_storeEnumTagSinglePayload(v5, 1, 1, v9);
    ConversationHUDViewController.showAppLaunchPill(buttonType:)();
    outlined destroy of SystemUpdateNotice?(v5, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
    OUTLINED_FUNCTION_0_3();
    id result = (id)(*(uint64_t (**)(void))(v11 + 264))();
    if (result == 1)
    {
      OUTLINED_FUNCTION_10_1();
      return (id)(*(uint64_t (**)(uint64_t))(v12 + 368))(1);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void ConversationHUDViewController.setupMaterialView()()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v1 = v0;
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3C8))();
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_30_21();
  uint64_t v5 = *(uint64_t (**)(void))(v4 + 440);
  OUTLINED_FUNCTION_20_62();
  SEL v6 = (void *)v5();
  objc_msgSend(v3, sel_addSubview_, v6);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C3769F40;
  OUTLINED_FUNCTION_20_62();
  id v8 = (void *)v5();
  id v9 = objc_msgSend(v8, sel_leadingAnchor);

  id v10 = objc_msgSend(v1, sel_view);
  if (!v10)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v11 = v10;
  id v12 = objc_msgSend(v10, sel_leadingAnchor);

  id v13 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v12);
  *(void *)(v7 + 32) = v13;
  OUTLINED_FUNCTION_20_62();
  unint64_t v14 = (void *)v5();
  id v15 = objc_msgSend(v14, sel_topAnchor);

  id v16 = objc_msgSend(v1, sel_view);
  if (!v16)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v17 = v16;
  id v18 = objc_msgSend(v16, sel_topAnchor);

  id v19 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v18);
  *(void *)(v7 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v19;
  OUTLINED_FUNCTION_20_62();
  uint64_t v20 = (void *)v5();
  id v21 = objc_msgSend(v20, sel_trailingAnchor);

  id v22 = objc_msgSend(v1, sel_view);
  if (!v22)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  id v23 = v22;
  uint64_t v24 = self;
  id v25 = objc_msgSend(v23, sel_trailingAnchor);

  id v26 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v25);
  *(void *)(v7 + 48) = v26;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_activateConstraints_, isa);

  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_40_29();
  if (v28())
  {
    OUTLINED_FUNCTION_22();
    return;
  }
  OUTLINED_FUNCTION_20_62();
  uint64_t v29 = (void *)v5();
  id v30 = objc_msgSend(v29, sel_bottomAnchor);

  id v31 = objc_msgSend(v1, sel_view);
  if (!v31) {
    goto LABEL_15;
  }
  unsigned __int8 v32 = v31;
  id v33 = objc_msgSend(v31, sel_bottomAnchor);

  id v36 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v33);
  objc_msgSend(v36, sel_setActive_, 1);
  OUTLINED_FUNCTION_22();
}

void ConversationHUDViewController.makeControlsView(recipe:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  swift_getObjectType();
  OUTLINED_FUNCTION_49_2();
  uint64_t v4 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v53 - v7;
  ConversationHUDViewController.makeSystemApertureControlsView(for:)();
  if (v9)
  {
    uint64_t v11 = v9;
    uint64_t v12 = v10;
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    unint64_t v14 = OUTLINED_FUNCTION_30(v13, (uint64_t)static Logger.conversationControls);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v53 = v12;
      uint64_t v16 = OUTLINED_FUNCTION_37();
      uint64_t v54 = v3;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v18 = OUTLINED_FUNCTION_9_0();
      double v55 = v1;
      v56[0] = v18;
      *(_DWORD *)uint64_t v17 = 136446210;
      uint64_t v19 = _typeName(_:qualified:)();
      uint64_t v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, v56);
      OUTLINED_FUNCTION_8_5(v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v14, v15, "[%{public}s] makeControlsView using makeSystemApertureControlsView", v17, 0xCu);
      OUTLINED_FUNCTION_52_2();
      uint64_t v1 = v55;
      OUTLINED_FUNCTION_3();
      uint64_t v3 = v54;
      OUTLINED_FUNCTION_3();
    }

    uint64_t v22 = *MEMORY[0x1E4FB27D0];
    objc_msgSend(v11, sel_setMinimumContentSizeCategory_, *MEMORY[0x1E4FB27D0]);
    objc_msgSend(v11, sel_setMaximumContentSizeCategory_, v22);
    LODWORD(v22) = *(unsigned __int8 *)(v3 + *(int *)(v4 + 64));
    _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
    if (v22 == 1)
    {
      _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
LABEL_15:
      id v37 = v11;
      addStatusTapTo #1 (_:) in ConversationHUDViewController.makeControlsView(recipe:)(v37, v1);

      goto LABEL_21;
    }
    OUTLINED_FUNCTION_34_41(24);
    char v36 = static ConversationControlsType.== infix(_:_:)((uint64_t)v8);
    outlined destroy of ConversationControlsType((uint64_t)v56);
    _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
    if (v36) {
      goto LABEL_15;
    }
  }
  else
  {
    OUTLINED_FUNCTION_34_41(7);
    char v23 = static ConversationControlsType.== infix(_:_:)(v3);
    outlined destroy of ConversationControlsType((uint64_t)v56);
    if (v23)
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      id v25 = OUTLINED_FUNCTION_30(v24, (uint64_t)static Logger.conversationControls);
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        OUTLINED_FUNCTION_37();
        v56[0] = OUTLINED_FUNCTION_9_0();
        uint64_t v27 = OUTLINED_FUNCTION_54_15(4.8751e-34);
        uint64_t v29 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, v56);
        OUTLINED_FUNCTION_37_33(v29);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_75_10(&dword_1C2F90000, v25, v26, "[%{public}s] makeControlsView using OngoingTelephonyControlsView");
        OUTLINED_FUNCTION_52_2();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }

      _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
      OUTLINED_FUNCTION_14_79();
      v30();
      OUTLINED_FUNCTION_49_2();
      objc_allocWithZone((Class)type metadata accessor for OngoingTelephonyControlsView());
      id v31 = v1;
      uint64_t v32 = OUTLINED_FUNCTION_74();
      uint64_t v35 = OngoingTelephonyControlsView.init(recipe:controlsManager:menuHostViewController:)(v32, v33, v1, v34);
      addStatusTapTo #1 (_:) in ConversationHUDViewController.makeControlsView(recipe:)(v35, v31);
    }
    else
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v38 = type metadata accessor for Logger();
      double v39 = OUTLINED_FUNCTION_30(v38, (uint64_t)static Logger.conversationControls);
      os_log_type_t v40 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v39, v40))
      {
        OUTLINED_FUNCTION_37();
        v56[0] = OUTLINED_FUNCTION_9_0();
        uint64_t v41 = OUTLINED_FUNCTION_54_15(4.8751e-34);
        uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, v56);
        OUTLINED_FUNCTION_37_33(v43);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_75_10(&dword_1C2F90000, v39, v40, "[%{public}s] makeControlsView using ConversationHUDControlsView");
        OUTLINED_FUNCTION_52_2();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }

      _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
      OUTLINED_FUNCTION_14_79();
      v44();
      OUTLINED_FUNCTION_5_18();
      char v46 = (*(uint64_t (**)(void))(v45 + 264))();
      objc_allocWithZone((Class)type metadata accessor for ConversationHUDControlsView());
      id v47 = v1;
      uint64_t v48 = OUTLINED_FUNCTION_74();
      id v52 = *(id *)((char *)ConversationHUDControlsView.init(recipe:controlsManager:context:menuHostViewController:)(v48, v49, v46, v50, v51)+ OBJC_IVAR____TtC15ConversationKit27ConversationHUDControlsView_statusView);
      addStatusTapTo #1 (_:) in ConversationHUDViewController.makeControlsView(recipe:)(v52, v47);
    }
  }
LABEL_21:
  OUTLINED_FUNCTION_28();
}

void addStatusTapTo #1 (_:) in ConversationHUDViewController.makeControlsView(recipe:)(void *a1, void *a2)
{
  void v6[3] = type metadata accessor for ConversationHUDViewController();
  v6[0] = a2;
  objc_allocWithZone(MEMORY[0x1E4FB1D38]);
  id v4 = a2;
  id v5 = @nonobjc UITapGestureRecognizer.init(target:action:)(v6, (uint64_t)sel_statusViewTapped);
  objc_msgSend(v5, sel_setDelegate_, v4);
  objc_msgSend(a1, sel_addGestureRecognizer_, v5);
}

void ConversationHUDViewController.makeSystemApertureControlsView(for:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  swift_getObjectType();
  uint64_t v5 = type metadata accessor for ConversationControlsRecipe();
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_40_24();
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v80 - v8;
  OUTLINED_FUNCTION_0_3();
  uint64_t v11 = *(uint64_t (**)(void))(v10 + 864);
  uint64_t v12 = v11();
  if (!v12) {
    goto LABEL_14;
  }
  uint64_t v13 = v12;
  swift_getObjectType();
  if (!dynamic_cast_existential_1_conditional(v13))
  {
    swift_unknownObjectRelease();
LABEL_14:
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    __swift_project_value_buffer(v29, (uint64_t)static Logger.conversationControls);
    id v30 = v0;
    id v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = OUTLINED_FUNCTION_15_1();
      uint64_t v87 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136446466;
      uint64_t v34 = OUTLINED_FUNCTION_72_10();
      uint64_t v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v36 = swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v37 = ((uint64_t (*)(uint64_t))v11)(v36);
      if (v37)
      {
        uint64_t v83 = v37;
        v84.i64[0] = v38;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsViewControllerDelegate);
        uint64_t v39 = String.init<A>(reflecting:)();
        unint64_t v41 = v40;
      }
      else
      {
        unint64_t v41 = 0xE300000000000000;
        uint64_t v39 = 7104878;
      }
      uint64_t v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v41, &v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v31, v32, "[%{public}s] makeSystemApertureControlsView returning nil for delegate: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
    }
    goto LABEL_27;
  }
  uint64_t v15 = v14;
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 56))(ObjectType, v15))
  {
    outlined init with copy of ConversationControlsType(v4, (uint64_t)&v83);
    if (v86 != 6) {
      goto LABEL_39;
    }
    int8x16_t v17 = vorrq_s8(v84, v85);
    int8x8_t v18 = vorr_s8(*(int8x8_t *)v17.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL));
    if (v83 == 6 && !*(void *)&v18)
    {
LABEL_7:
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      unint64_t v20 = OUTLINED_FUNCTION_30(v19, (uint64_t)static Logger.conversationControls);
      os_log_type_t v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_37();
        uint64_t v82 = OUTLINED_FUNCTION_9_0();
        uint64_t v83 = v82;
        double v81 = v22;
        *(_DWORD *)uint64_t v22 = 136446210;
        double v80 = v22 + 4;
        uint64_t v23 = OUTLINED_FUNCTION_72_10();
        uint64_t v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v83);
        OUTLINED_FUNCTION_44_24(v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v20, v21, "[%{public}s] makeSystemApertureControlsView using SystemApertureIncomingCallControlsView", v81, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }

      _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
      OUTLINED_FUNCTION_94_1();
      OUTLINED_FUNCTION_14_79();
      uint64_t v27 = v26();
      LODWORD(v15) = objc_allocWithZone((Class)type metadata accessor for SystemApertureIncomingCallControlsView());
      id v28 = v2;
      if (SystemApertureIncomingCallControlsView.init(recipe:controlsManager:menuHostViewController:)((uint64_t)v9, v27, v2, (uint64_t)&protocol witness table for ConversationHUDViewController))
      {
        swift_unknownObjectRelease();
        goto LABEL_27;
      }
      goto LABEL_40;
    }
    if (v83 != 7 || *(void *)&v18)
    {
      if (v83 == 8 && !*(void *)&v18) {
        goto LABEL_7;
      }
      if (v83 != 9 || *(void *)&v18)
      {
LABEL_39:
        outlined destroy of ConversationControlsType((uint64_t)&v83);
LABEL_40:
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v60 = type metadata accessor for Logger();
        __swift_project_value_buffer(v60, (uint64_t)static Logger.conversationControls);
        _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
        double v61 = Logger.logObject.getter();
        os_log_type_t v62 = static os_log_type_t.default.getter();
        if (OUTLINED_FUNCTION_6_0(v62))
        {
          uint64_t v63 = OUTLINED_FUNCTION_15_1();
          LODWORD(v81) = v15;
          uint64_t v64 = v63;
          uint64_t v82 = swift_slowAlloc();
          uint64_t v87 = v82;
          *(_DWORD *)uint64_t v64 = 136446466;
          uint64_t v65 = OUTLINED_FUNCTION_72_10();
          uint64_t v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v66, &v87);
          OUTLINED_FUNCTION_8_5(v67);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v64 + 12) = 2082;
          outlined init with copy of ConversationControlsType(v1, (uint64_t)&v83);
          uint64_t v68 = specialized >> prefix<A>(_:)((uint64_t)&v83);
          unint64_t v70 = v69;
          outlined destroy of SystemUpdateNotice?((uint64_t)&v83, &demangling cache variable for type metadata for ConversationControlsType?);
          uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v70, &v87);
          OUTLINED_FUNCTION_8_5(v71);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
          _os_log_impl(&dword_1C2F90000, v61, (os_log_type_t)v81, "[%{public}s] makeSystemApertureControlsView using SystemApertureControlsView for recipeType: %{public}s", (uint8_t *)v64, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_3();
          OUTLINED_FUNCTION_3();
        }
        else
        {
          _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
        }

        _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
        OUTLINED_FUNCTION_94_1();
        OUTLINED_FUNCTION_14_79();
        double v73 = (void *)v72();
        OUTLINED_FUNCTION_0_62();
        char v75 = (*(uint64_t (**)(void))(v74 + 264))();
        objc_allocWithZone((Class)type metadata accessor for SystemApertureControlsView());
        id v76 = v2;
        id v77 = SystemApertureControlsView.init(recipe:controlsManager:context:menuHostViewController:)((uint64_t)v9, v73, v75, v2, (uint64_t)&protocol witness table for ConversationHUDViewController);
        LODWORD(v78) = 1148846080;
        objc_msgSend(v77, sel_setContentCompressionResistancePriority_forAxis_, 1, v78);
        LODWORD(v79) = 1112014848;
        objc_msgSend(v77, sel_setContentCompressionResistancePriority_forAxis_, 0, v79);
        swift_unknownObjectRelease();
        goto LABEL_27;
      }
    }
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    double v50 = OUTLINED_FUNCTION_30(v49, (uint64_t)static Logger.conversationControls);
    os_log_type_t v51 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_6_0(v51))
    {
      id v52 = (uint8_t *)OUTLINED_FUNCTION_37();
      uint64_t v53 = OUTLINED_FUNCTION_9_0();
      *(_DWORD *)id v52 = 136446210;
      uint64_t v82 = (uint64_t)(v52 + 4);
      uint64_t v83 = v53;
      uint64_t v54 = OUTLINED_FUNCTION_72_10();
      uint64_t v56 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, &v83);
      OUTLINED_FUNCTION_44_24(v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v50, (os_log_type_t)v15, "[%{public}s] makeSystemApertureControlsView using SystemApertureOngoingTelephonyControlsView", v52, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }

    _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
    OUTLINED_FUNCTION_94_1();
    OUTLINED_FUNCTION_14_79();
    double v58 = (void *)v57();
    objc_allocWithZone((Class)type metadata accessor for SystemApertureOngoingTelephonyControlsView());
    id v59 = v2;
    SystemApertureOngoingTelephonyControlsView.init(recipe:controlsManager:menuHostViewController:)((uint64_t)v9, v58, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    uint64_t v43 = OUTLINED_FUNCTION_30(v42, (uint64_t)static Logger.conversationControls);
    os_log_type_t v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)OUTLINED_FUNCTION_37();
      uint64_t v83 = OUTLINED_FUNCTION_9_0();
      *(_DWORD *)uint64_t v45 = 136446210;
      uint64_t v46 = OUTLINED_FUNCTION_72_10();
      uint64_t v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, &v83);
      OUTLINED_FUNCTION_44_24(v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v43, v44, "[%{public}s] makeSystemApertureControlsView returning nil since NOT in SystemAperture", v45, 0xCu);
      OUTLINED_FUNCTION_52_2();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
  }
LABEL_27:
  OUTLINED_FUNCTION_28();
}

void ConversationHUDViewController.setupControlsView(animated:)()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v65 = v2;
  uint64_t v66 = v3;
  uint64_t v4 = v0;
  char v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = OUTLINED_FUNCTION_4_120();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_10_35();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_62_11();
  v11();
  OUTLINED_FUNCTION_33_0(v1, 1, v9);
  if (v12)
  {
    outlined destroy of SystemUpdateNotice?(v1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
LABEL_20:
    OUTLINED_FUNCTION_33_2();
    return;
  }
  _s15ConversationKit0A14ControlsRecipeVWObTm_0();
  uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView];
  if (v13) {
    objc_msgSend(v13, sel_removeFromSuperview);
  }
  ConversationHUDViewController.makeControlsView(recipe:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  swift_getObjectType();
  objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  type metadata accessor for UILayoutPriority(0);
  int v64 = 1144750080;
  int v63 = 1120403456;
  lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
  id v18 = v15;
  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  LODWORD(v19) = v62[0];
  objc_msgSend(v18, sel_setContentCompressionResistancePriority_forAxis_, 1, v19);

  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_50_2();
  v20();
  OUTLINED_FUNCTION_195();
  v21();
  id v22 = v18;
  ConversationHUDViewController.controlsView.setter((uint64_t)v18, v17);
  OUTLINED_FUNCTION_1_12();
  unint64_t v24 = *(uint64_t (**)(void))(v23 + 440);
  uint64_t v25 = (void *)v24();
  id v26 = objc_msgSend(v25, sel_contentView);

  objc_msgSend(v26, sel_addSubview_, v22);
  if ((v6 & 1) != 0 && (objc_msgSend(v22, sel_isHidden) & 1) == 0)
  {
    objc_msgSend(v22, sel_setAlpha_, 0.0);
    uint64_t v27 = self;
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    OUTLINED_FUNCTION_50();
    double v29 = (*(double (**)(void))(v28 + 1016))();
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v22;
    *(void *)(v30 + 24) = v17;
    id v62[4] = partial apply for closure #2 in animateBubble #1 (_:) in MomentsIndicatorView.refreshLayout();
    v62[5] = v30;
    v62[0] = MEMORY[0x1E4F143A8];
    v62[1] = 1107296256;
    v62[2] = thunk for @escaping @callee_guaranteed () -> ();
    v62[3] = &block_descriptor_91;
    id v31 = _Block_copy(v62);
    id v32 = v22;
    swift_release();
    objc_msgSend(v27, sel_animateWithDuration_animations_, v31, v29);
    _Block_release(v31);
  }
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional((uint64_t)v22))
  {
    OUTLINED_FUNCTION_30_21();
    uint64_t v34 = *(unsigned __int8 (**)(void))(v33 + 264);
    id v35 = v22;
    uint64_t v36 = &selRef_statusViewTapped;
    if (v34() != 2)
    {
      OUTLINED_FUNCTION_30_21();
      OUTLINED_FUNCTION_14_79();
      v37();
      OUTLINED_FUNCTION_98_5();
      OUTLINED_FUNCTION_0_91();
      char v39 = (*(uint64_t (**)(void))(v38 + 800))();

      if ((v39 & 1) == 0) {
        uint64_t v36 = &selRef_showCallDetailsButtonTapped;
      }
    }
    unint64_t v40 = *v36;
    swift_getObjectType();
    OUTLINED_FUNCTION_195();
    uint64_t v42 = (void *)v41();
    objc_msgSend(v42, sel_addTarget_action_forControlEvents_, v4, v40, 64);
  }
  double v61 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1C3769610;
  id v44 = objc_msgSend(v22, sel_leadingAnchor);
  OUTLINED_FUNCTION_61_12();
  uint64_t v45 = (void *)v24();
  id v46 = objc_msgSend(v45, sel_leadingAnchor);

  id v47 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v46);
  *(void *)(v43 + 32) = v47;
  id v48 = objc_msgSend(v22, sel_trailingAnchor);
  OUTLINED_FUNCTION_61_12();
  uint64_t v49 = (void *)v24();
  id v50 = objc_msgSend(v49, sel_trailingAnchor);

  id v51 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v50);
  *(void *)(v43 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v51;
  v62[0] = v43;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v61, sel_activateConstraints_, isa);

  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_40_29();
  if (v53())
  {
LABEL_19:
    id v60 = v22;
    ConversationHUDViewController.verticallyConstrainView(_:above:spacing:)(v60, 0, 0.0);

    ConversationHUDViewController.constrainAppLaunchPillToControlsViewIfNeeded()();
    _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_61_12();
  uint64_t v54 = (void *)v24();
  id v55 = objc_msgSend(v54, sel_bottomAnchor);

  id v56 = objc_msgSend(v4, sel_view);
  if (v56)
  {
    double v57 = v56;
    id v58 = objc_msgSend(v56, sel_bottomAnchor);

    id v59 = objc_msgSend(v55, (SEL)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6, v58);
    objc_msgSend(v59, sel_setActive_, 1);

    goto LABEL_19;
  }
  __break(1u);
}

uint64_t ConversationHUDViewController.updateControlsView()()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = OUTLINED_FUNCTION_4_120();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_13_13();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_38_31();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_62_11();
  v8();
  OUTLINED_FUNCTION_33_0(v2, 1, v5);
  if (v9) {
    return outlined destroy of SystemUpdateNotice?(v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  _s15ConversationKit0A14ControlsRecipeVWObTm_0();
  uint64_t v11 = v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView;
  char v12 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  if (v12)
  {
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType();
    _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 56);
    id v16 = v12;
    v15(v1, ObjectType, v13);
  }
  return _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
}

void ConversationHUDViewController.verticallyConstrainView(_:above:spacing:)(void *a1, void *a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_topConstraint;
  uint64_t v8 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_topConstraint);
  uint64_t v41 = OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_bottomConstraint;
  char v9 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_bottomConstraint);
  if (!v8)
  {
    id v13 = v9;
    if (!v9) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  id v10 = v9;
  id v11 = v8;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_17_12();
  if (v12) {
    OUTLINED_FUNCTION_1_14();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (v9)
  {
LABEL_7:
    id v14 = v9;
    MEMORY[0x1C87733A0]();
    OUTLINED_FUNCTION_17_12();
    if (v12) {
      OUTLINED_FUNCTION_1_14();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
LABEL_10:
  uint64_t v15 = self;

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v43 = v15;
  objc_msgSend(v15, sel_deactivateConstraints_, isa);

  id v44 = a1;
  id v17 = objc_msgSend(a1, sel_topAnchor);
  OUTLINED_FUNCTION_5_18();
  double v19 = *(uint64_t (**)(void))(v18 + 440);
  unint64_t v20 = (void *)v19();
  id v21 = objc_msgSend(v20, sel_contentView);

  id v22 = objc_msgSend(v21, sel_topAnchor);
  id v23 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v22);

  ConversationHUDViewController.topConstraint.setter((uint64_t)v23);
  id v24 = a2;
  if (!a2) {
    id v24 = a1;
  }
  id v25 = a2;
  id v26 = objc_msgSend(v24, sel_bottomAnchor);

  uint64_t v27 = (void *)v19();
  id v28 = objc_msgSend(v27, sel_contentView);

  id v29 = objc_msgSend(v28, sel_bottomAnchor);
  id v30 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v29);

  ConversationHUDViewController.bottomConstraint.setter((uint64_t)v30);
  id v31 = *(void **)(v4 + v42);
  id v32 = *(void **)(v4 + v41);
  if (!v31)
  {
    id v35 = v32;
    if (!v32) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
  id v33 = v32;
  id v34 = v31;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_74_6();
  if (v12) {
    OUTLINED_FUNCTION_1_14();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (v32)
  {
LABEL_18:
    id v36 = v32;
    MEMORY[0x1C87733A0]();
    OUTLINED_FUNCTION_74_6();
    if (v12) {
      OUTLINED_FUNCTION_1_14();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
LABEL_21:

  Class v37 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v43, sel_activateConstraints_, v37);

  if (a2)
  {
    id v38 = v25;
    id v39 = objc_msgSend(v38, sel_topAnchor);
    id v40 = objc_msgSend(v44, sel_bottomAnchor);
    id v45 = objc_msgSend(v39, sel_constraintEqualToAnchor_constant_, v40, a3);

    objc_msgSend(v45, sel_setActive_, 1);
  }
}

void __swiftcall ConversationHUDViewController.setupMenuContainerView()(UIView_optional *__return_ptr retstr)
{
  ConversationHUDViewController.menuContainerFrame.getter();
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, v3, v4, v5, v6);
  id v8 = v7;
  ConversationHUDViewController.menuContainerView.setter((uint64_t)v7);
  OUTLINED_FUNCTION_0_3();
  if (!(*(uint64_t (**)(void))(v9 + 864))()) {
    goto LABEL_7;
  }
  uint64_t v10 = OUTLINED_FUNCTION_125();
  if (((*(uint64_t (**)(uint64_t))(v2 + 24))(v10) & 1) == 0)
  {
LABEL_6:
    swift_unknownObjectRelease();
LABEL_7:

    OUTLINED_FUNCTION_30_21();
    (*(void (**)(void))(v13 + 952))();
    return;
  }
  id v11 = objc_msgSend(v1, sel_view);
  if (v11)
  {
    id v12 = v11;
    objc_msgSend(v11, sel_addSubview_, v8);
    id v8 = v12;
    goto LABEL_6;
  }
  __break(1u);
}

Swift::Void __swiftcall ConversationHUDViewController.disableMenuContainerViewInteraction()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_menuContainerView);
  if (v1)
  {
    uint64_t v2 = one-time initialization token for conversationControls;
    id v8 = v1;
    if (v2 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    double v4 = OUTLINED_FUNCTION_30(v3, (uint64_t)static Logger.conversationControls);
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v6, v7, "disableMenuContainerViewInteraction");
      OUTLINED_FUNCTION_3();
    }

    objc_msgSend(v8, sel_setUserInteractionEnabled_, 0);
  }
}

Swift::Void __swiftcall ConversationHUDViewController.teardownMenuContainerView()()
{
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_menuContainerView), sel_removeFromSuperview);
  ConversationHUDViewController.menuContainerView.setter(0);
  OUTLINED_FUNCTION_0_3();
  uint64_t v2 = *(void (**)(void))(v1 + 952);
  v2();
}

void ConversationHUDViewController.setupAppLaunchPill(buttonType:)()
{
  void (*v95)(long long *__return_ptr);
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(void);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v106;
  uint64_t v107;
  char *v108;
  NSObject *v109;
  os_log_type_t v110;
  uint8_t *v111;
  uint64_t (*v112)(void);
  uint64_t v113;
  unint64_t v114;
  void *v115;
  void (*v116)(long long *);
  void *v117;
  void *v118;
  uint64_t v119;
  void (*v120)(long long *, char *);
  char *v121;
  id v122;
  void v123[2];
  uint64_t (*v124)(void);
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  long long v132;
  uint64_t v133;
  uint64_t v134[3];
  uint64_t v135;
  uint64_t v136;
  void v137[6];

  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (ConversationControlsAppLaunchButtonType?, ConversationControlsAppLaunchButtonType?));
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_21();
  double v128 = v7 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_10_5();
  char v126 = v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v123 - v12;
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)v123 - v15;
  MEMORY[0x1F4188790](v17);
  double v19 = (char *)v123 - v18;
  MEMORY[0x1F4188790](v20);
  id v22 = (char *)v123 - v21;
  uint64_t v23 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_10_5();
  double v129 = v25;
  MEMORY[0x1F4188790](v26);
  v127 = (char *)v123 - v27;
  MEMORY[0x1F4188790](v28);
  MEMORY[0x1F4188790](v29);
  double v130 = (char *)v123 - v30;
  OUTLINED_FUNCTION_0_3();
  if (((*(uint64_t (**)(void))(v31 + 360))() & 1) == 0)
  {
    outlined init with copy of FeatureEligibility?(v3, (uint64_t)v22, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
    uint64_t v125 = v23;
    OUTLINED_FUNCTION_33_0((uint64_t)v22, 1, v23);
    if (v55)
    {
      OUTLINED_FUNCTION_94_1();
      OUTLINED_FUNCTION_14_79();
      v32();
      OUTLINED_FUNCTION_98_5();
      OUTLINED_FUNCTION_0_91();
      (*(void (**)(void))(v33 + 2352))();

      outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
    }
    else
    {
      _s15ConversationKit0A14ControlsRecipeVWObTm_0();
    }
    ConversationHUDViewController.wantsAppLaunchPill(buttonType:)();
    if ((v34 & 1) == 0
      || !*(void *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView])
    {
      goto LABEL_32;
    }
    OUTLINED_FUNCTION_94_1();
    OUTLINED_FUNCTION_31_42();
    uint64_t v36 = v35();
    if (v36)
    {
      uint64_t v37 = v36;
      swift_getObjectType();
      if (dynamic_cast_existential_1_conditional(v37))
      {
        uint64_t v39 = v38;
        uint64_t ObjectType = swift_getObjectType();
        char v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 56))(ObjectType, v39);
        swift_unknownObjectRelease();
        if (v41)
        {
LABEL_32:
          _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
          goto LABEL_33;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    OUTLINED_FUNCTION_94_1();
    uint64_t v124 = *(uint64_t (**)(void))(v42 + 240);
    v123[1] = v42 + 240;
    id v43 = (void *)v124();
    OUTLINED_FUNCTION_0_91();
    (*(void (**)(void *__return_ptr))(v44 + 2304))(v137);

    id v45 = (uint64_t *)OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView;
    uint64_t v46 = *(void *)&v1[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView];
    _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
    if (v46)
    {
      v123[0] = v45;
      _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
      uint64_t v47 = v125;
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v125);
      OUTLINED_FUNCTION_74();
      _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v47);
      uint64_t v48 = *(int *)(v4 + 48);
      uint64_t v49 = v128;
      uint64_t v50 = v128 + v48;
      id v45 = &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?;
      outlined init with copy of FeatureEligibility?((uint64_t)v19, v128, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
      uint64_t v51 = OUTLINED_FUNCTION_35();
      outlined init with copy of FeatureEligibility?(v51, v52, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
      OUTLINED_FUNCTION_33_0(v49, 1, v47);
      if (v55)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v16, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
        uint64_t v49 = v128;
        outlined destroy of SystemUpdateNotice?((uint64_t)v19, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
        _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
        OUTLINED_FUNCTION_33_0(v50, 1, v47);
        uint64_t v53 = v47;
        uint64_t v54 = (void *)MEMORY[0x1E4FBC8C8];
        if (v55)
        {
          outlined destroy of SystemUpdateNotice?(v49, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
          OUTLINED_FUNCTION_64_9();
          goto LABEL_35;
        }
      }
      else
      {
        outlined init with copy of FeatureEligibility?(v49, (uint64_t)v13, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
        OUTLINED_FUNCTION_33_0(v50, 1, v47);
        if (!v55)
        {
          uint64_t v86 = (uint64_t)v127;
          _s15ConversationKit0A14ControlsRecipeVWObTm_0();
          char v87 = static ConversationControlsAppLaunchButtonType.== infix(_:_:)((uint64_t)v13, v86);
          _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
          outlined destroy of SystemUpdateNotice?((uint64_t)v16, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
          outlined destroy of SystemUpdateNotice?((uint64_t)v19, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
          _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
          _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
          outlined destroy of SystemUpdateNotice?(v49, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
          uint64_t v53 = v125;
          uint64_t v54 = (void *)MEMORY[0x1E4FBC8C8];
          OUTLINED_FUNCTION_64_9();
          if (v87)
          {
LABEL_35:
            outlined init with copy of FeatureEligibility?((uint64_t)v137, (uint64_t)&v132, &demangling cache variable for type metadata for Activity?);
            if (!v133)
            {
              outlined destroy of SystemUpdateNotice?((uint64_t)v137, &demangling cache variable for type metadata for Activity?);
              _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
              outlined destroy of SystemUpdateNotice?((uint64_t)&v132, &demangling cache variable for type metadata for Activity?);
              goto LABEL_33;
            }
            outlined init with take of Notice(&v132, (uint64_t)v134);
            uint64_t v88 = v135;
            uint64_t v89 = v136;
            __swift_project_boxed_opaque_existential_1(v134, v135);
            uint64_t v90 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 8))(v88, v89);
            uint64_t v92 = v91;
            uint64_t v93 = *(void **)((char *)&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?
                             + (void)v1);
            if (v93)
            {
              uint64_t v94 = v90;
              CGFloat v95 = *(void (**)(long long *__return_ptr))((*v54 & *v93) + 0xC8);
              double v96 = v93;
              v95(&v132);

              CGFloat v97 = v133;
              if (v133)
              {
                __swift_project_boxed_opaque_existential_1(&v132, v133);
                id v45 = v123;
                OUTLINED_FUNCTION_5_3();
                CGFloat v99 = v98;
                MEMORY[0x1F4188790](v100);
                OUTLINED_FUNCTION_5_1();
                (*(void (**)(void *))(v99 + 16))(v54);
                outlined destroy of SystemUpdateNotice?((uint64_t)&v132, &demangling cache variable for type metadata for Activity?);
                OUTLINED_FUNCTION_195();
                double v102 = v101();
                CGFloat v104 = v103;
                (*(void (**)(void *, uint64_t))(v99 + 8))(v54, v97);
                if (v94 == v102 && v92 == v104)
                {
                  swift_bridgeObjectRelease_n();
                  goto LABEL_57;
                }
                OUTLINED_FUNCTION_74();
                int v106 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v54 = (void *)MEMORY[0x1E4FBC8C8];
                OUTLINED_FUNCTION_64_9();
                if (v106) {
                  goto LABEL_57;
                }
LABEL_47:
                if (one-time initialization token for conversationControls != -1) {
                  swift_once();
                }
                CGFloat v107 = type metadata accessor for Logger();
                __swift_project_value_buffer(v107, (uint64_t)static Logger.conversationControls);
                uint64_t v108 = v1;
                double v109 = Logger.logObject.getter();
                double v110 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v109, v110))
                {
                  uint64_t v111 = (uint8_t *)OUTLINED_FUNCTION_37();
                  *(void *)&char v132 = OUTLINED_FUNCTION_9_0();
                  *(_DWORD *)uint64_t v111 = 136315138;
                  id v45 = (uint64_t *)(v111 + 12);
                  OUTLINED_FUNCTION_0_62();
                  OUTLINED_FUNCTION_40_29();
                  LOBYTE(v131) = v112();
                  uint64_t v113 = String.init<A>(reflecting:)();
                  double v131 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v113, v114, (uint64_t *)&v132);
                  OUTLINED_FUNCTION_64_9();
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_1C2F90000, v109, v110, "[%s] AppLaunchButton needs update (activity doesn't match currentActivity)", v111, 0xCu);
                  swift_arrayDestroy();
                  uint64_t v54 = (void *)MEMORY[0x1E4FBC8C8];
                  OUTLINED_FUNCTION_3();
                  OUTLINED_FUNCTION_3();
                }
                else
                {
                }
                uint64_t v115 = *(void **)((char *)v45 + (void)v1);
                if (v115)
                {
                  outlined init with copy of IDSLookupManager((uint64_t)v134, (uint64_t)&v132);
                  double v116 = *(void (**)(long long *))((*v54 & *v115) + 0xD0);
                  double v117 = v115;
                  v116(&v132);

                  double v118 = *(void **)((char *)v45 + (void)v1);
                  if (v118)
                  {
                    unint64_t v133 = type metadata accessor for ConversationHUDViewController();
                    *(void *)&char v132 = v108;
                    OUTLINED_FUNCTION_0_62();
                    double v120 = *(void (**)(long long *, char *))(v119 + 456);
                    double v121 = v108;
                    uint64_t v122 = v118;
                    v120(&v132, sel_appLaunchButtonTapped_);

                    outlined destroy of SystemUpdateNotice?((uint64_t)v137, &demangling cache variable for type metadata for Activity?);
                    _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v132);
LABEL_58:
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)v134);
                    goto LABEL_33;
                  }
                }
LABEL_57:
                outlined destroy of SystemUpdateNotice?((uint64_t)v137, &demangling cache variable for type metadata for Activity?);
                _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
                goto LABEL_58;
              }
              outlined destroy of SystemUpdateNotice?((uint64_t)&v132, &demangling cache variable for type metadata for Activity?);
            }
            swift_bridgeObjectRelease();
            goto LABEL_47;
          }
LABEL_24:
          id v58 = *(void **)((char *)v45 + (void)v1);
          if (v58) {
            objc_msgSend(v58, sel_removeFromSuperview);
          }
          if (one-time initialization token for conversationControls != -1) {
            swift_once();
          }
          uint64_t v59 = type metadata accessor for Logger();
          __swift_project_value_buffer(v59, (uint64_t)static Logger.conversationControls);
          _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
          id v60 = v1;
          double v61 = Logger.logObject.getter();
          os_log_type_t v62 = static os_log_type_t.default.getter();
          int v63 = v62;
          if (os_log_type_enabled(v61, v62))
          {
            uint64_t v64 = OUTLINED_FUNCTION_15_1();
            double v128 = swift_slowAlloc();
            v134[0] = v128;
            *(_DWORD *)uint64_t v64 = 136315394;
            OUTLINED_FUNCTION_0_62();
            LODWORD(v125) = v63;
            OUTLINED_FUNCTION_40_29();
            LOBYTE(v132) = v65();
            uint64_t v66 = String.init<A>(reflecting:)();
            *(void *)&char v132 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v67, v134);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v64 + 12) = 2080;
            uint64_t v68 = v126;
            _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
            __swift_storeEnumTagSinglePayload(v68, 0, 1, v53);
            uint64_t v69 = specialized >> prefix<A>(_:)();
            unint64_t v71 = v70;
            outlined destroy of SystemUpdateNotice?(v68, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
            *(void *)&char v132 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v71, v134);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
            _os_log_impl(&dword_1C2F90000, v61, (os_log_type_t)v125, "[%s] Setup AppLaunchButton, type: %s", (uint8_t *)v64, 0x16u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_3();
            OUTLINED_FUNCTION_3();
          }
          else
          {

            _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
          }

          OUTLINED_FUNCTION_14_79();
          double v73 = (void *)v72();
          OUTLINED_FUNCTION_0_62();
          char v75 = (*(uint64_t (**)(void))(v74 + 264))();
          uint64_t v76 = (uint64_t)v127;
          _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
          outlined init with copy of FeatureEligibility?((uint64_t)v137, (uint64_t)v134, &demangling cache variable for type metadata for Activity?);
          id v77 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDAppLaunchPillView());
          double v78 = v60;
          id v79 = ConversationHUDAppLaunchPillView.init(controlsManager:controlsContext:buttonType:menuHostViewController:activity:)(v73, v75, v76, v1, &protocol witness table for ConversationHUDViewController, (uint64_t)v134);
          double v135 = type metadata accessor for ConversationHUDViewController();
          v134[0] = (uint64_t)v78;
          OUTLINED_FUNCTION_0_3();
          double v81 = *(void (**)(uint64_t *, char *))(v80 + 456);
          v78;
          v81(v134, sel_appLaunchButtonTapped_);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v134);
          objc_msgSend(v79, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
          objc_msgSend(v79, sel_setAlpha_, 0.0);
          id v82 = v79;
          ConversationHUDViewController.appLaunchPillView.setter((uint64_t)v79);
          OUTLINED_FUNCTION_0_62();
          int8x16_t v84 = (void *)(*(uint64_t (**)(void))(v83 + 440))();
          id v85 = objc_msgSend(v84, sel_contentView);

          objc_msgSend(v85, sel_addSubview_, v82);
          ConversationHUDViewController.constrainAppLaunchPillToControlsViewIfNeeded()();

          outlined destroy of SystemUpdateNotice?((uint64_t)v137, &demangling cache variable for type metadata for Activity?);
          goto LABEL_32;
        }
        uint64_t v56 = OUTLINED_FUNCTION_35();
        outlined destroy of SystemUpdateNotice?(v56, v57);
        outlined destroy of SystemUpdateNotice?((uint64_t)v19, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
        _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
        _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
        uint64_t v53 = v125;
      }
      outlined destroy of SystemUpdateNotice?(v49, (uint64_t *)&demangling cache variable for type metadata for (ConversationControlsAppLaunchButtonType?, ConversationControlsAppLaunchButtonType?));
      OUTLINED_FUNCTION_64_9();
      goto LABEL_24;
    }
    _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
    uint64_t v53 = v125;
    goto LABEL_24;
  }
LABEL_33:
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationHUDViewController.shouldConstrainAppLaunchPillAboveControlsView.getter()
{
  OUTLINED_FUNCTION_0_20();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 864))();
  if (!v1) {
    goto LABEL_5;
  }
  uint64_t v2 = v1;
  swift_getObjectType();
  if (!dynamic_cast_existential_1_conditional(v2))
  {
    swift_unknownObjectRelease();
LABEL_5:
    char v6 = 0;
    return v6 & 1;
  }
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 24))(&v8, ObjectType, v4);
  swift_unknownObjectRelease();
  char v6 = v8 ^ 1;
  return v6 & 1;
}

void ConversationHUDViewController.constrainAppLaunchPillToControlsViewIfNeeded()()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView);
  if (v1
    && (uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView)) != 0)
  {
    id v3 = v1;
    id v4 = v2;
    id v5 = v3;
    id v6 = v4;
    char v7 = ConversationHUDViewController.shouldConstrainAppLaunchPillAboveControlsView.getter();
    if (v7) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = v5;
    }
    if (v7) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v6;
    }
    id v21 = self;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C3769610;
    id v11 = objc_msgSend(v5, sel_leadingAnchor);
    id v12 = objc_msgSend(v6, sel_leadingAnchor);
    id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

    *(void *)(v10 + 32) = v13;
    id v14 = objc_msgSend(v5, sel_trailingAnchor);
    id v15 = objc_msgSend(v6, sel_trailingAnchor);
    id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

    *(void *)(v10 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v16;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_activateConstraints_, isa);

    id v22 = v8;
    double v18 = ConversationHUDViewController.appLaunchPillVerticalMargin.getter();
    ConversationHUDViewController.verticallyConstrainView(_:above:spacing:)(v9, v8, v18);

    OUTLINED_FUNCTION_22();
  }
  else
  {
    OUTLINED_FUNCTION_22();
  }
}

void ConversationHUDViewController.showAppLaunchPill(buttonType:)()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v79 = v2;
  uint64_t v80 = v3;
  id v4 = v1;
  uint64_t v6 = v5;
  uint64_t v78 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_38_31();
  OUTLINED_FUNCTION_0_3();
  (*(void (**)(uint64_t))(v14 + 392))(1);
  OUTLINED_FUNCTION_0_3();
  if ((*(uint64_t (**)(void))(v15 + 360))()) {
    goto LABEL_39;
  }
  outlined init with copy of FeatureEligibility?(v6, (uint64_t)v10, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  OUTLINED_FUNCTION_33_0((uint64_t)v10, 1, v11);
  if (v16)
  {
    OUTLINED_FUNCTION_7_5();
    OUTLINED_FUNCTION_14_79();
    double v18 = (void *)v17();
    OUTLINED_FUNCTION_0_91();
    (*(void (**)(void))(v19 + 2352))();

    outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  }
  else
  {
    _s15ConversationKit0A14ControlsRecipeVWObTm_0();
  }
  ConversationHUDViewController.wantsAppLaunchPill(buttonType:)();
  if ((v20 & 1) == 0)
  {
LABEL_38:
    _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
    goto LABEL_39;
  }
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_31_42();
  uint64_t v22 = v21();
  if (!v22)
  {
LABEL_17:
    uint64_t v36 = self;
    _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v4;
    _s15ConversationKit0A14ControlsRecipeVWObTm_0();
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = partial apply for closure #1 in ConversationHUDViewController.showAppLaunchPill(buttonType:);
    *(void *)(v38 + 24) = v37;
    uint64_t v76 = partial apply for thunk for @callee_guaranteed () -> ();
    uint64_t v77 = v38;
    char v72 = (char *)MEMORY[0x1E4F143A8];
    uint64_t v73 = 1107296256;
    uint64_t v74 = thunk for @escaping @callee_guaranteed () -> ();
    char v75 = &block_descriptor_79_0;
    uint64_t v39 = _Block_copy(&v72);
    id v40 = v4;
    swift_retain();
    swift_release();
    objc_msgSend(v36, sel_performWithoutAnimation_, v39);
    _Block_release(v39);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      uint64_t v42 = *(void **)&v40[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView];
      if (!v42)
      {
LABEL_28:
        _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
        swift_release();
        goto LABEL_39;
      }
      uint64_t isEscapingClosureAtFileLocation = v42;
      objc_msgSend((id)isEscapingClosureAtFileLocation, sel_alpha);
      if (v43 != 0.0)
      {
        _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
        swift_release();

        goto LABEL_39;
      }
      if (one-time initialization token for conversationControls == -1)
      {
LABEL_21:
        uint64_t v44 = type metadata accessor for Logger();
        __swift_project_value_buffer(v44, (uint64_t)static Logger.conversationControls);
        id v45 = v40;
        uint64_t v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = OUTLINED_FUNCTION_37();
          uint64_t v69 = isEscapingClosureAtFileLocation;
          uint64_t v49 = (_DWORD *)v48;
          uint64_t v68 = OUTLINED_FUNCTION_9_0();
          char v72 = (char *)v68;
          unint64_t v70 = v36;
          *uint64_t v49 = 136315138;
          unint64_t v67 = v49 + 1;
          OUTLINED_FUNCTION_0_62();
          LOBYTE(v71) = (*(uint64_t (**)(void))(v50 + 264))();
          uint64_t v51 = String.init<A>(reflecting:)();
          uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v52, (uint64_t *)&v72);
          uint64_t v36 = v70;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_75_10(&dword_1C2F90000, v46, v47, "[%s] Showing AppLaunchButton");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_3();
          uint64_t isEscapingClosureAtFileLocation = v69;
          OUTLINED_FUNCTION_3();
        }
        else
        {
        }
        if (one-time initialization token for shared != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_50();
        double v54 = (*(double (**)(void))(v53 + 1016))();
        uint64_t v55 = swift_allocObject();
        *(void *)(v55 + 16) = isEscapingClosureAtFileLocation;
        *(void *)(v55 + 24) = v45;
        uint64_t v76 = partial apply for closure #2 in ConversationHUDViewController.showAppLaunchPill(buttonType:);
        uint64_t v77 = v55;
        char v72 = (char *)MEMORY[0x1E4F143A8];
        uint64_t v73 = 1107296256;
        uint64_t v74 = thunk for @escaping @callee_guaranteed () -> ();
        char v75 = &block_descriptor_85_0;
        uint64_t v56 = _Block_copy(&v72);
        double v57 = v45;
        id v58 = (id)isEscapingClosureAtFileLocation;
        swift_release();
        objc_msgSend(v36, sel_animateWithDuration_animations_, v56, v54);
        _Block_release(v56);

        goto LABEL_28;
      }
    }
    swift_once();
    goto LABEL_21;
  }
  uint64_t v23 = v22;
  swift_getObjectType();
  if (!dynamic_cast_existential_1_conditional(v23)
    || (OUTLINED_FUNCTION_125(), OUTLINED_FUNCTION_69_11(), (v24() & 1) == 0))
  {
    swift_unknownObjectRelease();
    goto LABEL_17;
  }
  uint64_t v25 = OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView;
  uint64_t v26 = *(void **)&v4[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView];
  if (!v26 || (swift_getObjectType(), !dynamic_cast_existential_1_conditional((uint64_t)v26)))
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v59 = type metadata accessor for Logger();
    __swift_project_value_buffer(v59, (uint64_t)static Logger.conversationControls);
    id v60 = v4;
    double v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v61, v62))
    {
      int v63 = (_DWORD *)OUTLINED_FUNCTION_37();
      uint64_t v64 = (void *)swift_slowAlloc();
      *int v63 = 138543362;
      uint64_t v65 = *(char **)&v4[v25];
      if (v65)
      {
        unint64_t v70 = v63 + 3;
        char v72 = v65;
        uint64_t v66 = v65;
      }
      else
      {
        char v72 = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v64 = v65;

      OUTLINED_FUNCTION_75_10(&dword_1C2F90000, v61, v62, "Unable to show app launch pill view in system aperture for controlsView: %{public}@");
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
    }
    swift_unknownObjectRelease();

    goto LABEL_38;
  }
  uint64_t v28 = v27;
  uint64_t v29 = one-time initialization token for conversationControls;
  id v30 = v26;
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  id v32 = OUTLINED_FUNCTION_30(v31, (uint64_t)static Logger.conversationControls);
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_6_0(v33))
  {
    char v34 = (uint8_t *)OUTLINED_FUNCTION_8_0();
    *(_WORD *)char v34 = 0;
    _os_log_impl(&dword_1C2F90000, v32, (os_log_type_t)v29, "[SystemAperture] Showing AppLaunchButton", v34, 2u);
    OUTLINED_FUNCTION_3();
  }

  uint64_t ObjectType = swift_getObjectType();
  char v75 = (void *)type metadata accessor for ConversationHUDViewController();
  char v72 = v4;
  (*(void (**)(uint64_t, char *, _UNKNOWN **, char **, char *, uint64_t, uint64_t))(v28 + 24))(v0, v4, &protocol witness table for ConversationHUDViewController, &v72, sel_appLaunchButtonTapped_, ObjectType, v28);
  swift_unknownObjectRelease();

  _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
LABEL_39:
  OUTLINED_FUNCTION_33_2();
}

uint64_t closure #1 in ConversationHUDViewController.showAppLaunchPill(buttonType:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
  uint64_t v5 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v5);
  ConversationHUDViewController.setupAppLaunchPill(buttonType:)();
  uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v4, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x3B8))(updated);
}

id closure #2 in ConversationHUDViewController.showAppLaunchPill(buttonType:)(void *a1, void *a2)
{
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *a2) + 0x1A0))();
  return objc_msgSend(a1, sel_setAlpha_);
}

void ConversationHUDViewController.hideAppLaunchPill(remove:)(char a1)
{
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_58();
  (*(void (**)(void))(v4 + 392))(0);
  OUTLINED_FUNCTION_0_3();
  if ((*(uint64_t (**)(void))(v5 + 360))()) {
    return;
  }
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_31_42();
  uint64_t v7 = v6();
  if (v7)
  {
    uint64_t v8 = v7;
    swift_getObjectType();
    if (dynamic_cast_existential_1_conditional(v8))
    {
      OUTLINED_FUNCTION_125();
      OUTLINED_FUNCTION_69_11();
      if (v9())
      {
        uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView];
        if (v10)
        {
          swift_getObjectType();
          if (dynamic_cast_existential_1_conditional((uint64_t)v10))
          {
            uint64_t v12 = v11;
            uint64_t v13 = one-time initialization token for conversationControls;
            id v40 = v10;
            if (v13 != -1) {
              swift_once();
            }
            uint64_t v14 = type metadata accessor for Logger();
            uint64_t v15 = OUTLINED_FUNCTION_30(v14, (uint64_t)static Logger.conversationControls);
            os_log_type_t v16 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v15, v16))
            {
              *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
              OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v17, v18, "[SystemAperture] Hiding AppLaunchButton");
              OUTLINED_FUNCTION_3();
            }

            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, uint64_t))(v12 + 32))(ObjectType, v12);
            swift_unknownObjectRelease();

            return;
          }
        }
      }
    }
    swift_unknownObjectRelease();
  }
  char v20 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView];
  if (v20)
  {
    id v21 = v20;
    objc_msgSend(v21, sel_alpha);
    if (v22 != 0.0)
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      __swift_project_value_buffer(v23, (uint64_t)static Logger.conversationControls);
      uint64_t v24 = v2;
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t aBlock = OUTLINED_FUNCTION_9_0();
        *(_DWORD *)uint64_t v27 = 136315394;
        OUTLINED_FUNCTION_0_62();
        (*(void (**)(void))(v28 + 264))();
        uint64_t v29 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 1024;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_1C2F90000, v25, v26, "[%s] Hiding AppLaunchButton, should remove: %{BOOL}d", (uint8_t *)v27, 0x12u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
      }
    }
    uint64_t v31 = self;
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    OUTLINED_FUNCTION_50();
    double v33 = (*(double (**)(void))(v32 + 1016))();
    uint64_t v34 = OUTLINED_FUNCTION_20();
    *(void *)(v34 + 16) = v21;
    id v45 = partial apply for closure #1 in FlashView.flash(completion:);
    uint64_t v46 = v34;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v42 = 1107296256;
    double v43 = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v44 = &block_descriptor_63_2;
    id v35 = _Block_copy(&aBlock);
    id v36 = v21;
    swift_release();
    uint64_t v37 = OUTLINED_FUNCTION_20();
    swift_unknownObjectWeakInit();
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v37;
    *(unsigned char *)(v38 + 24) = a1 & 1;
    id v45 = partial apply for closure #2 in ConversationHUDViewController.hideAppLaunchPill(remove:);
    uint64_t v46 = v38;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v42 = 1107296256;
    double v43 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    uint64_t v44 = &block_descriptor_70_0;
    uint64_t v39 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v31, sel_animateWithDuration_animations_completion_, v35, v39, v33);
    _Block_release(v39);
    _Block_release(v35);
  }
}

void closure #2 in ConversationHUDViewController.hideAppLaunchPill(remove:)(char a1, uint64_t a2, char a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = (char *)MEMORY[0x1C8776240](v5);
  if (v6)
  {
    uint64_t v7 = v6;
    if ((a1 & 1) == 0 || (a3 & 1) == 0)
    {

      return;
    }
    uint64_t v8 = *(void **)&v6[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView];
    if (v8)
    {
      uint64_t v9 = one-time initialization token for conversationControls;
      uint64_t v10 = v8;
      if (v9 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      __swift_project_value_buffer(v11, (uint64_t)static Logger.conversationControls);
      uint64_t v12 = v7;
      uint64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      BOOL v15 = os_log_type_enabled(v13, v14);
      os_log_type_t v16 = (void *)MEMORY[0x1E4FBC8C8];
      if (v15)
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        uint64_t v30 = v18;
        *(_DWORD *)uint64_t v17 = 136315138;
        (*(void (**)(void))((*v16 & *v12) + 0x108))();
        uint64_t v19 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v13, v14, "[%s] Removing AppLaunchButton", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v18, -1, -1);
        MEMORY[0x1C87760E0](v17, -1, -1);
      }
      else
      {
      }
      objc_msgSend(v10, sel_removeFromSuperview);
      ConversationHUDViewController.appLaunchPillView.setter(0);
      uint64_t v28 = *(void **)((char *)v12 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
      if (v28)
      {
        id v29 = v28;
        ConversationHUDViewController.verticallyConstrainView(_:above:spacing:)(v29, 0, 0.0);
      }
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v12) + 0x3B8))();
    }
    else
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      __swift_project_value_buffer(v21, (uint64_t)static Logger.conversationControls);
      uint64_t v10 = v7;
      double v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136315138;
        uint64_t v30 = v25;
        (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x108))();
        uint64_t v26 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v22, v23, "[%s] Unexpectedly found nil appLaunchPillView while attempting to remove it", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v25, -1, -1);
        MEMORY[0x1C87760E0](v24, -1, -1);

        return;
      }
    }
  }
}

Swift::Void __swiftcall ConversationHUDViewController.statusViewTapped()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = (int *)OUTLINED_FUNCTION_4_120();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_40_24();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v64 - v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_38_31();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_62_11();
  v11();
  OUTLINED_FUNCTION_33_0(v1, 1, (uint64_t)v5);
  if (!v12)
  {
    uint64_t v67 = v0;
    _s15ConversationKit0A14ControlsRecipeVWObTm_0();
    OUTLINED_FUNCTION_7_5();
    os_log_type_t v14 = *(uint64_t (**)(void))(v13 + 240);
    OUTLINED_FUNCTION_32_34();
    BOOL v15 = (void *)v14();
    OUTLINED_FUNCTION_0_91();
    (*(void (**)(void))(v16 + 624))();

    swift_getObjectType();
    OUTLINED_FUNCTION_195();
    char v18 = v17();
    swift_unknownObjectRelease();
    if (v18)
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      unint64_t v20 = OUTLINED_FUNCTION_30(v19, (uint64_t)static Logger.conversationControls);
      os_log_type_t v21 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v20, v21))
      {
        double v22 = (uint8_t *)OUTLINED_FUNCTION_8_0();
        *(_WORD *)double v22 = 0;
        _os_log_impl(&dword_1C2F90000, v20, v21, "Deep linking to in-call scene to show call details card for PTT call", v22, 2u);
        OUTLINED_FUNCTION_3();
      }

      OUTLINED_FUNCTION_7_5();
      OUTLINED_FUNCTION_31_42();
      uint64_t v24 = v23();
      if (v24)
      {
        uint64_t v25 = v24;
        swift_getObjectType();
        if (dynamic_cast_existential_1_conditional(v25))
        {
          uint64_t v27 = v26;
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v27 + 40))(ObjectType, v27);
        }
        swift_unknownObjectRelease();
      }
      goto LABEL_50;
    }
    OUTLINED_FUNCTION_32_34();
    id v29 = (void *)v14();
    Swift::Bool v30 = ConversationControlsManager.isActiveCallGreenTea3P()();

    if (v30)
    {
      OUTLINED_FUNCTION_32_34();
      uint64_t v31 = (void *)v14();
      ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)(1);

LABEL_50:
      _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
      goto LABEL_51;
    }
    OUTLINED_FUNCTION_7_5();
    uint64_t v65 = *(uint64_t (**)(void))(v32 + 864);
    uint64_t v33 = v65();
    if (v33)
    {
      uint64_t v34 = v33;
      swift_getObjectType();
      uint64_t v36 = dynamic_cast_existential_1_conditional(v34);
      if (v36)
      {
        uint64_t v66 = v35;
        goto LABEL_22;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v36 = 0;
    }
    uint64_t v66 = 0;
LABEL_22:
    OUTLINED_FUNCTION_32_34();
    uint64_t v37 = (void *)v14();
    OUTLINED_FUNCTION_0_91();
    char v39 = (*(uint64_t (**)(void))(v38 + 800))();

    if (v39)
    {
      int v40 = *(unsigned __int8 *)(v67 + v5[11]);
      _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
      if (v40 == 1)
      {
        _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
        goto LABEL_26;
      }
      int v41 = v9[v5[12]];
      _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
      if (v41 == 1)
      {
LABEL_26:
        uint64_t v42 = v67;
        if (v36)
        {
          uint64_t v43 = one-time initialization token for conversationControls;
          swift_unknownObjectRetain();
          if (v43 != -1) {
            swift_once();
          }
          uint64_t v44 = type metadata accessor for Logger();
          id v45 = OUTLINED_FUNCTION_30(v44, (uint64_t)static Logger.conversationControls);
          os_log_type_t v46 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v45, v46))
          {
            os_log_type_t v47 = (uint8_t *)OUTLINED_FUNCTION_8_0();
            *(_WORD *)os_log_type_t v47 = 0;
            _os_log_impl(&dword_1C2F90000, v45, v46, "Deep linking to in-call scene to show an AV-less call details card", v47, 2u);
            OUTLINED_FUNCTION_3();
          }

          uint64_t v48 = swift_getObjectType();
          (*(void (**)(uint64_t))(v66 + 24))(v48);
          goto LABEL_49;
        }
LABEL_38:
        OUTLINED_FUNCTION_7_5();
        if (((*(uint64_t (**)(void))(v52 + 936))() & 1) == 0)
        {
          int v53 = *(unsigned __int8 *)(v42 + v5[11]);
          _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
          if (v53 == 1)
          {
            uint64_t v54 = _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
            goto LABEL_42;
          }
          int v55 = *(unsigned __int8 *)(v2 + v5[12]);
          uint64_t v54 = _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
          if (v55 == 1)
          {
LABEL_42:
            uint64_t v56 = ((uint64_t (*)(uint64_t))v65)(v54);
            if (v56)
            {
              uint64_t v57 = v56;
              swift_getObjectType();
              if (dynamic_cast_existential_1_conditional(v57))
              {
                uint64_t v59 = v58;
                uint64_t v60 = swift_getObjectType();
                (*(void (**)(uint64_t, uint64_t))(v59 + 16))(v60, v59);
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                goto LABEL_50;
              }
              swift_unknownObjectRelease();
            }
          }
        }
        if (*(unsigned char *)(v42 + v5[16]) != 1)
        {
          _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
          swift_unknownObjectRelease();
          goto LABEL_51;
        }
        if (!v36) {
          goto LABEL_50;
        }
        uint64_t v61 = swift_getObjectType();
        uint64_t v62 = v66;
        int v63 = *(void (**)(uint64_t, uint64_t))(v66 + 16);
        swift_unknownObjectRetain();
        v63(v61, v62);
        goto LABEL_49;
      }
    }
    uint64_t v42 = v67;
    if (!v36) {
      goto LABEL_38;
    }
    swift_unknownObjectRetain();
    if (ConversationControlsRecipe.allowsDeepLinkToFullScreenCallUI.getter())
    {
      uint64_t v49 = swift_getObjectType();
      (*(void (**)(uint64_t))(v66 + 16))(v49);
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t v68 = 24;
      long long v69 = 0u;
      long long v70 = 0u;
      char v71 = 6;
      swift_unknownObjectRetain();
      char v50 = static ConversationControlsType.== infix(_:_:)(v42);
      outlined destroy of ConversationControlsType((uint64_t)&v68);
      if ((v50 & 1) == 0)
      {
        swift_unknownObjectRelease();
        goto LABEL_38;
      }
      uint64_t v51 = swift_getObjectType();
      (*(void (**)(uint64_t))(v66 + 32))(v51);
    }
LABEL_49:
    swift_unknownObjectRelease_n();
    goto LABEL_50;
  }
  outlined destroy of SystemUpdateNotice?(v1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
LABEL_51:
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationHUDViewController.showCallDetailsButtonTapped()()
{
  uint64_t v1 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108);
  if (((unsigned __int8 (*)(void))v1)() == 2)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationControls);
    uint64_t v19 = v0;
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_37();
      uint64_t v20 = OUTLINED_FUNCTION_9_0();
      *(_DWORD *)uint64_t v5 = 136315138;
      v1();
      uint64_t v6 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v3, v4, "%s Unable to handle call details button press", v5, 0xCu);
      OUTLINED_FUNCTION_52_2();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();

LABEL_12:
      OUTLINED_FUNCTION_16();
      return;
    }

    OUTLINED_FUNCTION_16();
  }
  else
  {
    OUTLINED_FUNCTION_30_21();
    OUTLINED_FUNCTION_14_79();
    v8();
    OUTLINED_FUNCTION_98_5();
    OUTLINED_FUNCTION_0_91();
    (*(void (**)(uint64_t))(v9 + 816))(1);

    OUTLINED_FUNCTION_1_12();
    OUTLINED_FUNCTION_50_2();
    uint64_t v11 = v10();
    if (!v11) {
      goto LABEL_12;
    }
    uint64_t v12 = v11;
    swift_getObjectType();
    if (dynamic_cast_existential_1_conditional(v12))
    {
      uint64_t v14 = v13;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v14 + 16))(ObjectType, v14);
    }
    OUTLINED_FUNCTION_16();
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall ConversationHUDViewController.appLaunchButtonTapped(_:)(UITapGestureRecognizer *a1)
{
  OUTLINED_FUNCTION_0_20();
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(v1 + 240))();
  OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  swift_retain();
  ConversationControlsManager.appLaunchButtonTapped(completion:)();

  swift_release_n();
}

void closure #1 in ConversationHUDViewController.appLaunchButtonTapped(_:)(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.conversationControls);
    unint64_t v7 = v5;
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v14 = v11;
      *(_DWORD *)uint64_t v10 = 136315394;
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v7) + 0x108))();
      uint64_t v12 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1C2F90000, v8, v9, "[%s] appLaunchButtonTapped completion, hideButton?:%{BOOL}d", (uint8_t *)v10, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v11, -1, -1);
      MEMORY[0x1C87760E0](v10, -1, -1);

      if ((a1 & 1) == 0) {
        goto LABEL_9;
      }
    }
    else
    {

      if ((a1 & 1) == 0)
      {
LABEL_9:

        return;
      }
    }
    ConversationHUDViewController.hideAppLaunchPill(remove:)(1);
    goto LABEL_9;
  }
}

void ConversationHUDViewController.hudControlsSize.getter()
{
  uint64_t v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x390);
    id v3 = v1;
    uint64_t v4 = v2();
    OUTLINED_FUNCTION_63_10(v5, v6, v7, v8, v4, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_);
  }
  OUTLINED_FUNCTION_112();
}

double ConversationHUDViewController.defaultControlsSize.getter()
{
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  double v3 = (*(double (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x340))();
  if (v3 != 0.0 || v2 != 0.0)
  {
    uint64_t v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView);
    if (v4)
    {
      double v5 = *(uint64_t (**)(void))((*v1 & *v0) + 0x390);
      id v6 = v4;
      uint64_t v7 = v5();
      OUTLINED_FUNCTION_63_10(v8, v9, v10, v11, v7, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_);
      ConversationHUDViewController.appLaunchPillVerticalMargin.getter();
    }
  }
  return v3;
}

double ConversationHUDViewController.appLaunchPillVerticalMargin.getter()
{
  OUTLINED_FUNCTION_0_20();
  char v1 = (*(uint64_t (**)(void))(v0 + 264))();
  double result = 0.0;
  if (v1 == 2)
  {
    static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v3 = static Defaults.shared;
    OUTLINED_FUNCTION_50();
    (*(void (**)(void))(v4 + 384))();
    uint64_t v5 = static Platform.current.getter();
    (*(void (**)(uint64_t))(*(void *)v3 + 488))(v5);
    return 16.0;
  }
  return result;
}

void ConversationHUDViewController.menuContainerFrame.getter()
{
  id v1 = objc_msgSend(v0, sel_view, static Layout.ConversationControls.values.getter((uint64_t)v3));
  if (v1)
  {
    double v2 = v1;
    objc_msgSend(v1, sel_bounds);

    static Layout.ConversationControls.values.getter((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
}

uint64_t key path getter for ConversationHUDViewController.delegate : ConversationHUDViewController@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x360))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ConversationHUDViewController.delegate : ConversationHUDViewController(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x368);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ConversationHUDViewController.delegate.getter()
{
  OUTLINED_FUNCTION_5_4();
  return MEMORY[0x1C8776240](v0);
}

uint64_t ConversationHUDViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_1();
  *(void *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*ConversationHUDViewController.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

uint64_t key path getter for ConversationHUDViewController.recipe : ConversationHUDViewController(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x378))();
}

uint64_t key path setter for ConversationHUDViewController.recipe : ConversationHUDViewController(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x380))(v6);
}

uint64_t ConversationHUDViewController.recipe.didset(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v88 = (uint8_t *)a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  double v11 = (char *)&v75 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v75 - v13;
  uint64_t v15 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (uint8_t *)&v75 - v19;
  uint64_t v21 = (uint64_t)v2 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_recipe;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v21, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) == 1) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  _s15ConversationKit0A14ControlsRecipeVWObTm_0();
  if (objc_msgSend(v2, sel_isViewLoaded))
  {
    uint64_t v23 = *(void *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
    _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
    outlined init with copy of FeatureEligibility?((uint64_t)v88, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    if (!v23)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
LABEL_21:
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v56 = type metadata accessor for Logger();
      __swift_project_value_buffer(v56, (uint64_t)static Logger.conversationControls);
      uint64_t v57 = v2;
      uint64_t v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        uint64_t v90 = v61;
        *(_DWORD *)uint64_t v60 = 136315138;
        char v87 = v60 + 4;
        LOBYTE(v89) = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v57) + 0x108))();
        uint64_t v62 = String.init<A>(reflecting:)();
        uint64_t v89 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, &v90);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v58, v59, "[%s] ConversationHUDViewController: update recipe -> setupControlsView", v60, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v61, -1, -1);
        MEMORY[0x1C87760E0](v60, -1, -1);
      }
      else
      {
      }
      ConversationControlsRecipe.requiresAnimation(from:)((uint64_t)v88);
      ConversationHUDViewController.setupControlsView(animated:)();
LABEL_27:
      uint64_t v64 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v64);
      ConversationHUDViewController.setupAppLaunchPill(buttonType:)();
      uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v5, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
      (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x3B8))(updated);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v64);
      ConversationHUDViewController.showAppLaunchPill(buttonType:)();
      outlined destroy of SystemUpdateNotice?((uint64_t)v5, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
      return _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
    }
    uint64_t v86 = v2;
    char v87 = v20;
    id v85 = v5;
    uint64_t v24 = &v17[*(int *)(v15 + 60)];
    uint64_t v25 = *(void *)v24;
    uint64_t v26 = *((void *)v24 + 1);
    uint64_t v28 = *((void *)v24 + 2);
    uint64_t v27 = *((void *)v24 + 3);
    uint64_t v29 = *((void *)v24 + 4);
    uint64_t v30 = v24[40];
    outlined init with copy of FeatureEligibility?((uint64_t)v11, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v15);
    *((void *)&v84 + 1) = v26;
    *(void *)&long long v84 = v25;
    if (EnumTagSinglePayload == 1)
    {
      outlined copy of ConversationControlsRecipe.Actions?(v25, v26, v28, v27, v29, v30);
      outlined destroy of SystemUpdateNotice?((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      uint64_t v32 = 0;
      uint64_t v81 = 0;
      uint64_t v80 = 0;
      long long v83 = 0uLL;
      LODWORD(v33) = 254;
      uint64_t v34 = v29;
      uint64_t v5 = v85;
      if (v30 <= 0xFD) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v35 = &v8[*(int *)(v15 + 60)];
      uint64_t v36 = v27;
      uint64_t v37 = v28;
      uint64_t v38 = *(void *)v35;
      uint64_t v39 = *((void *)v35 + 1);
      uint64_t v40 = v29;
      uint64_t v41 = *((void *)v35 + 2);
      uint64_t v33 = *((void *)v35 + 3);
      uint64_t v42 = *((void *)v35 + 4);
      unsigned int v82 = v35[40];
      uint64_t v43 = v26;
      uint64_t v32 = v42;
      uint64_t v77 = v37;
      uint64_t v78 = v36;
      uint64_t v79 = v40;
      outlined copy of ConversationControlsRecipe.Actions?(v25, v43, v37, v36, v40, v30);
      *(void *)&long long v83 = v38;
      *((void *)&v83 + 1) = v39;
      uint64_t v80 = v41;
      uint64_t v81 = v33;
      uint64_t v44 = v33;
      LODWORD(v33) = v82;
      outlined copy of ConversationControlsRecipe.Actions?(v38, v39, v41, v44, v32, v82);
      _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
      if (v30 <= 0xFD)
      {
        if (v33 > 0xFD)
        {
          uint64_t v34 = v79;
          uint64_t v27 = v78;
          uint64_t v28 = v77;
          uint64_t v5 = v85;
LABEL_19:
          unsigned int v82 = v33;
          uint64_t v46 = v84;
          uint64_t v33 = v32;
          uint64_t v55 = *((void *)&v84 + 1);
          outlined copy of ConversationControlsRecipe.Actions(v84, *((void *)&v84 + 1), v28, v27, v34, v30);
          outlined destroy of SystemUpdateNotice?((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
          uint64_t v45 = v55;
          uint64_t v32 = v33;
          LOBYTE(v33) = v82;
          _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
          outlined consume of ConversationControlsRecipe.Actions?(v46, v45, v28, v27, v34, v30);
          goto LABEL_20;
        }
        long long v96 = v83;
        char v66 = v33;
        uint64_t v67 = v80;
        uint64_t v68 = v81;
        uint64_t v97 = v80;
        uint64_t v98 = v81;
        uint64_t v99 = v32;
        char v100 = v66;
        uint64_t v69 = v84;
        uint64_t v75 = v32;
        uint64_t v70 = *((void *)&v84 + 1);
        long long v91 = v84;
        uint64_t v71 = v30;
        uint64_t v72 = v77;
        uint64_t v73 = v78;
        uint64_t v92 = v77;
        uint64_t v93 = v78;
        uint64_t v74 = v79;
        uint64_t v94 = v79;
        char v95 = v71;
        outlined copy of ConversationControlsRecipe.Actions(v84, *((void *)&v84 + 1), v77, v78, v79, v71);
        int v76 = static ConversationControlsRecipe.Actions.== infix(_:_:)(&v91, &v96);
        outlined consume of ConversationControlsRecipe.Actions?(v83, *((uint64_t *)&v83 + 1), v67, v68, v75, v82);
        outlined destroy of SystemUpdateNotice?((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
        outlined consume of ConversationControlsRecipe.Actions?(v69, v70, v72, v73, v74, v71);
        outlined consume of ConversationControlsRecipe.Actions?(v69, v70, v72, v73, v74, v71);
        uint64_t v5 = v85;
        uint64_t v2 = v86;
        if ((v76 & 1) == 0) {
          goto LABEL_21;
        }
LABEL_13:
        if (one-time initialization token for conversationControls != -1) {
          swift_once();
        }
        uint64_t v47 = type metadata accessor for Logger();
        __swift_project_value_buffer(v47, (uint64_t)static Logger.conversationControls);
        uint64_t v48 = v2;
        uint64_t v49 = Logger.logObject.getter();
        os_log_type_t v50 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v49, v50))
        {
          uint64_t v51 = (uint8_t *)swift_slowAlloc();
          uint64_t v52 = swift_slowAlloc();
          uint64_t v90 = v52;
          *(_DWORD *)uint64_t v51 = 136315138;
          uint64_t v88 = v51 + 4;
          LOBYTE(v89) = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v48) + 0x108))();
          uint64_t v53 = String.init<A>(reflecting:)();
          uint64_t v89 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, &v90);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v49, v50, "[%s] ConversationHUDViewController: update recipe -> updateControlsView", v51, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v52, -1, -1);
          MEMORY[0x1C87760E0](v51, -1, -1);
        }
        else
        {
        }
        ConversationHUDViewController.updateControlsView()();
        goto LABEL_27;
      }
      uint64_t v34 = v79;
      uint64_t v27 = v78;
      uint64_t v28 = v77;
      uint64_t v5 = v85;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
    uint64_t v45 = *((void *)&v84 + 1);
    uint64_t v46 = v84;
    if (v33 <= 0xFD)
    {
LABEL_20:
      outlined consume of ConversationControlsRecipe.Actions?(v46, v45, v28, v27, v34, v30);
      outlined consume of ConversationControlsRecipe.Actions?(v83, *((uint64_t *)&v83 + 1), v80, v81, v32, v33);
      uint64_t v2 = v86;
      goto LABEL_21;
    }
    outlined consume of ConversationControlsRecipe.Actions?(v84, *((uint64_t *)&v84 + 1), v28, v27, v34, v30);
    uint64_t v2 = v86;
    goto LABEL_13;
  }
  return _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
}

uint64_t ConversationHUDViewController.recipe.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_recipe;
  OUTLINED_FUNCTION_2();
  return outlined init with copy of FeatureEligibility?(v3, a1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
}

uint64_t ConversationHUDViewController.recipe.setter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_recipe;
  OUTLINED_FUNCTION_2();
  outlined init with copy of FeatureEligibility?(v7, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  swift_beginAccess();
  outlined assign with copy of ConversationControlsRecipe?(a1, v7);
  swift_endAccess();
  ConversationHUDViewController.recipe.didset((uint64_t)v6);
  outlined destroy of SystemUpdateNotice?(a1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v8 = OUTLINED_FUNCTION_74();
  return outlined destroy of SystemUpdateNotice?(v8, v9);
}

void (*ConversationHUDViewController.recipe.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_8(v4);
  size_t v6 = *(void *)(v5 + 64);
  v3[4] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[5] = v7;
  uint64_t v8 = v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_recipe;
  OUTLINED_FUNCTION_2();
  outlined init with copy of FeatureEligibility?(v8, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  return ConversationHUDViewController.recipe.modify;
}

void ConversationHUDViewController.recipe.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  uint64_t v4 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    outlined init with copy of FeatureEligibility?(*(void *)(*(void *)a1 + 40), (uint64_t)v3, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    ConversationHUDViewController.recipe.setter((uint64_t)v3);
    outlined destroy of SystemUpdateNotice?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  else
  {
    ConversationHUDViewController.recipe.setter(*(void *)(*(void *)a1 + 40));
  }
  free(v4);
  free(v3);
  free(v2);
}

void key path getter for ConversationHUDViewController.presentationSize : ConversationHUDViewController(void **a1@<X0>, uint64_t a2@<X8>)
{
  *(double *)a2 = (*(double (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x390))();
  *(void *)(a2 + 8) = v3;
}

uint64_t key path setter for ConversationHUDViewController.presentationSize : ConversationHUDViewController()
{
  return ConversationHUDViewController.presentationSize.setter();
}

double ConversationHUDViewController.presentationSize.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *(double *)v0;
}

uint64_t ConversationHUDViewController.presentationSize.setter()
{
  OUTLINED_FUNCTION_19_0();
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_presentationSize);
  uint64_t result = OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  v3[1] = v1;
  return result;
}

BOOL ConversationHUDViewController.menuPresented.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_menuContainerView)
      || *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shareCardViewController) != 0;
}

void ConversationHUDViewController.systemApertureElement.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_10_35();
  OUTLINED_FUNCTION_0_3();
  (*(void (**)(void))(v5 + 888))();
  uint64_t v6 = type metadata accessor for ConversationControlsRecipe();
  if (__swift_getEnumTagSinglePayload(v0, 1, v6))
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 1;
    char v14 = 0;
  }
  else
  {
    uint64_t v15 = v0 + *(int *)(v6 + 72);
    uint64_t v10 = *(void **)(v15 + 48);
    uint64_t v11 = *(void *)(v15 + 56);
    uint64_t v12 = *(void *)(v15 + 64);
    char v14 = *(unsigned char *)(v15 + 72);
    uint64_t v13 = *(void *)v15;
    uint64_t v16 = *(void **)(v15 + 16);
    uint64_t v17 = *(void *)(v15 + 8);
    uint64_t v7 = *(void *)(v15 + 24);
    uint64_t v8 = *(void **)(v15 + 32);
    uint64_t v9 = *(void *)(v15 + 40);
    outlined copy of SystemApertureElement?(*(id *)v15, v17, v16, v7, v8, v9, v10);
  }
  outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  *(void *)uint64_t v2 = v13;
  *(void *)(v2 + 8) = v17;
  *(void *)(v2 + 16) = v16;
  *(void *)(v2 + 24) = v7;
  *(void *)(v2 + 32) = v8;
  *(void *)(v2 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v9;
  *(void *)(v2 + 48) = v10;
  *(void *)(v2 + 56) = v11;
  *(void *)(v2 + 64) = v12;
  *(unsigned char *)(v2 + 72) = v14;
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationHUDViewController.updatePreferredContentSize()()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *(void *)uint64_t v1 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v1, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  double v8 = *MEMORY[0x1E4FB2848];
  double v9 = *(double *)(MEMORY[0x1E4FB2848] + 8);
  double v11 = *(double *)(MEMORY[0x1E4FB2848] + 16);
  double v10 = *(double *)(MEMORY[0x1E4FB2848] + 24);
  OUTLINED_FUNCTION_94_1();
  v12 += 117;
  uint64_t v13 = *v12;
  if ((*v12)())
  {
    double v14 = static Layout.ConversationControls.values.getter((uint64_t)v36);
    double v16 = *(double *)&v36[7];
    double v15 = *(double *)&v36[8];
    id v17 = objc_msgSend(v2, sel_view, v14);
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = (char *)objc_msgSend(v17, sel_SBUISA_layoutMode);

      if ((unint64_t)(v19 - 2) >= 3)
      {
        objc_msgSend(v2, sel_setPreferredContentSize_, v16, v15);
      }
      else
      {
        objc_msgSend(v2, sel_preferredContentSize);
        double v10 = (v20 - v16) * 0.5;
        double v11 = -v15;
        double v8 = 0.0;
        double v9 = v10;
      }
      goto LABEL_8;
    }
LABEL_16:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_94_1();
  (*(void (**)(void))(v21 + 840))();
  objc_msgSend(v2, sel_setPreferredContentSize_, v22, v23);
LABEL_8:
  OUTLINED_FUNCTION_94_1();
  v24 += 108;
  uint64_t v25 = *v24;
  uint64_t v26 = (*v24)();
  if (v26)
  {
    uint64_t v27 = v26;
    swift_getObjectType();
    if (dynamic_cast_existential_1_conditional(v27))
    {
      uint64_t v28 = OUTLINED_FUNCTION_125();
      (*(void (**)(uint64_t, uint64_t, double, double, double, double))(v1 + 48))(v28, v1, v8, v9, v11, v10);
    }
    uint64_t v26 = swift_unknownObjectRelease();
  }
  if (((uint64_t (*)(uint64_t))v25)(v26))
  {
    uint64_t v30 = v29;
    uint64_t ObjectType = swift_getObjectType();
    char v32 = v13();
    (*(void (**)(void, uint64_t, uint64_t))(v30 + 8))(v32 & 1, ObjectType, v30);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_94_1();
  OUTLINED_FUNCTION_14_79();
  uint64_t v34 = (void *)v33();
  OUTLINED_FUNCTION_0_91();
  (*(void (**)(void))(v35 + 2560))();
}

Swift::Void __swiftcall ConversationHUDViewController.updatePresentationSize(to:)(CGSize to)
{
  CGFloat height = to.height;
  static Layout.ConversationControls.values.getter((uint64_t)v6);
  uint64_t v3 = v6[0];
  uint64_t v4 = (CGFloat *)(v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_presentationSize);
  OUTLINED_FUNCTION_11_0();
  *(void *)uint64_t v4 = v3;
  v4[1] = height;
  OUTLINED_FUNCTION_0_3();
  (*(void (**)(void))(v5 + 952))();
}

Swift::Void __swiftcall ConversationHUDViewController.updateBackgroundBlur()()
{
  OUTLINED_FUNCTION_10_1();
  if (!(*(uint64_t (**)(void))(v0 + 864))()) {
    return;
  }
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_94_1();
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 440);
  OUTLINED_FUNCTION_52_20();
  uint64_t v5 = (void *)v4();
  id v6 = objc_msgSend(v5, sel_effect);

  if (!v6) {
    goto LABEL_5;
  }
  self;
  char v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7)
  {

LABEL_5:
    char v7 = 0;
  }
  BOOL v8 = v7 == 0;

  uint64_t ObjectType = swift_getObjectType();
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(ObjectType, v2);
  char v11 = v10;
  if (((v8 ^ v10) & 1) == 0)
  {
    OUTLINED_FUNCTION_52_20();
    uint64_t v12 = (void *)v4();
    if (v11) {
      id v13 = objc_msgSend(self, sel_effectWithStyle_, 18);
    }
    else {
      id v13 = 0;
    }
    objc_msgSend(v12, sel_setEffect_, v13);
  }
  OUTLINED_FUNCTION_52_20();
  double v14 = (void *)v4();
  id v15 = objc_msgSend(v14, sel_contentView);

  objc_msgSend(v15, sel_setClipsToBounds_, v11 & 1);
  swift_unknownObjectRelease();
}

Swift::Void __swiftcall ConversationHUDViewController.updateBackgroundCornerRadius()()
{
  OUTLINED_FUNCTION_68_1();
  uint64_t v32 = v1;
  uint64_t v33 = v2;
  swift_getObjectType();
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  if (!v3
    || (swift_getObjectType(), !dynamic_cast_existential_1_conditional((uint64_t)v3))
    || (uint64_t v5 = v4,
        uint64_t ObjectType = swift_getObjectType(),
        char v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96),
        id v8 = v3,
        id v28 = (id)v7(ObjectType, v5),
        v8,
        !v28))
  {
LABEL_16:
    OUTLINED_FUNCTION_33_2();
    return;
  }
  static Layout.ConversationControls.values.getter((uint64_t)v30);
  double v9 = v31 * 0.5;
  double v10 = v9 + ConversationHUDViewController.contentInsetForCornerRadius.getter();
  objc_msgSend(v28, sel_frame);
  CGFloat v11 = CGRectGetHeight(v34) * 0.5;
  double v12 = v11 + ConversationHUDViewController.contentInsetForCornerRadius.getter();
  if (v10 > v12) {
    double v13 = v10;
  }
  else {
    double v13 = v12;
  }
  OUTLINED_FUNCTION_1_12();
  id v15 = *(uint64_t (**)(void))(v14 + 440);
  double v16 = (void *)v15();
  objc_msgSend(v16, sel__continuousCornerRadius);
  double v18 = v17;

  if (v18 != v13)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    double v22 = OUTLINED_FUNCTION_30(v21, (uint64_t)static Logger.conversationControls);
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = OUTLINED_FUNCTION_15_1();
      uint64_t v29 = OUTLINED_FUNCTION_9_0();
      *(_DWORD *)uint64_t v24 = 136446466;
      uint64_t v25 = _typeName(_:qualified:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1C2F90000, v22, v23, "[%{public}s] updating corner radius to %f", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }

    OUTLINED_FUNCTION_20_62();
    uint64_t v27 = (void *)v15();
    objc_msgSend(v27, sel__setContinuousCornerRadius_, v13);

    goto LABEL_16;
  }
  OUTLINED_FUNCTION_33_2();
}

Swift::Void __swiftcall ConversationHUDViewController.updateControlsManagerObservers()()
{
  OUTLINED_FUNCTION_31();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>.Publisher);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_5_1();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>.Publisher);
  OUTLINED_FUNCTION_5_3();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_0_58();
  char v7 = *(uint64_t (**)(void))(v6 + 240);
  id v8 = (void *)v7();
  OUTLINED_FUNCTION_0_91();
  (*(void (**)(void))(v9 + 2056))();

  OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<EphemeralAlert?>.Publisher and conformance Published<A>.Publisher, (uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>.Publisher);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v2);
  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_50_2();
  v10();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.Debounce<Published<ConversationControlsAppLaunchButtonType>.Publisher, OS_dispatch_queue>);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_64();
  double v13 = (void *)((uint64_t (*)(uint64_t))v7)(v12);
  OUTLINED_FUNCTION_0_91();
  (*(void (**)(uint64_t))(v14 + 2376))(v15);

  uint64_t v16 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  OUTLINED_FUNCTION_5_3();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_21();
  uint64_t v22 = v21 - v20;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  (*(void (**)(uint64_t))(v23 + 1016))(v24);
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v37 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  uint64_t v26 = OUTLINED_FUNCTION_8(v25);
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_21();
  uint64_t v29 = v28 - v27;
  uint64_t v30 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v29, 1, 1, v30);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type Published<ConversationControlsAppLaunchButtonType>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>.Publisher);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue();
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of SystemUpdateNotice?(v29, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v16);
  OUTLINED_FUNCTION_26_2();
  v32(v31);
  OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Debounce<Published<ConversationControlsAppLaunchButtonType>.Publisher, OS_dispatch_queue> and conformance Publishers.Debounce<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.Debounce<Published<ConversationControlsAppLaunchButtonType>.Publisher, OS_dispatch_queue>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  OUTLINED_FUNCTION_26_2();
  v34(v33);
  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_50_2();
  v36(v35);
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConversationHUDViewController.updateControlsManagerObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = (char *)MEMORY[0x1C8776240](v5);
  if (v6)
  {
    char v7 = v6;
    id v8 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v9 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v6) + 0xF0);
    double v10 = (void *)v9();
    unsigned __int8 v11 = (*(uint64_t (**)(void))((*v8 & *v10) + 0x840))();

    int v12 = v11 >> 5;
    if (v12 != 1)
    {
      if (v12 != 2)
      {
        if (v12 == 3 && v11 == 96) {
          goto LABEL_6;
        }
LABEL_12:
        uint64_t v29 = (void *)v9();
        (*(void (**)(void))((*v8 & *v29) + 0xA08))();

        uint64_t v30 = *(void **)&v7[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView];
        if (!v30) {
          goto LABEL_18;
        }
        swift_getObjectType();
        if (!dynamic_cast_existential_1_conditional((uint64_t)v30)) {
          goto LABEL_18;
        }
        uint64_t v32 = v31;
        uint64_t ObjectType = swift_getObjectType();
        CGRect v34 = *(void (**)(void *, void *, uint64_t, uint64_t, uint64_t))(v32 + 32);
        uint64_t v35 = v30;
        uint64_t v36 = v4;
        uint64_t v37 = v35;
        outlined copy of ConversationControlsRecipe.View?(v3, v2);
        v34(v3, v2, v36, ObjectType, v32);
        goto LABEL_17;
      }
      if (v11) {
        goto LABEL_12;
      }
    }
LABEL_6:
    if (!v3)
    {
LABEL_18:

      return;
    }
    uint64_t v13 = one-time initialization token for conversationControls;
    id v14 = v3;
    id v15 = v2;
    if (v13 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)static Logger.conversationControls);
    id v17 = v14;
    id v18 = v15;
    id v19 = v17;
    id v20 = v18;
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      id v39 = v20;
      uint64_t v40 = v19;
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v41 = v38;
      id v24 = v40;
      id v25 = v20;
      uint64_t v26 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v41);
      id v8 = (void *)MEMORY[0x1E4FBC8C8];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      id v20 = v39;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v21, v22, "Ephemeral alert %s attempted to present over staging; ignoring and discarding.",
        v23,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v38, -1, -1);
      uint64_t v28 = v23;
      id v19 = v40;
      MEMORY[0x1C87760E0](v28, -1, -1);
    }
    else
    {
    }
    uint64_t v37 = (void *)v9();
    (*(void (**)(void, void, void))((*v8 & *v37) + 0x7F8))(0, 0, 0);

LABEL_17:
    goto LABEL_18;
  }
}

void closure #2 in ConversationHUDViewController.updateControlsManagerObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1C8776240](a2 + 16);
  if (v10)
  {
    unsigned __int8 v11 = (void *)v10;
    swift_storeEnumTagMultiPayload();
    char v12 = static ConversationControlsAppLaunchButtonType.== infix(_:_:)(a1, (uint64_t)v9);
    _s15ConversationKit0A14ControlsRecipeVWOhTm_2();
    if (v12)
    {
      ConversationHUDViewController.hideAppLaunchPill(remove:)(1);
    }
    else
    {
      _s15ConversationKit0A14ControlsRecipeVWOcTm_1();
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
      ConversationHUDViewController.showAppLaunchPill(buttonType:)();

      outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
    }
  }
}

uint64_t ConversationHUDViewController.systemAperturePreferredContentSize.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  if (!v1
    || (uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView + 8),
        v10[0] = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView),
        v10[1] = v2,
        id v3 = v1,
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ControlsView),
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SystemAperturePreferredContentSizeProvider),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v9 = 0;
    long long v7 = 0u;
    long long v8 = 0u;
    goto LABEL_6;
  }
  if (!*((void *)&v8 + 1))
  {
LABEL_6:
    outlined destroy of SystemUpdateNotice?((uint64_t)&v7, &demangling cache variable for type metadata for SystemAperturePreferredContentSizeProvider?);
    return OUTLINED_FUNCTION_35();
  }
  outlined init with take of Notice(&v7, (uint64_t)v10);
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return OUTLINED_FUNCTION_35();
}

Swift::Bool __swiftcall ConversationHUDViewController.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer *_, UITouch shouldReceive)
{
  id v2 = [(objc_class *)shouldReceive.super.isa view];
  if (v2)
  {
    id v3 = v2;
    self;
    id v2 = (id)swift_dynamicCastObjCClass();
    if (!v2)
    {

      id v2 = 0;
    }
  }
  Swift::Bool v4 = v2 == 0;

  return v4;
}

id ConversationHUDViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  Swift::Bool v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void ConversationHUDViewController.init(nibName:bundle:)()
{
}

id ConversationHUDViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationHUDViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for ConversationControlsViewController.delegate.getter in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x360))();
}

uint64_t protocol witness for ConversationControlsViewController.delegate.setter in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x368))();
}

uint64_t (*protocol witness for ConversationControlsViewController.delegate.modify in conformance ConversationHUDViewController(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x370))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ConversationControlsViewController.recipe.getter in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x378))();
}

uint64_t protocol witness for ConversationControlsViewController.recipe.setter in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x380))();
}

uint64_t (*protocol witness for ConversationControlsViewController.recipe.modify in conformance ConversationHUDViewController(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x388))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ConversationControlsViewController.presentationSize.getter in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x390))();
}

uint64_t protocol witness for ConversationControlsViewController.menuPresented.getter in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3A8))();
}

uint64_t protocol witness for ConversationControlsViewController.systemApertureElement.getter in conformance ConversationHUDViewController@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x3B0))(v4);
  return outlined init with take of SystemApertureElement?((uint64_t)v4, a1);
}

uint64_t protocol witness for ConversationControlsViewController.systemAperturePreferredContentSize.getter in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3E0))();
}

uint64_t protocol witness for ConversationControlsViewController.controlsManager.getter in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t protocol witness for ConversationControlsViewController.controlsManager.setter in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t (*protocol witness for ConversationControlsViewController.controlsManager.modify in conformance ConversationHUDViewController(void *a1))()
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x100))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ConversationControlsViewController.updatePresentationSize(to:) in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3C0))();
}

uint64_t protocol witness for ConversationControlsViewController.updatePreferredContentSize() in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3B8))();
}

uint64_t protocol witness for ConversationControlsViewController.updateBackgroundBlur() in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3C8))();
}

uint64_t protocol witness for ConversationControlsViewController.updateBackgroundCornerRadius() in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3D0))();
}

uint64_t protocol witness for MenuHostProvider.disableMenuContainerViewInteraction() in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x2F0))();
}

uint64_t protocol witness for MenuHostProvider.setupMenuContainerView() in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x2E8))();
}

uint64_t protocol witness for MenuHostProvider.teardownMenuContainerView() in conformance ConversationHUDViewController()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x2F8))();
}

uint64_t ConversationHUDViewController.shareCardViewControllerDidDismiss(_:)()
{
  ConversationHUDViewController.shareCardViewController.setter(0);
  uint64_t v1 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3B8);
  return v1();
}

uint64_t sub_1C36D570C()
{
  return swift_deallocObject();
}

void partial apply for closure #2 in ConversationHUDViewController.viewWillTransition(to:with:)(int a1)
{
  closure #2 in SystemBannerHostViewController.viewWillTransition(to:with:)(a1, *(id *)(v1 + 16));
}

uint64_t sub_1C36D5760()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationHUDViewController.appLaunchButtonTapped(_:)(char a1)
{
  closure #1 in ConversationHUDViewController.appLaunchButtonTapped(_:)(a1, v1);
}

void partial apply for closure #1 in ConversationHUDViewController.updateControlsManagerObservers()(uint64_t a1)
{
  closure #1 in ConversationHUDViewController.updateControlsManagerObservers()(a1, v1);
}

void partial apply for closure #2 in ConversationHUDViewController.updateControlsManagerObservers()(uint64_t a1)
{
  closure #2 in ConversationHUDViewController.updateControlsManagerObservers()(a1, v1);
}

uint64_t initializeWithCopy for HUDShadowProperties(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for HUDShadowProperties(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for HUDShadowProperties(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for HUDShadowProperties()
{
  return &type metadata for HUDShadowProperties;
}

uint64_t ObjC metadata update function for ConversationHUDViewController()
{
  return type metadata accessor for ConversationHUDViewController();
}

void type metadata completion function for ConversationHUDViewController()
{
  type metadata accessor for ConversationControlsRecipe?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ConversationHUDViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationHUDViewController);
}

uint64_t dispatch thunk of ConversationHUDViewController.controlsManager.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.controlsManager.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.controlsManager.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ConversationHUDViewController.context.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ConversationHUDViewController.context.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ConversationHUDViewController.context.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ConversationHUDViewController.ephemeralAlertCancellable.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ConversationHUDViewController.ephemeralAlertCancellable.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ConversationHUDViewController.ephemeralAlertCancellable.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ConversationHUDViewController.appLaunchButtonCancellable.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ConversationHUDViewController.appLaunchButtonCancellable.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ConversationHUDViewController.appLaunchButtonCancellable.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ConversationHUDViewController.shadowProperties.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ConversationHUDViewController.shadowProperties.setter(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 2);
  uint64_t v3 = a1[4];
  id v4 = *(uint64_t (**)(uint64_t *))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x158);
  uint64_t v6 = *a1;
  int v7 = v2;
  long long v8 = *((_OWORD *)a1 + 1);
  uint64_t v9 = v3;
  return v4(&v6);
}

uint64_t dispatch thunk of ConversationHUDViewController.shadowProperties.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of ConversationHUDViewController.deferPillUpdates.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of ConversationHUDViewController.deferPillUpdates.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of ConversationHUDViewController.deferPillUpdates.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of ConversationHUDViewController.pillShouldBeShowing.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of ConversationHUDViewController.pillShouldBeShowing.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of ConversationHUDViewController.pillShouldBeShowing.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of ConversationHUDViewController.cnkContentAlpha.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.cnkContentAlpha.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.cnkContentAlpha.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.backgroundMaterialView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.backgroundMaterialView.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.backgroundMaterialView.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.__allocating_init(recipe:presentationSize:controlsManager:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 680))();
}

uint64_t dispatch thunk of ConversationHUDViewController.setupMenuContainerView()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2E8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.disableMenuContainerViewInteraction()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.teardownMenuContainerView()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.statusViewTapped()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x328))();
}

uint64_t dispatch thunk of ConversationHUDViewController.showCallDetailsButtonTapped()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x330))();
}

uint64_t dispatch thunk of ConversationHUDViewController.appLaunchButtonTapped(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x338))();
}

uint64_t dispatch thunk of ConversationHUDViewController.hudControlsSize.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x340))();
}

uint64_t dispatch thunk of ConversationHUDViewController.defaultControlsSize.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x348))();
}

uint64_t dispatch thunk of ConversationHUDViewController.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x360))();
}

uint64_t dispatch thunk of ConversationHUDViewController.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x368))();
}

uint64_t dispatch thunk of ConversationHUDViewController.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x370))();
}

uint64_t dispatch thunk of ConversationHUDViewController.recipe.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x378))();
}

uint64_t dispatch thunk of ConversationHUDViewController.recipe.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x380))();
}

uint64_t dispatch thunk of ConversationHUDViewController.recipe.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x388))();
}

uint64_t dispatch thunk of ConversationHUDViewController.presentationSize.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x390))();
}

uint64_t dispatch thunk of ConversationHUDViewController.menuPresented.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3A8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.systemApertureElement.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3B0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.updatePreferredContentSize()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3B8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.updatePresentationSize(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3C0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.updateBackgroundBlur()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3C8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.updateBackgroundCornerRadius()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3D0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.updateControlsManagerObservers()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3D8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.systemAperturePreferredContentSize.getter()
{
  OUTLINED_FUNCTION_0_20();
  return (*(uint64_t (**)(void))(v0 + 992))();
}

uint64_t dispatch thunk of ConversationHUDViewController.gestureRecognizer(_:shouldReceive:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3E8))();
}

uint64_t sub_1C36D6690()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in ConversationHUDViewController.hideAppLaunchPill(remove:)(char a1)
{
  closure #2 in ConversationHUDViewController.hideAppLaunchPill(remove:)(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t _s15ConversationKit0A14ControlsRecipeVWOhTm_2()
{
  uint64_t v1 = OUTLINED_FUNCTION_49_2();
  v2(v1);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return v0;
}

uint64_t _s15ConversationKit0A14ControlsRecipeVWOcTm_1()
{
  uint64_t v1 = OUTLINED_FUNCTION_80_8();
  v2(v1);
  OUTLINED_FUNCTION_0();
  uint64_t v3 = OUTLINED_FUNCTION_89_0();
  v4(v3);
  return v0;
}

uint64_t sub_1C36D676C()
{
  uint64_t v1 = *(void *)(type metadata accessor for ConversationControlsAppLaunchButtonType(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);

  uint64_t v3 = (id *)(v0 + v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_0();
        (*(void (**)(unint64_t))(v5 + 8))(v0 + v2);
        break;
      case 4u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_26_2();
        v13();
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        id v15 = (char *)v3 + *(int *)(v14 + 48);
        swift_bridgeObjectRelease();
        if (*((void *)v15 + 15) >= 2uLL) {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v15 + 96));
        }
        if (*((void *)v15 + 39))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(id *)((char *)v3 + *(int *)(v14 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    uint64_t v6 = (int *)type metadata accessor for Participant(0);
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_26_2();
    v7();
    long long v8 = (id *)((char *)v3 + v6[7]);
    if (*v8)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v9 = (uint64_t)v3 + v6[14];
    uint64_t v10 = type metadata accessor for Date();
    if (!__swift_getEnumTagSinglePayload(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
    uint64_t v11 = v9 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v11, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v11, v10);
    }
    swift_release();
  }
  else if (!EnumCaseMultiPayload)
  {
  }
  return swift_deallocObject();
}

uint64_t _s15ConversationKit0A14ControlsRecipeVWObTm_0()
{
  uint64_t v2 = OUTLINED_FUNCTION_80_8();
  v3(v2);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t partial apply for closure #1 in ConversationHUDViewController.showAppLaunchPill(buttonType:)()
{
  type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  uint64_t v1 = *(void **)(v0 + 16);
  return closure #1 in ConversationHUDViewController.showAppLaunchPill(buttonType:)(v1);
}

uint64_t sub_1C36D6B6C()
{
  return swift_deallocObject();
}

uint64_t sub_1C36D6B7C()
{
  return swift_deallocObject();
}

id partial apply for closure #2 in ConversationHUDViewController.showAppLaunchPill(buttonType:)()
{
  return closure #2 in ConversationHUDViewController.showAppLaunchPill(buttonType:)(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1C36D6BC4()
{
  return swift_deallocObject();
}

void OUTLINED_FUNCTION_75_10(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_80_8()
{
  return 0;
}

uint64_t ShareCardHeaderView.init(controlsManager:shouldHideDefaultStatusView:)(uint64_t a1)
{
  return a1;
}

void ShareCardHeaderView.controlsManager.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*ShareCardHeaderView.controlsManager.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareCardHeaderView.shouldHideDefaultStatusView.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t ShareCardHeaderView.shouldHideDefaultStatusView.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*ShareCardHeaderView.shouldHideDefaultStatusView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareCardHeaderView.body.getter@<X0>(char *a1@<X0>, int a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  closure #1 in ShareCardHeaderView.body.getter(a1, a2, (uint64_t)a3, a4, (uint64_t)v11);
  uint64_t v16 = *(void *)&a1[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationDidChangePublisher];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(unsigned char *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a4;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v11, (uint64_t)v15, &demangling cache variable for type metadata for Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>);
  *(void *)&v15[*(int *)(v13 + 60)] = v16;
  id v18 = (uint64_t (**)())&v15[*(int *)(v13 + 64)];
  *id v18 = partial apply for closure #2 in ShareCardHeaderView.body.getter;
  v18[1] = (uint64_t (*)())v17;
  swift_retain();
  swift_retain();
  id v19 = a1;
  id v20 = a3;
  outlined destroy of Conversation?((uint64_t)v11, &demangling cache variable for type metadata for Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v19;
  *(unsigned char *)(v21 + 24) = a2;
  *(void *)(v21 + 32) = a3;
  *(void *)(v21 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a4;
  uint64_t v22 = v28;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v15, v28, &demangling cache variable for type metadata for SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>);
  uint64_t v23 = (void (**)())(v22
                    + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>, _AppearanceActionModifier>)
                             + 36));
  uint8_t *v23 = partial apply for closure #3 in ShareCardHeaderView.body.getter;
  v23[1] = (void (*)())v21;
  v23[2] = 0;
  v23[3] = 0;
  id v24 = v19;
  id v25 = v20;
  swift_retain();
  return outlined destroy of Conversation?((uint64_t)v15, &demangling cache variable for type metadata for SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>);
}

void closure #1 in ShareCardHeaderView.body.getter(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v35 = a2;
  uint64_t v36 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v34[-v12];
  uint64_t v37 = type metadata accessor for ShareCardStatusHeaderView(0);
  MEMORY[0x1F4188790](v37);
  id v15 = &v34[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  id v18 = &v34[-v17];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>.Storage);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = &v34[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ShareCardHeaderView.HeaderState>);
  State.wrappedValue.getter();
  uint64_t v22 = v40;
  if (v40)
  {
    id v23 = a1;
    id v24 = v22;
    id v25 = ShareCardSharePlayHeaderView.init(controlsManager:app:)(v23, v24);
    uint64_t v27 = v26;
    *(void *)uint64_t v21 = v25;
    *((void *)v21 + 1) = v26;
    v21[16] = v28;
    *((void *)v21 + 3) = v29;
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ShareCardSharePlayHeaderView and conformance ShareCardSharePlayHeaderView();
    lazy protocol witness table accessor for type ShareCardStatusHeaderView and conformance ShareCardStatusHeaderView();
    id v30 = v25;
    id v31 = v27;
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    swift_release();
  }
  else
  {
    *(void *)id v15 = a1;
    v15[8] = v35 & 1;
    uint64_t v32 = type metadata accessor for ConversationControlsRecipe();
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v32);
    outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v13, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    id v33 = a1;
    State.init(wrappedValue:)();
    outlined destroy of Conversation?((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    outlined init with take of ShareCardStatusHeaderView((uint64_t)v15, (uint64_t)v18);
    outlined init with copy of ShareCardStatusHeaderView((uint64_t)v18, (uint64_t)v21);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ShareCardSharePlayHeaderView and conformance ShareCardSharePlayHeaderView();
    lazy protocol witness table accessor for type ShareCardStatusHeaderView and conformance ShareCardStatusHeaderView();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ShareCardStatusHeaderView((uint64_t)v18);
  }
}

uint64_t closure #2 in ShareCardHeaderView.body.getter()
{
  return swift_release();
}

uint64_t partial apply for closure #2 in ShareCardHeaderView.body.getter()
{
  return closure #2 in ShareCardHeaderView.body.getter();
}

void ShareCardHeaderView.updateView()(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  int v7 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v8 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x8D0))();
  if (v8)
  {
    uint64_t v9 = v8;
    if (objc_msgSend(v8, sel_state) == (id)1)
    {
      TUConversationActivitySession.generateType.getter((char *)&v13);
      if (v13 != 6)
      {
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        swift_retain();
        id v12 = a3;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ShareCardHeaderView.HeaderState>);
        State.wrappedValue.setter();
        swift_release();

        return;
      }
    }
  }
  uint64_t v10 = (void *)(*(uint64_t (**)(void))((*v7 & *a1) + 0x778))();
  if (!v10) {
    goto LABEL_9;
  }
  uint64_t v11 = v10;
  if (((*(uint64_t (**)(void))((*v7 & *v10) + 0x80))() & 1) == 0)
  {

LABEL_9:
    uint64_t v13 = a3;
    uint64_t v14 = a4;
    goto LABEL_10;
  }
  uint64_t v13 = a3;
  uint64_t v14 = a4;
LABEL_10:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ShareCardHeaderView.HeaderState>);
  State.wrappedValue.setter();
}

uint64_t objectdestroyTm_19()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #3 in ShareCardHeaderView.body.getter()
{
  ShareCardHeaderView.updateView()(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t associated type witness table accessor for View.Body : View in ShareCardHeaderView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance ShareCardHeaderView@<X0>(uint64_t a1@<X8>)
{
  return ShareCardHeaderView.body.getter(*(char **)v1, *(unsigned __int8 *)(v1 + 8), *(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t destroy for ShareCardHeaderView(id *a1)
{
  return swift_release();
}

uint64_t initializeWithCopy for ShareCardHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  id v6 = v3;
  id v7 = v5;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ShareCardHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ShareCardHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ShareCardHeaderView()
{
  return &type metadata for ShareCardHeaderView;
}

ValueMetadata *type metadata accessor for ShareCardHeaderView.HeaderState()
{
  return &type metadata for ShareCardHeaderView.HeaderState;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>> and conformance SubscriptionView<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>> and conformance SubscriptionView<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>> and conformance SubscriptionView<A, B>;
  if (!lazy protocol witness table cache variable for type SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>> and conformance SubscriptionView<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>> and conformance SubscriptionView<A, B>);
  }
  return result;
}

void partial apply for closure #1 in closure #2 in ShareCardHeaderView.body.getter()
{
  ShareCardHeaderView.updateView()(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t outlined init with take of ShareCardStatusHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShareCardStatusHeaderView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of ShareCardStatusHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShareCardStatusHeaderView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ShareCardSharePlayHeaderView and conformance ShareCardSharePlayHeaderView()
{
  unint64_t result = lazy protocol witness table cache variable for type ShareCardSharePlayHeaderView and conformance ShareCardSharePlayHeaderView;
  if (!lazy protocol witness table cache variable for type ShareCardSharePlayHeaderView and conformance ShareCardSharePlayHeaderView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareCardSharePlayHeaderView and conformance ShareCardSharePlayHeaderView);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShareCardStatusHeaderView and conformance ShareCardStatusHeaderView()
{
  unint64_t result = lazy protocol witness table cache variable for type ShareCardStatusHeaderView and conformance ShareCardStatusHeaderView;
  if (!lazy protocol witness table cache variable for type ShareCardStatusHeaderView and conformance ShareCardStatusHeaderView)
  {
    type metadata accessor for ShareCardStatusHeaderView(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareCardStatusHeaderView and conformance ShareCardStatusHeaderView);
  }
  return result;
}

uint64_t outlined destroy of ShareCardStatusHeaderView(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShareCardStatusHeaderView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL static ObjectTracker.Rule.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void ObjectTracker.Rule.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int ObjectTracker.Rule.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t ObjectTracker.RuleGroup.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  return v5(a1, v1, v3);
}

uint64_t ObjectTracker.RuleGroup.name.getter()
{
  OUTLINED_FUNCTION_43_26();
  uint64_t v2 = *(void *)(v0 + v1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for ObjectTracker.RuleGroup(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ObjectTracker.RuleGroup);
}

uint64_t ObjectTracker.RuleGroup.rules.getter()
{
  type metadata accessor for ObjectTracker.RuleGroup(0);
  return swift_bridgeObjectRetain();
}

uint64_t ObjectTracker.RuleGroup.report.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ObjectTracker.RuleGroup(0) + 28));
}

uint64_t ObjectTracker.RuleGroup.init(name:rules:report:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  UUID.init()();
  uint64_t result = OUTLINED_FUNCTION_43_26();
  id v12 = (void *)(a5 + v11);
  *id v12 = a1;
  v12[1] = a2;
  *(void *)(a5 + *(int *)(result + 24)) = a3;
  *(unsigned char *)(a5 + *(int *)(result + 28)) = a4;
  return result;
}

void ObjectTracker.RuleGroup.hash(into:)()
{
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type UUID and conformance UUID();
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v1 = type metadata accessor for ObjectTracker.RuleGroup(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  specialized Set.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned char *)(v0 + *(int *)(v1 + 28)));
}

uint64_t static ObjectTracker.RuleGroup.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v4 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), v11 = 0, (v10 & 1) != 0))
  {
    specialized static Set.== infix(_:_:)(*(void *)(a1 + v4[6]), *(void *)(a2 + v4[6]));
    if (v12)
    {
      char v11 = *(unsigned char *)(a1 + v4[7]) ^ *(unsigned char *)(a2 + v4[7]) ^ 1;
      return v11 & 1;
    }
LABEL_9:
    char v11 = 0;
  }
  return v11 & 1;
}

Swift::Int ObjectTracker.RuleGroup.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ObjectTracker.RuleGroup()
{
  return Hasher._finalize()();
}

uint64_t ObjectTracker.Objects.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t ObjectTracker.RuleGroupError.shortDescription.getter()
{
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_43_26();
  uint64_t v2 = (uint64_t *)(v0 + v1);
  uint64_t v3 = *v2;
  uint64_t v4 = (void *)v2[1];
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t ObjectTracker.RuleGroupError.description.getter()
{
  _StringGuts.grow(_:)(43);
  v1._uint64_t countAndFlagsBits = 0x203A726F727245;
  v1._object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  uint64_t v2 = (uint64_t *)(v0 + *(int *)(type metadata accessor for ObjectTracker.RuleGroupError(0) + 24));
  uint64_t v3 = *v2;
  uint64_t v4 = (void *)v2[1];
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x6F7247656C75720ALL;
  v6._object = (void *)0xEC000000203A7075;
  String.append(_:)(v6);
  type metadata accessor for ObjectTracker.RuleGroup(0);
  _print_unlocked<A, B>(_:_:)();
  v7._object = (void *)0x80000001C37BEAD0;
  v7._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v7);
  type metadata accessor for ObjectTracker.Objects();
  _print_unlocked<A, B>(_:_:)();
  return 0;
}

void ObjectTracker.RuleGroupError.additionalDirections.getter()
{
}

uint64_t ObjectTracker.RuleGroupError.ruleGroup.getter()
{
  return _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
}

uint64_t ObjectTracker.RuleGroupError.rule.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ObjectTracker.RuleGroupError(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t ObjectTracker.RuleGroupError.message.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ObjectTracker.RuleGroupError(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t closure #1 in variable initialization expression of static ObjectTracker.shared(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
  outlined init with copy of IDSLookupManager(a1, (uint64_t)v9);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  outlined init with take of Notice(v9, v6 + 32);
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 128) = a4;
  return MEMORY[0x1F4188298](closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared, 0, 0);
}

uint64_t closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared()
{
  OUTLINED_FUNCTION_17_2();
  v0[17] = static RadarReporter.Strings.description.getter();
  v0[18] = v1;
  v0[19] = type metadata accessor for MainActor();
  v0[20] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared, v3, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v0, v1, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 136);
  *(void *)(v0 + 72) = 0x616E7265746E495BLL;
  *(void *)(v0 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0xEA00000000005D6CLL;
  *(void *)(v0 + 88) = v2;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = &async function pointer to implicit closure #1 in static RadarReporter.createRadarReporterUsingAlert(title:description:reproducibility:component:classification:);
  *(void *)(v0 + 112) = 0;
  *(unsigned char *)(v0 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0;
  *(void *)(v0 + 168) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared, v4, v3);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void **)(v0 + 128);
  swift_release();
  RadarReporter.add(info:)(v1);
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

{
  uint64_t v0;
  long long v1;
  void *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 104);
  *(unsigned char *)(v0 + 64) = *(unsigned char *)(v0 + 120);
  outlined retain of RadarReporter(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v2;
  *uint64_t v2 = v0;
  v2[1] = closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared;
  return RadarReporter.requestInternalUserToReportToRadar()();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v2 = v1 + 16;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  outlined release of RadarReporter(v2);
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_17_2();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_6();
  return v0();
}

uint64_t ObjectTracker.__allocating_init(onReportFailure:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  ObjectTracker.init(onReportFailure:)(a1, a2);
  return v4;
}

uint64_t static ObjectTracker.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t ObjectTracker.init(onReportFailure:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_21();
  swift_defaultActor_initialize();
  *(unsigned char *)(v2 + 112) = 1;
  strcpy((char *)(v2 + 120), "This is a test");
  *(unsigned char *)(v2 + 135) = -18;
  *(void *)(v2 + 136) = MEMORY[0x1E4FBC868];
  type metadata accessor for TaskQueue();
  MEMORY[0x1C87735F0]();
  uint64_t v7 = TaskQueue.__allocating_init(priority:)();
  *(void *)(v2 + 152) = a2;
  *(void *)(v2 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v7;
  *(void *)(v2 + 144) = a1;
  return v2;
}

void ObjectTracker._startTracking(pointer:ruleGroup:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_21();
  uint64_t v10 = v9 - v8;
  v47[1] = type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_36();
  uint64_t v14 = v12 - v13;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_42_28();
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)v47 - v17;
  _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
  OUTLINED_FUNCTION_2();
  uint64_t v19 = *(void *)(v0 + 136);
  uint64_t v20 = *(void *)(v19 + 16);
  swift_bridgeObjectRetain();
  if (v20 && (unint64_t v21 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v18), (v22 & 1) != 0))
  {
    uint64_t v23 = *(void *)(*(void *)(v19 + 56) + 8 * v21);
    swift_retain();
  }
  else
  {
    type metadata accessor for ObjectTracker.Objects();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  outlined destroy of ObjectTracker.RuleGroup((uint64_t)v18, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
  OUTLINED_FUNCTION_2();
  specialized Set.contains(_:)(v5, *(void *)(v23 + 16));
  if ((v24 & 1) == 0)
  {
    swift_beginAccess();
    specialized Set._Variant.insert(_:)(&v49, v5);
    swift_endAccess();
    swift_beginAccess();
    uint64_t v35 = swift_retain();
    specialized Dictionary._Variant.setValue(_:forKey:)(v35, v3);
    swift_endAccess();
    ObjectTracker.verifyRules(for:)();
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    __swift_project_value_buffer(v36, (uint64_t)static Logger.conversationKit);
    _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v26, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      v47[0] = OUTLINED_FUNCTION_14_3();
      v48[0] = v47[0];
      *(_DWORD *)uint64_t v38 = 136315394;
      uint64_t v49 = v5;
      uint64_t v39 = String.init<A>(reflecting:)();
      uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
      uint64_t v41 = OUTLINED_FUNCTION_45_22();
      unint64_t v43 = v42;
      outlined destroy of SystemUpdateNotice?(v10, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
      uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v43, v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ObjectTracker.RuleGroup(v1, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
      OUTLINED_FUNCTION_11_6(&dword_1C2F90000, v44, v45, "ObjectTracker: startTracking object at address %s for %s");
      OUTLINED_FUNCTION_38_32();
      OUTLINED_FUNCTION_3();
      goto LABEL_14;
    }
    swift_release();
    uint64_t v46 = v1;
LABEL_17:
    outlined destroy of ObjectTracker.RuleGroup(v46, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
    goto LABEL_18;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)static Logger.conversationKit);
  _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v26, v27))
  {
    swift_release();
    uint64_t v46 = v14;
    goto LABEL_17;
  }
  uint64_t v28 = swift_slowAlloc();
  v47[0] = OUTLINED_FUNCTION_14_3();
  v48[0] = v47[0];
  *(_DWORD *)uint64_t v28 = 136315394;
  _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
  uint64_t v29 = OUTLINED_FUNCTION_45_22();
  uint64_t v30 = v5;
  unint64_t v32 = v31;
  outlined destroy of SystemUpdateNotice?(v10, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
  uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v32, v48);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  outlined destroy of ObjectTracker.RuleGroup(v14, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
  *(_WORD *)(v28 + 12) = 2080;
  uint64_t v49 = v30;
  uint64_t v33 = String.init<A>(reflecting:)();
  uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, v48);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1C2F90000, v26, v27, "ObjectTracker: initialized called for %s with object at address %s but the object was already inserted.", (uint8_t *)v28, 0x16u);
  OUTLINED_FUNCTION_38_32();
  OUTLINED_FUNCTION_3();
LABEL_14:
  OUTLINED_FUNCTION_3();
  swift_release();
LABEL_18:

  OUTLINED_FUNCTION_28();
}

void ObjectTracker._stopTracking(pointer:ruleGroup:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_21();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_36();
  uint64_t v14 = v12 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v38[-1] - v16;
  OUTLINED_FUNCTION_2();
  uint64_t v18 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  uint64_t v19 = specialized Dictionary.subscript.getter(v2, v18);
  swift_bridgeObjectRelease();
  if (!v19)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    __swift_project_value_buffer(v31, (uint64_t)static Logger.conversationKit);
    _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
    unint64_t v21 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      v38[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315138;
      _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
      __swift_storeEnumTagSinglePayload(v9, 0, 1, v10);
      uint64_t v34 = specialized >> prefix<A>(_:)();
      unint64_t v36 = v35;
      outlined destroy of SystemUpdateNotice?(v9, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
      uint64_t v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ObjectTracker.RuleGroup(v14, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
      _os_log_impl(&dword_1C2F90000, v21, v32, "ObjectTracker: Called deinitialized but there is no group for %s", v33, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
      outlined destroy of ObjectTracker.RuleGroup(v14, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
    }
    goto LABEL_12;
  }
  swift_beginAccess();
  specialized Set._Variant.remove(_:)();
  swift_endAccess();
  ObjectTracker.verifyRules(for:)();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  __swift_project_value_buffer(v20, (uint64_t)static Logger.conversationKit);
  _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
  unint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v37 = OUTLINED_FUNCTION_14_3();
    v38[0] = v37;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v39 = v4;
    uint64_t v24 = String.init<A>(reflecting:)();
    uint64_t v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
    __swift_storeEnumTagSinglePayload(v9, 0, 1, v10);
    uint64_t v26 = specialized >> prefix<A>(_:)();
    unint64_t v28 = v27;
    outlined destroy of SystemUpdateNotice?(v9, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
    uint64_t v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v28, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ObjectTracker.RuleGroup((uint64_t)v17, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
    OUTLINED_FUNCTION_11_6(&dword_1C2F90000, v29, v30, "ObjectTracker: stopTracking object at address %s for %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
    swift_release();
LABEL_12:

    goto LABEL_13;
  }
  outlined destroy of ObjectTracker.RuleGroup((uint64_t)v17, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);

  swift_release();
LABEL_13:
  OUTLINED_FUNCTION_28();
}

void ObjectTracker.verifyRules(for:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = (int *)type metadata accessor for ObjectTracker.RuleGroupError(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_36();
  uint64_t v9 = v7 - v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_42_28();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_2();
  uint64_t v12 = *(void *)(v0 + 136);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = specialized __RawDictionaryStorage.find<A>(_:)(v4);
    if ((v14 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v36 = type metadata accessor for ObjectTracker.RuleGroup(0);
    if (specialized Set.contains(_:)(0, *(void *)(v4 + *(int *)(v36 + 24)))) {
      ObjectTracker.verifyExclusive(objects:)(v15);
    }
    type metadata accessor for Defaults();
    swift_allocObject();
    uint64_t v16 = *(void *)Defaults.init()();
    char v17 = (*(uint64_t (**)(void))(v16 + 1072))();
    swift_release();
    if (v17)
    {
      char v18 = *(unsigned char *)(v2 + 112);
      uint64_t v35 = v15;
      uint64_t v20 = *(void *)(v2 + 120);
      uint64_t v19 = *(void *)(v2 + 128);
      lazy protocol witness table accessor for type ObjectTracker.RuleError and conformance ObjectTracker.RuleError();
      unint64_t v21 = (void *)swift_allocError();
      *(unsigned char *)uint64_t v22 = v18;
      *(void *)(v22 + 8) = v20;
      *(void *)(v22 + 16) = v19;
      swift_bridgeObjectRetain();
      swift_willThrow();
      id v23 = v21;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      if (swift_dynamicCast())
      {

        outlined init with take of ObjectTracker.RuleGroup();
        _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
        uint64_t v24 = (uint64_t *)(v1 + v5[6]);
        uint64_t v25 = *v24;
        uint64_t v26 = v24[1];
        *(unsigned char *)(v9 + v5[5]) = *(unsigned char *)(v1 + v5[5]);
        unint64_t v27 = (void *)(v9 + v5[6]);
        *unint64_t v27 = v25;
        v27[1] = v26;
        *(void *)(v9 + v5[7]) = v35;
        char v28 = *(unsigned char *)(v4 + *(int *)(v36 + 28));
        swift_retain();
        swift_bridgeObjectRetain();
        specialized ObjectTracker.reportFailure(_:report:)(v9, v28, v2);
        swift_release();
        outlined destroy of ObjectTracker.RuleGroup(v9, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroupError);
        outlined destroy of ObjectTracker.RuleGroup(v1, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroupError);

        goto LABEL_11;
      }

      id v29 = v21;
      uint64_t v30 = String.init<A>(reflecting:)();
      uint64_t v32 = v31;
      swift_getErrorValue();
      uint64_t v33 = Error.localizedDescription.getter();
      specialized ObjectTracker.reportFailure(_:report:)(v30, v32, v33, v34, 1, v2);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
  }
LABEL_11:
  OUTLINED_FUNCTION_28();
}

uint64_t ObjectTracker.verifyExclusive(objects:)(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 16) + 16) > 1uLL)
  {
    lazy protocol witness table accessor for type ObjectTracker.RuleError and conformance ObjectTracker.RuleError();
    swift_allocError();
    *(unsigned char *)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0xD00000000000003DLL;
    *(void *)(v3 + 16) = 0x80000001C37BEBC0;
    return swift_willThrow();
  }
  return result;
}

uint64_t ObjectTracker.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ObjectTracker.__deallocating_deinit()
{
  ObjectTracker.deinit();
  return MEMORY[0x1F4188210](v0);
}

void ObjectTracker.unownedExecutor.getter()
{
}

void protocol witness for Actor.unownedExecutor.getter in conformance ObjectTracker()
{
}

uint64_t ObjectTracker.startTracking(pointer:ruleGroup:)()
{
  OUTLINED_FUNCTION_17_2();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_1(v4);
  v1[5] = v5;
  v1[6] = *(void *)(v6 + 64);
  v1[7] = OUTLINED_FUNCTION_191();
  return MEMORY[0x1F4188298](ObjectTracker.startTracking(pointer:ruleGroup:), v0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v4)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_47_22();
  _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
  OUTLINED_FUNCTION_32_35();
  uint64_t v1 = swift_allocObject();
  OUTLINED_FUNCTION_21_57(v1);
  OUTLINED_FUNCTION_31_43();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = ObjectTracker.startTracking(pointer:ruleGroup:);
  return v4();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x1F4188298](ObjectTracker.startTracking(pointer:ruleGroup:), v2, 0);
}

uint64_t closure #1 in ObjectTracker.startTracking(pointer:ruleGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[3] = a3;
  v4[4] = a4;
  _OWORD v4[2] = a2;
  return MEMORY[0x1F4188298](closure #1 in ObjectTracker.startTracking(pointer:ruleGroup:), a2, 0);
}

uint64_t closure #1 in ObjectTracker.startTracking(pointer:ruleGroup:)()
{
  OUTLINED_FUNCTION_17_2();
  ObjectTracker._startTracking(pointer:ruleGroup:)();
  OUTLINED_FUNCTION_6();
  return v0();
}

uint64_t ObjectTracker.stopTracking(pointer:ruleGroup:)()
{
  OUTLINED_FUNCTION_17_2();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_1(v4);
  v1[5] = v5;
  v1[6] = *(void *)(v6 + 64);
  v1[7] = OUTLINED_FUNCTION_191();
  return MEMORY[0x1F4188298](ObjectTracker.stopTracking(pointer:ruleGroup:), v0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v4)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_47_22();
  _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
  OUTLINED_FUNCTION_32_35();
  uint64_t v1 = swift_allocObject();
  OUTLINED_FUNCTION_21_57(v1);
  OUTLINED_FUNCTION_31_43();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = ObjectTracker.stopTracking(pointer:ruleGroup:);
  return v4();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x1F4188298](ObjectTracker.stopTracking(pointer:ruleGroup:), v2, 0);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_17_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v0();
}

uint64_t closure #1 in ObjectTracker.stopTracking(pointer:ruleGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[3] = a3;
  v4[4] = a4;
  _OWORD v4[2] = a2;
  return MEMORY[0x1F4188298](closure #1 in ObjectTracker.stopTracking(pointer:ruleGroup:), a2, 0);
}

uint64_t closure #1 in ObjectTracker.stopTracking(pointer:ruleGroup:)()
{
  OUTLINED_FUNCTION_17_2();
  ObjectTracker._stopTracking(pointer:ruleGroup:)();
  OUTLINED_FUNCTION_6();
  return v0();
}

uint64_t ObjectTracker.startTracking(object:ruleGroup:)()
{
  OUTLINED_FUNCTION_28_0();
  v0[5] = v1;
  v0[6] = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
  OUTLINED_FUNCTION_8(v3);
  v0[7] = OUTLINED_FUNCTION_191();
  uint64_t v4 = type metadata accessor for ObjectTracker.RuleGroup(0);
  v0[8] = v4;
  OUTLINED_FUNCTION_8(v4);
  v0[9] = OUTLINED_FUNCTION_191();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  *uint64_t v5 = v0;
  v5[1] = ObjectTracker.startTracking(object:ruleGroup:);
  return ObjectTracker.startTracking(pointer:ruleGroup:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  uint64_t v33 = v1;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v3 = OUTLINED_FUNCTION_27_52();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationKit);
  _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
  swift_unknownObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  uint64_t v5 = static os_log_type_t.info.getter();
  uint64_t v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 32);
  if (v6)
  {
    uint64_t v8 = (_DWORD *)OUTLINED_FUNCTION_9_94();
    uint64_t v32 = OUTLINED_FUNCTION_14_3();
    void *v8 = 136315394;
    _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
    uint64_t v9 = OUTLINED_FUNCTION_36_32();
    uint64_t v11 = v10;
    outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
    uint64_t v12 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v11, &v32);
    OUTLINED_FUNCTION_23_61(v12);
    swift_bridgeObjectRelease();
    unint64_t v13 = outlined destroy of ObjectTracker.RuleGroup(v7, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
    OUTLINED_FUNCTION_20_63(v13, v14, v15, v16, v17, v18, v19, v20, v28, v29, v30, v31);
    unint64_t v21 = String.init<A>(reflecting:)();
    id v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v32);
    OUTLINED_FUNCTION_22_55(v23);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    OUTLINED_FUNCTION_41_29(&dword_1C2F90000, v24, v25, "ObjectTracker: initialized called for %s with object  %s");
    OUTLINED_FUNCTION_39_33();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    outlined destroy of ObjectTracker.RuleGroup(v7, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
    swift_unknownObjectRelease_n();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v26();
}

uint64_t ObjectTracker.stopTracking(object:ruleGroup:)()
{
  OUTLINED_FUNCTION_28_0();
  v0[5] = v1;
  v0[6] = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
  OUTLINED_FUNCTION_8(v3);
  v0[7] = OUTLINED_FUNCTION_191();
  uint64_t v4 = type metadata accessor for ObjectTracker.RuleGroup(0);
  v0[8] = v4;
  OUTLINED_FUNCTION_8(v4);
  v0[9] = OUTLINED_FUNCTION_191();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  *uint64_t v5 = v0;
  v5[1] = ObjectTracker.stopTracking(object:ruleGroup:);
  return ObjectTracker.stopTracking(pointer:ruleGroup:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  uint64_t v33 = v1;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v3 = OUTLINED_FUNCTION_27_52();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationKit);
  _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
  swift_unknownObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  uint64_t v5 = static os_log_type_t.info.getter();
  uint64_t v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 32);
  if (v6)
  {
    uint64_t v8 = (_DWORD *)OUTLINED_FUNCTION_9_94();
    uint64_t v32 = OUTLINED_FUNCTION_14_3();
    void *v8 = 136315394;
    _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
    uint64_t v9 = OUTLINED_FUNCTION_36_32();
    uint64_t v11 = v10;
    outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
    uint64_t v12 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v11, &v32);
    OUTLINED_FUNCTION_23_61(v12);
    swift_bridgeObjectRelease();
    unint64_t v13 = outlined destroy of ObjectTracker.RuleGroup(v7, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
    OUTLINED_FUNCTION_20_63(v13, v14, v15, v16, v17, v18, v19, v20, v28, v29, v30, v31);
    unint64_t v21 = String.init<A>(reflecting:)();
    id v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v32);
    OUTLINED_FUNCTION_22_55(v23);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    OUTLINED_FUNCTION_41_29(&dword_1C2F90000, v24, v25, "ObjectTracker: deinitialized called for %s with object %s");
    OUTLINED_FUNCTION_39_33();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    outlined destroy of ObjectTracker.RuleGroup(v7, (void (*)(void))type metadata accessor for ObjectTracker.RuleGroup);
    swift_unknownObjectRelease_n();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v26();
}

uint64_t ObjectTracker.Tracker.ruleGroup.getter()
{
  return _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
}

uint64_t ObjectTracker.Tracker.objectTracker.getter()
{
  type metadata accessor for ObjectTracker.Tracker(0);
  return swift_retain();
}

void ObjectTracker.Tracker.startTracking(object:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ObjectTracker.Tracker(0);
  uint64_t v3 = OUTLINED_FUNCTION_1(v2);
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v3);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_21();
  uint64_t v12 = v11 - v10;
  unint64_t v13 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v13);
  _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
  char v14 = (v7 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  outlined init with take of ObjectTracker.RuleGroup();
  *(void *)(v15 + v14) = v1;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in ObjectTracker.Tracker.startTracking(object:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](closure #1 in ObjectTracker.Tracker.startTracking(object:), 0, 0);
}

uint64_t closure #1 in ObjectTracker.Tracker.startTracking(object:)()
{
  OUTLINED_FUNCTION_17_2();
  type metadata accessor for ObjectTracker.Tracker(0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = closure #1 in ObjectTracker.Tracker.startTracking(object:);
  return ObjectTracker.startTracking(pointer:ruleGroup:)();
}

void ObjectTracker.Tracker.stopTracking(object:)()
{
}

uint64_t closure #1 in ObjectTracker.Tracker.stopTracking(object:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](closure #1 in ObjectTracker.Tracker.stopTracking(object:), 0, 0);
}

uint64_t closure #1 in ObjectTracker.Tracker.stopTracking(object:)()
{
  OUTLINED_FUNCTION_17_2();
  type metadata accessor for ObjectTracker.Tracker(0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = closure #1 in ObjectTracker.Tracker.stopTracking(object:);
  return ObjectTracker.stopTracking(pointer:ruleGroup:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v3();
}

uint64_t ObjectTracker.Tracker.init(ruleGroup:objectTracker:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  outlined init with take of ObjectTracker.RuleGroup();
  uint64_t result = type metadata accessor for ObjectTracker.Tracker(0);
  *(void *)(a2 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t ObjectTracker.tracker(for:with:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = _typeName(_:qualified:)();
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  UUID.init()();
  uint64_t v8 = OUTLINED_FUNCTION_43_26();
  uint64_t v10 = (uint64_t *)(a2 + v9);
  *uint64_t v10 = v5;
  v10[1] = v7;
  *(void *)(a2 + *(int *)(v8 + 24)) = a1;
  *(unsigned char *)(a2 + *(int *)(v8 + 28)) = 1;
  *(void *)(a2 + *(int *)(type metadata accessor for ObjectTracker.Tracker(0) + 20)) = v2;
  return swift_retain();
}

uint64_t type metadata accessor for ObjectTracker.RuleGroupError(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ObjectTracker.RuleGroupError);
}

uint64_t type metadata accessor for ObjectTracker.Objects()
{
  return self;
}

uint64_t partial apply for closure #1 in ObjectTracker.startTracking(pointer:ruleGroup:)()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_8_91();
  OUTLINED_FUNCTION_46_26();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ObjectTracker.startTracking(pointer:ruleGroup:)(v3, v4, v5, v6);
}

uint64_t objectdestroyTm_20()
{
  type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_1_6();
  swift_release();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ObjectTracker.stopTracking(pointer:ruleGroup:)()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_8_91();
  OUTLINED_FUNCTION_46_26();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ObjectTracker.stopTracking(pointer:ruleGroup:)(v3, v4, v5, v6);
}

uint64_t type metadata accessor for ObjectTracker.Tracker(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ObjectTracker.Tracker);
}

uint64_t outlined init with take of ObjectTracker.RuleGroup()
{
  uint64_t v2 = OUTLINED_FUNCTION_34_42();
  v3(v2);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t partial apply for closure #1 in ObjectTracker.Tracker.startTracking(object:)()
{
  uint64_t v0 = type metadata accessor for ObjectTracker.Tracker(0);
  OUTLINED_FUNCTION_1(v0);
  OUTLINED_FUNCTION_148();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10(v1);
  *uint64_t v2 = v3;
  v2[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v4 = OUTLINED_FUNCTION_34_4();
  return closure #1 in ObjectTracker.Tracker.startTracking(object:)(v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_11Tm_0()
{
  type metadata accessor for ObjectTracker.Tracker(0);
  OUTLINED_FUNCTION_1_6();
  swift_unknownObjectRelease();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v0();
  type metadata accessor for ObjectTracker.RuleGroup(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ObjectTracker.Tracker.stopTracking(object:)()
{
  uint64_t v0 = type metadata accessor for ObjectTracker.Tracker(0);
  OUTLINED_FUNCTION_1(v0);
  OUTLINED_FUNCTION_148();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10(v1);
  *uint64_t v2 = v3;
  v2[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  uint64_t v4 = OUTLINED_FUNCTION_34_4();
  return closure #1 in ObjectTracker.Tracker.stopTracking(object:)(v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type ObjectTracker.Rule and conformance ObjectTracker.Rule()
{
  unint64_t result = lazy protocol witness table cache variable for type ObjectTracker.Rule and conformance ObjectTracker.Rule;
  if (!lazy protocol witness table cache variable for type ObjectTracker.Rule and conformance ObjectTracker.Rule)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ObjectTracker.Rule and conformance ObjectTracker.Rule);
  }
  return result;
}

uint64_t base witness table accessor for Equatable in ObjectTracker.RuleGroup()
{
  return lazy protocol witness table accessor for type ObjectTracker.RuleGroup and conformance ObjectTracker.RuleGroup(&lazy protocol witness table cache variable for type ObjectTracker.RuleGroup and conformance ObjectTracker.RuleGroup, (void (*)(uint64_t))type metadata accessor for ObjectTracker.RuleGroup);
}

uint64_t instantiation function for generic protocol witness table for ObjectTracker.RuleGroupError(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type ObjectTracker.RuleGroup and conformance ObjectTracker.RuleGroup(&lazy protocol witness table cache variable for type ObjectTracker.RuleGroupError and conformance ObjectTracker.RuleGroupError, (void (*)(uint64_t))type metadata accessor for ObjectTracker.RuleGroupError);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t lazy protocol witness table accessor for type ObjectTracker.RuleGroup and conformance ObjectTracker.RuleGroup(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ObjectTracker()
{
  return self;
}

uint64_t method lookup function for ObjectTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ObjectTracker);
}

uint64_t dispatch thunk of ObjectTracker.__allocating_init(onReportFailure:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

unsigned char *storeEnumTagSinglePayload for ObjectTracker.Rule(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C36DB2BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for ObjectTracker.Rule()
{
}

void *initializeBufferWithCopyOfBuffer for ObjectTracker.RuleGroup(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ObjectTracker.RuleGroup(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C36DB720);
}

uint64_t sub_1C36DB720(uint64_t a1, int a2, uint64_t a3)
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v6 + 84) != a2) {
    return OUTLINED_FUNCTION_46_0(*(void *)(a1 + *(int *)(a3 + 20) + 8));
  }
  uint64_t v7 = OUTLINED_FUNCTION_32_0();
  return __swift_getEnumTagSinglePayload(v7, v8, v9);
}

uint64_t storeEnumTagSinglePayload for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C36DB7B0);
}

void sub_1C36DB7B0(uint64_t a1, int a2, int a3, uint64_t a4)
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = OUTLINED_FUNCTION_23_18();
    __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t type metadata completion function for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return type metadata completion function for ObjectTracker.RuleGroup(a1, a2, a3, MEMORY[0x1F418BB70]);
}

void *initializeBufferWithCopyOfBuffer for ObjectTracker.RuleGroupError(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    unsigned int v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (void *)((char *)v4 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *uint64_t v10 = v13;
    v10[1] = v12;
    *(void *)((char *)v4 + v8[6]) = *(void *)((char *)a2 + v8[6]);
    *((unsigned char *)v4 + v8[7]) = *((unsigned char *)a2 + v8[7]);
    uint64_t v14 = a3[6];
    *((unsigned char *)v4 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ObjectTracker.RuleGroupError(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for ObjectTracker.RuleGroup(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ObjectTracker.RuleGroupError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v13 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ObjectTracker.RuleGroupError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ObjectTracker.RuleGroupError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ObjectTracker.RuleGroupError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v13 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectTracker.RuleGroupError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C36DBE2C);
}

uint64_t sub_1C36DBE2C(uint64_t a1, int a2, uint64_t a3)
{
  type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v6 + 84) != a2) {
    return OUTLINED_FUNCTION_46_0(*(void *)(a1 + *(int *)(a3 + 24) + 8));
  }
  uint64_t v7 = OUTLINED_FUNCTION_32_0();
  return __swift_getEnumTagSinglePayload(v7, v8, v9);
}

uint64_t storeEnumTagSinglePayload for ObjectTracker.RuleGroupError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C36DBEBC);
}

void sub_1C36DBEBC(uint64_t a1, int a2, int a3, uint64_t a4)
{
  type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = OUTLINED_FUNCTION_23_18();
    __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
}

uint64_t type metadata completion function for ObjectTracker.RuleGroupError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return type metadata completion function for ObjectTracker.RuleGroup(a1, a2, a3, type metadata accessor for ObjectTracker.RuleGroup);
}

uint64_t type metadata completion function for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ObjectTracker.Tracker(void *a1, void *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    unsigned int v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (void *)((char *)v4 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *uint64_t v10 = v13;
    v10[1] = v12;
    *(void *)((char *)v4 + v8[6]) = *(void *)((char *)a2 + v8[6]);
    *((unsigned char *)v4 + v8[7]) = *((unsigned char *)a2 + v8[7]);
    *(void *)((char *)v4 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ObjectTracker.Tracker(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for ObjectTracker.RuleGroup(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ObjectTracker.Tracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ObjectTracker.Tracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ObjectTracker.Tracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ObjectTracker.Tracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectTracker.Tracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C36DC514);
}

uint64_t sub_1C36DC514(uint64_t a1, int a2, uint64_t a3)
{
  type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v6 + 84) != a2) {
    return OUTLINED_FUNCTION_46_0(*(void *)(a1 + *(int *)(a3 + 20)));
  }
  uint64_t v7 = OUTLINED_FUNCTION_32_0();
  return __swift_getEnumTagSinglePayload(v7, v8, v9);
}

uint64_t storeEnumTagSinglePayload for ObjectTracker.Tracker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C36DC5A0);
}

void sub_1C36DC5A0(uint64_t a1, int a2, int a3, uint64_t a4)
{
  type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = OUTLINED_FUNCTION_23_18();
    __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata completion function for ObjectTracker.Tracker()
{
  uint64_t result = type metadata accessor for ObjectTracker.RuleGroup(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *type metadata accessor for ObjectTracker.RuleError()
{
  return &unk_1F1EBB160;
}

unint64_t lazy protocol witness table accessor for type ObjectTracker.RuleError and conformance ObjectTracker.RuleError()
{
  unint64_t result = lazy protocol witness table cache variable for type ObjectTracker.RuleError and conformance ObjectTracker.RuleError;
  if (!lazy protocol witness table cache variable for type ObjectTracker.RuleError and conformance ObjectTracker.RuleError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ObjectTracker.RuleError and conformance ObjectTracker.RuleError);
  }
  return result;
}

uint64_t specialized ObjectTracker.reportFailure(_:report:)(uint64_t a1, char a2, uint64_t a3)
{
  v20[3] = type metadata accessor for ObjectTracker.RuleGroupError(0);
  v20[4] = lazy protocol witness table accessor for type ObjectTracker.RuleGroup and conformance ObjectTracker.RuleGroup(&lazy protocol witness table cache variable for type ObjectTracker.RuleGroupError and conformance ObjectTracker.RuleGroupError, (void (*)(uint64_t))type metadata accessor for ObjectTracker.RuleGroupError);
  __swift_allocate_boxed_opaque_existential_1(v20);
  _s15ConversationKit13ObjectTrackerC9RuleGroupVWOcTm_0();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationKit);
  outlined init with copy of IDSLookupManager((uint64_t)v20, (uint64_t)v19);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v18 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    outlined init with copy of IDSLookupManager((uint64_t)v19, (uint64_t)v17);
    uint64_t v10 = specialized >> prefix<A>(_:)((uint64_t)v17);
    unint64_t v12 = v11;
    outlined destroy of SystemUpdateNotice?((uint64_t)v17, &demangling cache variable for type metadata for RadarReporting?);
    v17[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    _os_log_impl(&dword_1C2F90000, v6, v7, "ObjectTracker: reporting failure %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v9, -1, -1);
    MEMORY[0x1C87760E0](v8, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }

  if (a2)
  {
    type metadata accessor for Defaults();
    swift_allocObject();
    uint64_t v13 = *(void *)Defaults.init()();
    char v14 = (*(uint64_t (**)(void))(v13 + 1072))();
    swift_release();
    if (v14)
    {
      swift_allocObject();
      uint64_t v15 = *(void *)Defaults.init()();
      (*(void (**)(void))(v15 + 1080))(0);
      swift_release();
    }
    (*(void (**)(uint64_t *))(a3 + 144))(v20);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

uint64_t specialized ObjectTracker.reportFailure(_:report:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  _OWORD v29[3] = &type metadata for RadarReporter.Info;
  v29[4] = lazy protocol witness table accessor for type RadarReporter.Info and conformance RadarReporter.Info();
  unint64_t v12 = (void *)swift_allocObject();
  v29[0] = v12;
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  uint64_t v13 = one-time initialization token for conversationKit;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static Logger.conversationKit);
  outlined init with copy of IDSLookupManager((uint64_t)v29, (uint64_t)v28);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v27 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    outlined init with copy of IDSLookupManager((uint64_t)v28, (uint64_t)v26);
    uint64_t v19 = specialized >> prefix<A>(_:)((uint64_t)v26);
    unint64_t v21 = v20;
    outlined destroy of SystemUpdateNotice?((uint64_t)v26, &demangling cache variable for type metadata for RadarReporting?);
    v26[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    _os_log_impl(&dword_1C2F90000, v15, v16, "ObjectTracker: reporting failure %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v18, -1, -1);
    MEMORY[0x1C87760E0](v17, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }

  if (a5)
  {
    type metadata accessor for Defaults();
    swift_allocObject();
    uint64_t v22 = *(void *)Defaults.init()();
    char v23 = (*(uint64_t (**)(void))(v22 + 1072))();
    swift_release();
    if (v23)
    {
      swift_allocObject();
      uint64_t v24 = *(void *)Defaults.init()();
      (*(void (**)(void))(v24 + 1080))(0);
      swift_release();
    }
    (*(void (**)(void *))(a6 + 144))(v29);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
}

uint64_t outlined destroy of ObjectTracker.RuleGroup(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

uint64_t sub_1C36DCDE4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C36DCE24()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared(v3, v4, v5, v6);
}

uint64_t outlined retain of RadarReporter(uint64_t a1)
{
  return a1;
}

uint64_t outlined release of RadarReporter(uint64_t a1)
{
  return a1;
}

void OUTLINED_FUNCTION_41_29(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0x16u);
}

__n128 ClarityUIPreviewNavigationDestination.init(contact:action:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(void *)(a3 + 16) = v3;
  *(void *)(a3 + 24) = v4;
  __n128 result = *(__n128 *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 48) = v6;
  *(void *)(a3 + 64) = *(void *)(a2 + 32);
  return result;
}

uint64_t ClarityPreviewView.init(navigationPath:contact:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(a1, a4, &demangling cache variable for type metadata for Binding<NavigationPath>);
  uint64_t v9 = (int *)type metadata accessor for ClarityPreviewView();
  uint64_t v10 = a4 + v9[5];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)a2;
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v8;
  uint64_t v11 = a4 + v9[6];
  long long v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v12;
  *(void *)(v11 + 32) = *(void *)(a3 + 32);
  uint64_t v13 = v9[7];
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  *(void *)(a4 + v13) = static ClarityCameraModel.shared;
  uint64_t v14 = v9[8];
  uint64_t v15 = one-time initialization token for shared;
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  *(void *)(a4 + v14) = static ClarityUICallHistory.shared;
  return swift_retain();
}

uint64_t type metadata accessor for ClarityPreviewView()
{
  uint64_t result = type metadata singleton initialization cache for ClarityPreviewView;
  if (!type metadata singleton initialization cache for ClarityPreviewView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void ClarityPreviewView.navigationPath.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  JUMPOUT(0x1C87728E0);
}

uint64_t key path setter for ClarityPreviewView.navigationPath : ClarityPreviewView(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationPath();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return ClarityPreviewView.navigationPath.setter();
}

uint64_t ClarityPreviewView.navigationPath.setter()
{
  type metadata accessor for NavigationPath();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_2_1();
  v1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  Binding.wrappedValue.setter();
  uint64_t v2 = OUTLINED_FUNCTION_34_9();
  return v3(v2);
}

void (*ClarityPreviewView.navigationPath.modify(void *a1))(uint64_t **a1, char a2)
{
  __n128 v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = type metadata accessor for NavigationPath();
  *__n128 v3 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[1] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  v3[4] = v7;
  OUTLINED_FUNCTION_0();
  uint64_t v9 = malloc(*(void *)(v8 + 64));
  v3[5] = v9;
  outlined init with copy of Environment<DynamicTypeSize>.Content(v1, (uint64_t)v9, &demangling cache variable for type metadata for Binding<NavigationPath>);
  MEMORY[0x1C87728E0](v7);
  return ClarityPreviewView.navigationPath.modify;
}

void ClarityPreviewView.navigationPath.modify(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  __n128 v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[2];
  uint64_t v5 = (void *)(*a1)[3];
  if (a2)
  {
    uint64_t v6 = *v2;
    uint64_t v7 = v2[1];
    OUTLINED_FUNCTION_2_1();
    v8();
    Binding.wrappedValue.setter();
    outlined destroy of SystemUpdateNotice?((uint64_t)v3, &demangling cache variable for type metadata for Binding<NavigationPath>);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    Binding.wrappedValue.setter();
    outlined destroy of SystemUpdateNotice?((uint64_t)v3, &demangling cache variable for type metadata for Binding<NavigationPath>);
  }
  free(v3);
  free(v5);
  free(v4);
  free(v2);
}

uint64_t ClarityPreviewView.$navigationPath.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  return Binding.projectedValue.getter();
}

uint64_t ClarityPreviewView.contact.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClarityPreviewView() + 20);
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void **)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *a1 = *(void *)v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  id v8 = v4;
  id v9 = v5;
  return swift_bridgeObjectRetain();
}

__n128 ClarityPreviewView.contact.setter(__n128 *a1)
{
  unint64_t v3 = a1[1].n128_u64[0];
  unint64_t v4 = a1[1].n128_u64[1];
  uint64_t v5 = v1 + *(int *)(type metadata accessor for ClarityPreviewView() + 20);
  uint64_t v6 = *(void **)v5;
  uint64_t v7 = *(void **)(v5 + 8);
  swift_bridgeObjectRelease();

  __n128 result = *a1;
  *(__n128 *)uint64_t v5 = *a1;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  return result;
}

double (*ClarityPreviewView.contact.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityPreviewView.action.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ClarityPreviewView() + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  char v6 = *((unsigned char *)v3 + 16);
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  swift_bridgeObjectRetain();
  uint64_t result = _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  return result;
}

__n128 ClarityPreviewView.action.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClarityPreviewView() + 24);
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(void *)(v3 + 24));
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(void *)(v3 + 32) = *(void *)(a1 + 32);
  return result;
}

double (*ClarityPreviewView.action.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t *ClarityCameraModel.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static ClarityCameraModel.shared;
}

uint64_t ClarityPreviewView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v78 = a1;
  type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_4();
  uint64_t v76 = v3;
  uint64_t v77 = v2;
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_2_3();
  uint64_t v75 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Image.TemplateRenderingMode?);
  MEMORY[0x1F4188790](v5 - 8);
  OUTLINED_FUNCTION_2_3();
  uint64_t v72 = v6;
  uint64_t v7 = type metadata accessor for ClarityPreviewView();
  uint64_t v8 = v7 - 8;
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v67 = *(void *)(v68 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v79 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>);
  MEMORY[0x1F4188790](v10 - 8);
  OUTLINED_FUNCTION_21();
  uint64_t v13 = (uint64_t *)(v12 - v11);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_21();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>);
  uint64_t v20 = v19 - 8;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_21();
  uint64_t v23 = v22 - v21;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>>);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_2_3();
  uint64_t v64 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0);
  OUTLINED_FUNCTION_4();
  uint64_t v73 = v27;
  uint64_t v74 = v26;
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_2_3();
  uint64_t v69 = v28;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier>)
      - 8;
  MEMORY[0x1F4188790](v71);
  OUTLINED_FUNCTION_2_3();
  uint64_t v70 = v29;
  *uint64_t v13 = static Alignment.center.getter();
  v13[1] = v30;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>);
  closure #1 in ClarityPreviewView.body.getter(v1, (uint64_t *)((char *)v13 + *(int *)(v31 + 44)));
  uint64_t v32 = static Color.clear.getter();
  uint64_t KeyPath = swift_getKeyPath();
  outlined init with copy of Environment<DynamicTypeSize>.Content((uint64_t)v13, v18, &demangling cache variable for type metadata for ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>);
  uint64_t v34 = (uint64_t *)(v18 + *(int *)(v15 + 44));
  *uint64_t v34 = KeyPath;
  v34[1] = v32;
  outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>);
  uint64_t v35 = v1;
  uint64_t v36 = v1;
  uint64_t v37 = v79;
  outlined init with copy of ClarityPreviewView(v35, v79);
  uint64_t v38 = *(unsigned __int8 *)(v68 + 80);
  v67 += (v38 + 16) & ~v38;
  uint64_t v68 = (v38 + 16) & ~v38;
  uint64_t v39 = v68;
  uint64_t v66 = v38 | 7;
  uint64_t v40 = swift_allocObject();
  outlined init with take of ClarityPreviewView(v37, v40 + v39);
  outlined init with copy of Environment<DynamicTypeSize>.Content(v18, v23, &demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v41 = (uint64_t (**)())(v23 + *(int *)(v20 + 44));
  *uint64_t v41 = partial apply for closure #2 in ClarityPreviewView.body.getter;
  v41[1] = (uint64_t (*)())v40;
  void v41[2] = 0;
  v41[3] = 0;
  outlined destroy of SystemUpdateNotice?(v18, &demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v42 = v64;
  outlined init with copy of Environment<DynamicTypeSize>.Content(v23, v64, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>);
  *(_WORD *)(v42 + *(int *)(v65 + 36)) = 0;
  outlined destroy of SystemUpdateNotice?(v23, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>);
  uint64_t v43 = v36 + *(int *)(v8 + 28);
  uint64_t v44 = *(void **)(v43 + 8);
  id v45 = *(id *)v43;
  id v46 = v44;
  swift_bridgeObjectRetain();
  uint64_t v47 = CNContact.clarityUIDisplayName.getter();
  uint64_t v49 = v48;
  swift_bridgeObjectRelease();

  uint64_t v81 = v47;
  uint64_t v82 = v49;
  Image.init(systemName:)();
  uint64_t v50 = *MEMORY[0x1E4F3EC08];
  uint64_t v51 = type metadata accessor for Image.TemplateRenderingMode();
  OUTLINED_FUNCTION_0();
  uint64_t v53 = v72;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 104))(v72, v50, v51);
  __swift_storeEnumTagSinglePayload(v53, 0, 1, v51);
  uint64_t v54 = Image.renderingMode(_:)();
  swift_release();
  outlined destroy of SystemUpdateNotice?(v53, &demangling cache variable for type metadata for Image.TemplateRenderingMode?);
  uint64_t v80 = v54;
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type String and conformance String();
  View.navigationTitle<A, B>(_:icon:)();
  swift_release();
  swift_bridgeObjectRelease();
  outlined destroy of SystemUpdateNotice?(v42, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>>);
  uint64_t v55 = v79;
  outlined init with copy of ClarityPreviewView(v36, v79);
  uint64_t v56 = swift_allocObject();
  outlined init with take of ClarityPreviewView(v55, v56 + v68);
  static TaskPriority.userInitiated.getter();
  uint64_t v57 = v70;
  uint64_t v58 = (void *)(v70 + *(int *)(v71 + 44));
  type metadata accessor for _TaskModifier();
  OUTLINED_FUNCTION_2_1();
  v59();
  *uint64_t v58 = &async function pointer to partial apply for closure #3 in ClarityPreviewView.body.getter;
  v58[1] = v56;
  OUTLINED_FUNCTION_2_1();
  v60();
  OUTLINED_FUNCTION_26_2();
  v61();
  OUTLINED_FUNCTION_26_2();
  v62();
  return outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v57, v78, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier>);
}

void closure #1 in ClarityPreviewView.body.getter(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  MEMORY[0x1F4188790](v51);
  uint64_t v53 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v52 = (uint64_t)&v47 - v8;
  uint64_t v9 = type metadata accessor for Image.ResizingMode();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ClarityPreviewView();
  uint64_t v14 = v13;
  if (*(unsigned char *)(a1 + *(int *)(v13 + 24) + 16) == 1)
  {
    id v54 = *(id *)(*(void *)(a1 + *(int *)(v13 + 28)) + 16);
    long long v55 = 0u;
    memset(v56, 0, 25);
    id v15 = v54;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>);
    lazy protocol witness table accessor for type PreviewViewRepresentable and conformance PreviewViewRepresentable();
    lazy protocol witness table accessor for type ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    uint64_t v16 = *((void *)&v57 + 1);
    uint64_t v50 = (void *)v57;
    uint64_t v18 = v58;
    uint64_t v17 = v59;
    uint64_t v19 = v60;
    uint64_t v20 = v61;
    int v48 = v62;
  }
  else
  {
    uint64_t v21 = (void *)static Color.clear.getter();
    uint64_t v22 = *(int *)(v14 + 20);
    uint64_t v47 = a1;
    uint64_t v23 = (long long *)(a1 + v22);
    uint64_t v24 = *((void *)v23 + 2);
    uint64_t v25 = *((void *)v23 + 3);
    long long v57 = *v23;
    uint64_t v58 = v24;
    uint64_t v59 = v25;
    uint64_t v26 = ClarityUIContact.fullImage.getter();
    if (v26)
    {
      (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4F3EBF8], v9);
      uint64_t v27 = Image.resizable(capInsets:resizingMode:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v26 = 257;
    }
    else
    {
      uint64_t v27 = 0;
    }
    uint64_t v28 = static Alignment.center.getter();
    id v54 = v21;
    long long v55 = (unint64_t)v27;
    *(void *)&v56[0] = v26;
    *((void *)&v56[0] + 1) = v28;
    *(void *)&v56[1] = v29;
    BYTE8(v56[1]) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>);
    lazy protocol witness table accessor for type PreviewViewRepresentable and conformance PreviewViewRepresentable();
    lazy protocol witness table accessor for type ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    uint64_t v16 = *((void *)&v57 + 1);
    uint64_t v50 = (void *)v57;
    uint64_t v18 = v58;
    uint64_t v17 = v59;
    uint64_t v19 = v60;
    uint64_t v20 = v61;
    int v48 = v62;
    a1 = v47;
  }
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
  closure #1 in closure #1 in ClarityPreviewView.body.getter(a1, (uint64_t)&v5[*(int *)(v30 + 44)]);
  static ClarityUIMetrics.standardSpacing.getter();
  char v31 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v40 = v53;
  outlined init with copy of Environment<DynamicTypeSize>.Content((uint64_t)v5, v53, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
  uint64_t v41 = v40 + *(int *)(v51 + 36);
  *(unsigned char *)uint64_t v41 = v31;
  *(void *)(v41 + 8) = v33;
  *(void *)(v41 + 16) = v35;
  *(void *)(v41 + 24) = v37;
  *(void *)(v41 + 32) = v39;
  *(unsigned char *)(v41 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0;
  outlined destroy of SystemUpdateNotice?((uint64_t)v5, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
  uint64_t v42 = v52;
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v40, v52, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  outlined init with copy of Environment<DynamicTypeSize>.Content(v42, v40, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  uint64_t v43 = v50;
  uint64_t v44 = v49;
  *uint64_t v49 = v50;
  v44[1] = v16;
  v44[2] = v18;
  v44[3] = v17;
  v44[4] = v19;
  v44[5] = v20;
  char v45 = v48;
  *((unsigned char *)v44 + 48) = v48;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>));
  outlined init with copy of Environment<DynamicTypeSize>.Content(v40, (uint64_t)v44 + *(int *)(v46 + 48), &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  outlined copy of _ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>.Storage(v43, v16, v18, v17, v19, v20, v45);
  outlined destroy of SystemUpdateNotice?(v42, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  outlined destroy of SystemUpdateNotice?(v40, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  outlined consume of _ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>.Storage(v43, v16, v18, v17, v19, v20, v45);
}

uint64_t closure #1 in closure #1 in ClarityPreviewView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = type metadata accessor for ClarityPreviewView();
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v29 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Label<Text, Image>>);
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v31 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  uint64_t v8 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v28 - v16;
  outlined init with copy of ClarityPreviewView(a1, (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v18 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v19 = swift_allocObject();
  outlined init with take of ClarityPreviewView((uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  uint64_t v34 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>);
  Button.init(action:label:)();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Label<Text, Image>> and conformance Button<A>, &demangling cache variable for type metadata for Button<Label<Text, Image>>);
  lazy protocol witness table accessor for type ClarityPreviewView.StartCallButtonStyle and conformance ClarityPreviewView.StartCallButtonStyle();
  uint64_t v20 = v31;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v20);
  uint64_t v21 = static Color.green.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = v32;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v10, v32);
  uint64_t v24 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  *uint64_t v24 = KeyPath;
  v24[1] = v21;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v14, (uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  outlined init with copy of Environment<DynamicTypeSize>.Content((uint64_t)v17, (uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v25 = v33;
  outlined init with copy of Environment<DynamicTypeSize>.Content((uint64_t)v14, v33, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v26 = v25
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer))
               + 48);
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  outlined destroy of SystemUpdateNotice?((uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  return outlined destroy of SystemUpdateNotice?((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
}

void closure #1 in closure #1 in closure #1 in ClarityPreviewView.body.getter(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + *(int *)(type metadata accessor for ClarityPreviewView() + 24) + 24);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v1);
  }
  else
  {
    if (one-time initialization token for clarityUI != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    __swift_project_value_buffer(v3, (uint64_t)static Log.clarityUI);
    oschar log = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_1C2F90000, oslog, v4, "Unexpectedly showed preview view for a pending action.", v5, 2u);
      MEMORY[0x1C87760E0](v5, -1, -1);
    }
  }
}

uint64_t closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter()
{
  return Label.init(title:icon:)();
}

void closure #1 in closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_conversationKit);
  v7._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001C37BEE00;
  v3._uint64_t countAndFlagsBits = 0xD000000000000016;
  v4.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v7);

  *(Swift::String *)a1 = v6;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC860];
}

uint64_t closure #2 in closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ClarityPreviewView();
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

void closure #2 in ClarityPreviewView.body.getter(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for ClarityPreviewView() + 20);
  id v2 = *(void **)(v1 + 8);
  Swift::String v3 = *(void **)(v1 + 16);
  Swift::String_optional v4 = *(void **)(v1 + 24);
  v7[0] = *(id *)v1;
  v7[1] = v2;
  void v7[2] = v3;
  v7[3] = v4;
  id v6 = v7[0];
  id v5 = v2;
  swift_bridgeObjectRetain();
  v9.cnContact.super.Class isa = (Class)v7;
  ClarityUICallHistory.markRecentCallsAsRead(for:)(v9);
  swift_bridgeObjectRelease();
}

uint64_t closure #3 in ClarityPreviewView.body.getter(uint64_t a1)
{
  v1[4] = a1;
  type metadata accessor for NavigationPath();
  v1[5] = swift_task_alloc();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<(), Never>>);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<(), Never>>.Iterator);
  v1[9] = v3;
  v1[10] = *(void *)(v3 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = type metadata accessor for MainActor();
  v1[13] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[14] = v5;
  v1[15] = v4;
  return MEMORY[0x1F4188298](closure #3 in ClarityPreviewView.body.getter, v5, v4);
}

uint64_t closure #3 in ClarityPreviewView.body.getter()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InCallServiceDidAppearNotificationHandler()), sel_init);
  v0[16] = v4;
  v0[2] = *(void *)&v4[OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5641InCallServiceDidAppearNotificationHandler_publisher];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  uint64_t v6 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  MEMORY[0x1C8770AF0](v5, v6);
  AsyncPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[17] = static MainActor.shared.getter();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AsyncPublisher<PassthroughSubject<(), Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<(), Never>>.Iterator);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[18] = v7;
  *uint64_t v7 = v0;
  v7[1] = closure #3 in ClarityPreviewView.body.getter;
  return MEMORY[0x1F4187C78](v0 + 20);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v10;

  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v8 = closure #3 in ClarityPreviewView.body.getter;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v7;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v8 = closure #3 in ClarityPreviewView.body.getter;
  }
  return MEMORY[0x1F4188298](v8, v4, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  *(unsigned char *)(v0 + 161) = *(unsigned char *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return MEMORY[0x1F4188298](closure #3 in ClarityPreviewView.body.getter, v1, v2);
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  void *v4;
  uint64_t v5;

  if (*(unsigned char *)(v0 + 161) == 1)
  {
    uint64_t v1 = *(void **)(v0 + 128);
    (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
    MEMORY[0x1C87728E0]();
    NavigationPath.removeLast(_:)(1);
    Binding.wrappedValue.setter();
    *(void *)(v0 + 136) = static MainActor.shared.getter();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AsyncPublisher<PassthroughSubject<(), Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<(), Never>>.Iterator);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v4;
    *uint64_t v4 = v0;
    v4[1] = closure #3 in ClarityPreviewView.body.getter;
    return MEMORY[0x1F4187C78](v0 + 160);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  *(void *)(v0 + 24) = *(void *)(v0 + 152);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  uint64_t v1 = MEMORY[0x1E4FBC248];
  uint64_t v2 = swift_dynamicCast();
  uint64_t v3 = MEMORY[0x1E4FBC278];
  return MEMORY[0x1F41868E8](v2, v1, v3);
}

uint64_t ClarityPreviewView.StartCallButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlatterButtonType();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ButtonStyleConfiguration();
  __n128 v7 = MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 16))((char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v11[1] = static Color.green.getter();
  static Color.white.getter();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F3D350], v2);
  return PlatterButtonStyleView.init(configuration:background:foregroundColor:type:includesPadding:)();
}

id PreviewViewRepresentable.makeUIViewController(context:)(uint64_t a1, void *a2)
{
  type metadata accessor for PreviewViewController();
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  id v4 = a2;
  PreviewViewController.captureSession.setter(a2);
  return v3;
}

void PreviewViewRepresentable.updateUIViewController(_:context:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  PreviewViewController.captureSession.setter(a3);
}

id protocol witness for UIViewControllerRepresentable.makeUIViewController(context:) in conformance PreviewViewRepresentable(uint64_t a1)
{
  return PreviewViewRepresentable.makeUIViewController(context:)(a1, *v1);
}

void protocol witness for UIViewControllerRepresentable.updateUIViewController(_:context:) in conformance PreviewViewRepresentable(uint64_t a1, uint64_t a2)
{
  PreviewViewRepresentable.updateUIViewController(_:context:)(a1, a2, *v2);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance PreviewViewRepresentable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type PreviewViewRepresentable and conformance PreviewViewRepresentable();
  return MEMORY[0x1F40FAB70](a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance PreviewViewRepresentable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type PreviewViewRepresentable and conformance PreviewViewRepresentable();
  return MEMORY[0x1F40FAB28](a1, a2, a3, v6);
}

void protocol witness for View.body.getter in conformance PreviewViewRepresentable()
{
}

uint64_t static PreviewView.layerClass.getter()
{
  return type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCaptureVideoPreviewLayer);
}

uint64_t PreviewView.videoPreviewLayer.getter()
{
  id v1 = objc_msgSend(v0, sel_layer);
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (!result)
  {

    return 0;
  }
  return result;
}

id PreviewView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for PreviewView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id PreviewView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PreviewView();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id PreviewView.__deallocating_deinit()
{
  return PreviewView.__deallocating_deinit((uint64_t (*)(void))type metadata accessor for PreviewView);
}

void PreviewViewController.captureSession.didset()
{
  uint64_t v1 = v0;
  id v2 = objc_retain(*(id *)(v0
                         + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView));
  id v3 = (id)PreviewView.videoPreviewLayer.getter();

  if (v3)
  {
    objc_msgSend(v3, sel_setSession_, *(void *)(v1+ OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_captureSession));
    objc_msgSend(v3, sel_setVideoGravity_, *MEMORY[0x1E4F15AF8]);
  }
}

void PreviewViewController.captureSession.setter(void *a1)
{
  id v2 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_captureSession);
  *(void *)(v1
            + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_captureSession) = a1;
  id v3 = a1;

  PreviewViewController.captureSession.didset();
}

id PreviewViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v4 = result;
  objc_msgSend(result, sel_addSubview_, *(void *)&v1[v2]);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C3769580;
  id v6 = objc_msgSend(*(id *)&v1[v2], sel_widthAnchor);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __n128 v7 = result;
  id v8 = objc_msgSend(result, sel_widthAnchor);

  id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
  *(void *)(v5 + 32) = v9;
  id v10 = objc_msgSend(*(id *)&v1[v2], sel_heightAnchor);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = result;
  id v12 = objc_msgSend(result, sel_heightAnchor);

  id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
  *(void *)(v5 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v13;
  id v14 = objc_msgSend(*(id *)&v1[v2], sel_centerXAnchor);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = result;
  id v16 = objc_msgSend(result, sel_centerXAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  *(void *)(v5 + 48) = v17;
  id v18 = objc_msgSend(*(id *)&v1[v2], sel_centerYAnchor);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v19 = result;
  uint64_t v20 = self;
  id v21 = objc_msgSend(v19, sel_centerYAnchor);

  id v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v21);
  *(void *)(v5 + 56) = v22;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_activateConstraints_, isa);

  uint64_t v24 = *(void **)&v1[v2];
  return objc_msgSend(v24, sel_setAccessibilityIgnoresInvertColors_, 1);
}

void PreviewViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for PreviewViewController();
  objc_msgSendSuper2(&v7, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  PreviewViewController.updatePreviewRotationAngle()();
}

void PreviewViewController.updatePreviewRotationAngle()()
{
  id v1 = objc_msgSend(self, sel_sharedApplication);
  id v2 = objc_msgSend(v1, sel_connectedScenes);

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIScene);
  lazy protocol witness table accessor for type UIScene and conformance NSObject();
  static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Collection.first.getter();
  id v4 = v3;
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_10;
  }
  self;
  uint64_t v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5)
  {

LABEL_10:
    id v17 = 0;
    goto LABEL_11;
  }
  id v17 = v5;
  id v6 = objc_msgSend(v5, sel_interfaceOrientation);
  if (v6 != (id)3)
  {
    if (v6 == (id)2)
    {
      id v14 = objc_retain(*(id *)(v0
                              + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView));
      uint64_t v15 = (void *)PreviewView.videoPreviewLayer.getter();

      if (v15)
      {
        id v9 = objc_msgSend(v15, sel_connection);

        if (v9)
        {
          objc_msgSend(v9, sel_setVideoRotationAngle_, 270.0);
          goto LABEL_20;
        }
      }
      goto LABEL_26;
    }
    if (v6 == (id)1)
    {
      id v7 = objc_retain(*(id *)(v0
                             + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView));
      id v8 = (void *)PreviewView.videoPreviewLayer.getter();

      if (v8)
      {
        id v9 = objc_msgSend(v8, sel_connection);

        if (v9)
        {
          objc_msgSend(v9, sel_setVideoRotationAngle_, 90.0);
LABEL_20:
          id v17 = v4;
          goto LABEL_21;
        }
      }
      goto LABEL_26;
    }
LABEL_11:
    id v10 = objc_retain(*(id *)(v0
                            + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView));
    uint64_t v11 = (void *)PreviewView.videoPreviewLayer.getter();

    if (!v11) {
      goto LABEL_22;
    }
    id v9 = objc_msgSend(v11, sel_connection);

    if (!v9) {
      goto LABEL_22;
    }
    objc_msgSend(v9, sel_setVideoRotationAngle_, 0.0);
LABEL_21:

LABEL_22:
    id v16 = v17;
    goto LABEL_23;
  }
  id v12 = objc_retain(*(id *)(v0
                          + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView));
  id v13 = (void *)PreviewView.videoPreviewLayer.getter();

  if (v13)
  {
    id v9 = objc_msgSend(v13, sel_connection);

    if (v9)
    {
      objc_msgSend(v9, sel_setVideoRotationAngle_, 180.0);
      goto LABEL_20;
    }
  }
LABEL_26:
  id v16 = v4;
LABEL_23:
}

id PreviewViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView;
  type metadata accessor for PreviewView();
  id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v9 = v3;
  *(void *)&v3[v7] = objc_msgSend(v8, sel_init);
  *(void *)&v9[OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_captureSession] = 0;

  if (a2)
  {
    id v10 = (void *)MEMORY[0x1C87730B0](a1, a2);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = 0;
  }
  v13.receiver = v9;
  v13.super_class = (Class)type metadata accessor for PreviewViewController();
  id v11 = objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, v10, a3);

  return v11;
}

id PreviewViewController.init(coder:)(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView;
  type metadata accessor for PreviewView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_captureSession] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for PreviewViewController();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);

  return v6;
}

id PreviewViewController.__deallocating_deinit()
{
  return PreviewView.__deallocating_deinit((uint64_t (*)(void))type metadata accessor for PreviewViewController);
}

id PreviewView.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t ClarityCameraModel.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ClarityCameraModel.init()();
  return v0;
}

uint64_t static ClarityCameraModel.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return swift_retain();
}

id ClarityCameraModel.captureSession.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t key path setter for ClarityCameraModel.videoDeviceInput : ClarityCameraModel(id *a1, uint64_t a2)
{
  id v2 = *a1;
  objc_super v3 = *(uint64_t (**)(id))(**(void **)a2 + 104);
  id v4 = *a1;
  return v3(v2);
}

void *ClarityCameraModel.videoDeviceInput.getter()
{
  swift_beginAccess();
  id v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void ClarityCameraModel.videoDeviceInput.setter(uint64_t a1)
{
  swift_beginAccess();
  objc_super v3 = *(void **)(v1 + 24);
  *(void *)(v1 + 24) = a1;
}

uint64_t (*ClarityCameraModel.videoDeviceInput.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t ClarityCameraModel.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v1 - 8);
  OUTLINED_FUNCTION_21();
  uint64_t v4 = v3 - v2;
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F16498]), sel_init);
  *(void *)(v0 + 24) = 0;
  static TaskPriority.background.getter();
  uint64_t v5 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v5);
  id v6 = (void *)swift_allocObject();
  _OWORD v6[2] = 0;
  void v6[3] = 0;
  void v6[4] = v0;
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  return v0;
}

uint64_t closure #1 in ClarityCameraModel.init()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x1F4188298](closure #1 in ClarityCameraModel.init(), 0, 0);
}

uint64_t closure #1 in ClarityCameraModel.init()()
{
  OUTLINED_FUNCTION_17_2();
  ClarityCameraModel.setUpCaptureSession()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void ClarityCameraModel.setUpCaptureSession()()
{
  uint64_t v1 = v0;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCaptureDeviceDiscoverySession);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<AVCaptureDeviceType>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C376BA10;
  uint64_t v3 = (void *)*MEMORY[0x1E4F15820];
  uint64_t v4 = (void *)*MEMORY[0x1E4F157E8];
  uint64_t v5 = (void **)MEMORY[0x1E4F15830];
  *(void *)(v2 + 32) = *MEMORY[0x1E4F15820];
  *(void *)(v2 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v4;
  id v6 = *v5;
  *(void *)(v2 + 48) = *v5;
  uint64_t v7 = (void *)*MEMORY[0x1E4F15C18];
  id v8 = v3;
  id v9 = v4;
  id v10 = v6;
  id v11 = v7;
  uint64_t v12 = OUTLINED_FUNCTION_34_9();
  id v14 = @nonobjc AVCaptureDeviceDiscoverySession.__allocating_init(deviceTypes:mediaType:position:)(v12, v13, 2);
  id v15 = objc_msgSend(v14, sel_devices);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for AVCaptureDevice);
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    if (one-time initialization token for clarityUI != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    __swift_project_value_buffer(v32, (uint64_t)static Log.clarityUI);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v33))
    {
      uint64_t v34 = (_WORD *)swift_slowAlloc();
      *uint64_t v34 = 0;
      OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v35, v36, "Unable to find video device to start video preview");
      MEMORY[0x1C87760E0](v34, -1, -1);
    }
    goto LABEL_18;
  }
  if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_14;
  }
LABEL_3:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v16 & 0xC000000000000001) == 0, v16);
  if ((v16 & 0xC000000000000001) != 0) {
    id v17 = (id)MEMORY[0x1C87744F0](0, v16);
  }
  else {
    id v17 = *(id *)(v16 + 32);
  }
  id v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)v1[2];
  objc_msgSend(v19, sel_beginConfiguration);
  id v20 = objc_allocWithZone(MEMORY[0x1E4F16450]);
  id v37 = v18;
  id v21 = @nonobjc AVCaptureDeviceInput.init(device:)(v37);
  if (objc_msgSend(v19, sel_canAddInput_, v21))
  {
    id v22 = *(void (**)(id))(*v1 + 104);
    id v23 = v21;
    v22(v21);
    objc_msgSend(v19, sel_addInput_, v23);
    objc_msgSend(v19, sel_setSessionPreset_, *MEMORY[0x1E4F159C0]);
    objc_msgSend(v19, sel_commitConfiguration);
    objc_msgSend(v19, sel_startRunning);

LABEL_12:
    uint64_t v30 = v37;
    goto LABEL_19;
  }
  if (one-time initialization token for clarityUI != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  __swift_project_value_buffer(v24, (uint64_t)static Log.clarityUI);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v25, v26))
  {

    goto LABEL_12;
  }
  uint64_t v27 = (_WORD *)swift_slowAlloc();
  *uint64_t v27 = 0;
  OUTLINED_FUNCTION_0_2(&dword_1C2F90000, v28, v29, "Unable to correctly add video device input to start video preview");
  MEMORY[0x1C87760E0](v27, -1, -1);

LABEL_18:
  uint64_t v30 = v14;
LABEL_19:
}

id @nonobjc AVCaptureDeviceDiscoverySession.__allocating_init(deviceTypes:mediaType:position:)(uint64_t a1, void *a2, uint64_t a3)
{
  type metadata accessor for AVCaptureDeviceType(0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_discoverySessionWithDeviceTypes_mediaType_position_, isa, a2, a3);

  return v6;
}

uint64_t ClarityCameraModel.deinit()
{
  return v0;
}

uint64_t ClarityCameraModel.__deallocating_deinit()
{
  ClarityCameraModel.deinit();
  return swift_deallocClassInstance();
}

char *InCallServiceDidAppearNotificationHandler.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5641InCallServiceDidAppearNotificationHandler_publisher;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  swift_allocObject();
  uint64_t v2 = v0;
  *(void *)&v0[v1] = PassthroughSubject.init()();
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5641InCallServiceDidAppearNotificationHandler_notificationName;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = MEMORY[0x1C87730B0](v4);
  swift_bridgeObjectRelease();
  *(void *)&v2[v3] = v5;

  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for InCallServiceDidAppearNotificationHandler();
  id v6 = (char *)objc_msgSendSuper2(&v10, sel_init);
  uint64_t v7 = CFNotificationCenterGetDarwinNotifyCenter();
  id v8 = (__CFString *)*(id *)&v6[OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5641InCallServiceDidAppearNotificationHandler_notificationName];
  CFNotificationCenterAddObserver(v7, v6, (CFNotificationCallback)@objc closure #1 in InCallServiceDidAppearNotificationHandler.init(), v8, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  return v6;
}

void closure #1 in InCallServiceDidAppearNotificationHandler.init()(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    type metadata accessor for InCallServiceDidAppearNotificationHandler();
    swift_unknownObjectRetain();
    if (swift_dynamicCastClass())
    {
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
      Subject<>.send()();
      swift_unknownObjectRelease();
      swift_release();
      return;
    }
    swift_unknownObjectRelease();
  }
  if (one-time initialization token for clarityUI != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Log.clarityUI);
  oschar log = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1C2F90000, oslog, v3, "Unexpected type for observer in InCallServiceDidAppearNotificationHandler.", v4, 2u);
    MEMORY[0x1C87760E0](v4, -1, -1);
  }
}

void @objc closure #1 in InCallServiceDidAppearNotificationHandler.init()(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v9 = a1;
  id v10 = a3;
  id v11 = a5;
  closure #1 in InCallServiceDidAppearNotificationHandler.init()((uint64_t)a1, a2);
}

id InCallServiceDidAppearNotificationHandler.__deallocating_deinit()
{
  uint64_t v1 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver(v1, v0, *(CFNotificationName *)&v0[OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5641InCallServiceDidAppearNotificationHandler_notificationName], 0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for InCallServiceDidAppearNotificationHandler();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t ClarityUIPreviewNavigationDestination.contact.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)v1;
  objc_super v3 = *(void **)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  *a1 = *(void *)v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  id v6 = v2;
  id v7 = v3;
  return swift_bridgeObjectRetain();
}

__n128 ClarityUIPreviewNavigationDestination.contact.setter(__n128 *a1)
{
  unint64_t v3 = a1[1].n128_u64[0];
  unint64_t v4 = a1[1].n128_u64[1];
  uint64_t v5 = *(void **)v1;
  id v6 = *(void **)(v1 + 8);
  swift_bridgeObjectRelease();

  __n128 result = *a1;
  *(__n128 *)uint64_t v1 = *a1;
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v4;
  return result;
}

uint64_t (*ClarityUIPreviewNavigationDestination.contact.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIPreviewNavigationDestination.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  swift_bridgeObjectRetain();
  uint64_t result = _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  return result;
}

__n128 ClarityUIPreviewNavigationDestination.action.setter(uint64_t a1)
{
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(void *)(v1 + 56));
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v4;
  *(void *)(v1 + 64) = *(void *)(a1 + 32);
  return result;
}

uint64_t (*ClarityUIPreviewNavigationDestination.action.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIPreviewNavigationDestination.hash(into:)()
{
  uint64_t v1 = *(void **)(v0 + 8);
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  id v4 = *(id *)v0;
  id v5 = v1;
  swift_bridgeObjectRetain_n();
  String.hash(into:)();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  String.hash(into:)();
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3 == 0);
  swift_bridgeObjectRelease();
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v3);
}

BOOL static ClarityUIPreviewNavigationDestination.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  long long v6 = *(_OWORD *)(a1 + 48);
  v15[0] = *(_OWORD *)(a1 + 32);
  v15[1] = v6;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  long long v9 = *(_OWORD *)(a2 + 48);
  v17[0] = *(_OWORD *)(a2 + 32);
  v17[1] = v9;
  uint64_t v10 = *(void *)(a2 + 64);
  BOOL v11 = v4 == v7 && v5 == v8;
  uint64_t v18 = v10;
  if (v11) {
    return static ClarityUIOutgoingCallAction.== infix(_:_:)((uint64_t)v15, (uint64_t)v17);
  }
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  BOOL v13 = 0;
  if (v12) {
    return static ClarityUIOutgoingCallAction.== infix(_:_:)((uint64_t)v15, (uint64_t)v17);
  }
  return v13;
}

Swift::Int ClarityUIPreviewNavigationDestination.hashValue.getter()
{
  uint64_t v1 = *(void **)v0;
  Swift::UInt v2 = *(void **)(v0 + 8);
  Swift::UInt v3 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  Hasher.init(_seed:)();
  id v5 = v1;
  id v6 = v2;
  swift_bridgeObjectRetain_n();
  String.hash(into:)();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain();
  uint64_t v7 = OUTLINED_FUNCTION_34_9();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v7);
  String.hash(into:)();
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4 == 0);
  swift_bridgeObjectRelease();
  uint64_t v8 = OUTLINED_FUNCTION_34_9();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ClarityUIPreviewNavigationDestination()
{
  return Hasher._finalize()();
}

id @nonobjc AVCaptureDeviceInput.init(device:)(void *a1)
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  v7[0] = 0;
  id v3 = objc_msgSend(v1, sel_initWithDevice_error_, a1, v7);
  if (v3)
  {
    id v4 = v7[0];
  }
  else
  {
    id v5 = v7[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return v3;
}

uint64_t outlined init with copy of ClarityPreviewView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClarityPreviewView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of ClarityPreviewView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClarityPreviewView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #2 in ClarityPreviewView.body.getter()
{
  return partial apply for closure #2 in ClarityPreviewView.body.getter((uint64_t (*)(uint64_t))closure #2 in ClarityPreviewView.body.getter);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ClipEffect<Rectangle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Rectangle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #3 in ClarityPreviewView.body.getter()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v2 = type metadata accessor for ClarityPreviewView();
  OUTLINED_FUNCTION_1_1(v2);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = partial apply for closure #2 in closure #1 in RecentsListViewController.blockUnknownAction(of:);
  return closure #3 in ClarityPreviewView.body.getter(v4);
}

uint64_t sub_1C36E185C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ClarityCameraModel.init()(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = partial apply for closure #1 in closure #1 in RecentsListViewController.deleteAction(of:);
  return closure #1 in ClarityCameraModel.init()(a1, v4, v5, v6);
}

uint64_t associated type witness table accessor for View.Body : View in ClarityPreviewView()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C36E19BC()
{
}

uint64_t sub_1C36E19E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 96))();
  *a2 = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ClarityPreviewView(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
                + 32);
    uint64_t v9 = (char *)v7 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[5];
    uint64_t v13 = a3[6];
    id v14 = (void *)((char *)v7 + v12);
    id v15 = (char *)a2 + v12;
    uint64_t v16 = *(void **)v15;
    id v17 = (void *)*((void *)v15 + 1);
    *id v14 = *(void *)v15;
    v14[1] = v17;
    uint64_t v18 = *((void *)v15 + 3);
    v14[2] = *((void *)v15 + 2);
    v14[3] = v18;
    uint64_t v19 = (char *)v7 + v13;
    id v20 = (char *)a2 + v13;
    uint64_t v21 = *(void *)((char *)a2 + v13 + 8);
    *(void *)uint64_t v19 = *(void *)((char *)a2 + v13);
    *((void *)v19 + 1) = v21;
    v19[16] = *((unsigned char *)a2 + v13 + 16);
    id v23 = (void *)((char *)a2 + v13 + 24);
    uint64_t v22 = *v23;
    id v24 = v16;
    id v25 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22)
    {
      uint64_t v26 = *((void *)v20 + 4);
      *((void *)v19 + 3) = v22;
      *((void *)v19 + 4) = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v19 + 24) = *(_OWORD *)v23;
    }
    uint64_t v27 = a3[8];
    *(void *)((char *)v7 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *(void *)((char *)v7 + v27) = *(void *)((char *)a2 + v27);
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for ClarityPreviewView(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  uint64_t v5 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (id *)(a1 + *(int *)(a2 + 20));

  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + 24)) {
    swift_release();
  }
  swift_release();
  return swift_release();
}

void *initializeWithCopy for ClarityPreviewView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v11);
  id v14 = (char *)a2 + v11;
  id v15 = *(void **)v14;
  uint64_t v16 = (void *)*((void *)v14 + 1);
  *uint64_t v13 = *(void *)v14;
  v13[1] = v16;
  uint64_t v17 = *((void *)v14 + 3);
  void v13[2] = *((void *)v14 + 2);
  v13[3] = v17;
  uint64_t v18 = (char *)a1 + v12;
  uint64_t v19 = (char *)a2 + v12;
  uint64_t v20 = *(void *)((char *)a2 + v12 + 8);
  *(void *)uint64_t v18 = *(void *)((char *)a2 + v12);
  *((void *)v18 + 1) = v20;
  v18[16] = *((unsigned char *)a2 + v12 + 16);
  uint64_t v22 = (void *)((char *)a2 + v12 + 24);
  uint64_t v21 = *v22;
  id v23 = v15;
  id v24 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21)
  {
    uint64_t v25 = *((void *)v19 + 4);
    *((void *)v18 + 3) = v21;
    *((void *)v18 + 4) = v25;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v18 + 24) = *(_OWORD *)v22;
  }
  uint64_t v26 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ClarityPreviewView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = *(void **)((char *)a2 + v10);
  id v14 = *(void **)v11;
  *(void *)uint64_t v11 = v13;
  id v15 = v13;

  uint64_t v16 = (void *)v12[1];
  uint64_t v17 = (void *)*((void *)v11 + 1);
  *((void *)v11 + 1) = v16;
  id v18 = v16;

  *((void *)v11 + 2) = v12[2];
  *((void *)v11 + 3) = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[6];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(void *)uint64_t v20 = *(void *)((char *)a2 + v19);
  *((void *)v20 + 1) = *(void *)((char *)a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[16] = v21[16];
  uint64_t v22 = *((void *)v21 + 3);
  if (!*((void *)v20 + 3))
  {
    if (v22)
    {
      uint64_t v24 = *((void *)v21 + 4);
      *((void *)v20 + 3) = v22;
      *((void *)v20 + 4) = v24;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(v20 + 24) = *(_OWORD *)(v21 + 24);
    goto LABEL_8;
  }
  if (!v22)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v23 = *((void *)v21 + 4);
  *((void *)v20 + 3) = v22;
  *((void *)v20 + 4) = v23;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for ClarityPreviewView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  long long v13 = *(_OWORD *)((char *)a2 + v11);
  long long v14 = *(_OWORD *)((char *)a2 + v11 + 16);
  id v15 = (_OWORD *)((char *)a1 + v11);
  *id v15 = v13;
  v15[1] = v14;
  uint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((void *)v16 + 4) = *((void *)v17 + 4);
  uint64_t v19 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  return a1;
}

void *assignWithTake for ClarityPreviewView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  long long v13 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(void *)((char *)a2 + v10);

  long long v14 = (void *)v11[1];
  v11[1] = v12[1];

  uint64_t v15 = v12[3];
  void v11[2] = v12[2];
  v11[3] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  long long v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)((char *)a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)((char *)a2 + v16);
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v17[16] = v18[16];
  uint64_t v20 = *((void *)v18 + 3);
  if (!*((void *)v17 + 3))
  {
    if (v20)
    {
      uint64_t v22 = *((void *)v18 + 4);
      *((void *)v17 + 3) = v20;
      *((void *)v17 + 4) = v22;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(v17 + 24) = *(_OWORD *)(v18 + 24);
    goto LABEL_8;
  }
  if (!v20)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v21 = *((void *)v18 + 4);
  *((void *)v17 + 3) = v20;
  *((void *)v17 + 4) = v21;
  swift_release();
LABEL_8:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_release();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityPreviewView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C36E2258);
}

uint64_t sub_1C36E2258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ClarityPreviewView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C36E22FC);
}

void sub_1C36E22FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

void type metadata completion function for ClarityPreviewView()
{
  type metadata accessor for Binding<NavigationPath>();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for PreviewView()
{
  return self;
}

uint64_t type metadata accessor for PreviewViewController()
{
  return self;
}

uint64_t type metadata accessor for ClarityCameraModel()
{
  return self;
}

uint64_t method lookup function for ClarityCameraModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClarityCameraModel);
}

uint64_t dispatch thunk of ClarityCameraModel.videoDeviceInput.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ClarityCameraModel.videoDeviceInput.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ClarityCameraModel.videoDeviceInput.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ClarityCameraModel.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t type metadata accessor for InCallServiceDidAppearNotificationHandler()
{
  return self;
}

ValueMetadata *type metadata accessor for ClarityUIPreviewNavigationDestination()
{
  return &type metadata for ClarityUIPreviewNavigationDestination;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type String and conformance String();
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type _TaskModifier and conformance _TaskModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _TaskModifier and conformance _TaskModifier()
{
  unint64_t result = lazy protocol witness table cache variable for type _TaskModifier and conformance _TaskModifier;
  if (!lazy protocol witness table cache variable for type _TaskModifier and conformance _TaskModifier)
  {
    type metadata accessor for _TaskModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _TaskModifier and conformance _TaskModifier);
  }
  return result;
}

void *type metadata accessor for ClarityPreviewView.StartCallButtonStyle()
{
  return &unk_1F1EBB2D0;
}

void *type metadata accessor for PreviewViewRepresentable()
{
  return &unk_1F1EBB2F0;
}

unint64_t lazy protocol witness table accessor for type PreviewViewRepresentable and conformance PreviewViewRepresentable()
{
  unint64_t result = lazy protocol witness table cache variable for type PreviewViewRepresentable and conformance PreviewViewRepresentable;
  if (!lazy protocol witness table cache variable for type PreviewViewRepresentable and conformance PreviewViewRepresentable)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PreviewViewRepresentable and conformance PreviewViewRepresentable);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PreviewViewRepresentable and conformance PreviewViewRepresentable;
  if (!lazy protocol witness table cache variable for type PreviewViewRepresentable and conformance PreviewViewRepresentable)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PreviewViewRepresentable and conformance PreviewViewRepresentable);
  }
  return result;
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in ClarityPreviewView.StartCallButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

id outlined copy of _ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>.Storage(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    swift_retain();
    return (id)swift_retain();
  }
  else
  {
    return a1;
  }
}

void outlined consume of _ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>.Storage(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    swift_release();
    swift_release();
  }
  else
  {
  }
}

uint64_t objectdestroyTm_21()
{
  uint64_t v1 = type metadata accessor for ClarityPreviewView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  type metadata accessor for NavigationPath();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  uint64_t v4 = (id *)(v2 + *(int *)(v1 + 20));

  swift_bridgeObjectRelease();
  uint64_t v5 = v2 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + 24)) {
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ClarityPreviewView.body.getter()
{
  return partial apply for closure #2 in ClarityPreviewView.body.getter((uint64_t (*)(uint64_t))closure #1 in closure #1 in closure #1 in ClarityPreviewView.body.getter);
}

uint64_t partial apply for closure #2 in ClarityPreviewView.body.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for ClarityPreviewView();
  OUTLINED_FUNCTION_1_1(v2);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a1(v4);
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter()
{
  return closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter();
}

unint64_t lazy protocol witness table accessor for type ClarityPreviewView.StartCallButtonStyle and conformance ClarityPreviewView.StartCallButtonStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type ClarityPreviewView.StartCallButtonStyle and conformance ClarityPreviewView.StartCallButtonStyle;
  if (!lazy protocol witness table cache variable for type ClarityPreviewView.StartCallButtonStyle and conformance ClarityPreviewView.StartCallButtonStyle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityPreviewView.StartCallButtonStyle and conformance ClarityPreviewView.StartCallButtonStyle);
  }
  return result;
}

uint64_t partial apply for closure #2 in closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  return closure #2 in closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter(a1);
}

uint64_t sub_1C36E2AE4()
{
  return lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type PlatterButtonStyleView<Color> and conformance PlatterButtonStyleView<A>, &demangling cache variable for type metadata for PlatterButtonStyleView<Color>);
}

uint64_t == infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  return specialized == infix(_:_:)(a1, a2, a3);
}

void *specialized Sequence.first(where:)(unint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v4 = 0;
      uint64_t v21 = v2;
      unint64_t v22 = v2 & 0xC000000000000001;
      uint64_t v20 = v2 + 32;
      do
      {
        if (v22) {
          id v5 = (id)MEMORY[0x1C87744F0](v4, v2);
        }
        else {
          id v5 = *(id *)(v20 + 8 * v4);
        }
        uint64_t v6 = v5;
        if (__OFADD__(v4++, 1))
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        id v8 = objc_msgSend(v5, sel_calls);
        uint64_t v2 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
        unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v9 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
          if (!v10) {
            goto LABEL_21;
          }
        }
        else
        {
          uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v10) {
            goto LABEL_21;
          }
        }
        if ((v9 & 0xC000000000000001) != 0) {
          id v11 = (id)MEMORY[0x1C87744F0](0, v9);
        }
        else {
          id v11 = *(id *)(v9 + 32);
        }
        uint64_t v12 = v11;
        char v13 = static NSObject.== infix(_:_:)();

        if (v13)
        {
LABEL_26:
          swift_bridgeObjectRelease_n();

          swift_bridgeObjectRelease();
          return v6;
        }
        if (v10 != 1)
        {
          uint64_t v14 = 5;
          while (1)
          {
            id v15 = (v9 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x1C87744F0](v14 - 4, v9)
                : *(id *)(v9 + 8 * v14);
            uint64_t v16 = v15;
            uint64_t v17 = v14 - 3;
            if (__OFADD__(v14 - 4, 1)) {
              break;
            }
            char v18 = static NSObject.== infix(_:_:)();

            if (v18) {
              goto LABEL_26;
            }
            ++v14;
            if (v17 == v10) {
              goto LABEL_21;
            }
          }
          __break(1u);
          goto LABEL_28;
        }
LABEL_21:
        swift_bridgeObjectRelease_n();

        uint64_t v2 = v21;
      }
      while (v4 != v3);
    }
  }

  swift_bridgeObjectRelease();
  return 0;
}

void *TUCall.associatedCallGroup(in:)(void *a1)
{
  id v2 = objc_msgSend(a1, sel_currentCallGroups);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v4 = specialized Sequence.first(where:)(v3, v1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t TUCall.cnk_isAudio.getter()
{
  if (!objc_msgSend(v0, sel_isVideo)) {
    return objc_msgSend(v0, sel_isVideo) ^ 1;
  }
  if (!objc_msgSend(v0, sel_isConversation)) {
    return objc_msgSend(v0, sel_isVideo) ^ 1;
  }
  id v1 = objc_msgSend(v0, sel_callCenter);
  id v2 = objc_msgSend(v1, sel_activeConversationForCall_, v0);

  if (!v2) {
    return objc_msgSend(v0, sel_isVideo) ^ 1;
  }
  id v3 = objc_msgSend(v2, sel_resolvedAudioVideoMode);

  return v3 == (id)1;
}

void TUCall.cnk_disconnect(reason:)(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_callCenter);
  objc_msgSend(v3, sel_disconnectCall_withReason_, v1, a1);
}

Swift::Void __swiftcall TUCall.cnk_answerOrJoin()()
{
  id v1 = objc_msgSend(v0, sel_callCenter);
  objc_msgSend(v1, sel_answerOrJoinCall_, v0);
}

id TUCall.cnk_activeConversation.getter()
{
  id v1 = objc_msgSend(v0, sel_callCenter);
  id v2 = objc_msgSend(v1, sel_activeConversationForCall_, v0);

  return v2;
}

id TUCall.cnk_contactStoreConfiguration.getter()
{
  id v1 = objc_msgSend(self, sel_tu_contactStoreConfigurationForCall_, v0);
  return v1;
}

uint64_t TUCall.cnk_supportsAVLessConversations.getter()
{
  return 0;
}

uint64_t TUCall.cnk_supportsVideoUpgrade.getter()
{
  return objc_msgSend(v0, sel_isVideo) ^ 1;
}

uint64_t TUCall.cnk_eligibleForRedial.getter()
{
  id v1 = objc_msgSend(v0, sel_handle);
  if (v1)
  {
    id v2 = v1;
    id v3 = objc_msgSend(v1, sel_value);
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;

    swift_bridgeObjectRelease();
    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v7)
    {
      specialized Set.init(_nonEmptyArrayLiteral:)();
      uint64_t v9 = v8;
      if ((objc_msgSend(v0, sel_service) == 3 || objc_msgSend(v0, sel_service) == 2)
        && (id v10 = objc_msgSend(v0, sel_remoteParticipantHandles),
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle), lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle), v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(), v10, uint64_t v12 = specialized Set.count.getter(v11), swift_bridgeObjectRelease(), v12 == 1)&& objc_msgSend(v0, sel_status) == 6)
      {
        specialized Set.contains(_:)((Swift::UInt32)objc_msgSend(v0, sel_disconnectedReason), v9);
        char v14 = v13;
      }
      else
      {
        char v14 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = 0;
    }
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

id TUCall.cnk_dialRequestForRedial.getter()
{
  id v1 = objc_msgSend(v0, sel_dialRequestForRedial);
  return v1;
}

BOOL TUCall.isMergedWithAnotherCall.getter()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = TUCall.associatedCallGroup(in:)(v0);

  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_calls);

    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4 > 1;
}

uint64_t TUCall.cnk_everConnected.getter()
{
  id v1 = objc_msgSend(v0, sel_dateConnected);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1)
  {
    uint64_t v5 = type metadata accessor for Date();
    uint64_t v6 = *(void *)(v5 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v4, v8, v5);
    uint64_t v9 = 1;
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v5);
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) != 1) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for Date();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v10);
  }
  uint64_t v9 = 0;
LABEL_6:
  outlined destroy of Date?((uint64_t)v4);
  return v9;
}

id @nonobjc TUCall.setRemoteVideoPresentationState(_:)(uint64_t a1)
{
  return objc_msgSend(v1, sel_setRemoteVideoPresentationState_, a1);
}

id @nonobjc TUCall.setScreenShareAttributes(_:)(uint64_t a1)
{
  return objc_msgSend(v1, sel_setScreenShareAttributes_, a1);
}

id @nonobjc TUCall.setSharingScreen(_:attributes:)(char a1, uint64_t a2)
{
  return objc_msgSend(v2, sel_setSharingScreen_attributes_, a1 & 1, a2);
}

uint64_t protocol witness for Call.callUUID.getter in conformance TUCall()
{
  return @nonobjc TUCall.callUUID.getter((SEL *)&selRef_callUUID);
}

uint64_t protocol witness for Call.callGroupUUID.getter in conformance TUCall@<X0>(uint64_t a1@<X8>)
{
  return @nonobjc TUCall.callGroupUUID.getter((SEL *)&selRef_callGroupUUID, MEMORY[0x1F418BAE8], MEMORY[0x1F418BCB8], a1);
}

uint64_t protocol witness for Call.displayName.getter in conformance TUCall()
{
  return @nonobjc TUCall.callUUID.getter((SEL *)&selRef_displayName);
}

id @nonobjc TUCall.handle.getter()
{
  id v1 = objc_msgSend(v0, sel_handle);
  return v1;
}

uint64_t protocol witness for Call.imageURL.getter in conformance TUCall@<X0>(uint64_t a1@<X8>)
{
  return @nonobjc TUCall.callGroupUUID.getter((SEL *)&selRef_imageURL, MEMORY[0x1F418B818], MEMORY[0x1F418B830], a1);
}

uint64_t @nonobjc TUCall.callGroupUUID.getter@<X0>(SEL *a1@<X0>, void (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  id v8 = [v4 *a1];
  if (v8)
  {
    uint64_t v9 = v8;
    a2();

    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 1;
  }
  uint64_t v11 = a3(0);
  return __swift_storeEnumTagSinglePayload(a4, v10, 1, v11);
}

id @nonobjc TUCall.isActive.getter()
{
  return objc_msgSend(v0, sel_isActive);
}

id @nonobjc TUCall.isConnected.getter()
{
  return objc_msgSend(v0, sel_isConnected);
}

id @nonobjc TUCall.isConnecting.getter()
{
  return objc_msgSend(v0, sel_isConnecting);
}

id @nonobjc TUCall.isConversation.getter()
{
  return objc_msgSend(v0, sel_isConversation);
}

id @nonobjc TUCall.isOutgoing.getter()
{
  return objc_msgSend(v0, sel_isOutgoing);
}

id @nonobjc TUCall.isScreening.getter()
{
  return objc_msgSend(v0, sel_isScreening);
}

id @nonobjc TUCall.isTTY.getter()
{
  return objc_msgSend(v0, sel_isTTY);
}

id @nonobjc TUCall.isRTT.getter()
{
  return objc_msgSend(v0, sel_isRTT);
}

id @nonobjc TUCall.provider.getter()
{
  id v1 = objc_msgSend(v0, sel_provider);
  return v1;
}

uint64_t @nonobjc TUCall.remoteParticipantHandles.getter()
{
  id v1 = objc_msgSend(v0, sel_remoteParticipantHandles);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

id @nonobjc TUCall.screenShareAttributes.getter()
{
  id v1 = objc_msgSend(v0, sel_screenShareAttributes);
  return v1;
}

id @nonobjc TUCall.status.getter()
{
  return objc_msgSend(v0, sel_status);
}

uint64_t protocol witness for Call.uniqueProxyIdentifier.getter in conformance TUCall()
{
  return @nonobjc TUCall.callUUID.getter((SEL *)&selRef_uniqueProxyIdentifier);
}

uint64_t @nonobjc TUCall.callUUID.getter(SEL *a1)
{
  id v2 = [v1 *a1];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void @nonobjc TUCall.uniqueProxyIdentifierUUID.getter()
{
  id v1 = objc_msgSend(v0, sel_uniqueProxyIdentifierUUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

id @nonobjc TUCall.wantsHoldMusic.getter()
{
  return objc_msgSend(v0, sel_wantsHoldMusic);
}

id @nonobjc TUCall.isPTT.getter()
{
  return objc_msgSend(v0, sel_isPTT);
}

id @nonobjc TUCall.serviceStatus.getter()
{
  return objc_msgSend(v0, sel_serviceStatus);
}

id @nonobjc TUCall.transmissionMode.getter()
{
  return objc_msgSend(v0, sel_transmissionMode);
}

id @nonobjc TUCall.accessoryButtonEventsEnabled.getter()
{
  return objc_msgSend(v0, sel_accessoryButtonEventsEnabled);
}

id @nonobjc TUCall.activeRemoteParticipant.getter()
{
  id v1 = objc_msgSend(v0, sel_activeRemoteParticipant);
  return v1;
}

id @nonobjc TUCall.localSenderIdentity.getter()
{
  id v1 = objc_msgSend(v0, sel_localSenderIdentity);
  return v1;
}

uint64_t @nonobjc TUCall.contactIdentifiers.getter()
{
  return outlined bridged method (pb) of @objc TUCall.contactIdentifiers.getter(v0);
}

id @nonobjc TUCall.bluetoothAudioFormat.getter()
{
  return objc_msgSend(v0, sel_bluetoothAudioFormat);
}

id @nonobjc TUCall.bluetoothAudioFormat.setter(uint64_t a1)
{
  return objc_msgSend(v1, sel_setBluetoothAudioFormat_, a1);
}

id (*protocol witness for Call.bluetoothAudioFormat.modify in conformance TUCall(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_bluetoothAudioFormat);
  return protocol witness for Call.bluetoothAudioFormat.modify in conformance TUCall;
}

id protocol witness for Call.bluetoothAudioFormat.modify in conformance TUCall(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setBluetoothAudioFormat_, *(void *)a1);
}

id @nonobjc TUCall.screenSharingIntention.getter()
{
  return objc_msgSend(v0, sel_screenSharingIntention);
}

id @nonobjc TUCall.isSendingVideo.getter()
{
  return objc_msgSend(v0, sel_isSendingVideo);
}

id @nonobjc TUCall.isSendingVideo.setter(char a1)
{
  return objc_msgSend(v1, sel_setIsSendingVideo_, a1 & 1);
}

id (*protocol witness for Call.isSendingVideo.modify in conformance TUCall(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_isSendingVideo);
  return protocol witness for Call.isSendingVideo.modify in conformance TUCall;
}

id protocol witness for Call.isSendingVideo.modify in conformance TUCall(void **a1)
{
  return OUTLINED_FUNCTION_0_113(sel_setIsSendingVideo_, *a1);
}

id @nonobjc TUCall.isSharingScreen.getter()
{
  return objc_msgSend(v0, sel_isSharingScreen);
}

id @nonobjc TUCall.isSharingScreen.setter(char a1)
{
  return objc_msgSend(v1, sel_setSharingScreen_, a1 & 1);
}

id (*protocol witness for Call.isSharingScreen.modify in conformance TUCall(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_isSharingScreen);
  return protocol witness for Call.isSharingScreen.modify in conformance TUCall;
}

id protocol witness for Call.isSharingScreen.modify in conformance TUCall(void **a1)
{
  return OUTLINED_FUNCTION_0_113(sel_setSharingScreen_, *a1);
}

id @nonobjc TUCall.isUplinkMuted.getter()
{
  return objc_msgSend(v0, sel_isUplinkMuted);
}

id @nonobjc TUCall.isUplinkMuted.setter(char a1)
{
  return objc_msgSend(v1, sel_setUplinkMuted_, a1 & 1);
}

id (*protocol witness for Call.isUplinkMuted.modify in conformance TUCall(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_isUplinkMuted);
  return protocol witness for Call.isUplinkMuted.modify in conformance TUCall;
}

id protocol witness for Call.isUplinkMuted.modify in conformance TUCall(void **a1)
{
  return OUTLINED_FUNCTION_0_113(sel_setUplinkMuted_, *a1);
}

id @nonobjc TUCall.isThirdPartyVideo.getter()
{
  return objc_msgSend(v0, sel_isThirdPartyVideo);
}

id @nonobjc TUCall.isUsingBaseband.getter()
{
  return objc_msgSend(v0, sel_isUsingBaseband);
}

id @nonobjc TUCall.isEmergency.getter()
{
  return objc_msgSend(v0, sel_isEmergency);
}

id @nonobjc TUCall.disconnectedReason.getter()
{
  return objc_msgSend(v0, sel_disconnectedReason);
}

id @nonobjc TUCall.shouldSuppressRingtone.getter()
{
  return objc_msgSend(v0, sel_shouldSuppressRingtone);
}

id @nonobjc TUCall.shouldSuppressRingtone.setter(char a1)
{
  return objc_msgSend(v1, sel_setShouldSuppressRingtone_, a1 & 1);
}

id (*protocol witness for Call.shouldSuppressRingtone.modify in conformance TUCall(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_shouldSuppressRingtone);
  return protocol witness for Call.shouldSuppressRingtone.modify in conformance TUCall;
}

id protocol witness for Call.shouldSuppressRingtone.modify in conformance TUCall(void **a1)
{
  return OUTLINED_FUNCTION_0_113(sel_setShouldSuppressRingtone_, *a1);
}

id @nonobjc TUCall.isEligibleForScreening.getter()
{
  return objc_msgSend(v0, sel_isEligibleForScreening);
}

id protocol witness for CallDurationProvider.callDuration.getter in conformance TUCall()
{
  return @nonobjc TUCall.callDuration.getter();
}

id @nonobjc TUCall.callDuration.getter()
{
  return objc_msgSend(v0, sel_callDuration);
}

uint64_t protocol witness for CallDurationProvider.callDurationString.getter in conformance TUCall()
{
  return @nonobjc TUCall.callDurationString.getter();
}

uint64_t @nonobjc TUCall.callDurationString.getter()
{
  return outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v0);
}

uint64_t specialized == infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 == a3)
  {
    char v4 = 1;
    return v4 & 1;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      char v3 = static NSObject.== infix(_:_:)();
LABEL_9:
      char v4 = v3;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return v4 & 1;
    }
    goto LABEL_10;
  }
  type metadata accessor for PlaceholderCall();
  if (swift_dynamicCastClass())
  {
    if (swift_dynamicCastClass())
    {
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      char v3 = static PlaceholderCall.== infix(_:_:)();
      goto LABEL_9;
    }
LABEL_10:
    char v4 = 0;
    return v4 & 1;
  }
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  swift_getObjectType();
  v6._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x203A736872202CLL;
  v7._object = (void *)0xE700000000000000;
  String.append(_:)(v7);
  swift_getObjectType();
  v8._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 41;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t instantiation function for generic protocol witness table for TUCall(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue(&lazy protocol witness table cache variable for type TUCall and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t dispatch thunk of CallDurationProvider.callDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CallDurationProvider.callDurationString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Call.setRemoteVideoPresentationState(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of Call.setScreenShareAttributes(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of Call.setSharingScreen(_:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of Call.callUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Call.callGroupUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of Call.displayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Call.handle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Call.imageURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of Call.isActive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of Call.isConnected.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of Call.isConnecting.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of Call.isConversation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Call.isOutgoing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of Call.isVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of Call.isScreening.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of Call.isTTY.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of Call.isRTT.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of Call.provider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of Call.remoteParticipantHandles.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of Call.screenShareAttributes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of Call.status.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of Call.uniqueProxyIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of Call.uniqueProxyIdentifierUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of Call.wantsHoldMusic.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of Call.isPTT.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of Call.serviceStatus.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of Call.transmissionMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of Call.accessoryButtonEventsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of Call.activeRemoteParticipant.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of Call.localSenderIdentity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of Call.contactIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of Call.bluetoothAudioFormat.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of Call.bluetoothAudioFormat.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 280))();
}

uint64_t dispatch thunk of Call.bluetoothAudioFormat.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

uint64_t dispatch thunk of Call.screenSharingIntention.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of Call.isSendingVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of Call.isSendingVideo.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 312))();
}

uint64_t dispatch thunk of Call.isSendingVideo.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

uint64_t dispatch thunk of Call.isSharingScreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of Call.isSharingScreen.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

uint64_t dispatch thunk of Call.isSharingScreen.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t dispatch thunk of Call.isUplinkMuted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t dispatch thunk of Call.isUplinkMuted.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 360))();
}

uint64_t dispatch thunk of Call.isUplinkMuted.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 368))();
}

uint64_t dispatch thunk of Call.isThirdPartyVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 376))();
}

uint64_t dispatch thunk of Call.isUsingBaseband.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 384))();
}

uint64_t dispatch thunk of Call.isEmergency.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 392))();
}

uint64_t dispatch thunk of Call.disconnectedReason.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 400))();
}

uint64_t dispatch thunk of Call.shouldSuppressRingtone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 408))();
}

uint64_t dispatch thunk of Call.shouldSuppressRingtone.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 416))();
}

uint64_t dispatch thunk of Call.shouldSuppressRingtone.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 424))();
}

uint64_t dispatch thunk of Call.isEligibleForScreening.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 432))();
}

uint64_t dispatch thunk of Call.cnk_disconnect(reason:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 440))();
}

uint64_t dispatch thunk of Call.cnk_answerOrJoin()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 448))();
}

uint64_t dispatch thunk of Call.cnk_activeConversation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 456))();
}

uint64_t dispatch thunk of Call.cnk_contactStoreConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 464))();
}

uint64_t dispatch thunk of Call.cnk_supportsAVLessConversations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 472))();
}

uint64_t dispatch thunk of Call.cnk_supportsVideoUpgrade.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 480))();
}

uint64_t dispatch thunk of Call.cnk_isAudio.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 488))();
}

uint64_t dispatch thunk of Call.cnk_eligibleForRedial.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 496))();
}

uint64_t dispatch thunk of Call.cnk_dialRequestForRedial.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 504))();
}

uint64_t dispatch thunk of Call.isMergedWithAnotherCall.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 512))();
}

uint64_t dispatch thunk of Call.cnk_everConnected.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 520))();
}

void *Layout.InCallControlsButton.pillMinimumWidth.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.pillMinimumWidth;
}

void *Layout.InCallControlsButton.pillMinimumHeight.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.pillMinimumHeight;
}

double static Layout.ConversationControls.values.getter@<D0>(uint64_t a1@<X8>)
{
  static Layout.ConversationControls.iOS.getter((uint64_t)&v17);
  uint64_t v2 = v37;
  uint64_t v3 = v36;
  uint64_t v4 = v34;
  uint64_t v5 = v31;
  int v6 = v23;
  uint64_t v7 = v22;
  long long v8 = v18;
  double v9 = 3.0;
  if (*(double *)&v17 >= 310.0) {
    double v9 = 8.0;
  }
  if (*(double *)&v17 >= 360.0) {
    double v9 = 10.0;
  }
  double v10 = 20.0 - *(double *)&v18;
  *(_OWORD *)a1 = v17;
  *(_OWORD *)(a1 + 16) = v8;
  long long v11 = v20;
  *(_OWORD *)(a1 + 32) = v19;
  *(_OWORD *)(a1 + 48) = v11;
  *(_OWORD *)(a1 + 64) = v21;
  *(void *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v7;
  *(_DWORD *)(a1 + 88) = v6;
  long long v12 = v25;
  *(_OWORD *)(a1 + 96) = v24;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 128) = v26;
  *(double *)(a1 + 144) = v10;
  *(_OWORD *)(a1 + 152) = v27;
  *(_OWORD *)(a1 + 168) = v28;
  *(_OWORD *)(a1 + 184) = v29;
  *(_OWORD *)(a1 + 20ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v30;
  *(void *)(a1 + 216) = v5;
  *(double *)(a1 + 224) = v9;
  *(_OWORD *)(a1 + 232) = v32;
  *(_OWORD *)(a1 + 248) = v33;
  *(void *)(a1 + 264) = v4;
  *(_OWORD *)(a1 + 272) = v35;
  *(void *)(a1 + 288) = v3;
  *(void *)(a1 + 296) = v2;
  long long v13 = v39;
  *(_OWORD *)(a1 + 304) = v38;
  *(_OWORD *)(a1 + 32ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v13;
  long long v14 = v41;
  *(_OWORD *)(a1 + 336) = v40;
  *(_OWORD *)(a1 + 352) = v14;
  double result = *(double *)&v42;
  long long v16 = v43;
  *(_OWORD *)(a1 + 368) = v42;
  *(_OWORD *)(a1 + 384) = v16;
  return result;
}

void *Layout.ShareCard.insetBuffer.unsafeMutableAddressor()
{
  return &static Layout.ShareCard.insetBuffer;
}

__n128 static Layout.InCallControls.values.getter@<Q0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C378C670;
  *(_OWORD *)(a1 + 16) = xmmword_1C378C680;
  *(_OWORD *)(a1 + 32) = xmmword_1C378C690;
  *(_OWORD *)(a1 + 48) = xmmword_1C378C6A0;
  *(_OWORD *)(a1 + 64) = xmmword_1C378C6B0;
  *(_OWORD *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C6C0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 112) = xmmword_1C378C6D0;
  *(_OWORD *)(a1 + 128) = xmmword_1C378C6E0;
  *(_OWORD *)(a1 + 144) = xmmword_1C378C6F0;
  *(_OWORD *)(a1 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C700;
  *(_OWORD *)(a1 + 176) = xmmword_1C378C710;
  *(_OWORD *)(a1 + 192) = xmmword_1C378C720;
  *(_OWORD *)(a1 + 208) = xmmword_1C378C730;
  *(_OWORD *)(a1 + 224) = xmmword_1C378C740;
  *(_OWORD *)(a1 + 24ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C750;
  *(_OWORD *)(a1 + 256) = xmmword_1C378C760;
  *(_OWORD *)(a1 + 272) = xmmword_1C378C770;
  *(_OWORD *)(a1 + 288) = xmmword_1C378C780;
  *(_OWORD *)(a1 + 304) = xmmword_1C378C790;
  *(_OWORD *)(a1 + 32ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C7A0;
  *(_OWORD *)(a1 + 336) = xmmword_1C378C7B0;
  *(_OWORD *)(a1 + 352) = xmmword_1C378C7C0;
  __asm { FMOV            V1.2D, #17.0 }
  *(_OWORD *)(a1 + 368) = xmmword_1C378C7D0;
  *(_OWORD *)(a1 + 384) = _Q1;
  *(_OWORD *)(a1 + 40ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C7E0;
  *(_OWORD *)(a1 + 416) = xmmword_1C378C7F0;
  *(_OWORD *)(a1 + 432) = xmmword_1C378C800;
  *(_OWORD *)(a1 + 448) = xmmword_1C378C810;
  *(_OWORD *)(a1 + 464) = xmmword_1C378C820;
  *(_OWORD *)(a1 + 48ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C830;
  *(_OWORD *)(a1 + 496) = xmmword_1C378C840;
  *(_OWORD *)(a1 + 512) = xmmword_1C378C850;
  __asm { FMOV            V1.2D, #8.0 }
  *(_OWORD *)(a1 + 528) = xmmword_1C378C860;
  *(_OWORD *)(a1 + 544) = _Q1;
  *(_OWORD *)(a1 + 56ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C870;
  *(_OWORD *)(a1 + 576) = xmmword_1C378C880;
  *(_OWORD *)(a1 + 592) = xmmword_1C378C890;
  *(_OWORD *)(a1 + 608) = xmmword_1C378C8A0;
  *(_OWORD *)(a1 + 624) = xmmword_1C378C8B0;
  *(_OWORD *)(a1 + 64ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C8C0;
  *(_OWORD *)(a1 + 656) = xmmword_1C378C8D0;
  *(_OWORD *)(a1 + 672) = xmmword_1C378C8E0;
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)(a1 + 688) = _Q0;
  *(_OWORD *)(a1 + 704) = xmmword_1C378C8F0;
  OUTLINED_FUNCTION_21_58(a1, (__n128)xmmword_1C378C900);
  return result;
}

void static Layout.MultiwayFaceTime.values.getter(uint64_t a1@<X8>)
{
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  double v3 = (*(double (**)(void))(v2 + 384))();
  OUTLINED_FUNCTION_87_7();
  double v4 = 0.0;
  if (static AmbientState.isPresented) {
    double v5 = 10.0;
  }
  else {
    double v5 = 0.0;
  }
  if (static Platform.current.getter() == 2) {
    double v4 = -20.0;
  }
  OUTLINED_FUNCTION_3_2();
  double v7 = (*(double (**)(void))(v6 + 488))();
  OUTLINED_FUNCTION_85_10(v7, (__n128)xmmword_1C378C6B0);
  *(_OWORD *)(a1 + 32) = xmmword_1C378C910;
  *(_OWORD *)(a1 + 48) = xmmword_1C378C920;
  *(void *)(a1 + 64) = 0;
  *(double *)(a1 + 72) = v3;
  int64x2_t v8 = vdupq_n_s64(0x4049000000000000uLL);
  *(_OWORD *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C770;
  *(int64x2_t *)(a1 + 96) = v8;
  *(int64x2_t *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 128) = xmmword_1C378C930;
  *(_OWORD *)(a1 + 144) = xmmword_1C378C940;
  *(double *)(a1 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v5;
  *(double *)(a1 + 168) = v4;
  *(__n128 *)(a1 + 208) = OUTLINED_FUNCTION_37_34(v9, (__n128)xmmword_1C378C950);
  *(_OWORD *)(a1 + 224) = xmmword_1C378C960;
  OUTLINED_FUNCTION_32_36((__n128)xmmword_1C378C970, (__n128)xmmword_1C378C980);
  *(_OWORD *)(a1 + 288) = xmmword_1C378C990;
  *(_OWORD *)(a1 + 304) = xmmword_1C378C9A0;
  OUTLINED_FUNCTION_80_9((__n128)xmmword_1C378C9B0);
}

uint64_t *Layout.Captions.transcriptSidebarWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for transcriptSidebarWidth != -1) {
    swift_once();
  }
  return &static Layout.Captions.transcriptSidebarWidth;
}

uint64_t *Layout.Captions.transcriptVerticalSize.unsafeMutableAddressor()
{
  if (one-time initialization token for transcriptVerticalSize != -1) {
    swift_once();
  }
  return &static Layout.Captions.transcriptVerticalSize;
}

void *Layout.AudioVisualization.reducedMotionFixedRingScale.unsafeMutableAddressor()
{
  return &static Layout.AudioVisualization.reducedMotionFixedRingScale;
}

void *Layout.AudioVisualization.minimumRingScale.unsafeMutableAddressor()
{
  return &static Layout.AudioVisualization.minimumRingScale;
}

void *Layout.AudioVisualization.maximumRingScale.unsafeMutableAddressor()
{
  return &static Layout.AudioVisualization.maximumRingScale;
}

void *Layout.LocalParticipantView.localParticipantReactionsSizeMultiplier.unsafeMutableAddressor()
{
  return &static Layout.LocalParticipantView.localParticipantReactionsSizeMultiplier;
}

void *Layout.LocalParticipantView.localParticipantExpandedSizeMultiplier.unsafeMutableAddressor()
{
  return &static Layout.LocalParticipantView.localParticipantExpandedSizeMultiplier;
}

uint64_t *Layout.ParticipantViews.screenSharingInteractionTouchInsets.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenSharingInteractionTouchInsets;
}

uint64_t static Layout.ParticipantViews.screenSharingCornerRadius.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 392))();
}

void *Layout.ParticipantViews.screenShareInfoViewAvatarImageHeight.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewAvatarImageHeight;
}

double static Layout.Roster.values.getter@<D0>(uint64_t a1@<X8>)
{
  double v2 = dbl_1C378C9C0[static Platform.current.getter() == 0];
  *(_OWORD *)a1 = xmmword_1C378C9D0;
  *(_OWORD *)(a1 + 16) = xmmword_1C378C9E0;
  *(void *)(a1 + 32) = 0x4059000000000000;
  *(void *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 30;
  *(void *)(a1 + 48) = 0x4055C00000000000;
  *(double *)(a1 + 56) = v2;
  double result = 100.0;
  *(_OWORD *)(a1 + 64) = xmmword_1C378C9F0;
  return result;
}

uint64_t static Layout.LocalParticipantViewCameraControls.values.getter@<X0>(uint64_t a1@<X8>)
{
  Layout.LocalParticipantViewCameraControls.init()((uint64_t)v10);
  double v2 = v12;
  uint64_t result = static Platform.current.getter();
  uint64_t v4 = v11;
  uint64_t v5 = v15;
  double v6 = 17.0;
  if (result == 1) {
    double v6 = v2;
  }
  long long v7 = v10[1];
  long long v8 = v13;
  long long v9 = v14;
  *(_OWORD *)a1 = v10[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(void *)(a1 + 32) = v4;
  *(double *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v6;
  *(double *)(a1 + 48) = v2;
  *(_OWORD *)(a1 + 56) = v8;
  *(_OWORD *)(a1 + 72) = v9;
  *(void *)(a1 + 88) = v5;
  return result;
}

long long *Layout.ConversationControlsAppLaunchPillView.margins.unsafeMutableAddressor()
{
  if (one-time initialization token for margins != -1) {
    swift_once();
  }
  return &static Layout.ConversationControlsAppLaunchPillView.margins;
}

void *Layout.ConversationControlsAppLaunchPillView.imageDiameter.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsAppLaunchPillView.imageDiameter;
}

void *Layout.ConversationControlsAppLaunchPillView.avatarDiameter.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsAppLaunchPillView.avatarDiameter;
}

void *Layout.ConversationControlsAppLaunchPillView.horizontalContentSpacing.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsAppLaunchPillView.horizontalContentSpacing;
}

void *Layout.PTT.topDetailContainerMarginScale.unsafeMutableAddressor()
{
  return &static Layout.PTT.topDetailContainerMarginScale;
}

void *Layout.PTT.bottomButtonContainerMarginScale.unsafeMutableAddressor()
{
  return &static Layout.PTT.bottomButtonContainerMarginScale;
}

void *Layout.PTT.horizontalContainerMargin.unsafeMutableAddressor()
{
  return &static Layout.PTT.horizontalContainerMargin;
}

void *Layout.PTT.maxiPadContainerWidth.unsafeMutableAddressor()
{
  return &static Layout.PTT.maxiPadContainerWidth;
}

void *Layout.PTT.fullScreenButtonInset.unsafeMutableAddressor()
{
  return &static Layout.PTT.fullScreenButtonInset;
}

void *Layout.Reactions.participantViewInset.unsafeMutableAddressor()
{
  return &static Layout.Reactions.participantViewInset;
}

void *Layout.Reactions.containingViewInset.unsafeMutableAddressor()
{
  return &static Layout.Reactions.containingViewInset;
}

void *Layout.PTT.fullScreenAvatarSize.unsafeMutableAddressor()
{
  return &static Layout.PTT.fullScreenAvatarSize;
}

void *Layout.PTT.disclosureButtonTopOffset.unsafeMutableAddressor()
{
  return &static Layout.PTT.disclosureButtonTopOffset;
}

void *Layout.PTT.sessionDetailsLeadingMargin.unsafeMutableAddressor()
{
  return &static Layout.PTT.sessionDetailsLeadingMargin;
}

long long *Layout.ConversationControlsTrailingActionPillView.buttonContentInsets.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonContentInsets != -1) {
    swift_once();
  }
  return &static Layout.ConversationControlsTrailingActionPillView.buttonContentInsets;
}

uint64_t *Layout.Captions.margin.unsafeMutableAddressor()
{
  if (one-time initialization token for margin != -1) {
    swift_once();
  }
  return &static Layout.Captions.margin;
}

void *Layout.ParticipantViews.startingTileScale.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.startingTileScale;
}

uint64_t static Layout.ParticipantViews.cornerRadius(for:)(uint64_t result)
{
  if ((result & 1) == 0)
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    OUTLINED_FUNCTION_50();
    return (*(uint64_t (**)(void))(v1 + 384))();
  }
  return result;
}

void *Layout.InCallControlsButton.pillContentVerticalInset.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.pillContentVerticalInset;
}

void *Layout.InCallControlsButton.pillContentHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.pillContentHorizontalInset;
}

void *Layout.LocalParticipantView.shadowOffset.unsafeMutableAddressor()
{
  return &static Layout.LocalParticipantView.shadowOffset;
}

void *Layout.LocalParticipantView.shadowRadius.unsafeMutableAddressor()
{
  return &static Layout.LocalParticipantView.shadowRadius;
}

uint64_t static Layout.ParticipantViews.cornerRadius.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 384))();
}

void *Layout.ParticipantViews.bottomShadowOffset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.bottomShadowOffset;
}

void *Layout.ParticipantViews.bottomShadowRadius.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.bottomShadowRadius;
}

void *Layout.ParticipantViews.bottomBarHorizontalInsetRegular.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.bottomBarHorizontalInsetRegular;
}

void *Layout.ParticipantViews.bottomBarButtonSize.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.bottomBarButtonSize;
}

uint64_t *Layout.ShareCard.appShelfSeparatorInsetBuffer.unsafeMutableAddressor()
{
  if (one-time initialization token for appShelfSeparatorInsetBuffer != -1) {
    swift_once();
  }
  return &static Layout.ShareCard.appShelfSeparatorInsetBuffer;
}

void *Layout.ShareCard.popoverWidth.unsafeMutableAddressor()
{
  return &static Layout.ShareCard.popoverWidth;
}

void *Layout.AudioVisualization.borderWidthFactor.unsafeMutableAddressor()
{
  return &static Layout.AudioVisualization.borderWidthFactor;
}

void *Layout.ShareCard.buttonIconTightSpacing.unsafeMutableAddressor()
{
  return &static Layout.ShareCard.buttonIconTightSpacing;
}

void *Layout.ShareCard.buttonIconSpacing.unsafeMutableAddressor()
{
  return &static Layout.ShareCard.buttonIconSpacing;
}

uint64_t *Layout.ShareCard.collaborateSubtitleBuffer.unsafeMutableAddressor()
{
  if (one-time initialization token for collaborateSubtitleBuffer != -1) {
    swift_once();
  }
  return &static Layout.ShareCard.collaborateSubtitleBuffer;
}

void *Layout.EffectsControlsView.browserRegularHeight.unsafeMutableAddressor()
{
  return &static Layout.EffectsControlsView.browserRegularHeight;
}

void *Layout.EffectsControlsView.cornerRadius.unsafeMutableAddressor()
{
  return &static Layout.EffectsControlsView.cornerRadius;
}

void *Layout.EffectsControlsView.buttonPadding.unsafeMutableAddressor()
{
  return &static Layout.EffectsControlsView.buttonPadding;
}

double static Layout.MediaPip.padding.getter()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_currentDevice);
  id v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  if (v2 == (id)1
    || (id v3 = objc_msgSend(v0, sel_currentDevice),
        id v4 = objc_msgSend(v3, sel_userInterfaceIdiom),
        v3,
        double result = 10.0,
        v4 == (id)5))
  {
    int HasHomeButton = TUDeviceHasHomeButton();
    double result = 24.0;
    if (HasHomeButton) {
      return 20.0;
    }
  }
  return result;
}

void *Layout.Captions.subtitleSmallBottomOffset.unsafeMutableAddressor()
{
  return &static Layout.Captions.subtitleSmallBottomOffset;
}

uint64_t *Layout.LocalParticipantView.tvSplitViewBottomOffset.unsafeMutableAddressor()
{
  if (one-time initialization token for tvSplitViewBottomOffset != -1) {
    swift_once();
  }
  return &static Layout.LocalParticipantView.tvSplitViewBottomOffset;
}

void *Layout.Reactions.controlsInset.unsafeMutableAddressor()
{
  return &static Layout.Reactions.controlsInset;
}

uint64_t *Layout.Reactions.defaultTipWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultTipWidth != -1) {
    swift_once();
  }
  return &static Layout.Reactions.defaultTipWidth;
}

uint64_t *Layout.Captions.bubbleSnapDistance.unsafeMutableAddressor()
{
  if (one-time initialization token for bubbleSnapDistance != -1) {
    swift_once();
  }
  return &static Layout.Captions.bubbleSnapDistance;
}

void *Layout.ShareCard.popoverSpacingWithButtonWhenAbove.unsafeMutableAddressor()
{
  return &static Layout.ShareCard.popoverSpacingWithButtonWhenAbove;
}

void *Layout.ShareCard.popoverSpacingWithButtonWhenUnder.unsafeMutableAddressor()
{
  return &static Layout.ShareCard.popoverSpacingWithButtonWhenUnder;
}

void *Layout.ParticipantViews.prominenceBorderWidth.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.prominenceBorderWidth;
}

void *Layout.PTT.appNameDisclosureChevronMargin.unsafeMutableAddressor()
{
  return &static Layout.PTT.appNameDisclosureChevronMargin;
}

void *Layout.InCallControlsButton.discLabelTopSpacing.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.discLabelTopSpacing;
}

void *Layout.InCallControlsButton.pillImageToLabelSpacing.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.pillImageToLabelSpacing;
}

long long *Layout.ConversationControlsAppLaunchPillView.buttonContentInsets.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonContentInsets != -1) {
    swift_once();
  }
  return &static Layout.ConversationControlsAppLaunchPillView.buttonContentInsets;
}

double static Layout.SharePlayDiscoverabilityView.values.getter@<D0>(uint64_t a1@<X8>)
{
  char v2 = static Platform.current.getter();
  double v3 = 12.0;
  if (v2 == 1) {
    double v3 = 16.0;
  }
  *(void *)a1 = 0x4030000000000000;
  *(double *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = xmmword_1C378C960;
  *(_OWORD *)(a1 + 32) = xmmword_1C378CA00;
  *(_OWORD *)(a1 + 48) = xmmword_1C378CA10;
  *(_OWORD *)(a1 + 64) = xmmword_1C378CA20;
  double result = 8.0;
  *(_OWORD *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378CA30;
  return result;
}

void *Layout.ParticipantViews.screenShareInfoViewTopInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewTopInset;
}

void *Layout.ParticipantViews.screenShareInfoViewButtonRadius.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewButtonRadius;
}

void *Layout.ParticipantViews.screenShareInfoViewHeight.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewHeight;
}

void *Layout.ParticipantViews.screenShareInfoViewAvatarImageInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewAvatarImageInset;
}

void *Layout.ParticipantViews.screenShareInfoViewHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewHorizontalInset;
}

void *Layout.ParticipantViews.screenShareInfoViewHorizontalSpacing.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewHorizontalSpacing;
}

void *Layout.ParticipantViews.screenShareInfoViewFullScreenHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewFullScreenHorizontalInset;
}

void *Layout.ParticipantMonogramViews.glowAlpha.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.glowAlpha;
}

void *Layout.ParticipantMonogramViews.contactViewMaximumSize.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.contactViewMaximumSize;
}

void *Layout.ParticipantMonogramViews.contactRosterSizeMultiplier.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.contactRosterSizeMultiplier;
}

void *Layout.ParticipantMonogramViews.contactViewMinimumInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.contactViewMinimumInset;
}

void *Layout.ParticipantMonogramViews.contactViewMicroPiPMinimumInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.contactViewMicroPiPMinimumInset;
}

void *Layout.ParticipantMonogramViews.contactCanvasSizeMultiplier.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.contactCanvasSizeMultiplier;
}

void *Layout.ParticipantMonogramViews.buttonPadding.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.buttonPadding;
}

void *Layout.ParticipantMonogramViews.buttonWidth.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.buttonWidth;
}

void *Layout.ParticipantMonogramViews.buttonHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.buttonHorizontalInset;
}

void *Layout.ParticipantMonogramViews.labelHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.labelHorizontalInset;
}

uint64_t static Layout.ParticipantMonogramViews.glowSizeMultiplier.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(void))(v0 + 400))();
}

uint64_t *Layout.ParticipantViews.shortSizeBoundary.unsafeMutableAddressor()
{
  if (one-time initialization token for shortSizeBoundary != -1) {
    swift_once();
  }
  return &static Layout.ParticipantViews.shortSizeBoundary;
}

uint64_t *Layout.ParticipantViews.microSizeBoundary.unsafeMutableAddressor()
{
  if (one-time initialization token for microSizeBoundary != -1) {
    swift_once();
  }
  return &static Layout.ParticipantViews.microSizeBoundary;
}

void *Layout.ParticipantMonogramViews.labelSpacingScale.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.labelSpacingScale;
}

void *Layout.ParticipantMonogramViews.labelSpacingMaximum.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.labelSpacingMaximum;
}

void *Layout.ParticipantMonogramViews.labelSpacingMinimum.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.labelSpacingMinimum;
}

long long *Layout.Nickname.leadingImageSize.unsafeMutableAddressor()
{
  if (one-time initialization token for leadingImageSize != -1) {
    swift_once();
  }
  return &static Layout.Nickname.leadingImageSize;
}

uint64_t *Layout.Nickname.distanceBetweenLabels.unsafeMutableAddressor()
{
  if (one-time initialization token for distanceBetweenLabels != -1) {
    swift_once();
  }
  return &static Layout.Nickname.distanceBetweenLabels;
}

uint64_t *Layout.Nickname.distanceBetweenImageAndLabels.unsafeMutableAddressor()
{
  if (one-time initialization token for distanceBetweenImageAndLabels != -1) {
    swift_once();
  }
  return &static Layout.Nickname.distanceBetweenImageAndLabels;
}

uint64_t *Layout.Nickname.distanceFromEdge.unsafeMutableAddressor()
{
  if (one-time initialization token for distanceFromEdge != -1) {
    swift_once();
  }
  return &static Layout.Nickname.distanceFromEdge;
}

void *Layout.PTT.pillMinimumWidth.unsafeMutableAddressor()
{
  return &static Layout.PTT.pillMinimumWidth;
}

uint64_t *Layout.Reactions.pickerPadding.unsafeMutableAddressor()
{
  return &static Layout.Reactions.pickerPadding;
}

double static Layout.Reactions.defaultPickerWidth.getter()
{
  if (one-time initialization token for defaultTipWidth != -1) {
    swift_once();
  }
  return *(double *)&static Layout.Reactions.defaultTipWidth;
}

void *Layout.EffectsControlsView.browserExpandedHeight.unsafeMutableAddressor()
{
  return &static Layout.EffectsControlsView.browserExpandedHeight;
}

uint64_t *Layout.EffectsControlsView.browserVerticalPaddingFull.unsafeMutableAddressor()
{
  if (one-time initialization token for browserVerticalPaddingFull != -1) {
    swift_once();
  }
  return &static Layout.EffectsControlsView.browserVerticalPaddingFull;
}

uint64_t *Layout.EffectsControlsView.browserVerticalPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for browserVerticalPadding != -1) {
    swift_once();
  }
  return &static Layout.EffectsControlsView.browserVerticalPadding;
}

void *Layout.ParticipantViews.labelFadeSize.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.labelFadeSize;
}

void *Layout.ParticipantViews.shadowRadius.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.shadowRadius;
}

void *Layout.PTT.pttActionButtonSize.unsafeMutableAddressor()
{
  return &static Layout.PTT.pttActionButtonSize;
}

void *Layout.PTT.buttonLabelVerticalSpacing.unsafeMutableAddressor()
{
  return &static Layout.PTT.buttonLabelVerticalSpacing;
}

void *Layout.ParticipantAlertViews.cornerRadius.unsafeMutableAddressor()
{
  return &static Layout.ParticipantAlertViews.cornerRadius;
}

void *Layout.ParticipantAlertViews.minimumWidth.unsafeMutableAddressor()
{
  return &static Layout.ParticipantAlertViews.minimumWidth;
}

void *Layout.ParticipantAlertViews.minimumHeight.unsafeMutableAddressor()
{
  return &static Layout.ParticipantAlertViews.minimumHeight;
}

void *Layout.ParticipantAlertViews.inset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantAlertViews.inset;
}

uint64_t *Layout.MediaPip.bottomInsetAfterPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for bottomInsetAfterPadding != -1) {
    swift_once();
  }
  return &static Layout.MediaPip.bottomInsetAfterPadding;
}

void *Layout.MediaPip.controlsDodgingTopInset.unsafeMutableAddressor()
{
  return &static Layout.MediaPip.controlsDodgingTopInset;
}

void *Layout.EffectsControlsView.browserWidth.unsafeMutableAddressor()
{
  return &static Layout.EffectsControlsView.browserWidth;
}

void Layout.MultiwayFaceTime.init()(uint64_t a1@<X8>)
{
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  double v3 = (*(double (**)(void))(v2 + 384))();
  OUTLINED_FUNCTION_87_7();
  double v4 = 0.0;
  if (static AmbientState.isPresented) {
    double v5 = 10.0;
  }
  else {
    double v5 = 0.0;
  }
  if (static Platform.current.getter() == 2) {
    double v4 = -20.0;
  }
  OUTLINED_FUNCTION_3_2();
  double v7 = (*(double (**)(void))(v6 + 488))();
  OUTLINED_FUNCTION_85_10(v7, (__n128)xmmword_1C378C6B0);
  *(_OWORD *)(a1 + 32) = xmmword_1C378C910;
  *(_OWORD *)(a1 + 48) = xmmword_1C378C920;
  *(void *)(a1 + 64) = 0;
  *(double *)(a1 + 72) = v3;
  int64x2_t v8 = vdupq_n_s64(0x4049000000000000uLL);
  *(_OWORD *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C770;
  *(int64x2_t *)(a1 + 96) = v8;
  *(int64x2_t *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 128) = xmmword_1C378C930;
  *(_OWORD *)(a1 + 144) = xmmword_1C378C940;
  *(double *)(a1 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v5;
  *(double *)(a1 + 168) = v4;
  *(__n128 *)(a1 + 208) = OUTLINED_FUNCTION_37_34(v9, (__n128)xmmword_1C378C950);
  *(_OWORD *)(a1 + 224) = xmmword_1C378C960;
  OUTLINED_FUNCTION_32_36((__n128)xmmword_1C378C970, (__n128)xmmword_1C378C980);
  *(_OWORD *)(a1 + 288) = xmmword_1C378C990;
  *(_OWORD *)(a1 + 304) = xmmword_1C378C9A0;
  OUTLINED_FUNCTION_80_9((__n128)xmmword_1C378C9B0);
}

uint64_t (*Layout.MultiwayFaceTime.statusBarHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.participantBottomInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.participantTopInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.participantLeadingAndTrailingInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.participantBottomInsetVisibleHUD.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.localParticipantPortraitSize.getter()
{
  return *(double *)(v0 + 40);
}

void Layout.MultiwayFaceTime.localParticipantPortraitSize.setter(double a1, double a2)
{
  *(double *)(v2 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
  *(double *)(v2 + 48) = a2;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantPortraitSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantEnlargedSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantFullScreenCornerRadius.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantEnlargedCornerRadius.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantMinimizedCornerRadius.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.additionalSafeAreaInsetBottomPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.participantGridEdgeInsets.getter()
{
  return *(double *)(v0 + 96);
}

void Layout.MultiwayFaceTime.participantGridEdgeInsets.setter(double a1, double a2, double a3, double a4)
{
  v4[12] = a1;
  v4[13] = a2;
  v4[14] = a3;
  v4[15] = a4;
}

uint64_t (*Layout.MultiwayFaceTime.participantGridEdgeInsets.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantExpandedPortraitInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantExpandedTVSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantExpandedTVRectangleHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.bottomControlsHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.inCallControlsLargeBottomInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.inCallControlsLeadingAnchorOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.inCallControlsExpandedTopInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.inCallControlsLargeExpandedTopInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.minimumCellGap.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.gridInterItemSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.oneToOneShutterButtonTopPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.oneToOneShutterButtonInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.changeLayoutButtonLeadingInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.changeLayoutButtonBottomInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.titleBarInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.controlsCornerRadius.getter()
{
  return *(double *)(v0 + 248);
}

void Layout.MultiwayFaceTime.controlsCornerRadius.setter(double a1)
{
  *(double *)(v1 + 248) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.controlsCornerRadius.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.oneToOneShutterButtonDiameter.getter()
{
  return *(double *)(v0 + 256);
}

void Layout.MultiwayFaceTime.oneToOneShutterButtonDiameter.setter(double a1)
{
  *(double *)(v1 + 256) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.oneToOneShutterButtonDiameter.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.sharedContentScreenWidth.getter()
{
  return *(double *)(v0 + 264);
}

void Layout.MultiwayFaceTime.sharedContentScreenWidth.setter(double a1)
{
  *(double *)(v1 + 264) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.sharedContentScreenWidth.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.sharedContentScreenHeight.getter()
{
  return *(double *)(v0 + 272);
}

void Layout.MultiwayFaceTime.sharedContentScreenHeight.setter(double a1)
{
  *(double *)(v1 + 272) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.sharedContentScreenHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.organicLayoutMaxCountPhone.getter()
{
  return *(void *)(v0 + 280);
}

uint64_t Layout.MultiwayFaceTime.organicLayoutMaxCountPhone.setter(uint64_t result)
{
  *(void *)(v1 + 28ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.organicLayoutMaxCountPhone.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.organicLayoutMaxCount.getter()
{
  return *(void *)(v0 + 288);
}

uint64_t Layout.MultiwayFaceTime.organicLayoutMaxCount.setter(uint64_t result)
{
  *(void *)(v1 + 288) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.organicLayoutMaxCount.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountPhone.getter()
{
  return *(void *)(v0 + 296);
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountPhone.setter(uint64_t result)
{
  *(void *)(v1 + 296) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.gridLayoutMaxCountPhone.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCount.getter()
{
  return *(void *)(v0 + 304);
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCount.setter(uint64_t result)
{
  *(void *)(v1 + 304) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.gridLayoutMaxCount.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountPortrait.getter()
{
  return *(void *)(v0 + 312);
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountPortrait.setter(uint64_t result)
{
  *(void *)(v1 + 312) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.gridLayoutMaxCountPortrait.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountMediaPip.getter()
{
  return *(void *)(v0 + 320);
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountMediaPip.setter(uint64_t result)
{
  *(void *)(v1 + 32ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.gridLayoutMaxCountMediaPip.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountPortraitMediaPip.getter()
{
  return *(void *)(v0 + 328);
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountPortraitMediaPip.setter(uint64_t result)
{
  *(void *)(v1 + 328) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.gridLayoutMaxCountPortraitMediaPip.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.gridViewButtonPadding.getter()
{
  return *(double *)(v0 + 336);
}

void Layout.MultiwayFaceTime.gridViewButtonPadding.setter(double a1)
{
  *(double *)(v1 + 336) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.gridViewButtonPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.topCornerPaddingBetweenButtons.getter()
{
  return *(double *)(v0 + 344);
}

void Layout.MultiwayFaceTime.topCornerPaddingBetweenButtons.setter(double a1)
{
  *(double *)(v1 + 344) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.topCornerPaddingBetweenButtons.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.tvLocalPreviewLandscapeHeight.getter()
{
  return *(double *)(v0 + 352);
}

void Layout.MultiwayFaceTime.tvLocalPreviewLandscapeHeight.setter(double a1)
{
  *(double *)(v1 + 352) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.tvLocalPreviewLandscapeHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double static Layout.ConversationControls.iOS.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_mainScreen);
  objc_msgSend(v3, sel_bounds);
  double v5 = v4;
  uint64_t v7 = v6;

  int64x2_t v8 = self;
  id v9 = objc_msgSend(v8, sel_currentDevice);
  id v10 = objc_msgSend(v9, sel_userInterfaceIdiom);

  if (v10 == (id)1
    || (id v11 = objc_msgSend(v8, sel_currentDevice),
        id v12 = objc_msgSend(v11, sel_userInterfaceIdiom),
        v11,
        v12 == (id)5))
  {
    double v13 = v5 + -16.0;
    uint64_t v14 = 0x4077700000000000;
  }
  else
  {
    id v15 = objc_msgSend(v2, sel_mainScreen);
    objc_msgSend(v15, sel_bounds);
    double v17 = v16;

    id v18 = objc_msgSend(v2, sel_mainScreen);
    objc_msgSend(v18, sel_bounds);
    double v20 = v19;

    if (v20 >= v17) {
      double v21 = v17;
    }
    else {
      double v21 = v20;
    }
    double v13 = v21 + -16.0;
    uint64_t v14 = *(void *)&v13;
  }
  *(void *)a1 = v14;
  *(_OWORD *)(a1 + 8) = xmmword_1C378CA40;
  *(_OWORD *)(a1 + 24) = xmmword_1C378CA50;
  *(_OWORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378CA60;
  *(double *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 72) = xmmword_1C378CA70;
  *(_DWORD *)(a1 + 88) = 1051931443;
  *(_OWORD *)(a1 + 96) = xmmword_1C378C6B0;
  *(_OWORD *)(a1 + 112) = xmmword_1C378CA80;
  *(_OWORD *)(a1 + 128) = xmmword_1C378CA90;
  *(_OWORD *)(a1 + 144) = xmmword_1C378CAA0;
  *(_OWORD *)(a1 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378CAB0;
  *(_OWORD *)(a1 + 176) = xmmword_1C378CAC0;
  *(int64x2_t *)(a1 + 192) = vdupq_n_s64(0x4049000000000000uLL);
  *(_OWORD *)(a1 + 208) = xmmword_1C378CAD0;
  *(_OWORD *)(a1 + 224) = xmmword_1C378CAE0;
  *(_OWORD *)(a1 + 24ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378CAF0;
  __asm { FMOV            V0.2D, #-15.0 }
  *(_OWORD *)(a1 + 256) = _Q0;
  *(_OWORD *)(a1 + 272) = xmmword_1C378CB00;
  *(void *)(a1 + 288) = 10;
  *(void *)(a1 + 296) = 0x4010000000000000;
  *(int64x2_t *)(a1 + 304) = vdupq_n_s64(0x4043800000000000uLL);
  *(_OWORD *)(a1 + 32ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378CB10;
  *(_OWORD *)(a1 + 336) = xmmword_1C378CB20;
  *(_OWORD *)(a1 + 352) = xmmword_1C378CB30;
  double result = 49.0;
  *(_OWORD *)(a1 + 368) = xmmword_1C378CB40;
  *(_OWORD *)(a1 + 384) = xmmword_1C378CB50;
  return result;
}

double Layout.ConversationControls.init()@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C378CB60;
  *(_OWORD *)(a1 + 16) = xmmword_1C378CB70;
  *(_OWORD *)(a1 + 32) = xmmword_1C378CB80;
  *(void *)(a1 + 48) = 0x4044000000000000;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0x4014000000000000;
  *(_DWORD *)(a1 + 88) = 1051931443;
  *(_OWORD *)(a1 + 96) = xmmword_1C378C6B0;
  *(_OWORD *)(a1 + 112) = xmmword_1C378CA80;
  *(_OWORD *)(a1 + 128) = xmmword_1C378CA90;
  *(_OWORD *)(a1 + 144) = xmmword_1C378CAA0;
  *(_OWORD *)(a1 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378CAB0;
  *(_OWORD *)(a1 + 176) = xmmword_1C378CAC0;
  *(int64x2_t *)(a1 + 192) = vdupq_n_s64(0x4049000000000000uLL);
  *(_OWORD *)(a1 + 208) = xmmword_1C378CAD0;
  *(_OWORD *)(a1 + 224) = xmmword_1C378CAE0;
  *(_OWORD *)(a1 + 24ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378CAF0;
  __asm { FMOV            V0.2D, #-15.0 }
  *(_OWORD *)(a1 + 256) = _Q0;
  *(_OWORD *)(a1 + 272) = xmmword_1C378CB00;
  *(void *)(a1 + 288) = 10;
  *(void *)(a1 + 296) = 0x4008000000000000;
  *(int64x2_t *)(a1 + 304) = vdupq_n_s64(0x4043800000000000uLL);
  *(_OWORD *)(a1 + 32ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378CB10;
  *(_OWORD *)(a1 + 336) = xmmword_1C378CB20;
  *(_OWORD *)(a1 + 352) = xmmword_1C378CB30;
  double result = 49.0;
  *(_OWORD *)(a1 + 368) = xmmword_1C378CB40;
  *(_OWORD *)(a1 + 384) = xmmword_1C378CB50;
  return result;
}

uint64_t (*Layout.ConversationControls.defaultWidthHUD.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.defaultWidthNotice.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.defaultOutsetMargin.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.defaultBannerOutsets.getter()
{
  return *(double *)(v0 + 24);
}

void Layout.ConversationControls.defaultBannerOutsets.setter(double a1, double a2, double a3, double a4)
{
  void v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[6] = a4;
}

uint64_t (*Layout.ConversationControls.defaultBannerOutsets.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.menuContainerSize.getter()
{
  return *(double *)(v0 + 56);
}

void Layout.ConversationControls.menuContainerSize.setter(double a1, double a2)
{
  *(double *)(v2 + 56) = a1;
  *(double *)(v2 + 64) = a2;
}

uint64_t (*Layout.ConversationControls.menuContainerSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.shadowOffset.getter()
{
  return *(double *)(v0 + 72);
}

void Layout.ConversationControls.shadowOffset.setter(double a1, double a2)
{
  *(double *)(v2 + 72) = a1;
  *(double *)(v2 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a2;
}

uint64_t (*Layout.ConversationControls.shadowOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float Layout.ConversationControls.shadowOpacity.getter()
{
  return *(float *)(v0 + 88);
}

void Layout.ConversationControls.shadowOpacity.setter(float a1)
{
  *(float *)(v1 + 88) = a1;
}

uint64_t (*Layout.ConversationControls.shadowOpacity.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.shadowRadius.getter()
{
  return *(double *)(v0 + 96);
}

void Layout.ConversationControls.shadowRadius.setter(double a1)
{
  *(double *)(v1 + 96) = a1;
}

uint64_t (*Layout.ConversationControls.shadowRadius.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.contentInset.getter()
{
  return *(double *)(v0 + 104);
}

void Layout.ConversationControls.contentInset.setter(double a1)
{
  *(double *)(v1 + 104) = a1;
}

uint64_t (*Layout.ConversationControls.contentInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.contentInsetInCall.getter()
{
  return *(double *)(v0 + 112);
}

void Layout.ConversationControls.contentInsetInCall.setter(double a1)
{
  *(double *)(v1 + 112) = a1;
}

uint64_t (*Layout.ConversationControls.contentInsetInCall.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.horizontalSpacing.getter()
{
  return *(double *)(v0 + 120);
}

void Layout.ConversationControls.horizontalSpacing.setter(double a1)
{
  *(double *)(v1 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.ConversationControls.horizontalSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.verticalSpacer.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.subtitleSpacer.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.additionalInCallLeadingTrailingInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.imageDiameterHUD.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.hudEphemeralTextVerticalSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.hudEphemeralTextBottomSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.imageDiameterNotice.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.imageDiameterShareCard.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.buttonDiscHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.buttonSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.systemApertureButtonDiscHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.defaultButtonSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.buttonLabelOverflow.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.dialogButtonSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.secondaryControlHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.buttonTapOutsets.getter()
{
  return *(double *)(v0 + 248);
}

void Layout.ConversationControls.buttonTapOutsets.setter(double a1, double a2, double a3, double a4)
{
  v4[31] = a1;
  v4[32] = a2;
  v4[33] = a3;
  v4[34] = a4;
}

uint64_t (*Layout.ConversationControls.buttonTapOutsets.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.menuVerticalOffset.getter()
{
  return *(double *)(v0 + 280);
}

void Layout.ConversationControls.menuVerticalOffset.setter(double a1)
{
  *(double *)(v1 + 28ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.ConversationControls.menuVerticalOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.ConversationControls.maxPillButtonCharacterLength.getter()
{
  return *(void *)(v0 + 288);
}

uint64_t Layout.ConversationControls.maxPillButtonCharacterLength.setter(uint64_t result)
{
  *(void *)(v1 + 288) = result;
  return result;
}

uint64_t (*Layout.ConversationControls.maxPillButtonCharacterLength.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.countdownRingWidth.getter()
{
  return *(double *)(v0 + 296);
}

void Layout.ConversationControls.countdownRingWidth.setter(double a1)
{
  *(double *)(v1 + 296) = a1;
}

uint64_t (*Layout.ConversationControls.countdownRingWidth.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.addParticipantButtonImageSize.getter()
{
  return *(double *)(v0 + 304);
}

void Layout.ConversationControls.addParticipantButtonImageSize.setter(double a1, double a2)
{
  *(double *)(v2 + 304) = a1;
  *(double *)(v2 + 312) = a2;
}

uint64_t (*Layout.ConversationControls.addParticipantButtonImageSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.sharePlayButtonImageSize.getter()
{
  return *(double *)(v0 + 320);
}

void Layout.ConversationControls.sharePlayButtonImageSize.setter(double a1, double a2)
{
  *(double *)(v2 + 32ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
  *(double *)(v2 + 328) = a2;
}

uint64_t (*Layout.ConversationControls.sharePlayButtonImageSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.sharePlayButtonImageOffset.getter()
{
  return *(double *)(v0 + 336);
}

void Layout.ConversationControls.sharePlayButtonImageOffset.setter(double a1, double a2)
{
  *(double *)(v2 + 336) = a1;
  *(double *)(v2 + 344) = a2;
}

uint64_t (*Layout.ConversationControls.sharePlayButtonImageOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.micButtonImageSize.getter()
{
  return *(double *)(v0 + 352);
}

void Layout.ConversationControls.micButtonImageSize.setter(double a1, double a2)
{
  *(double *)(v2 + 352) = a1;
  *(double *)(v2 + 36ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a2;
}

uint64_t (*Layout.ConversationControls.micButtonImageSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.videoButtonImageSize.getter()
{
  return *(double *)(v0 + 368);
}

void Layout.ConversationControls.videoButtonImageSize.setter(double a1, double a2)
{
  *(double *)(v2 + 368) = a1;
  *(double *)(v2 + 376) = a2;
}

uint64_t (*Layout.ConversationControls.videoButtonImageSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.endCallButtonImageSize.getter()
{
  return *(double *)(v0 + 384);
}

void Layout.ConversationControls.endCallButtonImageSize.setter(double a1, double a2)
{
  *(double *)(v2 + 384) = a1;
  *(double *)(v2 + 392) = a2;
}

uint64_t (*Layout.ConversationControls.endCallButtonImageSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 0 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 0.0;
}

double default argument 1 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 280.0;
}

double default argument 3 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 39.0;
}

double default argument 4 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 0.0;
}

double default argument 5 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 0.0;
}

float default argument 6 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 0.35;
}

double default argument 9 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 0.0;
}

double default argument 13 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 0.0;
}

double default argument 14 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_14_0(50.0);
}

double default argument 16 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 0.0;
}

double default argument 17 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_14_0(34.0);
}

double default argument 18 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_14_0(60.0);
}

double default argument 19 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_14_0(50.0);
}

double default argument 20 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_14_0(50.0);
}

double default argument 21 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_14_0(50.0);
}

double default argument 25 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_14_0(42.0);
}

double default argument 26 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return -15.0;
}

uint64_t default argument 28 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 10;
}

double default argument 30 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 39.0;
}

double default argument 31 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 55.0;
}

double default argument 32 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 0.0;
}

double default argument 33 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 35.0;
}

double default argument 34 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 49.0;
}

double default argument 35 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 34.0;
}

uint64_t Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>, long long a11, uint64_t a12, int a13, long long a14, long long a15, long long a16, long long a17, long long a18, long long a19, long long a20,long long a21,long long a22,long long a23,long long a24,uint64_t a25,uint64_t a26,long long a27,long long a28,long long a29,long long a30,long long a31,long long a32,uint64_t a33)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(double *)(a2 + 24) = a6;
  *(double *)(a2 + 32) = a7;
  *(double *)(a2 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a8;
  *(double *)(a2 + 48) = a9;
  *(double *)(a2 + 56) = a10;
  *(_OWORD *)(a2 + 64) = a11;
  *(void *)(a2 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a12;
  *(_DWORD *)(a2 + 88) = a13;
  *(_OWORD *)(a2 + 96) = a14;
  *(_OWORD *)(a2 + 112) = a15;
  *(_OWORD *)(a2 + 128) = a16;
  *(_OWORD *)(a2 + 144) = a17;
  *(_OWORD *)(a2 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a18;
  *(_OWORD *)(a2 + 176) = a19;
  *(_OWORD *)(a2 + 192) = a20;
  *(_OWORD *)(a2 + 208) = a21;
  *(_OWORD *)(a2 + 224) = a22;
  *(_OWORD *)(a2 + 24ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a23;
  *(_OWORD *)(a2 + 256) = a24;
  *(void *)(a2 + 272) = a25;
  *(void *)(a2 + 28ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a26;
  *(void *)(a2 + 288) = result;
  *(_OWORD *)(a2 + 296) = a27;
  *(_OWORD *)(a2 + 312) = a28;
  *(_OWORD *)(a2 + 328) = a29;
  *(_OWORD *)(a2 + 344) = a30;
  *(_OWORD *)(a2 + 36ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a31;
  *(_OWORD *)(a2 + 376) = a32;
  *(void *)(a2 + 392) = a33;
  return result;
}

void *Layout.ConversationControlsAppLaunchPillView.spacerToHUD.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsAppLaunchPillView.spacerToHUD;
}

double one-time initialization function for buttonContentInsets()
{
  double result = 6.0;
  static Layout.ConversationControlsAppLaunchPillView.buttonContentInsets = xmmword_1C378CB90;
  *(_OWORD *)&qword_1EA37EA80 = xmmword_1C378CB90;
  return result;
}

{
  double result;

  double result = 13.0;
  static Layout.ConversationControlsTrailingActionPillView.buttonContentInsets = xmmword_1C378CBA0;
  *(_OWORD *)&qword_1EA37EAE0 = xmmword_1C378CBA0;
  return result;
}

double static Layout.ConversationControlsAppLaunchPillView.buttonContentInsets.getter()
{
  if (one-time initialization token for buttonContentInsets != -1) {
    swift_once();
  }
  return OUTLINED_FUNCTION_29_39((uint64_t)&static Layout.ConversationControlsAppLaunchPillView.buttonContentInsets);
}

double one-time initialization function for buttonHUDContentInsets()
{
  double result = 13.0;
  static Layout.ConversationControlsAppLaunchPillView.buttonHUDContentInsets = xmmword_1C378CBA0;
  unk_1EA37EAA0 = xmmword_1C378CBA0;
  return result;
}

long long *Layout.ConversationControlsAppLaunchPillView.buttonHUDContentInsets.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonHUDContentInsets != -1) {
    swift_once();
  }
  return &static Layout.ConversationControlsAppLaunchPillView.buttonHUDContentInsets;
}

double static Layout.ConversationControlsAppLaunchPillView.buttonHUDContentInsets.getter()
{
  if (one-time initialization token for buttonHUDContentInsets != -1) {
    swift_once();
  }
  return OUTLINED_FUNCTION_29_39((uint64_t)&static Layout.ConversationControlsAppLaunchPillView.buttonHUDContentInsets);
}

double one-time initialization function for margins()
{
  double result = 12.0;
  __asm { FMOV            V1.2D, #12.0 }
  static Layout.ConversationControlsAppLaunchPillView.margins = xmmword_1C378CBB0;
  *(_OWORD *)&qword_1EA37EAC0 = _Q1;
  return result;
}

{
  double result;

  double result = 12.0;
  __asm { FMOV            V1.2D, #12.0 }
  static Layout.ConversationControlsTrailingActionPillView.margins = xmmword_1C378CBB0;
  unk_1EA37EB00 = _Q1;
  return result;
}

double static Layout.ConversationControlsAppLaunchPillView.margins.getter()
{
  if (one-time initialization token for margins != -1) {
    swift_once();
  }
  return OUTLINED_FUNCTION_29_39((uint64_t)&static Layout.ConversationControlsAppLaunchPillView.margins);
}

double static Layout.ConversationControlsAppLaunchPillView.imageDiameter.getter()
{
  return OUTLINED_FUNCTION_14_0(32.0);
}

double static Layout.ConversationControlsAppLaunchPillView.avatarDiameter.getter()
{
  return OUTLINED_FUNCTION_14_0(52.0);
}

void *Layout.ConversationControlsTrailingActionPillView.spacerToHUD.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsTrailingActionPillView.spacerToHUD;
}

double static Layout.ConversationControlsTrailingActionPillView.buttonContentInsets.getter()
{
  if (one-time initialization token for buttonContentInsets != -1) {
    swift_once();
  }
  return OUTLINED_FUNCTION_29_39((uint64_t)&static Layout.ConversationControlsTrailingActionPillView.buttonContentInsets);
}

void *Layout.ConversationControlsTrailingActionPillView.horizontalContentSpacing.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsTrailingActionPillView.horizontalContentSpacing;
}

long long *Layout.ConversationControlsTrailingActionPillView.margins.unsafeMutableAddressor()
{
  if (one-time initialization token for margins != -1) {
    swift_once();
  }
  return &static Layout.ConversationControlsTrailingActionPillView.margins;
}

double static Layout.ConversationControlsTrailingActionPillView.margins.getter()
{
  if (one-time initialization token for margins != -1) {
    swift_once();
  }
  return OUTLINED_FUNCTION_29_39((uint64_t)&static Layout.ConversationControlsTrailingActionPillView.margins);
}

void *Layout.ConversationControlsTrailingActionPillView.imageDiameter.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsTrailingActionPillView.imageDiameter;
}

double static Layout.ConversationControlsTrailingActionPillView.imageDiameter.getter()
{
  return OUTLINED_FUNCTION_14_0(32.0);
}

double Layout.SharePlayDiscoverabilityView.init()@<D0>(_OWORD *a1@<X8>)
{
  __asm { FMOV            V0.2D, #16.0 }
  *a1 = _Q0;
  a1[1] = xmmword_1C378CBC0;
  a1[2] = xmmword_1C378CA00;
  a1[3] = xmmword_1C378CBD0;
  double result = 80.0;
  a1[4] = xmmword_1C378CA20;
  a1[5] = xmmword_1C378CA30;
  return result;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.insetBuffer.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.verticalInsetBuffer.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appInsetBuffer.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appIconToTitlePadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.viewHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.SharePlayDiscoverabilityView.appIconWidth.getter()
{
  return *(double *)(v0 + 40);
}

void Layout.SharePlayDiscoverabilityView.appIconWidth.setter(double a1)
{
  *(double *)(v1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appIconWidth.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appIconHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appIconAspectRatio.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appCellWidth.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appScrollViewInsetBuffer.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appTitleToBottomPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appTitleToImagePadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 4 of Layout.SharePlayDiscoverabilityView.init(insetBuffer:verticalInsetBuffer:appInsetBuffer:appIconToTitlePadding:viewHeight:appIconWidth:appIconHeight:appIconAspectRatio:appCellWidth:appScrollViewInsetBuffer:appTitleToBottomPadding:appTitleToImagePadding:)()
{
  return OUTLINED_FUNCTION_14_0(160.0);
}

double default argument 5 of Layout.SharePlayDiscoverabilityView.init(insetBuffer:verticalInsetBuffer:appInsetBuffer:appIconToTitlePadding:viewHeight:appIconWidth:appIconHeight:appIconAspectRatio:appCellWidth:appScrollViewInsetBuffer:appTitleToBottomPadding:appTitleToImagePadding:)()
{
  return OUTLINED_FUNCTION_14_0(60.0);
}

double default argument 6 of Layout.SharePlayDiscoverabilityView.init(insetBuffer:verticalInsetBuffer:appInsetBuffer:appIconToTitlePadding:viewHeight:appIconWidth:appIconHeight:appIconAspectRatio:appCellWidth:appScrollViewInsetBuffer:appTitleToBottomPadding:appTitleToImagePadding:)()
{
  return 102.0;
}

double default argument 8 of Layout.SharePlayDiscoverabilityView.init(insetBuffer:verticalInsetBuffer:appInsetBuffer:appIconToTitlePadding:viewHeight:appIconWidth:appIconHeight:appIconAspectRatio:appCellWidth:appScrollViewInsetBuffer:appTitleToBottomPadding:appTitleToImagePadding:)()
{
  return OUTLINED_FUNCTION_14_0(80.0);
}

double static Layout.ShareCard.popoverWidth.getter()
{
  return 375.0;
}

uint64_t one-time initialization function for appShelfSeparatorInsetBuffer()
{
  uint64_t result = static Platform.current.getter();
  double v1 = 4.0;
  if (result == 1) {
    double v1 = 8.0;
  }
  static Layout.ShareCard.appShelfSeparatorInsetBuffer = *(void *)&v1;
  return result;
}

double static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for appShelfSeparatorInsetBuffer, (uint64_t)&static Layout.ShareCard.appShelfSeparatorInsetBuffer);
}

uint64_t one-time initialization function for collaborateSubtitleBuffer()
{
  uint64_t result = static Platform.current.getter();
  double v1 = 12.0;
  if (result == 1) {
    double v1 = 16.0;
  }
  static Layout.ShareCard.collaborateSubtitleBuffer = *(void *)&v1;
  return result;
}

double static Layout.ShareCard.collaborateSubtitleBuffer.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for collaborateSubtitleBuffer, (uint64_t)&static Layout.ShareCard.collaborateSubtitleBuffer);
}

double static Layout.ShareCard.buttonIconSpacing.getter()
{
  return 9.0;
}

double Layout.Roster.init()@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C378C9D0;
  *(_OWORD *)(a1 + 16) = xmmword_1C378C9E0;
  *(void *)(a1 + 32) = 0x4059000000000000;
  *(void *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 30;
  double result = 87.0;
  *(_OWORD *)(a1 + 48) = xmmword_1C378CBE0;
  *(_OWORD *)(a1 + 64) = xmmword_1C378C9F0;
  return result;
}

uint64_t (*Layout.Roster.maxVisibleCellCount.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.cellSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.cornerRadius.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.iconYOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.ParticipantViewCellHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.Roster.ParticipantListActionButtonMenuYOffset.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t Layout.Roster.ParticipantListActionButtonMenuYOffset.setter(uint64_t result)
{
  *(void *)(v1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = result;
  return result;
}

uint64_t (*Layout.Roster.ParticipantListActionButtonMenuYOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.floatingLayoutRosterCellWidth.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.minimumConfigurableCellWidth.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.minimumConfigurableCellWidthSplitView.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.minimumConfigurableCellWidthSplitViewOneToOne.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 0 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return 3.5;
}

double default argument 4 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return OUTLINED_FUNCTION_14_0(100.0);
}

uint64_t default argument 5 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return 30;
}

double default argument 6 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return 87.0;
}

double default argument 7 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return 0.0;
}

double default argument 8 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return OUTLINED_FUNCTION_14_0(100.0);
}

double default argument 9 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return 178.0;
}

uint64_t Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>, uint64_t a11)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(double *)(a2 + 24) = a6;
  *(double *)(a2 + 32) = a7;
  *(void *)(a2 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = result;
  *(double *)(a2 + 48) = a8;
  *(double *)(a2 + 56) = a9;
  *(double *)(a2 + 64) = a10;
  *(void *)(a2 + 72) = a11;
  return result;
}

double static Layout.LocalParticipantView.shadowOffset.getter()
{
  return -7.0;
}

double static Layout.LocalParticipantView.localParticipantExpandedSizeMultiplier.getter()
{
  return 0.7;
}

double static Layout.LocalParticipantView.localParticipantReactionsSizeMultiplier.getter()
{
  return 1.5;
}

void one-time initialization function for tvSplitViewBottomOffset()
{
  static Layout.LocalParticipantView.tvSplitViewBottomOffset = 0x4024000000000000;
}

double static Layout.LocalParticipantView.tvSplitViewBottomOffset.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for tvSplitViewBottomOffset, (uint64_t)&static Layout.LocalParticipantView.tvSplitViewBottomOffset);
}

double static Layout.EffectsControlsView.browserWidth.getter()
{
  return 290.0;
}

uint64_t one-time initialization function for browserVerticalPadding()
{
  uint64_t result = static Platform.current.getter();
  double v1 = 16.0;
  if (result == 1) {
    double v1 = 23.0;
  }
  static Layout.EffectsControlsView.browserVerticalPadding = *(void *)&v1;
  return result;
}

double static Layout.EffectsControlsView.browserVerticalPadding.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for browserVerticalPadding, (uint64_t)&static Layout.EffectsControlsView.browserVerticalPadding);
}

void one-time initialization function for browserVerticalPaddingFull()
{
  static Platform.current.getter();
  double v0 = OUTLINED_FUNCTION_42_29();
  if (v1) {
    double v0 = 6.0;
  }
  static Layout.EffectsControlsView.browserVerticalPaddingFull = *(void *)&v0;
}

double static Layout.EffectsControlsView.browserVerticalPaddingFull.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for browserVerticalPaddingFull, (uint64_t)&static Layout.EffectsControlsView.browserVerticalPaddingFull);
}

double static Layout.EffectsControlsView.browserRegularHeight.getter()
{
  return OUTLINED_FUNCTION_14_0(58.0);
}

double static Layout.EffectsControlsView.browserExpandedHeight.getter()
{
  return 75.0;
}

double Layout.LocalParticipantViewCameraControls.init()@<D0>(uint64_t a1@<X8>)
{
  if (static Platform.current.getter() == 1) {
    double v2 = 40.0;
  }
  else {
    double v2 = 44.0;
  }
  if (static Platform.current.getter() == 1) {
    double v3 = 3.0;
  }
  else {
    double v3 = 5.0;
  }
  static Platform.current.getter();
  double v4 = OUTLINED_FUNCTION_42_29();
  if (v5) {
    double v6 = 22.0;
  }
  else {
    double v6 = v4;
  }
  char v7 = static Platform.current.getter();
  double v8 = 0.0;
  if (v7 == 1) {
    double v8 = 10.0;
  }
  *(_OWORD *)a1 = xmmword_1C378CBF0;
  *(double *)(a1 + 16) = v2;
  *(double *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = xmmword_1C378CC00;
  *(void *)(a1 + 48) = 0x4040800000000000;
  *(double *)(a1 + 56) = v6;
  *(double *)(a1 + 64) = v8;
  double result = 20.0;
  *(_OWORD *)(a1 + 72) = xmmword_1C378CC10;
  *(void *)(a1 + 88) = 0x4052000000000000;
  return result;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.largeButtonPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.largeButtonSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.fullButtonSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.smallButtonPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.smallButtonBottomPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.extraSmallButtonSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.smallButtonSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.fullButtonPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.fullButtonBottomPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.expandedButtonSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.fullButtonSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.shutterButtonSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 1 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  return OUTLINED_FUNCTION_14_0(40.0);
}

double default argument 2 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  char v0 = static Platform.current.getter();
  double result = 44.0;
  if (v0 == 1) {
    return 40.0;
  }
  return result;
}

double default argument 3 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  char v0 = static Platform.current.getter();
  double result = 5.0;
  if (v0 == 1) {
    return 3.0;
  }
  return result;
}

double default argument 6 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  return 33.0;
}

double default argument 7 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  static Platform.current.getter();
  double result = OUTLINED_FUNCTION_42_29();
  if (v1) {
    return 22.0;
  }
  return result;
}

double default argument 8 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  char v0 = static Platform.current.getter();
  double result = 0.0;
  if (v0 == 1) {
    return 10.0;
  }
  return result;
}

double default argument 10 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  return OUTLINED_FUNCTION_14_0(44.0);
}

double default argument 11 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  return OUTLINED_FUNCTION_14_0(72.0);
}

void Layout.SharePlayDiscoverabilityView.init(insetBuffer:verticalInsetBuffer:appInsetBuffer:appIconToTitlePadding:viewHeight:appIconWidth:appIconHeight:appIconAspectRatio:appCellWidth:appScrollViewInsetBuffer:appTitleToBottomPadding:appTitleToImagePadding:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>, long long a10, uint64_t a11, uint64_t a12)
{
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a4;
  *(double *)(a1 + 24) = a5;
  *(double *)(a1 + 32) = a6;
  *(double *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a7;
  *(double *)(a1 + 48) = a8;
  *(double *)(a1 + 56) = a9;
  *(_OWORD *)(a1 + 64) = a10;
  *(void *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a11;
  *(void *)(a1 + 88) = a12;
}

void one-time initialization function for shortSizeBoundary()
{
  static Layout.ParticipantViews.shortSizeBoundary = 0x4066800000000000;
}

double static Layout.ParticipantViews.shortSizeBoundary.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for shortSizeBoundary, (uint64_t)&static Layout.ParticipantViews.shortSizeBoundary);
}

void one-time initialization function for microSizeBoundary()
{
  static Layout.ParticipantViews.microSizeBoundary = 0x4056000000000000;
}

double static Layout.ParticipantViews.microSizeBoundary.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for microSizeBoundary, (uint64_t)&static Layout.ParticipantViews.microSizeBoundary);
}

void *Layout.ParticipantViews.oneToOneCornerRadius.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.oneToOneCornerRadius;
}

double static Layout.ParticipantViews.oneToOneCornerRadius.getter()
{
  return 0.0;
}

double static Layout.ParticipantViews.screenSharingInteractionTouchInsets.getter()
{
  return *(double *)&static Layout.ParticipantViews.screenSharingInteractionTouchInsets;
}

uint64_t static Layout.ParticipantViews.screenSharingInteractionTouchInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t result = OUTLINED_FUNCTION_11_82();
  static Layout.ParticipantViews.screenSharingInteractionTouchInsets = *(void *)&a1;
  unk_1EA355680 = *(void *)&a2;
  qword_1EA355688 = *(void *)&a3;
  unk_1EA355690 = *(void *)&a4;
  return result;
}

uint64_t (*static Layout.ParticipantViews.screenSharingInteractionTouchInsets.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

double static Layout.ParticipantViews.shadowRadius.getter()
{
  return 25.0;
}

double static Layout.ParticipantViews.bottomShadowOffset.getter()
{
  return 0.0;
}

double static Layout.ParticipantViews.labelFadeSize.getter()
{
  return OUTLINED_FUNCTION_14_0(32.0);
}

double static Layout.ParticipantViews.startingTileScale.getter()
{
  return 0.75;
}

double static Layout.ParticipantViews.screenShareInfoViewHeight.getter()
{
  return OUTLINED_FUNCTION_14_0(40.0);
}

double static Layout.ParticipantViews.screenShareInfoViewButtonRadius.getter()
{
  return OUTLINED_FUNCTION_14_0(38.0);
}

double static Layout.ParticipantViews.screenShareInfoViewAvatarImageHeight.getter()
{
  return 28.0;
}

double static Layout.ParticipantViews.bottomBarButtonSize.getter()
{
  return OUTLINED_FUNCTION_14_0(32.0);
}

void *Layout.ParticipantViews.kickMemberButtonPadding.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.kickMemberButtonPadding;
}

void *Layout.ParticipantViews.kickMemberButtonSize.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.kickMemberButtonSize;
}

double static Layout.ParticipantViews.kickMemberButtonSize.getter()
{
  return OUTLINED_FUNCTION_14_0(32.0);
}

void *Layout.ParticipantViews.screenPoorConnectionLabelSidePadding.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenPoorConnectionLabelSidePadding;
}

void *Layout.ParticipantViews.screenPoorConnectionSymbolLabelVerticalSpacing.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenPoorConnectionSymbolLabelVerticalSpacing;
}

double static Layout.ParticipantMonogramViews.glowAlpha.getter()
{
  return 0.2;
}

double static Layout.ParticipantMonogramViews.contactRosterSizeMultiplier.getter()
{
  return 0.55;
}

double static Layout.ParticipantMonogramViews.contactCanvasSizeMultiplier.getter()
{
  return 0.4;
}

double static Layout.ParticipantMonogramViews.contactViewMaximumSize.getter()
{
  return OUTLINED_FUNCTION_14_0(168.0);
}

double static Layout.ParticipantMonogramViews.labelSpacingScale.getter()
{
  return 0.05;
}

double static Layout.ParticipantMonogramViews.labelSpacingMaximum.getter()
{
  return 21.0;
}

void *Layout.ParticipantMonogramViews.buttonVerticalInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.buttonVerticalInset;
}

double static Layout.ParticipantMonogramViews.buttonVerticalInset.getter()
{
  return 21.0;
}

void *Layout.ParticipantMonogramViews.buttonMargin.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.buttonMargin;
}

double static Layout.ParticipantMonogramViews.buttonWidth.getter()
{
  return OUTLINED_FUNCTION_14_0(50.0);
}

double static Layout.ParticipantAlertViews.minimumWidth.getter()
{
  return OUTLINED_FUNCTION_14_0(240.0);
}

double static Layout.ParticipantAlertViews.minimumHeight.getter()
{
  return 47.0;
}

__n128 Layout.InCallControls.init()@<Q0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C378C670;
  *(_OWORD *)(a1 + 16) = xmmword_1C378C680;
  *(_OWORD *)(a1 + 32) = xmmword_1C378C690;
  *(_OWORD *)(a1 + 48) = xmmword_1C378C6A0;
  *(_OWORD *)(a1 + 64) = xmmword_1C378C6B0;
  *(_OWORD *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C6C0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 112) = xmmword_1C378C6D0;
  *(_OWORD *)(a1 + 128) = xmmword_1C378C6E0;
  *(_OWORD *)(a1 + 144) = xmmword_1C378C6F0;
  *(_OWORD *)(a1 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C700;
  *(_OWORD *)(a1 + 176) = xmmword_1C378C710;
  *(_OWORD *)(a1 + 192) = xmmword_1C378C720;
  *(_OWORD *)(a1 + 208) = xmmword_1C378C730;
  *(_OWORD *)(a1 + 224) = xmmword_1C378C740;
  *(_OWORD *)(a1 + 24ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C750;
  *(_OWORD *)(a1 + 256) = xmmword_1C378C760;
  *(_OWORD *)(a1 + 272) = xmmword_1C37757C0;
  *(_OWORD *)(a1 + 288) = xmmword_1C378C780;
  *(_OWORD *)(a1 + 304) = xmmword_1C378C790;
  *(_OWORD *)(a1 + 32ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C7A0;
  *(_OWORD *)(a1 + 336) = xmmword_1C378C7B0;
  *(_OWORD *)(a1 + 352) = xmmword_1C378C7C0;
  __asm { FMOV            V1.2D, #17.0 }
  *(_OWORD *)(a1 + 368) = xmmword_1C378C7D0;
  *(_OWORD *)(a1 + 384) = _Q1;
  *(_OWORD *)(a1 + 40ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C7E0;
  *(_OWORD *)(a1 + 416) = xmmword_1C378C7F0;
  *(_OWORD *)(a1 + 432) = xmmword_1C378C800;
  *(_OWORD *)(a1 + 448) = xmmword_1C378C810;
  *(_OWORD *)(a1 + 464) = xmmword_1C378C820;
  *(_OWORD *)(a1 + 48ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C830;
  *(_OWORD *)(a1 + 496) = xmmword_1C378C840;
  *(_OWORD *)(a1 + 512) = xmmword_1C378C850;
  __asm { FMOV            V1.2D, #8.0 }
  *(_OWORD *)(a1 + 528) = xmmword_1C378C860;
  *(_OWORD *)(a1 + 544) = _Q1;
  *(_OWORD *)(a1 + 56ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C870;
  *(_OWORD *)(a1 + 576) = xmmword_1C378C880;
  *(_OWORD *)(a1 + 592) = xmmword_1C378C890;
  *(_OWORD *)(a1 + 608) = xmmword_1C378C8A0;
  *(_OWORD *)(a1 + 624) = xmmword_1C378C8B0;
  *(_OWORD *)(a1 + 64ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = xmmword_1C378C8C0;
  *(_OWORD *)(a1 + 656) = xmmword_1C378C8D0;
  *(_OWORD *)(a1 + 672) = xmmword_1C378C8E0;
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)(a1 + 688) = _Q0;
  *(_OWORD *)(a1 + 704) = xmmword_1C378C8F0;
  OUTLINED_FUNCTION_21_58(a1, (__n128)xmmword_1C378C900);
  return result;
}

uint64_t (*Layout.InCallControls.hotdogTopOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.glowScale.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.controlsTopOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.actionButtonSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.messagesButtonSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.copyLinkButtonImageSpacing.getter()
{
  return *(double *)(v0 + 40);
}

void Layout.InCallControls.copyLinkButtonImageSpacing.setter(double a1)
{
  *(double *)(v1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.copyLinkButtonImageSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.liveCaptionButtonImageSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.liveCaptionButtonEdgeSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.liveCaptionButtonInnnerSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.changeLayoutButtonImageSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.buttonlabelTopOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.buttonlabelInterButtonSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListHorizontalInset.getter()
{
  return *(double *)(v0 + 96);
}

void Layout.InCallControls.participantListHorizontalInset.setter(double a1)
{
  *(double *)(v1 + 96) = a1;
}

uint64_t (*Layout.InCallControls.participantListHorizontalInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListBottomInset.getter()
{
  return *(double *)(v0 + 104);
}

void Layout.InCallControls.participantListBottomInset.setter(double a1)
{
  *(double *)(v1 + 104) = a1;
}

uint64_t (*Layout.InCallControls.participantListBottomInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListContentVerticalInset.getter()
{
  return *(double *)(v0 + 112);
}

void Layout.InCallControls.participantListContentVerticalInset.setter(double a1)
{
  *(double *)(v1 + 112) = a1;
}

uint64_t (*Layout.InCallControls.participantListContentVerticalInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListInnerItemSpacing.getter()
{
  return *(double *)(v0 + 120);
}

void Layout.InCallControls.participantListInnerItemSpacing.setter(double a1)
{
  *(double *)(v1 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.participantListInnerItemSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListInnerLmiButtonSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListAvatarToLabelSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListTitleHeightOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListSubtitleIconSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListMessagesButtonSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListAvatarSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListContentHorizontalLeadingInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListContentHorizontalTrailingInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.parcitipantListFooterInterItemSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.headerAvatarDiameter.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.headerAvatarTopInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.headerTitleTopPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.headerSubtitleTopPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.headerSubtitleBottomPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.headerSubtitleImageOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantRowHeight.getter()
{
  return *(double *)(v0 + 248);
}

void Layout.InCallControls.participantRowHeight.setter(double a1)
{
  *(double *)(v1 + 248) = a1;
}

uint64_t (*Layout.InCallControls.participantRowHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListLargeTitleVerticalInset.getter()
{
  return *(double *)(v0 + 256);
}

void Layout.InCallControls.participantListLargeTitleVerticalInset.setter(double a1)
{
  *(double *)(v1 + 256) = a1;
}

uint64_t (*Layout.InCallControls.participantListLargeTitleVerticalInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListSummaryIconSize.getter()
{
  return *(double *)(v0 + 264);
}

void Layout.InCallControls.participantListSummaryIconSize.setter(double a1)
{
  *(double *)(v1 + 264) = a1;
}

uint64_t (*Layout.InCallControls.participantListSummaryIconSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListSummaryHorizontalLeadingInset.getter()
{
  return *(double *)(v0 + 272);
}

void Layout.InCallControls.participantListSummaryHorizontalLeadingInset.setter(double a1)
{
  *(double *)(v1 + 272) = a1;
}

uint64_t (*Layout.InCallControls.participantListSummaryHorizontalLeadingInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListSummaryInnerItemSpacing.getter()
{
  return *(double *)(v0 + 280);
}

void Layout.InCallControls.participantListSummaryInnerItemSpacing.setter(double a1)
{
  *(double *)(v1 + 28ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.participantListSummaryInnerItemSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListDiscButtonSize.getter()
{
  return *(double *)(v0 + 288);
}

void Layout.InCallControls.participantListDiscButtonSize.setter(double a1)
{
  *(double *)(v1 + 288) = a1;
}

uint64_t (*Layout.InCallControls.participantListDiscButtonSize.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListPillButtonMinimumHeight.getter()
{
  return *(double *)(v0 + 296);
}

void Layout.InCallControls.participantListPillButtonMinimumHeight.setter(double a1)
{
  *(double *)(v1 + 296) = a1;
}

uint64_t (*Layout.InCallControls.participantListPillButtonMinimumHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListInnerLabelSpacing.getter()
{
  return *(double *)(v0 + 304);
}

void Layout.InCallControls.participantListInnerLabelSpacing.setter(double a1)
{
  *(double *)(v1 + 304) = a1;
}

uint64_t (*Layout.InCallControls.participantListInnerLabelSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListActionButtonHorizontalInset.getter()
{
  return *(double *)(v0 + 312);
}

void Layout.InCallControls.participantListActionButtonHorizontalInset.setter(double a1)
{
  *(double *)(v1 + 312) = a1;
}

uint64_t (*Layout.InCallControls.participantListActionButtonHorizontalInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.addParticipantLabelLeading.getter()
{
  return *(double *)(v0 + 320);
}

void Layout.InCallControls.addParticipantLabelLeading.setter(double a1)
{
  *(double *)(v1 + 32ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.addParticipantLabelLeading.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.addParticipantLabelTopInset.getter()
{
  return *(double *)(v0 + 328);
}

void Layout.InCallControls.addParticipantLabelTopInset.setter(double a1)
{
  *(double *)(v1 + 328) = a1;
}

uint64_t (*Layout.InCallControls.addParticipantLabelTopInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.addParticipantLabelBottomInset.getter()
{
  return *(double *)(v0 + 336);
}

void Layout.InCallControls.addParticipantLabelBottomInset.setter(double a1)
{
  *(double *)(v1 + 336) = a1;
}

uint64_t (*Layout.InCallControls.addParticipantLabelBottomInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.currentActivitySectionHeaderLeadingInset.getter()
{
  return *(double *)(v0 + 344);
}

void Layout.InCallControls.currentActivitySectionHeaderLeadingInset.setter(double a1)
{
  *(double *)(v1 + 344) = a1;
}

uint64_t (*Layout.InCallControls.currentActivitySectionHeaderLeadingInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.currentActivitySectionHeaderBottomInset.getter()
{
  return *(double *)(v0 + 352);
}

void Layout.InCallControls.currentActivitySectionHeaderBottomInset.setter(double a1)
{
  *(double *)(v1 + 352) = a1;
}

uint64_t (*Layout.InCallControls.currentActivitySectionHeaderBottomInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.currentActivitySectionHeaderTopInset.getter()
{
  return *(double *)(v0 + 360);
}

void Layout.InCallControls.currentActivitySectionHeaderTopInset.setter(double a1)
{
  *(double *)(v1 + 36ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.currentActivitySectionHeaderTopInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.currentActivitySmallHeight.getter()
{
  return *(double *)(v0 + 368);
}

void Layout.InCallControls.currentActivitySmallHeight.setter(double a1)
{
  *(double *)(v1 + 368) = a1;
}

uint64_t (*Layout.InCallControls.currentActivitySmallHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.currentActivityDefaultHeight.getter()
{
  return *(double *)(v0 + 376);
}

void Layout.InCallControls.currentActivityDefaultHeight.setter(double a1)
{
  *(double *)(v1 + 376) = a1;
}

uint64_t (*Layout.InCallControls.currentActivityDefaultHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.effectsDockTopOffset.getter()
{
  return *(double *)(v0 + 384);
}

void Layout.InCallControls.effectsDockTopOffset.setter(double a1)
{
  *(double *)(v1 + 384) = a1;
}

uint64_t (*Layout.InCallControls.effectsDockTopOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.effectsDockExpandedTopOffset.getter()
{
  return *(double *)(v0 + 392);
}

void Layout.InCallControls.effectsDockExpandedTopOffset.setter(double a1)
{
  *(double *)(v1 + 392) = a1;
}

uint64_t (*Layout.InCallControls.effectsDockExpandedTopOffset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.effectsDockRegularSpacing.getter()
{
  return *(double *)(v0 + 400);
}

void Layout.InCallControls.effectsDockRegularSpacing.setter(double a1)
{
  *(double *)(v1 + 40ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.effectsDockRegularSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.effectsDockExpandedSpacing.getter()
{
  return *(double *)(v0 + 408);
}

void Layout.InCallControls.effectsDockExpandedSpacing.setter(double a1)
{
  *(double *)(v1 + 408) = a1;
}

uint64_t (*Layout.InCallControls.effectsDockExpandedSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListVerticalLabelSpacing.getter()
{
  return *(double *)(v0 + 416);
}

void Layout.InCallControls.participantListVerticalLabelSpacing.setter(double a1)
{
  *(double *)(v1 + 416) = a1;
}

uint64_t (*Layout.InCallControls.participantListVerticalLabelSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.addParticipantNameLabelLeadingInset.getter()
{
  return *(double *)(v0 + 424);
}

void Layout.InCallControls.addParticipantNameLabelLeadingInset.setter(double a1)
{
  *(double *)(v1 + 424) = a1;
}

uint64_t (*Layout.InCallControls.addParticipantNameLabelLeadingInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.addParticipantNameLabelTrailingInset.getter()
{
  return *(double *)(v0 + 432);
}

void Layout.InCallControls.addParticipantNameLabelTrailingInset.setter(double a1)
{
  *(double *)(v1 + 432) = a1;
}

uint64_t (*Layout.InCallControls.addParticipantNameLabelTrailingInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListTopSpacing.getter()
{
  return *(double *)(v0 + 440);
}

void Layout.InCallControls.participantListTopSpacing.setter(double a1)
{
  *(double *)(v1 + 44ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.participantListTopSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.callControlsInset.getter()
{
  return *(double *)(v0 + 448);
}

void Layout.InCallControls.callControlsInset.setter(double a1)
{
  *(double *)(v1 + 448) = a1;
}

uint64_t (*Layout.InCallControls.callControlsInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.callControlsPadding.getter()
{
  return *(double *)(v0 + 456);
}

void Layout.InCallControls.callControlsPadding.setter(double a1)
{
  *(double *)(v1 + 456) = a1;
}

uint64_t (*Layout.InCallControls.callControlsPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.imageButtonRadius.getter()
{
  return *(double *)(v0 + 464);
}

void Layout.InCallControls.imageButtonRadius.setter(double a1)
{
  *(double *)(v1 + 464) = a1;
}

uint64_t (*Layout.InCallControls.imageButtonRadius.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.pillButtonContentHorizontalInset.getter()
{
  return *(double *)(v0 + 472);
}

void Layout.InCallControls.pillButtonContentHorizontalInset.setter(double a1)
{
  *(double *)(v1 + 472) = a1;
}

uint64_t (*Layout.InCallControls.pillButtonContentHorizontalInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.pillButtonContentVerticalInset.getter()
{
  return *(double *)(v0 + 480);
}

void Layout.InCallControls.pillButtonContentVerticalInset.setter(double a1)
{
  *(double *)(v1 + 48ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.pillButtonContentVerticalInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.pillButtonMinimumWidth.getter()
{
  return *(double *)(v0 + 488);
}

void Layout.InCallControls.pillButtonMinimumWidth.setter(double a1)
{
  *(double *)(v1 + 488) = a1;
}

uint64_t (*Layout.InCallControls.pillButtonMinimumWidth.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.pillButtonMinimumHeight.getter()
{
  return *(double *)(v0 + 496);
}

void Layout.InCallControls.pillButtonMinimumHeight.setter(double a1)
{
  *(double *)(v1 + 496) = a1;
}

uint64_t (*Layout.InCallControls.pillButtonMinimumHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.lmiCountdownButtonPadding.getter()
{
  return *(double *)(v0 + 504);
}

void Layout.InCallControls.lmiCountdownButtonPadding.setter(double a1)
{
  *(double *)(v1 + 504) = a1;
}

uint64_t (*Layout.InCallControls.lmiCountdownButtonPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.lmiButtonRadius.getter()
{
  return *(double *)(v0 + 512);
}

void Layout.InCallControls.lmiButtonRadius.setter(double a1)
{
  *(double *)(v1 + 512) = a1;
}

uint64_t (*Layout.InCallControls.lmiButtonRadius.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.tableViewCellHeight.getter()
{
  return *(double *)(v0 + 520);
}

void Layout.InCallControls.tableViewCellHeight.setter(double a1)
{
  *(double *)(v1 + 52ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.tableViewCellHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.tableViewFooterCellHeight.getter()
{
  return *(double *)(v0 + 528);
}

void Layout.InCallControls.tableViewFooterCellHeight.setter(double a1)
{
  *(double *)(v1 + 528) = a1;
}

uint64_t (*Layout.InCallControls.tableViewFooterCellHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.toggleButtonVerticalSpacing.getter()
{
  return *(double *)(v0 + 536);
}

void Layout.InCallControls.toggleButtonVerticalSpacing.setter(double a1)
{
  *(double *)(v1 + 536) = a1;
}

uint64_t (*Layout.InCallControls.toggleButtonVerticalSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.footerButtonInterItemSpacing.getter()
{
  return *(double *)(v0 + 544);
}

void Layout.InCallControls.footerButtonInterItemSpacing.setter(double a1)
{
  *(double *)(v1 + 544) = a1;
}

uint64_t (*Layout.InCallControls.footerButtonInterItemSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.actionButtonHorizontalPadding.getter()
{
  return *(double *)(v0 + 552);
}

void Layout.InCallControls.actionButtonHorizontalPadding.setter(double a1)
{
  *(double *)(v1 + 552) = a1;
}

uint64_t (*Layout.InCallControls.actionButtonHorizontalPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.actionButtonVerticalPadding.getter()
{
  return *(double *)(v0 + 560);
}

void Layout.InCallControls.actionButtonVerticalPadding.setter(double a1)
{
  *(double *)(v1 + 56ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.actionButtonVerticalPadding.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.footerButtonHeight.getter()
{
  return *(double *)(v0 + 568);
}

void Layout.InCallControls.footerButtonHeight.setter(double a1)
{
  *(double *)(v1 + 568) = a1;
}

uint64_t (*Layout.InCallControls.footerButtonHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.footerButtonLeadingTrailingInset.getter()
{
  return *(double *)(v0 + 576);
}

void Layout.InCallControls.footerButtonLeadingTrailingInset.setter(double a1)
{
  *(double *)(v1 + 576) = a1;
}

uint64_t (*Layout.InCallControls.footerButtonLeadingTrailingInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.callControlsHeight.getter()
{
  return *(double *)(v0 + 584);
}

void Layout.InCallControls.callControlsHeight.setter(double a1)
{
  *(double *)(v1 + 584) = a1;
}

uint64_t (*Layout.InCallControls.callControlsHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.callControlsWidth.getter()
{
  return *(double *)(v0 + 592);
}

void Layout.InCallControls.callControlsWidth.setter(double a1)
{
  *(double *)(v1 + 592) = a1;
}

uint64_t (*Layout.InCallControls.callControlsWidth.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.callControlsExtraButtonWidth.getter()
{
  return *(double *)(v0 + 600);
}

void Layout.InCallControls.callControlsExtraButtonWidth.setter(double a1)
{
  *(double *)(v1 + 60ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.callControlsExtraButtonWidth.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.detailsSectionActivityTopInset.getter()
{
  return *(double *)(v0 + 608);
}

void Layout.InCallControls.detailsSectionActivityTopInset.setter(double a1)
{
  *(double *)(v1 + 608) = a1;
}

uint64_t (*Layout.InCallControls.detailsSectionActivityTopInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.detailsSectionDefaultBottomInset.getter()
{
  return *(double *)(v0 + 616);
}

void Layout.InCallControls.detailsSectionDefaultBottomInset.setter(double a1)
{
  *(double *)(v1 + 616) = a1;
}

uint64_t (*Layout.InCallControls.detailsSectionDefaultBottomInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.listLeadingContentInset.getter()
{
  return *(double *)(v0 + 624);
}

void Layout.InCallControls.listLeadingContentInset.setter(double a1)
{
  *(double *)(v1 + 624) = a1;
}

uint64_t (*Layout.InCallControls.listLeadingContentInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.listTrailingContentInset.getter()
{
  return *(double *)(v0 + 632);
}

void Layout.InCallControls.listTrailingContentInset.setter(double a1)
{
  *(double *)(v1 + 632) = a1;
}

uint64_t (*Layout.InCallControls.listTrailingContentInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.listWidth.getter()
{
  return *(double *)(v0 + 640);
}

void Layout.InCallControls.listWidth.setter(double a1)
{
  *(double *)(v1 + 64ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.listWidth.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.listMinHeight.getter()
{
  return *(double *)(v0 + 648);
}

void Layout.InCallControls.listMinHeight.setter(double a1)
{
  *(double *)(v1 + 648) = a1;
}

uint64_t (*Layout.InCallControls.listMinHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.listMaxHeight.getter()
{
  return *(double *)(v0 + 656);
}

void Layout.InCallControls.listMaxHeight.setter(double a1)
{
  *(double *)(v1 + 656) = a1;
}

uint64_t (*Layout.InCallControls.listMaxHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.detailsSectionHeaderBottomInset.getter()
{
  return *(double *)(v0 + 664);
}

void Layout.InCallControls.detailsSectionHeaderBottomInset.setter(double a1)
{
  *(double *)(v1 + 664) = a1;
}

uint64_t (*Layout.InCallControls.detailsSectionHeaderBottomInset.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.detailsTitleCellMinimumHeight.getter()
{
  return *(double *)(v0 + 672);
}

void Layout.InCallControls.detailsTitleCellMinimumHeight.setter(double a1)
{
  *(double *)(v1 + 672) = a1;
}

uint64_t (*Layout.InCallControls.detailsTitleCellMinimumHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListTopLabelSpacing.getter()
{
  return *(double *)(v0 + 680);
}

void Layout.InCallControls.participantListTopLabelSpacing.setter(double a1)
{
  *(double *)(v1 + 68ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.participantListTopLabelSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListBottomLabelSpacing.getter()
{
  return *(double *)(v0 + 688);
}

void Layout.InCallControls.participantListBottomLabelSpacing.setter(double a1)
{
  *(double *)(v1 + 688) = a1;
}

uint64_t (*Layout.InCallControls.participantListBottomLabelSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.minumumButtonLabelSpacing.getter()
{
  return *(double *)(v0 + 696);
}

void Layout.InCallControls.minumumButtonLabelSpacing.setter(double a1)
{
  *(double *)(v1 + 696) = a1;
}

uint64_t (*Layout.InCallControls.minumumButtonLabelSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.interButtonRowVerticalSpacing.getter()
{
  return *(double *)(v0 + 704);
}

void Layout.InCallControls.interButtonRowVerticalSpacing.setter(double a1)
{
  *(double *)(v1 + 704) = a1;
}

uint64_t (*Layout.InCallControls.interButtonRowVerticalSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.interButtonSecondRowVerticalSpacing.getter()
{
  return *(double *)(v0 + 712);
}

void Layout.InCallControls.interButtonSecondRowVerticalSpacing.setter(double a1)
{
  *(double *)(v1 + 712) = a1;
}

uint64_t (*Layout.InCallControls.interButtonSecondRowVerticalSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.secondButtonRowHeight.getter()
{
  return *(double *)(v0 + 720);
}

void Layout.InCallControls.secondButtonRowHeight.setter(double a1)
{
  *(double *)(v1 + 72ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

uint64_t (*Layout.InCallControls.secondButtonRowHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.lastButtonRowVerticalSpacing.getter()
{
  return *(double *)(v0 + 728);
}

void Layout.InCallControls.lastButtonRowVerticalSpacing.setter(double a1)
{
  *(double *)(v1 + 728) = a1;
}

uint64_t (*Layout.InCallControls.lastButtonRowVerticalSpacing.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.shareLinkButtonHeight.getter()
{
  return *(double *)(v0 + 736);
}

void Layout.InCallControls.shareLinkButtonHeight.setter(double a1)
{
  *(double *)(v1 + 736) = a1;
}

uint64_t (*Layout.InCallControls.shareLinkButtonHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.liveCaptionButtonHeight.getter()
{
  return *(double *)(v0 + 744);
}

void Layout.InCallControls.liveCaptionButtonHeight.setter(double a1)
{
  *(double *)(v1 + 744) = a1;
}

uint64_t (*Layout.InCallControls.liveCaptionButtonHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.openMessagesButtonHeight.getter()
{
  return *(double *)(v0 + 752);
}

void Layout.InCallControls.openMessagesButtonHeight.setter(double a1)
{
  *(double *)(v1 + 752) = a1;
}

uint64_t (*Layout.InCallControls.openMessagesButtonHeight.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *Layout.InCallControlsButton.pillDefaultAspectRatio.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.pillDefaultAspectRatio;
}

double static Layout.InCallControlsButton.pillDefaultAspectRatio.getter()
{
  return 1.71428571;
}

double static Layout.InCallControlsButton.pillMinimumHeight.getter()
{
  return OUTLINED_FUNCTION_14_0(42.0);
}

double static Layout.InCallControlsButton.pillMinimumWidth.getter()
{
  return OUTLINED_FUNCTION_14_0(72.0);
}

void *Layout.ParticipantContactAvatars.minSize.unsafeMutableAddressor()
{
  return &static Layout.ParticipantContactAvatars.minSize;
}

double static Layout.ParticipantContactAvatars.minSize.getter()
{
  return OUTLINED_FUNCTION_14_0(40.0);
}

void *Layout.ParticipantContactAvatars.maxSize.unsafeMutableAddressor()
{
  return &static Layout.ParticipantContactAvatars.maxSize;
}

double static Layout.ParticipantContactAvatars.maxSize.getter()
{
  return 125.0;
}

void *Layout.ParticipantRingView.morphingCircleDiameter.unsafeMutableAddressor()
{
  return &static Layout.ParticipantRingView.morphingCircleDiameter;
}

double static Layout.ParticipantRingView.morphingCircleDiameter.getter()
{
  return 135.0;
}

void *Layout.ParticipantRingView.stroke.unsafeMutableAddressor()
{
  return &static Layout.ParticipantRingView.stroke;
}

void *Layout.Staging.participantLabelHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.Staging.participantLabelHorizontalInset;
}

void *Layout.Staging.participantLabelNumberOfLines.unsafeMutableAddressor()
{
  return &static Layout.Staging.participantLabelNumberOfLines;
}

uint64_t static Layout.Staging.participantLabelNumberOfLines.getter()
{
  return 2;
}

void *Layout.Staging.participantLabelBaseline.unsafeMutableAddressor()
{
  return &static Layout.Staging.participantLabelBaseline;
}

double static Layout.Staging.participantLabelBaseline.getter()
{
  return 75.0;
}

void *Layout.Staging.secondaryParticipantLabelBaseline.unsafeMutableAddressor()
{
  return &static Layout.Staging.secondaryParticipantLabelBaseline;
}

double one-time initialization function for transcriptVerticalSize()
{
  id v0 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v0, sel_bounds);
  double v2 = v1;

  double result = v2 * 0.45;
  *(double *)&static Layout.Captions.transcriptVerticalSize = v2 * 0.45;
  return result;
}

double static Layout.Captions.transcriptVerticalSize.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for transcriptVerticalSize, (uint64_t)&static Layout.Captions.transcriptVerticalSize);
}

double static Layout.Captions.lineHeight.getter()
{
  id v0 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v0, sel_lineHeight);
  double v2 = v1;

  return v2;
}

void *Layout.Captions.bubbleLines.unsafeMutableAddressor()
{
  return &static Layout.Captions.bubbleLines;
}

uint64_t static Layout.Captions.bubbleLines.getter()
{
  return 5;
}

void one-time initialization function for scrollGradientFraction()
{
  static Layout.Captions.scrollGradientFraction = 0x3FD0000000000000;
}

uint64_t *Layout.Captions.scrollGradientFraction.unsafeMutableAddressor()
{
  if (one-time initialization token for scrollGradientFraction != -1) {
    swift_once();
  }
  return &static Layout.Captions.scrollGradientFraction;
}

double static Layout.Captions.scrollGradientFraction.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for scrollGradientFraction, (uint64_t)&static Layout.Captions.scrollGradientFraction);
}

void *Layout.Captions.captionHeightBias.unsafeMutableAddressor()
{
  return &static Layout.Captions.captionHeightBias;
}

double static Layout.Captions.captionHeightBias.getter()
{
  return -1.0;
}

double static Layout.Captions.bubbleHeight.getter()
{
  if (one-time initialization token for bubblePadding != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_0();
  double v0 = *(double *)&static Layout.Captions.bubblePadding + *(double *)&static Layout.Captions.bubblePadding;
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v1, sel_lineHeight);
  double v3 = v2;

  return v0 + v3 * 5.0 + -1.0;
}

uint64_t *Layout.Captions.bubblePadding.unsafeMutableAddressor()
{
  if (one-time initialization token for bubblePadding != -1) {
    swift_once();
  }
  return &static Layout.Captions.bubblePadding;
}

void one-time initialization function for margin()
{
  static Layout.Captions.margin = 0x4024000000000000;
}

double static Layout.Captions.margin.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for margin, (uint64_t)&static Layout.Captions.margin);
}

void one-time initialization function for transcriptSidebarWidth()
{
  static Layout.Captions.transcriptSidebarCGFloat Width = 0x4074000000000000;
}

double static Layout.Captions.transcriptSidebarWidth.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for transcriptSidebarWidth, (uint64_t)&static Layout.Captions.transcriptSidebarWidth);
}

uint64_t *Layout.Captions.cornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for cornerRadius != -1) {
    swift_once();
  }
  return &static Layout.Captions.cornerRadius;
}

double static Layout.Captions.cornerRadius.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for cornerRadius, (uint64_t)&static Layout.Captions.cornerRadius);
}

double one-time initialization function for sizeToggleButtonSize()
{
  if (one-time initialization token for headerImageSize != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_0();
  double result = *(double *)&static Layout.Captions.headerImageSize;
  static Layout.Captions.sizeToggleButtonSize = static Layout.Captions.headerImageSize;
  return result;
}

uint64_t *Layout.Captions.headerImageSize.unsafeMutableAddressor()
{
  if (one-time initialization token for headerImageSize != -1) {
    swift_once();
  }
  return &static Layout.Captions.headerImageSize;
}

uint64_t *Layout.Captions.sizeToggleButtonSize.unsafeMutableAddressor()
{
  if (one-time initialization token for sizeToggleButtonSize != -1) {
    swift_once();
  }
  return &static Layout.Captions.sizeToggleButtonSize;
}

double static Layout.Captions.sizeToggleButtonSize.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for sizeToggleButtonSize, (uint64_t)&static Layout.Captions.sizeToggleButtonSize);
}

void one-time initialization function for bubblePadding()
{
  static Layout.Captions.bubblePadding = 0x402A000000000000;
}

double static Layout.Captions.bubblePadding.getter()
{
  return static Layout.Captions.bubblePadding.getter((uint64_t)&one-time initialization token for bubblePadding, (uint64_t)&static Layout.Captions.bubblePadding);
}

uint64_t static Layout.Captions.bubblePadding.setter(double a1)
{
  return static Layout.Captions.bubblePadding.setter(a1, (uint64_t)&one-time initialization token for bubblePadding, (double *)&static Layout.Captions.bubblePadding);
}

uint64_t (*static Layout.Captions.bubblePadding.modify())()
{
  if (one-time initialization token for bubblePadding != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_9();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t *Layout.Captions.transcriptTrailingOffset.unsafeMutableAddressor()
{
  return &static Layout.Captions.transcriptTrailingOffset;
}

double static Layout.Captions.transcriptTrailingOffset.getter()
{
  return *(double *)&static Layout.Captions.transcriptTrailingOffset;
}

uint64_t static Layout.Captions.transcriptTrailingOffset.setter(double a1)
{
  uint64_t result = OUTLINED_FUNCTION_11_82();
  static Layout.Captions.transcriptTrailingOffset = *(void *)&a1;
  return result;
}

uint64_t (*static Layout.Captions.transcriptTrailingOffset.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

double static Layout.Captions.scrollGradientHeight.getter()
{
  if (one-time initialization token for scrollGradientFraction != -1) {
    swift_once();
  }
  double v0 = *(double *)&static Layout.Captions.scrollGradientFraction;
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v1, sel_lineHeight);
  double v3 = v2;

  return v0 * v3;
}

void one-time initialization function for headerImageSize()
{
  static Layout.Captions.headerImageSize = 0x4040000000000000;
}

double static Layout.Captions.headerImageSize.getter()
{
  return static Layout.Captions.bubblePadding.getter((uint64_t)&one-time initialization token for headerImageSize, (uint64_t)&static Layout.Captions.headerImageSize);
}

uint64_t static Layout.Captions.headerImageSize.setter(double a1)
{
  return static Layout.Captions.bubblePadding.setter(a1, (uint64_t)&one-time initialization token for headerImageSize, (double *)&static Layout.Captions.headerImageSize);
}

uint64_t (*static Layout.Captions.headerImageSize.modify())()
{
  if (one-time initialization token for headerImageSize != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_9();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

void one-time initialization function for headerSmallImageSize()
{
  static Layout.Captions.headerSmallImageSize = 0x4030000000000000;
}

uint64_t *Layout.Captions.headerSmallImageSize.unsafeMutableAddressor()
{
  if (one-time initialization token for headerSmallImageSize != -1) {
    swift_once();
  }
  return &static Layout.Captions.headerSmallImageSize;
}

double static Layout.Captions.headerSmallImageSize.getter()
{
  return static Layout.Captions.bubblePadding.getter((uint64_t)&one-time initialization token for headerSmallImageSize, (uint64_t)&static Layout.Captions.headerSmallImageSize);
}

uint64_t static Layout.Captions.headerSmallImageSize.setter(double a1)
{
  return static Layout.Captions.bubblePadding.setter(a1, (uint64_t)&one-time initialization token for headerSmallImageSize, (double *)&static Layout.Captions.headerSmallImageSize);
}

uint64_t (*static Layout.Captions.headerSmallImageSize.modify())()
{
  if (one-time initialization token for headerSmallImageSize != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_9();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

void static Layout.Captions.bubbleHorizontalPadding.getter()
{
  if (one-time initialization token for bubblePadding != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_0();
  if (one-time initialization token for scrollGradientFraction != -1) {
    swift_once();
  }
  id v0 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v0, sel_lineHeight);
}

void one-time initialization function for bubbleAvatarPadding()
{
  static Layout.Captions.bubbleAvatarPadding = 0x4020000000000000;
}

uint64_t *Layout.Captions.bubbleAvatarPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for bubbleAvatarPadding != -1) {
    swift_once();
  }
  return &static Layout.Captions.bubbleAvatarPadding;
}

double static Layout.Captions.bubbleAvatarPadding.getter()
{
  return static Layout.Captions.bubblePadding.getter((uint64_t)&one-time initialization token for bubbleAvatarPadding, (uint64_t)&static Layout.Captions.bubbleAvatarPadding);
}

uint64_t static Layout.Captions.bubbleAvatarPadding.setter(double a1)
{
  return static Layout.Captions.bubblePadding.setter(a1, (uint64_t)&one-time initialization token for bubbleAvatarPadding, (double *)&static Layout.Captions.bubbleAvatarPadding);
}

uint64_t (*static Layout.Captions.bubbleAvatarPadding.modify())()
{
  if (one-time initialization token for bubbleAvatarPadding != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_9();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

void one-time initialization function for bubbleMiniAvatarPadding()
{
  static Layout.Captions.bubbleMiniAvatarPadding = 0x4010000000000000;
}

uint64_t *Layout.Captions.bubbleMiniAvatarPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for bubbleMiniAvatarPadding != -1) {
    swift_once();
  }
  return &static Layout.Captions.bubbleMiniAvatarPadding;
}

double static Layout.Captions.bubbleMiniAvatarPadding.getter()
{
  return static Layout.Captions.bubblePadding.getter((uint64_t)&one-time initialization token for bubbleMiniAvatarPadding, (uint64_t)&static Layout.Captions.bubbleMiniAvatarPadding);
}

uint64_t static Layout.Captions.bubbleMiniAvatarPadding.setter(double a1)
{
  return static Layout.Captions.bubblePadding.setter(a1, (uint64_t)&one-time initialization token for bubbleMiniAvatarPadding, (double *)&static Layout.Captions.bubbleMiniAvatarPadding);
}

uint64_t (*static Layout.Captions.bubbleMiniAvatarPadding.modify())()
{
  if (one-time initialization token for bubbleMiniAvatarPadding != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_9();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

void one-time initialization function for bubbleSnapDistance()
{
  static Layout.Captions.bubbleSnapDistance = 0x4062C00000000000;
}

double static Layout.Captions.bubbleSnapDistance.getter()
{
  return static Layout.Captions.bubblePadding.getter((uint64_t)&one-time initialization token for bubbleSnapDistance, (uint64_t)&static Layout.Captions.bubbleSnapDistance);
}

double static Layout.Captions.bubblePadding.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27_53();
  if (!v3) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_0();
  return *(double *)a2;
}

uint64_t static Layout.Captions.bubbleSnapDistance.setter(double a1)
{
  return static Layout.Captions.bubblePadding.setter(a1, (uint64_t)&one-time initialization token for bubbleSnapDistance, (double *)&static Layout.Captions.bubbleSnapDistance);
}

uint64_t static Layout.Captions.bubblePadding.setter(double a1, uint64_t a2, double *a3)
{
  OUTLINED_FUNCTION_27_53();
  if (!v5) {
    swift_once();
  }
  uint64_t result = OUTLINED_FUNCTION_11_82();
  *a3 = a1;
  return result;
}

uint64_t (*static Layout.Captions.bubbleSnapDistance.modify())()
{
  if (one-time initialization token for bubbleSnapDistance != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_9();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

void one-time initialization function for subtitleCornerRadius()
{
  static Layout.Captions.subtitleCornerRadius = 0x4028000000000000;
}

uint64_t *Layout.Captions.subtitleCornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleCornerRadius != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleCornerRadius;
}

double static Layout.Captions.subtitleCornerRadius.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleCornerRadius, (uint64_t)&static Layout.Captions.subtitleCornerRadius);
}

void one-time initialization function for subtitleSmallCornerRadius()
{
  static Layout.Captions.subtitleSmallCornerRadius = 0x4032000000000000;
}

uint64_t *Layout.Captions.subtitleSmallCornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleSmallCornerRadius != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleSmallCornerRadius;
}

double static Layout.Captions.subtitleSmallCornerRadius.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleSmallCornerRadius, (uint64_t)&static Layout.Captions.subtitleSmallCornerRadius);
}

id one-time initialization function for subtitleSmallFont()
{
  id result = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28D0]);
  static Layout.Captions.subtitleSmallFont = (uint64_t)result;
  return result;
}

uint64_t *Layout.Captions.subtitleSmallFont.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleSmallFont != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleSmallFont;
}

id static Layout.Captions.subtitleSmallFont.getter()
{
  return static Layout.Captions.subtitleSmallFont.getter((uint64_t)&one-time initialization token for subtitleSmallFont, (void **)&static Layout.Captions.subtitleSmallFont);
}

id one-time initialization function for subtitleFont()
{
  id result = objc_msgSend(self, sel_systemFontOfSize_weight_, 44.0, *MEMORY[0x1E4FB09D0]);
  static Layout.Captions.subtitleFont = (uint64_t)result;
  return result;
}

uint64_t *Layout.Captions.subtitleFont.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleFont != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleFont;
}

id static Layout.Captions.subtitleFont.getter()
{
  return static Layout.Captions.subtitleSmallFont.getter((uint64_t)&one-time initialization token for subtitleFont, (void **)&static Layout.Captions.subtitleFont);
}

id static Layout.Captions.subtitleSmallFont.getter(uint64_t a1, void **a2)
{
  OUTLINED_FUNCTION_27_53();
  if (!v3) {
    swift_once();
  }
  double v4 = *a2;
  return v4;
}

void one-time initialization function for subtitleStyleMinWidth()
{
  static Layout.Captions.subtitleStyleMinCGFloat Width = 0x4072C00000000000;
}

uint64_t *Layout.Captions.subtitleStyleMinWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleMinWidth != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleStyleMinWidth;
}

double static Layout.Captions.subtitleStyleMinWidth.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleStyleMinWidth, (uint64_t)&static Layout.Captions.subtitleStyleMinWidth);
}

void one-time initialization function for subtitleStyleMinWidthSmallLayout()
{
  static Layout.Captions.subtitleStyleMinWidthSmallLayout = 0x406F400000000000;
}

uint64_t *Layout.Captions.subtitleStyleMinWidthSmallLayout.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleMinWidthSmallLayout != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleStyleMinWidthSmallLayout;
}

double static Layout.Captions.subtitleStyleMinWidthSmallLayout.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleStyleMinWidthSmallLayout, (uint64_t)&static Layout.Captions.subtitleStyleMinWidthSmallLayout);
}

void one-time initialization function for subtitleStyleMaxWidth()
{
  static Layout.Captions.subtitleStyleMaxCGFloat Width = 0x408A300000000000;
}

uint64_t *Layout.Captions.subtitleStyleMaxWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleMaxWidth != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleStyleMaxWidth;
}

double static Layout.Captions.subtitleStyleMaxWidth.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleStyleMaxWidth, (uint64_t)&static Layout.Captions.subtitleStyleMaxWidth);
}

void one-time initialization function for subtitleStyleMaxWidthSmallLayout()
{
  static Layout.Captions.subtitleStyleMaxWidthSmallLayout = 0x4075C00000000000;
}

uint64_t *Layout.Captions.subtitleStyleMaxWidthSmallLayout.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleMaxWidthSmallLayout != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleStyleMaxWidthSmallLayout;
}

double static Layout.Captions.subtitleStyleMaxWidthSmallLayout.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleStyleMaxWidthSmallLayout, (uint64_t)&static Layout.Captions.subtitleStyleMaxWidthSmallLayout);
}

void one-time initialization function for subtitleStyleHorizontalPadding()
{
  static Layout.Captions.subtitleStyleHorizontalPadding = 0x4030000000000000;
}

uint64_t *Layout.Captions.subtitleStyleHorizontalPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleHorizontalPadding != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleStyleHorizontalPadding;
}

double static Layout.Captions.subtitleStyleHorizontalPadding.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleStyleHorizontalPadding, (uint64_t)&static Layout.Captions.subtitleStyleHorizontalPadding);
}

void one-time initialization function for subtitleStyleVerticalPadding()
{
  static Layout.Captions.subtitleStyleVerticalPadding = 0x401C000000000000;
}

uint64_t *Layout.Captions.subtitleStyleVerticalPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleVerticalPadding != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleStyleVerticalPadding;
}

double static Layout.Captions.subtitleStyleVerticalPadding.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleStyleVerticalPadding, (uint64_t)&static Layout.Captions.subtitleStyleVerticalPadding);
}

double one-time initialization function for subtitleStyleDefaultHeight()
{
  return one-time initialization function for subtitleStyleDefaultHeight();
}

{
  double *v0;
  id *v1;
  char v2;
  double v3;
  double v4;
  double result;

  OUTLINED_FUNCTION_84_9();
  if (!v2) {
    swift_once();
  }
  objc_msgSend(*v1, sel_lineHeight);
  double v4 = v3;
  if (one-time initialization token for subtitleStyleVerticalPadding != -1) {
    swift_once();
  }
  id result = v4
         + *(double *)&static Layout.Captions.subtitleStyleVerticalPadding
         + *(double *)&static Layout.Captions.subtitleStyleVerticalPadding;
  *id v0 = result;
  return result;
}

uint64_t *Layout.Captions.subtitleStyleDefaultHeight.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleDefaultHeight != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleStyleDefaultHeight;
}

double static Layout.Captions.subtitleStyleDefaultHeight.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleStyleDefaultHeight, (uint64_t)&static Layout.Captions.subtitleStyleDefaultHeight);
}

double one-time initialization function for subtitleStyleDefaultWidth()
{
  return one-time initialization function for subtitleStyleDefaultWidth();
}

{
  double *v0;
  double *v1;
  char v2;
  double v3;
  double result;

  OUTLINED_FUNCTION_84_9();
  if (!v2) {
    swift_once();
  }
  char v3 = *v1;
  if (one-time initialization token for subtitleStyleHorizontalPadding != -1) {
    swift_once();
  }
  id result = v3
         + *(double *)&static Layout.Captions.subtitleStyleHorizontalPadding
         + *(double *)&static Layout.Captions.subtitleStyleHorizontalPadding;
  *id v0 = result;
  return result;
}

uint64_t *Layout.Captions.subtitleStyleDefaultWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleDefaultWidth != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleStyleDefaultWidth;
}

double static Layout.Captions.subtitleStyleDefaultWidth.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleStyleDefaultWidth, (uint64_t)&static Layout.Captions.subtitleStyleDefaultWidth);
}

double one-time initialization function for subtitleStyleDefaultSmallHeight()
{
  return one-time initialization function for subtitleStyleDefaultHeight();
}

uint64_t *Layout.Captions.subtitleStyleDefaultSmallHeight.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleDefaultSmallHeight != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleStyleDefaultSmallHeight;
}

double static Layout.Captions.subtitleStyleDefaultSmallHeight.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleStyleDefaultSmallHeight, (uint64_t)&static Layout.Captions.subtitleStyleDefaultSmallHeight);
}

double one-time initialization function for subtitleStyleDefaultSmallWidth()
{
  return one-time initialization function for subtitleStyleDefaultWidth();
}

uint64_t *Layout.Captions.subtitleStyleDefaultSmallWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleDefaultSmallWidth != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleStyleDefaultSmallWidth;
}

double static Layout.Captions.subtitleStyleDefaultSmallWidth.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleStyleDefaultSmallWidth, (uint64_t)&static Layout.Captions.subtitleStyleDefaultSmallWidth);
}

void one-time initialization function for subtitleBadgeAvatarSmallSize()
{
  static Layout.Captions.subtitleBadgeAvatarSmallSize = 0x4040000000000000;
}

uint64_t *Layout.Captions.subtitleBadgeAvatarSmallSize.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleBadgeAvatarSmallSize != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleBadgeAvatarSmallSize;
}

double static Layout.Captions.subtitleBadgeAvatarSmallSize.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleBadgeAvatarSmallSize, (uint64_t)&static Layout.Captions.subtitleBadgeAvatarSmallSize);
}

void one-time initialization function for subtitleBadgeAvatarSize()
{
  static Layout.Captions.subtitleBadgeAvatarSize = 0x4044000000000000;
}

uint64_t *Layout.Captions.subtitleBadgeAvatarSize.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleBadgeAvatarSize != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleBadgeAvatarSize;
}

double static Layout.Captions.subtitleBadgeAvatarSize.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleBadgeAvatarSize, (uint64_t)&static Layout.Captions.subtitleBadgeAvatarSize);
}

void one-time initialization function for subtitleBadgeCornerRadius()
{
  static Layout.Captions.subtitleBadgeCornerRadius = 0x4039000000000000;
}

uint64_t *Layout.Captions.subtitleBadgeCornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleBadgeCornerRadius != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleBadgeCornerRadius;
}

double static Layout.Captions.subtitleBadgeCornerRadius.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleBadgeCornerRadius, (uint64_t)&static Layout.Captions.subtitleBadgeCornerRadius);
}

void one-time initialization function for subtitleBadgeTopLeadingBottomPadding()
{
  static Layout.Captions.subtitleBadgeTopLeadingBottomPadding = 0x4014000000000000;
}

uint64_t *Layout.Captions.subtitleBadgeTopLeadingBottomPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleBadgeTopLeadingBottomPadding != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleBadgeTopLeadingBottomPadding;
}

double static Layout.Captions.subtitleBadgeTopLeadingBottomPadding.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleBadgeTopLeadingBottomPadding, (uint64_t)&static Layout.Captions.subtitleBadgeTopLeadingBottomPadding);
}

void one-time initialization function for subtitleBadgeTrailingPadding()
{
  static Layout.Captions.subtitleBadgeTrailingPadding = 0x4039000000000000;
}

uint64_t *Layout.Captions.subtitleBadgeTrailingPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleBadgeTrailingPadding != -1) {
    swift_once();
  }
  return &static Layout.Captions.subtitleBadgeTrailingPadding;
}

double static Layout.Captions.subtitleBadgeTrailingPadding.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for subtitleBadgeTrailingPadding, (uint64_t)&static Layout.Captions.subtitleBadgeTrailingPadding);
}

void *Layout.DebugOverlay.minimumMarginsBetweenSections.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.minimumMarginsBetweenSections;
}

void *Layout.DebugOverlay.explanationLabelHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.explanationLabelHorizontalInset;
}

void *Layout.DebugOverlay.marginBetweenExplanationLabels.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.marginBetweenExplanationLabels;
}

void *Layout.DebugOverlay.buttonHeight.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.buttonHeight;
}

double static Layout.DebugOverlay.buttonHeight.getter()
{
  return OUTLINED_FUNCTION_14_0(40.0);
}

void *Layout.DebugOverlay.buttonCornerRadius.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.buttonCornerRadius;
}

void *Layout.DebugOverlay.buttonHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.buttonHorizontalInset;
}

void *Layout.DebugOverlay.buttonLabelHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.buttonLabelHorizontalInset;
}

void *Layout.DebugOverlay.marginBetweenButtons.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.marginBetweenButtons;
}

void *Layout.DebugOverlay.bottomVerticalInset.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.bottomVerticalInset;
}

double static Layout.DebugOverlay.bottomVerticalInset.getter()
{
  return OUTLINED_FUNCTION_14_0(60.0);
}

void *Layout.DebugOverlay.nameInputHeight.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.nameInputHeight;
}

double static Layout.DebugOverlay.nameInputHeight.getter()
{
  return OUTLINED_FUNCTION_14_0(60.0);
}

void *Layout.DebugOverlay.nameInputHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.nameInputHorizontalInset;
}

double static Layout.DebugOverlay.nameInputHorizontalInset.getter()
{
  return OUTLINED_FUNCTION_14_0(40.0);
}

void *Layout.DebugOverlay.nameInputContentInset.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.nameInputContentInset;
}

void *Layout.DebugOverlay.nameInputMarginBetweenContent.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.nameInputMarginBetweenContent;
}

float static Layout.AudioVisualization.minimumRingScale.getter()
{
  return 0.98;
}

float static Layout.AudioVisualization.maximumRingScale.getter()
{
  return 0.64;
}

double static Layout.AudioVisualization.borderWidthFactor.getter()
{
  return 0.06;
}

float static Layout.AudioVisualization.reducedMotionFixedRingScale.getter()
{
  return 0.35;
}

void one-time initialization function for borderWidth()
{
  static Layout.AnnotationDisc.borderCGFloat Width = 0x3FF0000000000000;
}

uint64_t *Layout.AnnotationDisc.borderWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for borderWidth != -1) {
    swift_once();
  }
  return &static Layout.AnnotationDisc.borderWidth;
}

double static Layout.AnnotationDisc.borderWidth.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for borderWidth, (uint64_t)&static Layout.AnnotationDisc.borderWidth);
}

uint64_t *Layout.AnnotationDisc.cornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for cornerRadius != -1) {
    swift_once();
  }
  return &static Layout.AnnotationDisc.cornerRadius;
}

double static Layout.AnnotationDisc.cornerRadius.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for cornerRadius, (uint64_t)&static Layout.AnnotationDisc.cornerRadius);
}

__n128 one-time initialization function for instrinsicContentSize()
{
  __asm { FMOV            V0.2D, #22.0 }
  static Layout.AnnotationDisc.instrinsicContentSize = (__int128)result;
  return result;
}

long long *Layout.AnnotationDisc.instrinsicContentSize.unsafeMutableAddressor()
{
  if (one-time initialization token for instrinsicContentSize != -1) {
    swift_once();
  }
  return &static Layout.AnnotationDisc.instrinsicContentSize;
}

double static Layout.AnnotationDisc.instrinsicContentSize.getter()
{
  return static Layout.AnnotationDisc.instrinsicContentSize.getter((uint64_t)&one-time initialization token for instrinsicContentSize, (uint64_t)&static Layout.AnnotationDisc.instrinsicContentSize);
}

double one-time initialization function for bottomInsetAfterPadding()
{
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  (*(void (**)(void))(v0 + 384))();
  static Platform.current.getter();
  OUTLINED_FUNCTION_3_2();
  (*(void (**)(void))(v1 + 488))();
  double result = 16.0 - static Layout.MediaPip.padding.getter();
  static Layout.MediaPip.bottomInsetAfterPadding = *(void *)&result;
  return result;
}

double static Layout.MediaPip.bottomInsetAfterPadding.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for bottomInsetAfterPadding, (uint64_t)&static Layout.MediaPip.bottomInsetAfterPadding);
}

double static Layout.MediaPip.controlsDodgingTopInset.getter()
{
  return OUTLINED_FUNCTION_14_0(58.0);
}

int64x2_t one-time initialization function for leadingImageSize()
{
  int64x2_t result = vdupq_n_s64(0x4049000000000000uLL);
  static Layout.Nickname.leadingImageSize = (__int128)result;
  return result;
}

double static Layout.Nickname.leadingImageSize.getter()
{
  return static Layout.AnnotationDisc.instrinsicContentSize.getter((uint64_t)&one-time initialization token for leadingImageSize, (uint64_t)&static Layout.Nickname.leadingImageSize);
}

double static Layout.AnnotationDisc.instrinsicContentSize.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27_53();
  if (!v3) {
    swift_once();
  }
  return *(double *)a2;
}

void one-time initialization function for distanceFromEdge()
{
  static Layout.Nickname.distanceFromEdge = 0x4028000000000000;
}

double static Layout.Nickname.distanceFromEdge.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for distanceFromEdge, (uint64_t)&static Layout.Nickname.distanceFromEdge);
}

void one-time initialization function for distanceBetweenImageAndLabels()
{
  static Layout.Nickname.distanceBetweenImageAndLabels = 0x4022000000000000;
}

double static Layout.Nickname.distanceBetweenImageAndLabels.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for distanceBetweenImageAndLabels, (uint64_t)&static Layout.Nickname.distanceBetweenImageAndLabels);
}

void one-time initialization function for distanceBetweenLabels()
{
  static Layout.Nickname.distanceBetweenLabels = 0x4000000000000000;
}

double static Layout.Nickname.distanceBetweenLabels.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for distanceBetweenLabels, (uint64_t)&static Layout.Nickname.distanceBetweenLabels);
}

double static Layout.PTT.topDetailContainerMarginScale.getter()
{
  return 0.09;
}

double static Layout.PTT.bottomButtonContainerMarginScale.getter()
{
  return 0.07;
}

double static Layout.PTT.pttActionButtonSize.getter()
{
  return OUTLINED_FUNCTION_14_0(80.0);
}

double static Layout.PTT.maxiPadContainerWidth.getter()
{
  return 375.0;
}

double static Layout.PTT.fullScreenAvatarSize.getter()
{
  return OUTLINED_FUNCTION_14_0(60.0);
}

void *Layout.PTT.pttAppIconSize.unsafeMutableAddressor()
{
  return &static Layout.PTT.pttAppIconSize;
}

void *Layout.PTT.appIconSubtitleVerticalOffset.unsafeMutableAddressor()
{
  return &static Layout.PTT.appIconSubtitleVerticalOffset;
}

double static Layout.PTT.appIconSubtitleVerticalOffset.getter()
{
  return -3.0;
}

double static Layout.PTT.disclosureButtonTopOffset.getter()
{
  return -2.0;
}

void *Layout.PTT.minimumAppIconSize.unsafeMutableAddressor()
{
  return &static Layout.PTT.minimumAppIconSize;
}

void *Layout.PTT.maximumAppIconSize.unsafeMutableAddressor()
{
  return &static Layout.PTT.maximumAppIconSize;
}

double static Layout.PTT.maximumAppIconSize.getter()
{
  return 23.0;
}

double static Layout.PTT.pillMinimumWidth.getter()
{
  return 77.0;
}

void one-time initialization function for defaultTipWidth()
{
  static Layout.Reactions.defaultTipCGFloat Width = closure #1 in variable initialization expression of static Layout.Reactions.defaultTipWidth();
}

double closure #1 in variable initialization expression of static Layout.Reactions.defaultTipWidth()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_currentDevice);
  id v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  double v3 = 362.0;
  if (v2 != (id)1)
  {
    id v4 = objc_msgSend(v0, sel_currentDevice);
    id v5 = objc_msgSend(v4, sel_userInterfaceIdiom);

    if (v5 != (id)5)
    {
      double v6 = self;
      id v7 = objc_msgSend(v6, sel_mainScreen);
      objc_msgSend(v7, sel_bounds);
      double v9 = v8;

      id v10 = objc_msgSend(v6, sel_mainScreen);
      objc_msgSend(v10, sel_bounds);
      double v12 = v11;

      if (v12 >= v9) {
        double v12 = v9;
      }
      double v13 = static Layout.MediaPip.padding.getter();
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      uint64_t v14 = static Defaults.shared;
      (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
      uint64_t v15 = static Platform.current.getter();
      (*(void (**)(uint64_t))(*(void *)v14 + 488))(v15);
      return v12 - (v13 + v13);
    }
  }
  return v3;
}

double static Layout.Reactions.defaultTipWidth.getter()
{
  return static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter((uint64_t)&one-time initialization token for defaultTipWidth, (uint64_t)&static Layout.Reactions.defaultTipWidth);
}

double static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27_53();
  if (!v3) {
    swift_once();
  }
  return *(double *)a2;
}

double static Layout.Reactions.pickerPadding.getter()
{
  return *(double *)&static Layout.Reactions.pickerPadding;
}

uint64_t static Layout.Reactions.pickerPadding.setter(double a1)
{
  uint64_t result = OUTLINED_FUNCTION_11_82();
  static Layout.Reactions.pickerPadding = *(void *)&a1;
  return result;
}

uint64_t (*static Layout.Reactions.pickerPadding.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

void type metadata accessor for Layout()
{
}

void *__swift_memcpy360_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x168uLL);
}

uint64_t getEnumTagSinglePayload for Layout.MultiwayFaceTime(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 360)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Layout.MultiwayFaceTime(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 20ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 28ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 36ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v3;
  return result;
}

void type metadata accessor for Layout.MultiwayFaceTime()
{
}

void *__swift_memcpy400_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x190uLL);
}

uint64_t getEnumTagSinglePayload for Layout.ConversationControls(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 400)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Layout.ConversationControls(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 392) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 20ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 36ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 28ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v3;
  return result;
}

void type metadata accessor for Layout.ConversationControls()
{
}

void type metadata accessor for Layout.ConversationControlsAppLaunchPillView()
{
}

void type metadata accessor for Layout.ConversationControlsTrailingActionPillView()
{
}

void type metadata accessor for Layout.SharePlayDiscoverabilityView()
{
}

void type metadata accessor for Layout.ShareCard()
{
}

uint64_t getEnumTagSinglePayload for Layout.Roster(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Layout.Roster(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v3;
  return result;
}

void type metadata accessor for Layout.Roster()
{
}

void type metadata accessor for Layout.LocalParticipantView()
{
}

void type metadata accessor for Layout.EffectsControlsView()
{
}

void type metadata accessor for Layout.LocalParticipantViewCameraControls()
{
}

void type metadata accessor for Layout.ParticipantViews()
{
}

void type metadata accessor for Layout.ParticipantMonogramViews()
{
}

void type metadata accessor for Layout.ParticipantAlertViews()
{
}

void *__swift_memcpy760_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x2F8uLL);
}

uint64_t getEnumTagSinglePayload for Layout.InCallControls(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 760)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Layout.InCallControls(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 20ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 68ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 60ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 52ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 44ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 36ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 28ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 76ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v3;
  return result;
}

void type metadata accessor for Layout.InCallControls()
{
}

void type metadata accessor for Layout.InCallControlsButton()
{
}

void type metadata accessor for Layout.ParticipantContactAvatars()
{
}

void type metadata accessor for Layout.ParticipantRingView()
{
}

void type metadata accessor for Layout.Staging()
{
}

void type metadata accessor for Layout.Captions()
{
}

void type metadata accessor for Layout.DebugOverlay()
{
}

void type metadata accessor for Layout.AudioVisualization()
{
}

void type metadata accessor for Layout.AnnotationDisc()
{
}

void type metadata accessor for Layout.MediaPip()
{
}

void type metadata accessor for Layout.Nickname()
{
}

void type metadata accessor for Layout.PTT()
{
}

void type metadata accessor for Layout.Reactions()
{
}

double OUTLINED_FUNCTION_41_30()
{
  return *(double *)(v0 + 24);
}

void OUTLINED_FUNCTION_74_7(double a1)
{
  *(double *)(v1 + 136) = a1;
}

double OUTLINED_FUNCTION_75_11()
{
  return *(double *)(v0 + 136);
}

void OUTLINED_FUNCTION_76_10(double a1)
{
  *(double *)(v1 + 128) = a1;
}

void OUTLINED_FUNCTION_80_9(__n128 a1)
{
  __asm { FMOV            V1.2D, #10.0 }
  *(__n128 *)(v1 + 32ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
  *(_OWORD *)(v1 + 336) = _Q1;
  *(void *)(v1 + 352) = 0x4068000000000000;
}

void OUTLINED_FUNCTION_81_12(double a1)
{
  *(double *)(v1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
}

double OUTLINED_FUNCTION_82_9()
{
  return *(double *)(v0 + 80);
}

double OUTLINED_FUNCTION_83_8()
{
  return 18.0;
}

double OUTLINED_FUNCTION_86_12()
{
  return 11.0;
}

uint64_t OUTLINED_FUNCTION_87_7()
{
  return swift_beginAccess();
}

Swift::Void __swiftcall ParticipantDimmingView.setHidden(_:)(Swift::Bool a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (uint64_t *)((char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for OS_dispatch_queue();
  *id v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBE8], v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    objc_msgSend(v2, sel_setHidden_, 0);
    double v9 = self;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v2;
    Swift::Bool v11 = a1;
    *(unsigned char *)(v10 + 24) = a1;
    double v21 = partial apply for closure #1 in ParticipantDimmingView.setHidden(_:);
    uint64_t v22 = v10;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v18 = 1107296256;
    double v19 = thunk for @escaping @callee_guaranteed () -> ();
    double v20 = &block_descriptor_116;
    double v12 = _Block_copy(&aBlock);
    id v13 = v2;
    swift_release();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(unsigned char *)(v14 + 24) = v11;
    double v21 = partial apply for closure #2 in ParticipantDimmingView.setHidden(_:);
    uint64_t v22 = v14;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v18 = 1107296256;
    double v19 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    double v20 = &block_descriptor_6_9;
    uint64_t v15 = _Block_copy(&aBlock);
    id v16 = v13;
    swift_release();
    objc_msgSend(v9, sel_animateWithDuration_delay_options_animations_completion_, 4, v12, v15, 0.3, 0.0);
    _Block_release(v15);
    _Block_release(v12);
  }
  else
  {
    __break(1u);
  }
}

id ParticipantDimmingView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

id ParticipantDimmingView.init(frame:)()
{
  OUTLINED_FUNCTION_7();
  uint64_t ObjectType = swift_getObjectType();
  double v1 = OUTLINED_FUNCTION_6_2();
  id v4 = objc_msgSendSuper2(v2, v3, v1, v0, ObjectType);
  objc_msgSend(v4, sel_setAlpha_, 0.0);
  if (one-time initialization token for unfocusedOverlay != -1) {
    swift_once();
  }
  objc_msgSend(v4, sel_setBackgroundColor_, static Colors.ParticipantGridView.unfocusedOverlay);
  objc_msgSend(v4, sel_setHidden_, 1);

  return v4;
}

id ParticipantDimmingView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantDimmingView.init(coder:)()
{
}

id ParticipantDimmingView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C36EC414()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in ParticipantDimmingView.setHidden(_:)()
{
  double v1 = 1.0;
  if (*(unsigned char *)(v0 + 24)) {
    double v1 = 0.0;
  }
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, v1);
}

id partial apply for closure #2 in ParticipantDimmingView.setHidden(_:)(int a1)
{
  return objc_msgSend(*(id *)(v1 + 16), sel_setHidden_, ((*(unsigned __int8 *)(v1 + 24) ^ a1) & 1) == 0);
}

uint64_t type metadata accessor for ParticipantDimmingView()
{
  return self;
}

uint64_t NoticeView.noticeViewModel.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of NoticeViewModel(v1, a1, (void (*)(void))type metadata accessor for NoticeViewModel);
}

uint64_t NoticeView.init(noticeViewModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return outlined init with take of NoticeViewModel(a1, a2);
}

uint64_t outlined init with take of NoticeViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoticeViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t NoticeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
  closure #1 in NoticeView.body.getter(v2, (uint64_t)&v6[*(int *)(v7 + 44)]);
  LOBYTE(v2) = static Edge.Set.all.getter();
  outlined init with copy of FeatureEligibility?((uint64_t)v6, a1, &demangling cache variable for type metadata for VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
  uint64_t v8 = a1
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>)
              + 36);
  *(unsigned char *)uint64_t v8 = v2;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *(unsigned char *)(v8 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 1;
  return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
}

uint64_t closure #1 in NoticeView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)&v22 - v15;
  *(void *)id v16 = static VerticalAlignment.center.getter();
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>);
  closure #1 in closure #1 in NoticeView.body.getter(a1, (uint64_t)&v16[*(int *)(v17 + 44)]);
  NoticeViewModel.actionButtons()();
  outlined init with copy of FeatureEligibility?((uint64_t)v16, (uint64_t)v13, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v7, v10, v4);
  outlined init with copy of FeatureEligibility?((uint64_t)v13, a2, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0));
  v18((char *)(a2 + *(int *)(v19 + 48)), v7, v4);
  double v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v10, v4);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>);
  v20(v7, v4);
  return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>);
}

uint64_t associated type witness table accessor for View.Body : View in NoticeView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #1 in NoticeView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>.Storage);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = &v60[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  MEMORY[0x1F4188790](v67);
  uint64_t v69 = &v60[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v66 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1F4188790](v66);
  uint64_t v68 = &v60[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
  MEMORY[0x1F4188790](v76);
  uint64_t v9 = &v60[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v79 = &v60[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v74 = &v60[-v13];
  MEMORY[0x1F4188790](v14);
  id v16 = &v60[-v15];
  MEMORY[0x1F4188790](v17);
  uint64_t v78 = &v60[-v18];
  uint64_t v70 = static Alignment.center.getter();
  uint64_t v71 = v19;
  id v20 = *(id *)(a1 + 32);
  uint64_t v21 = Image.init(uiImage:)();
  uint64_t v22 = *(int *)(type metadata accessor for NoticeViewModel() + 40);
  uint64_t v75 = (void *)a1;
  int v23 = *(unsigned __int8 *)(a1 + v22);
  if (v23 == 1)
  {
    v84[0] = partial apply for closure #1 in Image.iconImage();
    v84[1] = v21;
    LOBYTE(v84[2]) = 0;
  }
  else
  {
    v84[0] = v21;
    v84[1] = 0;
    LOBYTE(v84[2]) = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>);
  _ConditionalContent<>.init(storage:)();
  uint64_t v24 = v85;
  uint64_t v73 = v86;
  int v72 = v87;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v25 = v95;
  char v26 = v96;
  uint64_t v27 = v97;
  unsigned __int8 v28 = v98;
  uint64_t v30 = v99;
  uint64_t v29 = v100;
  if (v23)
  {
    uint64_t v31 = v71;
    *(void *)uint64_t v5 = v70;
    *((void *)v5 + 1) = v31;
    uint64_t v32 = v73;
    *((void *)v5 + 2) = v24;
    *((void *)v5 + 3) = v32;
    v5[32] = v72;
    *((void *)v5 + 5) = v25;
    v5[48] = v26;
    *((void *)v5 + 7) = v27;
    v5[64] = v28;
    *((void *)v5 + 9) = v30;
    *((void *)v5 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v29;
    swift_storeEnumTagMultiPayload();
    outlined copy of _ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>.Storage();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    uint64_t v33 = (uint64_t)v74;
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v34 = *(int *)(v66 + 20);
    uint64_t v65 = v24;
    long long v35 = v68;
    uint64_t v36 = &v68[v34];
    uint64_t v63 = v100;
    uint64_t v64 = v3;
    uint64_t v66 = (uint64_t)v16;
    uint64_t v37 = *MEMORY[0x1E4F3D4A0];
    uint64_t v62 = v99;
    int v61 = v98;
    uint64_t v38 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v36, v37, v38);
    __asm { FMOV            V0.2D, #10.0 }
    *long long v35 = _Q0;
    uint64_t v44 = v69;
    outlined init with copy of NoticeViewModel((uint64_t)v35, (uint64_t)v69, MEMORY[0x1E4F3CDB8]);
    *(_WORD *)&v44[*(int *)(v67 + 36)] = 256;
    outlined init with copy of FeatureEligibility?((uint64_t)v44, (uint64_t)&v9[*(int *)(v76 + 36)], &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
    uint64_t v45 = v71;
    *(void *)uint64_t v9 = v70;
    *((void *)v9 + 1) = v45;
    uint64_t v46 = v73;
    *((void *)v9 + 2) = v65;
    *((void *)v9 + 3) = v46;
    v9[32] = v72;
    *((void *)v9 + 5) = v25;
    v9[48] = v26;
    *((void *)v9 + 7) = v27;
    v9[64] = v61;
    uint64_t v47 = v63;
    *((void *)v9 + 9) = v62;
    *((void *)v9 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v47;
    outlined copy of _ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>.Storage();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v44, &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
    outlined destroy of NoticeButtonStyle((uint64_t)v35, MEMORY[0x1E4F3CDB8]);
    outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)v5, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    uint64_t v33 = (uint64_t)v74;
    id v16 = (unsigned char *)v66;
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
  }
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v33, (uint64_t)v16, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
  outlined consume of _ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>.Storage();
  int v48 = v78;
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v16, (uint64_t)v78, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
  uint64_t v76 = static HorizontalAlignment.center.getter();
  closure #3 in closure #1 in closure #1 in NoticeView.body.getter(v75, v80);
  v81[296] = 1;
  memcpy(&v81[7], v80, 0x120uLL);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v49 = v101;
  uint64_t v50 = v103;
  uint64_t v51 = v105;
  uint64_t v52 = v106;
  char v83 = v102;
  char v82 = v104;
  uint64_t v53 = v79;
  outlined init with copy of FeatureEligibility?((uint64_t)v48, (uint64_t)v79, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
  LOBYTE(v48) = v83;
  char v54 = v82;
  uint64_t v55 = (uint64_t)v53;
  uint64_t v56 = v77;
  outlined init with copy of FeatureEligibility?(v55, v77, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
  long long v57 = (void *)(v56
               + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>))
                        + 48));
  uint64_t v58 = v76;
  v84[0] = v76;
  v84[1] = 0;
  LOBYTE(v84[2]) = 1;
  memcpy((char *)&v84[2] + 1, v81, 0x127uLL);
  v84[39] = v49;
  LOBYTE(v84[40]) = (_BYTE)v48;
  v84[41] = v50;
  LOBYTE(v84[42]) = v54;
  v84[43] = v51;
  v84[44] = v52;
  memcpy(v57, v84, 0x168uLL);
  outlined retain of ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>((uint64_t)v84);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v78, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
  uint64_t v85 = v58;
  uint64_t v86 = 0;
  unsigned __int8 v87 = 1;
  memcpy(v88, v81, sizeof(v88));
  uint64_t v89 = v49;
  char v90 = (char)v48;
  uint64_t v91 = v50;
  char v92 = v54;
  uint64_t v93 = v51;
  uint64_t v94 = v52;
  outlined release of ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>((uint64_t)&v85);
  return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v79, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
}

uint64_t closure #3 in closure #1 in closure #1 in NoticeView.body.getter@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1[1];
  __src[0] = *a1;
  __src[1] = v3;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v4 = Text.init<A>(_:)();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  static Font.Weight.semibold.getter();
  uint64_t v9 = Text.fontWeight(_:)();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  LOBYTE(v3) = v14 & 1;
  outlined consume of Text.Storage(v4, v6, v8);
  swift_bridgeObjectRelease();
  uint64_t v15 = static Alignment.leading.getter();
  char v31 = v3;
  char v29 = 1;
  char v27 = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(__src, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v27, 0, v29, v15, v16, v9, v11, v31, v13);
  outlined consume of Text.Storage(v9, v11, v3);
  swift_bridgeObjectRelease();
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t v17 = a1[3];
  __src[0] = a1[2];
  __src[1] = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = Text.init<A>(_:)();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  LOBYTE(v3) = v23 & 1;
  uint64_t v24 = static Alignment.leading.getter();
  LOBYTE(v32) = v3;
  LOBYTE(v3ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 1;
  LOBYTE(v28) = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(__src, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v28, 0, v30, v24, v25, v18, v20, v32, v22);
  outlined consume of Text.Storage(v18, v20, v3);
  swift_bridgeObjectRelease();
  memcpy(v34, __src, sizeof(v34));
  memcpy(v36, __dst, sizeof(v36));
  memcpy(v37, v34, sizeof(v37));
  memcpy(__src, __dst, 0x90uLL);
  memcpy(&__src[18], v34, 0x90uLL);
  memcpy(a2, __src, 0x120uLL);
  memcpy(v39, v34, sizeof(v39));
  outlined retain of ModifiedContent<Text, _PaddingLayout>((uint64_t)v36);
  outlined retain of ModifiedContent<Text, _PaddingLayout>((uint64_t)v37);
  outlined release of ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>((uint64_t)v39);
  memcpy(v40, __dst, 0x90uLL);
  return outlined release of ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>((uint64_t)v40);
}

uint64_t NoticeViewModel.actionButtons()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NoticeButtonStyle();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<Text, _FlexFrameLayout>>?, Button<ModifiedContent<Text, _FlexFrameLayout>>?)>>);
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Button<ModifiedContent<Text, _FlexFrameLayout>>?, Button<ModifiedContent<Text, _FlexFrameLayout>>?)>>);
  closure #1 in NoticeViewModel.actionButtons()(v1, (uint64_t)&v7[*(int *)(v8 + 44)]);
  *uint64_t v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (uint64_t *)((char *)v4 + *(int *)(v2 + 20));
  *uint64_t v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>.Content);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<TupleView<(Button<ModifiedContent<Text, _FlexFrameLayout>>?, Button<ModifiedContent<Text, _FlexFrameLayout>>?)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<Text, _FlexFrameLayout>>?, Button<ModifiedContent<Text, _FlexFrameLayout>>?)>>);
  lazy protocol witness table accessor for type NoticeButtonStyle and conformance NoticeButtonStyle();
  View.buttonStyle<A>(_:)();
  outlined destroy of NoticeButtonStyle((uint64_t)v4, (void (*)(void))type metadata accessor for NoticeButtonStyle);
  return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<Text, _FlexFrameLayout>>?, Button<ModifiedContent<Text, _FlexFrameLayout>>?)>>);
}

void *initializeBufferWithCopyOfBuffer for NoticeView(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for NoticeViewModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = v23;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v10 = (void *)a2[4];
    uint64_t v9 = a2[5];
    a1[4] = v10;
    a1[5] = v9;
    uint64_t v11 = a2[7];
    a1[6] = a2[6];
    a1[7] = v11;
    a1[8] = a2[8];
    uint64_t v12 = *(int *)(v4 + 36);
    char v26 = (char *)a2 + v12;
    char v27 = (char *)a1 + v12;
    uint64_t v13 = type metadata accessor for UUID();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v27, v26, v13);
    *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
    *(void *)((char *)a1 + v6[11]) = *(void *)((char *)a2 + v6[11]);
    uint64_t v15 = v6[12];
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v6[13];
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    swift_retain();
  }
  swift_retain();
  return a1;
}

uint64_t destroy for NoticeView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for NoticeViewModel() + 36);
  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  return swift_release();
}

void *initializeWithCopy for NoticeView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v7 = (void *)a2[4];
  uint64_t v6 = a2[5];
  a1[4] = v7;
  a1[5] = v6;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  a1[8] = a2[8];
  uint64_t v9 = (int *)type metadata accessor for NoticeViewModel();
  uint64_t v10 = v9[9];
  uint64_t v23 = (char *)a2 + v10;
  uint64_t v24 = (char *)a1 + v10;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v24, v23, v11);
  *((unsigned char *)a1 + v9[10]) = *((unsigned char *)a2 + v9[10]);
  *(void *)((char *)a1 + v9[11]) = *(void *)((char *)a2 + v9[11]);
  uint64_t v13 = v9[12];
  id v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  *id v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v9[13];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for NoticeView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for NoticeViewModel();
  uint64_t v8 = v7[9];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  *((unsigned char *)a1 + v7[10]) = *((unsigned char *)a2 + v7[10]);
  *(void *)((char *)a1 + v7[11]) = *(void *)((char *)a2 + v7[11]);
  uint64_t v12 = v7[12];
  uint64_t v13 = (void *)((char *)a1 + v12);
  id v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_release();
  uint64_t v16 = v7[13];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for NoticeView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = (int *)type metadata accessor for NoticeViewModel();
  uint64_t v6 = v5[9];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(unsigned char *)(a1 + v5[10]) = *(unsigned char *)(a2 + v5[10]);
  *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
  *(_OWORD *)(a1 + v5[12]) = *(_OWORD *)(a2 + v5[12]);
  *(_OWORD *)(a1 + v5[13]) = *(_OWORD *)(a2 + v5[13]);
  return a1;
}

void *assignWithTake for NoticeView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a1[4];
  a1[4] = a2[4];

  uint64_t v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[8];
  a1[7] = a2[7];
  a1[8] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for NoticeViewModel();
  uint64_t v10 = v9[9];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  *((unsigned char *)a1 + v9[10]) = *((unsigned char *)a2 + v9[10]);
  *(void *)((char *)a1 + v9[11]) = *(void *)((char *)a2 + v9[11]);
  *(_OWORD *)((char *)a1 + v9[12]) = *(_OWORD *)((char *)a2 + v9[12]);
  swift_release();
  *(_OWORD *)((char *)a1 + v9[13]) = *(_OWORD *)((char *)a2 + v9[13]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C36EDBA8);
}

uint64_t sub_1C36EDBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoticeViewModel();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for NoticeView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C36EDC04);
}

uint64_t sub_1C36EDC04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoticeViewModel();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NoticeView()
{
  uint64_t result = type metadata singleton initialization cache for NoticeView;
  if (!type metadata singleton initialization cache for NoticeView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for NoticeView()
{
  uint64_t result = type metadata accessor for NoticeViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t closure #1 in NoticeViewModel.actionButtons()@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v37 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v35 = (uint64_t)&v34 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v34 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v34 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = a1[6];
  if (v19)
  {
    uint64_t v20 = a1[5];
    uint64_t v21 = type metadata accessor for NoticeViewModel();
    uint64_t v34 = (uint64_t)&v34;
    MEMORY[0x1F4188790](v21);
    *(&v34 - 2) = v20;
    *(&v34 - 1) = v19;
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    Button.init(action:label:)();
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v23);
  }
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v15, (uint64_t)v18, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  uint64_t v24 = a1[8];
  if (v24)
  {
    uint64_t v25 = a1[7];
    uint64_t v26 = type metadata accessor for NoticeViewModel();
    MEMORY[0x1F4188790](v26);
    *(&v34 - 2) = v25;
    *(&v34 - 1) = v24;
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    Button.init(action:label:)();
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v27);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v28);
  }
  outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>((uint64_t)v9, (uint64_t)v12, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  uint64_t v29 = v35;
  outlined init with copy of FeatureEligibility?((uint64_t)v18, v35, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  uint64_t v30 = v37;
  outlined init with copy of FeatureEligibility?((uint64_t)v12, v37, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  uint64_t v31 = v36;
  outlined init with copy of FeatureEligibility?(v29, v36, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Button<ModifiedContent<Text, _FlexFrameLayout>>?, Button<ModifiedContent<Text, _FlexFrameLayout>>?));
  outlined init with copy of FeatureEligibility?(v30, v31 + *(int *)(v32 + 48), &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v30, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
}

unint64_t lazy protocol witness table accessor for type NoticeButtonStyle and conformance NoticeButtonStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type NoticeButtonStyle and conformance NoticeButtonStyle;
  if (!lazy protocol witness table cache variable for type NoticeButtonStyle and conformance NoticeButtonStyle)
  {
    type metadata accessor for NoticeButtonStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NoticeButtonStyle and conformance NoticeButtonStyle);
  }
  return result;
}

void *closure #1 in closure #1 in closure #1 in NoticeViewModel.actionButtons()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  __src[0] = a1;
  __src[1] = a2;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v4 = Text.init<A>(_:)();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  uint64_t v11 = static Alignment.center.getter();
  char v16 = v10;
  char v15 = 1;
  char v14 = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(__src, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v14, 0, v15, v11, v12, v4, v6, v16, v8);
  outlined consume of Text.Storage(v4, v6, v10);
  swift_bridgeObjectRelease();
  return memcpy(a3, __src, 0x90uLL);
}

void *partial apply for closure #1 in closure #2 in closure #1 in NoticeViewModel.actionButtons()@<X0>(void *a1@<X8>)
{
  return closure #1 in closure #1 in closure #1 in NoticeViewModel.actionButtons()(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined init with copy of NoticeViewModel(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_89_0();
  v5(v4);
  return a2;
}

uint64_t outlined copy of _ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>.Storage()
{
  return swift_retain();
}

uint64_t outlined destroy of NoticeButtonStyle(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ClipEffect<RoundedRectangle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined consume of _ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>.Storage()
{
  return swift_release();
}

uint64_t outlined retain of ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 168);
  uint64_t v3 = *(void *)(a1 + 176);
  char v4 = *(unsigned char *)(a1 + 184);
  outlined copy of Text.Storage(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined release of ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 168);
  uint64_t v3 = *(void *)(a1 + 176);
  char v4 = *(unsigned char *)(a1 + 184);
  outlined consume of Text.Storage(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

double closure #1 in Image.iconImage()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Image.ResizingMode();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  GeometryProxy.size.getter();
  double v7 = v6 * 0.5;
  GeometryProxy.size.getter();
  double v9 = v8 * 0.5;
  GeometryProxy.size.getter();
  GeometryProxy.size.getter();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F3EBF8], v2);
  uint64_t v10 = Image.resizable(capInsets:resizingMode:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v11 = v16;
  char v12 = v17;
  uint64_t v13 = v18;
  char v14 = v19;
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v11;
  *(unsigned char *)(a1 + 32) = v12;
  *(void *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v13;
  *(unsigned char *)(a1 + 48) = v14;
  double result = *(double *)&v20;
  *(_OWORD *)(a1 + 56) = v20;
  *(double *)(a1 + 72) = v7;
  *(double *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v9;
  return result;
}

double partial apply for closure #1 in Image.iconImage()@<D0>(uint64_t a1@<X8>)
{
  return closure #1 in Image.iconImage()(a1);
}

void *Animation.InCallControls.shortTimingParameters.unsafeMutableAddressor()
{
  return &static Animation.InCallControls.shortTimingParameters;
}

void *Animation.MultiwayView.inCallControlsAnimationDuration.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.inCallControlsAnimationDuration;
}

void *Animation.AudioVisualization.preferredFramesPerSecond.unsafeMutableAddressor()
{
  return &static Animation.AudioVisualization.preferredFramesPerSecond;
}

void *Animation.AudioVisualization.numberOfEchoes.unsafeMutableAddressor()
{
  return &static Animation.AudioVisualization.numberOfEchoes;
}

void *Animation.AudioVisualization.echoTime.unsafeMutableAddressor()
{
  return &static Animation.AudioVisualization.echoTime;
}

void *Animation.ParticipantView.screenSharingRotationDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.screenSharingRotationDuration;
}

void *Animation.InCallControls.gridButtonTiming.unsafeMutableAddressor()
{
  return &static Animation.InCallControls.gridButtonTiming;
}

long long *Animation.ConversationControls.springParameters.unsafeMutableAddressor()
{
  if (one-time initialization token for springParameters != -1) {
    swift_once();
  }
  return &static Animation.ConversationControls.springParameters;
}

void *Animation.LocalPreview.futureThrowTime.unsafeMutableAddressor()
{
  return &static Animation.LocalPreview.futureThrowTime;
}

void *Animation.ParticipantView.rotationDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.rotationDuration;
}

void *Animation.MultiwayView.fastProminenceTimingParameters.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.fastProminenceTimingParameters;
}

void *Animation.MultiwayView.slowProminenceTimingParameters.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.slowProminenceTimingParameters;
}

void *Animation.ParticipantView.flipDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.flipDuration;
}

void *Animation.ParticipantView.videoCrossFade.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.videoCrossFade;
}

void *Animation.MultiwayView.secondsBeforeHidingLeftParticipants.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.secondsBeforeHidingLeftParticipants;
}

void *Animation.MultiwayView.secondsBeforeHidingWaitingParticipants.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.secondsBeforeHidingWaitingParticipants;
}

void *Animation.LocalPreview.initialVelocityFactor.unsafeMutableAddressor()
{
  return &static Animation.LocalPreview.initialVelocityFactor;
}

void *Animation.LocalPreview.springMass.unsafeMutableAddressor()
{
  return &static Animation.LocalPreview.springMass;
}

uint64_t *Animation.LocalPreview.springStiffness.unsafeMutableAddressor()
{
  if (one-time initialization token for springStiffness != -1) {
    swift_once();
  }
  return &static Animation.LocalPreview.springStiffness;
}

void *Animation.LocalPreview.springDamping.unsafeMutableAddressor()
{
  return &static Animation.LocalPreview.springDamping;
}

void *Animation.MultiwayView.crossFadeDuration.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.crossFadeDuration;
}

void *Animation.MultiwayView.inCallControlsDisappearingDuration.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.inCallControlsDisappearingDuration;
}

void *Animation.MostActiveParticipantView.showShadowDuration.unsafeMutableAddressor()
{
  return &static Animation.MostActiveParticipantView.showShadowDuration;
}

void *Animation.MultiwayView.rosterVisibilityAnimationDuration.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.rosterVisibilityAnimationDuration;
}

void *Animation.MultiwayView.secondsToWaitForFirstRemoteFrame.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.secondsToWaitForFirstRemoteFrame;
}

void *Animation.MultiwayView.secondsToRestoreRungParticipants.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.secondsToRestoreRungParticipants;
}

void *Animation.ParticipantView.blurRemoteParticipantChangingMirroredVideoDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.blurRemoteParticipantChangingMirroredVideoDuration;
}

void *Animation.ParticipantView.blurLocalParticipantAfterFirstVideoFrameDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.blurLocalParticipantAfterFirstVideoFrameDuration;
}

void *Animation.ParticipantView.blurLocalParticipantAfterExternalCameraUsageChangeDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.blurLocalParticipantAfterExternalCameraUsageChangeDuration;
}

void *Animation.MultiwayView.unfocusedOverlayAnimationDuration.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.unfocusedOverlayAnimationDuration;
}

void *Animation.InCallControls.defaultTimingParameters.unsafeMutableAddressor()
{
  return &static Animation.InCallControls.defaultTimingParameters;
}

void static Animation.InCallControls.defaultTimingParameters.getter(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1C3775800;
  a1[1] = xmmword_1C378D690;
  OUTLINED_FUNCTION_3_142((uint64_t)a1);
}

double static Animation.InCallControls.gridButtonTiming.getter()
{
  return 0.2;
}

void *Animation.InCallControls.minimumDragFlickVelocity.unsafeMutableAddressor()
{
  return &static Animation.InCallControls.minimumDragFlickVelocity;
}

double static Animation.InCallControls.minimumDragFlickVelocity.getter()
{
  return 150.0;
}

void *Animation.InCallControls.timedParticipantStateCheckInterval.unsafeMutableAddressor()
{
  return &static Animation.InCallControls.timedParticipantStateCheckInterval;
}

double static Animation.MultiwayView.secondsBeforeHidingWaitingParticipants.getter()
{
  return 45.0;
}

double static Animation.MultiwayView.secondsBeforeHidingLeftParticipants.getter()
{
  return 7.0;
}

double static Animation.MultiwayView.secondsToRestoreRungParticipants.getter()
{
  return 10.0;
}

double static Animation.MultiwayView.secondsToWaitForFirstRemoteFrame.getter()
{
  return 3.0;
}

double static Animation.MultiwayView.inCallControlsDisappearingDuration.getter()
{
  return 10.0;
}

double static Animation.MultiwayView.inCallControlsAnimationDuration.getter()
{
  return 0.3;
}

double static Animation.MultiwayView.rosterVisibilityAnimationDuration.getter()
{
  return 0.3;
}

void *Animation.MultiwayView.captionsVisibilityAnimationDuration.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.captionsVisibilityAnimationDuration;
}

double static Animation.MultiwayView.captionsVisibilityAnimationDuration.getter()
{
  return 0.3;
}

double static Animation.MultiwayView.unfocusedOverlayAnimationDuration.getter()
{
  return 0.3;
}

void static Animation.MultiwayView.slowProminenceTimingParameters.getter(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1C37757E0;
  a1[1] = xmmword_1C37757F0;
  OUTLINED_FUNCTION_3_142((uint64_t)a1);
}

void static Animation.MultiwayView.fastProminenceTimingParameters.getter(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1C3775800;
  a1[1] = xmmword_1C3775810;
  OUTLINED_FUNCTION_3_142((uint64_t)a1);
}

double static Animation.MultiwayView.crossFadeDuration.getter()
{
  return 0.3;
}

void *Animation.ParticipantView.secondsBeforeHidingSash.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.secondsBeforeHidingSash;
}

double static Animation.ParticipantView.secondsBeforeHidingSash.getter()
{
  return 5.0;
}

void *Animation.ParticipantView.appearingSashDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.appearingSashDuration;
}

double static Animation.ParticipantView.appearingSashDuration.getter()
{
  return 0.1;
}

void *Animation.ParticipantView.disappearingSashDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.disappearingSashDuration;
}

double static Animation.ParticipantView.blurRemoteParticipantChangingMirroredVideoDuration.getter()
{
  return 1.0;
}

double static Animation.ParticipantView.blurLocalParticipantAfterExternalCameraUsageChangeDuration.getter()
{
  return 1.0;
}

double static Animation.ParticipantView.rotationDuration.getter()
{
  return 0.4;
}

double static Animation.ParticipantView.screenSharingRotationDuration.getter()
{
  return 0.3;
}

void *Animation.ParticipantView.videoOverlayFadeDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.videoOverlayFadeDuration;
}

double static Animation.ParticipantView.videoOverlayFadeDuration.getter()
{
  return 0.1;
}

double static Animation.MostActiveParticipantView.showShadowDuration.getter()
{
  return 0.15;
}

double static Animation.LocalPreview.futureThrowTime.getter()
{
  return 0.3;
}

double static Animation.LocalPreview.initialVelocityFactor.getter()
{
  return 0.00333333333;
}

double static Animation.LocalPreview.springMass.getter()
{
  return 4.5;
}

void one-time initialization function for springStiffness()
{
  static Animation.LocalPreview.springStiffness = 0x408C200000000000;
}

double static Animation.LocalPreview.springStiffness.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for springStiffness, (uint64_t)&static Animation.LocalPreview.springStiffness);
}

double static Animation.LocalPreview.springDamping.getter()
{
  return 95.0;
}

void *Animation.LocalPreview.callConnectedAnimationDuration.unsafeMutableAddressor()
{
  return &static Animation.LocalPreview.callConnectedAnimationDuration;
}

double static Animation.LocalPreview.callConnectedAnimationDuration.getter()
{
  return 0.6;
}

void *Animation.LocalPreview.snapshotOverlayAfterOrientationChangeDuration.unsafeMutableAddressor()
{
  return &static Animation.LocalPreview.snapshotOverlayAfterOrientationChangeDuration;
}

uint64_t static Animation.AudioVisualization.numberOfEchoes.getter()
{
  return 4;
}

double static Animation.AudioVisualization.echoTime.getter()
{
  return -0.025;
}

uint64_t static Animation.AudioVisualization.preferredFramesPerSecond.getter()
{
  return 24;
}

void one-time initialization function for expansionTranslation()
{
  static Animation.ConversationControls.expansionTranslation = 0x4044000000000000;
}

uint64_t *Animation.ConversationControls.expansionTranslation.unsafeMutableAddressor()
{
  if (one-time initialization token for expansionTranslation != -1) {
    swift_once();
  }
  return &static Animation.ConversationControls.expansionTranslation;
}

double static Animation.ConversationControls.expansionTranslation.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for expansionTranslation, (uint64_t)&static Animation.ConversationControls.expansionTranslation);
}

void one-time initialization function for hidingVelocity()
{
  static Animation.ConversationControls.hidingVelocity = 0xC059000000000000;
}

uint64_t *Animation.ConversationControls.hidingVelocity.unsafeMutableAddressor()
{
  if (one-time initialization token for hidingVelocity != -1) {
    swift_once();
  }
  return &static Animation.ConversationControls.hidingVelocity;
}

double static Animation.ConversationControls.hidingVelocity.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for hidingVelocity, (uint64_t)&static Animation.ConversationControls.hidingVelocity);
}

void *Animation.ConversationControls.restingVelocityMultiplier.unsafeMutableAddressor()
{
  return &static Animation.ConversationControls.restingVelocityMultiplier;
}

double static Animation.ConversationControls.restingVelocityMultiplier.getter()
{
  return 0.499;
}

double one-time initialization function for springParameters()
{
  double result = 0.375;
  static Animation.ConversationControls.springParameters = xmmword_1C378D6A0;
  xmmword_1EA37ECE0 = xmmword_1C378D6B0;
  xmmword_1EA37ECF0 = 0uLL;
  return result;
}

double static Animation.ConversationControls.springParameters.getter@<D0>(_OWORD *a1@<X8>)
{
  if (one-time initialization token for springParameters != -1) {
    swift_once();
  }
  long long v2 = xmmword_1EA37ECE0;
  *a1 = static Animation.ConversationControls.springParameters;
  a1[1] = v2;
  double result = *(double *)&xmmword_1EA37ECF0;
  a1[2] = xmmword_1EA37ECF0;
  return result;
}

void type metadata accessor for Animation()
{
}

void type metadata accessor for Animation.InCallControls()
{
}

void type metadata accessor for Animation.MultiwayView()
{
}

void type metadata accessor for Animation.ParticipantView()
{
}

void type metadata accessor for Animation.MostActiveParticipantView()
{
}

void type metadata accessor for Animation.LocalPreview()
{
}

void type metadata accessor for Animation.AudioVisualization()
{
}

void type metadata accessor for Animation.ConversationControls()
{
}

uint64_t PhoneLockStateObserver.values.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_4();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_63();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v5 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1C8770AF0](v1, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
}

id PhoneLockStateObserver.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static PhoneLockStateObserver.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)static PhoneLockStateObserver.shared;
  return v0;
}

void static PhoneLockStateObserver.shared.setter(uint64_t a1)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static PhoneLockStateObserver.shared;
  static PhoneLockStateObserver.shared = a1;
}

uint64_t (*static PhoneLockStateObserver.shared.modify())()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t PhoneLockStateObserver.isLocked.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t PhoneLockStateObserver.isLocked.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return static Published.subscript.setter();
}

char *PhoneLockStateObserver.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_4();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  double v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = &v0[OBJC_IVAR___CKPhoneLockStateObserver__isLocked];
  type metadata accessor for SpringBoardUtilities();
  double v9 = v0;
  LOBYTE(aBlock[0]) = static SpringBoardUtilities.checkSpringBoardState(for:)();
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v8, v7, v2);
  *(_DWORD *)&v9[OBJC_IVAR___CKPhoneLockStateObserver_token] = 0;
  uint64_t v10 = &v9[OBJC_IVAR___CKPhoneLockStateObserver_lockStateNotification];
  *(void *)uint64_t v10 = 0xD00000000000002DLL;
  *((void *)v10 + 1) = 0x80000001C3794440;

  v25.receiver = v9;
  v25.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v25, sel_init);
  type metadata accessor for OS_dispatch_queue();
  char v12 = (char *)v11;
  swift_bridgeObjectRetain();
  uint64_t v13 = static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in PhoneLockStateObserver.init();
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Int32) -> ();
  aBlock[3] = &block_descriptor_117;
  char v15 = _Block_copy(aBlock);
  swift_release();
  uint64_t v16 = String.utf8CString.getter();
  swift_bridgeObjectRelease();
  char v17 = (int *)&v12[OBJC_IVAR___CKPhoneLockStateObserver_token];
  swift_beginAccess();
  uint32_t v18 = notify_register_dispatch((const char *)(v16 + 32), v17, v13, v15);
  swift_endAccess();
  swift_release();
  _Block_release(v15);

  if (v18)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.conversationKit);
    long long v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 67240192;
      LODWORD(aBlock[0]) = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1C2F90000, v20, v21, "Failed to observe PhoneLockState with status %{public}u", v22, 8u);
      MEMORY[0x1C87760E0](v22, -1, -1);
    }
  }
  PhoneLockStateObserver.updateLockState()();

  return v12;
}

uint64_t sub_1C36EF638()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void closure #1 in PhoneLockStateObserver.init()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    PhoneLockStateObserver.updateLockState()();
  }
}

void partial apply for closure #1 in PhoneLockStateObserver.init()(uint64_t a1)
{
  closure #1 in PhoneLockStateObserver.init()(a1, v1);
}

Swift::Bool __swiftcall PhoneLockStateObserver.updateLockState()()
{
  type metadata accessor for SpringBoardUtilities();
  static SpringBoardUtilities.checkSpringBoardState(for:)();
  PhoneLockStateObserver.isLocked.setter();
  return PhoneLockStateObserver.isLocked.getter();
}

uint64_t PhoneLockStateObserver.listen(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v8 - 8);
  OUTLINED_FUNCTION_63();
  uint64_t v9 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v9);
  type metadata accessor for MainActor();
  id v10 = v3;
  swift_retain();
  uint64_t v11 = static MainActor.shared.getter();
  char v12 = (void *)swift_allocObject();
  uint64_t v13 = MEMORY[0x1E4FBCFD8];
  v12[2] = v11;
  v12[3] = v13;
  v12[4] = v10;
  v12[5] = a1;
  void v12[6] = a2;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  uint64_t v14 = type metadata accessor for AnyCancellable();
  swift_allocObject();
  swift_retain();
  uint64_t v15 = AnyCancellable.init(_:)();
  a3[3] = v14;
  uint64_t result = swift_release();
  *a3 = v15;
  return result;
}

uint64_t closure #1 in PhoneLockStateObserver.listen(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[3] = a5;
  void v6[4] = a6;
  _OWORD v6[2] = a4;
  v6[5] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  void v6[6] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
  v6[7] = v7;
  v6[8] = *(void *)(v7 - 8);
  v6[9] = swift_task_alloc();
  v6[10] = type metadata accessor for MainActor();
  v6[11] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[12] = v9;
  v6[13] = v8;
  return MEMORY[0x1F4188298](closure #1 in PhoneLockStateObserver.listen(with:), v9, v8);
}

uint64_t closure #1 in PhoneLockStateObserver.listen(with:)()
{
  PhoneLockStateObserver.values.getter();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher> and conformance AsyncPublisher<A>, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  *(void *)(v0 + 112) = static MainActor.shared.getter();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v1;
  void *v1 = v0;
  v1[1] = closure #1 in PhoneLockStateObserver.listen(with:);
  return MEMORY[0x1F4187C80](v0 + 128);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return MEMORY[0x1F4188298](closure #1 in PhoneLockStateObserver.listen(with:), v3, v2);
}

{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(void);
  void *v4;
  uint64_t v5;

  uint64_t v1 = *(unsigned __int8 *)(v0 + 128);
  if (v1 == 2)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    (*(void (**)(void))(v0 + 24))(v1 & 1);
    *(void *)(v0 + 112) = static MainActor.shared.getter();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v4;
    *uint64_t v4 = v0;
    v4[1] = closure #1 in PhoneLockStateObserver.listen(with:);
    return MEMORY[0x1F4187C80](v0 + 128);
  }
}

void implicit closure #2 in implicit closure #1 in PhoneLockStateObserver.listen(with:)()
{
}

id PhoneLockStateObserver.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = (int *)&v0[OBJC_IVAR___CKPhoneLockStateObserver_token];
  swift_beginAccess();
  notify_cancel(*v2);
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1C36EFF44()
{
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in PhoneLockStateObserver.listen(with:)(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return closure #1 in PhoneLockStateObserver.listen(with:)(a1, v4, v5, v6, v7, v8);
}

void partial apply for implicit closure #2 in implicit closure #1 in PhoneLockStateObserver.listen(with:)()
{
}

uint64_t ObjC metadata update function for PhoneLockStateObserver()
{
  return type metadata accessor for PhoneLockStateObserver();
}

uint64_t type metadata accessor for PhoneLockStateObserver()
{
  uint64_t result = type metadata singleton initialization cache for PhoneLockStateObserver;
  if (!type metadata singleton initialization cache for PhoneLockStateObserver) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void type metadata completion function for PhoneLockStateObserver()
{
  type metadata accessor for Published<Bool>();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C36F0154()
{
  return lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher> and conformance AsyncPublisher<A>, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
}

uint64_t sub_1C36F0190@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = PhoneLockStateObserver.isLocked.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C36F01C0()
{
  return PhoneLockStateObserver.isLocked.setter();
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs10ArraySliceVy15ConversationKit16CaptionSectionerV0H0VG_AJ0H2IDVs5NeverOTg504_s15f84Kit14TranscriptList33_28E431076EC11867EF27B9C11E6DD7B1LLV18lastTwoCaptionsIDsShyAA16hI68V0Q2IDVGyFAiG0Q0Vcfu_32e0c6332a02d4f1db5ccccca02d9fc0cdAlITf3nnnpk_nTf1cn_nTm(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = type metadata accessor for CaptionSectioner.Caption(0);
  uint64_t v8 = OUTLINED_FUNCTION_1(v7);
  uint64_t v18 = v9;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_5_1();
  int64_t v10 = a4 >> 1;
  uint64_t v20 = a3;
  uint64_t v11 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_19;
  }
  if (v11)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v11 < 0)
    {
LABEL_20:
      __break(1u);
      return;
    }
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v13 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if (v20 + i >= v10 || i >= v11) {
        goto LABEL_18;
      }
      outlined init with copy of TranscriptLabel(a2 + *(void *)(v18 + 72) * (v20 + i), (uint64_t)v4, (void (*)(void))type metadata accessor for CaptionSectioner.Caption);
      uint64_t v15 = *v4;
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      uint64_t v16 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v16 = v21;
      }
      unint64_t v17 = *(void *)(v16 + 16);
      if (v17 >= *(void *)(v16 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v16 = v21;
      }
      *(void *)(v16 + 16) = v17 + 1;
      *(void *)(v16 + 8 * v17 + 32) = v15;
      if (v13 == v11) {
        return;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

uint64_t CaptionsView.init(viewModel:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CaptionsView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  *a1 = static Alignment.center.getter();
  a1[1] = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, _ConditionalContent<TranscriptSubtitle, TranscriptView>>);
  return closure #1 in CaptionsView.body.getter((uint64_t)a1 + *(int *)(v3 + 44));
}

uint64_t closure #1 in CaptionsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v56 = type metadata accessor for TranscriptView(0);
  MEMORY[0x1F4188790](v56);
  uint64_t v2 = &v44[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = &v44[-v4];
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<TranscriptSubtitle, TranscriptView>.Storage);
  MEMORY[0x1F4188790](v52);
  char v54 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v53 = type metadata accessor for TranscriptSubtitle(0);
  MEMORY[0x1F4188790](v53);
  uint64_t v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (static Platform.current.getter() == 2
    && (swift_retain(),
        CaptionsViewModel.source.getter(),
        swift_release(),
        char v9 = CaptionsStateSource.isMinimized.getter(),
        swift_release(),
        (v9 & 1) != 0))
  {
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    uint64_t v10 = CaptionsStateSource.sections.getter();
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    char v11 = CaptionsStateSource.isGroupCall.getter();
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    char v12 = CaptionsStateSource.allowsMinimization.getter();
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    uint64_t v13 = CaptionsStateSource.onRequestMinimize.getter();
    uint64_t v15 = v14;
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    uint64_t v16 = CaptionsStateSource.onRequestDismissControls.getter();
    uint64_t v18 = v17;
    swift_release();
    CaptionsViewModel.layoutIdiom.getter(&v58);
    unsigned __int8 v57 = v58;
    TranscriptSubtitle.init(sections:isGroupCall:allowsMinimization:onRequestMinimize:onRequestDismissControls:layoutIdiom:)(v10, v11 & 1, v12 & 1, v13, v15, v16, v18, &v57, (uint64_t)v8);
    outlined init with copy of TranscriptLabel((uint64_t)v8, (uint64_t)v54, (void (*)(void))type metadata accessor for TranscriptSubtitle);
    swift_storeEnumTagMultiPayload();
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type TranscriptSubtitle and conformance TranscriptSubtitle);
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type TranscriptView and conformance TranscriptView);
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    uint64_t v50 = CaptionsStateSource.sections.getter();
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    uint64_t v19 = CaptionsStateSource.callName.getter();
    object = v20;
    swift_release();
    if (object)
    {
      uint64_t countAndFlagsBits = v19;
    }
    else
    {
      id v22 = objc_msgSend(self, sel_conversationKit);
      v59._object = (void *)0xE000000000000000;
      v23._uint64_t countAndFlagsBits = 0x454D495445434146;
      v23._object = (void *)0xE800000000000000;
      v24.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
      v24.value._object = (void *)0xEF74694B6E6F6974;
      v25._uint64_t countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      v59._uint64_t countAndFlagsBits = 0;
      Swift::String v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v59);
      uint64_t countAndFlagsBits = v26._countAndFlagsBits;
      object = v26._object;
    }
    swift_retain();
    CaptionsViewModel.source.getter();
    uint64_t v27 = CaptionsStateSource.groupImage.getter();
    swift_release();
    uint64_t v51 = v5;
    int v48 = object;
    if (v27) {
      uint64_t v47 = Image.init(uiImage:)();
    }
    else {
      uint64_t v47 = 0;
    }
    CaptionsViewModel.source.getter();
    swift_release();
    uint64_t v46 = CaptionsStateSource.participants.getter();
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    int v45 = CaptionsStateSource.isGroupCall.getter();
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    char v28 = CaptionsStateSource.isMinimized.getter();
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    uint64_t v29 = CaptionsStateSource.languageModelDownloadingProgress.getter();
    char v31 = v30;
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    char v32 = CaptionsStateSource.allowsMinimization.getter();
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    uint64_t v33 = CaptionsStateSource.onRequestMinimize.getter();
    uint64_t v35 = v34;
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    uint64_t v36 = CaptionsStateSource.onRequestDismissControls.getter();
    uint64_t v38 = v37;
    swift_release();
    uint64_t v39 = countAndFlagsBits;
    *(void *)uint64_t v2 = v50;
    *((void *)v2 + 1) = v39;
    uint64_t v40 = v47;
    *((void *)v2 + 2) = v48;
    *((void *)v2 + 3) = v40;
    *((void *)v2 + 4) = v46;
    v2[40] = v45 & 1;
    v2[41] = v28 & 1;
    v2[56] = v31 & 1;
    v2[57] = v32 & 1;
    *((void *)v2 + 8) = v33;
    *((void *)v2 + 9) = v35;
    *((void *)v2 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v36;
    *((void *)v2 + 11) = v38;
    long long v41 = (uint64_t *)&v2[*(int *)(v56 + 56)];
    *((void *)v2 + 6) = v29;
    *long long v41 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = (uint64_t)v51;
    outlined init with take of TranscriptLabel((uint64_t)v2, (uint64_t)v51, (void (*)(void))type metadata accessor for TranscriptView);
    outlined init with copy of TranscriptLabel(v42, (uint64_t)v54, (void (*)(void))type metadata accessor for TranscriptView);
    swift_storeEnumTagMultiPayload();
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type TranscriptSubtitle and conformance TranscriptSubtitle);
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type TranscriptView and conformance TranscriptView);
    _ConditionalContent<>.init(storage:)();
  }
  return _s15ConversationKit11ParticipantV5StateOWOhTm_3();
}

uint64_t TranscriptSubtitle.init(sections:isGroupCall:allowsMinimization:onRequestMinimize:onRequestDismissControls:layoutIdiom:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned __int8 *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v33 = a4;
  uint64_t v34 = a6;
  int v31 = a2;
  int v32 = a3;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v30 - v18;
  int v20 = *a8;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  State.init(wrappedValue:)();
  uint64_t v21 = v38;
  *(_OWORD *)(a9 + 88) = v37;
  *(void *)(a9 + 104) = v21;
  type metadata accessor for TranscriptSubtitle(0);
  uint64_t v22 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v22);
  outlined init with copy of FeatureEligibility?((uint64_t)v19, (uint64_t)v16, &demangling cache variable for type metadata for Participant?);
  State.init(wrappedValue:)();
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v19, &demangling cache variable for type metadata for Participant?);
  *(void *)(a9 + 8) = a1;
  *(unsigned char *)(a9 + 16) = v31;
  *(unsigned char *)(a9 + 17) = v32;
  *(void *)(a9 + 24) = v33;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v34;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)a9 = v20;
  if (v20 == 1)
  {
    uint64_t v23 = one-time initialization token for subtitleStyleDefaultSmallWidth;
    swift_retain();
    swift_retain();
    if (v23 != -1) {
      swift_once();
    }
    Swift::String_optional v24 = &static Layout.Captions.subtitleStyleDefaultSmallWidth;
  }
  else
  {
    uint64_t v25 = one-time initialization token for subtitleStyleDefaultWidth;
    swift_retain();
    swift_retain();
    if (v25 != -1) {
      swift_once();
    }
    Swift::String_optional v24 = &static Layout.Captions.subtitleStyleDefaultWidth;
  }
  uint64_t v35 = *v24;
  State.init(wrappedValue:)();
  uint64_t v26 = *((void *)&v37 + 1);
  *(void *)(a9 + 56) = v37;
  *(void *)(a9 + 64) = v26;
  if (v20)
  {
    if (one-time initialization token for subtitleStyleDefaultSmallHeight != -1) {
      swift_once();
    }
    uint64_t v27 = &static Layout.Captions.subtitleStyleDefaultSmallHeight;
  }
  else
  {
    if (one-time initialization token for subtitleStyleDefaultHeight != -1) {
      swift_once();
    }
    uint64_t v27 = &static Layout.Captions.subtitleStyleDefaultHeight;
  }
  uint64_t v35 = *v27;
  State.init(wrappedValue:)();
  swift_release();
  long long v28 = v37;
  uint64_t result = swift_release();
  *(_OWORD *)(a9 + 72) = v28;
  return result;
}

uint64_t CaptionsView.groupImage.getter()
{
  swift_retain();
  CaptionsViewModel.source.getter();
  swift_release();
  unint64_t v0 = CaptionsStateSource.groupImage.getter();
  swift_release();
  if (v0) {
    return Image.init(uiImage:)();
  }
  else {
    return 0;
  }
}

uint64_t TranscriptView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v80 = a1;
  uint64_t v3 = type metadata accessor for TranscriptView(0);
  uint64_t v77 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v78 = v4;
  uint64_t v79 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v81 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  *(void *)&long long v64 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v54 - v8;
  uint64_t v63 = type metadata accessor for TranscriptList(0) - 8;
  MEMORY[0x1F4188790](v63);
  char v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>)
      - 8;
  MEMORY[0x1F4188790](v68);
  uint64_t v67 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v66 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v70 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>, _FixedSizeLayout>);
  MEMORY[0x1F4188790](v69);
  uint64_t v71 = (uint64_t)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1F4188790](v76);
  uint64_t v75 = (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  uint64_t v73 = *(void *)(v19 - 8);
  uint64_t v74 = v19;
  MEMORY[0x1F4188790](v19);
  int v72 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = *(void *)v1;
  uint64_t v21 = *(void *)(v1 + 16);
  uint64_t v65 = *(void *)(v1 + 8);
  uint64_t v55 = v21;
  uint64_t v22 = *(void *)(v1 + 32);
  uint64_t v57 = *(void *)(v1 + 24);
  int v62 = *(unsigned __int8 *)(v1 + 40);
  int v61 = *(unsigned __int8 *)(v1 + 41);
  uint64_t v60 = *(void *)(v1 + 48);
  int v59 = *(unsigned __int8 *)(v1 + 56);
  int v58 = *(unsigned __int8 *)(v1 + 57);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = v9;
  specialized Environment.wrappedValue.getter();
  uint64_t v24 = v81;
  uint64_t v25 = v64;
  (*(void (**)(void, void, uint64_t))(v81 + 104))(v64, *MEMORY[0x1E4F3CB70], v5);
  _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize);
  char v26 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v27(v25, v5);
  v27((uint64_t)v23, v5);
  uint64_t v28 = *(void *)(v2 + 64);
  uint64_t v29 = *(void *)(v2 + 88);
  LOBYTE(v25) = (v26 & 1) == 0;
  long long v64 = *(_OWORD *)(v2 + 72);
  swift_retain();
  swift_retain();
  specialized Environment.wrappedValue.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = v63;
  *(void *)&v11[*(int *)(v63 + 76)] = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = v65;
  *(void *)char v11 = v56;
  *((void *)v11 + 1) = v32;
  uint64_t v33 = v57;
  *((void *)v11 + 2) = v55;
  *((void *)v11 + 3) = v33;
  *((void *)v11 + 4) = v22;
  v11[40] = v62;
  v11[41] = v61;
  *((void *)v11 + 6) = v60;
  v11[56] = v59;
  v11[57] = v58;
  v11[58] = v25;
  *((void *)v11 + 8) = v28;
  *(_OWORD *)(v11 + 72) = v64;
  *((void *)v11 + 11) = v29;
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v11[*(int *)(v31 + 68)], v23, v5);
  uint64_t v34 = &v11[*(int *)(v31 + 72)];
  char v84 = 1;
  State.init(wrappedValue:)();
  uint64_t v35 = v83;
  *uint64_t v34 = v82;
  *((void *)v34 + 1) = v35;
  LOBYTE(v34) = *(unsigned char *)(v2 + 41);
  LOBYTE(v31) = *(unsigned char *)(v2 + 40);
  uint64_t v36 = v67;
  outlined init with copy of TranscriptLabel((uint64_t)v11, v67, (void (*)(void))type metadata accessor for TranscriptList);
  long long v37 = (unsigned char *)(v36 + *(int *)(v68 + 44));
  *long long v37 = (_BYTE)v34;
  v37[1] = v31;
  uint64_t v38 = (uint64_t)v66;
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  outlined init with copy of FeatureEligibility?(v36, v38, &demangling cache variable for type metadata for ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>);
  outlined destroy of Environment<RedactionReasons>.Content(v36, &demangling cache variable for type metadata for ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>);
  if (*(unsigned char *)(v2 + 41) == 1)
  {
    if (one-time initialization token for bubblePadding != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v39 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
    objc_msgSend(v39, sel_lineHeight);
  }
  static Alignment.center.getter();
  uint64_t v40 = (uint64_t)v70;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined destroy of Environment<RedactionReasons>.Content(v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>);
  char v41 = *(unsigned char *)(v2 + 41);
  uint64_t v42 = v71;
  outlined init with copy of FeatureEligibility?(v40, v71, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>);
  long long v43 = (unsigned char *)(v42 + *(int *)(v69 + 36));
  *long long v43 = 0;
  v43[1] = v41;
  outlined destroy of Environment<RedactionReasons>.Content(v40, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>);
  char v44 = *(unsigned char *)(v2 + 41);
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = swift_allocObject();
  *(unsigned char *)(v46 + 16) = v44;
  uint64_t v47 = v75;
  outlined init with copy of FeatureEligibility?(v42, v75, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>, _FixedSizeLayout>);
  int v48 = (uint64_t *)(v47 + *(int *)(v76 + 36));
  *int v48 = v45;
  v48[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
  v48[2] = v46;
  outlined destroy of Environment<RedactionReasons>.Content(v42, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>, _FixedSizeLayout>);
  uint64_t v49 = v79;
  outlined init with copy of TranscriptLabel(v2, v79, (void (*)(void))type metadata accessor for TranscriptView);
  unint64_t v50 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
  uint64_t v51 = swift_allocObject();
  outlined init with take of TranscriptLabel(v49, v51 + v50, (void (*)(void))type metadata accessor for TranscriptView);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  uint64_t v52 = v72;
  View.onTapGesture(count:perform:)();
  swift_release();
  outlined destroy of Environment<RedactionReasons>.Content(v47, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>>);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v73 + 32))(v80, v52, v74);
}

uint64_t TranscriptView.ClipShapeModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptView.ClipShapeModifier>, _ClipEffect<RoundedRectangle>>);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Platform.current.getter();
  if (one-time initialization token for cornerRadius != -1) {
    swift_once();
  }
  uint64_t v10 = static Layout.Captions.cornerRadius;
  char v11 = (char *)v6 + *(int *)(v4 + 20);
  uint64_t v12 = *MEMORY[0x1E4F3D4A0];
  uint64_t v13 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  *uint64_t v6 = v10;
  v6[1] = v10;
  uint64_t v14 = (uint64_t)&v9[*(int *)(v7 + 36)];
  outlined init with copy of TranscriptLabel((uint64_t)v6, v14, MEMORY[0x1E4F3CDB8]);
  *(_WORD *)(v14
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>)
                    + 36)) = 256;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<TranscriptView.ClipShapeModifier>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v9, a1, v15);
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  uint64_t v16 = static SafeAreaRegions.all.getter();
  char v17 = static Edge.Set.all.getter();
  outlined init with copy of FeatureEligibility?((uint64_t)v9, a2, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptView.ClipShapeModifier>, _ClipEffect<RoundedRectangle>>);
  uint64_t v18 = a2
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptView.ClipShapeModifier>, _ClipEffect<RoundedRectangle>>, _SafeAreaRegionsIgnoringLayout>)
               + 36);
  *(void *)uint64_t v18 = v16;
  *(unsigned char *)(v18 + 8) = v17;
  return outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptView.ClipShapeModifier>, _ClipEffect<RoundedRectangle>>);
}

uint64_t TranscriptView.BackgroundModifier.body(content:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Material();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptView.BackgroundModifier>, _BackgroundStyleModifier<AnyShapeStyle>>);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v19 - v11;
  uint64_t v13 = static Platform.current.getter();
  if (a2)
  {
    MEMORY[0x1C8772A80](v13);
  }
  else
  {
    if (one-time initialization token for background != -1) {
      swift_once();
    }
    v19[1] = static Colors.Captions.background;
    swift_retain();
  }
  uint64_t v14 = AnyShapeStyle.init<A>(_:)();
  char v15 = static Edge.Set.all.getter();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<TranscriptView.BackgroundModifier>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v9, a1, v16);
  char v17 = &v9[*(int *)(v7 + 36)];
  *(void *)char v17 = v14;
  v17[8] = v15;
  outlined init with take of Any?((uint64_t)v9, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptView.BackgroundModifier>, _BackgroundStyleModifier<AnyShapeStyle>>);
  return outlined init with take of Any?((uint64_t)v12, a3, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptView.BackgroundModifier>, _BackgroundStyleModifier<AnyShapeStyle>>);
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance TranscriptView.BackgroundModifier@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptView.BackgroundModifier.body(content:)(a1, *v2, a2);
}

uint64_t TranscriptList.body.getter@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v3 = type metadata accessor for TranscriptList(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  outlined init with copy of TranscriptLabel(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for TranscriptList);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = outlined init with take of TranscriptLabel((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (void (*)(void))type metadata accessor for TranscriptList);
  *a1 = partial apply for closure #1 in TranscriptList.body.getter;
  a1[1] = (uint64_t (*)())v7;
  return result;
}

uint64_t closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v6 = type metadata accessor for ScrollViewProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TranscriptList(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10 - 8);
  outlined init with copy of TranscriptLabel(a2, (uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for TranscriptList);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v12 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  outlined init with take of TranscriptLabel((uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v13, (void (*)(void))type metadata accessor for TranscriptList);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, v9, v6);
  *a3 = partial apply for closure #1 in closure #1 in TranscriptList.body.getter;
  a3[1] = (uint64_t (*)())v15;
  return result;
}

uint64_t closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v32 = a4;
  uint64_t v7 = TranscriptList.lastTwoCaptionsIDs()();
  GeometryProxy.size.getter();
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, TranscriptList.PaddingModifier>,);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, TranscriptList.PaddingModifier>);
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v21 = static HorizontalAlignment.leading.getter();
  *((void *)v21 + 1) = 0;
  v21[16] = 0;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>);
  closure #1 in closure #1 in closure #1 in TranscriptList.body.getter((uint64_t)a2, a1, v7, a3, (uint64_t)&v21[*(int *)(v22 + 44)], 0.0, 0.0, v9, v11);
  swift_bridgeObjectRelease();
  LOBYTE(a1) = a2[40];
  LOBYTE(v7) = *(void *)(*(void *)a2 + 16) == 0;
  outlined init with copy of FeatureEligibility?((uint64_t)v21, (uint64_t)v18, &demangling cache variable for type metadata for VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>);
  uint64_t v23 = &v18[*(int *)(v16 + 44)];
  char *v23 = a1;
  v23[1] = v7;
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v21, &demangling cache variable for type metadata for VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>);
  if (static Platform.current.getter() == 2) {
    uint64_t v24 = static Alignment.bottomTrailing.getter();
  }
  else {
    uint64_t v24 = static Alignment.topTrailing.getter();
  }
  uint64_t v26 = v24;
  uint64_t v27 = v25;
  closure #2 in closure #1 in closure #1 in TranscriptList.body.getter((uint64_t)a2, (uint64_t)a3, (uint64_t *)&v33);
  long long v31 = v33;
  uint64_t v28 = v34;
  outlined init with copy of FeatureEligibility?((uint64_t)v18, (uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, TranscriptList.PaddingModifier>);
  uint64_t v29 = &v14[*(int *)(v12 + 36)];
  *(_OWORD *)uint64_t v29 = v31;
  *((void *)v29 + 2) = v28;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v27;
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, TranscriptList.PaddingModifier>);
  return outlined init with take of Any?((uint64_t)v14, v32, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, TranscriptList.PaddingModifier>,);
}

uint64_t TranscriptList.lastTwoCaptionsIDs()()
{
  uint64_t v1 = type metadata accessor for TranscriptList(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)v0;
  uint64_t v5 = *(void *)(*(void *)v0 + 16);
  if (!v5) {
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v6 = v5 - 1;
  uint64_t v7 = type metadata accessor for CaptionSectioner.SpeakerSection(0);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 72);
  uint64_t v10 = specialized BidirectionalCollection.suffix(_:)(2, *(void *)(v4 + v8 + v9 * v6 + *(int *)(v7 + 24)));
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  unint64_t v16 = v15;
  swift_bridgeObjectRetain();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs10ArraySliceVy15ConversationKit16CaptionSectionerV0H0VG_AJ0H2IDVs5NeverOTg504_s15f84Kit14TranscriptList33_28E431076EC11867EF27B9C11E6DD7B1LLV18lastTwoCaptionsIDsShyAA16hI68V0Q2IDVGyFAiG0Q0Vcfu_32e0c6332a02d4f1db5ccccca02d9fc0cdAlITf3nnnpk_nTf1cn_nTm(v10, v12, v14, v16);
  uint64_t v18 = v17;
  swift_unknownObjectRelease();
  uint64_t v19 = specialized Set.init<A>(_:)(v18);
  uint64_t v20 = *(void *)(v19 + 16);
  outlined init with copy of TranscriptLabel(v0, (uint64_t)v3, (void (*)(void))type metadata accessor for TranscriptList);
  if (v20 == 2)
  {
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  }
  else
  {
    unint64_t v21 = *(void *)(*(void *)v3 + 16);
    uint64_t result = _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    if (v21 >= 2)
    {
      unint64_t v23 = *(void *)(*(void *)v0 + 16);
      BOOL v24 = v23 >= 2;
      unint64_t v25 = v23 - 2;
      if (!v24)
      {
        __break(1u);
        return result;
      }
      uint64_t v26 = specialized BidirectionalCollection.suffix(_:)(2 - *(void *)(v19 + 16), *(void *)(*(void *)v0 + v8 + v25 * v9 + *(int *)(v7 + 24)));
      uint64_t v28 = v27;
      uint64_t v30 = v29;
      unint64_t v32 = v31;
      swift_bridgeObjectRetain();
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs10ArraySliceVy15ConversationKit16CaptionSectionerV0H0VG_AJ0H2IDVs5NeverOTg504_s15f84Kit14TranscriptList33_28E431076EC11867EF27B9C11E6DD7B1LLV18lastTwoCaptionsIDsShyAA16hI68V0Q2IDVGyFAiG0Q0Vcfu_32e0c6332a02d4f1db5ccccca02d9fc0cdAlITf3nnnpk_nTf1cn_nTm(v26, v28, v30, v32);
      uint64_t v34 = v33;
      swift_unknownObjectRelease();
      uint64_t v35 = specialized Set.init<A>(_:)(v34);
      specialized Set.union<A>(_:)(v35, v19);
      return v36;
    }
  }
  return v19;
}

uint64_t closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _DWORD *a4@<X3>, uint64_t a5@<X8>, CGFloat a6@<D0>, CGFloat a7@<D1>, CGFloat a8@<D2>, CGFloat a9@<D3>)
{
  uint64_t v94 = a4;
  *(void *)&long long v87 = a3;
  uint64_t v86 = a2;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v80 - v19;
  uint64_t v21 = type metadata accessor for TranscriptList(0);
  MEMORY[0x1F4188790](v21 - 8);
  unint64_t v23 = (char *)v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)v80 - v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  unint64_t v32 = (char *)v80 - v31;
  char v33 = *(unsigned char *)(a1 + 40);
  outlined init with copy of TranscriptLabel(a1, (uint64_t)v26, (void (*)(void))type metadata accessor for TranscriptList);
  uint64_t v95 = v29;
  uint64_t v96 = a5;
  if ((v33 & 1) == 0)
  {
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    goto LABEL_5;
  }
  uint64_t v34 = *(void *)(*(void *)v26 + 16);
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  if (!v34)
  {
LABEL_5:
    int v37 = *(unsigned __int8 *)(a1 + 41);
    outlined init with copy of TranscriptLabel(a1, (uint64_t)v23, (void (*)(void))type metadata accessor for TranscriptList);
    char v38 = v37 != 1 || *(void *)(*(void *)v23 + 16) == 0;
    uint64_t v36 = v94;
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    *(void *)uint64_t v17 = static HorizontalAlignment.leading.getter();
    *((void *)v17 + 1) = 0;
    v17[16] = 0;
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>);
    closure #1 in TranscriptList.callHeader.getter(a1, v38, &v17[*(int *)(v39 + 44)]);
    outlined init with take of Any?((uint64_t)v17, (uint64_t)v20, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>);
    outlined init with take of Any?((uint64_t)v20, (uint64_t)v32, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>);
    uint64_t v35 = 0;
    goto LABEL_9;
  }
  uint64_t v35 = 1;
  uint64_t v36 = v94;
LABEL_9:
  __swift_storeEnumTagSinglePayload((uint64_t)v32, v35, 1, v15);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>);
  uint64_t v94 = v80;
  uint64_t v89 = v40;
  MEMORY[0x1F4188790](v40);
  unint64_t v91 = (v41 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v92 = v41;
  uint64_t v93 = (char *)v80 - v91;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>);
  uint64_t v88 = v80;
  uint64_t v84 = v42;
  MEMORY[0x1F4188790](v42);
  uint64_t v85 = (char *)v80 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>);
  uint64_t v83 = v80;
  uint64_t v82 = v44;
  uint64_t v45 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  char v90 = v32;
  uint64_t v47 = (char *)v80 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = static Axis.Set.vertical.getter();
  v80[3] = v48;
  uint64_t v81 = v80;
  v80[2] = *(unsigned __int8 *)(a1 + 41);
  MEMORY[0x1F4188790](v48);
  uint64_t v49 = v86;
  *(void *)&v80[-16] = a1;
  *(void *)&v80[-14] = v49;
  *(void *)&v80[-12] = v87;
  *(CGFloat *)&v80[-10] = a6;
  *(CGFloat *)&v80[-8] = a7;
  *(CGFloat *)&v80[-6] = a8;
  *(CGFloat *)&v80[-4] = a9;
  *(void *)&v80[-2] = v36;
  *(void *)&long long v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  uint64_t v51 = type metadata accessor for DynamicTypeSize();
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>>);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [CaptionSectioner.SpeakerSection]);
  unint64_t v55 = lazy protocol witness table accessor for type ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>> and conformance <> ModifiedContent<A, B>();
  unint64_t v56 = lazy protocol witness table accessor for type [CaptionSectioner.SpeakerSection] and conformance <A> [A]();
  uint64_t v97 = v53;
  *(void *)&long long v98 = v54;
  *((void *)&v98 + 1) = v55;
  unint64_t v99 = v56;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v97 = v52;
  *(void *)&long long v98 = MEMORY[0x1E4FBB390];
  *((void *)&v98 + 1) = OpaqueTypeConformance2;
  unint64_t v99 = MEMORY[0x1E4FBB3A8];
  uint64_t v58 = swift_getOpaqueTypeConformance2();
  unint64_t v59 = _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize);
  uint64_t v97 = v50;
  *(void *)&long long v98 = v51;
  *((void *)&v98 + 1) = v58;
  unint64_t v99 = v59;
  swift_getOpaqueTypeConformance2();
  ScrollView.init(_:showsIndicators:content:)();
  v101.origin.x = a6;
  v101.origin.y = a7;
  v101.size.double width = a8;
  v101.size.CGFloat height = a9;
  CGRectGetHeight(v101);
  if (one-time initialization token for scrollGradientFraction != -1) {
    swift_once();
  }
  id v60 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v60, sel_lineHeight);

  TranscriptList.maskGradient(viewHeight:gradientHeight:)((uint64_t)&v97);
  uint64_t v61 = v97;
  long long v87 = v98;
  unint64_t v62 = v99;
  uint64_t v63 = v100;
  uint64_t v64 = (uint64_t)v85;
  uint64_t v65 = v82;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v85, v47, v82);
  uint64_t v66 = v64 + *(int *)(v84 + 36);
  *(void *)uint64_t v66 = v61;
  *(_OWORD *)(v66 + 8) = v87;
  *(void *)(v66 + 24) = v62;
  *(void *)(v66 + 32) = v63;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v65);
  uint64_t v67 = static Alignment.center.getter();
  uint64_t v69 = v68;
  uint64_t v70 = (uint64_t)v93;
  uint64_t v71 = (uint64_t)&v93[*(int *)(v89 + 36)];
  closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter((void *)a1, v71);
  int v72 = (uint64_t *)(v71
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>)
                           + 36));
  *int v72 = v67;
  v72[1] = v69;
  outlined init with take of Any?(v64, v70, &demangling cache variable for type metadata for ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>);
  uint64_t v73 = (uint64_t)v90;
  uint64_t v74 = (uint64_t)v95;
  uint64_t v75 = outlined init with copy of FeatureEligibility?((uint64_t)v90, (uint64_t)v95, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?);
  MEMORY[0x1F4188790](v75);
  uint64_t v76 = (char *)v80 - v91;
  outlined init with copy of FeatureEligibility?(v70, (uint64_t)v80 - v91, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>);
  uint64_t v77 = v96;
  outlined init with copy of FeatureEligibility?(v74, v96, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>));
  outlined init with copy of FeatureEligibility?((uint64_t)v76, v77 + *(int *)(v78 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>);
  outlined destroy of Environment<RedactionReasons>.Content(v70, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>);
  outlined destroy of Environment<RedactionReasons>.Content(v73, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?);
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v76, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>);
  return outlined destroy of Environment<RedactionReasons>.Content(v74, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v91 = a4;
  uint64_t v80 = a5;
  uint64_t v78 = type metadata accessor for DynamicTypeSize();
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v75 = (char *)v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ScrollViewProxy();
  uint64_t v94 = *(void *)(v17 - 8);
  uint64_t v95 = v17;
  uint64_t v92 = *(void *)(v94 + 64);
  MEMORY[0x1F4188790](v17);
  char v90 = (char *)v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TranscriptList(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v74 = v19 - 8;
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v87 = (uint64_t)v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for PinnedScrollableViews();
  MEMORY[0x1F4188790](v22);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  uint64_t v79 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v93 = (char *)v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  uint64_t v73 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v89 = (char *)v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>>);
  MEMORY[0x1F4188790](v83);
  uint64_t v81 = (char *)v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>);
  uint64_t v26 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v28 = (char *)v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  static HorizontalAlignment.leading.getter();
  uint64_t v96 = a1;
  uint64_t v97 = a2;
  uint64_t v98 = a3;
  double v99 = a6;
  double v100 = a7;
  double v101 = a8;
  double v102 = a9;
  LODWORD(v103) = 0;
  _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type PinnedScrollableViews and conformance PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)> and conformance TupleView<A>);
  LazyVStack.init(alignment:spacing:pinnedViews:content:)();
  uint64_t v29 = (uint64_t)a1;
  uint64_t v30 = a1;
  uint64_t v31 = v87;
  uint64_t v71 = type metadata accessor for TranscriptList;
  outlined init with copy of TranscriptLabel(v29, v87, (void (*)(void))type metadata accessor for TranscriptList);
  uint64_t v32 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v33 = (v32 + 16) & ~v32;
  uint64_t v34 = v33 + v21;
  uint64_t v82 = v32 | 7;
  uint64_t v35 = swift_allocObject();
  uint64_t v70 = v33;
  uint64_t v88 = type metadata accessor for TranscriptList;
  outlined init with take of TranscriptLabel(v31, v35 + v33, (void (*)(void))type metadata accessor for TranscriptList);
  uint64_t v36 = v81;
  uint64_t v37 = v86;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v81, v28, v86);
  char v38 = (uint64_t (**)())&v36[*(int *)(v83 + 36)];
  *char v38 = partial apply for closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter;
  v38[1] = (uint64_t (*)())v35;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v37);
  uint64_t v84 = v30;
  uint64_t v103 = *v30;
  uint64_t v39 = v31;
  outlined init with copy of TranscriptLabel((uint64_t)v30, v31, (void (*)(void))type metadata accessor for TranscriptList);
  uint64_t v40 = v94;
  uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
  uint64_t v86 = v94 + 16;
  uint64_t v41 = v90;
  uint64_t v42 = v91;
  uint64_t v43 = v95;
  v85(v90, v91, v95);
  uint64_t v44 = *(unsigned __int8 *)(v40 + 80);
  v68[2] = ((v34 + v44) & ~v44) + v92;
  uint64_t v69 = (v34 + v44) & ~v44;
  v68[1] = v82 | v44;
  uint64_t v45 = swift_allocObject();
  outlined init with take of TranscriptLabel(v39, v45 + v33, (void (*)(void))v88);
  uint64_t v82 = *(void *)(v40 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v82)(v45 + ((v34 + v44) & ~v44), v41, v43);
  uint64_t v94 = v40 + 32;
  swift_bridgeObjectRetain();
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [CaptionSectioner.SpeakerSection]);
  unint64_t v47 = lazy protocol witness table accessor for type ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>> and conformance <> ModifiedContent<A, B>();
  unint64_t v48 = lazy protocol witness table accessor for type [CaptionSectioner.SpeakerSection] and conformance <A> [A]();
  uint64_t v49 = v83;
  uint64_t v50 = (uint64_t)v81;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  outlined destroy of Environment<RedactionReasons>.Content(v50, &demangling cache variable for type metadata for ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>>);
  char v107 = *((unsigned char *)v84 + 41);
  uint64_t v51 = v42;
  uint64_t v52 = v95;
  v85(v41, v51, v95);
  uint64_t v53 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v82)(v53 + ((v44 + 16) & ~v44), v41, v52);
  uint64_t v103 = v49;
  uint64_t v104 = v46;
  unint64_t v105 = v47;
  unint64_t v106 = v48;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v55 = v72;
  unint64_t v56 = v89;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v56, v55);
  uint64_t v57 = (uint64_t)v84;
  uint64_t v58 = v77;
  unint64_t v59 = v75;
  uint64_t v60 = v78;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v75, (char *)v84 + *(int *)(v74 + 68), v78);
  uint64_t v61 = v87;
  outlined init with copy of TranscriptLabel(v57, v87, (void (*)(void))v71);
  unint64_t v62 = v90;
  uint64_t v63 = v95;
  v85(v90, v91, v95);
  uint64_t v64 = swift_allocObject();
  outlined init with take of TranscriptLabel(v61, v64 + v70, (void (*)(void))v88);
  ((void (*)(uint64_t, char *, uint64_t))v82)(v64 + v69, v62, v63);
  uint64_t v103 = v55;
  uint64_t v104 = MEMORY[0x1E4FBB390];
  unint64_t v105 = OpaqueTypeConformance2;
  unint64_t v106 = MEMORY[0x1E4FBB3A8];
  swift_getOpaqueTypeConformance2();
  _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize);
  uint64_t v65 = v76;
  uint64_t v66 = v93;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
  return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v66, v65);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t v54 = a3;
  uint64_t v50 = a2;
  uint64_t v66 = a4;
  uint64_t v13 = type metadata accessor for GeometryProxy();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TranscriptList(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = static Color.clear.getter();
  if (one-time initialization token for scrollGradientFraction != -1) {
    swift_once();
  }
  unint64_t v56 = (uint64_t *)self;
  uint64_t v55 = *MEMORY[0x1E4FB28C8];
  id v21 = objc_msgSend(v56, sel_preferredFontForTextStyle_);
  objc_msgSend(v21, sel_lineHeight);

  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v63 = v68;
  int v62 = v69;
  uint64_t v61 = v70;
  int v60 = v71;
  uint64_t v59 = v72;
  uint64_t v58 = v73;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>);
  uint64_t v64 = &v47;
  uint64_t v53 = *(void *)(v57 - 8);
  uint64_t v51 = *(void *)(v53 + 64);
  MEMORY[0x1F4188790](v57);
  unint64_t v52 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v67 = (char *)&v47 - v52;
  uint64_t v74 = *a1;
  outlined init with copy of TranscriptLabel((uint64_t)a1, (uint64_t)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for TranscriptList);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v50, v13);
  uint64_t v23 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v24 = v13;
  uint64_t v25 = (v23 + 16) & ~v23;
  unint64_t v26 = (v19 + *(unsigned __int8 *)(v14 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v27 = (v15 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  outlined init with take of TranscriptLabel((uint64_t)v20, v28 + v25, (void (*)(void))type metadata accessor for TranscriptList);
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v28 + v26, v16, v24);
  *(void *)(v28 + v27) = v54;
  uint64_t v29 = (double *)(v28 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v29 = a5;
  v29[1] = a6;
  v29[2] = a7;
  _OWORD v29[3] = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [CaptionSectioner.SpeakerSection]);
  type metadata accessor for CaptionSectioner.SectionID(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [CaptionSectioner.SpeakerSection] and conformance [A]);
  lazy protocol witness table accessor for type Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView> and conformance <> Section<A, B, C>();
  _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type CaptionSectioner.SpeakerSection and conformance CaptionSectioner.SpeakerSection);
  uint64_t v30 = v67;
  ForEach<>.init(_:content:)();
  uint64_t v54 = static Color.clear.getter();
  id v31 = objc_msgSend(v56, sel_preferredFontForTextStyle_, v55);
  objc_msgSend(v31, sel_lineHeight);

  static Alignment.center.getter();
  uint64_t v32 = _FrameLayout.init(width:height:alignment:)();
  unint64_t v56 = &v47;
  uint64_t v55 = v74;
  LODWORD(v5ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v75;
  uint64_t v49 = v76;
  LOBYTE(v27) = v77;
  uint64_t v33 = v79;
  uint64_t v48 = v78;
  __n128 v34 = MEMORY[0x1F4188790](v32);
  uint64_t v35 = (char *)&v47 - v52;
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t, __n128))(v53 + 16);
  uint64_t v38 = v57;
  v37((char *)&v47 - v52, v30, v57, v34);
  uint64_t v39 = v66;
  uint64_t v40 = v63;
  uint64_t *v66 = v65;
  v39[1] = v40;
  *((unsigned char *)v39 + 16) = v62;
  v39[3] = v61;
  *((unsigned char *)v39 + 32) = v60;
  uint64_t v41 = v58;
  v39[5] = v59;
  v39[6] = v41;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>));
  ((void (*)(char *, char *, uint64_t))v37)((char *)v39 + *(int *)(v42 + 48), v35, v38);
  uint64_t v43 = (char *)v39 + *(int *)(v42 + 64);
  uint64_t v44 = v55;
  *(void *)uint64_t v43 = v54;
  *((void *)v43 + 1) = v44;
  v43[16] = v50;
  *((void *)v43 + 3) = v49;
  v43[32] = v27;
  *((void *)v43 + 5) = v48;
  *((void *)v43 + 6) = v33;
  strcpy(v43 + 56, "scroll-target");
  *((_WORD *)v43 + 35) = -4864;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v36 + 8);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v45(v67, v38);
  swift_bridgeObjectRelease();
  swift_release();
  v45(v35, v38);
  return swift_release();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.redacted(reason:)>>.0)?);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = a1;
  uint64_t v21 = a3;
  uint64_t v22 = a2;
  uint64_t v23 = a4;
  double v24 = a5;
  double v25 = a6;
  double v26 = a7;
  double v27 = a8;
  closure #2 in TranscriptList.sectionContent(for:viewGeometry:autoScrollTriggers:scrollFrame:)(a2, a1, (uint64_t)&v19[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>);
  lazy protocol witness table accessor for type (<<opaque return type of View.redacted(reason:)>>.0)? and conformance <A> A?();
  lazy protocol witness table accessor for type ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0> and conformance <> ForEach<A, B, C>();
  return Section<>.init(header:content:)();
}

uint64_t closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  return State.wrappedValue.setter();
}

uint64_t closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v99 = a4;
  uint64_t v108 = a3;
  uint64_t v104 = type metadata accessor for TranscriptList(0);
  MEMORY[0x1F4188790](v104);
  uint64_t v103 = (uint64_t)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v107 = (char *)&v98 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v106 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v98 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v98 - v15);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v98 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v98 - v21;
  MEMORY[0x1F4188790](v23);
  double v25 = (char *)&v98 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v102 = (uint64_t)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v101 = (uint64_t)&v98 - v29;
  MEMORY[0x1F4188790](v30);
  double v100 = (uint64_t *)((char *)&v98 - v31);
  MEMORY[0x1F4188790](v32);
  __n128 v34 = (uint64_t *)((char *)&v98 - v33);
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (uint64_t *)((char *)&v98 - v36);
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (uint64_t *)((char *)&v98 - v39);
  uint64_t v41 = *a1;
  uint64_t v109 = *a2;
  uint64_t v105 = v41;
  specialized BidirectionalCollection.last.getter(v41, (uint64_t)v25);
  uint64_t v42 = type metadata accessor for CaptionSectioner.SpeakerSection(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v42) == 1)
  {
    uint64_t v43 = &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?;
    uint64_t v44 = (uint64_t)v25;
LABEL_5:
    outlined destroy of Environment<RedactionReasons>.Content(v44, v43);
    uint64_t v47 = 0;
    char v48 = 1;
    goto LABEL_7;
  }
  uint64_t v45 = *(void *)&v25[*(int *)(v42 + 24)];
  swift_bridgeObjectRetain();
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  specialized BidirectionalCollection.last.getter(v45, (uint64_t)v40);
  swift_bridgeObjectRelease();
  uint64_t v46 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v46) == 1)
  {
    uint64_t v43 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    uint64_t v44 = (uint64_t)v40;
    goto LABEL_5;
  }
  uint64_t v47 = *v40;
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  char v48 = 0;
LABEL_7:
  specialized BidirectionalCollection.last.getter(v109, (uint64_t)v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v42) == 1)
  {
    uint64_t v49 = &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?;
    uint64_t v50 = (uint64_t)v22;
    goto LABEL_11;
  }
  uint64_t v51 = *(void *)&v22[*(int *)(v42 + 24)];
  swift_bridgeObjectRetain();
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  specialized BidirectionalCollection.last.getter(v51, (uint64_t)v37);
  swift_bridgeObjectRelease();
  uint64_t v52 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v52) == 1)
  {
    uint64_t v49 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    uint64_t v50 = (uint64_t)v37;
LABEL_11:
    outlined destroy of Environment<RedactionReasons>.Content(v50, v49);
    uint64_t v53 = 0;
    int v54 = 1;
    if (v48) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v53 = *v37;
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  int v54 = 0;
  if ((v48 & 1) == 0) {
LABEL_12:
  }
    int v54 = (v47 == v53) & ~v54;
LABEL_13:
  uint64_t v55 = v105;
  specialized Collection.first.getter(v105, (uint64_t)v19);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v42) == 1)
  {
    unint64_t v56 = &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?;
    uint64_t v57 = (uint64_t)v19;
LABEL_17:
    outlined destroy of Environment<RedactionReasons>.Content(v57, v56);
    uint64_t v60 = 0;
    char v61 = 1;
    goto LABEL_21;
  }
  uint64_t v58 = *(void *)&v19[*(int *)(v42 + 24)];
  swift_bridgeObjectRetain();
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  specialized Collection.first.getter(v58, (uint64_t)v34);
  swift_bridgeObjectRelease();
  uint64_t v59 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v59) == 1)
  {
    unint64_t v56 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    uint64_t v57 = (uint64_t)v34;
    goto LABEL_17;
  }
  uint64_t v60 = *v34;
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  char v61 = 0;
LABEL_21:
  specialized Collection.first.getter(v109, (uint64_t)v16);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v42) == 1)
  {
    int v62 = &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?;
LABEL_25:
    outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v16, v62);
    uint64_t v65 = 0;
    int v66 = 1;
    goto LABEL_27;
  }
  uint64_t v63 = *(uint64_t *)((char *)v16 + *(int *)(v42 + 24));
  swift_bridgeObjectRetain();
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  uint64_t v16 = v100;
  specialized Collection.first.getter(v63, (uint64_t)v100);
  swift_bridgeObjectRelease();
  uint64_t v64 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v64) == 1)
  {
    int v62 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    goto LABEL_25;
  }
  uint64_t v65 = *v16;
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  int v66 = 0;
LABEL_27:
  uint64_t v67 = (uint64_t)v106;
  if ((v61 & 1) == 0) {
    int v66 = (v60 == v65) & ~v66;
  }
  specialized BidirectionalCollection.last.getter(v55, (uint64_t)v13);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v42) == 1)
  {
    uint64_t v68 = &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?;
    uint64_t v69 = (uint64_t)v13;
LABEL_33:
    outlined destroy of Environment<RedactionReasons>.Content(v69, v68);
    uint64_t v73 = 0;
    uint64_t v74 = 0;
    goto LABEL_35;
  }
  uint64_t v70 = *(void *)&v13[*(int *)(v42 + 24)];
  swift_bridgeObjectRetain();
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  uint64_t v71 = v101;
  specialized BidirectionalCollection.last.getter(v70, v101);
  swift_bridgeObjectRelease();
  uint64_t v72 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload(v71, 1, v72) == 1)
  {
    uint64_t v68 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    uint64_t v69 = v71;
    goto LABEL_33;
  }
  unsigned __int8 v75 = (uint64_t *)(v71 + *(int *)(v72 + 36));
  uint64_t v73 = *v75;
  uint64_t v74 = v75[1];
  swift_bridgeObjectRetain();
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
LABEL_35:
  specialized BidirectionalCollection.last.getter(v109, v67);
  if (__swift_getEnumTagSinglePayload(v67, 1, v42) == 1)
  {
    uint64_t v76 = &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?;
    uint64_t v77 = v67;
  }
  else
  {
    uint64_t v78 = *(void *)(v67 + *(int *)(v42 + 24));
    swift_bridgeObjectRetain();
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    uint64_t v79 = v102;
    specialized BidirectionalCollection.last.getter(v78, v102);
    swift_bridgeObjectRelease();
    uint64_t v80 = type metadata accessor for CaptionSectioner.Caption(0);
    if (__swift_getEnumTagSinglePayload(v79, 1, v80) != 1)
    {
      uint64_t v86 = (uint64_t *)(v79 + *(int *)(v80 + 36));
      uint64_t v81 = *v86;
      uint64_t v82 = v86[1];
      swift_bridgeObjectRetain();
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      if (v74) {
        goto LABEL_40;
      }
LABEL_47:
      uint64_t v88 = (uint64_t)v107;
      uint64_t v87 = v108;
      if (v82)
      {
        swift_bridgeObjectRelease();
        int v85 = 1;
      }
      else
      {
        int v85 = 0;
      }
      goto LABEL_52;
    }
    uint64_t v76 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    uint64_t v77 = v79;
  }
  outlined destroy of Environment<RedactionReasons>.Content(v77, v76);
  uint64_t v81 = 0;
  uint64_t v82 = 0;
  if (!v74) {
    goto LABEL_47;
  }
LABEL_40:
  if (v82)
  {
    if (v73 == v81 && v74 == v82)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v85 = 0;
    }
    else
    {
      int v84 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v85 = v84 ^ 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    int v85 = 1;
  }
  uint64_t v88 = (uint64_t)v107;
  uint64_t v87 = v108;
LABEL_52:
  outlined init with copy of TranscriptLabel(v87, v88, (void (*)(void))type metadata accessor for TranscriptList);
  if (v66)
  {
    uint64_t v89 = v88 + *(int *)(v104 + 64);
    char v90 = *(unsigned char *)v89;
    uint64_t v91 = *(void *)(v89 + 8);
    LOBYTE(v110[0]) = v90;
    v110[1] = v91;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.getter();
    uint64_t v92 = _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    if (v111 == 1 && ((v54 ^ 1 | v85) & 1) != 0)
    {
      MEMORY[0x1F4188790](v92);
      *(&v98 - 2) = v99;
      static Animation.default.getter();
      withAnimation<A>(_:_:)();
      return swift_release();
    }
  }
  else
  {
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  }
  uint64_t v94 = v103;
  outlined init with copy of TranscriptLabel(v87, v103, (void (*)(void))type metadata accessor for TranscriptList);
  if (v66) {
    return _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  }
  uint64_t v95 = v94 + *(int *)(v104 + 64);
  char v96 = *(unsigned char *)v95;
  uint64_t v97 = *(void *)(v95 + 8);
  LOBYTE(v110[0]) = v96;
  v110[1] = v97;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  uint64_t result = _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  if (v111)
  {
    strcpy((char *)v110, "scroll-target");
    HIWORD(v110[1]) = -4864;
    static UnitPoint.bottom.getter();
    return ScrollViewProxy.scrollTo<A>(_:anchor:)();
  }
  return result;
}

uint64_t closure #1 in closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

uint64_t closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v33 = static OS_dispatch_queue.main.getter();
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v31 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v29 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v28 - v11;
  static DispatchTime.now()();
  MEMORY[0x1C8772E20](v12, 0.05);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v30 = v8 + 8;
  uint64_t v32 = v13;
  v13(v12, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v4);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = partial apply for closure #1 in closure #5 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_172;
  uint64_t v16 = _Block_copy(aBlock);
  swift_release();
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v21 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC860];
  lazy protocol witness table accessor for type AttributedString.Index and conformance AttributedString.Index((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  double v25 = v29;
  uint64_t v26 = (void *)v33;
  MEMORY[0x1C8773B10](v29, v20, v24, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  return v32(v25, v31);
}

uint64_t closure #5 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for ScrollViewProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)(a3 + *(int *)(type metadata accessor for TranscriptList(0) + 64));
  char v10 = *v9;
  uint64_t v11 = *((void *)v9 + 1);
  LOBYTE(aBlock) = v10;
  uint64_t v40 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  uint64_t result = State.wrappedValue.getter();
  if (v45 == 1)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v37 = static OS_dispatch_queue.main.getter();
    uint64_t v13 = type metadata accessor for DispatchTime();
    uint64_t v38 = v32;
    uint64_t v35 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    MEMORY[0x1F4188790](v13);
    uint64_t v33 = v32;
    MEMORY[0x1F4188790](v15);
    uint64_t v17 = (char *)v32 - v16;
    static DispatchTime.now()();
    MEMORY[0x1C8772E20](v17, 0.05);
    uint64_t v18 = *(uint64_t (**)(void *, uint64_t))(v14 + 8);
    uint64_t v34 = v14 + 8;
    uint64_t v36 = v18;
    v18(v17, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v6);
    unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v20 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    uint64_t v43 = partial apply for closure #1 in closure #5 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter;
    uint64_t v44 = v20;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v40 = 1107296256;
    uint64_t v41 = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v42 = &block_descriptor_118;
    uint64_t v21 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v22 = type metadata accessor for DispatchQoS();
    v32[2] = v32;
    uint64_t v23 = *(void *)(v22 - 8);
    MEMORY[0x1F4188790](v22);
    double v25 = (char *)v32 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    static DispatchQoS.unspecified.getter();
    uint64_t v26 = type metadata accessor for DispatchWorkItemFlags();
    v32[1] = v32;
    uint64_t v27 = *(void *)(v26 - 8);
    MEMORY[0x1F4188790](v26);
    uint64_t v29 = (char *)v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    lazy protocol witness table accessor for type AttributedString.Index and conformance AttributedString.Index((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v30 = v33;
    uint64_t v31 = (void *)v37;
    MEMORY[0x1C8773B10](v33, v25, v29, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    return v36(v30, v35);
  }
  return result;
}

uint64_t closure #1 in closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

double TranscriptList.maskGradient(viewHeight:gradientHeight:)@<D0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Gradient.Stop>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C376A6F0;
  static Color.clear.getter();
  *(void *)(v2 + 32) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v3;
  static Color.black.getter();
  *(void *)(v2 + 48) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 56) = v4;
  static Color.black.getter();
  *(void *)(v2 + 64) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 72) = v5;
  static Color.clear.getter();
  *(void *)(v2 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 88) = v6;
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  MEMORY[0x1C8772A40](v2);
  LinearGradient.init(gradient:startPoint:endPoint:)();
  double result = *(double *)&v8;
  *(_OWORD *)a1 = v8;
  *(_OWORD *)(a1 + 16) = v9;
  *(void *)(a1 + 32) = v10;
  return result;
}

uint64_t closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v38 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>);
  MEMORY[0x1F4188790](v36);
  uint64_t v37 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>);
  MEMORY[0x1F4188790](v39);
  uint64_t v35 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?);
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v22 = a1[4];
  uint64_t v23 = one-time initialization token for headerImageSize;
  swift_bridgeObjectRetain();
  if (v23 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v41 = 0;
  uint64_t v42 = v22;
  uint64_t v43 = static Layout.Captions.headerImageSize;
  lazy protocol witness table accessor for type GroupIconView and conformance GroupIconView();
  uint64_t v24 = 1;
  View.accessibilityHidden(_:)();
  swift_bridgeObjectRelease();
  outlined init with copy of FeatureEligibility?((uint64_t)v15, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>);
  *(void *)&v18[*(int *)(v16 + 36)] = 0;
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>);
  outlined init with take of Any?((uint64_t)v18, (uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>);
  uint64_t v25 = v39;
  if (!*(void *)(*a1 + 16))
  {
    uint64_t v26 = static HorizontalAlignment.center.getter();
    uint64_t v27 = (uint64_t)v38;
    *uint64_t v38 = v26;
    *(void *)(v27 + 8) = 0;
    *(unsigned char *)(v27 + 16) = 1;
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>);
    closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter((uint64_t)a1, (char *)(v27 + *(int *)(v28 + 44)));
    uint64_t v29 = v37;
    outlined init with copy of FeatureEligibility?(v27, v37, &demangling cache variable for type metadata for VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>);
    *(_WORD *)(v29 + *(int *)(v36 + 36)) = 257;
    outlined destroy of Environment<RedactionReasons>.Content(v27, &demangling cache variable for type metadata for VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>);
    int v30 = static HierarchicalShapeStyle.primary.getter();
    uint64_t v31 = v35;
    outlined init with copy of FeatureEligibility?(v29, v35, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>);
    *(_DWORD *)(v31 + *(int *)(v25 + 36)) = v30;
    outlined destroy of Environment<RedactionReasons>.Content(v29, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>);
    outlined init with take of Any?(v31, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>);
    uint64_t v24 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v12, v24, 1, v25);
  outlined init with copy of FeatureEligibility?((uint64_t)v21, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>);
  outlined init with copy of FeatureEligibility?((uint64_t)v12, (uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?);
  uint64_t v32 = v40;
  outlined init with copy of FeatureEligibility?((uint64_t)v18, v40, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?));
  outlined init with copy of FeatureEligibility?((uint64_t)v9, v32 + *(int *)(v33 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?);
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?);
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>);
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?);
  return outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>);
}

uint64_t closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  char v45 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProgressView<EmptyView, EmptyView>);
  uint64_t v42 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v40);
  uint64_t v44 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x1F4188790](v46 - 8);
  uint64_t v41 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v43 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image?>);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v39 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v39 - v21;
  uint64_t v48 = a1;
  uint64_t v47 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Image?);
  lazy protocol witness table accessor for type Image? and conformance <A> A?();
  Label.init(title:icon:)();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v22, v19, v13);
  uint64_t v23 = 1;
  if ((*(unsigned char *)(a1 + 56) & 1) == 0)
  {
    uint64_t v24 = *(void *)(a1 + 48);
    LOBYTE(__src[1]) = 0;
    uint64_t v49 = 0x3FF0000000000000;
    __src[0] = v24;
    lazy protocol witness table accessor for type Double and conformance Double();
    ProgressView.init<A>(value:total:)();
    static Alignment.center.getter();
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    uint64_t v25 = v42;
    uint64_t v26 = v3;
    uint64_t v27 = v44;
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v44, v5, v26);
    memcpy((void *)(v27 + *(int *)(v40 + 36)), __src, 0x70uLL);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
    if (one-time initialization token for progressBar != -1) {
      swift_once();
    }
    uint64_t v28 = static Colors.Captions.progressBar;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v30 = v44;
    uint64_t v31 = v41;
    outlined init with copy of FeatureEligibility?(v44, v41, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>);
    uint64_t v32 = (uint64_t *)(v31 + *(int *)(v46 + 36));
    *uint64_t v32 = KeyPath;
    v32[1] = v28;
    swift_retain();
    outlined destroy of Environment<RedactionReasons>.Content(v30, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>);
    outlined init with take of Any?(v31, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
    uint64_t v23 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v12, v23, 1, v46);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v33(v16, v22, v13);
  uint64_t v34 = v43;
  outlined init with copy of FeatureEligibility?((uint64_t)v12, v43, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?);
  uint64_t v35 = v45;
  v33(v45, v16, v13);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?));
  outlined init with copy of FeatureEligibility?(v34, (uint64_t)&v35[*(int *)(v36 + 48)], &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?);
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v14 + 8);
  v37(v22, v13);
  outlined destroy of Environment<RedactionReasons>.Content(v34, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?);
  return ((uint64_t (*)(char *, uint64_t))v37)(v16, v13);
}

uint64_t closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 56);
  id v4 = objc_msgSend(self, sel_conversationKit);
  if (v3)
  {
    unint64_t v23 = 0xE000000000000000;
    unint64_t v5 = 0x80000001C37BEF10;
    unint64_t v6 = 0xD000000000000016;
  }
  else
  {
    unint64_t v6 = 0xD00000000000001ALL;
    unint64_t v23 = 0xE000000000000000;
    unint64_t v5 = 0x80000001C37BEF50;
  }
  v7.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v9 = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, v7, (NSBundle)v4, v8, *(Swift::String *)(&v23 - 1));

  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  if (static Platform.current.getter() == 2) {
    static Font.headline.getter();
  }
  else {
    static Font.caption.getter();
  }
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v21 = v20;
  swift_release();
  outlined consume of Text.Storage(v10, v12, v14 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v17;
  *(unsigned char *)(a2 + 16) = v19 & 1;
  *(void *)(a2 + 24) = v21;
  return result;
}

uint64_t closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 56) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t result = Image.init(systemName:)();
  }
  else
  {
    uint64_t result = 0;
  }
  *a2 = result;
  return result;
}

uint64_t closure #2 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v48 = a2;
  unint64_t v56 = a3;
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = v5;
  uint64_t v51 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContentSizeCategory();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v50 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v49 = (char *)&v44 - v10;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v44 - v12;
  uint64_t v14 = type metadata accessor for TranscriptList(0);
  uint64_t v46 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v46 + 64);
  MEMORY[0x1F4188790](v14);
  MEMORY[0x1F4188790](v16);
  char v18 = (char *)&v44 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v57 = a1;
  outlined init with copy of TranscriptLabel(a1, (uint64_t)&v44 - v20, (void (*)(void))type metadata accessor for TranscriptList);
  specialized Environment.wrappedValue.getter();
  LOBYTE(a1) = ContentSizeCategory.isAccessibilityCategory.getter();
  uint64_t v52 = v7;
  uint64_t v53 = v6;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21(v13, v6);
  uint64_t result = _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  if ((a1 & 1) == 0)
  {
    uint64_t v44 = v21;
    char v45 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v27 = v57;
    uint64_t v28 = v49;
    specialized Environment.wrappedValue.getter();
    outlined init with copy of TranscriptLabel(v27, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptList);
    uint64_t v30 = v54;
    uint64_t v29 = v55;
    uint64_t v31 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v51, v48, v55);
    unint64_t v32 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    unint64_t v33 = (v15 + *(unsigned __int8 *)(v30 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v24 = swift_allocObject();
    outlined init with take of TranscriptLabel((uint64_t)v18, v24 + v32, (void (*)(void))type metadata accessor for TranscriptList);
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v24 + v33, v31, v29);
    int v34 = static Platform.current.getter();
    uint64_t v35 = v53;
    uint64_t v36 = v50;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v50, v28, v53);
    uint64_t v37 = v28;
    uint64_t v38 = v57;
    if (v34) {
      LOBYTE(v39) = 0;
    }
    else {
      int v39 = ContentSizeCategory.isAccessibilityCategory.getter();
    }
    uint64_t v26 = v56;
    uint64_t v41 = (uint64_t (*)(char *, uint64_t))v44;
    uint64_t v40 = (uint64_t)v45;
    v44(v36, v35);
    int v42 = *(unsigned __int8 *)(v38 + 57);
    outlined init with copy of TranscriptLabel(v38, v40, (void (*)(void))type metadata accessor for TranscriptList);
    if (v42 == 1)
    {
      char v43 = *(unsigned char *)(v40 + 41);
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      if ((v43 & 1) == 0 && (v39 & 1) == 0)
      {
        uint64_t v25 = (uint64_t)partial apply for closure #1 in closure #2 in closure #1 in closure #1 in TranscriptList.body.getter;
        uint64_t v23 = 1;
LABEL_12:
        uint64_t result = v41(v37, v35);
        goto LABEL_13;
      }
    }
    else
    {
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    }
    swift_release();
    uint64_t v23 = 0;
    uint64_t v25 = 0;
    uint64_t v24 = 0;
    goto LABEL_12;
  }
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 1;
  uint64_t v26 = v56;
LABEL_13:
  *uint64_t v26 = v23;
  v26[1] = v25;
  v26[2] = v24;
  return result;
}

uint64_t closure #1 in closure #2 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1)
{
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

uint64_t closure #1 in TranscriptList.callHeader.getter@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  char v45 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Divider?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v47 = static VerticalAlignment.center.getter();
  closure #1 in closure #1 in TranscriptList.callHeader.getter(a1, (uint64_t)v81);
  if (*(unsigned char *)(a1 + 41) == 1)
  {
    id v11 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
    objc_msgSend(v11, sel_lineHeight);
  }
  v74[160] = 0;
  memcpy(&v74[7], v81, 0x94uLL);
  int v46 = 0;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  char v12 = v76;
  uint64_t v13 = v77;
  unsigned __int8 v14 = v78;
  uint64_t v44 = v79;
  uint64_t v42 = v75;
  uint64_t v43 = v80;
  unsigned int v15 = static Edge.Set.bottom.getter();
  int v16 = MEMORY[0x1C8771D90](0);
  int v17 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v17 & v15) != v15) {
    LOBYTE(v16) = MEMORY[0x1C8771D90](v16 | v15);
  }
  if (a2)
  {
    if (one-time initialization token for bubblePadding != -1) {
      swift_once();
    }
    swift_beginAccess();
  }
  memcpy(v73, v74, sizeof(v73));
  char v68 = v12;
  unsigned __int8 v67 = v14;
  EdgeInsets.init(_all:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  char v26 = v68;
  int v27 = v67;
  char v69 = 0;
  if (a2)
  {
    Divider.init()();
    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v28 = 1;
  }
  uint64_t v29 = type metadata accessor for Divider();
  uint64_t v30 = (uint64_t)v10;
  int v39 = v10;
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v28, 1, v29);
  char v31 = v69;
  outlined init with copy of FeatureEligibility?(v30, (uint64_t)v7, &demangling cache variable for type metadata for Divider?);
  v48[0] = v47;
  v48[1] = 0;
  LOBYTE(v48[2]) = v46;
  memcpy((char *)&v48[2] + 1, v73, 0x9BuLL);
  uint64_t v32 = v42;
  v48[22] = v42;
  LOBYTE(v48[23]) = v26;
  *(_DWORD *)((char *)&v48[23] + 1) = *(_DWORD *)v72;
  HIDWORD(v48[23]) = *(_DWORD *)&v72[3];
  v48[24] = v13;
  LOBYTE(v48[25]) = v27;
  *(_DWORD *)((char *)&v48[25] + 1) = *(_DWORD *)v71;
  HIDWORD(v48[25]) = *(_DWORD *)&v71[3];
  uint64_t v41 = v13;
  uint64_t v33 = v44;
  int v40 = v27;
  uint64_t v34 = v43;
  v48[26] = v44;
  v48[27] = v43;
  char v35 = v16;
  LOBYTE(v48[28]) = v16;
  *(_DWORD *)((char *)&v48[28] + 1) = *(_DWORD *)v70;
  HIDWORD(v48[28]) = *(_DWORD *)&v70[3];
  v48[29] = v19;
  v48[30] = v21;
  v48[31] = v23;
  v48[32] = v25;
  LOBYTE(v48[33]) = v31;
  uint64_t v36 = v45;
  memcpy(v45, v48, 0x109uLL);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?));
  outlined init with copy of FeatureEligibility?((uint64_t)v7, (uint64_t)v36 + *(int *)(v37 + 48), &demangling cache variable for type metadata for Divider?);
  outlined retain of ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>((uint64_t)v48);
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v39, &demangling cache variable for type metadata for Divider?);
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v7, &demangling cache variable for type metadata for Divider?);
  v49[0] = v47;
  v49[1] = 0;
  char v50 = v46;
  memcpy(v51, v73, sizeof(v51));
  uint64_t v52 = v32;
  char v53 = v26;
  *(_DWORD *)uint64_t v54 = *(_DWORD *)v72;
  *(_DWORD *)&v54[3] = *(_DWORD *)&v72[3];
  uint64_t v55 = v41;
  char v56 = v40;
  *(_DWORD *)uint64_t v57 = *(_DWORD *)v71;
  *(_DWORD *)&v57[3] = *(_DWORD *)&v71[3];
  uint64_t v58 = v33;
  uint64_t v59 = v34;
  char v60 = v35;
  *(_DWORD *)char v61 = *(_DWORD *)v70;
  *(_DWORD *)&v61[3] = *(_DWORD *)&v70[3];
  uint64_t v62 = v19;
  uint64_t v63 = v21;
  uint64_t v64 = v23;
  uint64_t v65 = v25;
  char v66 = v31;
  return outlined release of ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>((uint64_t)v49);
}

uint64_t closure #1 in closure #1 in TranscriptList.callHeader.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v85 = type metadata accessor for Font.Leading();
  uint64_t v84 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v80 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptList(0);
  MEMORY[0x1F4188790](v4);
  uint64_t KeyPath = (uint64_t)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v6);
  unsigned __int8 v78 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ContentSizeCategory();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unsigned __int8 v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  specialized Environment.wrappedValue.getter();
  char v15 = ContentSizeCategory.isAccessibilityCategory.getter();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v86 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  if ((v15 & 1) == 0)
  {
    if (*(unsigned char *)(a1 + 40) == 1)
    {
      uint64_t v16 = *(void *)(a1 + 24);
      swift_retain();
    }
    else
    {
      uint64_t v16 = 0;
    }
    uint64_t v17 = *(void *)(a1 + 32);
    int v23 = *(unsigned __int8 *)(a1 + 41);
    if (v23 == 1)
    {
      uint64_t v24 = one-time initialization token for headerSmallImageSize;
      swift_bridgeObjectRetain();
      if (v24 != -1) {
        swift_once();
      }
      uint64_t v25 = &static Layout.Captions.headerSmallImageSize;
    }
    else
    {
      uint64_t v26 = one-time initialization token for headerImageSize;
      swift_bridgeObjectRetain();
      if (v26 != -1) {
        swift_once();
      }
      uint64_t v25 = &static Layout.Captions.headerImageSize;
    }
    swift_beginAccess();
    uint64_t v86 = *v25;
    unsigned int v27 = static Edge.Set.trailing.getter();
    int v28 = MEMORY[0x1C8771D90](0);
    int v29 = MEMORY[0x1C8771D90]();
    if (MEMORY[0x1C8771D90](v29 & v27) != v27) {
      LOBYTE(v28) = MEMORY[0x1C8771D90](v28 | v27);
    }
    if (v23)
    {
      if (one-time initialization token for bubbleMiniAvatarPadding == -1) {
        goto LABEL_18;
      }
    }
    else if (one-time initialization token for bubbleAvatarPadding == -1)
    {
LABEL_18:
      swift_beginAccess();
      EdgeInsets.init(_all:)();
      uint64_t v19 = v30;
      uint64_t v20 = v31;
      uint64_t v21 = v32;
      uint64_t v22 = v33;
      uint64_t v18 = v28;
      goto LABEL_19;
    }
    swift_once();
    goto LABEL_18;
  }
LABEL_19:
  uint64_t v87 = v22;
  uint64_t v88 = v18;
  uint64_t v82 = v21;
  BOOL v34 = *(unsigned char *)(a1 + 40) == 1;
  uint64_t v90 = v17;
  uint64_t v91 = v16;
  uint64_t v89 = v19;
  uint64_t v83 = v20;
  if (v34)
  {
    uint64_t v35 = *(void *)(a1 + 8);
    uint64_t v36 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    goto LABEL_37;
  }
  specialized Collection.first.getter(*(void *)(a1 + 32), (uint64_t)v10);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6);
  if (EnumTagSinglePayload != 1)
  {
    uint64_t v38 = *(void **)&v10[*(int *)(v6 + 28)];
    if (v38)
    {
      int v39 = v38;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v39);
      if (v40)
      {
        if (objc_msgSend(v39, sel_shouldHideContact))
        {
          unsigned __int8 v78 = v39;
          uint64_t v41 = type metadata accessor for PersonNameComponents();
          uint64_t v77 = &v75;
          uint64_t v76 = v41;
          uint64_t v42 = *(void *)(v41 - 8);
          MEMORY[0x1F4188790](v41);
          uint64_t v44 = (char *)&v75 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
          swift_bridgeObjectRetain();
          PersonNameComponents.init()();
          PersonNameComponents.givenName.setter();
          PersonNameComponents.familyName.setter();
          if (one-time initialization token for initials != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v45 = (id)static NSPersonNameComponentsFormatter.initials;
          Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          id v47 = objc_msgSend(v45, sel_stringFromPersonNameComponents_, isa);

          uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v50 = v49;

          (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v76);
          uint64_t v93 = v48;
          uint64_t v94 = v50;
          lazy protocol witness table accessor for type String and conformance String();
          StringProtocol.localizedUppercase.getter();

          swift_bridgeObjectRelease();
          id v51 = 0;
          goto LABEL_33;
        }

        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    outlined init with copy of TranscriptLabel((uint64_t)v10, (uint64_t)v78, (void (*)(void))type metadata accessor for Participant);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)();
    id v51 = v92;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
LABEL_33:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    Participant.name(_:)();
    uint64_t v35 = v52;
    uint64_t v36 = v53;
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    goto LABEL_34;
  }
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
  uint64_t v35 = 0;
  uint64_t v36 = 0;
LABEL_34:
  uint64_t v54 = KeyPath;
  outlined init with copy of TranscriptLabel(a1, KeyPath, (void (*)(void))type metadata accessor for TranscriptList);
  if (!v36)
  {
    uint64_t v35 = *(void *)(v54 + 8);
    uint64_t v36 = *(void *)(v54 + 16);
    swift_bridgeObjectRetain();
  }
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
LABEL_37:
  uint64_t v93 = v35;
  uint64_t v94 = v36;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v55 = Text.init<A>(_:)();
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  char v61 = v60 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  static Font.subheadline.getter();
  uint64_t v62 = v84;
  uint64_t v63 = v80;
  uint64_t v64 = v85;
  (*(void (**)(char *, void, uint64_t))(v84 + 104))(v80, *MEMORY[0x1E4F3E0F8], v85);
  unsigned __int8 v78 = (char *)Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v64);
  uint64_t v65 = swift_getKeyPath();
  int v66 = static HierarchicalShapeStyle.primary.getter();
  char v98 = v61;
  char v96 = 0;
  uint64_t v67 = v81;
  *(_DWORD *)(v81 + 65) = v93;
  *(_DWORD *)(v67 + 68) = *(_DWORD *)((char *)&v93 + 3);
  *(_DWORD *)(v67 + 89) = *(_DWORD *)v97;
  *(_DWORD *)(v67 + 92) = *(_DWORD *)&v97[3];
  *(_DWORD *)(v67 + 121) = *(_DWORD *)v95;
  *(_DWORD *)(v67 + 124) = *(_DWORD *)&v95[3];
  uint64_t v68 = v90;
  uint64_t v69 = v91;
  *(void *)uint64_t v67 = v91;
  *(void *)(v67 + 8) = v68;
  uint64_t v70 = v68;
  uint64_t v71 = v88;
  *(void *)(v67 + 16) = v86;
  *(void *)(v67 + 24) = v71;
  *(void *)(v67 + 32) = v89;
  uint64_t v72 = v82;
  *(void *)(v67 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v83;
  *(void *)(v67 + 48) = v72;
  *(void *)(v67 + 56) = v87;
  *(unsigned char *)(v67 + 64) = 0;
  *(void *)(v67 + 72) = v55;
  *(void *)(v67 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v57;
  *(unsigned char *)(v67 + 88) = v61;
  uint64_t v77 = v59;
  uint64_t v73 = KeyPath;
  *(void *)(v67 + 96) = v59;
  *(void *)(v67 + 104) = v73;
  *(void *)(v67 + 112) = 2;
  *(unsigned char *)(v67 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0;
  *(void *)(v67 + 128) = v65;
  *(void *)(v67 + 136) = v78;
  *(_DWORD *)(v67 + 144) = v66;
  outlined copy of ModifiedContent<GroupIconView, _PaddingLayout>?(v69, v70);
  outlined copy of Text.Storage(v55, v57, v61);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined consume of Text.Storage(v55, v57, v61);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return outlined consume of ModifiedContent<GroupIconView, _PaddingLayout>?(v91, v90);
}

uint64_t CaptionsSizeToggleButton.init(configuration:action:)(char a1)
{
  return a1 & 1;
}

uint64_t TranscriptList.PaddingModifier.body(content:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v73 = a2;
  uint64_t v76 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x1F4188790](v74);
  uint64_t v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x1F4188790](v75);
  uint64_t v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v72 = (uint64_t)&v71 - v15;
  static Platform.current.getter();
  unsigned int v16 = static Edge.Set.leading.getter();
  int v17 = MEMORY[0x1C8771D90](0);
  int v18 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v18 & v16) != v16) {
    LOBYTE(v17) = MEMORY[0x1C8771D90](v17 | v16);
  }
  if (one-time initialization token for bubblePadding != -1) {
    swift_once();
  }
  swift_beginAccess();
  EdgeInsets.init(_all:)();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<TranscriptList.PaddingModifier>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v6, a1, v27);
  int v28 = &v6[*(int *)(v4 + 36)];
  *int v28 = v17;
  *((void *)v28 + 1) = v20;
  *((void *)v28 + 2) = v22;
  *((void *)v28 + 3) = v24;
  *((void *)v28 + 4) = v26;
  unsigned char v28[40] = 0;
  unsigned int v29 = static Edge.Set.trailing.getter();
  int v30 = MEMORY[0x1C8771D90](0);
  int v31 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v31 & v29) != v29) {
    LOBYTE(v3ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = MEMORY[0x1C8771D90](v30 | v29);
  }
  swift_beginAccess();
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  outlined init with copy of FeatureEligibility?((uint64_t)v6, (uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>);
  uint64_t v40 = &v9[*(int *)(v7 + 36)];
  *uint64_t v40 = v30;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>);
  unsigned int v41 = static Edge.Set.top.getter();
  int v42 = MEMORY[0x1C8771D90](0);
  int v43 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v43 & v41) != v41) {
    LOBYTE(v42) = MEMORY[0x1C8771D90](v42 | v41);
  }
  uint64_t v44 = (void *)MEMORY[0x1E4FB28C8];
  if ((v73 & 0x101) == 1)
  {
    if (one-time initialization token for scrollGradientFraction != -1) {
      swift_once();
    }
    id v45 = v44;
    id v46 = objc_msgSend(self, sel_preferredFontForTextStyle_, *v44);
    objc_msgSend(v46, sel_lineHeight);
  }
  else
  {
    id v45 = (void *)MEMORY[0x1E4FB28C8];
  }
  EdgeInsets.init(_all:)();
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout>);
  uint64_t v55 = &v11[*(int *)(v74 + 36)];
  *uint64_t v55 = v42;
  *((void *)v55 + 1) = v48;
  *((void *)v55 + 2) = v50;
  *((void *)v55 + 3) = v52;
  *((void *)v55 + 4) = v54;
  v55[40] = 0;
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout>);
  unsigned int v56 = static Edge.Set.bottom.getter();
  int v57 = MEMORY[0x1C8771D90](0);
  int v58 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v58 & v56) != v56) {
    LOBYTE(v57) = MEMORY[0x1C8771D90](v57 | v56);
  }
  if (one-time initialization token for scrollGradientFraction != -1) {
    swift_once();
  }
  id v59 = objc_msgSend(self, sel_preferredFontForTextStyle_, *v45);
  objc_msgSend(v59, sel_lineHeight);

  EdgeInsets.init(_all:)();
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  outlined init with copy of FeatureEligibility?((uint64_t)v11, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>);
  uint64_t v68 = &v13[*(int *)(v75 + 36)];
  *uint64_t v68 = v57;
  *((void *)v68 + 1) = v61;
  *((void *)v68 + 2) = v63;
  *((void *)v68 + 3) = v65;
  *((void *)v68 + 4) = v67;
  v68[40] = 0;
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>);
  uint64_t v69 = v72;
  outlined init with take of Any?((uint64_t)v13, v72, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>);
  return outlined init with take of Any?(v69, v76, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>);
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance TranscriptList.PaddingModifier@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (v2[1]) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return TranscriptList.PaddingModifier.body(content:)(a1, v3 | *v2, a2);
}

uint64_t closure #1 in TranscriptList.sectionContent(for:viewGeometry:autoScrollTriggers:scrollFrame:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v16 = type metadata accessor for TranscriptList(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for GeometryProxy();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Platform.current.getter();
  uint64_t v37 = *(void *)(a1 + *(int *)(type metadata accessor for CaptionSectioner.SpeakerSection(0) + 24));
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a2, v20);
  outlined init with copy of TranscriptLabel(a3, (uint64_t)v19, (void (*)(void))type metadata accessor for TranscriptList);
  unint64_t v24 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v25 = (v22 + *(unsigned __int8 *)(v17 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v26 = (v18 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v27 + v24, v23, v20);
  outlined init with take of TranscriptLabel((uint64_t)v19, v27 + v25, (void (*)(void))type metadata accessor for TranscriptList);
  *(void *)(v27 + v26) = v33;
  int v28 = (double *)(v27 + ((v26 + 15) & 0xFFFFFFFFFFFFFFF8));
  *int v28 = a6;
  v28[1] = a7;
  v28[2] = a8;
  v28[3] = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [CaptionSectioner.Caption]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.redacted(reason:)>>.0);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [CaptionSectioner.Caption] and conformance [A]);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout>);
  unint64_t v30 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  uint64_t v35 = v29;
  unint64_t v36 = v30;
  swift_getOpaqueTypeConformance2();
  _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type CaptionSectioner.Caption and conformance CaptionSectioner.Caption);
  return ForEach<>.init(_:content:)();
}

uint64_t closure #1 in closure #1 in TranscriptList.sectionContent(for:viewGeometry:autoScrollTriggers:scrollFrame:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v104 = a4;
  uint64_t v121 = a3;
  uint64_t v119 = a5;
  uint64_t v15 = type metadata accessor for RedactionReasons();
  uint64_t v117 = *(void *)(v15 - 8);
  uint64_t v118 = v15;
  MEMORY[0x1F4188790](v15);
  double v116 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for GeometryProxy();
  uint64_t v17 = *(void *)(v100 - 8);
  uint64_t v103 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v100);
  double v120 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for CaptionSectioner.Caption(0);
  uint64_t v102 = *(void *)(v111 - 8);
  uint64_t v101 = *(void *)(v102 + 64);
  MEMORY[0x1F4188790](v111);
  uint64_t v98 = (uint64_t)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for TranscriptList(0);
  uint64_t v99 = *(void *)(v20 - 8);
  uint64_t v95 = *(void *)(v99 + 64);
  MEMORY[0x1F4188790](v20 - 8);
  char v107 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v106 = (uint64_t)&v92 - v23;
  MEMORY[0x1F4188790](v24);
  unint64_t v26 = (char *)&v92 - v25;
  uint64_t v92 = (uint64_t)&v92 - v25;
  uint64_t v27 = type metadata accessor for CaptionRow(0);
  uint64_t v28 = v27 - 8;
  MEMORY[0x1F4188790](v27);
  unint64_t v30 = (char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.redacted(reason:)>>.0);
  uint64_t v113 = *(void *)(v31 - 8);
  uint64_t v114 = v31;
  MEMORY[0x1F4188790](v31);
  uint64_t v112 = (char *)&v92 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x1F4188790](v109);
  double v110 = (char *)&v92 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>);
  MEMORY[0x1F4188790](v105);
  uint64_t v108 = (char *)&v92 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>)
      - 8;
  MEMORY[0x1F4188790](v97);
  char v96 = (char *)&v92 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of TranscriptLabel(a1, (uint64_t)v30, (void (*)(void))type metadata accessor for CaptionSectioner.Caption);
  unint64_t v36 = &v30[*(int *)(v28 + 28)];
  uint64_t v94 = v30;
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v38 = v100;
  v37(v36, a2, v100);
  uint64_t v39 = &v30[*(int *)(v28 + 32)];
  uint64_t v122 = 0;
  State.init(wrappedValue:)();
  uint64_t v40 = v124;
  *(void *)uint64_t v39 = v123;
  *((void *)v39 + 1) = v40;
  uint64_t v93 = static Anchor.Source<A>.bounds.getter();
  outlined init with copy of TranscriptLabel(v121, (uint64_t)v26, (void (*)(void))type metadata accessor for TranscriptList);
  uint64_t v115 = a1;
  uint64_t v41 = v98;
  outlined init with copy of TranscriptLabel(a1, v98, (void (*)(void))type metadata accessor for CaptionSectioner.Caption);
  v37(v120, a2, v38);
  unint64_t v42 = (*(unsigned __int8 *)(v99 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
  unint64_t v43 = (v95 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (*(unsigned __int8 *)(v102 + 80) + v43 + 8) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
  unint64_t v45 = (v101 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = v17;
  unint64_t v47 = (*(unsigned __int8 *)(v17 + 80) + v45 + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v48 = swift_allocObject();
  outlined init with take of TranscriptLabel(v92, v48 + v42, (void (*)(void))type metadata accessor for TranscriptList);
  *(void *)(v48 + v43) = v104;
  outlined init with take of TranscriptLabel(v41, v48 + v44, (void (*)(void))type metadata accessor for CaptionSectioner.Caption);
  uint64_t v49 = (double *)(v48 + v45);
  *uint64_t v49 = a6;
  v49[1] = a7;
  void v49[2] = a8;
  v49[3] = a9;
  uint64_t v50 = v38;
  uint64_t v51 = (uint64_t)v96;
  (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v48 + v47, v120, v50);
  outlined init with copy of TranscriptLabel((uint64_t)v94, v51, (void (*)(void))type metadata accessor for CaptionRow);
  uint64_t v52 = (uint64_t *)(v51 + *(int *)(v97 + 44));
  *uint64_t v52 = v93;
  v52[1] = (uint64_t)partial apply for closure #1 in closure #1 in closure #1 in TranscriptList.sectionContent(for:viewGeometry:autoScrollTriggers:scrollFrame:);
  v52[2] = v48;
  swift_bridgeObjectRetain();
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  unsigned int v53 = static Edge.Set.top.getter();
  int v54 = MEMORY[0x1C8771D90](0);
  int v55 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v55 & v53) != v53) {
    LOBYTE(v54) = MEMORY[0x1C8771D90](v54 | v53);
  }
  uint64_t v56 = v121;
  char v57 = *(unsigned char *)(v121 + 41);
  uint64_t v58 = v106;
  outlined init with copy of TranscriptLabel(v121, v106, (void (*)(void))type metadata accessor for TranscriptList);
  if (v57)
  {
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    id v59 = v116;
    uint64_t v60 = v109;
    uint64_t v61 = (uint64_t)v108;
    uint64_t v62 = (uint64_t)v107;
  }
  else
  {
    char v63 = *(unsigned char *)(v58 + 40);
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    id v59 = v116;
    uint64_t v60 = v109;
    uint64_t v61 = (uint64_t)v108;
    uint64_t v62 = (uint64_t)v107;
    if ((v63 & 1) == 0)
    {
      id v64 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
      objc_msgSend(v64, sel_lineHeight);
    }
  }
  EdgeInsets.init(_all:)();
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  outlined init with copy of FeatureEligibility?(v51, v61, &demangling cache variable for type metadata for ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>);
  uint64_t v73 = v61 + *(int *)(v105 + 36);
  *(unsigned char *)uint64_t v73 = v54;
  *(void *)(v73 + 8) = v66;
  *(void *)(v73 + 16) = v68;
  *(void *)(v73 + 24) = v70;
  *(void *)(v73 + 32) = v72;
  *(unsigned char *)(v73 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0;
  outlined destroy of Environment<RedactionReasons>.Content(v51, &demangling cache variable for type metadata for ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>);
  unsigned int v74 = static Edge.Set.leading.getter();
  int v75 = MEMORY[0x1C8771D90](0);
  int v76 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v76 & v74) != v74) {
    LOBYTE(v75) = MEMORY[0x1C8771D90](v75 | v74);
  }
  char v77 = *(unsigned char *)(v56 + 41);
  outlined init with copy of TranscriptLabel(v56, v62, (void (*)(void))type metadata accessor for TranscriptList);
  uint64_t v78 = (uint64_t)v110;
  if (v77)
  {
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    goto LABEL_21;
  }
  int v79 = *(unsigned __int8 *)(v62 + 40);
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  if (v79 == 1)
  {
    if (*(unsigned char *)(v56 + 41) == 1)
    {
      if (one-time initialization token for headerSmallImageSize != -1) {
        swift_once();
      }
      swift_beginAccess();
      if (one-time initialization token for bubbleMiniAvatarPadding == -1) {
        goto LABEL_20;
      }
    }
    else
    {
      if (one-time initialization token for headerImageSize != -1) {
        swift_once();
      }
      swift_beginAccess();
      if (one-time initialization token for bubbleAvatarPadding == -1) {
        goto LABEL_20;
      }
    }
    swift_once();
LABEL_20:
    swift_beginAccess();
  }
LABEL_21:
  EdgeInsets.init(_all:)();
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v87 = v86;
  outlined init with copy of FeatureEligibility?(v61, v78, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>);
  uint64_t v88 = v78 + *(int *)(v60 + 36);
  *(unsigned char *)uint64_t v88 = v75;
  *(void *)(v88 + 8) = v81;
  *(void *)(v88 + 16) = v83;
  *(void *)(v88 + 24) = v85;
  *(void *)(v88 + 32) = v87;
  *(unsigned char *)(v88 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0;
  outlined destroy of Environment<RedactionReasons>.Content(v61, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>);
  if (*(unsigned char *)(v115 + *(int *)(v111 + 48)) == 2)
  {
    static RedactionReasons.placeholder.getter();
    uint64_t v89 = v118;
  }
  else
  {
    uint64_t v125 = MEMORY[0x1E4FBC860];
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [RedactionReasons]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [RedactionReasons] and conformance [A]);
    uint64_t v89 = v118;
    dispatch thunk of SetAlgebra.init<A>(_:)();
  }
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  uint64_t v90 = v112;
  View.redacted(reason:)();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v59, v89);
  outlined destroy of Environment<RedactionReasons>.Content(v78, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout>);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v113 + 32))(v119, v90, v114);
}

uint64_t closure #1 in closure #1 in closure #1 in TranscriptList.sectionContent(for:viewGeometry:autoScrollTriggers:scrollFrame:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, BOOL *a6@<X8>, CGFloat a7@<D0>, CGFloat a8@<D1>, CGFloat a9@<D2>, CGFloat a10@<D3>)
{
  v38[1] = a1;
  uint64_t v39 = a3;
  uint64_t v40 = a6;
  uint64_t v17 = type metadata accessor for GeometryProxy();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v38 - v22;
  uint64_t v24 = type metadata accessor for CaptionSectioner.Caption(0);
  MEMORY[0x1F4188790](v24 - 8);
  unint64_t v26 = (void *)((char *)v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = type metadata accessor for TranscriptList(0);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)v38 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v30 = static Platform.current.getter();
  outlined init with copy of TranscriptLabel(a2, (uint64_t)v29, (void (*)(void))type metadata accessor for TranscriptList);
  if (v30 == 2) {
    int v31 = 1;
  }
  else {
    int v31 = v29[41];
  }
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  outlined init with copy of TranscriptLabel(a4, (uint64_t)v26, (void (*)(void))type metadata accessor for CaptionSectioner.Caption);
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v32(v23, a5, v17);
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
    uint64_t result = _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    BOOL v34 = 1;
  }
  else
  {
    char v35 = specialized Set.contains(_:)(*v26, v39);
    v32(v20, (uint64_t)v23, v17);
    if (v35)
    {
      type metadata accessor for CGRect(0);
      GeometryProxy.subscript.getter();
      v42.origin.x = a7;
      v42.origin.y = a8;
      v42.size.double width = a9;
      v42.size.CGFloat height = a10;
      BOOL v34 = CGRectIntersectsRect(v42, v41);
      unint64_t v36 = *(void (**)(char *, uint64_t))(v18 + 8);
      v36(v20, v17);
      v36(v23, v17);
      uint64_t result = _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    }
    else
    {
      uint64_t v37 = *(void (**)(char *, uint64_t))(v18 + 8);
      v37(v20, v17);
      v37(v23, v17);
      uint64_t result = _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      BOOL v34 = 0;
    }
  }
  *uint64_t v40 = v34;
  return result;
}

uint64_t closure #2 in TranscriptList.sectionContent(for:viewGeometry:autoScrollTriggers:scrollFrame:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v114 = a2;
  uint64_t v108 = type metadata accessor for CaptionSectioner.Caption(0);
  uint64_t v97 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v6 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RedactionReasons();
  uint64_t v109 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for CaptionSectioner.SectionID(0);
  MEMORY[0x1F4188790](v104);
  uint64_t v94 = (uint64_t)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (CaptionSectioner.SectionID?, CaptionSectioner.SectionID?));
  MEMORY[0x1F4188790](v102);
  uint64_t v115 = (uint64_t)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v101 = (uint64_t)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.SectionID?);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v96 = (uint64_t)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v110 = (uint64_t)&v88 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v111 = (uint64_t)&v88 - v19;
  uint64_t v98 = type metadata accessor for ContentSizeCategory();
  uint64_t v20 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for CaptionHeader(0);
  MEMORY[0x1F4188790](v99);
  uint64_t v100 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<CaptionHeader, _PaddingLayout>);
  MEMORY[0x1F4188790](v112);
  uint64_t v113 = (uint64_t)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.redacted(reason:)>>.0);
  uint64_t v107 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v106 = (char *)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v105 = (char *)&v88 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.redacted(reason:)>>.0)?);
  MEMORY[0x1F4188790](v29 - 8);
  int v31 = (char *)&v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Platform.current.getter();
  if (*(unsigned char *)(a1 + 40) != 1)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 1, 1, v25);
    return outlined init with take of Any?((uint64_t)v31, a3, &demangling cache variable for type metadata for (<<opaque return type of View.redacted(reason:)>>.0)?);
  }
  uint64_t v91 = v31;
  uint64_t v92 = v25;
  uint64_t v95 = v9;
  uint64_t v88 = v7;
  uint64_t v93 = a3;
  uint64_t v103 = type metadata accessor for CaptionSectioner.SpeakerSection(0);
  uint64_t v32 = v114 + *(int *)(v103 + 20);
  Participant.contactDetails.getter();
  uint64_t v33 = v117;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  Participant.name(_:)();
  uint64_t v90 = v34;
  uint64_t v89 = v35;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  uint64_t v36 = *(void *)(type metadata accessor for Participant(0) - 8);
  unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1C3769620;
  outlined init with copy of TranscriptLabel(v32, v38 + v37, (void (*)(void))type metadata accessor for Participant);
  type metadata accessor for TranscriptList(0);
  specialized Environment.wrappedValue.getter();
  char v39 = ContentSizeCategory.isAccessibilityCategory.getter();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v98);
  uint64_t v40 = (uint64_t *)a1;
  if (*(unsigned char *)(a1 + 41) == 1)
  {
    uint64_t v41 = v104;
    uint64_t v42 = v111;
    uint64_t v43 = (uint64_t)v100;
    if (one-time initialization token for headerSmallImageSize != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v44 = static Layout.Captions.headerSmallImageSize;
    uint64_t v45 = v114;
    if (one-time initialization token for bubbleMiniAvatarPadding != -1) {
      swift_once();
    }
    uint64_t v46 = &static Layout.Captions.bubbleMiniAvatarPadding;
  }
  else
  {
    uint64_t v41 = v104;
    uint64_t v42 = v111;
    uint64_t v43 = (uint64_t)v100;
    if (one-time initialization token for headerImageSize != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v44 = static Layout.Captions.headerImageSize;
    uint64_t v45 = v114;
    if (one-time initialization token for bubbleAvatarPadding != -1) {
      swift_once();
    }
    uint64_t v46 = &static Layout.Captions.bubbleAvatarPadding;
  }
  swift_beginAccess();
  unint64_t v47 = v95;
  uint64_t v48 = *v46;
  uint64_t v49 = v89;
  *(void *)uint64_t v43 = v90;
  *(void *)(v43 + 8) = v49;
  *(void *)(v43 + 16) = 0;
  *(void *)(v43 + 24) = v38;
  *(unsigned char *)(v43 + 32) = v39 & 1;
  *(void *)(v43 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v44;
  *(void *)(v43 + 48) = v48;
  uint64_t v50 = (uint64_t *)(v43 + *(int *)(v99 + 40));
  uint64_t *v50 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  swift_storeEnumTagMultiPayload();
  unsigned int v51 = static Edge.Set.top.getter();
  int v52 = MEMORY[0x1C8771D90](0);
  int v53 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v53 & v51) != v51) {
    LOBYTE(v52) = MEMORY[0x1C8771D90](v52 | v51);
  }
  uint64_t v54 = *v40;
  uint64_t v55 = v101;
  specialized Collection.first.getter(v54, v101);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v55, 1, v103);
  uint64_t v57 = v108;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of Environment<RedactionReasons>.Content(v55, &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
    uint64_t v58 = 1;
  }
  else
  {
    outlined init with copy of TranscriptLabel(v55, v42, (void (*)(void))type metadata accessor for CaptionSectioner.SectionID);
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    uint64_t v58 = 0;
  }
  uint64_t v59 = v115;
  uint64_t v60 = v110;
  __swift_storeEnumTagSinglePayload(v42, v58, 1, v41);
  outlined init with copy of TranscriptLabel(v45, v60, (void (*)(void))type metadata accessor for CaptionSectioner.SectionID);
  __swift_storeEnumTagSinglePayload(v60, 0, 1, v41);
  uint64_t v61 = v59 + *(int *)(v102 + 48);
  outlined init with copy of FeatureEligibility?(v42, v115, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
  uint64_t v62 = v115;
  outlined init with copy of FeatureEligibility?(v60, v61, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
  if (__swift_getEnumTagSinglePayload(v62, 1, v41) != 1)
  {
    outlined init with copy of FeatureEligibility?(v62, v96, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
    if (__swift_getEnumTagSinglePayload(v61, 1, v41) != 1)
    {
      outlined init with take of TranscriptLabel(v61, v94, (void (*)(void))type metadata accessor for CaptionSectioner.SectionID);
      char v63 = static UUID.== infix(_:_:)();
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      outlined destroy of Environment<RedactionReasons>.Content(v110, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
      outlined destroy of Environment<RedactionReasons>.Content(v111, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      unint64_t v47 = v95;
      outlined destroy of Environment<RedactionReasons>.Content(v62, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
      if (v63) {
        goto LABEL_27;
      }
LABEL_26:
      id v64 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
      objc_msgSend(v64, sel_lineHeight);

      goto LABEL_27;
    }
    outlined destroy of Environment<RedactionReasons>.Content(v110, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
    outlined destroy of Environment<RedactionReasons>.Content(v111, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
LABEL_24:
    outlined destroy of Environment<RedactionReasons>.Content(v62, &demangling cache variable for type metadata for (CaptionSectioner.SectionID?, CaptionSectioner.SectionID?));
    goto LABEL_26;
  }
  outlined destroy of Environment<RedactionReasons>.Content(v60, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
  uint64_t v62 = v115;
  outlined destroy of Environment<RedactionReasons>.Content(v42, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
  if (__swift_getEnumTagSinglePayload(v61, 1, v41) != 1) {
    goto LABEL_24;
  }
  outlined destroy of Environment<RedactionReasons>.Content(v62, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
LABEL_27:
  EdgeInsets.init(_all:)();
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v73 = v113;
  outlined init with copy of TranscriptLabel(v43, v113, (void (*)(void))type metadata accessor for CaptionHeader);
  uint64_t v74 = v73 + *(int *)(v112 + 36);
  *(unsigned char *)uint64_t v74 = v52;
  *(void *)(v74 + 8) = v66;
  *(void *)(v74 + 16) = v68;
  *(void *)(v74 + 24) = v70;
  *(void *)(v74 + 32) = v72;
  *(unsigned char *)(v74 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0;
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  uint64_t v75 = *(void *)(v114 + *(int *)(v103 + 24));
  uint64_t v76 = *(void *)(v75 + 16);
  if (v76)
  {
    uint64_t v77 = v75 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
    uint64_t v78 = *(void *)(v97 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      outlined init with copy of TranscriptLabel(v77, (uint64_t)v6, (void (*)(void))type metadata accessor for CaptionSectioner.Caption);
      int v79 = v6[*(int *)(v57 + 48)];
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      if (v79 != 2) {
        break;
      }
      v77 += v78;
      if (!--v76)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v116 = MEMORY[0x1E4FBC860];
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [RedactionReasons]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [RedactionReasons] and conformance [A]);
    uint64_t v80 = v88;
    dispatch thunk of SetAlgebra.init<A>(_:)();
  }
  else
  {
LABEL_32:
    static RedactionReasons.placeholder.getter();
    uint64_t v80 = v88;
  }
  lazy protocol witness table accessor for type ModifiedContent<CaptionHeader, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
  uint64_t v81 = v106;
  uint64_t v82 = v113;
  View.redacted(reason:)();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v47, v80);
  outlined destroy of Environment<RedactionReasons>.Content(v82, &demangling cache variable for type metadata for ModifiedContent<CaptionHeader, _PaddingLayout>);
  uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v107 + 32);
  uint64_t v84 = v105;
  uint64_t v85 = v81;
  uint64_t v86 = v92;
  v83(v105, v85, v92);
  int v31 = v91;
  v83(v91, v84, v86);
  __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v86);
  a3 = v93;
  return outlined init with take of Any?((uint64_t)v31, a3, &demangling cache variable for type metadata for (<<opaque return type of View.redacted(reason:)>>.0)?);
}

uint64_t TranscriptSubtitle.placeholderFont.getter()
{
  if (*v0 == 1)
  {
    return static Font.body.getter();
  }
  else
  {
    id v2 = objc_msgSend(self, sel_systemFontOfSize_weight_, 38.0, *MEMORY[0x1E4FB09D0]);
    return Font.init(_:)();
  }
}

uint64_t TranscriptSubtitle.PlaceHolderFrame.body(content:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.PlaceHolderFrame>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &__src[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &__src[-v10];
  static Platform.current.getter();
  objc_msgSend(a2, sel_lineHeight);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<TranscriptSubtitle.PlaceHolderFrame>);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v8, a1, v12);
  memcpy(&v8[*(int *)(v6 + 36)], __src, 0x70uLL);
  outlined init with take of Any?((uint64_t)v8, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.PlaceHolderFrame>, _FlexFrameLayout>);
  return outlined init with take of Any?((uint64_t)v11, a3, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.PlaceHolderFrame>, _FlexFrameLayout>);
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance TranscriptSubtitle.PlaceHolderFrame@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptSubtitle.PlaceHolderFrame.body(content:)(a1, *(void **)(v2 + 8), a2);
}

double TranscriptSubtitle.TranscriptFrame.body(content:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  static Platform.current.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<TranscriptSubtitle.TranscriptFrame>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  uint64_t v5 = (_OWORD *)(a2
                + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.TranscriptFrame>, _FrameLayout>)
                         + 36));
  *uint64_t v5 = v7;
  v5[1] = v8;
  double result = *(double *)&v9;
  _OWORD v5[2] = v9;
  return result;
}

double protocol witness for ViewModifier.body(content:) in conformance TranscriptSubtitle.TranscriptFrame@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptSubtitle.TranscriptFrame.body(content:)(a1, a2);
}

uint64_t TranscriptSubtitle.ContainerPadding.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.ContainerPadding>, _PaddingLayout>);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v24 - v8;
  static Platform.current.getter();
  unsigned int v10 = static Edge.Set.bottom.getter();
  int v11 = MEMORY[0x1C8771D90](0);
  int v12 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v12 & v10) != v10) {
    LOBYTE(v11) = MEMORY[0x1C8771D90](v11 | v10);
  }
  EdgeInsets.init(_all:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<TranscriptSubtitle.ContainerPadding>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v6, a1, v21);
  uint64_t v22 = &v6[*(int *)(v4 + 36)];
  *uint64_t v22 = v11;
  *((void *)v22 + 1) = v14;
  *((void *)v22 + 2) = v16;
  *((void *)v22 + 3) = v18;
  *((void *)v22 + 4) = v20;
  v22[40] = 0;
  outlined init with take of Any?((uint64_t)v6, (uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.ContainerPadding>, _PaddingLayout>);
  return outlined init with take of Any?((uint64_t)v9, a2, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.ContainerPadding>, _PaddingLayout>);
}

uint64_t TranscriptSubtitle.BackgroundViewModifier.clipShape.getter()
{
  return State.wrappedValue.getter();
}

uint64_t TranscriptSubtitle.BackgroundViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v37 = a3;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v31 = v4;
  uint64_t v35 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Material();
  uint64_t v30 = v7;
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  type metadata accessor for _ViewModifier_Content();
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v40 = v7;
  uint64_t v41 = v4;
  uint64_t v42 = MEMORY[0x1E4F3EF48];
  uint64_t v43 = v10;
  uint64_t v32 = type metadata accessor for _BackgroundShapeModifier();
  uint64_t v11 = type metadata accessor for ModifiedContent();
  uint64_t v33 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v29 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v29 - v18;
  uint64_t v20 = static Platform.current.getter();
  MEMORY[0x1C8772A80](v20);
  TranscriptSubtitle.BackgroundViewModifier.clipShape.getter();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = v9;
  uint64_t v24 = v30;
  uint64_t v23 = v31;
  View.background<A, B>(_:in:fillStyle:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v24);
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v38 = WitnessTable;
  uint64_t v39 = v25;
  uint64_t v26 = swift_getWitnessTable();
  static ViewBuilder.buildExpression<A>(_:)(v13, v11, v26);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v33 + 8);
  v27(v13, v11);
  static ViewBuilder.buildExpression<A>(_:)(v16, v11, v26);
  v27(v16, v11);
  static ViewBuilder.buildExpression<A>(_:)(v19, v11, v26);
  return ((uint64_t (*)(char *, uint64_t))v27)(v19, v11);
}

uint64_t TranscriptSubtitle.SubtitlePadding.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v43 - v11;
  static Platform.current.getter();
  unsigned int v13 = static Edge.Set.top.getter();
  unsigned int v14 = static Edge.Set.bottom.getter();
  uint64_t v15 = MEMORY[0x1C8771D90](0);
  int v16 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v16 & v13) != v13) {
    uint64_t v15 = MEMORY[0x1C8771D90](v15 | v13);
  }
  int v17 = MEMORY[0x1C8771D90](v15);
  if (MEMORY[0x1C8771D90](v17 & v14) != v14) {
    LOBYTE(v15) = MEMORY[0x1C8771D90](v15 | v14);
  }
  if (one-time initialization token for subtitleStyleVerticalPadding != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v6, a1, v26);
  uint64_t v27 = &v6[*(int *)(v4 + 36)];
  *uint64_t v27 = v15;
  *((void *)v27 + 1) = v19;
  *((void *)v27 + 2) = v21;
  *((void *)v27 + 3) = v23;
  *((void *)v27 + 4) = v25;
  v27[40] = 0;
  unsigned int v28 = static Edge.Set.leading.getter();
  unsigned int v29 = static Edge.Set.trailing.getter();
  uint64_t v30 = MEMORY[0x1C8771D90](0);
  int v31 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v31 & v28) != v28) {
    uint64_t v30 = MEMORY[0x1C8771D90](v30 | v28);
  }
  int v32 = MEMORY[0x1C8771D90](v30);
  if (MEMORY[0x1C8771D90](v32 & v29) != v29) {
    LOBYTE(v3ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = MEMORY[0x1C8771D90](v30 | v29);
  }
  if (one-time initialization token for subtitleStyleHorizontalPadding != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  outlined init with copy of FeatureEligibility?((uint64_t)v6, (uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>);
  uint64_t v41 = &v9[*(int *)(v7 + 36)];
  *uint64_t v41 = v30;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  v41[40] = 0;
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>);
  outlined init with take of Any?((uint64_t)v9, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>, _PaddingLayout>);
  return outlined init with take of Any?((uint64_t)v12, a2, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>, _PaddingLayout>);
}

uint64_t TranscriptSubtitle.ParticipantBadgeModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v26 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>);
  uint64_t v22 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>>.Storage);
  MEMORY[0x1F4188790](v23);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>);
  MEMORY[0x1F4188790](v25);
  long long v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TranscriptSubtitle.ParticipantBadgeModifier(0);
  outlined init with copy of FeatureEligibility?(v2 + *(int *)(v16 + 20), (uint64_t)v12, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v12, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    outlined init with take of TranscriptLabel((uint64_t)v12, (uint64_t)v15, (void (*)(void))type metadata accessor for Participant);
    if (*(unsigned char *)(v2 + *(int *)(v16 + 24)) == 1)
    {
      *(void *)long long v9 = static HorizontalAlignment.leading.getter();
      *((void *)v9 + 1) = 0xC018000000000000;
      uint64_t v9[16] = 0;
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>);
      closure #1 in TranscriptSubtitle.ParticipantBadgeModifier.body(content:)((uint64_t)v15, v24, (uint64_t)&v9[*(int *)(v17 + 44)]);
      outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)v7, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>> and conformance VStack<A>);
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier> and conformance _ViewModifier_Content<A>);
      _ConditionalContent<>.init(storage:)();
      outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v9, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>);
      return _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    }
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  }
  uint64_t v19 = v22;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v20(v5, v24, v3);
  v20(v7, (uint64_t)v5, v3);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>> and conformance VStack<A>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier> and conformance _ViewModifier_Content<A>);
  _ConditionalContent<>.init(storage:)();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v5, v3);
}

uint64_t closure #1 in TranscriptSubtitle.ParticipantBadgeModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>);
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v42 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v40 = (char *)&v39 - v6;
  uint64_t v7 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TranscriptParticipantBadge(0);
  uint64_t v11 = (int *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>);
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>);
  uint64_t v19 = v18 - 8;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v39 - v23;
  outlined init with copy of TranscriptLabel(a1, (uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = Image.init(systemName:)();
  *(void *)uint64_t v13 = KeyPath;
  v13[8] = 0;
  outlined init with take of TranscriptLabel((uint64_t)v9, (uint64_t)&v13[v11[7]], (void (*)(void))type metadata accessor for Participant);
  uint64_t v27 = &v13[v11[8]];
  uint64_t v46 = v26;
  State.init(wrappedValue:)();
  uint64_t v28 = *((void *)&v47 + 1);
  *(void *)uint64_t v27 = v47;
  *((void *)v27 + 1) = v28;
  v13[v11[9]] = 1;
  uint64_t v29 = v11[10];
  uint64_t v46 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Task<(), Never>?);
  State.init(wrappedValue:)();
  *(_OWORD *)&v13[v29] = v47;
  outlined init with copy of TranscriptLabel((uint64_t)v13, (uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptParticipantBadge);
  *(void *)&v17[*(int *)(v15 + 44)] = 0x3FF0000000000000;
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  outlined init with copy of FeatureEligibility?((uint64_t)v17, (uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>);
  *(_OWORD *)&v21[*(int *)(v19 + 44)] = xmmword_1C378CAB0;
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>);
  outlined init with take of Any?((uint64_t)v21, (uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>);
  int v31 = v40;
  uint64_t v30 = v41;
  int v32 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
  uint64_t v33 = v43;
  v32(v40, v44, v43);
  outlined init with copy of FeatureEligibility?((uint64_t)v24, (uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>);
  uint64_t v34 = v42;
  v32(v42, (uint64_t)v31, v33);
  uint64_t v35 = v45;
  outlined init with copy of FeatureEligibility?((uint64_t)v21, v45, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>));
  v32((char *)(v35 + *(int *)(v36 + 48)), (uint64_t)v34, v33);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v30 + 8);
  v37(v31, v33);
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>);
  v37(v34, v33);
  return outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>);
}

uint64_t TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CaptionSectioner.Caption(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v26 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v26 - v16;
  specialized BidirectionalCollection.last.getter(*(void *)(v1 + 8), (uint64_t)v8);
  uint64_t v18 = type metadata accessor for CaptionSectioner.SpeakerSection(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v18) == 1)
  {
    outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v8, &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v3);
  }
  else
  {
    uint64_t v19 = *(void *)&v8[*(int *)(v18 + 24)];
    swift_bridgeObjectRetain();
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    specialized BidirectionalCollection.last.getter(v19, (uint64_t)v14);
    swift_bridgeObjectRelease();
    outlined init with copy of FeatureEligibility?((uint64_t)v14, (uint64_t)v11, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v3) == 1)
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v3);
    }
    else
    {
      outlined init with take of TranscriptLabel((uint64_t)v11, (uint64_t)v5, (void (*)(void))type metadata accessor for CaptionSectioner.Caption);
      if (v5[*(int *)(v3 + 48)])
      {
        uint64_t v20 = 1;
      }
      else
      {
        outlined init with copy of TranscriptLabel((uint64_t)v5, (uint64_t)v17, (void (*)(void))type metadata accessor for CaptionSectioner.Caption);
        uint64_t v20 = 0;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v17, v20, 1, v3);
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    }
    outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v14, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  }
  uint64_t v21 = static HorizontalAlignment.center.getter();
  closure #2 in TranscriptSubtitle.body.getter(v1, (uint64_t)v17, (uint64_t (**)())v26);
  uint64_t v22 = v27;
  long long v24 = v26[0];
  long long v23 = v26[1];
  *(void *)a1 = v21;
  *(void *)(a1 + 8) = 0x4030000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v24;
  *(_OWORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v23;
  *(void *)(a1 + 56) = v22;
  return outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v17, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
}

uint64_t closure #2 in TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TranscriptSubtitle(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10 - 8);
  outlined init with copy of TranscriptLabel(a1, (uint64_t)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for TranscriptSubtitle);
  outlined init with copy of FeatureEligibility?(a2, (uint64_t)v9, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v13 + v12 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  outlined init with take of TranscriptLabel((uint64_t)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v13, (void (*)(void))type metadata accessor for TranscriptSubtitle);
  uint64_t v16 = v15 + v14;
  uint64_t v17 = a1;
  outlined init with take of Any?((uint64_t)v9, v16, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  if (*(unsigned char *)(v17 + 17) == 1)
  {
    if (static Platform.current.getter() == 2)
    {
      outlined init with copy of TranscriptLabel(v17, (uint64_t)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for TranscriptSubtitle);
      uint64_t v19 = swift_allocObject();
      outlined init with take of TranscriptLabel((uint64_t)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v13, (void (*)(void))type metadata accessor for TranscriptSubtitle);
      uint64_t v18 = partial apply for closure #2 in closure #2 in TranscriptSubtitle.body.getter;
    }
    else
    {
      uint64_t v18 = 0;
      uint64_t v19 = 0;
    }
  }
  *a3 = partial apply for closure #1 in closure #2 in TranscriptSubtitle.body.getter;
  a3[1] = (uint64_t (*)())v15;
  a3[2] = 0;
  a3[3] = v18;
  a3[4] = (uint64_t (*)())v19;
  swift_retain();
  outlined copy of CaptionsSizeToggleButton?(0, (uint64_t)v18);
  outlined consume of CaptionsSizeToggleButton?(0, (uint64_t)v18);
  return swift_release();
}

uint64_t closure #1 in closure #2 in TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v84 = a3;
  uint64_t v76 = a1;
  uint64_t v82 = a4;
  uint64_t v5 = type metadata accessor for ScrollViewProxy();
  uint64_t v80 = *(void *)(v5 - 8);
  uint64_t v81 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v77 = v6;
  uint64_t v78 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  uint64_t v73 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v74 = v7;
  uint64_t v75 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TranscriptSubtitle(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  uint64_t v70 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v71 = v10;
  uint64_t v72 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v68 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1F4188790](v63);
  uint64_t v62 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v58 - v15);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>);
  MEMORY[0x1F4188790](v61);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (uint64_t *)((char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>);
  uint64_t v23 = v22 - 8;
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>);
  MEMORY[0x1F4188790](v59);
  uint64_t v58 = (uint64_t)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>);
  MEMORY[0x1F4188790](v60);
  uint64_t v28 = (char *)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>, TranscriptSubtitle.ContainerPadding>);
  MEMORY[0x1F4188790](v83);
  uint64_t v67 = (uint64_t)&v58 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  id v64 = (char *)&v58 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v21 = static Alignment.center.getter();
  v21[1] = v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, _ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>);
  closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter((uint64_t)a2, (uint64_t)v21 + *(int *)(v32 + 44));
  uint64_t v33 = static SafeAreaRegions.all.getter();
  char v34 = static Edge.Set.all.getter();
  outlined init with copy of FeatureEligibility?((uint64_t)v21, (uint64_t)v25, &demangling cache variable for type metadata for ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>);
  uint64_t v35 = &v25[*(int *)(v23 + 44)];
  *(void *)uint64_t v35 = v33;
  v35[8] = v34;
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v21, &demangling cache variable for type metadata for ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>);
  if (*a2 == 1)
  {
    if (one-time initialization token for subtitleSmallCornerRadius != -1) {
      swift_once();
    }
    uint64_t v36 = &static Layout.Captions.subtitleSmallCornerRadius;
  }
  else
  {
    if (one-time initialization token for subtitleCornerRadius != -1) {
      swift_once();
    }
    uint64_t v36 = &static Layout.Captions.subtitleCornerRadius;
  }
  uint64_t v37 = *v36;
  uint64_t v38 = (char *)v16 + *(int *)(v63 + 20);
  uint64_t v39 = *MEMORY[0x1E4F3D4A0];
  uint64_t v40 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v38, v39, v40);
  *uint64_t v16 = v37;
  v16[1] = v37;
  *(void *)uint64_t v18 = swift_getKeyPath();
  v18[8] = 0;
  outlined init with copy of TranscriptLabel((uint64_t)v16, v62, MEMORY[0x1E4F3CDB8]);
  State.init(wrappedValue:)();
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  uint64_t v41 = v58;
  outlined init with copy of FeatureEligibility?((uint64_t)v25, v58, &demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>);
  outlined init with take of Any?((uint64_t)v18, v41 + *(int *)(v59 + 36), &demangling cache variable for type metadata for TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>);
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v25, &demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  uint64_t v42 = (uint64_t)v68;
  State.wrappedValue.getter();
  LOBYTE(v39) = a2[16];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v44 = &v28[*(int *)(v60 + 36)];
  *(void *)uint64_t v44 = KeyPath;
  v44[8] = 0;
  uint64_t v45 = type metadata accessor for TranscriptSubtitle.ParticipantBadgeModifier(0);
  outlined init with take of Any?(v42, (uint64_t)&v44[*(int *)(v45 + 20)], &demangling cache variable for type metadata for Participant?);
  v44[*(int *)(v45 + 24)] = v39;
  outlined init with take of Any?(v41, (uint64_t)v28, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>);
  LOBYTE(v39) = *a2;
  uint64_t v46 = v67;
  outlined init with copy of FeatureEligibility?((uint64_t)v28, v67, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>);
  *(unsigned char *)(v46 + *(int *)(v83 + 36)) = v39;
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v28, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>);
  uint64_t v47 = v72;
  outlined init with copy of TranscriptLabel((uint64_t)a2, v72, (void (*)(void))type metadata accessor for TranscriptSubtitle);
  uint64_t v48 = v75;
  outlined init with copy of FeatureEligibility?(v84, v75, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  uint64_t v50 = v80;
  uint64_t v49 = v81;
  unsigned int v51 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v78, v76, v81);
  unint64_t v52 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  unint64_t v53 = (v71 + *(unsigned __int8 *)(v73 + 80) + v52) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  unint64_t v54 = (v74 + *(unsigned __int8 *)(v50 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v55 = swift_allocObject();
  outlined init with take of TranscriptLabel(v47, v55 + v52, (void (*)(void))type metadata accessor for TranscriptSubtitle);
  outlined init with take of Any?(v48, v55 + v53, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v54, v51, v49);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>, TranscriptSubtitle.ContainerPadding> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type CaptionSectioner.Caption? and conformance <A> A?();
  uint64_t v56 = v64;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  outlined destroy of Environment<RedactionReasons>.Content(v46, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>, TranscriptSubtitle.ContainerPadding>);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v65 + 32))(v82, v56, v66);
}

uint64_t closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>);
  MEMORY[0x1F4188790](v52);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>);
  MEMORY[0x1F4188790](v54);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>.Storage);
  MEMORY[0x1F4188790](v53);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 104);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)(a1 + 88);
  *(void *)&v55[16] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<String?>);
  uint64_t v18 = State.wrappedValue.getter();
  uint64_t v19 = v62;
  if (v62)
  {
    uint64_t v49 = v11;
    uint64_t v50 = v14;
    *(void *)&long long v51 = a2;
    uint64_t v47 = (uint64_t)&v47;
    MEMORY[0x1F4188790](v18);
    *(&v47 - 4) = a1;
    *(&v47 - 3) = v20;
    *(&v47 - 2) = v19;
    static Axis.Set.vertical.getter();
    uint64_t v48 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>> and conformance VStack<A>);
    ScrollView.init(_:showsIndicators:content:)();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)(a1 + 64);
    *(void *)uint64_t v55 = *(void *)(a1 + 56);
    *(void *)&v55[8] = v21;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
    State.wrappedValue.getter();
    uint64_t v22 = v61;
    uint64_t v23 = *(void *)(a1 + 80);
    *(void *)uint64_t v55 = *(void *)(a1 + 72);
    *(void *)&v55[8] = v23;
    State.wrappedValue.getter();
    uint64_t v24 = v61;
    uint64_t v25 = v48;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v7, v48);
    uint64_t v26 = &v9[*(int *)(v52 + 36)];
    *(void *)uint64_t v26 = v22;
    *((void *)v26 + 1) = v24;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v25);
    uint64_t v27 = *(void *)(a1 + 80);
    *(void *)uint64_t v55 = *(void *)(a1 + 72);
    *(void *)&v55[8] = v27;
    State.wrappedValue.getter();
    if (one-time initialization token for subtitleStyleVerticalPadding != -1) {
      swift_once();
    }
    TranscriptSubtitle.maskGradient(viewHeight:gradientHeight:)((uint64_t)v55);
    uint64_t v28 = *(void *)v55;
    long long v52 = *(_OWORD *)&v55[8];
    uint64_t v29 = v56;
    uint64_t v30 = v57;
    uint64_t v31 = (uint64_t)v49;
    outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)v49, &demangling cache variable for type metadata for ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>);
    uint64_t v32 = v31 + *(int *)(v54 + 36);
    *(void *)uint64_t v32 = v28;
    *(_OWORD *)(v32 + 8) = v52;
    *(void *)(v32 + 24) = v29;
    *(void *)(v32 + 32) = v30;
    outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>);
    uint64_t v33 = (uint64_t)v50;
    outlined init with take of Any?(v31, (uint64_t)v50, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>);
    outlined init with copy of FeatureEligibility?(v33, (uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    return outlined destroy of Environment<RedactionReasons>.Content(v33, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>);
  }
  else
  {
    uint64_t v35 = static VerticalAlignment.center.getter();
    closure #2 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter((uint64_t)v55);
    long long v36 = *(_OWORD *)v55;
    uint64_t v37 = *(void *)&v55[16];
    uint64_t v38 = v56;
    long long v39 = v57;
    uint64_t v40 = v58;
    char v41 = v59;
    uint64_t v42 = v60;
    if (*(unsigned char *)a1 == 1)
    {
      if (one-time initialization token for subtitleStyleMinWidthSmallLayout != -1)
      {
        long long v51 = v57;
        long long v52 = *(_OWORD *)v55;
        swift_once();
        long long v39 = v51;
        long long v36 = v52;
      }
      uint64_t v43 = static Layout.Captions.subtitleStyleMinWidthSmallLayout;
      if (one-time initialization token for subtitleSmallFont != -1)
      {
        long long v51 = v39;
        long long v52 = v36;
        swift_once();
        long long v39 = v51;
        long long v36 = v52;
      }
      uint64_t v44 = &static Layout.Captions.subtitleSmallFont;
    }
    else
    {
      if (one-time initialization token for subtitleStyleMinWidth != -1)
      {
        long long v51 = v57;
        long long v52 = *(_OWORD *)v55;
        swift_once();
        long long v39 = v51;
        long long v36 = v52;
      }
      uint64_t v43 = static Layout.Captions.subtitleStyleMinWidth;
      if (one-time initialization token for subtitleFont != -1)
      {
        long long v51 = v39;
        long long v52 = v36;
        swift_once();
        long long v39 = v51;
        long long v36 = v52;
      }
      uint64_t v44 = &static Layout.Captions.subtitleFont;
    }
    uint64_t v45 = (void *)*v44;
    *(void *)uint64_t v16 = v35;
    *((void *)v16 + 1) = 0x4010000000000000;
    v16[16] = 0;
    *(_OWORD *)(v16 + 24) = v36;
    *((void *)v16 + 5) = v37;
    *((void *)v16 + 6) = v38;
    *(_OWORD *)(v16 + 56) = v39;
    *((void *)v16 + 9) = v40;
    v16[80] = v41;
    *((void *)v16 + 11) = v42;
    *((void *)v16 + 12) = v43;
    *((void *)v16 + 13) = v45;
    swift_storeEnumTagMultiPayload();
    id v46 = v45;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding> and conformance <> ModifiedContent<A, B>();
    return _ConditionalContent<>.init(storage:)();
  }
}

void *closure #1 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = static HorizontalAlignment.center.getter();
  closure #1 in closure #1 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(a1, a2, a3, (uint64_t)v10);
  memcpy(&__src[7], v10, 0xE8uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = 0xC000000000000000;
  *(unsigned char *)(a4 + 16) = 0;
  return memcpy((void *)(a4 + 17), __src, 0xEFuLL);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)&__src[0] = a2;
  *((void *)&__src[0] + 1) = a3;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9;
  if (*a1 == 1)
  {
    if (one-time initialization token for subtitleSmallFont != -1) {
      swift_once();
    }
    uint64_t v11 = &static Layout.Captions.subtitleSmallFont;
  }
  else
  {
    if (one-time initialization token for subtitleFont != -1) {
      swift_once();
    }
    uint64_t v11 = &static Layout.Captions.subtitleFont;
  }
  id v12 = (id)*v11;
  Font.init(_:)();
  uint64_t v13 = Text.font(_:)();
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v28 = v18;
  swift_release();
  outlined consume of Text.Storage(v6, v8, v10 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  if (*a1 == 1)
  {
    if (one-time initialization token for subtitleSmallFont != -1) {
      swift_once();
    }
    uint64_t v20 = &static Layout.Captions.subtitleSmallFont;
  }
  else
  {
    if (one-time initialization token for subtitleFont != -1) {
      swift_once();
    }
    uint64_t v20 = &static Layout.Captions.subtitleFont;
  }
  uint64_t v21 = (void *)*v20;
  uint64_t v41 = v13;
  uint64_t v42 = v15;
  char v43 = v17 & 1;
  uint64_t v44 = v28;
  uint64_t v45 = KeyPath;
  char v46 = 1;
  objc_msgSend(v21, sel_lineHeight);
  static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, __src);
  outlined consume of Text.Storage(v13, v15, v17 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = static Color.clear.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v23 = v36;
  char v24 = v37;
  uint64_t v25 = v38;
  char v26 = v39;
  memcpy(__dst, __src, 0xA0uLL);
  memcpy((void *)a4, __src, 0xA0uLL);
  char v33 = v24;
  char v31 = v26;
  *(_DWORD *)(a4 + 177) = *(_DWORD *)v32;
  *(_DWORD *)(a4 + 18ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_DWORD *)&v32[3];
  *(_DWORD *)(a4 + 193) = *(_DWORD *)v30;
  *(_DWORD *)(a4 + 196) = *(_DWORD *)&v30[3];
  *(void *)(a4 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v22;
  *(void *)(a4 + 168) = v23;
  *(unsigned char *)(a4 + 176) = v24;
  *(void *)(a4 + 184) = v25;
  *(unsigned char *)(a4 + 192) = v26;
  *(_OWORD *)(a4 + 20ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v40;
  strcpy((char *)(a4 + 216), "scrolling-text");
  *(unsigned char *)(a4 + 231) = -18;
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>((uint64_t)__dst);
  memcpy(v34, __src, 0xA0uLL);
  return outlined release of ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>((uint64_t)v34);
}

double TranscriptSubtitle.maskGradient(viewHeight:gradientHeight:)@<D0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Gradient.Stop>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C376A6F0;
  static Color.clear.getter();
  *(void *)(v2 + 32) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v3;
  static Color.black.getter();
  *(void *)(v2 + 48) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 56) = v4;
  static Color.black.getter();
  *(void *)(v2 + 64) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 72) = v5;
  static Color.clear.getter();
  *(void *)(v2 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 88) = v6;
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  MEMORY[0x1C8772A40](v2);
  LinearGradient.init(gradient:startPoint:endPoint:)();
  double result = *(double *)&v8;
  *(_OWORD *)a1 = v8;
  *(_OWORD *)(a1 + 16) = v9;
  *(void *)(a1 + 32) = v10;
  return result;
}

uint64_t closure #2 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRelease();
  uint64_t v28 = Image.init(systemName:)();
  uint64_t v27 = TranscriptSubtitle.placeholderFont.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = static Color.secondary.getter();
  uint64_t v24 = swift_getKeyPath();
  id v2 = objc_msgSend(self, sel_conversationKit);
  v29._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001C37BEF10;
  v3._uint64_t countAndFlagsBits = 0xD000000000000016;
  v4.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v29._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v29);

  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  TranscriptSubtitle.placeholderFont.getter();
  uint64_t v11 = Text.font(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  swift_release();
  outlined consume of Text.Storage(v6, v8, v10);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v16 = Text.foregroundColor(_:)();
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t v22 = v21;
  swift_release();
  outlined consume of Text.Storage(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  *(void *)a1 = v28;
  *(void *)(a1 + 8) = KeyPath;
  *(void *)(a1 + 16) = v27;
  *(void *)(a1 + 24) = v24;
  *(void *)(a1 + 32) = v25;
  *(void *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v16;
  *(void *)(a1 + 48) = v18;
  *(unsigned char *)(a1 + 56) = v20 & 1;
  *(void *)(a1 + 64) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Text.Storage(v16, v18, v20 & 1);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v16, v18, v20 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  char v19 = (char *)&v34 - v18;
  uint64_t v20 = TranscriptSubtitle.scrollViewParameters(for:)(a4);
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v35 = v20;
  uint64_t v25 = *(void *)(a3 + 64);
  *(void *)&long long v38 = *(void *)(a3 + 56);
  *((void *)&v38 + 1) = v25;
  *(void *)&long long v37 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.setter();
  uint64_t v26 = *(void *)(a3 + 80);
  *(void *)&long long v38 = *(void *)(a3 + 72);
  *((void *)&v38 + 1) = v26;
  *(void *)&long long v37 = v24;
  State.wrappedValue.setter();
  outlined init with copy of FeatureEligibility?(a4, (uint64_t)v13, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  uint64_t v27 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v27) == 1)
  {
    outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v13, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
    uint64_t v28 = 1;
  }
  else
  {
    outlined init with copy of TranscriptLabel((uint64_t)&v13[*(int *)(v27 + 20)], (uint64_t)v19, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    uint64_t v28 = 0;
  }
  uint64_t v29 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, v28, 1, v29);
  type metadata accessor for TranscriptSubtitle(0);
  outlined init with copy of FeatureEligibility?((uint64_t)v19, (uint64_t)v16, &demangling cache variable for type metadata for Participant?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  State.wrappedValue.setter();
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v19, &demangling cache variable for type metadata for Participant?);
  outlined init with copy of FeatureEligibility?(a2, (uint64_t)v10, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v27) == 1)
  {
    static Animation.snappy(duration:extraBounce:)();
    long long v30 = *(_OWORD *)(a3 + 88);
    uint64_t v39 = *(void *)(a3 + 104);
    long long v37 = xmmword_1C378D9D0;
    long long v38 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<String?>);
    uint64_t v31 = State.wrappedValue.setter();
  }
  else
  {
    static Animation.snappy(duration:extraBounce:)();
    uint64_t v31 = outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v10, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  }
  MEMORY[0x1F4188790](v31);
  *(&v34 - 6) = a3;
  *(&v34 - 5) = a4;
  *(&v34 - 4) = v22;
  *(&v34 - 3) = v24;
  uint64_t v32 = v36;
  *(&v34 - 2) = v35;
  *(&v34 - 1) = v32;
  swift_retain();
  withAnimation<A>(_:_:)();
  return swift_release_n();
}

uint64_t TranscriptSubtitle.scrollViewParameters(for:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1F4188790](v3 - 8);
  Swift::String v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CaptionSectioner.Caption(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v5, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) != 1)
  {
    outlined init with take of TranscriptLabel((uint64_t)v5, (uint64_t)v8, (void (*)(void))type metadata accessor for CaptionSectioner.Caption);
    int v9 = *v1;
    if (v9 == 1)
    {
      if (one-time initialization token for subtitleSmallFont != -1) {
        swift_once();
      }
      char v10 = &static Layout.Captions.subtitleSmallFont;
    }
    else
    {
      if (one-time initialization token for subtitleFont != -1) {
        swift_once();
      }
      char v10 = &static Layout.Captions.subtitleFont;
    }
    uint64_t v12 = &v8[*(int *)(v6 + 36)];
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *((void *)v12 + 1);
    id v15 = (id)*v10;
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)MEMORY[0x1C87730B0](v13, v14);
    swift_bridgeObjectRelease();
    if (v9)
    {
      if (one-time initialization token for subtitleStyleMaxWidthSmallLayout != -1) {
        swift_once();
      }
      uint64_t v16 = &static Layout.Captions.subtitleStyleMaxWidthSmallLayout;
    }
    else
    {
      if (one-time initialization token for subtitleStyleMaxWidth != -1) {
        swift_once();
      }
      uint64_t v16 = &static Layout.Captions.subtitleStyleMaxWidth;
    }
    double v17 = *(double *)v16;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C3769620;
    char v19 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
    *(void *)(inited + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v15;
    type metadata accessor for NSAttributedStringKey(0);
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey);
    id v20 = v15;
    id v21 = v19;
    Dictionary.init(dictionaryLiteral:)();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_boundingRectWithSize_options_attributes_context_, 1, isa, 0, v17, 1.79769313e308);
    CGFloat v24 = v23;
    CGFloat v26 = v25;
    CGFloat v28 = v27;
    CGFloat v30 = v29;

    v36.origin.x = v24;
    v36.origin.y = v26;
    v36.size.double width = v28;
    v36.size.CGFloat height = v30;
    double Height = CGRectGetHeight(v36);
    objc_msgSend(v20, sel_lineHeight);
    double v33 = ceil(Height / v32);
    if ((~*(void *)&v33 & 0x7FF0000000000000) != 0)
    {
      if (v33 > -9.22337204e18)
      {
        if (v33 < 9.22337204e18)
        {
          uint64_t v11 = (void *)(uint64_t)v33;
          if ((uint64_t)v33 <= 1)
          {
            v37.origin.x = v24;
            v37.origin.y = v26;
            v37.size.double width = v28;
            v37.size.CGFloat height = v30;
            CGRectGetWidth(v37);
            goto LABEL_34;
          }
          if (*v1 == 1)
          {
            if (one-time initialization token for subtitleStyleMaxWidthSmallLayout == -1)
            {
LABEL_34:
              if (one-time initialization token for subtitleStyleHorizontalPadding == -1) {
                goto LABEL_35;
              }
              goto LABEL_46;
            }
          }
          else if (one-time initialization token for subtitleStyleMaxWidth == -1)
          {
            goto LABEL_34;
          }
          swift_once();
          goto LABEL_34;
        }
LABEL_45:
        __break(1u);
LABEL_46:
        swift_once();
LABEL_35:
        if (one-time initialization token for subtitleStyleVerticalPadding != -1) {
          swift_once();
        }
        if (*v1 == 1)
        {
          if (one-time initialization token for subtitleStyleMinWidthSmallLayout == -1) {
            goto LABEL_41;
          }
        }
        else if (one-time initialization token for subtitleStyleMinWidth == -1)
        {
LABEL_41:
          v38.origin.x = v24;
          v38.origin.y = v26;
          v38.size.double width = v28;
          v38.size.CGFloat height = v30;
          CGRectGetHeight(v38);
          objc_msgSend(v20, sel_lineHeight);

          _s15ConversationKit11ParticipantV5StateOWOhTm_3();
          return (uint64_t)v11;
        }
        swift_once();
        goto LABEL_41;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_45;
  }
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v5, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  if (*v1 == 1)
  {
    if (one-time initialization token for subtitleStyleDefaultSmallWidth != -1) {
      swift_once();
    }
    if (one-time initialization token for subtitleStyleDefaultSmallHeight == -1) {
      return 1;
    }
  }
  else
  {
    if (one-time initialization token for subtitleStyleDefaultWidth != -1) {
      swift_once();
    }
    if (one-time initialization token for subtitleStyleDefaultHeight == -1) {
      return 1;
    }
  }
  swift_once();
  return 1;
}

uint64_t static Animation.snappy(duration:extraBounce:)()
{
  return static Animation.spring(response:dampingFraction:blendDuration:)();
}

uint64_t closure #1 in closure #2 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of FeatureEligibility?(a2, (uint64_t)v8, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  uint64_t v9 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v8, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = &v8[*(int *)(v9 + 36)];
    uint64_t v10 = *(void *)v12;
    uint64_t v11 = *((void *)v12 + 1);
    swift_bridgeObjectRetain();
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  }
  uint64_t v13 = *(void *)(a1 + 104);
  long long v16 = *(_OWORD *)(a1 + 88);
  uint64_t v17 = v13;
  v15[0] = v10;
  v15[1] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<String?>);
  uint64_t result = State.wrappedValue.setter();
  if (a3 >= 2)
  {
    strcpy((char *)&v16, "scrolling-text");
    HIBYTE(v16) = -18;
    return ScrollViewProxy.scrollTo<A>(_:anchor:)();
  }
  return result;
}

uint64_t TranscriptParticipantBadge.font.getter()
{
  uint64_t v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v1, v2);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(v1, v2);
  if (v4 == 1)
  {
    return static Font.body.getter();
  }
  else
  {
    return static Font.callout.getter();
  }
}

double TranscriptParticipantBadge.avatarSize.getter()
{
  uint64_t v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v1, v2);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(v1, v2);
  if (v5 == 1)
  {
    if (one-time initialization token for subtitleBadgeAvatarSmallSize != -1) {
      swift_once();
    }
    uint64_t v3 = &static Layout.Captions.subtitleBadgeAvatarSmallSize;
  }
  else
  {
    if (one-time initialization token for subtitleBadgeAvatarSize != -1) {
      swift_once();
    }
    uint64_t v3 = &static Layout.Captions.subtitleBadgeAvatarSize;
  }
  return *(double *)v3;
}

uint64_t TranscriptParticipantBadge.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v120 = a1;
  uint64_t v118 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v118);
  uint64_t v119 = (uint64_t)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for TaskPriority();
  uint64_t v114 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v113 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for TranscriptParticipantBadge(0);
  uint64_t v107 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  uint64_t v108 = v5;
  uint64_t v115 = (uint64_t)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  MEMORY[0x1F4188790](v104);
  uint64_t v105 = (uint64_t)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = (void (*)(void))type metadata accessor for RoundedRectangle();
  MEMORY[0x1F4188790](v106);
  uint64_t v92 = (uint64_t *)((char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Material();
  MEMORY[0x1F4188790](v8);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>);
  MEMORY[0x1F4188790](v102);
  uint64_t v121 = (uint64_t (*)(uint64_t))((char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>);
  MEMORY[0x1F4188790](v103);
  uint64_t v124 = (uint64_t)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier>);
  MEMORY[0x1F4188790](v122);
  uint64_t v111 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  uint64_t v110 = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112);
  uint64_t v109 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = static VerticalAlignment.center.getter();
  closure #1 in TranscriptParticipantBadge.body.getter(v1, (uint64_t)v139);
  uint64_t v88 = v139[1];
  uint64_t v89 = v139[0];
  char v13 = v139[2];
  int v87 = BYTE1(v139[2]);
  uint64_t v91 = v139[3];
  int v90 = LOBYTE(v139[4]);
  uint64_t v93 = v139[5];
  char v14 = v139[6];
  uint64_t v96 = v139[8];
  uint64_t v97 = v139[7];
  int v94 = BYTE1(v139[9]);
  int v95 = LOBYTE(v139[9]);
  uint64_t v100 = v139[11];
  uint64_t v101 = (void (*)(void))v139[10];
  uint64_t v98 = v139[13];
  uint64_t v99 = v139[12];
  unsigned int v15 = static Edge.Set.top.getter();
  unsigned int v16 = static Edge.Set.leading.getter();
  unsigned int v17 = static Edge.Set.bottom.getter();
  uint64_t v18 = MEMORY[0x1C8771D90](0);
  int v19 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v19 & v15) != v15) {
    uint64_t v18 = MEMORY[0x1C8771D90](v18 | v15);
  }
  int v20 = MEMORY[0x1C8771D90](v18);
  if (MEMORY[0x1C8771D90](v20 & v16) != v16) {
    uint64_t v18 = MEMORY[0x1C8771D90](v18 | v16);
  }
  int v21 = MEMORY[0x1C8771D90](v18);
  if (MEMORY[0x1C8771D90](v21 & v17) != v17) {
    LOBYTE(v18) = MEMORY[0x1C8771D90](v18 | v17);
  }
  int v22 = *(unsigned __int8 *)(v2 + *(int *)(v123 + 28));
  if ((v22 & 1) != 0 && one-time initialization token for subtitleBadgeTopLeadingBottomPadding != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  unsigned int v31 = static Edge.Set.trailing.getter();
  int v32 = MEMORY[0x1C8771D90](0);
  int v33 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v33 & v31) != v31) {
    LOBYTE(v32) = MEMORY[0x1C8771D90](v32 | v31);
  }
  if (v22 && one-time initialization token for subtitleBadgeTrailingPadding != -1) {
    swift_once();
  }
  uint64_t v117 = v2;
  char v128 = 0;
  char v127 = v13;
  char v34 = v90;
  char v126 = v90;
  char v125 = v14;
  char v129 = 0;
  uint64_t v35 = EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  char v44 = v129;
  char v130 = 0;
  MEMORY[0x1C8772A80](v35);
  uint64_t v45 = AnyShapeStyle.init<A>(_:)();
  char v46 = static Edge.Set.all.getter();
  v139[0] = v86;
  v139[1] = 0x4018000000000000;
  LOBYTE(v139[2]) = 0;
  *(_DWORD *)((char *)&v139[2] + 1) = *(_DWORD *)v138;
  HIDWORD(v139[2]) = *(_DWORD *)&v138[3];
  v139[3] = v89;
  v139[4] = v88;
  LOBYTE(v139[5]) = v13;
  BYTE1(v139[5]) = v87;
  *(_DWORD *)((char *)&v139[5] + 2) = *(_DWORD *)&v136[7];
  HIWORD(v139[5]) = v137;
  v139[6] = v91;
  LOBYTE(v139[7]) = v34;
  HIDWORD(v139[7]) = *(_DWORD *)&v136[3];
  *(_DWORD *)((char *)&v139[7] + 1) = *(_DWORD *)v136;
  v139[8] = v93;
  LOBYTE(v139[9]) = v14;
  *(_DWORD *)((char *)&v139[9] + 1) = *(_DWORD *)v135;
  HIDWORD(v139[9]) = *(_DWORD *)&v135[3];
  v139[10] = v97;
  v139[11] = v96;
  LOBYTE(v139[12]) = v95;
  BYTE1(v139[12]) = v94;
  *(_DWORD *)((char *)&v139[12] + 2) = *(_DWORD *)&v133[7];
  HIWORD(v139[12]) = v134;
  v139[13] = v101;
  v139[14] = v100;
  v139[15] = v99;
  v139[16] = v98;
  LOBYTE(v139[17]) = v18;
  HIDWORD(v139[17]) = *(_DWORD *)&v133[3];
  *(_DWORD *)((char *)&v139[17] + 1) = *(_DWORD *)v133;
  v139[18] = v24;
  v139[19] = v26;
  v139[20] = v28;
  v139[21] = v30;
  LOBYTE(v139[22]) = v44;
  HIDWORD(v139[22]) = *(_DWORD *)&v132[3];
  *(_DWORD *)((char *)&v139[22] + 1) = *(_DWORD *)v132;
  LOBYTE(v139[23]) = v32;
  *(_DWORD *)((char *)&v139[23] + 1) = *(_DWORD *)v131;
  HIDWORD(v139[23]) = *(_DWORD *)&v131[3];
  v139[24] = v37;
  v139[25] = v39;
  v139[26] = v41;
  v139[27] = v43;
  LOBYTE(v139[28]) = v130;
  v139[29] = v45;
  LOBYTE(v139[30]) = v46;
  if (one-time initialization token for subtitleBadgeCornerRadius != -1) {
    swift_once();
  }
  uint64_t v47 = static Layout.Captions.subtitleBadgeCornerRadius;
  uint64_t v48 = v106;
  uint64_t v49 = v92;
  uint64_t v50 = (char *)v92 + *((int *)v106 + 5);
  uint64_t v51 = *MEMORY[0x1E4F3D4A0];
  uint64_t v52 = type metadata accessor for RoundedCornerStyle();
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 104);
  v53(v50, v51, v52);
  *uint64_t v49 = v47;
  v49[1] = v47;
  uint64_t v101 = (void (*)(void))MEMORY[0x1E4F3CDB8];
  uint64_t v54 = v105;
  outlined init with copy of TranscriptLabel((uint64_t)v49, v105, MEMORY[0x1E4F3CDB8]);
  *(_WORD *)(v54 + *(int *)(v104 + 36)) = 256;
  uint64_t v55 = v121;
  outlined init with copy of FeatureEligibility?(v54, (uint64_t)v121 + *(int *)(v102 + 36), &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  memcpy(v55, v139, 0xF1uLL);
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>(v139);
  outlined destroy of Environment<RedactionReasons>.Content(v54, &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  outlined release of ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>(v139);
  uint64_t v56 = static Alignment.center.getter();
  uint64_t v104 = v57;
  uint64_t v105 = v56;
  uint64_t v58 = v124 + *(int *)(v103 + 36);
  uint64_t v59 = static Layout.Captions.subtitleBadgeCornerRadius;
  v53((char *)v49 + *((int *)v48 + 5), v51, v52);
  *uint64_t v49 = v59;
  v49[1] = v59;
  static Color.white.getter();
  uint64_t v60 = Color.opacity(_:)();
  swift_release();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  outlined init with copy of TranscriptLabel((uint64_t)v49, v58, v101);
  uint64_t v61 = v58
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _StrokedShape<RoundedRectangle>)
               + 36);
  long long v62 = v141;
  *(_OWORD *)uint64_t v61 = v140;
  *(_OWORD *)(v61 + 16) = v62;
  *(void *)(v61 + 32) = v142;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<_StrokedShape<RoundedRectangle>, Color>);
  *(void *)(v58 + *(int *)(v63 + 52)) = v60;
  *(_WORD *)(v58 + *(int *)(v63 + 56)) = 256;
  uint64_t v64 = static Alignment.center.getter();
  uint64_t v66 = v65;
  uint64_t v67 = (uint64_t *)(v58
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<_StrokedShape<RoundedRectangle>, Color>, _BackgroundModifier<EmptyView>>)
                           + 36));
  *uint64_t v67 = v64;
  v67[1] = v66;
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  uint64_t v68 = (void *)(v58
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>)
                          + 36));
  uint64_t v69 = v104;
  *uint64_t v68 = v105;
  v68[1] = v69;
  outlined init with take of Any?((uint64_t)v121, v124, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>);
  uint64_t v121 = type metadata accessor for TranscriptParticipantBadge;
  uint64_t v70 = v117;
  uint64_t v71 = v115;
  outlined init with copy of TranscriptLabel(v117, v115, (void (*)(void))type metadata accessor for TranscriptParticipantBadge);
  uint64_t v72 = *(unsigned __int8 *)(v107 + 80);
  uint64_t v73 = (v72 + 16) & ~v72;
  uint64_t v107 = v72 | 7;
  v108 += v73;
  uint64_t v74 = swift_allocObject();
  uint64_t v106 = (void (*)(void))type metadata accessor for TranscriptParticipantBadge;
  outlined init with take of TranscriptLabel(v71, v74 + v73, (void (*)(void))type metadata accessor for TranscriptParticipantBadge);
  uint64_t v75 = v113;
  static TaskPriority.userInitiated.getter();
  uint64_t v76 = (uint64_t)v111;
  uint64_t v77 = &v111[*(int *)(v122 + 36)];
  uint64_t v78 = type metadata accessor for _TaskModifier();
  uint64_t v79 = v114;
  uint64_t v80 = v116;
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(&v77[*(int *)(v78 + 20)], v75, v116);
  *(void *)uint64_t v77 = &async function pointer to partial apply for closure #3 in TranscriptParticipantBadge.body.getter;
  *((void *)v77 + 1) = v74;
  uint64_t v81 = v124;
  outlined init with copy of FeatureEligibility?(v124, v76, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v75, v80);
  outlined destroy of Environment<RedactionReasons>.Content(v81, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>);
  outlined init with copy of TranscriptLabel(v70 + *(int *)(v123 + 20), v119, (void (*)(void))type metadata accessor for Participant);
  outlined init with copy of TranscriptLabel(v70, v71, (void (*)(void))v121);
  uint64_t v82 = swift_allocObject();
  outlined init with take of TranscriptLabel(v71, v82 + v73, v106);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier> and conformance <> ModifiedContent<A, B>();
  _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Participant and conformance Participant);
  uint64_t v83 = v109;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  _s15ConversationKit11ParticipantV5StateOWOhTm_3();
  outlined destroy of Environment<RedactionReasons>.Content(v76, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier>);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v110 + 32))(v120, v83, v112);
}

uint64_t closure #1 in TranscriptParticipantBadge.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Image.ResizingMode();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TranscriptParticipantBadge(0);
  uint64_t v9 = (void **)(a1 + *(int *)(v8 + 24));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v43 = v11;
  char v44 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Image>);
  State.wrappedValue.getter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F3EBF8], v4);
  uint64_t v12 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  TranscriptParticipantBadge.avatarSize.getter();
  TranscriptParticipantBadge.avatarSize.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = v47;
  unsigned __int8 v18 = v48;
  uint64_t v19 = v49;
  unsigned __int8 v20 = v50;
  long long v21 = v51;
  if (*(unsigned char *)(a1 + *(int *)(v8 + 28)) == 1)
  {
    long long v39 = v51;
    int v38 = v48;
    uint64_t v37 = v49;
    int v36 = v50;
    uint64_t v35 = v47;
    Participant.contactDetails.getter();
    int v22 = v43;
    uint64_t v23 = v45;
    uint64_t v24 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v41 = v23;
    uint64_t v42 = v24;
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v25 = Text.init<A>(_:)();
    uint64_t v40 = v12;
    uint64_t v27 = v26;
    LOBYTE(v22) = v28 & 1;
    TranscriptParticipantBadge.font.getter();
    uint64_t v13 = Text.font(_:)();
    uint64_t v14 = v29;
    char v31 = v30;
    uint64_t v16 = v32;
    swift_release();
    uint64_t v15 = v31 & 1;
    uint64_t v33 = v27;
    uint64_t v12 = v40;
    outlined consume of Text.Storage(v25, v33, (char)v22);
    swift_bridgeObjectRelease();
    uint64_t v17 = v35;
    unsigned __int8 v20 = v36;
    uint64_t v19 = v37;
    unsigned __int8 v18 = v38;
    long long v21 = v39;
  }
  *(void *)a2 = v12;
  *(void *)(a2 + 8) = 0;
  *(_WORD *)(a2 + 16) = 257;
  *(void *)(a2 + 24) = v17;
  *(unsigned char *)(a2 + 32) = v18;
  *(void *)(a2 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v19;
  *(unsigned char *)(a2 + 48) = v20;
  *(_OWORD *)(a2 + 56) = v21;
  *(_WORD *)(a2 + 72) = 256;
  *(void *)(a2 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v13;
  *(void *)(a2 + 88) = v14;
  *(void *)(a2 + 96) = v15;
  *(void *)(a2 + 104) = v16;
  swift_retain();
  outlined copy of Text?(v13, v14, v15, v16);
  outlined consume of Text?(v13, v14, v15, v16);
  return swift_release();
}

uint64_t closure #3 in TranscriptParticipantBadge.body.getter(uint64_t a1)
{
  *(void *)(v1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 48) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #3 in TranscriptParticipantBadge.body.getter, v3, v2);
}

uint64_t closure #3 in TranscriptParticipantBadge.body.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  uint64_t v2 = type metadata accessor for TranscriptParticipantBadge(0);
  uint64_t v3 = v1 + *(int *)(v2 + 20);
  uint64_t v4 = *(void **)(v3 + *(int *)(type metadata accessor for Participant(0) + 28));
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 40);

    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v5 + *(int *)(v2 + 32));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Task<(), Never>?>);
    State.wrappedValue.getter();
    if (*(void *)(v0 + 32))
    {
      MEMORY[0x1C8773690](*(void *)(v0 + 32), MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
      swift_release();
    }
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

void *closure #4 in TranscriptParticipantBadge.body.getter(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for TranscriptParticipantBadge(0) + 20);
  uint64_t result = *(void **)(v1 + *(int *)(type metadata accessor for Participant(0) + 28));
  if (result)
  {

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Task<(), Never>?>);
    uint64_t result = (void *)State.wrappedValue.getter();
    if (v3)
    {
      MEMORY[0x1C8773690](v3, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
      return (void *)swift_release();
    }
  }
  return result;
}

uint64_t CaptionsSizeToggleButton.Configuration.symbolDescriber.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 24) = &type metadata for SymbolImageDescribers.Captions;
  *(void *)(a2 + 32) = &protocol witness table for SymbolImageDescribers.Captions;
  *(unsigned char *)a2 = (result & 1) == 0;
  return result;
}

BOOL static CaptionsSizeToggleButton.Configuration.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void CaptionsSizeToggleButton.Configuration.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int CaptionsSizeToggleButton.Configuration.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CaptionsSizeToggleButton.Configuration(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static CaptionsSizeToggleButton.Configuration.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance CaptionsSizeToggleButton.Configuration()
{
  return CaptionsSizeToggleButton.Configuration.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance CaptionsSizeToggleButton.Configuration(uint64_t a1)
{
  CaptionsSizeToggleButton.Configuration.hash(into:)(a1, *v1);
}

uint64_t CaptionsSizeToggleButton.configuration.getter(char a1)
{
  return a1 & 1;
}

uint64_t CaptionsSizeToggleButton.configuration.setter(uint64_t result)
{
  unsigned char *v1 = result & 1;
  return result;
}

uint64_t (*CaptionsSizeToggleButton.configuration.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for CaptionsSizeToggleButton.action : CaptionsSizeToggleButton@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = partial apply for thunk for @callee_guaranteed () -> ();
  a2[1] = (uint64_t (*)())v5;
  return swift_retain();
}

uint64_t key path setter for CaptionsSizeToggleButton.action : CaptionsSizeToggleButton(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 8) = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  *(void *)(a2 + 16) = v5;
  return result;
}

uint64_t CaptionsSizeToggleButton.action.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t CaptionsSizeToggleButton.action.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*CaptionsSizeToggleButton.action.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t CaptionsSizeToggleButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for BorderlessButtonStyle();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_21();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout>>);
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_21();
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  OUTLINED_FUNCTION_4();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_21();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_16_0();
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_21();
  uint64_t v37 = v14 - v13;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  Button.init(action:label:)();
  BorderlessButtonStyle.init()();
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout>> and conformance Button<A>);
  _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type BorderlessButtonStyle and conformance BorderlessButtonStyle);
  View.buttonStyle<A>(_:)();
  OUTLINED_FUNCTION_26_2();
  v15();
  OUTLINED_FUNCTION_26_2();
  v16();
  uint64_t v17 = static Color.secondary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v9, v35);
  uint64_t v19 = (uint64_t *)(v1 + *(int *)(v11 + 44));
  *uint64_t v19 = KeyPath;
  v19[1] = v17;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v35);
  unsigned int v20 = static Edge.Set.top.getter();
  unsigned int v21 = static Edge.Set.trailing.getter();
  uint64_t v22 = MEMORY[0x1C8771D90](0);
  int v23 = MEMORY[0x1C8771D90]();
  if (MEMORY[0x1C8771D90](v23 & v20) != v20) {
    uint64_t v22 = MEMORY[0x1C8771D90](v22 | v20);
  }
  int v24 = MEMORY[0x1C8771D90](v22);
  if (MEMORY[0x1C8771D90](v24 & v21) != v21) {
    LOBYTE(v22) = MEMORY[0x1C8771D90](v22 | v21);
  }
  if (one-time initialization token for bubblePadding != -1) {
    swift_once();
  }
  swift_beginAccess();
  EdgeInsets.init(_all:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  outlined init with copy of FeatureEligibility?(v1, v37, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v33 = v37 + *(int *)(v36 + 36);
  *(unsigned char *)uint64_t v33 = v22;
  *(void *)(v33 + 8) = v26;
  *(void *)(v33 + 16) = v28;
  *(void *)(v33 + 24) = v30;
  *(void *)(v33 + 32) = v32;
  *(unsigned char *)(v33 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0;
  outlined destroy of Environment<RedactionReasons>.Content(v1, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  return outlined init with take of Any?(v37, a1, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
}

uint64_t closure #1 in CaptionsSizeToggleButton.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>)
      - 8;
  MEMORY[0x1F4188790](v54);
  uint64_t v52 = (uint64_t *)((char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v51 = type metadata accessor for Image.Scale();
  uint64_t v4 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  unsigned __int8 v50 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolRenderingMode?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Image.ResizingMode();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
  MEMORY[0x1F4188790](v49);
  uint64_t v14 = (uint64_t *)((char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>)
      - 8;
  MEMORY[0x1F4188790](v58);
  uint64_t v56 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>)
      - 8;
  MEMORY[0x1F4188790](v57);
  uint64_t v53 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout>);
  MEMORY[0x1F4188790](v59);
  uint64_t v60 = (uint64_t)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63._object = &type metadata for SymbolImageDescribers.Captions;
  v64._uint64_t countAndFlagsBits = (uint64_t)&protocol witness table for SymbolImageDescribers.Captions;
  LOBYTE(v62._countAndFlagsBits) = (a1 & 1) == 0;
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v62, (uint64_t)&type metadata for SymbolImageDescribers.Captions);
  __n128 v21 = MEMORY[0x1F4188790](v20);
  int v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v24 + 16))(v23, v21);
  specialized Image.init(describer:)((uint64_t)v23, (uint64_t)&type metadata for SymbolImageDescribers.Captions, (uint64_t)&protocol witness table for SymbolImageDescribers.Captions);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v62);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4F3EBF8], v9);
  Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v25 = type metadata accessor for SymbolRenderingMode();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v25);
  uint64_t v26 = Image.symbolRenderingMode(_:)();
  swift_release();
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v8, &demangling cache variable for type metadata for SymbolRenderingMode?);
  uint64_t v27 = static Color.white.getter();
  uint64_t v29 = v50;
  uint64_t v28 = v51;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v50, *MEMORY[0x1E4F3EC70], v51);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = v52;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v52 + *(int *)(v54 + 36), v29, v28);
  *uint64_t v31 = KeyPath;
  outlined init with copy of FeatureEligibility?((uint64_t)v31, (uint64_t)v14 + *(int *)(v49 + 36), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  *uint64_t v14 = v26;
  v14[1] = v27;
  swift_retain();
  swift_retain();
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v31, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v29, v28);
  swift_release();
  swift_release();
  id v32 = objc_msgSend(self, sel_conversationKit);
  v65._object = (void *)0xE000000000000000;
  v33._object = (void *)0x80000001C37BEF30;
  v33._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v34.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v34.value._object = (void *)0xEF74694B6E6F6974;
  v35._uint64_t countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v65._uint64_t countAndFlagsBits = 0;
  Swift::String v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v65);

  Swift::String v62 = v36;
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v37 = (uint64_t)v55;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
  uint64_t v38 = static Font.largeTitle.getter();
  uint64_t v39 = swift_getKeyPath();
  uint64_t v40 = v56;
  outlined init with copy of FeatureEligibility?(v37, v56, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>);
  uint64_t v41 = (uint64_t *)(v40 + *(int *)(v58 + 44));
  *uint64_t v41 = v39;
  v41[1] = v38;
  uint64_t v42 = (uint64_t)v53;
  outlined destroy of Environment<RedactionReasons>.Content(v37, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>);
  uint64_t v43 = static Color.black.getter();
  outlined init with copy of FeatureEligibility?(v40, v42, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>);
  char v44 = (uint64_t *)(v42 + *(int *)(v57 + 44));
  *char v44 = v43;
  v44[1] = 0x4034000000000000;
  v44[2] = 0;
  v44[3] = 0;
  outlined destroy of Environment<RedactionReasons>.Content(v40, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>);
  if (one-time initialization token for sizeToggleButtonSize != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v45 = v60;
  outlined init with copy of FeatureEligibility?(v42, v60, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>);
  uint64_t v46 = (Swift::String *)(v45 + *(int *)(v59 + 36));
  Swift::String v47 = v63;
  *uint64_t v46 = v62;
  v46[1] = v47;
  v46[2] = v64;
  outlined destroy of Environment<RedactionReasons>.Content(v42, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>);
  return outlined init with take of Any?(v45, v61, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout>);
}

uint64_t partial apply for closure #1 in CaptionsSizeToggleButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in CaptionsSizeToggleButton.body.getter(*(unsigned char *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_6_6(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>();
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
    lazy protocol witness table accessor for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Image.Scale> and conformance _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _ForegroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_6_6(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t protocol witness for View.body.getter in conformance CaptionsSizeToggleButton@<X0>(uint64_t a1@<X8>)
{
  return CaptionsSizeToggleButton.body.getter(a1);
}

double GroupIconView.body.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v5 = type metadata accessor for Participant(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v50 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v50 - v13;
  uint64_t v15 = type metadata accessor for Image.ResizingMode();
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v16 + 104))(v19, *MEMORY[0x1E4F3EBF8], v15, v17);
    swift_retain();
    uint64_t v20 = Image.resizable(capInsets:resizingMode:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v59 = v20;
    uint64_t v60 = v71;
    uint64_t v61 = v72;
    uint64_t v62 = v73;
    uint64_t v63 = v74;
    long long v64 = v75;
    char v65 = 0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<GroupIconView.GroupImage, _FrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<GroupIconView.GroupImage, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    swift_release();
    goto LABEL_21;
  }
  uint64_t v57 = v11;
  uint64_t v58 = v8;
  uint64_t v53 = v5;
  uint64_t v21 = v52;
  uint64_t v22 = *(void *)(v52 + 16);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if (!v22) {
    goto LABEL_20;
  }
  uint64_t v51 = a3;
  uint64_t v59 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v24 = v6;
  uint64_t v25 = v21 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v56 = *(void *)(v24 + 72);
  uint64_t v26 = v53;
  uint64_t v27 = (uint64_t)v58;
  do
  {
    outlined init with copy of TranscriptLabel(v25, (uint64_t)v14, (void (*)(void))type metadata accessor for Participant);
    uint64_t v28 = *(void **)&v14[*(int *)(v26 + 28)];
    if (!v28) {
      goto LABEL_13;
    }
    id v29 = v28;
    outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v29);
    if (!v30)
    {

LABEL_13:
      outlined init with copy of TranscriptLabel((uint64_t)v14, v27, (void (*)(void))type metadata accessor for Participant);
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:)();
      uint64_t v41 = v66;
      id v42 = (id)v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v27 = (uint64_t)v58;
      swift_release();
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      goto LABEL_14;
    }
    if ((objc_msgSend(v29, sel_shouldHideContact) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    uint64_t v31 = type metadata accessor for PersonNameComponents();
    uint64_t v55 = &v50;
    uint64_t v54 = v31;
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x1F4188790](v31);
    Swift::String_optional v34 = (char *)&v50 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_bridgeObjectRetain();
    PersonNameComponents.init()();
    PersonNameComponents.givenName.setter();
    PersonNameComponents.familyName.setter();
    if (one-time initialization token for initials != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v35 = (id)static NSPersonNameComponentsFormatter.initials;
    Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    id v37 = objc_msgSend(v35, sel_stringFromPersonNameComponents_, isa);

    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = v39;

    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v54);
    *(void *)&long long v66 = v38;
    *((void *)&v66 + 1) = v40;
    lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.localizedUppercase.getter();

    swift_bridgeObjectRelease();
    uint64_t v41 = 0;
    uint64_t v26 = v53;
    uint64_t v27 = (uint64_t)v58;
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v43 = (uint64_t)v57;
    outlined init with copy of TranscriptLabel((uint64_t)v14, (uint64_t)v57, (void (*)(void))type metadata accessor for Participant);
    if (!v41)
    {
      uint64_t v44 = *(void *)(v43 + *(int *)(v26 + 28));
      if (v44) {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BA40]), sel__initWithHandle_, v44);
      }
      else {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B8F8]), sel_init);
      }
    }
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    v25 += v56;
    --v22;
  }
  while (v22);
  uint64_t v23 = v59;
  swift_bridgeObjectRelease();
  a3 = v51;
LABEL_20:
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v59 = v23;
  uint64_t v60 = v71;
  uint64_t v61 = v72;
  uint64_t v62 = v73;
  uint64_t v63 = v74;
  long long v64 = v75;
  char v65 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<GroupIconView.GroupImage, _FrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type ModifiedContent<GroupIconView.GroupImage, _FrameLayout> and conformance <> ModifiedContent<A, B>();
  _ConditionalContent<>.init(storage:)();
LABEL_21:
  double result = *(double *)&v66;
  long long v46 = v67;
  long long v47 = v68;
  uint64_t v48 = v69;
  char v49 = v70;
  *(_OWORD *)a3 = v66;
  *(_OWORD *)(a3 + 16) = v46;
  *(_OWORD *)(a3 + 32) = v47;
  *(void *)(a3 + 48) = v48;
  *(unsigned char *)(a3 + 56) = v49;
  return result;
}

id GroupIconView.GroupImage.makeUIViewController(context:)()
{
  id v0 = objc_msgSend(self, sel_defaultSettings);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BB40]), sel_initWithSettings_, v0);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, sel_setContacts_, isa);

  return v1;
}

void GroupIconView.GroupImage.updateUIViewController(_:context:)(void *a1)
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, sel_setContacts_, isa);
}

id protocol witness for UIViewControllerRepresentable.makeUIViewController(context:) in conformance GroupIconView.GroupImage()
{
  return GroupIconView.GroupImage.makeUIViewController(context:)();
}

void protocol witness for UIViewControllerRepresentable.updateUIViewController(_:context:) in conformance GroupIconView.GroupImage(void *a1)
{
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance GroupIconView.GroupImage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage();
  return MEMORY[0x1F40FAB70](a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance GroupIconView.GroupImage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage();
  return MEMORY[0x1F40FAB28](a1, a2, a3, v6);
}

void protocol witness for View.body.getter in conformance GroupIconView.GroupImage()
{
}

double protocol witness for View.body.getter in conformance GroupIconView@<D0>(uint64_t a1@<X8>)
{
  return GroupIconView.body.getter(*v1, v1[1], a1);
}

uint64_t CaptionHeader.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>);
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v6 = static VerticalAlignment.top.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>);
  closure #1 in CaptionHeader.body.getter(v2, (uint64_t)&v6[*(int *)(v14 + 44)]);
  static Alignment.topLeading.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v6, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>);
  id v15 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v15, sel_lineHeight);

  static Alignment.top.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>);
  uint64_t v16 = &v13[*(int *)(v11 + 44)];
  long long v17 = v22[1];
  *(_OWORD *)uint64_t v16 = v22[0];
  *((_OWORD *)v16 + 1) = v17;
  *((_OWORD *)v16 + 2) = v22[2];
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>);
  uint64_t v18 = static Color.primary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  outlined init with copy of FeatureEligibility?((uint64_t)v13, a1, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>);
  uint64_t v20 = (uint64_t *)(a1
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>)
                           + 36));
  *uint64_t v20 = KeyPath;
  v20[1] = v18;
  return outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>);
}

uint64_t closure #1 in CaptionHeader.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v3 = type metadata accessor for Font.Leading();
  uint64_t v69 = *(void *)(v3 - 8);
  uint64_t v70 = v3;
  MEMORY[0x1F4188790](v3);
  long long v67 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RedactionReasons();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v64 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  long long v17 = (char *)&v64 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v68 = (uint64_t)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v64 - v21;
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v23 = 1;
  }
  else
  {
    char v65 = v14;
    uint64_t v66 = v12;
    type metadata accessor for CaptionHeader(0);
    specialized Environment.wrappedValue.getter();
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons);
    dispatch thunk of SetAlgebra.init()();
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons);
    char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    v25(v8, v5);
    v25(v11, v5);
    if (v24)
    {
      uint64_t v26 = *(void *)(a1 + 16);
      swift_retain();
    }
    else
    {
      uint64_t v26 = Image.init(systemName:)();
    }
    uint64_t v27 = *(void *)(a1 + 24);
    uint64_t v28 = *(void *)(a1 + 40);
    swift_bridgeObjectRetain();
    unsigned int v29 = static Edge.Set.trailing.getter();
    int v30 = MEMORY[0x1C8771D90](0);
    int v31 = MEMORY[0x1C8771D90]();
    unsigned __int8 v32 = MEMORY[0x1C8771D90](v31 & v29);
    uint64_t v33 = (uint64_t)v65;
    if (v32 != v29) {
      LOBYTE(v3ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = MEMORY[0x1C8771D90](v30 | v29);
    }
    EdgeInsets.init(_all:)();
    uint64_t v72 = v26;
    uint64_t v73 = v27;
    uint64_t v74 = v28;
    char v75 = v30;
    uint64_t v76 = v34;
    uint64_t v77 = v35;
    uint64_t v78 = v36;
    uint64_t v79 = v37;
    char v80 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<GroupIconView, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<GroupIconView, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    View.accessibilityHidden(_:)();
    swift_bridgeObjectRelease();
    swift_release();
    outlined init with take of Any?(v33, (uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>);
    outlined init with take of Any?((uint64_t)v17, (uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>);
    uint64_t v23 = 0;
    uint64_t v12 = v66;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v22, v23, 1, v12);
  uint64_t v38 = *(void *)(a1 + 8);
  uint64_t v72 = *(void *)a1;
  uint64_t v73 = v38;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v39 = Text.init<A>(_:)();
  uint64_t v41 = v40;
  char v43 = v42 & 1;
  static Color.secondary.getter();
  uint64_t v44 = Text.foregroundColor(_:)();
  uint64_t v46 = v45;
  char v48 = v47;
  swift_release();
  char v49 = v48 & 1;
  outlined consume of Text.Storage(v39, v41, v43);
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  uint64_t v51 = v69;
  uint64_t v50 = v70;
  uint64_t v52 = v67;
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v67, *MEMORY[0x1E4F3E0F8], v70);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v50);
  uint64_t v53 = Text.font(_:)();
  uint64_t v55 = v54;
  char v57 = v56;
  uint64_t v59 = v58;
  swift_release();
  v57 &= 1u;
  outlined consume of Text.Storage(v44, v46, v49);
  swift_bridgeObjectRelease();
  uint64_t v60 = v68;
  outlined init with copy of FeatureEligibility?((uint64_t)v22, v68, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?);
  uint64_t v61 = v71;
  outlined init with copy of FeatureEligibility?(v60, v71, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?);
  uint64_t v62 = v61
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text))
               + 48);
  *(void *)uint64_t v62 = v53;
  *(void *)(v62 + 8) = v55;
  *(unsigned char *)(v62 + 16) = v57;
  *(void *)(v62 + 24) = v59;
  outlined copy of Text.Storage(v53, v55, v57);
  swift_bridgeObjectRetain();
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?);
  outlined consume of Text.Storage(v53, v55, v57);
  swift_bridgeObjectRelease();
  return outlined destroy of Environment<RedactionReasons>.Content(v60, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?);
}

uint64_t *HeightKey.defaultValue.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultValue != -1) {
    swift_once();
  }
  return &static HeightKey.defaultValue;
}

double protocol witness for static PreferenceKey.defaultValue.getter in conformance HeightKey@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = HeightKey.defaultValue.unsafeMutableAddressor();
  double result = *(double *)v2;
  *a1 = *v2;
  return result;
}

double protocol witness for static PreferenceKey.reduce(value:nextValue:) in conformance HeightKey(uint64_t a1)
{
  return TPNumberPadCharacter.rawValue.getter(a1);
}

uint64_t CaptionRow.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v80 = a1;
  uint64_t v75 = type metadata accessor for CaptionRow(0);
  uint64_t v78 = *(void *)(v75 - 8);
  uint64_t v3 = *(void *)(v78 + 64);
  MEMORY[0x1F4188790](v75);
  uint64_t v79 = (uint64_t)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptLabel(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<TranscriptLabel, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>);
  MEMORY[0x1F4188790](v76);
  uint64_t v77 = (uint64_t)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v65 - v18;
  uint64_t v20 = type metadata accessor for CaptionSectioner.Caption(0);
  if (*(unsigned char *)(v2 + *(int *)(v20 + 40)) == 1)
  {
    *(void *)uint64_t v13 = static VerticalAlignment.center.getter();
    *((void *)v13 + 1) = 0;
    v13[16] = 1;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>);
    closure #1 in CaptionRow.body.getter((uint64_t)&v13[*(int *)(v21 + 44)]);
    unsigned int v22 = static Edge.Set.top.getter();
    unsigned int v23 = static Edge.Set.bottom.getter();
    uint64_t v24 = MEMORY[0x1C8771D90](0);
    int v25 = MEMORY[0x1C8771D90]();
    if (MEMORY[0x1C8771D90](v25 & v22) != v22) {
      uint64_t v24 = MEMORY[0x1C8771D90](v24 | v22);
    }
    int v26 = MEMORY[0x1C8771D90](v24);
    if (MEMORY[0x1C8771D90](v26 & v23) != v23) {
      LOBYTE(v24) = MEMORY[0x1C8771D90](v24 | v23);
    }
    outlined init with copy of FeatureEligibility?((uint64_t)v13, (uint64_t)v16, &demangling cache variable for type metadata for HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>);
    uint64_t v27 = &v16[*(int *)(v14 + 36)];
    *uint64_t v27 = v24;
    *(_OWORD *)(v27 + 8) = 0u;
    *(_OWORD *)(v27 + 24) = 0u;
    v27[40] = 1;
    outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v13, &demangling cache variable for type metadata for HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>);
    outlined init with take of Any?((uint64_t)v16, (uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>>.Storage);
    MEMORY[0x1F4188790](v28);
    outlined init with copy of FeatureEligibility?((uint64_t)v19, (uint64_t)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>);
    lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    return outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>);
  }
  else
  {
    uint64_t v31 = v20;
    uint64_t v72 = v3;
    uint64_t v74 = v14;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>);
    uint64_t v73 = &v65;
    uint64_t v71 = v32;
    MEMORY[0x1F4188790](v32);
    uint64_t v70 = (uint64_t)&v65 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v69 = &v65;
    MEMORY[0x1F4188790](v34);
    uint64_t v68 = (uint64_t)&v65 - v35;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>);
    long long v67 = &v65;
    uint64_t v66 = v36;
    MEMORY[0x1F4188790](v36);
    uint64_t v38 = (char *)&v65 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v39 = (void *)(v2 + *(int *)(v31 + 36));
    uint64_t v40 = *(void *)(v2 + *(int *)(v31 + 44));
    uint64_t v41 = v39[1];
    *uint64_t v6 = *v39;
    v6[1] = v41;
    _OWORD v6[2] = v40;
    char v42 = (void *)((char *)v6 + *(int *)(v4 + 24));
    *char v42 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)v6 + *(int *)(v4 + 28)) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v43 = static Alignment.leading.getter();
    char v64 = 1;
    char v63 = 1;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v63, 0, v64, v43, v44);
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    uint64_t v45 = (uint64_t *)(v2 + *(int *)(v75 + 24));
    uint64_t v46 = *v45;
    uint64_t v47 = v45[1];
    __src[0] = v46;
    __src[1] = v47;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
    State.wrappedValue.getter();
    uint64_t v48 = v2;
    uint64_t v49 = (uint64_t)v9;
    static Alignment.top.getter();
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    uint64_t v50 = (uint64_t)v9;
    uint64_t v51 = v77;
    outlined init with copy of FeatureEligibility?(v50, v77, &demangling cache variable for type metadata for ModifiedContent<TranscriptLabel, _FlexFrameLayout>);
    memcpy((void *)(v51 + *(int *)(v76 + 36)), __src, 0x70uLL);
    outlined destroy of Environment<RedactionReasons>.Content(v49, &demangling cache variable for type metadata for ModifiedContent<TranscriptLabel, _FlexFrameLayout>);
    uint64_t v76 = static Anchor.Source<A>.bounds.getter();
    uint64_t v52 = v79;
    outlined init with copy of TranscriptLabel(v48, v79, (void (*)(void))type metadata accessor for CaptionRow);
    uint64_t v53 = *(unsigned __int8 *)(v78 + 80);
    uint64_t v78 = v48;
    uint64_t v54 = (v53 + 16) & ~v53;
    uint64_t v55 = swift_allocObject();
    outlined init with take of TranscriptLabel(v52, v55 + v54, (void (*)(void))type metadata accessor for CaptionRow);
    outlined init with copy of FeatureEligibility?(v51, (uint64_t)v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>);
    char v56 = (uint64_t *)&v38[*(int *)(v66 + 36)];
    *char v56 = v76;
    v56[1] = (uint64_t)partial apply for closure #2 in CaptionRow.body.getter;
    _OWORD v56[2] = v55;
    outlined destroy of Environment<RedactionReasons>.Content(v51, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>);
    outlined init with copy of TranscriptLabel(v78, v52, (void (*)(void))type metadata accessor for CaptionRow);
    uint64_t v57 = swift_allocObject();
    outlined init with take of TranscriptLabel(v52, v57 + v54, (void (*)(void))type metadata accessor for CaptionRow);
    uint64_t v58 = v68;
    outlined init with copy of FeatureEligibility?((uint64_t)v38, v68, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>);
    uint64_t v59 = (uint64_t (**)())(v58 + *(int *)(v71 + 36));
    *uint64_t v59 = partial apply for closure #3 in CaptionRow.body.getter;
    v59[1] = (uint64_t (*)())v57;
    outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>);
    uint64_t v60 = v70;
    outlined init with take of Any?(v58, v70, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>);
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>>.Storage);
    MEMORY[0x1F4188790](v61);
    outlined init with copy of FeatureEligibility?(v60, (uint64_t)&v65 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    return outlined destroy of Environment<RedactionReasons>.Content(v60, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>);
  }
}

uint64_t closure #1 in CaptionRow.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v79 = a1;
  uint64_t v1 = type metadata accessor for Divider();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v66[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v77 = &v66[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v78 = &v66[-v8];
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t *)&v66[-v10];
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v66[-v12];
  *(void *)uint64_t v13 = static HorizontalAlignment.center.getter();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  uint64_t v14 = *(int *)(v72 + 44);
  uint64_t v75 = v13;
  uint64_t v15 = &v13[v14];
  Divider.init()();
  if (one-time initialization token for divider != -1) {
    swift_once();
  }
  uint64_t v16 = static Colors.Captions.divider;
  swift_retain();
  char v17 = static Edge.Set.all.getter();
  uint64_t v70 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16);
  uint64_t v71 = v2 + 16;
  v70(v15, v4, v1);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Divider, _BackgroundStyleModifier<Color>>);
  uint64_t v18 = &v15[*(int *)(v68 + 36)];
  *(void *)uint64_t v18 = v16;
  v18[8] = v17;
  uint64_t v69 = *(void (**)(unsigned char *, uint64_t))(v2 + 8);
  v69(v4, v1);
  id v19 = objc_msgSend(self, sel_conversationKit);
  v81._object = (void *)0xE000000000000000;
  v20._object = (void *)0x80000001C37BEF90;
  v20._uint64_t countAndFlagsBits = 0xD000000000000016;
  v21.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v21.value._object = (void *)0xEF74694B6E6F6974;
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v81._uint64_t countAndFlagsBits = 0;
  Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v81);

  Swift::String v80 = v23;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v24 = Text.init<A>(_:)();
  uint64_t v26 = v25;
  char v28 = v27;
  char v29 = static Platform.current.getter();
  uint64_t v73 = v2 + 8;
  uint64_t v74 = v1;
  if (v29 == 2) {
    static Font.headline.getter();
  }
  else {
    static Font.caption.getter();
  }
  uint64_t v30 = Text.font(_:)();
  uint64_t v32 = v31;
  char v34 = v33;
  swift_release();
  outlined consume of Text.Storage(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v35 = Text.foregroundColor(_:)();
  uint64_t v37 = v36;
  char v39 = v38;
  uint64_t v41 = v40;
  swift_release();
  outlined consume of Text.Storage(v30, v32, v34 & 1);
  swift_bridgeObjectRelease();
  if (one-time initialization token for bubblePadding != -1) {
    swift_once();
  }
  char v42 = v39 & 1;
  swift_beginAccess();
  int v67 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = static HorizontalAlignment.center.getter();
  uint64_t v52 = (uint64_t)v76;
  uint64_t *v76 = v51;
  *(void *)(v52 + 8) = 0;
  *(unsigned char *)(v52 + 16) = 1;
  uint64_t v53 = v52 + *(int *)(v72 + 44);
  Divider.init()();
  uint64_t v54 = static Colors.Captions.divider;
  swift_retain();
  char v55 = static Edge.Set.all.getter();
  uint64_t v56 = v74;
  v70((unsigned char *)v53, v4, v74);
  uint64_t v57 = v69;
  uint64_t v58 = v53 + *(int *)(v68 + 36);
  *(void *)uint64_t v58 = v54;
  *(unsigned char *)(v58 + 8) = v55;
  v57(v4, v56);
  uint64_t v59 = (uint64_t)v75;
  uint64_t v60 = v78;
  outlined init with copy of FeatureEligibility?((uint64_t)v75, (uint64_t)v78, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  uint64_t v61 = v77;
  outlined init with copy of FeatureEligibility?(v52, (uint64_t)v77, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  uint64_t v62 = v79;
  outlined init with copy of FeatureEligibility?((uint64_t)v60, v79, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>));
  uint64_t v64 = v62 + *(int *)(v63 + 48);
  *(void *)uint64_t v64 = v35;
  *(void *)(v64 + 8) = v37;
  *(unsigned char *)(v64 + 16) = v42;
  *(void *)(v64 + 24) = v41;
  *(unsigned char *)(v64 + 32) = v67;
  *(void *)(v64 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v44;
  *(void *)(v64 + 48) = v46;
  *(void *)(v64 + 56) = v48;
  *(void *)(v64 + 64) = v50;
  *(unsigned char *)(v64 + 72) = 0;
  *(void *)(v64 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0x3FF0000000000000;
  outlined init with copy of FeatureEligibility?((uint64_t)v61, v62 + *(int *)(v63 + 64), &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  outlined copy of Text.Storage(v35, v37, v42);
  swift_bridgeObjectRetain();
  outlined destroy of Environment<RedactionReasons>.Content(v52, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  outlined destroy of Environment<RedactionReasons>.Content(v59, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v61, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  outlined consume of Text.Storage(v35, v37, v42);
  swift_bridgeObjectRelease();
  return outlined destroy of Environment<RedactionReasons>.Content((uint64_t)v60, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
}

uint64_t TranscriptLabel.init(text:lowConfidenceRanges:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  uint64_t v5 = type metadata accessor for TranscriptLabel(0);
  uint64_t v6 = (void *)((char *)a4 + *(int *)(v5 + 24));
  *uint64_t v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *((unsigned char *)a4 + *(int *)(v5 + 28)) = 0;
  return result;
}

void closure #2 in CaptionRow.body.getter(CGFloat *a1@<X8>)
{
  type metadata accessor for CaptionRow(0);
  type metadata accessor for CGRect(0);
  GeometryProxy.subscript.getter();
  *a1 = CGRectGetHeight(v2);
}

uint64_t closure #3 in CaptionRow.body.getter()
{
  return State.wrappedValue.setter();
}

uint64_t TranscriptLabel.text.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptLabel.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *CGRect v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TranscriptLabel.text.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptLabel.lowConfidenceRanges.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptLabel.lowConfidenceRanges.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*TranscriptLabel.lowConfidenceRanges.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void TranscriptLabel.body.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v50 = v3;
  uint64_t v4 = type metadata accessor for TranscriptLabel(0);
  uint64_t v5 = OUTLINED_FUNCTION_1(v4);
  uint64_t v47 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v48 = v7;
  uint64_t v49 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<Canvas<EmptyView>?>);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_21();
  uint64_t v11 = v10 - v9;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_21();
  uint64_t v15 = v14 - v13;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>>);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_5_1();
  uint64_t v17 = type metadata accessor for AttributedString();
  MEMORY[0x1F4188790](v17 - 8);
  OUTLINED_FUNCTION_16_0();
  uint64_t v18 = v0;
  TranscriptLabel.attributedString.getter(v1);
  uint64_t v19 = Text.init(_:)();
  uint64_t v41 = v20;
  uint64_t v42 = v19;
  int v40 = v21;
  uint64_t v43 = v22;
  uint64_t KeyPath = swift_getKeyPath();
  if (static Platform.current.getter() == 2) {
    uint64_t v24 = static Font.headline.getter();
  }
  else {
    uint64_t v24 = static Font.body.getter();
  }
  uint64_t v25 = v24;
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = static Alignment.center.getter();
  uint64_t v29 = v28;
  closure #1 in TranscriptLabel.body.getter(v18, v11);
  uint64_t v30 = (uint64_t *)(v11 + *(int *)(v45 + 36));
  *uint64_t v30 = v27;
  v30[1] = v29;
  outlined init with copy of FeatureEligibility?(v11, v15 + *(int *)(v44 + 36), &demangling cache variable for type metadata for _BackgroundModifier<Canvas<EmptyView>?>);
  uint64_t v31 = v41;
  *(void *)uint64_t v15 = v42;
  *(void *)(v15 + 8) = v31;
  *(unsigned char *)(v15 + 16) = v40 & 1;
  *(void *)(v15 + 24) = v43;
  *(void *)(v15 + 32) = KeyPath;
  *(void *)(v15 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0;
  *(unsigned char *)(v15 + 48) = 1;
  *(void *)(v15 + 56) = v26;
  *(void *)(v15 + 64) = v25;
  outlined destroy of Environment<RedactionReasons>.Content(v11, &demangling cache variable for type metadata for _BackgroundModifier<Canvas<EmptyView>?>);
  uint64_t v32 = static Alignment.center.getter();
  char v34 = v33;
  uint64_t v35 = v49;
  outlined init with copy of TranscriptLabel(v18, v49, (void (*)(void))type metadata accessor for TranscriptLabel);
  unint64_t v36 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v37 = swift_allocObject();
  outlined init with take of TranscriptLabel(v35, v37 + v36, (void (*)(void))type metadata accessor for TranscriptLabel);
  outlined init with copy of FeatureEligibility?(v15, v2, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>);
  char v38 = (uint64_t (**)())(v2 + *(int *)(v46 + 36));
  *char v38 = partial apply for closure #1 in closure #2 in TranscriptLabel.body.getter;
  v38[1] = (uint64_t (*)())v37;
  void v38[2] = (uint64_t (*)())v32;
  uint64_t v38[3] = v34;
  outlined destroy of Environment<RedactionReasons>.Content(v15, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>);
  outlined init with take of Any?(v2, v50, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>>);
  OUTLINED_FUNCTION_28();
}

void TranscriptLabel.attributedString.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RedactionReasons();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v90 - v9;
  uint64_t v11 = type metadata accessor for AttributeContainer();
  MEMORY[0x1F4188790](v11 - 8);
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t v92 = type metadata accessor for AttributedString.CharacterView();
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v13 = (char *)v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AttributedString.characters.getter();
  type metadata accessor for TranscriptLabel(0);
  specialized Environment.wrappedValue.getter();
  _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons);
  dispatch thunk of SetAlgebra.init()();
  _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons);
  char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v7, v4);
  v15(v10, v4);
  if ((v14 & 1) != 0 && (uint64_t v16 = *(void *)(v2 + 16), (v17 = *(void *)(v16 + 16)) != 0))
  {
    uint64_t v114 = a1;
    uint64_t v18 = type metadata accessor for AttributedString.Index();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v94 = *(void *)(v19 + 64);
    uint64_t v112 = (void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v113 = (void (**)(char *, char *, uint64_t, __n128))(v19 + 16);
    uint64_t v118 = (char **)(v19 + 8);
    uint64_t v20 = swift_bridgeObjectRetain();
    v90[1] = v16;
    int v21 = (uint64_t *)(v16 + 40);
    uint64_t v93 = v13;
    uint64_t v121 = v18;
    while (1)
    {
      uint64_t v111 = v90;
      uint64_t v22 = *(v21 - 1);
      uint64_t v119 = *v21;
      uint64_t v120 = v21;
      uint64_t v23 = v94;
      MEMORY[0x1F4188790](v20);
      unint64_t v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v25 = (char *)v90 - v24;
      uint64_t v26 = AttributedString.CharacterView.startIndex.getter();
      uint64_t v110 = v90;
      MEMORY[0x1F4188790](v26);
      uint64_t v27 = AttributedString.CharacterView._index(_:offsetBy:)();
      MEMORY[0x1F4188790](v27);
      uint64_t v29 = (char *)v90 - v24;
      if (__OFADD__(v22, v119)) {
        break;
      }
      uint64_t v106 = v28;
      AttributedString.CharacterView._index(_:offsetBy:)();
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Range<AttributedString.Index>);
      uint64_t v109 = v90;
      MEMORY[0x1F4188790](v30);
      uint64_t v117 = v31;
      unint64_t v32 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v107 = (void *)((char *)v90 - v32);
      unint64_t v108 = lazy protocol witness table accessor for type AttributedString.Index and conformance AttributedString.Index((uint64_t)&lazy protocol witness table cache variable for type AttributedString.Index and conformance AttributedString.Index);
      uint64_t v33 = dispatch thunk of static Comparable.<= infix(_:_:)();
      if ((v33 & 1) == 0) {
        goto LABEL_13;
      }
      char v34 = (char *)v90 - v24;
      uint64_t v98 = v25;
      uint64_t v99 = v17;
      uint64_t v105 = v90;
      MEMORY[0x1F4188790](v33);
      uint64_t v103 = (char *)v90 - v32;
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (lower: AttributedString.Index, upper: AttributedString.Index));
      uint64_t v104 = (char *)v90;
      uint64_t v36 = *(void *)(*(void *)(v35 - 8) + 64);
      __n128 v37 = MEMORY[0x1F4188790](v35);
      uint64_t v119 = v30;
      char v38 = (char *)v90 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
      unint64_t v101 = (v36 + 15) & 0xFFFFFFFFFFFFFFF0;
      int v40 = &v38[*(int *)(v39 + 48)];
      uint64_t v41 = *v113;
      (*v113)(v38, v34, v18, v37);
      uint64_t v102 = v40;
      uint64_t v116 = v29;
      uint64_t v42 = ((uint64_t (*)(char *, char *, uint64_t))v41)(v40, v29, v18);
      uint64_t v115 = v34;
      uint64_t v100 = v90;
      __n128 v43 = MEMORY[0x1F4188790](v42);
      uint64_t v44 = &v38[*(int *)(v35 + 48)];
      v41(v38, v38, v18, v43);
      int v95 = v41;
      ((void (*)(char *, char *, uint64_t))v41)(v44, v40, v18);
      uint64_t v45 = *v112;
      uint64_t v46 = (uint64_t)v103;
      (*v112)(v103, v38, v121);
      uint64_t v47 = *v118;
      uint64_t v48 = ((uint64_t (*)(char *, uint64_t))*v118)(v44, v121);
      uint64_t v100 = v90;
      uint64_t v97 = v36;
      __n128 v49 = MEMORY[0x1F4188790](v48);
      uint64_t v50 = (char *)v90 - v101;
      unint64_t v101 = v35;
      uint64_t v51 = &v50[*(int *)(v35 + 48)];
      ((void (*)(char *, char *, uint64_t, __n128))v45)(v50, v38, v121, v49);
      v45(v51, v102, v121);
      uint64_t v52 = v46 + *(int *)(v119 + 36);
      uint64_t v96 = v45;
      v45((char *)v52, v51, v121);
      uint64_t v53 = v121;
      uint64_t v102 = v47;
      ((void (*)(char *, uint64_t))v47)(v50, v121);
      uint64_t v54 = (uint64_t)v107;
      outlined init with take of Any?(v46, (uint64_t)v107, &demangling cache variable for type metadata for Range<AttributedString.Index>);
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x1F4188790](KeyPath);
      v90[-2] = v56;
      swift_getKeyPath();
      if (one-time initialization token for lowConfidenceTermUnderline != -1) {
        swift_once();
      }
      uint64_t v122 = static Colors.Captions.lowConfidenceTermUnderline;
      id v57 = (id)static Colors.Captions.lowConfidenceTermUnderline;
      unint64_t v58 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Range<AttributedString.Index> and conformance Range<A>);
      uint64_t v59 = (void (*)(char *, void))AttributedString.subscript.modify();
      lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.UnderlineColorAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineColorAttribute();
      AttributedSubstring.subscript.setter();
      v59(v124, 0);
      uint64_t v60 = outlined destroy of Environment<RedactionReasons>.Content(v54, &demangling cache variable for type metadata for Range<AttributedString.Index>);
      uint64_t v61 = v117;
      MEMORY[0x1F4188790](v60);
      unint64_t v62 = ((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v64 = v115;
      uint64_t v63 = v116;
      uint64_t v65 = dispatch thunk of static Comparable.<= infix(_:_:)();
      if ((v65 & 1) == 0) {
        goto LABEL_14;
      }
      uint64_t v109 = v90;
      v120 += 2;
      MEMORY[0x1F4188790](v65);
      uint64_t v104 = (char *)v90 - v62;
      uint64_t v107 = v90;
      uint64_t v66 = v97;
      __n128 v68 = MEMORY[0x1F4188790](v67);
      uint64_t v69 = v64;
      uint64_t v117 = v90;
      uint64_t v70 = v63;
      uint64_t v105 = (void *)((char *)v90 - v62);
      uint64_t v71 = (char *)v90 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
      unint64_t v108 = v58;
      unint64_t v72 = v101;
      uint64_t v73 = &v71[*(int *)(v101 + 48)];
      uint64_t v74 = v95;
      v95(v71, v69, v53, v68);
      uint64_t v75 = ((uint64_t (*)(char *, char *, uint64_t))v74)(v73, v70, v53);
      uint64_t v103 = (char *)v90;
      __n128 v76 = MEMORY[0x1F4188790](v75);
      uint64_t v77 = &v71[*(int *)(v72 + 48)];
      v74(v71, v71, v53, v76);
      ((void (*)(char *, char *, uint64_t))v74)(v77, v73, v53);
      uint64_t v78 = (uint64_t)v104;
      uint64_t v79 = v53;
      Swift::String v80 = v96;
      v96(v104, v71, v79);
      Swift::String v81 = v77;
      uint64_t v82 = v102;
      uint64_t v83 = ((uint64_t (*)(char *, uint64_t))v102)(v81, v121);
      uint64_t v103 = (char *)v90;
      __n128 v84 = MEMORY[0x1F4188790](v83);
      uint64_t v85 = &v71[*(int *)(v72 + 48)];
      ((void (*)(char *, char *, uint64_t, __n128))v80)(v71, v71, v121, v84);
      v80(v85, v73, v121);
      v80((char *)(v78 + *(int *)(v119 + 36)), v85, v121);
      uint64_t v18 = v121;
      ((void (*)(char *, uint64_t))v82)(v71, v121);
      uint64_t v86 = (uint64_t)v105;
      outlined init with take of Any?(v78, (uint64_t)v105, &demangling cache variable for type metadata for Range<AttributedString.Index>);
      uint64_t v87 = swift_getKeyPath();
      MEMORY[0x1F4188790](v87);
      v90[-2] = v88;
      swift_getKeyPath();
      uint64_t v122 = 257;
      char v123 = 0;
      uint64_t v89 = (void (*)(char *, void))AttributedString.subscript.modify();
      lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.UnderlineStyleAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineStyleAttribute();
      AttributedSubstring.subscript.setter();
      v89(v124, 0);
      outlined destroy of Environment<RedactionReasons>.Content(v86, &demangling cache variable for type metadata for Range<AttributedString.Index>);
      ((void (*)(char *, uint64_t))v82)(v116, v18);
      ((void (*)(char *, uint64_t))v82)(v115, v18);
      uint64_t v20 = ((uint64_t (*)(char *, uint64_t))v82)(v98, v18);
      int v21 = v120;
      uint64_t v17 = v99 - 1;
      uint64_t v13 = v93;
      if (v99 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    (*(void (**)(char *, uint64_t))(v91 + 8))(v13, v92);
  }
}

uint64_t closure #1 in TranscriptLabel.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ColorRenderingMode();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TranscriptLabel(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  if (*(unsigned char *)(a1 + *(int *)(v11 + 36)) == 1)
  {
    outlined init with copy of TranscriptLabel(a1, (uint64_t)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for TranscriptLabel);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = swift_allocObject();
    outlined init with take of TranscriptLabel((uint64_t)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, (void (*)(void))type metadata accessor for TranscriptLabel);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F3D408], v4);
    Canvas<>.init(opaque:colorMode:rendersAsynchronously:renderer:)();
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Canvas<EmptyView>);
    return __swift_storeEnumTagSinglePayload(a2, 0, 1, v14);
  }
  else
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Canvas<EmptyView>);
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v16);
  }
}

uint64_t closure #1 in closure #2 in TranscriptLabel.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void v15[2] = a3;
  uint64_t v5 = type metadata accessor for GeometryProxy();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = type metadata accessor for TranscriptLabel(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  v15[3] = *(void *)(a2 + 16);
  v15[1] = swift_getKeyPath();
  outlined init with copy of TranscriptLabel(a2, (uint64_t)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for TranscriptLabel);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v12 = (v10 + *(unsigned __int8 *)(v6 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = swift_allocObject();
  outlined init with take of TranscriptLabel((uint64_t)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v11, (void (*)(void))type metadata accessor for TranscriptLabel);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [_NSRange]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [_NSRange] and conformance [A]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)> and conformance TupleView<A>);
  return ForEach<>.init(_:id:content:)();
}

uint64_t closure #1 in closure #1 in closure #2 in TranscriptLabel.body.getter@<X0>(Swift::Int *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v105 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x1F4188790](v105);
  uint64_t v103 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for ButtonMenuStyle();
  uint64_t v91 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v88 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<Color, Text>);
  uint64_t v87 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v86 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.menuStyle<A>(_:)>>.0);
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v92 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v93 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>);
  MEMORY[0x1F4188790](v89);
  uint64_t v102 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>);
  MEMORY[0x1F4188790](v99);
  uint64_t v101 = (uint64_t)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>);
  MEMORY[0x1F4188790](v100);
  uint64_t v106 = (uint64_t)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v111 = (uint64_t)&v79 - v15;
  Swift::Int v17 = *a1;
  Swift::Int v16 = a1[1];
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v19 = *a2;
  uint64_t v18 = (void *)a2[1];
  id v20 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  v21._rawValue = (void *)a2[2];
  GeometryProxy.size.getter();
  v22.location = v17;
  v22.length = v16;
  v23._uint64_t countAndFlagsBits = v19;
  v23._object = v18;
  __C::CGRect v121 = TextLayoutEngine.frame(for:text:font:lowConfidenceRanges:viewSize:)(v22, v23, (UIFont)v20, v21, (CGSize)__PAIR128__(v25, v24));
  CGFloat x = v121.origin.x;
  CGFloat y = v121.origin.y;
  CGFloat width = v121.size.width;
  CGFloat height = v121.size.height;

  uint64_t v30 = type metadata accessor for TranscriptLabel(0);
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  CGFloat v38 = 0.0;
  uint64_t KeyPath = 0;
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  if (*((unsigned char *)a2 + *(int *)(v30 + 28)) == 1)
  {
    v122.origin.CGFloat x = x;
    v122.origin.CGFloat y = y;
    v122.size.CGFloat width = width;
    v122.size.CGFloat height = height;
    CGRectGetWidth(v122);
    v123.origin.CGFloat x = x;
    v123.origin.CGFloat y = y;
    v123.size.CGFloat width = width;
    v123.size.CGFloat height = height;
    CGRectGetHeight(v123);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v31 = v112;
    uint64_t v32 = v113;
    uint64_t v33 = v114;
    uint64_t v34 = v115;
    uint64_t v35 = v116;
    uint64_t v36 = v117;
    uint64_t v40 = static Color.blue.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v37 = *(void *)&x;
    CGFloat v38 = y;
    uint64_t v41 = 0x3FB999999999999ALL;
  }
  uint64_t v107 = v40;
  uint64_t v108 = v34;
  uint64_t v81 = v36;
  uint64_t v109 = KeyPath;
  uint64_t v82 = v41;
  uint64_t v83 = v32;
  uint64_t v84 = v33;
  uint64_t v85 = *(void *)&v38;
  uint64_t v110 = v37;
  uint64_t v42 = v86;
  Menu.init(content:label:)();
  __n128 v43 = v88;
  ButtonMenuStyle.init()();
  unint64_t v44 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Menu<Color, Text> and conformance Menu<A, B>);
  unint64_t v45 = _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type ButtonMenuStyle and conformance ButtonMenuStyle);
  uint64_t v46 = v92;
  uint64_t v47 = v90;
  uint64_t v48 = v35;
  uint64_t v80 = v35;
  uint64_t v49 = v94;
  View.menuStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v43, v49);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v42, v47);
  uint64_t v50 = v103;
  BorderlessButtonStyle.init()();
  *(void *)&long long v118 = v47;
  *((void *)&v118 + 1) = v49;
  *(void *)&long long v119 = v44;
  *((void *)&v119 + 1) = v45;
  swift_getOpaqueTypeConformance2();
  _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type BorderlessButtonStyle and conformance BorderlessButtonStyle);
  uint64_t v51 = v93;
  uint64_t v52 = v96;
  uint64_t v53 = v105;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v50, v53);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v46, v52);
  uint64_t v54 = swift_getKeyPath();
  uint64_t v55 = v97;
  uint64_t v56 = (uint64_t)v102;
  uint64_t v57 = v98;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v102, v51, v98);
  uint64_t v58 = v56 + *(int *)(v89 + 36);
  *(void *)uint64_t v58 = v54;
  *(unsigned char *)(v58 + 8) = 2;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v51, v57);
  v124.origin.CGFloat x = x;
  v124.origin.CGFloat y = y;
  v124.size.CGFloat width = width;
  v124.size.CGFloat height = height;
  CGRectGetWidth(v124);
  v125.origin.CGFloat x = x;
  v125.origin.CGFloat y = y;
  v125.size.CGFloat width = width;
  v125.size.CGFloat height = height;
  CGRectGetHeight(v125);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v59 = v101;
  outlined init with copy of FeatureEligibility?(v56, v101, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>);
  uint64_t v60 = (_OWORD *)(v59 + *(int *)(v99 + 36));
  long long v61 = v119;
  _OWORD *v60 = v118;
  v60[1] = v61;
  void v60[2] = v120;
  outlined destroy of Environment<RedactionReasons>.Content(v56, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>);
  uint64_t v62 = v106;
  outlined init with copy of FeatureEligibility?(v59, v106, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>);
  uint64_t v63 = (CGFloat *)(v62 + *(int *)(v100 + 36));
  *uint64_t v63 = x;
  v63[1] = y;
  outlined destroy of Environment<RedactionReasons>.Content(v59, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>);
  uint64_t v64 = v111;
  outlined init with take of Any?(v62, v111, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>);
  outlined init with copy of FeatureEligibility?(v64, v62, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>);
  uint64_t v79 = v31;
  uint64_t v65 = v83;
  *a3 = v31;
  a3[1] = v65;
  uint64_t v66 = v84;
  uint64_t v67 = v108;
  uint64_t v68 = v109;
  a3[2] = v84;
  a3[3] = v67;
  a3[4] = v48;
  uint64_t v69 = v81;
  uint64_t v70 = v110;
  a3[5] = v81;
  a3[6] = v70;
  uint64_t v71 = v85;
  a3[7] = v85;
  a3[8] = v68;
  uint64_t v72 = v82;
  a3[9] = v107;
  a3[10] = v72;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>));
  outlined init with copy of FeatureEligibility?(v62, (uint64_t)a3 + *(int *)(v73 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>);
  uint64_t v78 = v68;
  uint64_t v74 = v31;
  uint64_t v75 = v108;
  uint64_t v76 = v80;
  outlined copy of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?(v74, v65, v66, v108, v80, v69, v70, v71, v78);
  outlined destroy of Environment<RedactionReasons>.Content(v111, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>);
  outlined destroy of Environment<RedactionReasons>.Content(v62, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>);
  return outlined consume of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?(v79, v65, v66, v75, v76, v69, v110, v71, v109);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #2 in TranscriptLabel.body.getter@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_conversationKit);
  v10._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001C379A2C0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000025;
  v4.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v10);

  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8 & 1;
  *(void *)(a1 + 24) = v9;
  return result;
}

void key path getter for AttributeDynamicLookup.subscript<A>(dynamicMember:) : AttributeDynamicLookupAttributeScopes.UIKitAttributes.UnderlineColorAttribute()
{
}

void key path getter for AttributeDynamicLookup.subscript<A>(dynamicMember:) : AttributeDynamicLookupAttributeScopes.UIKitAttributes.UnderlineStyleAttribute()
{
}

uint64_t closure #1 in TranscriptLabel._debugCanvas.getter()
{
  return GraphicsContext.withCGContext(content:)();
}

void closure #1 in closure #1 in TranscriptLabel._debugCanvas.getter(CGContext *a1, uint64_t *a2, double a3, double a4)
{
  UIGraphicsPushContext(a1);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v7 = *a2;
  char v8 = (void *)a2[1];
  id v9 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  uint64_t v10 = static Color.red.getter();
  TextLayoutEngine.draw(text:font:color:lowConfidenceRanges:viewSize:)(v7, v8, v9, v10, a2[2], a3, a4);

  swift_release();
  UIGraphicsPopContext();
}

char *LayoutIdiomEnvironmentKey.defaultValue.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultValue != -1) {
    swift_once();
  }
  return &static LayoutIdiomEnvironmentKey.defaultValue;
}

uint64_t static LayoutIdiomEnvironmentKey.defaultValue.getter@<X0>(unsigned char *a1@<X8>)
{
  if (one-time initialization token for defaultValue != -1) {
    uint64_t result = swift_once();
  }
  *a1 = static LayoutIdiomEnvironmentKey.defaultValue;
  return result;
}

uint64_t protocol witness for static EnvironmentKey.defaultValue.getter in conformance LayoutIdiomEnvironmentKey@<X0>(unsigned char *a1@<X8>)
{
  if (one-time initialization token for defaultValue != -1) {
    uint64_t result = swift_once();
  }
  *a1 = static LayoutIdiomEnvironmentKey.defaultValue;
  return result;
}

uint64_t protocol witness for static EnvironmentKey._valuesEqual(_:_:) in conformance LayoutIdiomEnvironmentKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = lazy protocol witness table accessor for type MultiwayViewController.LayoutIdiom and conformance MultiwayViewController.LayoutIdiom();
  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.layoutIdiom.getter()
{
  lazy protocol witness table accessor for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey();
  return EnvironmentValues.subscript.getter();
}

uint64_t key path getter for EnvironmentValues.layoutIdiom : EnvironmentValues@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.layoutIdiom.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for EnvironmentValues.layoutIdiom : EnvironmentValues()
{
  return EnvironmentValues.layoutIdiom.setter();
}

uint64_t EnvironmentValues.layoutIdiom.setter()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t (*EnvironmentValues.layoutIdiom.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = lazy protocol witness table accessor for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey();
  EnvironmentValues.subscript.getter();
  return EnvironmentValues.layoutIdiom.modify;
}

uint64_t EnvironmentValues.layoutIdiom.modify(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return EnvironmentValues.subscript.setter();
}

uint64_t key path setter for EnvironmentValues.sizeCategory : EnvironmentValues(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentSizeCategory();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t type metadata accessor for TranscriptLabel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptLabel);
}

uint64_t partial apply for closure #1 in closure #2 in TranscriptLabel.body.getter()
{
  uint64_t v0 = type metadata accessor for TranscriptLabel(0);
  OUTLINED_FUNCTION_1_1(v0);
  uint64_t v1 = OUTLINED_FUNCTION_4_115();
  return closure #1 in closure #2 in TranscriptLabel.body.getter(v1, v2, v3);
}

unint64_t lazy protocol witness table accessor for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey()
{
  unint64_t result = lazy protocol witness table cache variable for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey;
  if (!lazy protocol witness table cache variable for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in CaptionsView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type CaptionsSizeToggleButton.Configuration and conformance CaptionsSizeToggleButton.Configuration()
{
  unint64_t result = lazy protocol witness table cache variable for type CaptionsSizeToggleButton.Configuration and conformance CaptionsSizeToggleButton.Configuration;
  if (!lazy protocol witness table cache variable for type CaptionsSizeToggleButton.Configuration and conformance CaptionsSizeToggleButton.Configuration)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CaptionsSizeToggleButton.Configuration and conformance CaptionsSizeToggleButton.Configuration);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in CaptionsSizeToggleButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in TranscriptLabel()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata accessor for CaptionsView()
{
}

uint64_t destroy for CaptionsSizeToggleButton()
{
  return swift_release();
}

uint64_t initializeBufferWithCopyOfBuffer for CaptionsSizeToggleButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CaptionsSizeToggleButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CaptionsSizeToggleButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

void type metadata accessor for CaptionsSizeToggleButton()
{
}

void type metadata accessor for CaptionsSizeToggleButton.Configuration()
{
}

void *initializeBufferWithCopyOfBuffer for TranscriptLabel(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = *(int *)(a3 + 24);
    id v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *id v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  }
  return a1;
}

uint64_t destroy for TranscriptLabel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for RedactionReasons();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for TranscriptLabel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)((char *)a1 + v7);
  id v9 = (void *)((char *)a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithCopy for TranscriptLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    outlined destroy of Environment<RedactionReasons>.Content((uint64_t)a1 + v6, (uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t initializeWithTake for TranscriptLabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithTake for TranscriptLabel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    outlined destroy of Environment<RedactionReasons>.Content((uint64_t)a1 + v7, (uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for RedactionReasons();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptLabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3705B58);
}

uint64_t sub_1C3705B58()
{
  OUTLINED_FUNCTION_173();
  if (v2) {
    return OUTLINED_FUNCTION_46_0(*(void *)(v0 + 8));
  }
  OUTLINED_FUNCTION_32_37();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
  uint64_t v4 = OUTLINED_FUNCTION_188(*(int *)(v1 + 24));
  return __swift_getEnumTagSinglePayload(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptLabel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3705BDC);
}

void sub_1C3705BDC()
{
  OUTLINED_FUNCTION_5();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
    uint64_t v5 = OUTLINED_FUNCTION_85_5(*(int *)(v4 + 24));
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
}

void type metadata completion function for TranscriptLabel()
{
  _s7SwiftUI11EnvironmentV7ContentOyAA16RedactionReasonsV_GMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Environment<RedactionReasons>.Content, MEMORY[0x1E4F3CD58], MEMORY[0x1E4F3C648]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for LayoutIdiomEnvironmentKey()
{
}

unint64_t sub_1C3705D34()
{
  return lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type ZStack<_ConditionalContent<TranscriptSubtitle, TranscriptView>> and conformance ZStack<A>);
}

unint64_t sub_1C3705D70()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>> and conformance _OverlayModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _BackgroundModifier<Canvas<EmptyView>?> and conformance _BackgroundModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    *(_WORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *((_WORD *)a2 + 20);
    *(void *)(a1 + 48) = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    *(void *)(a1 + 64) = a2[8];
    uint64_t v8 = a2[11];
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    uint64_t v9 = *(int *)(a3 + 56);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    *(void *)(a1 + 88) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for TranscriptView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_WORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = *(int *)(a3 + 56);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TranscriptView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v6 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 56);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    outlined destroy of Environment<RedactionReasons>.Content(a1 + v9, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TranscriptView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_WORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 80);
  uint64_t v6 = *(int *)(a3 + 56);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for TranscriptView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(a2 + 80);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 56);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    outlined destroy of Environment<RedactionReasons>.Content(a1 + v7, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3706978);
}

uint64_t sub_1C3706978()
{
  OUTLINED_FUNCTION_173();
  if (v2) {
    return OUTLINED_FUNCTION_46_0(*v0);
  }
  OUTLINED_FUNCTION_32_37();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  uint64_t v4 = OUTLINED_FUNCTION_188(*(int *)(v1 + 56));
  return __swift_getEnumTagSinglePayload(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C37069FC);
}

void sub_1C37069FC()
{
  OUTLINED_FUNCTION_5();
  if (v3)
  {
    void *v1 = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    uint64_t v5 = OUTLINED_FUNCTION_85_5(*(int *)(v4 + 56));
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
}

uint64_t type metadata accessor for TranscriptView(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptView);
}

void type metadata completion function for TranscriptView()
{
  _s7SwiftUI11EnvironmentV7ContentOyAA16RedactionReasonsV_GMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for TranscriptSubtitle(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  char v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *char v3 = *a2;
    char v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    *(void *)(a1 + 24) = a2[3];
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    uint64_t v5 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v5;
    uint64_t v6 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v6;
    uint64_t v7 = a2[11];
    *(void *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a2[10];
    *(void *)(a1 + 88) = v7;
    uint64_t v8 = a2[13];
    uint64_t v9 = *(int *)(a3 + 52);
    uint64_t v10 = (char *)(a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v8;
    uint64_t v12 = (int *)type metadata accessor for Participant(0);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v15 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          uint64_t v16 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v10, v11, v16);
          goto LABEL_20;
        case 4u:
          uint64_t v17 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v10, v11, v17);
          uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v18 = *(int *)(v74 + 48);
          uint64_t v19 = &v10[v18];
          id v20 = &v11[v18];
          *(_OWORD *)uint64_t v19 = *(_OWORD *)&v11[v18];
          uint64_t v21 = *(void *)&v11[v18 + 16];
          uint64_t v22 = *(void *)&v11[v18 + 24];
          *((void *)v19 + 2) = v21;
          *((void *)v19 + 3) = v22;
          *((_WORD *)v19 + 16) = *((_WORD *)v20 + 16);
          *((void *)v19 + 5) = *((void *)v20 + 5);
          v19[48] = v20[48];
          *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
          *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
          v19[88] = v20[88];
          v19[89] = v20[89];
          uint64_t v23 = *((void *)v20 + 15);
          swift_bridgeObjectRetain();
          if (v23)
          {
            if (v23 == 1)
            {
              unint64_t v24 = v19 + 96;
              unint64_t v25 = v20 + 96;
              size_t v26 = 209;
              goto LABEL_14;
            }
            uint64_t v28 = *((void *)v20 + 16);
            *((void *)v19 + 15) = v23;
            *((void *)v19 + 16) = v28;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))((uint64_t)(v19 + 96), (uint64_t)(v20 + 96), v23);
          }
          else
          {
            long long v27 = *((_OWORD *)v20 + 7);
            *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
            *((_OWORD *)v19 + 7) = v27;
            *((void *)v19 + 16) = *((void *)v20 + 16);
          }
          *((_DWORD *)v19 + 34) = *((_DWORD *)v20 + 34);
          long long v29 = *((_OWORD *)v20 + 10);
          *((_OWORD *)v19 + 9) = *((_OWORD *)v20 + 9);
          *((_OWORD *)v19 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v29;
          *((_OWORD *)v19 + 11) = *((_OWORD *)v20 + 11);
          v19[192] = v20[192];
          unint64_t v24 = v19 + 208;
          unint64_t v25 = v20 + 208;
          *((void *)v19 + 25) = *((void *)v20 + 25);
          size_t v26 = 97;
LABEL_14:
          memcpy(v24, v25, v26);
          uint64_t v30 = *((void *)v20 + 39);
          if (v30)
          {
            uint64_t v31 = *((void *)v20 + 40);
            uint64_t v32 = *((void *)v20 + 41);
            *((void *)v19 + 39) = v30;
            *((void *)v19 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v31;
            *((void *)v19 + 41) = v32;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v19 + 312) = *(_OWORD *)(v20 + 312);
            *((void *)v19 + 41) = *((void *)v20 + 41);
          }
          uint64_t v33 = *(int *)(v74 + 64);
          uint64_t v34 = &v10[v33];
          uint64_t v35 = &v11[v33];
          uint64_t v36 = *((void *)v35 + 1);
          if (v36)
          {
            *(void *)uint64_t v34 = *(void *)v35;
            *((void *)v34 + 1) = v36;
            uint64_t v37 = *((void *)v35 + 3);
            *((void *)v34 + 2) = *((void *)v35 + 2);
            *((void *)v34 + 3) = v37;
            v34[32] = v35[32];
            *(_OWORD *)(v34 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(v35 + 40);
            *((void *)v34 + 7) = *((void *)v35 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v38 = *((_OWORD *)v35 + 1);
            *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
            *((_OWORD *)v34 + 1) = v38;
            long long v39 = *((_OWORD *)v35 + 3);
            *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
            *((_OWORD *)v34 + 3) = v39;
          }
LABEL_20:
          swift_storeEnumTagMultiPayload();
LABEL_21:
          uint64_t v40 = v12[5];
          uint64_t v41 = &v10[v40];
          uint64_t v42 = &v11[v40];
          uint64_t v43 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
          uint64_t v44 = v12[6];
          unint64_t v45 = &v10[v44];
          uint64_t v46 = &v11[v44];
          v45[4] = v46[4];
          *(_DWORD *)unint64_t v45 = *(_DWORD *)v46;
          uint64_t v47 = v12[7];
          uint64_t v48 = &v10[v47];
          uint64_t v49 = &v11[v47];
          uint64_t v50 = *(void **)v49;
          if (*(void *)v49)
          {
            uint64_t v51 = *((void *)v49 + 1);
            *(void *)uint64_t v48 = v50;
            *((void *)v48 + 1) = v51;
            v48[16] = v49[16];
            uint64_t v52 = *((void *)v49 + 4);
            *((void *)v48 + 3) = *((void *)v49 + 3);
            *((void *)v48 + 4) = v52;
            id v53 = v50;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v54 = *((_OWORD *)v49 + 1);
            *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
            *((_OWORD *)v48 + 1) = v54;
            *((void *)v48 + 4) = *((void *)v49 + 4);
          }
          *(void *)&v10[v12[8]] = *(void *)&v11[v12[8]];
          uint64_t v55 = v12[9];
          uint64_t v56 = &v10[v55];
          uint64_t v57 = &v11[v55];
          uint64_t v58 = *((void *)v57 + 1);
          *(void *)uint64_t v56 = *(void *)v57;
          *((void *)v56 + 1) = v58;
          v10[v12[10]] = v11[v12[10]];
          *(void *)&v10[v12[11]] = *(void *)&v11[v12[11]];
          uint64_t v59 = v12[12];
          uint64_t v60 = *(void **)&v11[v59];
          *(void *)&v10[v59] = v60;
          v10[v12[13]] = v11[v12[13]];
          uint64_t v75 = (uint64_t)v12;
          uint64_t v61 = v12[14];
          uint64_t v62 = &v10[v61];
          uint64_t v63 = &v11[v61];
          uint64_t v64 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v65 = v60;
          if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
          {
            uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
          }
          uint64_t v67 = type metadata accessor for Participant.CountdownInfo(0);
          uint64_t v68 = *(int *)(v67 + 20);
          uint64_t v69 = &v62[v68];
          uint64_t v70 = &v63[v68];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v63[v68], 1, v64))
          {
            uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v69, v70, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v64);
          }
          v62[*(int *)(v67 + 24)] = v63[*(int *)(v67 + 24)];
          v10[*(int *)(v75 + 60)] = v11[*(int *)(v75 + 60)];
          *(void *)&v10[*(int *)(v75 + 64)] = *(void *)&v11[*(int *)(v75 + 64)];
          swift_retain();
          __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v75);
          break;
        default:
          memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
          goto LABEL_21;
      }
    }
    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
    *(void *)&v10[*(int *)(v72 + 28)] = *(void *)&v11[*(int *)(v72 + 28)];
  }
  swift_retain();
  return v3;
}

uint64_t destroy for TranscriptSubtitle(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = (int *)type metadata accessor for Participant(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, (uint64_t)v5))
  {
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v6 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
        break;
      case 4u:
        uint64_t v14 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v4, v14);
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v16 = v4 + *(int *)(v15 + 48);
        swift_bridgeObjectRelease();
        if (*(void *)(v16 + 120) >= 2uLL) {
          __swift_destroy_boxed_opaque_existential_1(v16 + 96);
        }
        if (*(void *)(v16 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v4 + *(int *)(v15 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    uint64_t v7 = v4 + v5[5];
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = (id *)(v4 + v5[7]);
    if (*v9)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v10 = v4 + v5[14];
    uint64_t v11 = type metadata accessor for Date();
    if (!__swift_getEnumTagSinglePayload(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
    uint64_t v12 = v10 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v12, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v12, v11);
    }
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  return swift_release();
}

uint64_t initializeWithCopy for TranscriptSubtitle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  uint64_t v8 = *(int *)(a3 + 52);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  uint64_t v11 = (int *)type metadata accessor for Participant(0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
        goto LABEL_18;
      case 4u:
        uint64_t v15 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v16 = *(int *)(v72 + 48);
        uint64_t v17 = &v9[v16];
        uint64_t v18 = &v10[v16];
        *(_OWORD *)uint64_t v17 = *(_OWORD *)&v10[v16];
        uint64_t v19 = *(void *)&v10[v16 + 16];
        uint64_t v20 = *(void *)&v10[v16 + 24];
        *((void *)v17 + 2) = v19;
        *((void *)v17 + 3) = v20;
        *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
        *((void *)v17 + 5) = *((void *)v18 + 5);
        v17[48] = v18[48];
        *(_OWORD *)(v17 + 56) = *(_OWORD *)(v18 + 56);
        *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
        v17[88] = v18[88];
        v17[89] = v18[89];
        uint64_t v21 = *((void *)v18 + 15);
        swift_bridgeObjectRetain();
        if (v21)
        {
          if (v21 == 1)
          {
            uint64_t v22 = v17 + 96;
            uint64_t v23 = v18 + 96;
            size_t v24 = 209;
            goto LABEL_12;
          }
          uint64_t v26 = *((void *)v18 + 16);
          *((void *)v17 + 15) = v21;
          *((void *)v17 + 16) = v26;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))((uint64_t)(v17 + 96), (uint64_t)(v18 + 96), v21);
        }
        else
        {
          long long v25 = *((_OWORD *)v18 + 7);
          *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
          *((_OWORD *)v17 + 7) = v25;
          *((void *)v17 + 16) = *((void *)v18 + 16);
        }
        *((_DWORD *)v17 + 34) = *((_DWORD *)v18 + 34);
        long long v27 = *((_OWORD *)v18 + 10);
        *((_OWORD *)v17 + 9) = *((_OWORD *)v18 + 9);
        *((_OWORD *)v17 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v27;
        *((_OWORD *)v17 + 11) = *((_OWORD *)v18 + 11);
        v17[192] = v18[192];
        uint64_t v22 = v17 + 208;
        uint64_t v23 = v18 + 208;
        *((void *)v17 + 25) = *((void *)v18 + 25);
        size_t v24 = 97;
LABEL_12:
        memcpy(v22, v23, v24);
        uint64_t v28 = *((void *)v18 + 39);
        if (v28)
        {
          uint64_t v29 = *((void *)v18 + 40);
          uint64_t v30 = *((void *)v18 + 41);
          *((void *)v17 + 39) = v28;
          *((void *)v17 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v29;
          *((void *)v17 + 41) = v30;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 312) = *(_OWORD *)(v18 + 312);
          *((void *)v17 + 41) = *((void *)v18 + 41);
        }
        uint64_t v31 = *(int *)(v72 + 64);
        uint64_t v32 = &v9[v31];
        uint64_t v33 = &v10[v31];
        uint64_t v34 = *((void *)v33 + 1);
        if (v34)
        {
          *(void *)uint64_t v32 = *(void *)v33;
          *((void *)v32 + 1) = v34;
          uint64_t v35 = *((void *)v33 + 3);
          *((void *)v32 + 2) = *((void *)v33 + 2);
          *((void *)v32 + 3) = v35;
          unsigned char v32[32] = v33[32];
          *(_OWORD *)(v32 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(v33 + 40);
          *((void *)v32 + 7) = *((void *)v33 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v36 = *((_OWORD *)v33 + 1);
          *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
          *((_OWORD *)v32 + 1) = v36;
          long long v37 = *((_OWORD *)v33 + 3);
          *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
          *((_OWORD *)v32 + 3) = v37;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        uint64_t v38 = v11[5];
        long long v39 = &v9[v38];
        uint64_t v40 = &v10[v38];
        uint64_t v41 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
        uint64_t v42 = v11[6];
        uint64_t v43 = &v9[v42];
        uint64_t v44 = &v10[v42];
        v43[4] = v44[4];
        *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
        uint64_t v45 = v11[7];
        uint64_t v46 = &v9[v45];
        uint64_t v47 = &v10[v45];
        uint64_t v48 = *(void **)v47;
        if (*(void *)v47)
        {
          uint64_t v49 = *((void *)v47 + 1);
          *(void *)uint64_t v46 = v48;
          *((void *)v46 + 1) = v49;
          v46[16] = v47[16];
          uint64_t v50 = *((void *)v47 + 4);
          *((void *)v46 + 3) = *((void *)v47 + 3);
          *((void *)v46 + 4) = v50;
          id v51 = v48;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v52 = *((_OWORD *)v47 + 1);
          *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
          *((_OWORD *)v46 + 1) = v52;
          *((void *)v46 + 4) = *((void *)v47 + 4);
        }
        *(void *)&v9[v11[8]] = *(void *)&v10[v11[8]];
        uint64_t v53 = v11[9];
        long long v54 = &v9[v53];
        uint64_t v55 = &v10[v53];
        uint64_t v56 = *((void *)v55 + 1);
        *(void *)long long v54 = *(void *)v55;
        *((void *)v54 + 1) = v56;
        v9[v11[10]] = v10[v11[10]];
        *(void *)&v9[v11[11]] = *(void *)&v10[v11[11]];
        uint64_t v57 = v11[12];
        uint64_t v58 = *(void **)&v10[v57];
        *(void *)&v9[v57] = v58;
        v9[v11[13]] = v10[v11[13]];
        uint64_t v73 = (uint64_t)v11;
        uint64_t v59 = v11[14];
        uint64_t v60 = &v9[v59];
        uint64_t v61 = &v10[v59];
        uint64_t v62 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v63 = v58;
        if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
        {
          uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
        }
        uint64_t v65 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v66 = *(int *)(v65 + 20);
        uint64_t v67 = &v60[v66];
        uint64_t v68 = &v61[v66];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v61[v66], 1, v62))
        {
          uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v67, v68, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v62);
        }
        v60[*(int *)(v65 + 24)] = v61[*(int *)(v65 + 24)];
        v9[*(int *)(v73 + 60)] = v10[*(int *)(v73 + 60)];
        *(void *)&v9[*(int *)(v73 + 64)] = *(void *)&v10[*(int *)(v73 + 64)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v73);
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_19;
    }
  }
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  *(void *)&v9[*(int *)(v70 + 28)] = *(void *)&v10[*(int *)(v70 + 28)];
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TranscriptSubtitle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  uint64_t v8 = *(int *)(a3 + 52);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for Participant(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v11);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11);
  if (!EnumTagSinglePayload)
  {
    if (v13)
    {
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      goto LABEL_7;
    }
    if (a1 != a2)
    {
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      uint64_t v17 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          uint64_t v18 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v9, v10, v18);
          goto LABEL_48;
        case 4u:
          uint64_t v30 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v9, v10, v30);
          uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v31 = *(int *)(v146 + 48);
          uint64_t v32 = &v9[v31];
          uint64_t v33 = &v10[v31];
          *(_OWORD *)uint64_t v32 = *(_OWORD *)&v10[v31];
          *((void *)v32 + 2) = *(void *)&v10[v31 + 16];
          uint64_t v34 = *(void *)&v10[v31 + 24];
          *((_WORD *)v32 + 16) = *((_WORD *)v33 + 16);
          *((void *)v32 + 3) = v34;
          *((void *)v32 + 5) = *((void *)v33 + 5);
          v32[48] = v33[48];
          long long v35 = *(_OWORD *)(v33 + 72);
          long long v36 = *(_OWORD *)(v33 + 56);
          char v32[88] = v33[88];
          *(_OWORD *)(v32 + 56) = v36;
          *(_OWORD *)(v32 + 72) = v35;
          v32[89] = v33[89];
          uint64_t v37 = *((void *)v33 + 15);
          swift_bridgeObjectRetain();
          if (v37)
          {
            if (v37 == 1)
            {
              uint64_t v38 = v32 + 96;
              long long v39 = v33 + 96;
              size_t v40 = 209;
              goto LABEL_42;
            }
            *((void *)v32 + 15) = v37;
            *((void *)v32 + 16) = *((void *)v33 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8))((uint64_t)(v32 + 96), (uint64_t)(v33 + 96), v37);
          }
          else
          {
            long long v87 = *((_OWORD *)v33 + 6);
            long long v88 = *((_OWORD *)v33 + 7);
            *((void *)v32 + 16) = *((void *)v33 + 16);
            *((_OWORD *)v32 + 6) = v87;
            *((_OWORD *)v32 + 7) = v88;
          }
          *((_DWORD *)v32 + 34) = *((_DWORD *)v33 + 34);
          *((void *)v32 + 18) = *((void *)v33 + 18);
          *((void *)v32 + 19) = *((void *)v33 + 19);
          long long v89 = *((_OWORD *)v33 + 10);
          long long v90 = *((_OWORD *)v33 + 11);
          v32[192] = v33[192];
          *((_OWORD *)v32 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v89;
          *((_OWORD *)v32 + 11) = v90;
          *((void *)v32 + 25) = *((void *)v33 + 25);
          uint64_t v38 = v32 + 208;
          long long v39 = v33 + 208;
          size_t v40 = 97;
LABEL_42:
          memcpy(v38, v39, v40);
          uint64_t v91 = *((void *)v33 + 39);
          if (v91)
          {
            uint64_t v92 = *((void *)v33 + 40);
            *((void *)v32 + 39) = v91;
            *((void *)v32 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v92;
            *((void *)v32 + 41) = *((void *)v33 + 41);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v93 = *(_OWORD *)(v33 + 312);
            *((void *)v32 + 41) = *((void *)v33 + 41);
            *(_OWORD *)(v32 + 312) = v93;
          }
          uint64_t v94 = *(int *)(v146 + 64);
          uint64_t v95 = &v9[v94];
          uint64_t v96 = &v10[v94];
          if (*((void *)v96 + 1))
          {
            *(void *)uint64_t v95 = *(void *)v96;
            *((void *)v95 + 1) = *((void *)v96 + 1);
            *((void *)v95 + 2) = *((void *)v96 + 2);
            *((void *)v95 + 3) = *((void *)v96 + 3);
            v95[32] = v96[32];
            *((void *)v95 + 5) = *((void *)v96 + 5);
            *((void *)v95 + 6) = *((void *)v96 + 6);
            *((void *)v95 + 7) = *((void *)v96 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v97 = *(_OWORD *)v96;
            long long v98 = *((_OWORD *)v96 + 1);
            long long v99 = *((_OWORD *)v96 + 3);
            *((_OWORD *)v95 + 2) = *((_OWORD *)v96 + 2);
            *((_OWORD *)v95 + 3) = v99;
            *(_OWORD *)uint64_t v95 = v97;
            *((_OWORD *)v95 + 1) = v98;
          }
LABEL_48:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
          break;
      }
    }
    uint64_t v100 = v11[5];
    uint64_t v101 = &v9[v100];
    uint64_t v102 = &v10[v100];
    uint64_t v103 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 24))(v101, v102, v103);
    uint64_t v104 = v11[6];
    uint64_t v105 = &v9[v104];
    uint64_t v106 = &v10[v104];
    char *v105 = *v106;
    v105[1] = v106[1];
    v105[2] = v106[2];
    uint64_t v105[3] = v106[3];
    v105[4] = v106[4];
    uint64_t v107 = v11[7];
    uint64_t v108 = (uint64_t)&v9[v107];
    uint64_t v109 = &v10[v107];
    uint64_t v110 = *(void **)&v9[v107];
    uint64_t v111 = *(void **)&v10[v107];
    if (v110)
    {
      if (v111)
      {
        *(void *)uint64_t v108 = v111;
        id v112 = v111;

        uint64_t v113 = *((void *)v109 + 1);
        *(unsigned char *)(v108 + 16) = v109[16];
        *(void *)(v108 + 8) = v113;
        *(void *)(v108 + 24) = *((void *)v109 + 3);
        *(void *)(v108 + 32) = *((void *)v109 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        outlined destroy of Participant.RemoteIdentifiers(v108);
        uint64_t v116 = *((void *)v109 + 4);
        long long v117 = *((_OWORD *)v109 + 1);
        *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
        *(_OWORD *)(v108 + 16) = v117;
        *(void *)(v108 + 32) = v116;
      }
    }
    else if (v111)
    {
      *(void *)uint64_t v108 = v111;
      uint64_t v114 = *((void *)v109 + 1);
      *(unsigned char *)(v108 + 16) = v109[16];
      *(void *)(v108 + 8) = v114;
      *(void *)(v108 + 24) = *((void *)v109 + 3);
      *(void *)(v108 + 32) = *((void *)v109 + 4);
      id v115 = v111;
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v118 = *(_OWORD *)v109;
      long long v119 = *((_OWORD *)v109 + 1);
      *(void *)(v108 + 32) = *((void *)v109 + 4);
      *(_OWORD *)uint64_t v108 = v118;
      *(_OWORD *)(v108 + 16) = v119;
    }
    *(void *)&v9[v11[8]] = *(void *)&v10[v11[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v120 = v11[9];
    __C::CGRect v121 = &v9[v120];
    CGRect v122 = &v10[v120];
    *(void *)__C::CGRect v121 = *(void *)v122;
    *((void *)v121 + 1) = *((void *)v122 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v9[v11[10]] = v10[v11[10]];
    *(void *)&v9[v11[11]] = *(void *)&v10[v11[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v123 = v11[12];
    CGRect v124 = *(void **)&v9[v123];
    CGRect v125 = *(void **)&v10[v123];
    *(void *)&v9[v123] = v125;
    id v126 = v125;

    v9[v11[13]] = v10[v11[13]];
    uint64_t v127 = v11[14];
    char v128 = &v9[v127];
    char v129 = &v10[v127];
    uint64_t v130 = type metadata accessor for Date();
    int v131 = __swift_getEnumTagSinglePayload((uint64_t)v128, 1, v130);
    int v132 = __swift_getEnumTagSinglePayload((uint64_t)v129, 1, v130);
    if (v131)
    {
      if (!v132)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
        __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v130);
        goto LABEL_62;
      }
    }
    else
    {
      uint64_t v133 = *(void *)(v130 - 8);
      if (!v132)
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 24))(v128, v129, v130);
LABEL_62:
        uint64_t v135 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v136 = *(int *)(v135 + 20);
        __int16 v137 = &v128[v136];
        char v148 = v129;
        id v138 = &v129[v136];
        int v139 = __swift_getEnumTagSinglePayload((uint64_t)&v128[v136], 1, v130);
        int v140 = __swift_getEnumTagSinglePayload((uint64_t)v138, 1, v130);
        if (v139)
        {
          if (!v140)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v137, v138, v130);
            __swift_storeEnumTagSinglePayload((uint64_t)v137, 0, 1, v130);
LABEL_68:
            v128[*(int *)(v135 + 24)] = v148[*(int *)(v135 + 24)];
            v9[v11[15]] = v10[v11[15]];
            *(void *)&v9[v11[16]] = *(void *)&v10[v11[16]];
            swift_retain();
            swift_release();
            goto LABEL_69;
          }
        }
        else
        {
          uint64_t v141 = *(void *)(v130 - 8);
          if (!v140)
          {
            (*(void (**)(char *, char *, uint64_t))(v141 + 24))(v137, v138, v130);
            goto LABEL_68;
          }
          (*(void (**)(char *, uint64_t))(v141 + 8))(v137, v130);
        }
        uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v137, v138, *(void *)(*(void *)(v142 - 8) + 64));
        goto LABEL_68;
      }
      (*(void (**)(char *, uint64_t))(v133 + 8))(v128, v130);
    }
    uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v128, v129, *(void *)(*(void *)(v134 - 8) + 64));
    goto LABEL_62;
  }
  if (v13)
  {
LABEL_7:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_69;
  }
  uint64_t v14 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v15 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
      goto LABEL_28;
    case 4u:
      uint64_t v19 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v9, v10, v19);
      uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v20 = *(int *)(v145 + 48);
      uint64_t v21 = &v9[v20];
      uint64_t v22 = &v10[v20];
      *(_OWORD *)uint64_t v21 = *(_OWORD *)&v10[v20];
      *((void *)v21 + 2) = *(void *)&v10[v20 + 16];
      uint64_t v23 = *(void *)&v10[v20 + 24];
      *((_WORD *)v21 + 16) = *((_WORD *)v22 + 16);
      *((void *)v21 + 3) = v23;
      *((void *)v21 + 5) = *((void *)v22 + 5);
      v21[48] = v22[48];
      long long v24 = *(_OWORD *)(v22 + 72);
      long long v25 = *(_OWORD *)(v22 + 56);
      v21[88] = v22[88];
      *(_OWORD *)(v21 + 56) = v25;
      *(_OWORD *)(v21 + 72) = v24;
      v21[89] = v22[89];
      uint64_t v26 = *((void *)v22 + 15);
      swift_bridgeObjectRetain();
      if (v26)
      {
        if (v26 == 1)
        {
          long long v27 = v21 + 96;
          uint64_t v28 = v22 + 96;
          size_t v29 = 209;
          goto LABEL_22;
        }
        *((void *)v21 + 15) = v26;
        *((void *)v21 + 16) = *((void *)v22 + 16);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v26 - 8))((uint64_t)(v21 + 96), (uint64_t)(v22 + 96), v26);
      }
      else
      {
        long long v41 = *((_OWORD *)v22 + 6);
        long long v42 = *((_OWORD *)v22 + 7);
        *((void *)v21 + 16) = *((void *)v22 + 16);
        *((_OWORD *)v21 + 6) = v41;
        *((_OWORD *)v21 + 7) = v42;
      }
      *((_DWORD *)v21 + 34) = *((_DWORD *)v22 + 34);
      *((void *)v21 + 18) = *((void *)v22 + 18);
      *((void *)v21 + 19) = *((void *)v22 + 19);
      long long v43 = *((_OWORD *)v22 + 10);
      long long v44 = *((_OWORD *)v22 + 11);
      v21[192] = v22[192];
      *((_OWORD *)v21 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v43;
      *((_OWORD *)v21 + 11) = v44;
      *((void *)v21 + 25) = *((void *)v22 + 25);
      long long v27 = v21 + 208;
      uint64_t v28 = v22 + 208;
      size_t v29 = 97;
LABEL_22:
      memcpy(v27, v28, v29);
      uint64_t v45 = *((void *)v22 + 39);
      if (v45)
      {
        uint64_t v46 = *((void *)v22 + 40);
        *((void *)v21 + 39) = v45;
        *((void *)v21 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v46;
        *((void *)v21 + 41) = *((void *)v22 + 41);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v47 = *(_OWORD *)(v22 + 312);
        *((void *)v21 + 41) = *((void *)v22 + 41);
        *(_OWORD *)(v21 + 312) = v47;
      }
      uint64_t v48 = *(int *)(v145 + 64);
      uint64_t v49 = &v9[v48];
      uint64_t v50 = &v10[v48];
      if (*((void *)v50 + 1))
      {
        *(void *)uint64_t v49 = *(void *)v50;
        *((void *)v49 + 1) = *((void *)v50 + 1);
        *((void *)v49 + 2) = *((void *)v50 + 2);
        *((void *)v49 + 3) = *((void *)v50 + 3);
        v49[32] = v50[32];
        *((void *)v49 + 5) = *((void *)v50 + 5);
        *((void *)v49 + 6) = *((void *)v50 + 6);
        *((void *)v49 + 7) = *((void *)v50 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v51 = *(_OWORD *)v50;
        long long v52 = *((_OWORD *)v50 + 1);
        long long v53 = *((_OWORD *)v50 + 3);
        *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
        *((_OWORD *)v49 + 3) = v53;
        *(_OWORD *)uint64_t v49 = v51;
        *((_OWORD *)v49 + 1) = v52;
      }
LABEL_28:
      swift_storeEnumTagMultiPayload();
LABEL_29:
      uint64_t v54 = v11[5];
      uint64_t v55 = &v9[v54];
      uint64_t v56 = &v10[v54];
      uint64_t v57 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
      uint64_t v58 = v11[6];
      uint64_t v59 = &v9[v58];
      uint64_t v60 = &v10[v58];
      int v61 = *(_DWORD *)v60;
      v59[4] = v60[4];
      *(_DWORD *)uint64_t v59 = v61;
      uint64_t v62 = v11[7];
      id v63 = &v9[v62];
      uint64_t v64 = &v10[v62];
      uint64_t v65 = *(void **)v64;
      if (*(void *)v64)
      {
        *(void *)id v63 = v65;
        uint64_t v66 = *((void *)v64 + 1);
        v63[16] = v64[16];
        *((void *)v63 + 1) = v66;
        *((void *)v63 + 3) = *((void *)v64 + 3);
        *((void *)v63 + 4) = *((void *)v64 + 4);
        id v67 = v65;
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v68 = *(_OWORD *)v64;
        long long v69 = *((_OWORD *)v64 + 1);
        *((void *)v63 + 4) = *((void *)v64 + 4);
        *(_OWORD *)id v63 = v68;
        *((_OWORD *)v63 + 1) = v69;
      }
      *(void *)&v9[v11[8]] = *(void *)&v10[v11[8]];
      uint64_t v70 = v11[9];
      uint64_t v71 = &v9[v70];
      uint64_t v72 = &v10[v70];
      *(void *)uint64_t v71 = *(void *)v72;
      *((void *)v71 + 1) = *((void *)v72 + 1);
      v9[v11[10]] = v10[v11[10]];
      *(void *)&v9[v11[11]] = *(void *)&v10[v11[11]];
      uint64_t v73 = v11[12];
      uint64_t v74 = v11;
      uint64_t v75 = *(void **)&v10[v73];
      *(void *)&v9[v73] = v75;
      v9[v74[13]] = v10[v74[13]];
      uint64_t v147 = (uint64_t)v74;
      uint64_t v76 = v74[14];
      uint64_t v77 = &v9[v76];
      uint64_t v78 = &v10[v76];
      uint64_t v79 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v80 = v75;
      if (__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79))
      {
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
        __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v79);
      }
      uint64_t v82 = type metadata accessor for Participant.CountdownInfo(0);
      uint64_t v83 = *(int *)(v82 + 20);
      uint64_t v84 = &v77[v83];
      uint64_t v85 = &v78[v83];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v78[v83], 1, v79))
      {
        uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v84, v85, v79);
        __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v79);
      }
      v77[*(int *)(v82 + 24)] = v78[*(int *)(v82 + 24)];
      v9[*(int *)(v147 + 60)] = v10[*(int *)(v147 + 60)];
      *(void *)&v9[*(int *)(v147 + 64)] = *(void *)&v10[*(int *)(v147 + 64)];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v147);
      break;
    default:
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      goto LABEL_29;
  }
LABEL_69:
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  *(void *)&v9[*(int *)(v143 + 28)] = *(void *)&v10[*(int *)(v143 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s15ConversationKit11ParticipantV5StateOWOhTm_3()
{
  uint64_t v1 = OUTLINED_FUNCTION_49_2();
  v2(v1);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return v0;
}

uint64_t initializeWithTake for TranscriptSubtitle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v4 = *(int *)(a3 + 52);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v7 = (int *)type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v17 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v5, v6, v17);
        goto LABEL_7;
      case 4u:
        uint64_t v10 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v5[*(int *)(v11 + 48)], &v6[*(int *)(v11 + 48)], 0x150uLL);
        uint64_t v12 = *(int *)(v11 + 64);
        int v13 = &v5[v12];
        uint64_t v14 = &v6[v12];
        long long v15 = *((_OWORD *)v14 + 1);
        *(_OWORD *)int v13 = *(_OWORD *)v14;
        *((_OWORD *)v13 + 1) = v15;
        long long v16 = *((_OWORD *)v14 + 3);
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 3) = v16;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
    uint64_t v18 = v7[5];
    uint64_t v19 = &v5[v18];
    uint64_t v20 = &v6[v18];
    uint64_t v21 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    uint64_t v22 = v7[6];
    uint64_t v23 = &v5[v22];
    long long v24 = &v6[v22];
    *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
    unsigned char v23[4] = v24[4];
    uint64_t v25 = v7[7];
    uint64_t v26 = &v5[v25];
    long long v27 = &v6[v25];
    long long v28 = *((_OWORD *)v27 + 1);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v28;
    *((void *)v26 + 4) = *((void *)v27 + 4);
    *(void *)&v5[v7[8]] = *(void *)&v6[v7[8]];
    *(_OWORD *)&v5[v7[9]] = *(_OWORD *)&v6[v7[9]];
    v5[v7[10]] = v6[v7[10]];
    *(void *)&v5[v7[11]] = *(void *)&v6[v7[11]];
    *(void *)&v5[v7[12]] = *(void *)&v6[v7[12]];
    v5[v7[13]] = v6[v7[13]];
    uint64_t v29 = v7[14];
    uint64_t v30 = &v5[v29];
    uint64_t v31 = &v6[v29];
    uint64_t v32 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
    }
    uint64_t v34 = type metadata accessor for Participant.CountdownInfo(0);
    uint64_t v35 = *(int *)(v34 + 20);
    long long v36 = &v30[v35];
    uint64_t v37 = &v31[v35];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v31[v35], 1, v32))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v36, v37, v32);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v32);
    }
    v30[*(int *)(v34 + 24)] = v31[*(int *)(v34 + 24)];
    v5[v7[15]] = v6[v7[15]];
    *(void *)&v5[v7[16]] = *(void *)&v6[v7[16]];
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, (uint64_t)v7);
  }
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  *(void *)&v5[*(int *)(v39 + 28)] = *(void *)&v6[*(int *)(v39 + 28)];
  return a1;
}

uint64_t assignWithTake for TranscriptSubtitle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(void *)(a2 + 80);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  uint64_t v7 = *(int *)(a3 + 52);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Participant(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10);
  if (!EnumTagSinglePayload)
  {
    if (v12)
    {
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      goto LABEL_6;
    }
    if (a1 != a2)
    {
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      uint64_t v15 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          uint64_t v52 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v8, v9, v52);
          goto LABEL_23;
        case 4u:
          uint64_t v45 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v8, v9, v45);
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          memcpy(&v8[*(int *)(v46 + 48)], &v9[*(int *)(v46 + 48)], 0x150uLL);
          uint64_t v47 = *(int *)(v46 + 64);
          uint64_t v48 = &v8[v47];
          uint64_t v49 = &v9[v47];
          long long v50 = *((_OWORD *)v49 + 1);
          *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
          *((_OWORD *)v48 + 1) = v50;
          long long v51 = *((_OWORD *)v49 + 3);
          *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
          *((_OWORD *)v48 + 3) = v51;
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
          break;
      }
    }
    uint64_t v53 = v10[5];
    uint64_t v54 = &v8[v53];
    uint64_t v55 = &v9[v53];
    uint64_t v56 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 40))(v54, v55, v56);
    uint64_t v57 = v10[6];
    uint64_t v58 = &v8[v57];
    uint64_t v59 = &v9[v57];
    *uint64_t v58 = *v59;
    v58[1] = v59[1];
    v58[2] = v59[2];
    v58[3] = v59[3];
    v58[4] = v59[4];
    uint64_t v60 = v10[7];
    uint64_t v61 = (uint64_t)&v8[v60];
    uint64_t v62 = &v9[v60];
    id v63 = *(void **)&v8[v60];
    if (v63)
    {
      if (*(void *)v62)
      {
        *(void *)uint64_t v61 = *(void *)v62;

        *(void *)(v61 + 8) = *((void *)v62 + 1);
        *(unsigned char *)(v61 + 16) = v62[16];
        uint64_t v64 = *((void *)v62 + 4);
        *(void *)(v61 + 24) = *((void *)v62 + 3);
        *(void *)(v61 + 32) = v64;
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      outlined destroy of Participant.RemoteIdentifiers(v61);
    }
    long long v65 = *((_OWORD *)v62 + 1);
    *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
    *(_OWORD *)(v61 + 16) = v65;
    *(void *)(v61 + 32) = *((void *)v62 + 4);
LABEL_29:
    *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
    swift_bridgeObjectRelease();
    uint64_t v66 = v10[9];
    id v67 = &v8[v66];
    long long v68 = &v9[v66];
    uint64_t v70 = *(void *)v68;
    uint64_t v69 = *((void *)v68 + 1);
    *(void *)id v67 = v70;
    *((void *)v67 + 1) = v69;
    swift_bridgeObjectRelease();
    v8[v10[10]] = v9[v10[10]];
    *(void *)&v8[v10[11]] = *(void *)&v9[v10[11]];
    swift_bridgeObjectRelease();
    uint64_t v71 = v10[12];
    uint64_t v72 = *(void **)&v8[v71];
    *(void *)&v8[v71] = *(void *)&v9[v71];

    v8[v10[13]] = v9[v10[13]];
    uint64_t v73 = v10[14];
    uint64_t v74 = &v8[v73];
    uint64_t v75 = &v9[v73];
    uint64_t v76 = type metadata accessor for Date();
    int v77 = __swift_getEnumTagSinglePayload((uint64_t)v74, 1, v76);
    int v78 = __swift_getEnumTagSinglePayload((uint64_t)v75, 1, v76);
    if (v77)
    {
      if (!v78)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v74, v75, v76);
        __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v76);
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v79 = *(void *)(v76 - 8);
      if (!v78)
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 40))(v74, v75, v76);
LABEL_35:
        uint64_t v81 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v82 = *(int *)(v81 + 20);
        uint64_t v83 = &v74[v82];
        uint64_t v91 = v75;
        uint64_t v84 = &v75[v82];
        int v85 = __swift_getEnumTagSinglePayload((uint64_t)&v74[v82], 1, v76);
        int v86 = __swift_getEnumTagSinglePayload((uint64_t)v84, 1, v76);
        if (v85)
        {
          if (!v86)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v83, v84, v76);
            __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v76);
LABEL_41:
            v74[*(int *)(v81 + 24)] = v91[*(int *)(v81 + 24)];
            v8[v10[15]] = v9[v10[15]];
            *(void *)&v8[v10[16]] = *(void *)&v9[v10[16]];
            swift_release();
            goto LABEL_42;
          }
        }
        else
        {
          uint64_t v87 = *(void *)(v76 - 8);
          if (!v86)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 40))(v83, v84, v76);
            goto LABEL_41;
          }
          (*(void (**)(char *, uint64_t))(v87 + 8))(v83, v76);
        }
        uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v83, v84, *(void *)(*(void *)(v88 - 8) + 64));
        goto LABEL_41;
      }
      (*(void (**)(char *, uint64_t))(v79 + 8))(v74, v76);
    }
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v74, v75, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_35;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_42;
  }
  uint64_t v13 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v23 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v8, v9, v23);
      goto LABEL_12;
    case 4u:
      uint64_t v16 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v8, v9, v16);
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&v8[*(int *)(v17 + 48)], &v9[*(int *)(v17 + 48)], 0x150uLL);
      uint64_t v18 = *(int *)(v17 + 64);
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      long long v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      long long v22 = *((_OWORD *)v20 + 3);
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
      *((_OWORD *)v19 + 3) = v22;
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      break;
  }
  uint64_t v24 = v10[5];
  uint64_t v25 = &v8[v24];
  uint64_t v26 = &v9[v24];
  uint64_t v27 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  uint64_t v28 = v10[6];
  uint64_t v29 = &v8[v28];
  uint64_t v30 = &v9[v28];
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  v29[4] = v30[4];
  uint64_t v31 = v10[7];
  uint64_t v32 = &v8[v31];
  uint64_t v33 = &v9[v31];
  long long v34 = *((_OWORD *)v33 + 1);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v34;
  *((void *)v32 + 4) = *((void *)v33 + 4);
  *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
  *(_OWORD *)&v8[v10[9]] = *(_OWORD *)&v9[v10[9]];
  v8[v10[10]] = v9[v10[10]];
  *(void *)&v8[v10[11]] = *(void *)&v9[v10[11]];
  *(void *)&v8[v10[12]] = *(void *)&v9[v10[12]];
  v8[v10[13]] = v9[v10[13]];
  uint64_t v35 = v10[14];
  long long v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  uint64_t v38 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
    __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
  }
  uint64_t v40 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v41 = *(int *)(v40 + 20);
  long long v42 = &v36[v41];
  long long v43 = &v37[v41];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v37[v41], 1, v38))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v42, v43, v38);
    __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v38);
  }
  v36[*(int *)(v40 + 24)] = v37[*(int *)(v40 + 24)];
  v8[v10[15]] = v9[v10[15]];
  *(void *)&v8[v10[16]] = *(void *)&v9[v10[16]];
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
LABEL_42:
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  *(void *)&v8[*(int *)(v89 + 28)] = *(void *)&v9[*(int *)(v89 + 28)];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptSubtitle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C370A3A4);
}

uint64_t sub_1C370A3A4()
{
  OUTLINED_FUNCTION_173();
  if (v2) {
    return OUTLINED_FUNCTION_46_0(*(void *)(v0 + 8));
  }
  OUTLINED_FUNCTION_32_37();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  uint64_t v4 = OUTLINED_FUNCTION_188(*(int *)(v1 + 52));
  return __swift_getEnumTagSinglePayload(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptSubtitle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C370A428);
}

void sub_1C370A428()
{
  OUTLINED_FUNCTION_5();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
    uint64_t v5 = OUTLINED_FUNCTION_85_5(*(int *)(v4 + 52));
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
}

uint64_t type metadata accessor for TranscriptSubtitle(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptSubtitle);
}

void type metadata completion function for TranscriptSubtitle()
{
  type metadata accessor for State<Participant?>();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for State<Participant?>()
{
  if (!lazy cache variable for type metadata for State<Participant?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Participant?);
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for State<Participant?>);
    }
  }
}

uint64_t associated type witness table accessor for View.Body : View in TranscriptSubtitle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in TranscriptView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for TranscriptList(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptList);
}

uint64_t sub_1C370A63C()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t outlined init with copy of TranscriptLabel(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_89_0();
  v5(v4);
  return a2;
}

uint64_t key path getter for EnvironmentValues.menuIndicatorVisibility : EnvironmentValues, serialized@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.menuIndicatorVisibility.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for EnvironmentValues.menuIndicatorVisibility : EnvironmentValues, serialized()
{
  return EnvironmentValues.menuIndicatorVisibility.setter();
}

uint64_t sub_1C370A714()
{
  return swift_deallocObject();
}

uint64_t sub_1C370A724()
{
  type metadata accessor for TranscriptView(0);
  OUTLINED_FUNCTION_1_6();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (OUTLINED_FUNCTION_43_28() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v0();
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t outlined init with take of TranscriptLabel(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_90();
  v5(v4);
  return a2;
}

uint64_t partial apply for closure #1 in TranscriptView.body.getter()
{
  uint64_t v1 = type metadata accessor for TranscriptView(0);
  uint64_t result = OUTLINED_FUNCTION_1_1(v1);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  if (*(unsigned char *)(v4 + 41) == 1) {
    return (*(uint64_t (**)(void))(v4 + 64))(0);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier>);
    lazy protocol witness table accessor for type ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type TranscriptView.ClipShapeModifier and conformance TranscriptView.ClipShapeModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>, TranscriptView.ClipShapeModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier>);
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type TranscriptList and conformance TranscriptList);
    lazy protocol witness table accessor for type TranscriptView.BackgroundModifier and conformance TranscriptView.BackgroundModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<TranscriptList, TranscriptView.BackgroundModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TranscriptView.BackgroundModifier and conformance TranscriptView.BackgroundModifier()
{
  unint64_t result = lazy protocol witness table cache variable for type TranscriptView.BackgroundModifier and conformance TranscriptView.BackgroundModifier;
  if (!lazy protocol witness table cache variable for type TranscriptView.BackgroundModifier and conformance TranscriptView.BackgroundModifier)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptView.BackgroundModifier and conformance TranscriptView.BackgroundModifier);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TranscriptView.ClipShapeModifier and conformance TranscriptView.ClipShapeModifier()
{
  unint64_t result = lazy protocol witness table cache variable for type TranscriptView.ClipShapeModifier and conformance TranscriptView.ClipShapeModifier;
  if (!lazy protocol witness table cache variable for type TranscriptView.ClipShapeModifier and conformance TranscriptView.ClipShapeModifier)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptView.ClipShapeModifier and conformance TranscriptView.ClipShapeModifier);
  }
  return result;
}

uint64_t sub_1C370AB88()
{
  OUTLINED_FUNCTION_24_0();
  type metadata accessor for TranscriptSubtitle(0);
  OUTLINED_FUNCTION_1_6();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = v4 + *(void *)(v5 + 64);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  OUTLINED_FUNCTION_1(v7);
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v10 = v1 + v4 + *(int *)(v0 + 60);
  uint64_t v11 = type metadata accessor for Participant(0);
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
  {
    type metadata accessor for Participant.State(0);
    switch(OUTLINED_FUNCTION_42_30())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_12_0();
        (*(void (**)(uint64_t))(v12 + 8))(v10);
        break;
      case 4u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_12_0();
        OUTLINED_FUNCTION_26_2();
        v32();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        OUTLINED_FUNCTION_44_26();
        if (*(void *)(v2 + 120) >= 2uLL) {
          __swift_destroy_boxed_opaque_existential_1(v2 + 96);
        }
        if (*(void *)(v2 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v10 + *(int *)(v6 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v13();
    uint64_t v14 = (id *)(v10 + *(int *)(v11 + 28));
    if (*v14)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    type metadata accessor for Date();
    if (!OUTLINED_FUNCTION_24_57())
    {
      OUTLINED_FUNCTION_48();
      uint64_t v15 = OUTLINED_FUNCTION_44();
      v16(v15);
    }
    type metadata accessor for Participant.CountdownInfo(0);
    if (!OUTLINED_FUNCTION_24_57())
    {
      OUTLINED_FUNCTION_48();
      uint64_t v17 = OUTLINED_FUNCTION_44();
      v18(v17);
    }
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  swift_release();
  uint64_t v19 = type metadata accessor for CaptionSectioner.Caption(0);
  if (!__swift_getEnumTagSinglePayload(v1 + v9, 1, v19))
  {
    unint64_t v20 = v1 + v9 + *(int *)(v19 + 20);
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_12_0();
        (*(void (**)(unint64_t))(v21 + 8))(v20);
        break;
      case 4u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_12_0();
        OUTLINED_FUNCTION_26_2();
        v33();
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        unint64_t v35 = v20 + *(int *)(v34 + 48);
        swift_bridgeObjectRelease();
        if (*(void *)(v35 + 120) >= 2uLL) {
          __swift_destroy_boxed_opaque_existential_1(v35 + 96);
        }
        if (*(void *)(v35 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v20 + *(int *)(v34 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v22();
    uint64_t v23 = (id *)(v20 + *(int *)(v11 + 28));
    if (*v23)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    type metadata accessor for Date();
    if (!OUTLINED_FUNCTION_15_80())
    {
      OUTLINED_FUNCTION_48();
      uint64_t v24 = OUTLINED_FUNCTION_14_81();
      v25(v24);
    }
    type metadata accessor for Participant.CountdownInfo(0);
    if (!OUTLINED_FUNCTION_15_80())
    {
      OUTLINED_FUNCTION_48();
      uint64_t v26 = OUTLINED_FUNCTION_14_81();
      v27(v26);
    }
    swift_release();
    OUTLINED_FUNCTION_48();
    uint64_t v29 = *(void (**)(void))(v28 + 8);
    OUTLINED_FUNCTION_17_65();
    v29();
    OUTLINED_FUNCTION_17_65();
    v29();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_22();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in TranscriptSubtitle.body.getter()
{
  uint64_t v0 = type metadata accessor for TranscriptSubtitle(0);
  OUTLINED_FUNCTION_1(v0);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  OUTLINED_FUNCTION_1_1(v1);
  uint64_t v2 = OUTLINED_FUNCTION_20_65();
  return closure #1 in closure #2 in TranscriptSubtitle.body.getter(v2, v3, v4, v5);
}

uint64_t outlined copy of CaptionsSizeToggleButton?(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return swift_retain();
  }
  return result;
}

uint64_t outlined consume of CaptionsSizeToggleButton?(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C370B230()
{
  type metadata accessor for TranscriptSubtitle(0);
  OUTLINED_FUNCTION_1_6();
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = v3 + *(int *)(v0 + 60);
  uint64_t v5 = type metadata accessor for Participant(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    type metadata accessor for Participant.State(0);
    switch(OUTLINED_FUNCTION_43_28())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_12_0();
        (*(void (**)(uint64_t))(v6 + 8))(v4);
        break;
      case 4u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_12_0();
        OUTLINED_FUNCTION_26_2();
        v14();
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v16 = v4 + *(int *)(v15 + 48);
        swift_bridgeObjectRelease();
        if (*(void *)(v16 + 120) >= 2uLL) {
          __swift_destroy_boxed_opaque_existential_1(v16 + 96);
        }
        if (*(void *)(v16 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v4 + *(int *)(v15 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v7();
    uint64_t v8 = (id *)(v4 + *(int *)(v5 + 28));
    if (*v8)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    type metadata accessor for Date();
    if (!OUTLINED_FUNCTION_24_57())
    {
      OUTLINED_FUNCTION_48();
      uint64_t v9 = OUTLINED_FUNCTION_44();
      v10(v9);
    }
    type metadata accessor for Participant.CountdownInfo(0);
    if (!OUTLINED_FUNCTION_24_57())
    {
      OUTLINED_FUNCTION_48();
      uint64_t v11 = OUTLINED_FUNCTION_44();
      v12(v11);
    }
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  swift_release();
  OUTLINED_FUNCTION_122();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #2 in TranscriptSubtitle.body.getter()
{
  uint64_t v1 = type metadata accessor for TranscriptSubtitle(0);
  OUTLINED_FUNCTION_1_1(v1);
  return (*(uint64_t (**)(void))(v0
                                           + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
                                           + 24))(0);
}

uint64_t sub_1C370B590@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityReduceTransparency.getter();
  *a1 = result & 1;
  return result;
}

uint64_t type metadata accessor for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptSubtitle.ParticipantBadgeModifier);
}

uint64_t sub_1C370B5E0()
{
  type metadata accessor for TranscriptSubtitle(0);
  OUTLINED_FUNCTION_1_23();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = v3 + *(void *)(v4 + 64);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  OUTLINED_FUNCTION_1(v6);
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v43 = *(void *)(v9 + 64);
  uint64_t v10 = type metadata accessor for ScrollViewProxy();
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v14 = v0 + v3 + *(int *)(v1 + 60);
  uint64_t v15 = (int *)type metadata accessor for Participant(0);
  if (!__swift_getEnumTagSinglePayload(v14, 1, (uint64_t)v15))
  {
    type metadata accessor for Participant.State(0);
    switch(OUTLINED_FUNCTION_51_23())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_12_0();
        (*(void (**)(uint64_t))(v16 + 8))(v14);
        break;
      case 4u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_12_0();
        OUTLINED_FUNCTION_26_2();
        v37();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        OUTLINED_FUNCTION_23_63();
        if (*(void *)(v8 + 120) >= 2uLL) {
          __swift_destroy_boxed_opaque_existential_1(v8 + 96);
        }
        if (*(void *)(v8 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (OUTLINED_FUNCTION_35_30())
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v17();
    uint64_t v18 = (id *)(v14 + v15[7]);
    if (*v18)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    type metadata accessor for Date();
    if (!OUTLINED_FUNCTION_32_3())
    {
      OUTLINED_FUNCTION_48();
      uint64_t v19 = OUTLINED_FUNCTION_31_0();
      v20(v19);
    }
    type metadata accessor for Participant.CountdownInfo(0);
    if (!OUTLINED_FUNCTION_32_3())
    {
      OUTLINED_FUNCTION_48();
      uint64_t v21 = OUTLINED_FUNCTION_31_0();
      v22(v21);
    }
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  swift_release();
  uint64_t v23 = v0 + v8;
  uint64_t v24 = type metadata accessor for CaptionSectioner.Caption(0);
  if (!__swift_getEnumTagSinglePayload(v0 + v8, 1, v24))
  {
    unint64_t v42 = v8;
    uint64_t v25 = v23 + *(int *)(v24 + 20);
    type metadata accessor for Participant.State(0);
    uint64_t v41 = v10;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_12_0();
        (*(void (**)(uint64_t))(v26 + 8))(v25);
        break;
      case 4u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_12_0();
        OUTLINED_FUNCTION_26_2();
        v38();
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v40 = v25 + *(int *)(v39 + 48);
        swift_bridgeObjectRelease();
        if (*(void *)(v40 + 120) >= 2uLL) {
          __swift_destroy_boxed_opaque_existential_1(v40 + 96);
        }
        if (*(void *)(v40 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v25 + *(int *)(v39 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v27();
    uint64_t v28 = (id *)(v25 + v15[7]);
    if (*v28)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v29 = v25 + v15[14];
    uint64_t v30 = type metadata accessor for Date();
    if (!__swift_getEnumTagSinglePayload(v29, 1, v30))
    {
      OUTLINED_FUNCTION_48();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    }
    uint64_t v32 = v29 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v32, 1, v30))
    {
      OUTLINED_FUNCTION_48();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v30);
    }
    swift_release();
    OUTLINED_FUNCTION_48();
    unint64_t v35 = *(void (**)(void))(v34 + 8);
    v35();
    ((void (*)(uint64_t, uint64_t))v35)(v23 + *(int *)(v24 + 28), v30);
    swift_release();
    OUTLINED_FUNCTION_37_35();
    swift_bridgeObjectRelease();
    uint64_t v10 = v41;
    unint64_t v8 = v42;
  }
  (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v0 + ((v8 + v43 + v13) & ~v13), v10);
  OUTLINED_FUNCTION_122();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TranscriptSubtitle(0);
  OUTLINED_FUNCTION_1(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = v7 + *(void *)(v8 + 64);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  OUTLINED_FUNCTION_1(v10);
  unint64_t v12 = (v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = type metadata accessor for ScrollViewProxy();
  OUTLINED_FUNCTION_1_1(v15);
  uint64_t v17 = v2 + ((v12 + v14 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return closure #2 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(a1, a2, v2 + v7, v2 + v12, v17);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>, TranscriptSubtitle.ContainerPadding> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>, TranscriptSubtitle.ContainerPadding> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>, TranscriptSubtitle.ContainerPadding> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>, TranscriptSubtitle.ContainerPadding>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type TranscriptSubtitle.ContainerPadding and conformance TranscriptSubtitle.ContainerPadding();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>, TranscriptSubtitle.ContainerPadding> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type TranscriptSubtitle.ParticipantBadgeModifier and conformance TranscriptSubtitle.ParticipantBadgeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle> and conformance TranscriptSubtitle.BackgroundViewModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, TranscriptSubtitle.BackgroundViewModifier<RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>> and conformance ZStack<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TranscriptSubtitle.ContainerPadding and conformance TranscriptSubtitle.ContainerPadding()
{
  unint64_t result = lazy protocol witness table cache variable for type TranscriptSubtitle.ContainerPadding and conformance TranscriptSubtitle.ContainerPadding;
  if (!lazy protocol witness table cache variable for type TranscriptSubtitle.ContainerPadding and conformance TranscriptSubtitle.ContainerPadding)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptSubtitle.ContainerPadding and conformance TranscriptSubtitle.ContainerPadding);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CaptionSectioner.Caption? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type CaptionSectioner.Caption? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type CaptionSectioner.Caption? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type CaptionSectioner.Caption and conformance CaptionSectioner.Caption);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CaptionSectioner.Caption? and conformance <A> A?);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in closure #2 in TranscriptSubtitle.body.getter()
{
  return closure #1 in closure #2 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(v0[2], v0[3], v0[6]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>>);
    lazy protocol witness table accessor for type ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _MaskEffect<LinearGradient> and conformance _MaskEffect<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>, _MaskEffect<LinearGradient>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>> and conformance ScrollView<A>);
    lazy protocol witness table accessor for type TranscriptSubtitle.TranscriptFrame and conformance TranscriptSubtitle.TranscriptFrame();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, TranscriptSubtitle.TranscriptFrame> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TranscriptSubtitle.TranscriptFrame and conformance TranscriptSubtitle.TranscriptFrame()
{
  unint64_t result = lazy protocol witness table cache variable for type TranscriptSubtitle.TranscriptFrame and conformance TranscriptSubtitle.TranscriptFrame;
  if (!lazy protocol witness table cache variable for type TranscriptSubtitle.TranscriptFrame and conformance TranscriptSubtitle.TranscriptFrame)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptSubtitle.TranscriptFrame and conformance TranscriptSubtitle.TranscriptFrame);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding>);
    lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type TranscriptSubtitle.SubtitlePadding and conformance TranscriptSubtitle.SubtitlePadding();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>, TranscriptSubtitle.SubtitlePadding> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>> and conformance HStack<A>);
    lazy protocol witness table accessor for type TranscriptSubtitle.PlaceHolderFrame and conformance TranscriptSubtitle.PlaceHolderFrame();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, TranscriptSubtitle.PlaceHolderFrame> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TranscriptSubtitle.PlaceHolderFrame and conformance TranscriptSubtitle.PlaceHolderFrame()
{
  unint64_t result = lazy protocol witness table cache variable for type TranscriptSubtitle.PlaceHolderFrame and conformance TranscriptSubtitle.PlaceHolderFrame;
  if (!lazy protocol witness table cache variable for type TranscriptSubtitle.PlaceHolderFrame and conformance TranscriptSubtitle.PlaceHolderFrame)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptSubtitle.PlaceHolderFrame and conformance TranscriptSubtitle.PlaceHolderFrame);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TranscriptSubtitle.SubtitlePadding and conformance TranscriptSubtitle.SubtitlePadding()
{
  unint64_t result = lazy protocol witness table cache variable for type TranscriptSubtitle.SubtitlePadding and conformance TranscriptSubtitle.SubtitlePadding;
  if (!lazy protocol witness table cache variable for type TranscriptSubtitle.SubtitlePadding and conformance TranscriptSubtitle.SubtitlePadding)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptSubtitle.SubtitlePadding and conformance TranscriptSubtitle.SubtitlePadding);
  }
  return result;
}

void *partial apply for closure #1 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(*(unsigned char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>(uint64_t a1)
{
  return a1;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C370C4CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C370C504()
{
  OUTLINED_FUNCTION_31();
  type metadata accessor for TranscriptLabel(0);
  OUTLINED_FUNCTION_1_23();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_4();
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (OUTLINED_FUNCTION_42_30() == 1)
  {
    type metadata accessor for RedactionReasons();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v9();
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + ((v2 + v4 + v8) & ~v8), v5);
  OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_28();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #2 in TranscriptLabel.body.getter()
{
  uint64_t v0 = type metadata accessor for TranscriptLabel(0);
  OUTLINED_FUNCTION_1(v0);
  uint64_t v1 = type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_1_1(v1);
  unint64_t v2 = (Swift::Int *)OUTLINED_FUNCTION_20_65();
  return closure #1 in closure #1 in closure #2 in TranscriptLabel.body.getter(v2, v3, v4);
}

uint64_t sub_1C370C6C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.menuIndicatorVisibility.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C370C6F4()
{
  return EnvironmentValues.menuIndicatorVisibility.setter();
}

uint64_t outlined copy of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a9)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t outlined consume of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = a9;
  if (a9)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t objectdestroyTm_22()
{
  type metadata accessor for TranscriptLabel(0);
  OUTLINED_FUNCTION_1_6();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (OUTLINED_FUNCTION_43_28() == 1)
  {
    type metadata accessor for RedactionReasons();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v0();
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in TranscriptLabel._debugCanvas.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_49_2();
  uint64_t v1 = type metadata accessor for TranscriptLabel(v0);
  OUTLINED_FUNCTION_1_1(v1);
  OUTLINED_FUNCTION_26_51();
  return closure #1 in TranscriptLabel._debugCanvas.getter();
}

void partial apply for closure #1 in closure #1 in TranscriptLabel._debugCanvas.getter(CGContext *a1)
{
  closure #1 in closure #1 in TranscriptLabel._debugCanvas.getter(a1, *(uint64_t **)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

void sub_1C370C910()
{
}

unint64_t lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.UnderlineColorAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineColorAttribute()
{
  unint64_t result = lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.UnderlineColorAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineColorAttribute;
  if (!lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.UnderlineColorAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineColorAttribute)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.UnderlineColorAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineColorAttribute);
  }
  return result;
}

uint64_t sub_1C370C978()
{
  return swift_release();
}

uint64_t sub_1C370C980(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1C370C98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return key path index equality operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(a1, a2, a3, &demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.UnderlineColorAttribute>) & 1;
}

uint64_t sub_1C370C9B0(uint64_t a1, uint64_t a2)
{
  return key path index hash operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(a1, a2, &demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.UnderlineColorAttribute>);
}

void *sub_1C370C9D0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_1C370C9DC()
{
}

unint64_t lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.UnderlineStyleAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineStyleAttribute()
{
  unint64_t result = lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.UnderlineStyleAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineStyleAttribute;
  if (!lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.UnderlineStyleAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineStyleAttribute)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.UnderlineStyleAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineStyleAttribute);
  }
  return result;
}

uint64_t sub_1C370CA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return key path index equality operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(a1, a2, a3, &demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.UnderlineStyleAttribute>) & 1;
}

uint64_t sub_1C370CA68(uint64_t a1, uint64_t a2)
{
  return key path index hash operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(a1, a2, &demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.UnderlineStyleAttribute>);
}

uint64_t key path setter for EnvironmentValues.accentColor : EnvironmentValues, serialized()
{
  return EnvironmentValues.accentColor.setter();
}

void *type metadata accessor for TranscriptView.ClipShapeModifier()
{
  return &unk_1F1EBC358;
}

void *type metadata accessor for TranscriptView.BackgroundModifier()
{
  return &unk_1F1EBC3D0;
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptList(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    uint64_t v9 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v9;
    *(_WORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *((_WORD *)a2 + 20);
    *(void *)(a1 + 48) = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    *(unsigned char *)(a1 + 58) = *((unsigned char *)a2 + 58);
    *(void *)(a1 + 64) = a2[8];
    uint64_t v10 = a2[11];
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    uint64_t v11 = a3[15];
    uint64_t v22 = (uint64_t)a2 + v11;
    uint64_t v23 = a1 + v11;
    *(void *)(a1 + 88) = v10;
    uint64_t v12 = type metadata accessor for DynamicTypeSize();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v21(v23, v22, v12);
    uint64_t v13 = a3[16];
    uint64_t v14 = a3[17];
    uint64_t v15 = v7 + v13;
    uint64_t v16 = (uint64_t)a2 + v13;
    *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
    *(void *)(v15 + 8) = *(void *)(v16 + 8);
    uint64_t v17 = (void *)(v7 + v14);
    uint64_t v18 = (uint64_t *)((char *)a2 + v14);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

uint64_t destroy for TranscriptList(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 60);
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 68);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ContentSizeCategory();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for TranscriptList(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_WORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v9 = a3[15];
  uint64_t v20 = a2 + v9;
  uint64_t v21 = a1 + v9;
  *(void *)(a1 + 88) = v8;
  uint64_t v10 = type metadata accessor for DynamicTypeSize();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v19(v21, v20, v10);
  uint64_t v11 = a3[16];
  uint64_t v12 = a3[17];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(unsigned char *)uint64_t v13 = *(unsigned char *)v14;
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  uint64_t v15 = (void *)(a1 + v12);
  uint64_t v16 = (void *)(a2 + v12);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *uint64_t v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TranscriptList(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v6 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = a3[15];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[16];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v16 = a3[17];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    outlined destroy of Environment<RedactionReasons>.Content(a1 + v16, &demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TranscriptList(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_WORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  long long v7 = *(_OWORD *)(a2 + 80);
  uint64_t v8 = a3[15];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v7;
  uint64_t v11 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for TranscriptList(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(a2 + 80);
  swift_release();
  uint64_t v7 = a3[15];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[16];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v14 = a3[17];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    outlined destroy of Environment<RedactionReasons>.Content(a1 + v14, &demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C370D5C4);
}

uint64_t sub_1C370D5C4()
{
  OUTLINED_FUNCTION_173();
  if (v3) {
    return OUTLINED_FUNCTION_46_0(*v1);
  }
  OUTLINED_FUNCTION_32_37();
  type metadata accessor for DynamicTypeSize();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v5 + 84) == v0)
  {
    uint64_t v6 = *(int *)(v2 + 60);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>);
    uint64_t v6 = *(int *)(v2 + 68);
  }
  uint64_t v7 = OUTLINED_FUNCTION_188(v6);
  return __swift_getEnumTagSinglePayload(v7, v8, v9);
}

uint64_t storeEnumTagSinglePayload for TranscriptList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C370D66C);
}

void sub_1C370D66C()
{
  OUTLINED_FUNCTION_5();
  if (v4)
  {
    void *v1 = (v0 - 1);
  }
  else
  {
    uint64_t v5 = v3;
    int v6 = v2;
    type metadata accessor for DynamicTypeSize();
    OUTLINED_FUNCTION_1_5();
    if (*(_DWORD *)(v7 + 84) == v6)
    {
      uint64_t v8 = *(int *)(v5 + 60);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>);
      uint64_t v8 = *(int *)(v5 + 68);
    }
    uint64_t v9 = OUTLINED_FUNCTION_85_5(v8);
    __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
}

void type metadata completion function for TranscriptList()
{
  type metadata accessor for DynamicTypeSize();
  if (v0 <= 0x3F)
  {
    _s7SwiftUI11EnvironmentV7ContentOyAA16RedactionReasonsV_GMaTm_0(319, &lazy cache variable for type metadata for Environment<ContentSizeCategory>.Content, MEMORY[0x1E4F3D5D8], MEMORY[0x1E4F3C648]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CaptionsSizeToggleButton.Configuration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C370D918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = OUTLINED_FUNCTION_50_23(result, a2);
        break;
    }
  }
  return result;
}

void *type metadata accessor for TranscriptSubtitle.ContainerPadding()
{
  return &unk_1F1EBC450;
}

unint64_t initializeBufferWithCopyOfBuffer for TranscriptSubtitle.ParticipantBadgeModifier(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(int *)(v6 + 20);
    uint64_t v10 = (char *)(a1 + v9);
    uint64_t v11 = (char *)(v3 + v9);
    uint64_t v12 = (int *)type metadata accessor for Participant(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v74 = v6;
      uint64_t v15 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          uint64_t v16 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v10, v11, v16);
          goto LABEL_20;
        case 4u:
          uint64_t v17 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v10, v11, v17);
          uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v18 = *(int *)(v76 + 48);
          uint64_t v19 = &v10[v18];
          uint64_t v20 = &v11[v18];
          *(_OWORD *)uint64_t v19 = *(_OWORD *)&v11[v18];
          uint64_t v21 = *(void *)&v11[v18 + 16];
          uint64_t v22 = *(void *)&v11[v18 + 24];
          *((void *)v19 + 2) = v21;
          *((void *)v19 + 3) = v22;
          *((_WORD *)v19 + 16) = *((_WORD *)v20 + 16);
          *((void *)v19 + 5) = *((void *)v20 + 5);
          v19[48] = v20[48];
          *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
          *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
          v19[88] = v20[88];
          v19[89] = v20[89];
          uint64_t v73 = v19 + 96;
          uint64_t v23 = *((void *)v20 + 15);
          swift_bridgeObjectRetain();
          if (v23)
          {
            if (v23 == 1)
            {
              uint64_t v24 = v19 + 96;
              uint64_t v25 = v20 + 96;
              size_t v26 = 209;
              goto LABEL_14;
            }
            uint64_t v28 = *((void *)v20 + 16);
            *((void *)v19 + 15) = v23;
            *((void *)v19 + 16) = v28;
            (**(void (***)(_OWORD *, uint64_t, uint64_t))(v23 - 8))(v73, (uint64_t)(v20 + 96), v23);
          }
          else
          {
            long long v27 = *((_OWORD *)v20 + 7);
            *uint64_t v73 = *((_OWORD *)v20 + 6);
            *((_OWORD *)v19 + 7) = v27;
            *((void *)v19 + 16) = *((void *)v20 + 16);
          }
          *((_DWORD *)v19 + 34) = *((_DWORD *)v20 + 34);
          long long v29 = *((_OWORD *)v20 + 10);
          *((_OWORD *)v19 + 9) = *((_OWORD *)v20 + 9);
          *((_OWORD *)v19 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v29;
          *((_OWORD *)v19 + 11) = *((_OWORD *)v20 + 11);
          v19[192] = v20[192];
          uint64_t v24 = v19 + 208;
          uint64_t v25 = v20 + 208;
          *((void *)v19 + 25) = *((void *)v20 + 25);
          size_t v26 = 97;
LABEL_14:
          memcpy(v24, v25, v26);
          uint64_t v30 = *((void *)v20 + 39);
          if (v30)
          {
            uint64_t v31 = *((void *)v20 + 40);
            uint64_t v32 = *((void *)v20 + 41);
            *((void *)v19 + 39) = v30;
            *((void *)v19 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v31;
            *((void *)v19 + 41) = v32;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v19 + 312) = *(_OWORD *)(v20 + 312);
            *((void *)v19 + 41) = *((void *)v20 + 41);
          }
          uint64_t v33 = *(int *)(v76 + 64);
          uint64_t v34 = &v10[v33];
          unint64_t v35 = &v11[v33];
          uint64_t v36 = *((void *)v35 + 1);
          if (v36)
          {
            *(void *)uint64_t v34 = *(void *)v35;
            *((void *)v34 + 1) = v36;
            uint64_t v37 = *((void *)v35 + 3);
            *((void *)v34 + 2) = *((void *)v35 + 2);
            *((void *)v34 + 3) = v37;
            v34[32] = v35[32];
            *(_OWORD *)(v34 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(v35 + 40);
            *((void *)v34 + 7) = *((void *)v35 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v38 = *((_OWORD *)v35 + 1);
            *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
            *((_OWORD *)v34 + 1) = v38;
            long long v39 = *((_OWORD *)v35 + 3);
            *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
            *((_OWORD *)v34 + 3) = v39;
          }
LABEL_20:
          swift_storeEnumTagMultiPayload();
LABEL_21:
          uint64_t v40 = v12[5];
          uint64_t v41 = &v10[v40];
          unint64_t v42 = &v11[v40];
          uint64_t v43 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
          uint64_t v44 = v12[6];
          uint64_t v45 = &v10[v44];
          uint64_t v46 = &v11[v44];
          v45[4] = v46[4];
          *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
          uint64_t v47 = v12[7];
          uint64_t v48 = &v10[v47];
          uint64_t v49 = &v11[v47];
          long long v50 = *(void **)v49;
          uint64_t v75 = v3;
          if (*(void *)v49)
          {
            uint64_t v51 = *((void *)v49 + 1);
            *(void *)uint64_t v48 = v50;
            *((void *)v48 + 1) = v51;
            v48[16] = v49[16];
            uint64_t v52 = *((void *)v49 + 4);
            *((void *)v48 + 3) = *((void *)v49 + 3);
            *((void *)v48 + 4) = v52;
            id v53 = v50;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v54 = *((_OWORD *)v49 + 1);
            *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
            *((_OWORD *)v48 + 1) = v54;
            *((void *)v48 + 4) = *((void *)v49 + 4);
          }
          *(void *)&v10[v12[8]] = *(void *)&v11[v12[8]];
          uint64_t v55 = v12[9];
          uint64_t v56 = &v10[v55];
          uint64_t v57 = &v11[v55];
          uint64_t v58 = *((void *)v57 + 1);
          *(void *)uint64_t v56 = *(void *)v57;
          *((void *)v56 + 1) = v58;
          v10[v12[10]] = v11[v12[10]];
          *(void *)&v10[v12[11]] = *(void *)&v11[v12[11]];
          uint64_t v59 = v12[12];
          uint64_t v60 = *(void **)&v11[v59];
          *(void *)&v10[v59] = v60;
          v10[v12[13]] = v11[v12[13]];
          uint64_t v77 = (uint64_t)v12;
          uint64_t v61 = v12[14];
          uint64_t v62 = &v10[v61];
          id v63 = &v11[v61];
          uint64_t v64 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v65 = v60;
          if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
          {
            uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
          }
          uint64_t v3 = v75;
          uint64_t v67 = type metadata accessor for Participant.CountdownInfo(0);
          uint64_t v68 = *(int *)(v67 + 20);
          uint64_t v69 = &v62[v68];
          uint64_t v70 = &v63[v68];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v63[v68], 1, v64))
          {
            uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v69, v70, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v64);
          }
          uint64_t v6 = v74;
          v62[*(int *)(v67 + 24)] = v63[*(int *)(v67 + 24)];
          v10[*(int *)(v77 + 60)] = v11[*(int *)(v77 + 60)];
          *(void *)&v10[*(int *)(v77 + 64)] = *(void *)&v11[*(int *)(v77 + 64)];
          swift_retain();
          __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v77);
          break;
        default:
          memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
          goto LABEL_21;
      }
    }
    *(unsigned char *)(a1 + *(int *)(v6 + 24)) = *(unsigned char *)(v3 + *(int *)(v6 + 24));
  }
  return a1;
}

uint64_t destroy for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1, uint64_t a2)
{
  outlined consume of Environment<CGFloat>.Content(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  int v5 = (int *)type metadata accessor for Participant(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v4, 1, (uint64_t)v5);
  if (!result)
  {
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v7 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
        break;
      case 4u:
        uint64_t v14 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v4, v14);
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v16 = v4 + *(int *)(v15 + 48);
        swift_bridgeObjectRelease();
        if (*(void *)(v16 + 120) >= 2uLL) {
          __swift_destroy_boxed_opaque_existential_1(v16 + 96);
        }
        if (*(void *)(v16 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v4 + *(int *)(v15 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    uint64_t v8 = v4 + v5[5];
    uint64_t v9 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v10 = (id *)(v4 + v5[7]);
    if (*v10)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v11 = v4 + v5[14];
    uint64_t v12 = type metadata accessor for Date();
    if (!__swift_getEnumTagSinglePayload(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = v11 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v13, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v13, v12);
    }
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(v4 + v8);
  uint64_t v11 = (int *)type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v74 = v4;
    uint64_t v13 = type metadata accessor for Participant.State(0);
    uint64_t v72 = a3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
        goto LABEL_18;
      case 4u:
        uint64_t v15 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
        uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v16 = *(int *)(v71 + 48);
        uint64_t v17 = &v9[v16];
        uint64_t v18 = &v10[v16];
        *(_OWORD *)uint64_t v17 = *(_OWORD *)&v10[v16];
        uint64_t v19 = *(void *)&v10[v16 + 16];
        uint64_t v20 = *(void *)&v10[v16 + 24];
        *((void *)v17 + 2) = v19;
        *((void *)v17 + 3) = v20;
        *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
        *((void *)v17 + 5) = *((void *)v18 + 5);
        v17[48] = v18[48];
        *(_OWORD *)(v17 + 56) = *(_OWORD *)(v18 + 56);
        *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
        v17[88] = v18[88];
        v17[89] = v18[89];
        uint64_t v21 = *((void *)v18 + 15);
        swift_bridgeObjectRetain();
        if (v21)
        {
          if (v21 == 1)
          {
            uint64_t v22 = v17 + 96;
            uint64_t v23 = v18 + 96;
            size_t v24 = 209;
            goto LABEL_12;
          }
          uint64_t v26 = *((void *)v18 + 16);
          *((void *)v17 + 15) = v21;
          *((void *)v17 + 16) = v26;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))((uint64_t)(v17 + 96), (uint64_t)(v18 + 96), v21);
        }
        else
        {
          long long v25 = *((_OWORD *)v18 + 7);
          *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
          *((_OWORD *)v17 + 7) = v25;
          *((void *)v17 + 16) = *((void *)v18 + 16);
        }
        *((_DWORD *)v17 + 34) = *((_DWORD *)v18 + 34);
        long long v27 = *((_OWORD *)v18 + 10);
        *((_OWORD *)v17 + 9) = *((_OWORD *)v18 + 9);
        *((_OWORD *)v17 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v27;
        *((_OWORD *)v17 + 11) = *((_OWORD *)v18 + 11);
        v17[192] = v18[192];
        uint64_t v22 = v17 + 208;
        uint64_t v23 = v18 + 208;
        *((void *)v17 + 25) = *((void *)v18 + 25);
        size_t v24 = 97;
LABEL_12:
        memcpy(v22, v23, v24);
        uint64_t v28 = *((void *)v18 + 39);
        if (v28)
        {
          uint64_t v29 = *((void *)v18 + 40);
          uint64_t v30 = *((void *)v18 + 41);
          *((void *)v17 + 39) = v28;
          *((void *)v17 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v29;
          *((void *)v17 + 41) = v30;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 312) = *(_OWORD *)(v18 + 312);
          *((void *)v17 + 41) = *((void *)v18 + 41);
        }
        uint64_t v31 = *(int *)(v71 + 64);
        uint64_t v32 = &v9[v31];
        uint64_t v33 = &v10[v31];
        uint64_t v34 = *((void *)v33 + 1);
        if (v34)
        {
          *(void *)uint64_t v32 = *(void *)v33;
          *((void *)v32 + 1) = v34;
          uint64_t v35 = *((void *)v33 + 3);
          *((void *)v32 + 2) = *((void *)v33 + 2);
          *((void *)v32 + 3) = v35;
          unsigned char v32[32] = v33[32];
          *(_OWORD *)(v32 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(v33 + 40);
          *((void *)v32 + 7) = *((void *)v33 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v36 = *((_OWORD *)v33 + 1);
          *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
          *((_OWORD *)v32 + 1) = v36;
          long long v37 = *((_OWORD *)v33 + 3);
          *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
          *((_OWORD *)v32 + 3) = v37;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        uint64_t v38 = v11[5];
        long long v39 = &v9[v38];
        uint64_t v40 = &v10[v38];
        uint64_t v41 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
        uint64_t v42 = v11[6];
        uint64_t v43 = &v9[v42];
        uint64_t v44 = &v10[v42];
        v43[4] = v44[4];
        *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
        uint64_t v45 = v11[7];
        uint64_t v46 = &v9[v45];
        uint64_t v47 = &v10[v45];
        uint64_t v48 = *(void **)v47;
        uint64_t v73 = a1;
        if (*(void *)v47)
        {
          uint64_t v49 = *((void *)v47 + 1);
          *(void *)uint64_t v46 = v48;
          *((void *)v46 + 1) = v49;
          v46[16] = v47[16];
          uint64_t v50 = *((void *)v47 + 4);
          *((void *)v46 + 3) = *((void *)v47 + 3);
          *((void *)v46 + 4) = v50;
          id v51 = v48;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v52 = *((_OWORD *)v47 + 1);
          *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
          *((_OWORD *)v46 + 1) = v52;
          *((void *)v46 + 4) = *((void *)v47 + 4);
        }
        *(void *)&v9[v11[8]] = *(void *)&v10[v11[8]];
        uint64_t v53 = v11[9];
        long long v54 = &v9[v53];
        uint64_t v55 = &v10[v53];
        uint64_t v56 = *((void *)v55 + 1);
        *(void *)long long v54 = *(void *)v55;
        *((void *)v54 + 1) = v56;
        v9[v11[10]] = v10[v11[10]];
        *(void *)&v9[v11[11]] = *(void *)&v10[v11[11]];
        uint64_t v57 = v11[12];
        uint64_t v58 = *(void **)&v10[v57];
        *(void *)&v9[v57] = v58;
        v9[v11[13]] = v10[v11[13]];
        uint64_t v59 = v11[14];
        uint64_t v60 = &v9[v59];
        uint64_t v61 = &v10[v59];
        uint64_t v62 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v63 = v58;
        if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
        {
          uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
        }
        a1 = v73;
        uint64_t v65 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v66 = *(int *)(v65 + 20);
        uint64_t v67 = &v60[v66];
        uint64_t v68 = &v61[v66];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v61[v66], 1, v62))
        {
          uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v67, v68, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v62);
        }
        a3 = v72;
        v60[*(int *)(v65 + 24)] = v61[*(int *)(v65 + 24)];
        v9[v11[15]] = v10[v11[15]];
        *(void *)&v9[v11[16]] = *(void *)&v10[v11[16]];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v11);
        uint64_t v4 = v74;
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_19;
    }
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(v4 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(v4 + v10);
  uint64_t v13 = (int *)type metadata accessor for Participant(0);
  LODWORD(v6) = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v13);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v13);
  if (!v6)
  {
    if (EnumTagSinglePayload)
    {
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      goto LABEL_7;
    }
    uint64_t v148 = a3;
    uint64_t v149 = v4;
    if (a1 != v4)
    {
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      uint64_t v18 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          uint64_t v19 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v11, v12, v19);
          goto LABEL_48;
        case 4u:
          uint64_t v31 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v11, v12, v31);
          uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v32 = *(int *)(v144 + 48);
          uint64_t v33 = &v11[v32];
          uint64_t v34 = &v12[v32];
          *(_OWORD *)uint64_t v33 = *(_OWORD *)&v12[v32];
          *((void *)v33 + 2) = *(void *)&v12[v32 + 16];
          uint64_t v35 = *(void *)&v12[v32 + 24];
          *((_WORD *)v33 + 16) = *((_WORD *)v34 + 16);
          *((void *)v33 + 3) = v35;
          *((void *)v33 + 5) = *((void *)v34 + 5);
          unsigned char v33[48] = v34[48];
          long long v36 = *(_OWORD *)(v34 + 72);
          long long v37 = *(_OWORD *)(v34 + 56);
          v33[88] = v34[88];
          *(_OWORD *)(v33 + 56) = v37;
          *(_OWORD *)(v33 + 72) = v36;
          v33[89] = v34[89];
          uint64_t v38 = *((void *)v34 + 15);
          swift_bridgeObjectRetain();
          if (v38)
          {
            if (v38 == 1)
            {
              long long v39 = v33 + 96;
              uint64_t v40 = v34 + 96;
              size_t v41 = 209;
              goto LABEL_42;
            }
            *((void *)v33 + 15) = v38;
            *((void *)v33 + 16) = *((void *)v34 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v38 - 8))((uint64_t)(v33 + 96), (uint64_t)(v34 + 96), v38);
          }
          else
          {
            long long v87 = *((_OWORD *)v34 + 6);
            long long v88 = *((_OWORD *)v34 + 7);
            *((void *)v33 + 16) = *((void *)v34 + 16);
            *((_OWORD *)v33 + 6) = v87;
            *((_OWORD *)v33 + 7) = v88;
          }
          *((_DWORD *)v33 + 34) = *((_DWORD *)v34 + 34);
          *((void *)v33 + 18) = *((void *)v34 + 18);
          *((void *)v33 + 19) = *((void *)v34 + 19);
          long long v89 = *((_OWORD *)v34 + 10);
          long long v90 = *((_OWORD *)v34 + 11);
          v33[192] = v34[192];
          *((_OWORD *)v33 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v89;
          *((_OWORD *)v33 + 11) = v90;
          *((void *)v33 + 25) = *((void *)v34 + 25);
          long long v39 = v33 + 208;
          uint64_t v40 = v34 + 208;
          size_t v41 = 97;
LABEL_42:
          memcpy(v39, v40, v41);
          uint64_t v91 = *((void *)v34 + 39);
          if (v91)
          {
            uint64_t v92 = *((void *)v34 + 40);
            *((void *)v33 + 39) = v91;
            *((void *)v33 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v92;
            *((void *)v33 + 41) = *((void *)v34 + 41);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v93 = *(_OWORD *)(v34 + 312);
            *((void *)v33 + 41) = *((void *)v34 + 41);
            *(_OWORD *)(v33 + 312) = v93;
          }
          uint64_t v94 = *(int *)(v144 + 64);
          uint64_t v95 = &v11[v94];
          uint64_t v96 = &v12[v94];
          if (*((void *)v96 + 1))
          {
            *(void *)uint64_t v95 = *(void *)v96;
            *((void *)v95 + 1) = *((void *)v96 + 1);
            *((void *)v95 + 2) = *((void *)v96 + 2);
            *((void *)v95 + 3) = *((void *)v96 + 3);
            v95[32] = v96[32];
            *((void *)v95 + 5) = *((void *)v96 + 5);
            *((void *)v95 + 6) = *((void *)v96 + 6);
            *((void *)v95 + 7) = *((void *)v96 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v97 = *(_OWORD *)v96;
            long long v98 = *((_OWORD *)v96 + 1);
            long long v99 = *((_OWORD *)v96 + 3);
            *((_OWORD *)v95 + 2) = *((_OWORD *)v96 + 2);
            *((_OWORD *)v95 + 3) = v99;
            *(_OWORD *)uint64_t v95 = v97;
            *((_OWORD *)v95 + 1) = v98;
          }
LABEL_48:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
          break;
      }
    }
    uint64_t v100 = v13[5];
    uint64_t v101 = &v11[v100];
    uint64_t v102 = &v12[v100];
    uint64_t v103 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 24))(v101, v102, v103);
    uint64_t v104 = v13[6];
    uint64_t v105 = &v11[v104];
    uint64_t v106 = &v12[v104];
    char *v105 = *v106;
    v105[1] = v106[1];
    v105[2] = v106[2];
    uint64_t v105[3] = v106[3];
    v105[4] = v106[4];
    uint64_t v107 = v13[7];
    uint64_t v108 = (uint64_t)&v11[v107];
    uint64_t v109 = &v12[v107];
    uint64_t v110 = *(void **)&v11[v107];
    uint64_t v111 = *(void **)&v12[v107];
    if (v110)
    {
      if (v111)
      {
        *(void *)uint64_t v108 = v111;
        id v112 = v111;

        uint64_t v113 = *((void *)v109 + 1);
        *(unsigned char *)(v108 + 16) = v109[16];
        *(void *)(v108 + 8) = v113;
        *(void *)(v108 + 24) = *((void *)v109 + 3);
        *(void *)(v108 + 32) = *((void *)v109 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        outlined destroy of Participant.RemoteIdentifiers(v108);
        uint64_t v116 = *((void *)v109 + 4);
        long long v117 = *((_OWORD *)v109 + 1);
        *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
        *(_OWORD *)(v108 + 16) = v117;
        *(void *)(v108 + 32) = v116;
      }
    }
    else if (v111)
    {
      *(void *)uint64_t v108 = v111;
      uint64_t v114 = *((void *)v109 + 1);
      *(unsigned char *)(v108 + 16) = v109[16];
      *(void *)(v108 + 8) = v114;
      *(void *)(v108 + 24) = *((void *)v109 + 3);
      *(void *)(v108 + 32) = *((void *)v109 + 4);
      id v115 = v111;
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v118 = *(_OWORD *)v109;
      long long v119 = *((_OWORD *)v109 + 1);
      *(void *)(v108 + 32) = *((void *)v109 + 4);
      *(_OWORD *)uint64_t v108 = v118;
      *(_OWORD *)(v108 + 16) = v119;
    }
    *(void *)&v11[v13[8]] = *(void *)&v12[v13[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v120 = v13[9];
    __C::CGRect v121 = &v11[v120];
    CGRect v122 = &v12[v120];
    *(void *)__C::CGRect v121 = *(void *)v122;
    *((void *)v121 + 1) = *((void *)v122 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v11[v13[10]] = v12[v13[10]];
    *(void *)&v11[v13[11]] = *(void *)&v12[v13[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v123 = v13[12];
    CGRect v124 = *(void **)&v11[v123];
    CGRect v125 = *(void **)&v12[v123];
    *(void *)&v11[v123] = v125;
    id v126 = v125;

    v11[v13[13]] = v12[v13[13]];
    uint64_t v127 = v13[14];
    char v128 = &v11[v127];
    char v129 = &v12[v127];
    uint64_t v130 = type metadata accessor for Date();
    LODWORD(v124) = __swift_getEnumTagSinglePayload((uint64_t)v128, 1, v130);
    int v131 = __swift_getEnumTagSinglePayload((uint64_t)v129, 1, v130);
    if (v124)
    {
      if (!v131)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
        __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v130);
        goto LABEL_62;
      }
    }
    else
    {
      uint64_t v132 = *(void *)(v130 - 8);
      if (!v131)
      {
        (*(void (**)(char *, char *, uint64_t))(v132 + 24))(v128, v129, v130);
LABEL_62:
        uint64_t v134 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v135 = *(int *)(v134 + 20);
        uint64_t v136 = &v128[v135];
        uint64_t v145 = v129;
        __int16 v137 = &v129[v135];
        int v138 = __swift_getEnumTagSinglePayload((uint64_t)&v128[v135], 1, v130);
        int v139 = __swift_getEnumTagSinglePayload((uint64_t)v137, 1, v130);
        if (v138)
        {
          if (!v139)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v136, v137, v130);
            __swift_storeEnumTagSinglePayload((uint64_t)v136, 0, 1, v130);
LABEL_68:
            a3 = v148;
            v128[*(int *)(v134 + 24)] = v145[*(int *)(v134 + 24)];
            v11[v13[15]] = v12[v13[15]];
            *(void *)&v11[v13[16]] = *(void *)&v12[v13[16]];
            swift_retain();
            swift_release();
LABEL_69:
            uint64_t v4 = v149;
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v140 = *(void *)(v130 - 8);
          if (!v139)
          {
            (*(void (**)(char *, char *, uint64_t))(v140 + 24))(v136, v137, v130);
            goto LABEL_68;
          }
          (*(void (**)(char *, uint64_t))(v140 + 8))(v136, v130);
        }
        uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v136, v137, *(void *)(*(void *)(v141 - 8) + 64));
        goto LABEL_68;
      }
      (*(void (**)(char *, uint64_t))(v132 + 8))(v128, v130);
    }
    uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v128, v129, *(void *)(*(void *)(v133 - 8) + 64));
    goto LABEL_62;
  }
  if (!EnumTagSinglePayload)
  {
    uint64_t v149 = v4;
    uint64_t v15 = type metadata accessor for Participant.State(0);
    uint64_t v147 = a3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v16 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v11, v12, v16);
        goto LABEL_28;
      case 4u:
        uint64_t v20 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v11, v12, v20);
        uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v21 = *(int *)(v143 + 48);
        uint64_t v22 = &v11[v21];
        uint64_t v23 = &v12[v21];
        *(_OWORD *)uint64_t v22 = *(_OWORD *)&v12[v21];
        *((void *)v22 + 2) = *(void *)&v12[v21 + 16];
        uint64_t v24 = *(void *)&v12[v21 + 24];
        *((_WORD *)v22 + 16) = *((_WORD *)v23 + 16);
        *((void *)v22 + 3) = v24;
        *((void *)v22 + 5) = *((void *)v23 + 5);
        v22[48] = v23[48];
        long long v25 = *(_OWORD *)(v23 + 72);
        long long v26 = *(_OWORD *)(v23 + 56);
        v22[88] = v23[88];
        *(_OWORD *)(v22 + 56) = v26;
        *(_OWORD *)(v22 + 72) = v25;
        v22[89] = v23[89];
        uint64_t v27 = *((void *)v23 + 15);
        swift_bridgeObjectRetain();
        if (v27)
        {
          if (v27 == 1)
          {
            uint64_t v28 = v22 + 96;
            uint64_t v29 = v23 + 96;
            size_t v30 = 209;
            goto LABEL_22;
          }
          *((void *)v22 + 15) = v27;
          *((void *)v22 + 16) = *((void *)v23 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))((uint64_t)(v22 + 96), (uint64_t)(v23 + 96), v27);
        }
        else
        {
          long long v42 = *((_OWORD *)v23 + 6);
          long long v43 = *((_OWORD *)v23 + 7);
          *((void *)v22 + 16) = *((void *)v23 + 16);
          *((_OWORD *)v22 + 6) = v42;
          *((_OWORD *)v22 + 7) = v43;
        }
        *((_DWORD *)v22 + 34) = *((_DWORD *)v23 + 34);
        *((void *)v22 + 18) = *((void *)v23 + 18);
        *((void *)v22 + 19) = *((void *)v23 + 19);
        long long v44 = *((_OWORD *)v23 + 10);
        long long v45 = *((_OWORD *)v23 + 11);
        v22[192] = v23[192];
        *((_OWORD *)v22 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v44;
        *((_OWORD *)v22 + 11) = v45;
        *((void *)v22 + 25) = *((void *)v23 + 25);
        uint64_t v28 = v22 + 208;
        uint64_t v29 = v23 + 208;
        size_t v30 = 97;
LABEL_22:
        memcpy(v28, v29, v30);
        uint64_t v46 = *((void *)v23 + 39);
        if (v46)
        {
          uint64_t v47 = *((void *)v23 + 40);
          *((void *)v22 + 39) = v46;
          *((void *)v22 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v47;
          *((void *)v22 + 41) = *((void *)v23 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v48 = *(_OWORD *)(v23 + 312);
          *((void *)v22 + 41) = *((void *)v23 + 41);
          *(_OWORD *)(v22 + 312) = v48;
        }
        uint64_t v49 = *(int *)(v143 + 64);
        uint64_t v50 = &v11[v49];
        id v51 = &v12[v49];
        if (*((void *)v51 + 1))
        {
          *(void *)uint64_t v50 = *(void *)v51;
          *((void *)v50 + 1) = *((void *)v51 + 1);
          *((void *)v50 + 2) = *((void *)v51 + 2);
          *((void *)v50 + 3) = *((void *)v51 + 3);
          v50[32] = v51[32];
          *((void *)v50 + 5) = *((void *)v51 + 5);
          *((void *)v50 + 6) = *((void *)v51 + 6);
          *((void *)v50 + 7) = *((void *)v51 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v52 = *(_OWORD *)v51;
          long long v53 = *((_OWORD *)v51 + 1);
          long long v54 = *((_OWORD *)v51 + 3);
          *((_OWORD *)v50 + 2) = *((_OWORD *)v51 + 2);
          *((_OWORD *)v50 + 3) = v54;
          *(_OWORD *)uint64_t v50 = v52;
          *((_OWORD *)v50 + 1) = v53;
        }
LABEL_28:
        swift_storeEnumTagMultiPayload();
LABEL_29:
        uint64_t v55 = v13[5];
        uint64_t v56 = &v11[v55];
        uint64_t v57 = &v12[v55];
        uint64_t v58 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
        uint64_t v59 = v13[6];
        uint64_t v60 = &v11[v59];
        uint64_t v61 = &v12[v59];
        int v62 = *(_DWORD *)v61;
        unsigned char v60[4] = v61[4];
        *(_DWORD *)uint64_t v60 = v62;
        uint64_t v63 = v13[7];
        uint64_t v64 = &v11[v63];
        uint64_t v65 = &v12[v63];
        uint64_t v66 = *(void **)v65;
        uint64_t v146 = a1;
        if (*(void *)v65)
        {
          *(void *)uint64_t v64 = v66;
          uint64_t v67 = *((void *)v65 + 1);
          v64[16] = v65[16];
          *((void *)v64 + 1) = v67;
          *((void *)v64 + 3) = *((void *)v65 + 3);
          *((void *)v64 + 4) = *((void *)v65 + 4);
          id v68 = v66;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v69 = *(_OWORD *)v65;
          long long v70 = *((_OWORD *)v65 + 1);
          *((void *)v64 + 4) = *((void *)v65 + 4);
          *(_OWORD *)uint64_t v64 = v69;
          *((_OWORD *)v64 + 1) = v70;
        }
        *(void *)&v11[v13[8]] = *(void *)&v12[v13[8]];
        uint64_t v71 = v13[9];
        uint64_t v72 = &v11[v71];
        uint64_t v73 = &v12[v71];
        *(void *)uint64_t v72 = *(void *)v73;
        *((void *)v72 + 1) = *((void *)v73 + 1);
        v11[v13[10]] = v12[v13[10]];
        *(void *)&v11[v13[11]] = *(void *)&v12[v13[11]];
        uint64_t v74 = v13[12];
        uint64_t v75 = *(void **)&v12[v74];
        *(void *)&v11[v74] = v75;
        v11[v13[13]] = v12[v13[13]];
        uint64_t v76 = v13[14];
        uint64_t v77 = &v11[v76];
        int v78 = &v12[v76];
        uint64_t v79 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v80 = v75;
        if (__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
          __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v79);
        }
        a1 = v146;
        uint64_t v82 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v83 = *(int *)(v82 + 20);
        uint64_t v84 = &v77[v83];
        int v85 = &v78[v83];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v78[v83], 1, v79))
        {
          uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v84, v85, v79);
          __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v79);
        }
        a3 = v147;
        v77[*(int *)(v82 + 24)] = v78[*(int *)(v82 + 24)];
        v11[v13[15]] = v12[v13[15]];
        *(void *)&v11[v13[16]] = *(void *)&v12[v13[16]];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, (uint64_t)v13);
        break;
      default:
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
        goto LABEL_29;
    }
    goto LABEL_69;
  }
LABEL_7:
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_70:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(v4 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  char v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  char v9 = (int *)type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for Participant.State(0);
    uint64_t v42 = v3;
    uint64_t v43 = v4;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v19 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v7, v8, v19);
        goto LABEL_7;
      case 4u:
        uint64_t v12 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v7[*(int *)(v13 + 48)], &v8[*(int *)(v13 + 48)], 0x150uLL);
        uint64_t v14 = *(int *)(v13 + 64);
        uint64_t v15 = &v7[v14];
        uint64_t v16 = &v8[v14];
        long long v17 = *((_OWORD *)v16 + 1);
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v17;
        long long v18 = *((_OWORD *)v16 + 3);
        *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
        *((_OWORD *)v15 + 3) = v18;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
    uint64_t v20 = v9[5];
    uint64_t v21 = &v7[v20];
    uint64_t v22 = &v8[v20];
    uint64_t v23 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    uint64_t v24 = v9[6];
    long long v25 = &v7[v24];
    long long v26 = &v8[v24];
    *(_DWORD *)long long v25 = *(_DWORD *)v26;
    v25[4] = v26[4];
    uint64_t v27 = v9[7];
    uint64_t v28 = &v7[v27];
    uint64_t v29 = &v8[v27];
    long long v30 = *((_OWORD *)v29 + 1);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v30;
    *((void *)v28 + 4) = *((void *)v29 + 4);
    *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
    *(_OWORD *)&v7[v9[9]] = *(_OWORD *)&v8[v9[9]];
    v7[v9[10]] = v8[v9[10]];
    *(void *)&v7[v9[11]] = *(void *)&v8[v9[11]];
    *(void *)&v7[v9[12]] = *(void *)&v8[v9[12]];
    v7[v9[13]] = v8[v9[13]];
    uint64_t v31 = v9[14];
    uint64_t v32 = &v7[v31];
    uint64_t v33 = &v8[v31];
    uint64_t v34 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
    }
    uint64_t v36 = type metadata accessor for Participant.CountdownInfo(0);
    uint64_t v37 = *(int *)(v36 + 20);
    uint64_t v38 = &v32[v37];
    long long v39 = &v33[v37];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v33[v37], 1, v34))
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v38, v39, v34);
      __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v34);
    }
    v32[*(int *)(v36 + 24)] = v33[*(int *)(v36 + 24)];
    v7[v9[15]] = v8[v9[15]];
    *(void *)&v7[v9[16]] = *(void *)&v8[v9[16]];
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
    uint64_t v3 = v42;
    uint64_t v4 = v43;
  }
  *(unsigned char *)(a1 + *(int *)(v3 + 24)) = *(unsigned char *)(v4 + *(int *)(v3 + 24));
  return a1;
}

uint64_t assignWithTake for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)v4 + v10;
  uint64_t v13 = (int *)type metadata accessor for Participant(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v13);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v13);
  if (!EnumTagSinglePayload)
  {
    if (v15)
    {
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      goto LABEL_6;
    }
    if ((uint64_t *)a1 != v4)
    {
      _s15ConversationKit11ParticipantV5StateOWOhTm_3();
      uint64_t v18 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          uint64_t v55 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v11, v12, v55);
          goto LABEL_23;
        case 4u:
          uint64_t v48 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v11, v12, v48);
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          memcpy(&v11[*(int *)(v49 + 48)], &v12[*(int *)(v49 + 48)], 0x150uLL);
          uint64_t v50 = *(int *)(v49 + 64);
          id v51 = &v11[v50];
          long long v52 = &v12[v50];
          long long v53 = *((_OWORD *)v52 + 1);
          *(_OWORD *)id v51 = *(_OWORD *)v52;
          *((_OWORD *)v51 + 1) = v53;
          long long v54 = *((_OWORD *)v52 + 3);
          *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
          *((_OWORD *)v51 + 3) = v54;
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
          break;
      }
    }
    uint64_t v96 = v4;
    uint64_t v56 = v13[5];
    uint64_t v57 = &v11[v56];
    uint64_t v58 = &v12[v56];
    uint64_t v59 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 40))(v57, v58, v59);
    uint64_t v60 = v13[6];
    uint64_t v61 = &v11[v60];
    int v62 = &v12[v60];
    *uint64_t v61 = *v62;
    v61[1] = v62[1];
    v61[2] = v62[2];
    v61[3] = v62[3];
    uint64_t v61[4] = v62[4];
    uint64_t v63 = v13[7];
    uint64_t v64 = (uint64_t)&v11[v63];
    uint64_t v65 = &v12[v63];
    uint64_t v66 = *(void **)&v11[v63];
    if (v66)
    {
      if (*(void *)v65)
      {
        *(void *)uint64_t v64 = *(void *)v65;

        *(void *)(v64 + 8) = *((void *)v65 + 1);
        *(unsigned char *)(v64 + 16) = v65[16];
        uint64_t v67 = *((void *)v65 + 4);
        *(void *)(v64 + 24) = *((void *)v65 + 3);
        *(void *)(v64 + 32) = v67;
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      outlined destroy of Participant.RemoteIdentifiers(v64);
    }
    long long v68 = *((_OWORD *)v65 + 1);
    *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
    *(_OWORD *)(v64 + 16) = v68;
    *(void *)(v64 + 32) = *((void *)v65 + 4);
LABEL_29:
    *(void *)&v11[v13[8]] = *(void *)&v12[v13[8]];
    swift_bridgeObjectRelease();
    uint64_t v69 = v13[9];
    long long v70 = &v11[v69];
    uint64_t v71 = &v12[v69];
    uint64_t v73 = *(void *)v71;
    uint64_t v72 = *((void *)v71 + 1);
    *(void *)long long v70 = v73;
    *((void *)v70 + 1) = v72;
    swift_bridgeObjectRelease();
    v11[v13[10]] = v12[v13[10]];
    *(void *)&v11[v13[11]] = *(void *)&v12[v13[11]];
    swift_bridgeObjectRelease();
    uint64_t v74 = v13[12];
    uint64_t v75 = *(void **)&v11[v74];
    *(void *)&v11[v74] = *(void *)&v12[v74];

    v11[v13[13]] = v12[v13[13]];
    uint64_t v76 = v13[14];
    uint64_t v77 = &v11[v76];
    int v78 = &v12[v76];
    uint64_t v79 = type metadata accessor for Date();
    int v80 = __swift_getEnumTagSinglePayload((uint64_t)v77, 1, v79);
    __src = v78;
    int v81 = __swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79);
    uint64_t v95 = a3;
    if (v80)
    {
      if (!v81)
      {
        uint64_t v82 = v78;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
        __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v79);
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v83 = *(void *)(v79 - 8);
      if (!v81)
      {
        uint64_t v82 = v78;
        (*(void (**)(char *, char *, uint64_t))(v83 + 40))(v77, v78, v79);
LABEL_35:
        uint64_t v85 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v86 = *(int *)(v85 + 20);
        long long v87 = &v77[v86];
        long long v88 = &v82[v86];
        int v89 = __swift_getEnumTagSinglePayload((uint64_t)&v77[v86], 1, v79);
        int v90 = __swift_getEnumTagSinglePayload((uint64_t)v88, 1, v79);
        if (v89)
        {
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v87, v88, v79);
            __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, v79);
LABEL_41:
            v77[*(int *)(v85 + 24)] = __src[*(int *)(v85 + 24)];
            v11[v13[15]] = v12[v13[15]];
            *(void *)&v11[v13[16]] = *(void *)&v12[v13[16]];
            swift_release();
LABEL_42:
            a3 = v95;
            uint64_t v4 = v96;
            goto LABEL_43;
          }
        }
        else
        {
          uint64_t v91 = *(void *)(v79 - 8);
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v91 + 40))(v87, v88, v79);
            goto LABEL_41;
          }
          (*(void (**)(char *, uint64_t))(v91 + 8))(v87, v79);
        }
        uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v87, v88, *(void *)(*(void *)(v92 - 8) + 64));
        goto LABEL_41;
      }
      (*(void (**)(char *, uint64_t))(v83 + 8))(v77, v79);
    }
    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    uint64_t v82 = v78;
    memcpy(v77, v78, *(void *)(*(void *)(v84 - 8) + 64));
    goto LABEL_35;
  }
  if (!v15)
  {
    uint64_t v16 = type metadata accessor for Participant.State(0);
    uint64_t v95 = a3;
    uint64_t v96 = v4;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v26 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v11, v12, v26);
        goto LABEL_12;
      case 4u:
        uint64_t v19 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v11, v12, v19);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v11[*(int *)(v20 + 48)], &v12[*(int *)(v20 + 48)], 0x150uLL);
        uint64_t v21 = *(int *)(v20 + 64);
        uint64_t v22 = &v11[v21];
        uint64_t v23 = &v12[v21];
        long long v24 = *((_OWORD *)v23 + 1);
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v24;
        long long v25 = *((_OWORD *)v23 + 3);
        *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
        *((_OWORD *)v22 + 3) = v25;
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
        break;
    }
    uint64_t v27 = v13[5];
    uint64_t v28 = &v11[v27];
    uint64_t v29 = &v12[v27];
    uint64_t v30 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    uint64_t v31 = v13[6];
    uint64_t v32 = &v11[v31];
    uint64_t v33 = &v12[v31];
    *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    uint64_t v34 = v13[7];
    uint64_t v35 = &v11[v34];
    uint64_t v36 = &v12[v34];
    long long v37 = *((_OWORD *)v36 + 1);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v37;
    *((void *)v35 + 4) = *((void *)v36 + 4);
    *(void *)&v11[v13[8]] = *(void *)&v12[v13[8]];
    *(_OWORD *)&v11[v13[9]] = *(_OWORD *)&v12[v13[9]];
    v11[v13[10]] = v12[v13[10]];
    *(void *)&v11[v13[11]] = *(void *)&v12[v13[11]];
    *(void *)&v11[v13[12]] = *(void *)&v12[v13[12]];
    v11[v13[13]] = v12[v13[13]];
    uint64_t v38 = v13[14];
    long long v39 = &v11[v38];
    uint64_t v40 = &v12[v38];
    uint64_t v41 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
    }
    uint64_t v43 = type metadata accessor for Participant.CountdownInfo(0);
    uint64_t v44 = *(int *)(v43 + 20);
    long long v45 = &v39[v44];
    uint64_t v46 = &v40[v44];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v40[v44], 1, v41))
    {
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v45, v46, v41);
      __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v41);
    }
    v39[*(int *)(v43 + 24)] = v40[*(int *)(v43 + 24)];
    v11[v13[15]] = v12[v13[15]];
    *(void *)&v11[v13[16]] = *(void *)&v12[v13[16]];
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, (uint64_t)v13);
    goto LABEL_42;
  }
LABEL_6:
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_43:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *((unsigned char *)v4 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3710ED0);
}

uint64_t sub_1C3710ED0(uint64_t a1, int a2)
{
  if (a2 == 254)
  {
    unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
    if (v3 > 1) {
      return (v3 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    OUTLINED_FUNCTION_32_37();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    uint64_t v5 = OUTLINED_FUNCTION_188(*(int *)(v2 + 20));
    return __swift_getEnumTagSinglePayload(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3710F60);
}

uint64_t sub_1C3710F60(uint64_t result, char a2, int a3, uint64_t a4)
{
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -a2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    uint64_t v5 = OUTLINED_FUNCTION_85_5(*(int *)(a4 + 20));
    return __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
  return result;
}

void type metadata completion function for TranscriptSubtitle.ParticipantBadgeModifier()
{
  _s7SwiftUI11EnvironmentV7ContentOyAA16RedactionReasonsV_GMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Participant?, type metadata accessor for Participant, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void _s7SwiftUI11EnvironmentV7ContentOyAA16RedactionReasonsV_GMaTm_0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata completion function for TranscriptSubtitle.BackgroundViewModifier()
{
  uint64_t result = type metadata accessor for State();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptSubtitle.BackgroundViewModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v7 & 0xF8 | 7;
  uint64_t v9 = ~v8;
  uint64_t v10 = *(void *)(v6 + 64) + 7;
  if ((v7 & 0x1000F8) != 0 || (v10 & 0xFFFFFFFFFFFFFFF8) + (((v7 & 0xF8) + 16) & ~v8) + 8 > 0x18)
  {
    uint64_t v12 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v12 + ((v8 + 16) & v9);
  }
  else
  {
    uint64_t v13 = *(void *)a2;
    char v14 = *(unsigned char *)(a2 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)a2, v14);
    *(void *)a1 = v13;
    *(unsigned char *)(a1 + 8) = v14;
    uint64_t v15 = (a2 + 16) & v9;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))((a1 + 16) & v9, v15, v5);
    *(void *)((v10 + ((a1 + 16) & v9)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v10 + v15) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptSubtitle.BackgroundViewModifier(uint64_t a1, uint64_t a2)
{
  outlined consume of Environment<CGFloat>.Content(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80) & 0xF8 | 7;
  (*(void (**)(uint64_t))(v4 + 8))((a1 + v5 + 9) & ~v5);
  return swift_release();
}

uint64_t initializeWithCopy for TranscriptSubtitle.BackgroundViewModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v11 = v10 + 16;
  uint64_t v12 = v10 + 16 + a1;
  unint64_t v13 = ~v10 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = v12 & v13;
  unint64_t v15 = (v11 + a2) & v13;
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))(v12 & v13, v15);
  *(void *)((*(void *)(v9 + 48) + 7 + v14) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 48) + 7 + v15) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TranscriptSubtitle.BackgroundViewModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(_DWORD *)(v10 + 80) & 0xF8;
  uint64_t v13 = v12 + 16;
  uint64_t v14 = v12 + 16 + a1;
  unint64_t v15 = ~v12 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v14 & v15;
  unint64_t v17 = (v13 + a2) & v15;
  (*(void (**)(unint64_t, unint64_t))(v10 + 24))(v14 & v15, v17);
  *(void *)((*(void *)(v11 + 40) + 7 + v16) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v11 + 40)
                                                                                       + 7
                                                                                       + v17) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for TranscriptSubtitle.BackgroundViewModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v7 = v6 + 16;
  uint64_t v8 = v6 + 16 + a1;
  unint64_t v9 = ~v6 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 & v9;
  unint64_t v11 = (v7 + a2) & v9;
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(v8 & v9, v11);
  *(void *)((*(void *)(v5 + 32) + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for TranscriptSubtitle.BackgroundViewModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(_DWORD *)(v10 + 80) & 0xF8;
  uint64_t v13 = v12 + 16;
  uint64_t v14 = v12 + 16 + a1;
  unint64_t v15 = ~v12 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v14 & v15;
  unint64_t v17 = ((unint64_t)a2 + v13) & v15;
  (*(void (**)(unint64_t, unint64_t))(v10 + 40))(v14 & v15, v17);
  *(void *)((*(void *)(v11 + 24) + 7 + v16) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v11 + 24)
                                                                                       + 7
                                                                                       + v17) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptSubtitle.BackgroundViewModifier(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v9 = v8 | 7;
  uint64_t v10 = *(void *)(*(void *)(v4 - 8) + 64) + 7;
  if (v7 < a2)
  {
    unint64_t v11 = (v10 & 0xFFFFFFFFFFFFFFF8) + ((v8 + 16) & ~v9) + 8;
    unsigned int v12 = a2 - v7;
    uint64_t v13 = v11 & 0xFFFFFFF8;
    if ((v11 & 0xFFFFFFF8) != 0) {
      unsigned int v14 = 2;
    }
    else {
      unsigned int v14 = v12 + 1;
    }
    if (v14 >= 0x10000) {
      unsigned int v15 = 4;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v14 < 0x100) {
      unsigned int v15 = 1;
    }
    if (v14 >= 2) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)a1 + v11);
        if (!v17) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)a1 + v11);
        if (v17) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C3711834);
      case 4:
        int v17 = *(_DWORD *)((char *)a1 + v11);
        if (!v17) {
          break;
        }
LABEL_22:
        int v19 = v17 - 1;
        if (v13)
        {
          int v19 = 0;
          LODWORD(v13) = *a1;
        }
        return v7 + (v13 | v19) + 1;
      default:
        break;
    }
  }
  uint64_t v20 = ((unint64_t)a1 + v9 + 9) & ~v9;
  if (v6 >= 0x7FFFFFFE) {
    return __swift_getEnumTagSinglePayload(v20, v6, v4);
  }
  unint64_t v21 = *(void *)((v10 + v20) & 0xFFFFFFFFFFFFFFF8);
  if (v21 >= 0xFFFFFFFF) {
    LODWORD(v21) = -1;
  }
  if ((v21 + 1) >= 2) {
    return v21;
  }
  else {
    return 0;
  }
}

void storeEnumTagSinglePayload for TranscriptSubtitle.BackgroundViewModifier(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFE) {
    unsigned int v9 = 2147483646;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v11 = *(void *)(*(void *)(v6 - 8) + 64) + 7;
  size_t v12 = (v11 & 0xFFFFFFFFFFFFFFF8) + ((v10 + 16) & ~(v10 | 7)) + 8;
  if (v9 >= a3)
  {
    int v16 = 0;
  }
  else
  {
    unsigned int v13 = a3 - v9;
    if ((v11 & 0xFFFFFFF8) + ((v10 + 16) & ~(v10 | 7)) == -8) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      int v15 = 4;
    }
    else {
      int v15 = 2;
    }
    if (v14 < 0x100) {
      int v15 = 1;
    }
    if (v14 >= 2) {
      int v16 = v15;
    }
    else {
      int v16 = 0;
    }
  }
  if (a2 > v9)
  {
    if ((v11 & 0xFFFFFFF8) + ((v10 + 16) & ~(v10 | 7)) == -8) {
      int v17 = a2 - v9;
    }
    else {
      int v17 = 1;
    }
    if ((v11 & 0xFFFFFFF8) + ((v10 + 16) & ~(v10 | 7)) != -8)
    {
      int v18 = ~v9 + a2;
      bzero(a1, v12);
      *(_DWORD *)a1 = v18;
    }
    switch(v16)
    {
      case 1:
        a1[v12] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v17;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v12] = v17;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1C3711A48);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        unint64_t v19 = (unint64_t)&a1[(v10 | 7) + 9] & ~(v10 | 7);
        if (v8 < 0x7FFFFFFE)
        {
          uint64_t v20 = (void *)((v11 + v19) & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            *uint64_t v20 = 0;
            *(_DWORD *)uint64_t v20 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *uint64_t v20 = a2;
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload(v19, a2, v8, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TranscriptSubtitle.BackgroundViewModifier()
{
  return __swift_instantiateGenericMetadata();
}

void *assignWithCopy for TranscriptSubtitle.PlaceHolderFrame(void *a1, void *a2)
{
  *a1 = *a2;
  unsigned int v3 = (void *)a2[1];
  uint64_t v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

void *assignWithTake for TranscriptSubtitle.PlaceHolderFrame(void *a1, void *a2)
{
  *a1 = *a2;
  unsigned int v3 = (void *)a1[1];
  a1[1] = a2[1];

  return a1;
}

void *type metadata accessor for TranscriptSubtitle.PlaceHolderFrame()
{
  return &unk_1F1EBC528;
}

void *type metadata accessor for TranscriptSubtitle.TranscriptFrame()
{
  return &unk_1F1EBC5A8;
}

void *type metadata accessor for TranscriptSubtitle.SubtitlePadding()
{
  return &unk_1F1EBC5D0;
}

uint64_t sub_1C3711B34()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1C3711B90()
{
  return lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type VStack<TupleView<(ScrollViewReader<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, CaptionsSizeToggleButton?)>> and conformance VStack<A>);
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in TranscriptSubtitle.SubtitlePadding()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in TranscriptSubtitle.PlaceHolderFrame()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in TranscriptSubtitle.TranscriptFrame()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in TranscriptSubtitle.ContainerPadding()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in TranscriptSubtitle.ParticipantBadgeModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in TranscriptSubtitle.BackgroundViewModifier<A>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in TranscriptView.ClipShapeModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in TranscriptView.BackgroundModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in TranscriptList()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t partial apply for closure #1 in TranscriptList.body.getter()
{
  uint64_t v0 = type metadata accessor for TranscriptList(0);
  OUTLINED_FUNCTION_1_1(v0);
  uint64_t v1 = OUTLINED_FUNCTION_4_115();
  return closure #1 in TranscriptList.body.getter(v1, v2, v3);
}

uint64_t partial apply for closure #1 in closure #1 in TranscriptList.body.getter()
{
  uint64_t v0 = type metadata accessor for TranscriptList(0);
  OUTLINED_FUNCTION_1(v0);
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  OUTLINED_FUNCTION_1_1(v1);
  uint64_t v2 = OUTLINED_FUNCTION_20_65();
  return closure #1 in closure #1 in TranscriptList.body.getter(v2, v3, v4, v5);
}

uint64_t objectdestroy_142Tm()
{
  OUTLINED_FUNCTION_24_0();
  type metadata accessor for TranscriptList(0);
  OUTLINED_FUNCTION_1_23();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  type metadata accessor for DynamicTypeSize();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v8();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (OUTLINED_FUNCTION_42_30() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v9();
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v2 + v12 + v7) & ~v7), v4);
  OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_22();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  uint64_t v1 = type metadata accessor for TranscriptList(0);
  OUTLINED_FUNCTION_1(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  OUTLINED_FUNCTION_1_1(v4);
  return closure #1 in closure #2 in closure #1 in closure #1 in TranscriptList.body.getter(v0 + v3);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 72), a1, *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>> and conformance LazyVStack<A>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _PreferenceActionModifier<AutoScrollKey> and conformance _PreferenceActionModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [CaptionSectioner.SpeakerSection] and conformance <A> [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [CaptionSectioner.SpeakerSection] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [CaptionSectioner.SpeakerSection] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [CaptionSectioner.SpeakerSection]);
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type CaptionSectioner.SpeakerSection and conformance CaptionSectioner.SpeakerSection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [CaptionSectioner.SpeakerSection] and conformance <A> [A]);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type GroupIconView and conformance GroupIconView()
{
  unint64_t result = lazy protocol witness table cache variable for type GroupIconView and conformance GroupIconView;
  if (!lazy protocol witness table cache variable for type GroupIconView and conformance GroupIconView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GroupIconView and conformance GroupIconView);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(*(void *)(v1 + 16), a1);
}

uint64_t partial apply for closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t *a1@<X8>)
{
  return closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(*(void *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type Image? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type Image? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type Image? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Image?);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Image? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Double and conformance Double()
{
  unint64_t result = lazy protocol witness table cache variable for type Double and conformance Double;
  if (!lazy protocol witness table cache variable for type Double and conformance Double)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Double and conformance Double);
  }
  return result;
}

uint64_t sub_1C3712294@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accentColor.getter();
  *a1 = result;
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t *a1@<X8>)
{
  return closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1, *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64));
}

uint64_t objectdestroy_139Tm()
{
  type metadata accessor for TranscriptList(0);
  OUTLINED_FUNCTION_1_6();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  type metadata accessor for DynamicTypeSize();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v0();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (OUTLINED_FUNCTION_43_28() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v1();
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_49_2();
  uint64_t v1 = type metadata accessor for TranscriptList(v0);
  OUTLINED_FUNCTION_1_1(v1);
  OUTLINED_FUNCTION_26_51();
  return closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter();
}

uint64_t partial apply for closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  uint64_t v0 = type metadata accessor for TranscriptList(0);
  OUTLINED_FUNCTION_1(v0);
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  OUTLINED_FUNCTION_1_1(v1);
  uint64_t v2 = (uint64_t *)OUTLINED_FUNCTION_27_54();
  return closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(v2, v3, v4, v5);
}

uint64_t partial apply for closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ScrollViewProxy();
  OUTLINED_FUNCTION_1_1(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(a1, a2, v7);
}

uint64_t partial apply for closure #5 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  uint64_t v0 = type metadata accessor for TranscriptList(0);
  OUTLINED_FUNCTION_1(v0);
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  OUTLINED_FUNCTION_1_1(v1);
  uint64_t v2 = OUTLINED_FUNCTION_27_54();
  return closure #5 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(v2, v3, v4, v5);
}

unint64_t lazy protocol witness table accessor for type AttributedString.Index and conformance AttributedString.Index(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_6_6(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t objectdestroy_159Tm()
{
  type metadata accessor for ScrollViewProxy();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #5 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  uint64_t v0 = type metadata accessor for ScrollViewProxy();
  OUTLINED_FUNCTION_1_1(v0);
  return closure #1 in closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter();
}

uint64_t partial apply for closure #1 in closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  return closure #1 in closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter();
}

uint64_t sub_1C3712700()
{
  OUTLINED_FUNCTION_24_0();
  type metadata accessor for TranscriptList(0);
  OUTLINED_FUNCTION_1_23();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v4 = type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  type metadata accessor for DynamicTypeSize();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v8();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (OUTLINED_FUNCTION_42_30() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v9();
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v2 + v12 + v7) & ~v7), v4);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(a1, type metadata accessor for TranscriptList, MEMORY[0x1E4F3C848], (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t, __n128, __n128, __n128, __n128))closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter);
}

unint64_t lazy protocol witness table accessor for type Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView> and conformance <> Section<A, B, C>()
{
  unint64_t result = lazy protocol witness table cache variable for type Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView> and conformance <> Section<A, B, C>;
  if (!lazy protocol witness table cache variable for type Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView> and conformance <> Section<A, B, C>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>);
    lazy protocol witness table accessor for type (<<opaque return type of View.redacted(reason:)>>.0)? and conformance <A> A?();
    lazy protocol witness table accessor for type ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0> and conformance <> ForEach<A, B, C>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView> and conformance <> Section<A, B, C>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type (<<opaque return type of View.redacted(reason:)>>.0)? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type (<<opaque return type of View.redacted(reason:)>>.0)? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type (<<opaque return type of View.redacted(reason:)>>.0)? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for (<<opaque return type of View.redacted(reason:)>>.0)?);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<CaptionHeader, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<CaptionHeader, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type (<<opaque return type of View.redacted(reason:)>>.0)? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<CaptionHeader, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<CaptionHeader, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<CaptionHeader, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<CaptionHeader, _PaddingLayout>);
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type CaptionHeader and conformance CaptionHeader);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<CaptionHeader, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t type metadata accessor for CaptionHeader(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CaptionHeader);
}

unint64_t lazy protocol witness table accessor for type ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0> and conformance <> ForEach<A, B, C>()
{
  unint64_t result = lazy protocol witness table cache variable for type ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0> and conformance <> ForEach<A, B, C>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>);
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type CaptionRow and conformance CaptionRow);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t type metadata accessor for CaptionRow(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CaptionRow);
}

uint64_t partial apply for closure #1 in TranscriptList.sectionContent(for:viewGeometry:autoScrollTriggers:scrollFrame:)@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in TranscriptList.sectionContent(for:viewGeometry:autoScrollTriggers:scrollFrame:)(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1, *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72));
}

uint64_t sub_1C3712D0C()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_4();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  type metadata accessor for TranscriptList(0);
  OUTLINED_FUNCTION_1_6();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  type metadata accessor for DynamicTypeSize();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v5();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (OUTLINED_FUNCTION_43_28() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v6();
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in TranscriptList.sectionContent(for:viewGeometry:autoScrollTriggers:scrollFrame:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(a1, MEMORY[0x1E4F3C848], type metadata accessor for TranscriptList, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t, __n128, __n128, __n128, __n128))closure #1 in closure #1 in TranscriptList.sectionContent(for:viewGeometry:autoScrollTriggers:scrollFrame:));
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, unint64_t, unint64_t, uint64_t, __n128, __n128, __n128, __n128))
{
  uint64_t v7 = a2(0);
  OUTLINED_FUNCTION_1(v7);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = a3(0);
  OUTLINED_FUNCTION_1(v12);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  unint64_t v17 = (v9 + v11 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (*(void *)(v16 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = *(void *)(v4 + v18);
  v21.n128_u64[0] = *(void *)(v4 + v19);
  v22.n128_u64[0] = *(void *)(v4 + v19 + 8);
  v23.n128_u64[0] = *(void *)(v4 + v19 + 16);
  v24.n128_u64[0] = *(void *)(v4 + v19 + 24);
  return a4(a1, v4 + v9, v4 + v17, v20, v21, v22, v23, v24);
}

uint64_t sub_1C3713000()
{
  uint64_t v2 = (int *)(type metadata accessor for TranscriptList(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  unint64_t v4 = (*(void *)(*(void *)v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for CaptionSectioner.Caption(0);
  OUTLINED_FUNCTION_19_4();
  unint64_t v27 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v26 = *(void *)(v6 + 64);
  uint64_t v7 = type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  unint64_t v11 = v1 + v3 + v2[17];
  type metadata accessor for DynamicTypeSize();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v12();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (OUTLINED_FUNCTION_51_23() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_26_2();
    v13();
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  unint64_t v14 = v1 + v27 + *(int *)(v0 + 20);
  type metadata accessor for Participant.State(0);
  switch(OUTLINED_FUNCTION_51_23())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_12_0();
      (*(void (**)(unint64_t))(v15 + 8))(v14);
      break;
    case 4u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_26_2();
      v25();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      OUTLINED_FUNCTION_23_63();
      if (*(void *)(v4 + 120) >= 2uLL) {
        __swift_destroy_boxed_opaque_existential_1(v4 + 96);
      }
      if (*(void *)(v4 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (OUTLINED_FUNCTION_35_30())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_45_24();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v16();
  unint64_t v17 = (id *)(v14 + *(int *)(v11 + 28));
  if (*v17)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_37_35();
  swift_bridgeObjectRelease();

  type metadata accessor for Date();
  if (!OUTLINED_FUNCTION_15_80())
  {
    OUTLINED_FUNCTION_48();
    uint64_t v18 = OUTLINED_FUNCTION_14_81();
    v19(v18);
  }
  type metadata accessor for Participant.CountdownInfo(0);
  if (!OUTLINED_FUNCTION_15_80())
  {
    OUTLINED_FUNCTION_48();
    uint64_t v20 = OUTLINED_FUNCTION_14_81();
    v21(v20);
  }
  swift_release();
  OUTLINED_FUNCTION_48();
  __n128 v23 = *(void (**)(void))(v22 + 8);
  OUTLINED_FUNCTION_17_65();
  v23();
  OUTLINED_FUNCTION_17_65();
  v23();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v1 + ((((v26 + v27 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + 32) & ~v10), v7);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in TranscriptList.sectionContent(for:viewGeometry:autoScrollTriggers:scrollFrame:)@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for TranscriptList(0);
  OUTLINED_FUNCTION_1(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = (*(void *)(v8 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = type metadata accessor for CaptionSectioner.Caption(0);
  OUTLINED_FUNCTION_1(v10);
  unint64_t v12 = (v9 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (*(void *)(v13 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_1_1(v15);
  uint64_t v17 = *(void *)(v2 + v9);
  CGFloat v18 = *(double *)(v2 + v14);
  CGFloat v19 = *(double *)(v2 + v14 + 8);
  CGFloat v20 = *(double *)(v2 + v14 + 16);
  CGFloat v21 = *(double *)(v2 + v14 + 24);
  uint64_t v22 = v2 + ((v14 + *(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return closure #1 in closure #1 in closure #1 in TranscriptList.sectionContent(for:viewGeometry:autoScrollTriggers:scrollFrame:)(a1, v2 + v7, v17, v2 + v12, v22, a2, v18, v19, v20, v21);
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  outlined copy of ModifiedContent<GroupIconView, _PaddingLayout>?(*(void *)(a1 + 24), *(void *)(a1 + 32));
  outlined copy of Text.Storage(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t outlined copy of ModifiedContent<GroupIconView, _PaddingLayout>?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  outlined consume of ModifiedContent<GroupIconView, _PaddingLayout>?(*(void *)(a1 + 24), *(void *)(a1 + 32));
  outlined consume of Text.Storage(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t outlined consume of ModifiedContent<GroupIconView, _PaddingLayout>?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for TranscriptParticipantBadge(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptParticipantBadge);
}

unsigned char *storeEnumTagSinglePayload for TranscriptView.BackgroundModifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        result[2] = v6;
        break;
      case 2:
        *((_WORD *)result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3713870);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[2] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *((_WORD *)result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_50_23(result, a2);
        break;
    }
  }
  return result;
}

void *type metadata accessor for TranscriptList.PaddingModifier()
{
  return &unk_1F1EBC878;
}

void *initializeBufferWithCopyOfBuffer for CaptionRow(void *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *a1 = *(void *)a2;
    unint64_t v14 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *(void *)a2;
    uint64_t v7 = type metadata accessor for CaptionSectioner.Caption(0);
    uint64_t v8 = *(int *)(v7 + 20);
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Participant.State(0);
    uint64_t v95 = v9;
    uint64_t v92 = a3;
    long long v93 = a2;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v12 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
        goto LABEL_18;
      case 4u:
        uint64_t v15 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v17 = *(int *)(v16 + 48);
        CGFloat v18 = &v9[v17];
        CGFloat v19 = &v10[v17];
        *(_OWORD *)CGFloat v18 = *(_OWORD *)&v10[v17];
        uint64_t v20 = *(void *)&v10[v17 + 16];
        uint64_t v21 = *(void *)&v10[v17 + 24];
        *((void *)v18 + 2) = v20;
        *((void *)v18 + 3) = v21;
        *((_WORD *)v18 + 16) = *((_WORD *)v19 + 16);
        *((void *)v18 + 5) = *((void *)v19 + 5);
        v18[48] = v19[48];
        *(_OWORD *)(v18 + 56) = *(_OWORD *)(v19 + 56);
        *(_OWORD *)(v18 + 72) = *(_OWORD *)(v19 + 72);
        v18[88] = v19[88];
        v18[89] = v19[89];
        uint64_t v22 = *((void *)v19 + 15);
        swift_bridgeObjectRetain();
        if (v22)
        {
          if (v22 == 1)
          {
            __n128 v23 = v18 + 96;
            __n128 v24 = v19 + 96;
            size_t v25 = 209;
            goto LABEL_12;
          }
          uint64_t v27 = *((void *)v19 + 16);
          *((void *)v18 + 15) = v22;
          *((void *)v18 + 16) = v27;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v22 - 8))((uint64_t)(v18 + 96), (uint64_t)(v19 + 96), v22);
        }
        else
        {
          long long v26 = *((_OWORD *)v19 + 7);
          *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
          *((_OWORD *)v18 + 7) = v26;
          *((void *)v18 + 16) = *((void *)v19 + 16);
        }
        *((_DWORD *)v18 + 34) = *((_DWORD *)v19 + 34);
        long long v28 = *((_OWORD *)v19 + 10);
        *((_OWORD *)v18 + 9) = *((_OWORD *)v19 + 9);
        *((_OWORD *)v18 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v28;
        *((_OWORD *)v18 + 11) = *((_OWORD *)v19 + 11);
        v18[192] = v19[192];
        __n128 v23 = v18 + 208;
        __n128 v24 = v19 + 208;
        *((void *)v18 + 25) = *((void *)v19 + 25);
        size_t v25 = 97;
LABEL_12:
        memcpy(v23, v24, v25);
        uint64_t v29 = *((void *)v19 + 39);
        if (v29)
        {
          uint64_t v30 = *((void *)v19 + 40);
          uint64_t v31 = *((void *)v19 + 41);
          *((void *)v18 + 39) = v29;
          *((void *)v18 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v30;
          *((void *)v18 + 41) = v31;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v18 + 312) = *(_OWORD *)(v19 + 312);
          *((void *)v18 + 41) = *((void *)v19 + 41);
        }
        uint64_t v32 = *(int *)(v16 + 64);
        unint64_t v9 = v95;
        uint64_t v33 = &v95[v32];
        uint64_t v34 = &v10[v32];
        uint64_t v35 = *((void *)v34 + 1);
        if (v35)
        {
          *(void *)uint64_t v33 = *(void *)v34;
          *((void *)v33 + 1) = v35;
          uint64_t v36 = *((void *)v34 + 3);
          *((void *)v33 + 2) = *((void *)v34 + 2);
          *((void *)v33 + 3) = v36;
          v33[32] = v34[32];
          *(_OWORD *)(v33 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(v34 + 40);
          *((void *)v33 + 7) = *((void *)v34 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v37 = *((_OWORD *)v34 + 1);
          *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
          *((_OWORD *)v33 + 1) = v37;
          long long v38 = *((_OWORD *)v34 + 3);
          *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
          *((_OWORD *)v33 + 3) = v38;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        long long v39 = (int *)type metadata accessor for Participant(0);
        uint64_t v40 = v39[5];
        uint64_t v41 = &v9[v40];
        uint64_t v42 = &v10[v40];
        uint64_t v43 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
        uint64_t v44 = v39[6];
        long long v45 = &v9[v44];
        uint64_t v46 = &v10[v44];
        v45[4] = v46[4];
        *(_DWORD *)long long v45 = *(_DWORD *)v46;
        uint64_t v47 = v39[7];
        uint64_t v48 = &v9[v47];
        uint64_t v49 = &v10[v47];
        uint64_t v50 = *(void **)v49;
        uint64_t v94 = a1;
        uint64_t v91 = (int *)v7;
        if (*(void *)v49)
        {
          uint64_t v51 = *((void *)v49 + 1);
          *(void *)uint64_t v48 = v50;
          *((void *)v48 + 1) = v51;
          v48[16] = v49[16];
          uint64_t v52 = *((void *)v49 + 4);
          *((void *)v48 + 3) = *((void *)v49 + 3);
          *((void *)v48 + 4) = v52;
          id v53 = v50;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v54 = *((_OWORD *)v49 + 1);
          *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
          *((_OWORD *)v48 + 1) = v54;
          *((void *)v48 + 4) = *((void *)v49 + 4);
        }
        *(void *)&v9[v39[8]] = *(void *)&v10[v39[8]];
        uint64_t v55 = v39[9];
        uint64_t v56 = &v9[v55];
        uint64_t v57 = &v10[v55];
        uint64_t v58 = *((void *)v57 + 1);
        *uint64_t v56 = *(void *)v57;
        v56[1] = v58;
        v9[v39[10]] = v10[v39[10]];
        *(void *)&v9[v39[11]] = *(void *)&v10[v39[11]];
        uint64_t v59 = v39[12];
        uint64_t v60 = *(void **)&v10[v59];
        *(void *)&v9[v59] = v60;
        v9[v39[13]] = v10[v39[13]];
        uint64_t v61 = v39[14];
        int v62 = &v9[v61];
        uint64_t v63 = &v10[v61];
        uint64_t v64 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v65 = v60;
        if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
        {
          uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
          __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
        }
        uint64_t v67 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v68 = *(int *)(v67 + 20);
        uint64_t v69 = &v62[v68];
        long long v70 = &v63[v68];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v63[v68], 1, v64))
        {
          uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
          uint64_t v72 = *(void *)(v64 - 8);
        }
        else
        {
          uint64_t v72 = *(void *)(v64 - 8);
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v64);
          __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v64);
        }
        uint64_t v73 = v72;
        v62[*(int *)(v67 + 24)] = v63[*(int *)(v67 + 24)];
        unint64_t v14 = v94;
        v95[v39[15]] = v10[v39[15]];
        *(void *)&v95[v39[16]] = *(void *)&v10[v39[16]];
        uint64_t v74 = v91[6];
        uint64_t v75 = (char *)v94 + v74;
        uint64_t v76 = &v93[v74];
        uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
        swift_retain();
        v77(v75, v76, v64);
        v77((char *)v94 + v91[7], &v93[v91[7]], v64);
        *(void *)((char *)v94 + v91[8]) = *(void *)&v93[v91[8]];
        uint64_t v78 = v91[9];
        uint64_t v79 = (void *)((char *)v94 + v78);
        int v80 = &v93[v78];
        uint64_t v81 = *((void *)v80 + 1);
        *uint64_t v79 = *(void *)v80;
        v79[1] = v81;
        *((unsigned char *)v94 + v91[10]) = v93[v91[10]];
        *(void *)((char *)v94 + v91[11]) = *(void *)&v93[v91[11]];
        *((unsigned char *)v94 + v91[12]) = v93[v91[12]];
        uint64_t v82 = *(int *)(v92 + 20);
        uint64_t v96 = (char *)v94 + v82;
        uint64_t v83 = &v93[v82];
        uint64_t v84 = type metadata accessor for GeometryProxy();
        uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v85(v96, v83, v84);
        uint64_t v86 = *(int *)(v92 + 24);
        long long v87 = (void *)((char *)v94 + v86);
        long long v88 = &v93[v86];
        uint64_t v89 = *((void *)v88 + 1);
        *long long v87 = *(void *)v88;
        v87[1] = v89;
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_19;
    }
  }
  swift_retain();
  return v14;
}

uint64_t destroy for CaptionRow(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (int *)type metadata accessor for CaptionSectioner.Caption(0);
  uint64_t v5 = a1 + v4[5];
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v6 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      break;
    case 4u:
      uint64_t v18 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v5, v18);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v20 = v5 + *(int *)(v19 + 48);
      swift_bridgeObjectRelease();
      if (*(void *)(v20 + 120) >= 2uLL) {
        __swift_destroy_boxed_opaque_existential_1(v20 + 96);
      }
      if (*(void *)(v20 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v5 + *(int *)(v19 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  uint64_t v7 = (int *)type metadata accessor for Participant(0);
  uint64_t v8 = v5 + v7[5];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = (id *)(v5 + v7[7]);
  if (*v10)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v11 = v5 + v7[14];
  uint64_t v12 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v11 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v13, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v13, v12);
  }
  swift_release();
  unint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v14(a1 + v4[6], v12);
  v14(a1 + v4[7], v12);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + *(int *)(a2 + 20);
  uint64_t v16 = type metadata accessor for GeometryProxy();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  return swift_release();
}

char *initializeWithCopy for CaptionRow(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = type metadata accessor for CaptionSectioner.Caption(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Participant.State(0);
  uint64_t v91 = a1;
  uint64_t v92 = v8;
  uint64_t v89 = a3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v11 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
      goto LABEL_16;
    case 4u:
      uint64_t v12 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v14 = *(int *)(v13 + 48);
      uint64_t v15 = &v8[v14];
      uint64_t v16 = &v9[v14];
      *(_OWORD *)uint64_t v15 = *(_OWORD *)&v9[v14];
      uint64_t v17 = *(void *)&v9[v14 + 16];
      uint64_t v18 = *(void *)&v9[v14 + 24];
      *((void *)v15 + 2) = v17;
      *((void *)v15 + 3) = v18;
      *((_WORD *)v15 + 16) = *((_WORD *)v16 + 16);
      *((void *)v15 + 5) = *((void *)v16 + 5);
      v15[48] = v16[48];
      *(_OWORD *)(v15 + 56) = *(_OWORD *)(v16 + 56);
      *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
      v15[88] = v16[88];
      v15[89] = v16[89];
      uint64_t v19 = *((void *)v16 + 15);
      swift_bridgeObjectRetain();
      if (v19)
      {
        if (v19 == 1)
        {
          uint64_t v20 = v15 + 96;
          uint64_t v21 = v16 + 96;
          size_t v22 = 209;
          goto LABEL_10;
        }
        uint64_t v24 = *((void *)v16 + 16);
        *((void *)v15 + 15) = v19;
        *((void *)v15 + 16) = v24;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8))((uint64_t)(v15 + 96), (uint64_t)(v16 + 96), v19);
      }
      else
      {
        long long v23 = *((_OWORD *)v16 + 7);
        *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
        *((_OWORD *)v15 + 7) = v23;
        *((void *)v15 + 16) = *((void *)v16 + 16);
      }
      *((_DWORD *)v15 + 34) = *((_DWORD *)v16 + 34);
      long long v25 = *((_OWORD *)v16 + 10);
      *((_OWORD *)v15 + 9) = *((_OWORD *)v16 + 9);
      *((_OWORD *)v15 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v25;
      *((_OWORD *)v15 + 11) = *((_OWORD *)v16 + 11);
      v15[192] = v16[192];
      uint64_t v20 = v15 + 208;
      uint64_t v21 = v16 + 208;
      *((void *)v15 + 25) = *((void *)v16 + 25);
      size_t v22 = 97;
LABEL_10:
      memcpy(v20, v21, v22);
      uint64_t v26 = *((void *)v16 + 39);
      if (v26)
      {
        uint64_t v27 = *((void *)v16 + 40);
        uint64_t v28 = *((void *)v16 + 41);
        *((void *)v15 + 39) = v26;
        *((void *)v15 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v27;
        *((void *)v15 + 41) = v28;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v15 + 312) = *(_OWORD *)(v16 + 312);
        *((void *)v15 + 41) = *((void *)v16 + 41);
      }
      uint64_t v29 = *(int *)(v13 + 64);
      uint64_t v8 = v92;
      uint64_t v30 = &v92[v29];
      uint64_t v31 = &v9[v29];
      uint64_t v32 = *((void *)v31 + 1);
      if (v32)
      {
        *(void *)uint64_t v30 = *(void *)v31;
        *((void *)v30 + 1) = v32;
        uint64_t v33 = *((void *)v31 + 3);
        *((void *)v30 + 2) = *((void *)v31 + 2);
        *((void *)v30 + 3) = v33;
        v30[32] = v31[32];
        *(_OWORD *)(v30 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(v31 + 40);
        *((void *)v30 + 7) = *((void *)v31 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v34 = *((_OWORD *)v31 + 1);
        *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
        *((_OWORD *)v30 + 1) = v34;
        long long v35 = *((_OWORD *)v31 + 3);
        *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
        *((_OWORD *)v30 + 3) = v35;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_17:
      uint64_t v36 = (int *)type metadata accessor for Participant(0);
      uint64_t v37 = v36[5];
      long long v38 = &v8[v37];
      long long v39 = &v9[v37];
      uint64_t v40 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      uint64_t v41 = v36[6];
      uint64_t v42 = &v8[v41];
      uint64_t v43 = &v9[v41];
      v42[4] = v43[4];
      *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
      uint64_t v44 = v36[7];
      long long v45 = &v8[v44];
      uint64_t v46 = &v9[v44];
      uint64_t v47 = *(void **)v46;
      int v90 = a2;
      long long v88 = (int *)v6;
      if (*(void *)v46)
      {
        uint64_t v48 = *((void *)v46 + 1);
        *(void *)long long v45 = v47;
        *((void *)v45 + 1) = v48;
        v45[16] = v46[16];
        uint64_t v49 = *((void *)v46 + 4);
        *((void *)v45 + 3) = *((void *)v46 + 3);
        *((void *)v45 + 4) = v49;
        id v50 = v47;
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v51 = *((_OWORD *)v46 + 1);
        *(_OWORD *)long long v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v51;
        *((void *)v45 + 4) = *((void *)v46 + 4);
      }
      *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
      uint64_t v52 = v36[9];
      id v53 = &v8[v52];
      long long v54 = &v9[v52];
      uint64_t v55 = *((void *)v54 + 1);
      *(void *)id v53 = *(void *)v54;
      *((void *)v53 + 1) = v55;
      v8[v36[10]] = v9[v36[10]];
      *(void *)&v8[v36[11]] = *(void *)&v9[v36[11]];
      uint64_t v56 = v36[12];
      uint64_t v57 = *(void **)&v9[v56];
      *(void *)&v8[v56] = v57;
      v8[v36[13]] = v9[v36[13]];
      uint64_t v58 = v36[14];
      uint64_t v59 = &v8[v58];
      uint64_t v60 = &v9[v58];
      uint64_t v61 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v62 = v57;
      if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
      {
        uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
      }
      uint64_t v64 = type metadata accessor for Participant.CountdownInfo(0);
      uint64_t v65 = *(int *)(v64 + 20);
      uint64_t v66 = &v59[v65];
      uint64_t v67 = &v60[v65];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v60[v65], 1, v61))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
        uint64_t v69 = *(void *)(v61 - 8);
      }
      else
      {
        uint64_t v69 = *(void *)(v61 - 8);
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v61);
      }
      uint64_t v70 = v69;
      v59[*(int *)(v64 + 24)] = v60[*(int *)(v64 + 24)];
      v92[v36[15]] = v9[v36[15]];
      *(void *)&v92[v36[16]] = *(void *)&v9[v36[16]];
      uint64_t v71 = v88[6];
      uint64_t v72 = &v91[v71];
      uint64_t v73 = &v90[v71];
      uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
      swift_retain();
      v74(v72, v73, v61);
      v74(&v91[v88[7]], &v90[v88[7]], v61);
      *(void *)&v91[v88[8]] = *(void *)&v90[v88[8]];
      uint64_t v75 = v88[9];
      uint64_t v76 = &v91[v75];
      uint64_t v77 = &v90[v75];
      uint64_t v78 = *((void *)v77 + 1);
      *(void *)uint64_t v76 = *(void *)v77;
      *((void *)v76 + 1) = v78;
      v91[v88[10]] = v90[v88[10]];
      *(void *)&v91[v88[11]] = *(void *)&v90[v88[11]];
      v91[v88[12]] = v90[v88[12]];
      uint64_t v79 = *(int *)(v89 + 20);
      long long v93 = &v91[v79];
      int v80 = &v90[v79];
      uint64_t v81 = type metadata accessor for GeometryProxy();
      uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v82(v93, v80, v81);
      uint64_t v83 = *(int *)(v89 + 24);
      uint64_t v84 = &v91[v83];
      uint64_t v85 = &v90[v83];
      uint64_t v86 = *((void *)v85 + 1);
      *(void *)uint64_t v84 = *(void *)v85;
      *((void *)v84 + 1) = v86;
      swift_retain();
      return v91;
    default:
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      goto LABEL_17;
  }
}

char *assignWithCopy for CaptionRow(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v91 = (int *)type metadata accessor for CaptionSectioner.Caption(0);
  uint64_t v5 = v91[5];
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  long long v93 = a2;
  if (a1 != a2)
  {
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    uint64_t v8 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v9 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v7, v9);
        goto LABEL_17;
      case 4u:
        uint64_t v10 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v6, v7, v10);
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v12 = *(int *)(v11 + 48);
        uint64_t v13 = &v6[v12];
        uint64_t v14 = &v7[v12];
        *(_OWORD *)uint64_t v13 = *(_OWORD *)&v7[v12];
        *((void *)v13 + 2) = *(void *)&v7[v12 + 16];
        uint64_t v15 = *(void *)&v7[v12 + 24];
        *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
        *((void *)v13 + 3) = v15;
        *((void *)v13 + 5) = *((void *)v14 + 5);
        v13[48] = v14[48];
        long long v16 = *(_OWORD *)(v14 + 72);
        long long v17 = *(_OWORD *)(v14 + 56);
        v13[88] = v14[88];
        *(_OWORD *)(v13 + 56) = v17;
        *(_OWORD *)(v13 + 72) = v16;
        v13[89] = v14[89];
        uint64_t v18 = *((void *)v14 + 15);
        swift_bridgeObjectRetain();
        if (v18)
        {
          if (v18 == 1)
          {
            uint64_t v19 = v13 + 96;
            uint64_t v20 = v14 + 96;
            size_t v21 = 209;
            goto LABEL_11;
          }
          *((void *)v13 + 15) = v18;
          *((void *)v13 + 16) = *((void *)v14 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))((uint64_t)(v13 + 96), (uint64_t)(v14 + 96), v18);
        }
        else
        {
          long long v22 = *((_OWORD *)v14 + 6);
          long long v23 = *((_OWORD *)v14 + 7);
          *((void *)v13 + 16) = *((void *)v14 + 16);
          *((_OWORD *)v13 + 6) = v22;
          *((_OWORD *)v13 + 7) = v23;
        }
        *((_DWORD *)v13 + 34) = *((_DWORD *)v14 + 34);
        *((void *)v13 + 18) = *((void *)v14 + 18);
        *((void *)v13 + 19) = *((void *)v14 + 19);
        long long v24 = *((_OWORD *)v14 + 10);
        long long v25 = *((_OWORD *)v14 + 11);
        v13[192] = v14[192];
        *((_OWORD *)v13 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v24;
        *((_OWORD *)v13 + 11) = v25;
        *((void *)v13 + 25) = *((void *)v14 + 25);
        uint64_t v19 = v13 + 208;
        uint64_t v20 = v14 + 208;
        size_t v21 = 97;
LABEL_11:
        memcpy(v19, v20, v21);
        uint64_t v26 = *((void *)v14 + 39);
        if (v26)
        {
          uint64_t v27 = *((void *)v14 + 40);
          *((void *)v13 + 39) = v26;
          *((void *)v13 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v27;
          *((void *)v13 + 41) = *((void *)v14 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v28 = *(_OWORD *)(v14 + 312);
          *((void *)v13 + 41) = *((void *)v14 + 41);
          *(_OWORD *)(v13 + 312) = v28;
        }
        uint64_t v29 = *(int *)(v11 + 64);
        uint64_t v30 = &v6[v29];
        uint64_t v31 = &v7[v29];
        if (*((void *)v31 + 1))
        {
          *(void *)uint64_t v30 = *(void *)v31;
          *((void *)v30 + 1) = *((void *)v31 + 1);
          *((void *)v30 + 2) = *((void *)v31 + 2);
          *((void *)v30 + 3) = *((void *)v31 + 3);
          v30[32] = v31[32];
          *((void *)v30 + 5) = *((void *)v31 + 5);
          *((void *)v30 + 6) = *((void *)v31 + 6);
          *((void *)v30 + 7) = *((void *)v31 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v32 = *(_OWORD *)v31;
          long long v33 = *((_OWORD *)v31 + 1);
          long long v34 = *((_OWORD *)v31 + 3);
          *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
          *((_OWORD *)v30 + 3) = v34;
          *(_OWORD *)uint64_t v30 = v32;
          *((_OWORD *)v30 + 1) = v33;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  long long v35 = (int *)type metadata accessor for Participant(0);
  uint64_t v36 = v35[5];
  uint64_t v37 = &v6[v36];
  long long v38 = &v7[v36];
  uint64_t v39 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  uint64_t v40 = v35[6];
  uint64_t v41 = &v6[v40];
  uint64_t v42 = &v7[v40];
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  void v41[2] = v42[2];
  v41[3] = v42[3];
  v41[4] = v42[4];
  uint64_t v43 = v35[7];
  uint64_t v44 = (uint64_t)&v6[v43];
  long long v45 = &v7[v43];
  uint64_t v46 = *(void **)&v6[v43];
  uint64_t v47 = *(void **)&v7[v43];
  uint64_t v94 = a1;
  if (v46)
  {
    if (v47)
    {
      *(void *)uint64_t v44 = v47;
      id v48 = v47;

      uint64_t v49 = *((void *)v45 + 1);
      *(unsigned char *)(v44 + 16) = v45[16];
      *(void *)(v44 + 8) = v49;
      *(void *)(v44 + 24) = *((void *)v45 + 3);
      *(void *)(v44 + 32) = *((void *)v45 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers(v44);
      uint64_t v52 = *((void *)v45 + 4);
      long long v53 = *((_OWORD *)v45 + 1);
      *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      *(_OWORD *)(v44 + 16) = v53;
      *(void *)(v44 + 32) = v52;
    }
  }
  else if (v47)
  {
    *(void *)uint64_t v44 = v47;
    uint64_t v50 = *((void *)v45 + 1);
    *(unsigned char *)(v44 + 16) = v45[16];
    *(void *)(v44 + 8) = v50;
    *(void *)(v44 + 24) = *((void *)v45 + 3);
    *(void *)(v44 + 32) = *((void *)v45 + 4);
    id v51 = v47;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v54 = *(_OWORD *)v45;
    long long v55 = *((_OWORD *)v45 + 1);
    *(void *)(v44 + 32) = *((void *)v45 + 4);
    *(_OWORD *)uint64_t v44 = v54;
    *(_OWORD *)(v44 + 16) = v55;
  }
  *(void *)&v6[v35[8]] = *(void *)&v7[v35[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = v35[9];
  uint64_t v57 = &v6[v56];
  uint64_t v58 = &v7[v56];
  *(void *)uint64_t v57 = *(void *)v58;
  *((void *)v57 + 1) = *((void *)v58 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v35[10]] = v7[v35[10]];
  *(void *)&v6[v35[11]] = *(void *)&v7[v35[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v59 = v35[12];
  uint64_t v60 = *(void **)&v6[v59];
  uint64_t v61 = *(void **)&v7[v59];
  *(void *)&v6[v59] = v61;
  id v62 = v61;

  v6[v35[13]] = v7[v35[13]];
  uint64_t v63 = v35[14];
  uint64_t v64 = &v6[v63];
  uint64_t v65 = &v7[v63];
  uint64_t v66 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v64, 1, v66);
  int v68 = __swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66);
  if (EnumTagSinglePayload)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v66);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v69 = *(void *)(v66 - 8);
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v64, v66);
LABEL_30:
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v64, v65, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v69 + 24))(v64, v65, v66);
LABEL_31:
  uint64_t v71 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v72 = *(int *)(v71 + 20);
  uint64_t v73 = &v64[v72];
  uint64_t v74 = &v65[v72];
  int v75 = __swift_getEnumTagSinglePayload((uint64_t)&v64[v72], 1, v66);
  int v76 = __swift_getEnumTagSinglePayload((uint64_t)v74, 1, v66);
  if (!v75)
  {
    uint64_t v77 = *(void *)(v66 - 8);
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 24))(v73, v74, v66);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v77 + 8))(v73, v66);
    goto LABEL_36;
  }
  if (v76)
  {
LABEL_36:
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v73, v74, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v73, v74, v66);
  __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v66);
LABEL_37:
  v64[*(int *)(v71 + 24)] = v65[*(int *)(v71 + 24)];
  v6[v35[15]] = v7[v35[15]];
  *(void *)&v6[v35[16]] = *(void *)&v7[v35[16]];
  swift_retain();
  swift_release();
  uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 24);
  v79(&v94[v91[6]], &v93[v91[6]], v66);
  v79(&v94[v91[7]], &v93[v91[7]], v66);
  *(void *)&v94[v91[8]] = *(void *)&v93[v91[8]];
  swift_retain();
  swift_release();
  uint64_t v80 = v91[9];
  uint64_t v81 = &v94[v80];
  uint64_t v82 = &v93[v80];
  *(void *)uint64_t v81 = *(void *)v82;
  *((void *)v81 + 1) = *((void *)v82 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v94[v91[10]] = v93[v91[10]];
  *(void *)&v94[v91[11]] = *(void *)&v93[v91[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v94[v91[12]] = v93[v91[12]];
  uint64_t v83 = *(int *)(a3 + 20);
  uint64_t v84 = &v94[v83];
  uint64_t v85 = &v93[v83];
  uint64_t v86 = type metadata accessor for GeometryProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 24))(v84, v85, v86);
  uint64_t v87 = *(int *)(a3 + 24);
  long long v88 = &v94[v87];
  uint64_t v89 = &v93[v87];
  *(void *)long long v88 = *(void *)v89;
  *((void *)v88 + 1) = *((void *)v89 + 1);
  swift_retain();
  swift_release();
  return v94;
}

char *initializeWithTake for CaptionRow(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v47 = (int *)type metadata accessor for CaptionSectioner.Caption(0);
  uint64_t v5 = v47[5];
  uint64_t v49 = a2;
  uint64_t v50 = a1;
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v16 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v6, v7, v16);
      goto LABEL_5;
    case 4u:
      uint64_t v9 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&v6[*(int *)(v10 + 48)], &v7[*(int *)(v10 + 48)], 0x150uLL);
      uint64_t v11 = *(int *)(v10 + 64);
      uint64_t v12 = &v6[v11];
      uint64_t v13 = &v7[v11];
      long long v14 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v14;
      long long v15 = *((_OWORD *)v13 + 3);
      *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
      *((_OWORD *)v12 + 3) = v15;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
      break;
  }
  long long v17 = (int *)type metadata accessor for Participant(0);
  uint64_t v18 = v17[5];
  uint64_t v19 = &v6[v18];
  uint64_t v20 = &v7[v18];
  uint64_t v21 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  uint64_t v22 = v17[6];
  long long v23 = &v6[v22];
  long long v24 = &v7[v22];
  *(_DWORD *)long long v23 = *(_DWORD *)v24;
  unsigned char v23[4] = v24[4];
  uint64_t v25 = v17[7];
  uint64_t v26 = &v6[v25];
  uint64_t v27 = &v7[v25];
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  *((void *)v26 + 4) = *((void *)v27 + 4);
  *(void *)&v6[v17[8]] = *(void *)&v7[v17[8]];
  *(_OWORD *)&v6[v17[9]] = *(_OWORD *)&v7[v17[9]];
  v6[v17[10]] = v7[v17[10]];
  *(void *)&v6[v17[11]] = *(void *)&v7[v17[11]];
  *(void *)&v6[v17[12]] = *(void *)&v7[v17[12]];
  v6[v17[13]] = v7[v17[13]];
  uint64_t v29 = v17[14];
  uint64_t v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  uint64_t v32 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
  }
  uint64_t v34 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v35 = *(int *)(v34 + 20);
  uint64_t v46 = v30;
  uint64_t v36 = &v30[v35];
  uint64_t v37 = &v31[v35];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v31[v35], 1, v32))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    uint64_t v39 = *(void *)(v32 - 8);
  }
  else
  {
    uint64_t v39 = *(void *)(v32 - 8);
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v32);
  }
  v46[*(int *)(v34 + 24)] = v31[*(int *)(v34 + 24)];
  v6[v17[15]] = v7[v17[15]];
  *(void *)&v6[v17[16]] = *(void *)&v7[v17[16]];
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  v40(&v50[v47[6]], &v49[v47[6]], v32);
  v40(&v50[v47[7]], &v49[v47[7]], v32);
  *(void *)&v50[v47[8]] = *(void *)&v49[v47[8]];
  *(_OWORD *)&v50[v47[9]] = *(_OWORD *)&v49[v47[9]];
  v50[v47[10]] = v49[v47[10]];
  *(void *)&v50[v47[11]] = *(void *)&v49[v47[11]];
  v50[v47[12]] = v49[v47[12]];
  uint64_t v41 = *(int *)(a3 + 20);
  uint64_t v42 = &v50[v41];
  uint64_t v43 = &v49[v41];
  uint64_t v44 = type metadata accessor for GeometryProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
  *(_OWORD *)&v50[*(int *)(a3 + 24)] = *(_OWORD *)&v49[*(int *)(a3 + 24)];
  return v50;
}

char *assignWithTake for CaptionRow(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v69 = (int *)type metadata accessor for CaptionSectioner.Caption(0);
  uint64_t v5 = v69[5];
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v71 = a2;
  if (a1 != a2)
  {
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    uint64_t v8 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v16 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v6, v7, v16);
        goto LABEL_5;
      case 4u:
        uint64_t v9 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v6[*(int *)(v10 + 48)], &v7[*(int *)(v10 + 48)], 0x150uLL);
        uint64_t v11 = *(int *)(v10 + 64);
        uint64_t v12 = &v6[v11];
        uint64_t v13 = &v7[v11];
        long long v14 = *((_OWORD *)v13 + 1);
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
        *((_OWORD *)v12 + 1) = v14;
        long long v15 = *((_OWORD *)v13 + 3);
        *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
        *((_OWORD *)v12 + 3) = v15;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  long long v17 = (int *)type metadata accessor for Participant(0);
  uint64_t v18 = v17[5];
  uint64_t v19 = &v6[v18];
  uint64_t v20 = &v7[v18];
  uint64_t v21 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = v17[6];
  long long v23 = &v6[v22];
  long long v24 = &v7[v22];
  char *v23 = *v24;
  v23[1] = v24[1];
  v23[2] = v24[2];
  v23[3] = v24[3];
  unsigned char v23[4] = v24[4];
  uint64_t v25 = v17[7];
  uint64_t v26 = (uint64_t)&v6[v25];
  uint64_t v27 = &v7[v25];
  long long v28 = *(void **)&v6[v25];
  if (v28)
  {
    if (*(void *)v27)
    {
      *(void *)uint64_t v26 = *(void *)v27;

      *(void *)(v26 + 8) = *((void *)v27 + 1);
      *(unsigned char *)(v26 + 16) = v27[16];
      uint64_t v29 = *((void *)v27 + 4);
      *(void *)(v26 + 24) = *((void *)v27 + 3);
      *(void *)(v26 + 32) = v29;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    outlined destroy of Participant.RemoteIdentifiers(v26);
  }
  long long v30 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v30;
  *(void *)(v26 + 32) = *((void *)v27 + 4);
LABEL_11:
  *(void *)&v6[v17[8]] = *(void *)&v7[v17[8]];
  swift_bridgeObjectRelease();
  uint64_t v31 = v17[9];
  uint64_t v32 = &v6[v31];
  uint64_t v33 = &v7[v31];
  uint64_t v35 = *(void *)v33;
  uint64_t v34 = *((void *)v33 + 1);
  *(void *)uint64_t v32 = v35;
  *((void *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  v6[v17[10]] = v7[v17[10]];
  *(void *)&v6[v17[11]] = *(void *)&v7[v17[11]];
  swift_bridgeObjectRelease();
  uint64_t v36 = v17[12];
  uint64_t v37 = *(void **)&v6[v36];
  *(void *)&v6[v36] = *(void *)&v7[v36];

  v6[v17[13]] = v7[v17[13]];
  uint64_t v38 = v17[14];
  uint64_t v39 = &v6[v38];
  uint64_t v40 = &v7[v38];
  uint64_t v41 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, v41);
  int v43 = __swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41);
  if (EnumTagSinglePayload)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  uint64_t v44 = *(void *)(v41 - 8);
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v41);
LABEL_16:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v39, v40, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 40))(v39, v40, v41);
LABEL_17:
  uint64_t v46 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v47 = *(int *)(v46 + 20);
  id v48 = &v39[v47];
  int v68 = v40;
  uint64_t v49 = &v40[v47];
  int v50 = __swift_getEnumTagSinglePayload((uint64_t)&v39[v47], 1, v41);
  int v51 = __swift_getEnumTagSinglePayload((uint64_t)v49, 1, v41);
  if (!v50)
  {
    uint64_t v52 = *(void *)(v41 - 8);
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 40))(v48, v49, v41);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v48, v41);
    goto LABEL_22;
  }
  if (v51)
  {
LABEL_22:
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v48, v49, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v48, v49, v41);
  __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v41);
LABEL_23:
  v39[*(int *)(v46 + 24)] = v68[*(int *)(v46 + 24)];
  v6[v17[15]] = v7[v17[15]];
  *(void *)&v6[v17[16]] = *(void *)&v7[v17[16]];
  swift_release();
  long long v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 40);
  v54(&a1[v69[6]], &v71[v69[6]], v41);
  v54(&a1[v69[7]], &v71[v69[7]], v41);
  *(void *)&a1[v69[8]] = *(void *)&v71[v69[8]];
  swift_release();
  uint64_t v55 = v69[9];
  uint64_t v56 = &a1[v55];
  uint64_t v57 = (uint64_t *)&v71[v55];
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  *(void *)uint64_t v56 = v59;
  *((void *)v56 + 1) = v58;
  swift_bridgeObjectRelease();
  a1[v69[10]] = v71[v69[10]];
  *(void *)&a1[v69[11]] = *(void *)&v71[v69[11]];
  swift_bridgeObjectRelease();
  a1[v69[12]] = v71[v69[12]];
  uint64_t v60 = *(int *)(a3 + 20);
  uint64_t v61 = &a1[v60];
  id v62 = &v71[v60];
  uint64_t v63 = type metadata accessor for GeometryProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 40))(v61, v62, v63);
  uint64_t v64 = *(int *)(a3 + 24);
  uint64_t v65 = &a1[v64];
  uint64_t v66 = &v71[v64];
  *(void *)uint64_t v65 = *(void *)v66;
  *((void *)v65 + 1) = *((void *)v66 + 1);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CaptionRow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C371664C);
}

uint64_t sub_1C371664C()
{
  uint64_t v3 = OUTLINED_FUNCTION_55_1();
  type metadata accessor for CaptionSectioner.Caption(v3);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v5 + 84) == v0)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
LABEL_5:
    return __swift_getEnumTagSinglePayload(v7, v0, v6);
  }
  type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v9 + 84) == v0)
  {
    uint64_t v6 = v8;
    uint64_t v7 = v1 + *(int *)(v2 + 20);
    goto LABEL_5;
  }
  unint64_t v11 = *(void *)(v1 + *(int *)(v2 + 24) + 8);
  if (v11 >= 0xFFFFFFFF) {
    LODWORD(v11) = -1;
  }
  int v12 = v11 - 1;
  if (v12 < 0) {
    int v12 = -1;
  }
  return (v12 + 1);
}

uint64_t storeEnumTagSinglePayload for CaptionRow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3716718);
}

void sub_1C3716718()
{
  uint64_t v4 = OUTLINED_FUNCTION_30_6();
  type metadata accessor for CaptionSectioner.Caption(v4);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = v5;
    uint64_t v8 = v1;
  }
  else
  {
    type metadata accessor for GeometryProxy();
    OUTLINED_FUNCTION_1_5();
    if (*(_DWORD *)(v10 + 84) != v3)
    {
      *(void *)(v1 + *(int *)(v2 + 24) + 8) = v0;
      return;
    }
    uint64_t v7 = v9;
    uint64_t v8 = v1 + *(int *)(v2 + 20);
  }
  __swift_storeEnumTagSinglePayload(v8, v0, v0, v7);
}

uint64_t type metadata completion function for CaptionRow()
{
  uint64_t result = type metadata accessor for CaptionSectioner.Caption(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for GeometryProxy();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CaptionHeader(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    *(_OWORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(a2 + 5);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for CaptionHeader(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for RedactionReasons();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for CaptionHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  *(_OWORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for CaptionHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 40);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    outlined destroy of Environment<RedactionReasons>.Content(a1 + v6, (uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for CaptionHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for CaptionHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(a2 + 40);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    outlined destroy of Environment<RedactionReasons>.Content(a1 + v7, (uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CaptionHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3716F0C);
}

uint64_t sub_1C3716F0C()
{
  OUTLINED_FUNCTION_173();
  if (v2) {
    return OUTLINED_FUNCTION_46_0(*(void *)(v0 + 8));
  }
  OUTLINED_FUNCTION_32_37();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
  uint64_t v4 = OUTLINED_FUNCTION_188(*(int *)(v1 + 40));
  return __swift_getEnumTagSinglePayload(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for CaptionHeader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3716F90);
}

void sub_1C3716F90()
{
  OUTLINED_FUNCTION_5();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
    uint64_t v5 = OUTLINED_FUNCTION_85_5(*(int *)(v4 + 40));
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
}

void type metadata completion function for CaptionHeader()
{
  _s7SwiftUI11EnvironmentV7ContentOyAA16RedactionReasonsV_GMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Environment<RedactionReasons>.Content, MEMORY[0x1E4F3CD58], MEMORY[0x1E4F3C648]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for GroupIconView()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void *initializeBufferWithCopyOfBuffer for GroupIconView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GroupIconView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for GroupIconView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

void *type metadata accessor for GroupIconView()
{
  return &unk_1F1EBC918;
}

unint64_t initializeBufferWithCopyOfBuffer for TranscriptParticipantBadge(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    unint64_t v15 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v84 = a3;
    uint64_t v85 = a2;
    uint64_t v9 = a3[5];
    uint64_t v10 = (unsigned char *)(a1 + v9);
    uint64_t v11 = (unsigned char *)(a2 + v9);
    uint64_t v12 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v13 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
        goto LABEL_18;
      case 4u:
        uint64_t v16 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v10, v11, v16);
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v18 = *(int *)(v17 + 48);
        uint64_t v19 = &v10[v18];
        uint64_t v20 = &v11[v18];
        *(_OWORD *)uint64_t v19 = *(_OWORD *)&v11[v18];
        uint64_t v21 = *(void *)&v11[v18 + 16];
        uint64_t v22 = *(void *)&v11[v18 + 24];
        *((void *)v19 + 2) = v21;
        *((void *)v19 + 3) = v22;
        *((_WORD *)v19 + 16) = *((_WORD *)v20 + 16);
        *((void *)v19 + 5) = *((void *)v20 + 5);
        v19[48] = v20[48];
        *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
        *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
        v19[88] = v20[88];
        v19[89] = v20[89];
        uint64_t v23 = *((void *)v20 + 15);
        swift_bridgeObjectRetain();
        if (v23)
        {
          if (v23 == 1)
          {
            long long v24 = v19 + 96;
            uint64_t v25 = v20 + 96;
            size_t v26 = 209;
            goto LABEL_12;
          }
          uint64_t v28 = *((void *)v20 + 16);
          *((void *)v19 + 15) = v23;
          *((void *)v19 + 16) = v28;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))((uint64_t)(v19 + 96), (uint64_t)(v20 + 96), v23);
        }
        else
        {
          long long v27 = *((_OWORD *)v20 + 7);
          *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
          *((_OWORD *)v19 + 7) = v27;
          *((void *)v19 + 16) = *((void *)v20 + 16);
        }
        *((_DWORD *)v19 + 34) = *((_DWORD *)v20 + 34);
        long long v29 = *((_OWORD *)v20 + 10);
        *((_OWORD *)v19 + 9) = *((_OWORD *)v20 + 9);
        *((_OWORD *)v19 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v29;
        *((_OWORD *)v19 + 11) = *((_OWORD *)v20 + 11);
        v19[192] = v20[192];
        long long v24 = v19 + 208;
        uint64_t v25 = v20 + 208;
        *((void *)v19 + 25) = *((void *)v20 + 25);
        size_t v26 = 97;
LABEL_12:
        memcpy(v24, v25, v26);
        uint64_t v30 = *((void *)v20 + 39);
        if (v30)
        {
          uint64_t v31 = *((void *)v20 + 40);
          uint64_t v32 = *((void *)v20 + 41);
          *((void *)v19 + 39) = v30;
          *((void *)v19 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v31;
          *((void *)v19 + 41) = v32;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v19 + 312) = *(_OWORD *)(v20 + 312);
          *((void *)v19 + 41) = *((void *)v20 + 41);
        }
        uint64_t v33 = *(int *)(v17 + 64);
        uint64_t v34 = &v10[v33];
        uint64_t v35 = &v11[v33];
        uint64_t v36 = *((void *)v35 + 1);
        if (v36)
        {
          *(void *)uint64_t v34 = *(void *)v35;
          *((void *)v34 + 1) = v36;
          uint64_t v37 = *((void *)v35 + 3);
          *((void *)v34 + 2) = *((void *)v35 + 2);
          *((void *)v34 + 3) = v37;
          v34[32] = v35[32];
          *(_OWORD *)(v34 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(v35 + 40);
          *((void *)v34 + 7) = *((void *)v35 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v38 = *((_OWORD *)v35 + 1);
          *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
          *((_OWORD *)v34 + 1) = v38;
          long long v39 = *((_OWORD *)v35 + 3);
          *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
          *((_OWORD *)v34 + 3) = v39;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        uint64_t v40 = (int *)type metadata accessor for Participant(0);
        uint64_t v41 = v40[5];
        uint64_t v42 = &v10[v41];
        int v43 = &v11[v41];
        uint64_t v44 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
        uint64_t v45 = v40[6];
        uint64_t v46 = &v10[v45];
        uint64_t v47 = &v11[v45];
        v46[4] = v47[4];
        *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
        uint64_t v48 = v40[7];
        uint64_t v49 = &v10[v48];
        int v50 = &v11[v48];
        int v51 = *(void **)v50;
        unint64_t v83 = a1;
        if (*(void *)v50)
        {
          uint64_t v52 = *((void *)v50 + 1);
          *(void *)uint64_t v49 = v51;
          *((void *)v49 + 1) = v52;
          v49[16] = v50[16];
          uint64_t v53 = *((void *)v50 + 4);
          *((void *)v49 + 3) = *((void *)v50 + 3);
          *((void *)v49 + 4) = v53;
          id v54 = v51;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v55 = *((_OWORD *)v50 + 1);
          *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
          *((_OWORD *)v49 + 1) = v55;
          *((void *)v49 + 4) = *((void *)v50 + 4);
        }
        *(void *)&v10[v40[8]] = *(void *)&v11[v40[8]];
        uint64_t v56 = v40[9];
        uint64_t v57 = &v10[v56];
        uint64_t v58 = &v11[v56];
        uint64_t v59 = v58[1];
        void *v57 = *v58;
        v57[1] = v59;
        v10[v40[10]] = v11[v40[10]];
        *(void *)&v10[v40[11]] = *(void *)&v11[v40[11]];
        uint64_t v60 = v40[12];
        uint64_t v61 = *(void **)&v11[v60];
        *(void *)&v10[v60] = v61;
        v10[v40[13]] = v11[v40[13]];
        uint64_t v62 = v40[14];
        uint64_t v63 = &v10[v62];
        uint64_t v64 = &v11[v62];
        uint64_t v65 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v66 = v61;
        if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65))
        {
          uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
          __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v65);
        }
        unint64_t v15 = v83;
        uint64_t v68 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v69 = *(int *)(v68 + 20);
        uint64_t v70 = &v63[v69];
        uint64_t v71 = &v64[v69];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v64[v69], 1, v65))
        {
          uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v70, v71, v65);
          __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v65);
        }
        v63[*(int *)(v68 + 24)] = v64[*(int *)(v68 + 24)];
        v10[v40[15]] = v11[v40[15]];
        *(void *)&v10[v40[16]] = *(void *)&v11[v40[16]];
        uint64_t v73 = v84[6];
        uint64_t v74 = v84[7];
        int v75 = (void *)(v83 + v73);
        int v76 = (void *)(v85 + v73);
        uint64_t v77 = v76[1];
        *int v75 = *v76;
        v75[1] = v77;
        *(unsigned char *)(v83 + v74) = *(unsigned char *)(v85 + v74);
        uint64_t v78 = v84[8];
        uint64_t v79 = (void *)(v83 + v78);
        uint64_t v80 = (void *)(v85 + v78);
        uint64_t v81 = v80[1];
        *uint64_t v79 = *v80;
        v79[1] = v81;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        break;
      default:
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        goto LABEL_19;
    }
  }
  swift_retain();
  return v15;
}

uint64_t destroy for TranscriptParticipantBadge(uint64_t a1, uint64_t a2)
{
  outlined consume of Environment<CGFloat>.Content(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v5 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      break;
    case 4u:
      uint64_t v14 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v4, v14);
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v16 = v4 + *(int *)(v15 + 48);
      swift_bridgeObjectRelease();
      if (*(void *)(v16 + 120) >= 2uLL) {
        __swift_destroy_boxed_opaque_existential_1(v16 + 96);
      }
      if (*(void *)(v16 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v4 + *(int *)(v15 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  uint64_t v6 = (int *)type metadata accessor for Participant(0);
  uint64_t v7 = v4 + v6[5];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = (id *)(v4 + v6[7]);
  if (*v9)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v10 = v4 + v6[14];
  uint64_t v11 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = v10 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v12, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v12, v11);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for TranscriptParticipantBadge(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v80 = a3;
  uint64_t v81 = a2;
  uint64_t v8 = a3[5];
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v10 = (unsigned char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v12 = type metadata accessor for Date();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
      goto LABEL_16;
    case 4u:
      uint64_t v13 = type metadata accessor for Date();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v15 = *(int *)(v14 + 48);
      uint64_t v16 = &v9[v15];
      uint64_t v17 = &v10[v15];
      *(_OWORD *)uint64_t v16 = *(_OWORD *)&v10[v15];
      uint64_t v18 = *(void *)&v10[v15 + 16];
      uint64_t v19 = *(void *)&v10[v15 + 24];
      *((void *)v16 + 2) = v18;
      *((void *)v16 + 3) = v19;
      *((_WORD *)v16 + 16) = *((_WORD *)v17 + 16);
      *((void *)v16 + 5) = *((void *)v17 + 5);
      v16[48] = v17[48];
      *(_OWORD *)(v16 + 56) = *(_OWORD *)(v17 + 56);
      *(_OWORD *)(v16 + 72) = *(_OWORD *)(v17 + 72);
      v16[88] = v17[88];
      v16[89] = v17[89];
      uint64_t v20 = *((void *)v17 + 15);
      swift_bridgeObjectRetain();
      if (v20)
      {
        if (v20 == 1)
        {
          uint64_t v21 = v16 + 96;
          uint64_t v22 = v17 + 96;
          size_t v23 = 209;
          goto LABEL_10;
        }
        uint64_t v25 = *((void *)v17 + 16);
        *((void *)v16 + 15) = v20;
        *((void *)v16 + 16) = v25;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))((uint64_t)(v16 + 96), (uint64_t)(v17 + 96), v20);
      }
      else
      {
        long long v24 = *((_OWORD *)v17 + 7);
        *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
        *((_OWORD *)v16 + 7) = v24;
        *((void *)v16 + 16) = *((void *)v17 + 16);
      }
      *((_DWORD *)v16 + 34) = *((_DWORD *)v17 + 34);
      long long v26 = *((_OWORD *)v17 + 10);
      *((_OWORD *)v16 + 9) = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v26;
      *((_OWORD *)v16 + 11) = *((_OWORD *)v17 + 11);
      v16[192] = v17[192];
      uint64_t v21 = v16 + 208;
      uint64_t v22 = v17 + 208;
      *((void *)v16 + 25) = *((void *)v17 + 25);
      size_t v23 = 97;
LABEL_10:
      memcpy(v21, v22, v23);
      uint64_t v27 = *((void *)v17 + 39);
      if (v27)
      {
        uint64_t v28 = *((void *)v17 + 40);
        uint64_t v29 = *((void *)v17 + 41);
        *((void *)v16 + 39) = v27;
        *((void *)v16 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v28;
        *((void *)v16 + 41) = v29;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v16 + 312) = *(_OWORD *)(v17 + 312);
        *((void *)v16 + 41) = *((void *)v17 + 41);
      }
      uint64_t v30 = *(int *)(v14 + 64);
      uint64_t v31 = &v9[v30];
      uint64_t v32 = &v10[v30];
      uint64_t v33 = *((void *)v32 + 1);
      if (v33)
      {
        *(void *)uint64_t v31 = *(void *)v32;
        *((void *)v31 + 1) = v33;
        uint64_t v34 = *((void *)v32 + 3);
        *((void *)v31 + 2) = *((void *)v32 + 2);
        *((void *)v31 + 3) = v34;
        v31[32] = v32[32];
        *(_OWORD *)(v31 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(_OWORD *)(v32 + 40);
        *((void *)v31 + 7) = *((void *)v32 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v35 = *((_OWORD *)v32 + 1);
        *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
        *((_OWORD *)v31 + 1) = v35;
        long long v36 = *((_OWORD *)v32 + 3);
        *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
        *((_OWORD *)v31 + 3) = v36;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_17:
      uint64_t v37 = (int *)type metadata accessor for Participant(0);
      uint64_t v38 = v37[5];
      long long v39 = &v9[v38];
      uint64_t v40 = &v10[v38];
      uint64_t v41 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
      uint64_t v42 = v37[6];
      int v43 = &v9[v42];
      uint64_t v44 = &v10[v42];
      v43[4] = v44[4];
      *(_DWORD *)int v43 = *(_DWORD *)v44;
      uint64_t v45 = v37[7];
      uint64_t v46 = &v9[v45];
      uint64_t v47 = &v10[v45];
      uint64_t v48 = *(void **)v47;
      uint64_t v82 = a1;
      if (*(void *)v47)
      {
        uint64_t v49 = *((void *)v47 + 1);
        *(void *)uint64_t v46 = v48;
        *((void *)v46 + 1) = v49;
        v46[16] = v47[16];
        uint64_t v50 = *((void *)v47 + 4);
        *((void *)v46 + 3) = *((void *)v47 + 3);
        *((void *)v46 + 4) = v50;
        id v51 = v48;
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v52 = *((_OWORD *)v47 + 1);
        *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
        *((_OWORD *)v46 + 1) = v52;
        *((void *)v46 + 4) = *((void *)v47 + 4);
      }
      *(void *)&v9[v37[8]] = *(void *)&v10[v37[8]];
      uint64_t v53 = v37[9];
      id v54 = &v9[v53];
      long long v55 = &v10[v53];
      uint64_t v56 = v55[1];
      *id v54 = *v55;
      v54[1] = v56;
      v9[v37[10]] = v10[v37[10]];
      *(void *)&v9[v37[11]] = *(void *)&v10[v37[11]];
      uint64_t v57 = v37[12];
      uint64_t v58 = *(void **)&v10[v57];
      *(void *)&v9[v57] = v58;
      v9[v37[13]] = v10[v37[13]];
      uint64_t v59 = v37[14];
      uint64_t v60 = &v9[v59];
      uint64_t v61 = &v10[v59];
      uint64_t v62 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v63 = v58;
      if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
      {
        uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
        __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
      }
      uint64_t v65 = type metadata accessor for Participant.CountdownInfo(0);
      uint64_t v66 = *(int *)(v65 + 20);
      uint64_t v67 = &v60[v66];
      uint64_t v68 = &v61[v66];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v61[v66], 1, v62))
      {
        uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v67, v68, v62);
        __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v62);
      }
      v60[*(int *)(v65 + 24)] = v61[*(int *)(v65 + 24)];
      v9[v37[15]] = v10[v37[15]];
      *(void *)&v9[v37[16]] = *(void *)&v10[v37[16]];
      uint64_t v70 = v80[6];
      uint64_t v71 = v80[7];
      uint64_t v72 = (void *)(v82 + v70);
      uint64_t v73 = (void *)(v81 + v70);
      uint64_t v74 = v73[1];
      *uint64_t v72 = *v73;
      v72[1] = v74;
      *(unsigned char *)(v82 + v71) = *(unsigned char *)(v81 + v71);
      uint64_t v75 = v80[8];
      int v76 = (void *)(v82 + v75);
      uint64_t v77 = (void *)(v81 + v75);
      uint64_t v78 = v77[1];
      void *v76 = *v77;
      v76[1] = v78;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      return v82;
    default:
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      goto LABEL_17;
  }
}

uint64_t assignWithCopy for TranscriptParticipantBadge(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  uint64_t v91 = a3;
  uint64_t v92 = a2;
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  if (a1 != a2)
  {
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    uint64_t v13 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v11, v12, v14);
        goto LABEL_17;
      case 4u:
        uint64_t v15 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v11, v12, v15);
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v17 = *(int *)(v16 + 48);
        uint64_t v18 = &v11[v17];
        uint64_t v19 = &v12[v17];
        *(_OWORD *)uint64_t v18 = *(_OWORD *)&v12[v17];
        *((void *)v18 + 2) = *(void *)&v12[v17 + 16];
        uint64_t v20 = *(void *)&v12[v17 + 24];
        *((_WORD *)v18 + 16) = *((_WORD *)v19 + 16);
        *((void *)v18 + 3) = v20;
        *((void *)v18 + 5) = *((void *)v19 + 5);
        v18[48] = v19[48];
        long long v21 = *(_OWORD *)(v19 + 72);
        long long v22 = *(_OWORD *)(v19 + 56);
        v18[88] = v19[88];
        *(_OWORD *)(v18 + 56) = v22;
        *(_OWORD *)(v18 + 72) = v21;
        v18[89] = v19[89];
        uint64_t v23 = *((void *)v19 + 15);
        swift_bridgeObjectRetain();
        if (v23)
        {
          if (v23 == 1)
          {
            long long v24 = v18 + 96;
            uint64_t v25 = v19 + 96;
            size_t v26 = 209;
            goto LABEL_11;
          }
          *((void *)v18 + 15) = v23;
          *((void *)v18 + 16) = *((void *)v19 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))((uint64_t)(v18 + 96), (uint64_t)(v19 + 96), v23);
        }
        else
        {
          long long v27 = *((_OWORD *)v19 + 6);
          long long v28 = *((_OWORD *)v19 + 7);
          *((void *)v18 + 16) = *((void *)v19 + 16);
          *((_OWORD *)v18 + 6) = v27;
          *((_OWORD *)v18 + 7) = v28;
        }
        *((_DWORD *)v18 + 34) = *((_DWORD *)v19 + 34);
        *((void *)v18 + 18) = *((void *)v19 + 18);
        *((void *)v18 + 19) = *((void *)v19 + 19);
        long long v29 = *((_OWORD *)v19 + 10);
        long long v30 = *((_OWORD *)v19 + 11);
        v18[192] = v19[192];
        *((_OWORD *)v18 + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v29;
        *((_OWORD *)v18 + 11) = v30;
        *((void *)v18 + 25) = *((void *)v19 + 25);
        long long v24 = v18 + 208;
        uint64_t v25 = v19 + 208;
        size_t v26 = 97;
LABEL_11:
        memcpy(v24, v25, v26);
        uint64_t v31 = *((void *)v19 + 39);
        if (v31)
        {
          uint64_t v32 = *((void *)v19 + 40);
          *((void *)v18 + 39) = v31;
          *((void *)v18 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v32;
          *((void *)v18 + 41) = *((void *)v19 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v33 = *(_OWORD *)(v19 + 312);
          *((void *)v18 + 41) = *((void *)v19 + 41);
          *(_OWORD *)(v18 + 312) = v33;
        }
        uint64_t v34 = *(int *)(v16 + 64);
        long long v35 = &v11[v34];
        long long v36 = &v12[v34];
        if (*((void *)v36 + 1))
        {
          *(void *)long long v35 = *(void *)v36;
          *((void *)v35 + 1) = *((void *)v36 + 1);
          *((void *)v35 + 2) = *((void *)v36 + 2);
          *((void *)v35 + 3) = *((void *)v36 + 3);
          v35[32] = v36[32];
          *((void *)v35 + 5) = *((void *)v36 + 5);
          *((void *)v35 + 6) = *((void *)v36 + 6);
          *((void *)v35 + 7) = *((void *)v36 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v37 = *(_OWORD *)v36;
          long long v38 = *((_OWORD *)v36 + 1);
          long long v39 = *((_OWORD *)v36 + 3);
          *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
          *((_OWORD *)v35 + 3) = v39;
          *(_OWORD *)long long v35 = v37;
          *((_OWORD *)v35 + 1) = v38;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        break;
    }
  }
  uint64_t v40 = (int *)type metadata accessor for Participant(0);
  uint64_t v41 = v40[5];
  uint64_t v42 = &v11[v41];
  int v43 = &v12[v41];
  uint64_t v44 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
  uint64_t v45 = v40[6];
  uint64_t v46 = &v11[v45];
  uint64_t v47 = &v12[v45];
  *uint64_t v46 = *v47;
  v46[1] = v47[1];
  v46[2] = v47[2];
  v46[3] = v47[3];
  v46[4] = v47[4];
  uint64_t v48 = v40[7];
  uint64_t v49 = (uint64_t)&v11[v48];
  uint64_t v50 = &v12[v48];
  id v51 = *(void **)&v11[v48];
  long long v52 = *(void **)&v12[v48];
  if (v51)
  {
    if (v52)
    {
      *(void *)uint64_t v49 = v52;
      id v53 = v52;

      uint64_t v54 = *((void *)v50 + 1);
      *(unsigned char *)(v49 + 16) = v50[16];
      *(void *)(v49 + 8) = v54;
      *(void *)(v49 + 24) = *((void *)v50 + 3);
      *(void *)(v49 + 32) = *((void *)v50 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers(v49);
      uint64_t v57 = *((void *)v50 + 4);
      long long v58 = *((_OWORD *)v50 + 1);
      *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
      *(_OWORD *)(v49 + 16) = v58;
      *(void *)(v49 + 32) = v57;
    }
  }
  else if (v52)
  {
    *(void *)uint64_t v49 = v52;
    uint64_t v55 = *((void *)v50 + 1);
    *(unsigned char *)(v49 + 16) = v50[16];
    *(void *)(v49 + 8) = v55;
    *(void *)(v49 + 24) = *((void *)v50 + 3);
    *(void *)(v49 + 32) = *((void *)v50 + 4);
    id v56 = v52;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v59 = *(_OWORD *)v50;
    long long v60 = *((_OWORD *)v50 + 1);
    *(void *)(v49 + 32) = *((void *)v50 + 4);
    *(_OWORD *)uint64_t v49 = v59;
    *(_OWORD *)(v49 + 16) = v60;
  }
  *(void *)&v11[v40[8]] = *(void *)&v12[v40[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = v40[9];
  uint64_t v62 = &v11[v61];
  id v63 = &v12[v61];
  *(void *)uint64_t v62 = *(void *)v63;
  *((void *)v62 + 1) = *((void *)v63 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[v40[10]] = v12[v40[10]];
  *(void *)&v11[v40[11]] = *(void *)&v12[v40[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = v40[12];
  uint64_t v65 = *(void **)&v11[v64];
  uint64_t v66 = *(void **)&v12[v64];
  *(void *)&v11[v64] = v66;
  id v67 = v66;

  v11[v40[13]] = v12[v40[13]];
  uint64_t v68 = v40[14];
  uint64_t v69 = &v11[v68];
  uint64_t v70 = &v12[v68];
  uint64_t v71 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v69, 1, v71);
  int v73 = __swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71);
  uint64_t v93 = a1;
  if (EnumTagSinglePayload)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
      __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v71);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v74 = *(void *)(v71 - 8);
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v74 + 8))(v69, v71);
LABEL_30:
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v69, v70, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v74 + 24))(v69, v70, v71);
LABEL_31:
  uint64_t v76 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v77 = *(int *)(v76 + 20);
  uint64_t v78 = &v69[v77];
  uint64_t v79 = &v70[v77];
  int v80 = __swift_getEnumTagSinglePayload((uint64_t)&v69[v77], 1, v71);
  int v81 = __swift_getEnumTagSinglePayload((uint64_t)v79, 1, v71);
  if (!v80)
  {
    uint64_t v82 = *(void *)(v71 - 8);
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 24))(v78, v79, v71);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v82 + 8))(v78, v71);
    goto LABEL_36;
  }
  if (v81)
  {
LABEL_36:
    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v78, v79, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v78, v79, v71);
  __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v71);
LABEL_37:
  v69[*(int *)(v76 + 24)] = v70[*(int *)(v76 + 24)];
  v11[v40[15]] = v12[v40[15]];
  *(void *)&v11[v40[16]] = *(void *)&v12[v40[16]];
  swift_retain();
  swift_release();
  uint64_t v84 = v91[6];
  uint64_t v85 = v93 + v84;
  uint64_t v86 = v92 + v84;
  *(void *)(v93 + v84) = *(void *)(v92 + v84);
  swift_retain();
  swift_release();
  *(void *)(v85 + 8) = *(void *)(v86 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v93 + v91[7]) = *(unsigned char *)(v92 + v91[7]);
  uint64_t v87 = v91[8];
  uint64_t v88 = v93 + v87;
  uint64_t v89 = v92 + v87;
  *(void *)(v93 + v87) = *(void *)(v92 + v87);
  swift_retain();
  swift_release();
  *(void *)(v88 + 8) = *(void *)(v89 + 8);
  swift_retain();
  swift_release();
  return v93;
}

uint64_t initializeWithTake for TranscriptParticipantBadge(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      uint64_t v15 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v5, v6, v15);
      goto LABEL_5;
    case 4u:
      uint64_t v8 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&v5[*(int *)(v9 + 48)], &v6[*(int *)(v9 + 48)], 0x150uLL);
      uint64_t v10 = *(int *)(v9 + 64);
      uint64_t v11 = &v5[v10];
      uint64_t v12 = &v6[v10];
      long long v13 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v13;
      long long v14 = *((_OWORD *)v12 + 3);
      *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
      *((_OWORD *)v11 + 3) = v14;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  uint64_t v16 = (int *)type metadata accessor for Participant(0);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v5[v17];
  uint64_t v19 = &v6[v17];
  uint64_t v20 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = v16[6];
  long long v22 = &v5[v21];
  uint64_t v23 = &v6[v21];
  *(_DWORD *)long long v22 = *(_DWORD *)v23;
  id v22[4] = v23[4];
  uint64_t v24 = v16[7];
  uint64_t v25 = &v5[v24];
  size_t v26 = &v6[v24];
  long long v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  *((void *)v25 + 4) = *((void *)v26 + 4);
  *(void *)&v5[v16[8]] = *(void *)&v6[v16[8]];
  *(_OWORD *)&v5[v16[9]] = *(_OWORD *)&v6[v16[9]];
  v5[v16[10]] = v6[v16[10]];
  *(void *)&v5[v16[11]] = *(void *)&v6[v16[11]];
  *(void *)&v5[v16[12]] = *(void *)&v6[v16[12]];
  v5[v16[13]] = v6[v16[13]];
  uint64_t v28 = v16[14];
  long long v29 = &v5[v28];
  long long v30 = &v6[v28];
  uint64_t v31 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
  }
  uint64_t v33 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v34 = *(int *)(v33 + 20);
  long long v35 = &v29[v34];
  long long v36 = &v30[v34];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v30[v34], 1, v31))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v36, v31);
    __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v31);
  }
  v29[*(int *)(v33 + 24)] = v30[*(int *)(v33 + 24)];
  v5[v16[15]] = v6[v16[15]];
  *(void *)&v5[v16[16]] = *(void *)&v6[v16[16]];
  uint64_t v38 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for TranscriptParticipantBadge(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  uint64_t v66 = a3;
  id v67 = a2;
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v68 = a1;
  if ((uint64_t *)a1 != a2)
  {
    _s15ConversationKit11ParticipantV5StateOWOhTm_3();
    uint64_t v13 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        uint64_t v21 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v11, v12, v21);
        goto LABEL_5;
      case 4u:
        uint64_t v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v11[*(int *)(v15 + 48)], &v12[*(int *)(v15 + 48)], 0x150uLL);
        uint64_t v16 = *(int *)(v15 + 64);
        uint64_t v17 = &v11[v16];
        uint64_t v18 = &v12[v16];
        long long v19 = *((_OWORD *)v18 + 1);
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        *((_OWORD *)v17 + 1) = v19;
        long long v20 = *((_OWORD *)v18 + 3);
        *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
        *((_OWORD *)v17 + 3) = v20;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        break;
    }
  }
  long long v22 = (int *)type metadata accessor for Participant(0);
  uint64_t v23 = v22[5];
  uint64_t v24 = &v11[v23];
  uint64_t v25 = &v12[v23];
  uint64_t v26 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = v22[6];
  uint64_t v28 = &v11[v27];
  long long v29 = &v12[v27];
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  v28[2] = v29[2];
  v28[3] = v29[3];
  v28[4] = v29[4];
  uint64_t v30 = v22[7];
  uint64_t v31 = (uint64_t)&v11[v30];
  uint64_t v32 = &v12[v30];
  uint64_t v33 = *(void **)&v11[v30];
  if (v33)
  {
    if (*(void *)v32)
    {
      *(void *)uint64_t v31 = *(void *)v32;

      *(void *)(v31 + 8) = *((void *)v32 + 1);
      *(unsigned char *)(v31 + 16) = v32[16];
      uint64_t v34 = *((void *)v32 + 4);
      *(void *)(v31 + 24) = *((void *)v32 + 3);
      *(void *)(v31 + 32) = v34;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    outlined destroy of Participant.RemoteIdentifiers(v31);
  }
  long long v35 = *((_OWORD *)v32 + 1);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v35;
  *(void *)(v31 + 32) = *((void *)v32 + 4);
LABEL_11:
  *(void *)&v11[v22[8]] = *(void *)&v12[v22[8]];
  swift_bridgeObjectRelease();
  uint64_t v36 = v22[9];
  uint64_t v37 = &v11[v36];
  uint64_t v38 = &v12[v36];
  uint64_t v40 = *(void *)v38;
  uint64_t v39 = *((void *)v38 + 1);
  *(void *)uint64_t v37 = v40;
  *((void *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  v11[v22[10]] = v12[v22[10]];
  *(void *)&v11[v22[11]] = *(void *)&v12[v22[11]];
  swift_bridgeObjectRelease();
  uint64_t v41 = v22[12];
  uint64_t v42 = *(void **)&v11[v41];
  *(void *)&v11[v41] = *(void *)&v12[v41];

  v11[v22[13]] = v12[v22[13]];
  uint64_t v43 = v22[14];
  uint64_t v44 = &v11[v43];
  uint64_t v45 = &v12[v43];
  uint64_t v46 = type metadata accessor for Date();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v44, 1, v46);
  int v48 = __swift_getEnumTagSinglePayload((uint64_t)v45, 1, v46);
  if (EnumTagSinglePayload)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v46);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  uint64_t v49 = *(void *)(v46 - 8);
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v46);
LABEL_16:
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v44, v45, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v49 + 40))(v44, v45, v46);
LABEL_17:
  uint64_t v51 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v52 = *(int *)(v51 + 20);
  id v53 = &v44[v52];
  uint64_t v54 = &v45[v52];
  int v55 = __swift_getEnumTagSinglePayload((uint64_t)&v44[v52], 1, v46);
  int v56 = __swift_getEnumTagSinglePayload((uint64_t)v54, 1, v46);
  if (!v55)
  {
    uint64_t v57 = *(void *)(v46 - 8);
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 40))(v53, v54, v46);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v53, v46);
    goto LABEL_22;
  }
  if (v56)
  {
LABEL_22:
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v53, v54, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v53, v54, v46);
  __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v46);
LABEL_23:
  v44[*(int *)(v51 + 24)] = v45[*(int *)(v51 + 24)];
  v11[v22[15]] = v12[v22[15]];
  *(void *)&v11[v22[16]] = *(void *)&v12[v22[16]];
  swift_release();
  uint64_t v59 = v66[6];
  uint64_t v60 = v68 + v59;
  uint64_t v61 = (uint64_t)v67 + v59;
  *(void *)(v68 + v59) = *(uint64_t *)((char *)v67 + v59);
  swift_release();
  *(void *)(v60 + 8) = *(void *)(v61 + 8);
  swift_release();
  uint64_t v62 = v66[8];
  *(unsigned char *)(v68 + v66[7]) = *((unsigned char *)v67 + v66[7]);
  uint64_t v63 = v68 + v62;
  uint64_t v64 = (uint64_t)v67 + v62;
  *(void *)(v68 + v62) = *(uint64_t *)((char *)v67 + v62);
  swift_release();
  *(void *)(v63 + 8) = *(void *)(v64 + 8);
  swift_release();
  return v68;
}

uint64_t getEnumTagSinglePayload for TranscriptParticipantBadge(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3719B14);
}

uint64_t sub_1C3719B14()
{
  uint64_t v3 = OUTLINED_FUNCTION_55_1();
  type metadata accessor for Participant(v3);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v4 + 84) != v0) {
    return OUTLINED_FUNCTION_46_0(*(void *)(v1 + *(int *)(v2 + 24)));
  }
  uint64_t v5 = OUTLINED_FUNCTION_188(*(int *)(v2 + 20));
  return __swift_getEnumTagSinglePayload(v5, v6, v7);
}

uint64_t storeEnumTagSinglePayload for TranscriptParticipantBadge(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3719B9C);
}

void sub_1C3719B9C()
{
  uint64_t v4 = OUTLINED_FUNCTION_30_6();
  type metadata accessor for Participant(v4);
  OUTLINED_FUNCTION_1_5();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = OUTLINED_FUNCTION_85_5(*(int *)(v2 + 20));
    __swift_storeEnumTagSinglePayload(v6, v7, v8, v9);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 24)) = (v0 - 1);
  }
}

uint64_t type metadata completion function for TranscriptParticipantBadge()
{
  uint64_t result = type metadata accessor for Participant(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C3719CC4()
{
  return lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type ScrollViewReader<GeometryReader<ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<TranscriptView.BackgroundModifier>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptView.BackgroundModifier>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptView.BackgroundModifier>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptView.BackgroundModifier>, _BackgroundStyleModifier<AnyShapeStyle>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptView.BackgroundModifier> and conformance _ViewModifier_Content<A>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _BackgroundStyleModifier<AnyShapeStyle> and conformance _BackgroundStyleModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptView.BackgroundModifier>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t sub_1C3719DC8()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptView.ClipShapeModifier>, _ClipEffect<RoundedRectangle>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<TranscriptView.ClipShapeModifier>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptView.ClipShapeModifier>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptView.ClipShapeModifier>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptView.ClipShapeModifier>, _ClipEffect<RoundedRectangle>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptView.ClipShapeModifier> and conformance _ViewModifier_Content<A>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ClipEffect<RoundedRectangle> and conformance _ClipEffect<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptView.ClipShapeModifier>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1C3719ED0()
{
  return swift_getWitnessTable();
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>> and conformance VStack<A>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier> and conformance _ViewModifier_Content<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.ContainerPadding>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.ContainerPadding>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.ContainerPadding>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.ContainerPadding>, _PaddingLayout>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptSubtitle.ContainerPadding> and conformance _ViewModifier_Content<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.ContainerPadding>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.TranscriptFrame>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.TranscriptFrame>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.TranscriptFrame>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.TranscriptFrame>, _FrameLayout>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptSubtitle.TranscriptFrame> and conformance _ViewModifier_Content<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.TranscriptFrame>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.PlaceHolderFrame>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.PlaceHolderFrame>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.PlaceHolderFrame>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.PlaceHolderFrame>, _FlexFrameLayout>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptSubtitle.PlaceHolderFrame> and conformance _ViewModifier_Content<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.PlaceHolderFrame>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t sub_1C371A294()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptSubtitle.SubtitlePadding> and conformance _ViewModifier_Content<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in TranscriptParticipantBadge()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in TranscriptList.PaddingModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in CaptionRow()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in CaptionHeader()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in GroupIconView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>>);
    lazy protocol witness table accessor for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _MaskEffect<Circle> and conformance _MaskEffect<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<GroupIconView.GroupImage, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<GroupIconView.GroupImage, _FrameLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage()
{
  unint64_t result = lazy protocol witness table cache variable for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage;
  if (!lazy protocol witness table cache variable for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage;
  if (!lazy protocol witness table cache variable for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage);
  }
  return result;
}

void partial apply for closure #2 in CaptionRow.body.getter()
{
  uint64_t v0 = type metadata accessor for CaptionRow(0);
  OUTLINED_FUNCTION_1_1(v0);
  OUTLINED_FUNCTION_4_115();
  closure #2 in CaptionRow.body.getter(v1);
}

uint64_t objectdestroy_210Tm()
{
  OUTLINED_FUNCTION_24_0();
  type metadata accessor for CaptionRow(0);
  OUTLINED_FUNCTION_19_4();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v0 + v4 + *(int *)(type metadata accessor for CaptionSectioner.Caption(0) + 20);
  type metadata accessor for Participant.State(0);
  switch(OUTLINED_FUNCTION_51_23())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_12_0();
      (*(void (**)(unint64_t))(v6 + 8))(v5);
      break;
    case 4u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_26_2();
      v18();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      OUTLINED_FUNCTION_23_63();
      if (*(void *)(v2 + 120) >= 2uLL) {
        __swift_destroy_boxed_opaque_existential_1(v2 + 96);
      }
      if (*(void *)(v2 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (OUTLINED_FUNCTION_35_30())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_45_24();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v7();
  uint64_t v8 = (id *)(v5 + *(int *)(v1 + 28));
  if (*v8)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_37_35();
  swift_bridgeObjectRelease();

  type metadata accessor for Date();
  if (!OUTLINED_FUNCTION_15_80())
  {
    OUTLINED_FUNCTION_48();
    uint64_t v9 = OUTLINED_FUNCTION_14_81();
    v10(v9);
  }
  type metadata accessor for Participant.CountdownInfo(0);
  if (!OUTLINED_FUNCTION_15_80())
  {
    OUTLINED_FUNCTION_48();
    uint64_t v11 = OUTLINED_FUNCTION_14_81();
    v12(v11);
  }
  swift_release();
  OUTLINED_FUNCTION_48();
  uint64_t v14 = *(void (**)(void))(v13 + 8);
  OUTLINED_FUNCTION_17_65();
  v14();
  OUTLINED_FUNCTION_17_65();
  v14();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for GeometryProxy();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v15();
  swift_release();
  OUTLINED_FUNCTION_22();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in CaptionRow.body.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_49_2();
  uint64_t v1 = type metadata accessor for CaptionRow(v0);
  OUTLINED_FUNCTION_1_1(v1);
  OUTLINED_FUNCTION_26_51();
  return closure #3 in CaptionRow.body.getter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>> and conformance HStack<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _PreferenceActionModifier<HeightKey> and conformance _PreferenceActionModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, HeightKey> and conformance _AnchorWritingModifier<A, B>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<TranscriptLabel, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<TranscriptLabel, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<TranscriptLabel, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<TranscriptLabel, _FlexFrameLayout>);
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type TranscriptLabel and conformance TranscriptLabel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<TranscriptLabel, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void *outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>(void *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v3 = a1[14];
  uint64_t v4 = a1[15];
  uint64_t v5 = a1[16];
  swift_retain();
  outlined copy of Text?(v2, v3, v4, v5);
  swift_retain();
  return a1;
}

void *outlined release of ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>(void *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v3 = a1[14];
  uint64_t v4 = a1[15];
  uint64_t v5 = a1[16];
  swift_release();
  outlined consume of Text?(v2, v3, v4, v5);
  swift_release();
  return a1;
}

uint64_t partial apply for closure #3 in TranscriptParticipantBadge.body.getter()
{
  uint64_t v2 = type metadata accessor for TranscriptParticipantBadge(0);
  OUTLINED_FUNCTION_1_1(v2);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return closure #3 in TranscriptParticipantBadge.body.getter(v4);
}

uint64_t objectdestroy_216Tm()
{
  OUTLINED_FUNCTION_31();
  type metadata accessor for TranscriptParticipantBadge(0);
  OUTLINED_FUNCTION_19_4();
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  outlined consume of Environment<CGFloat>.Content(*(void *)v5, *(unsigned char *)(v5 + 8));
  uint64_t v6 = v5 + *(int *)(v0 + 20);
  type metadata accessor for Participant.State(0);
  switch(OUTLINED_FUNCTION_42_30())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_12_0();
      (*(void (**)(uint64_t))(v7 + 8))(v6);
      break;
    case 4u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_26_2();
      v17();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      OUTLINED_FUNCTION_44_26();
      if (*(void *)(v3 + 120) >= 2uLL) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 96);
      }
      if (*(void *)(v3 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v6 + *(int *)(v2 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  uint64_t v8 = type metadata accessor for Participant(0);
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_26_2();
  v9();
  uint64_t v10 = (id *)(v6 + *(int *)(v8 + 28));
  if (*v10)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  type metadata accessor for Date();
  if (!OUTLINED_FUNCTION_32_3())
  {
    OUTLINED_FUNCTION_48();
    uint64_t v11 = OUTLINED_FUNCTION_31_0();
    v12(v11);
  }
  type metadata accessor for Participant.CountdownInfo(0);
  if (!OUTLINED_FUNCTION_32_3())
  {
    OUTLINED_FUNCTION_48();
    uint64_t v13 = OUTLINED_FUNCTION_31_0();
    v14(v13);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_28();
  return swift_deallocObject();
}

void *partial apply for closure #4 in TranscriptParticipantBadge.body.getter()
{
  uint64_t v1 = type metadata accessor for TranscriptParticipantBadge(0);
  OUTLINED_FUNCTION_1_1(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return closure #4 in TranscriptParticipantBadge.body.getter(v3);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>();
    _s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type _TaskModifier and conformance _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>> and conformance _OverlayModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ClipEffect<RoundedRectangle> and conformance _ClipEffect<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _BackgroundStyleModifier<AnyShapeStyle> and conformance _BackgroundStyleModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>> and conformance HStack<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text?)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void *type metadata accessor for GroupIconView.GroupImage()
{
  return &unk_1F1EBC9E8;
}

void *type metadata accessor for HeightKey()
{
  return &unk_1F1EBCA10;
}

unint64_t sub_1C371B3B8()
{
  return lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>> and conformance <> _ConditionalContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>>, ModifiedContent<GroupIconView.GroupImage, _FrameLayout>> and conformance <> _ConditionalContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>> and conformance <> _ConditionalContent<A, B>(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_6_6(a1);
  if (!result)
  {
    uint64_t v6 = v5;
    uint64_t v7 = v4;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    v7();
    v6();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>> and conformance HStack<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t sub_1C371B5FC()
{
  return lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>> and conformance <> _ConditionalContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>> and conformance <> _ConditionalContent<A, B>);
}

unint64_t sub_1C371B64C()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptList.PaddingModifier> and conformance _ViewModifier_Content<A>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptList.PaddingModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1C371B790()
{
  return swift_getOpaqueTypeConformance2();
}

double partial apply for thunk for @callee_guaranteed () -> (@out CGFloat)()
{
  return thunk for @callee_guaranteed () -> (@out CGFloat)(*(void (**)(double *__return_ptr))(v0 + 16));
}

void __swiftcall UIStackView.__allocating_init(arrangedSubviews:)(UIStackView *__return_ptr retstr, Swift::OpaquePointer arrangedSubviews)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithArrangedSubviews_, isa);
}

id ConversationHUDEphemeralNotice.__allocating_init(controlsManager:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ConversationHUDEphemeralNotice.init(controlsManager:)(a1);
}

id ConversationHUDEphemeralNotice.ephemeralAlertStack.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertStack;
  id v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertStack);
  if (v2)
  {
    id v3 = *(id *)((char *)v0
               + OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertStack);
  }
  else
  {
    uint64_t v4 = closure #1 in ConversationHUDEphemeralNotice.ephemeralAlertStack.getter(v0);
    uint64_t v5 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void *closure #1 in ConversationHUDEphemeralNotice.ephemeralAlertStack.getter(void *a1)
{
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIStackView);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C3769610;
  id v3 = (void *)MEMORY[0x1E4FBC8C8];
  *(void *)(v2 + 32) = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x88))();
  *(void *)(v2 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = (*(uint64_t (**)(void))((*v3 & *a1) + 0xA0))();
  specialized Array._endMutation()();
  UIStackView.__allocating_init(arrangedSubviews:)(v4, (Swift::OpaquePointer)v2);
  id v6 = v5;
  objc_msgSend(v5, sel_setAxis_, 1);
  objc_msgSend(v6, sel_setAlignment_, 0);
  objc_msgSend(v6, sel_setDistribution_, 2);
  LODWORD(v7) = 1132068864;
  objc_msgSend(v6, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v12 = type metadata accessor for ConversationHUDEphemeralNotice();
  arrangedSubviews._rawValue = a1;
  objc_allocWithZone(MEMORY[0x1E4FB1D38]);
  uint64_t v8 = a1;
  id v9 = @nonobjc UITapGestureRecognizer.init(target:action:)(&arrangedSubviews, (uint64_t)sel_didTapEphemeralAlertStack);
  objc_msgSend(v6, sel_addGestureRecognizer_, v9, arrangedSubviews._rawValue);

  return v6;
}

uint64_t key path getter for ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel : ConversationHUDEphemeralNotice@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x88))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel : ConversationHUDEphemeralNotice(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x90))(*a1);
}

id ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertTitleLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertTitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertTitleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v5, sel_setNumberOfLines_, 1);
    objc_msgSend(v5, sel_setClipsToBounds_, 1);
    objc_msgSend(v5, sel_setLineBreakMode_, 4);
    id v6 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
    Class isa = UIFont.withTraits(_:)(0x8002u).super.isa;

    Class v8 = UIFont.caseSensitive()().super.isa;
    objc_msgSend(v5, sel_setFont_, v8);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v5, sel_setTextAlignment_, 1);
    id v9 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v9);

    LODWORD(v1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 1148846080;
    objc_msgSend(v5, sel_setContentCompressionResistancePriority_forAxis_, 1, v10);
    uint64_t v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

void ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.setter(uint64_t a1)
{
}

void (*ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.modify(id *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.getter();
  return ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.modify;
}

void ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.modify(void **a1, char a2)
{
}

uint64_t key path getter for ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel : ConversationHUDEphemeralNotice@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xA0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel : ConversationHUDEphemeralNotice(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xA8))(*a1);
}

id ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertSubtitleLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertSubtitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertSubtitleLabel);
  }
  else
  {
    id v4 = closure #1 in ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.getter();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id closure #1 in ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setClipsToBounds_, 1);
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  Class isa = UIFont.withTraits(_:)(0x8000u).super.isa;

  Class v3 = UIFont.caseSensitive()().super.isa;
  objc_msgSend(v0, sel_setFont_, v3);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setTextAlignment_, 1);
  id v4 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v4);

  return v0;
}

void ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.setter(uint64_t a1)
{
}

void (*ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.modify(id *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.getter();
  return ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.modify;
}

void ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.modify(void **a1, char a2)
{
}

void ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.modify(void **a1, char a2, void (*a3)(void))
{
  id v4 = *a1;
  if (a2)
  {
    id v5 = v4;
    a3();
  }
  else
  {
    ((void (*)(void *))a3)(v4);
  }
}

id ConversationHUDEphemeralNotice.init(controlsManager:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertStack] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertTitleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertSubtitleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice_controlsManager] = a1;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for ConversationHUDEphemeralNotice();
  id v3 = a1;
  id v4 = objc_msgSendSuper2(&v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  ConversationHUDEphemeralNotice.setupRootView()();

  return v4;
}

id ConversationHUDEphemeralNotice.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ConversationHUDEphemeralNotice.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertStack] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertTitleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertSubtitleLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t ConversationHUDEphemeralNotice.didTapEphemeralAlertStack()()
{
  return (*(uint64_t (**)(void, void, void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0
                                                                                                 + OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice_controlsManager))
                                                           + 0x7F8))(0, 0, 0);
}

void ConversationHUDEphemeralNotice.setupRootView()()
{
  id v1 = v0;
  id v2 = ConversationHUDEphemeralNotice.ephemeralAlertStack.getter();
  objc_msgSend(v1, sel_addSubview_, v2);

  unint64_t v3 = MEMORY[0x1E4FBC860];
  id v4 = ConversationHUDEphemeralNotice.ephemeralAlertStack.getter();
  id v5 = objc_msgSend(v4, sel_leadingAnchor);

  id v6 = objc_msgSend(v1, sel_leadingAnchor);
  id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  id v8 = ConversationHUDEphemeralNotice.ephemeralAlertStack.getter();
  id v9 = objc_msgSend(v8, sel_trailingAnchor);

  id v10 = objc_msgSend(v1, sel_trailingAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  id v12 = ConversationHUDEphemeralNotice.ephemeralAlertStack.getter();
  id v13 = objc_msgSend(v12, sel_bottomAnchor);

  id v14 = objc_msgSend(v1, sel_bottomAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v16, 3))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v16 + 3, 1);
    specialized Array._endMutation()();
    unint64_t v3 = (unint64_t)v7;
    MEMORY[0x1C87733A0]();
    OUTLINED_FUNCTION_2_139();
    if (*(void *)(v17 + 16) < *(void *)(v17 + 24) >> 1) {
      goto LABEL_5;
    }
  }
  OUTLINED_FUNCTION_6_3();
LABEL_5:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v18 = v11;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_2_139();
  if (*(void *)(v19 + 16) >= *(void *)(v19 + 24) >> 1) {
    OUTLINED_FUNCTION_6_3();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v20 = v15;
  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_2_139();
  if (*(void *)(v21 + 16) >= *(void *)(v21 + 24) >> 1) {
    OUTLINED_FUNCTION_6_3();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  id v22 = ConversationHUDEphemeralNotice.ephemeralAlertStack.getter();
  id v23 = objc_msgSend(v22, sel_topAnchor);

  id v24 = objc_msgSend(v1, sel_topAnchor);
  id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  MEMORY[0x1C87733A0]();
  OUTLINED_FUNCTION_2_139();
  if (*(void *)(v26 + 16) >= *(void *)(v26 + 24) >> 1) {
    OUTLINED_FUNCTION_6_3();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v27 = self;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, isa);
}

id ConversationHUDEphemeralNotice.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void ConversationHUDEphemeralNotice.init(frame:)()
{
}

id ConversationHUDEphemeralNotice.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationHUDEphemeralNotice();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ConversationHUDEphemeralNotice()
{
  return self;
}

uint64_t method lookup function for ConversationHUDEphemeralNotice(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationHUDEphemeralNotice);
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.__allocating_init(controlsManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

Class static Fonts.InCallControls.tableViewCellTitleLabel.getter()
{
  return static Fonts.InCallControls.tableViewCellTitleLabel.getter(MEMORY[0x1E4FB28C8]);
}

uint64_t *Fonts.InCallControls.tableHeaderSingleLabelTopConstraintConstant.unsafeMutableAddressor()
{
  if (one-time initialization token for tableHeaderSingleLabelTopConstraintConstant != -1) {
    swift_once();
  }
  return &static Fonts.InCallControls.tableHeaderSingleLabelTopConstraintConstant;
}

uint64_t *Fonts.InCallControls.tableHeaderSingleLabelBottomConstraintConstant.unsafeMutableAddressor()
{
  if (one-time initialization token for tableHeaderSingleLabelBottomConstraintConstant != -1) {
    swift_once();
  }
  return &static Fonts.InCallControls.tableHeaderSingleLabelBottomConstraintConstant;
}

Class static Fonts.InCallControls.collectionViewSectionHeaderTitleLabel.getter()
{
  return OUTLINED_FUNCTION_2_140(MEMORY[0x1E4FB28F0]);
}

id static Fonts.Notices.systemApertureButtonFont.getter()
{
  return OUTLINED_FUNCTION_0_114(MEMORY[0x1E4FB28D0]);
}

id static Fonts.ConversationControls.noticeButtonFont.getter()
{
  return static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(*MEMORY[0x1E4FB2950], 0, 1);
}

id static Fonts.ConversationControls.screenSharingCountdownFont.getter()
{
  id v0 = objc_msgSend(self, sel_systemFontOfSize_weight_, 20.0, *MEMORY[0x1E4FB09B8]);
  return v0;
}

id static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter()
{
  return static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter(MEMORY[0x1E4FB2908]);
}

Class static Fonts.ConversationControls.secondaryLabelFont.getter()
{
  return static Fonts.ConversationControls.secondaryLabelFont.getter(0x8000u);
}

Class static Fonts.ShareCard.titleLabel.getter()
{
  Class result = (Class)objc_msgSend(self, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB28C8], *MEMORY[0x1E4FB09E0]);
  if (result)
  {
    Class v1 = result;
    Class isa = UIFont.caseSensitive()().super.isa;

    return isa;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Class static Fonts.ConversationControls.primaryLabelFont.getter()
{
  return static Fonts.ConversationControls.secondaryLabelFont.getter(0x8002u);
}

Class static Fonts.ConversationControls.secondaryLabelFont.getter(UIFontDescriptorSymbolicTraits a1)
{
  id v2 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  Class isa = UIFont.withTraits(_:)(a1).super.isa;

  Class v4 = UIFont.caseSensitive()().super.isa;
  return v4;
}

id static Fonts.ConversationControls.secondaryPillButtonFont.getter()
{
  return OUTLINED_FUNCTION_0_114(MEMORY[0x1E4FB28D0]);
}

Class static Fonts.InCallControls.tableViewHeaderTitleLabel.getter()
{
  return static Fonts.InCallControls.tableViewCellTitleLabel.getter(MEMORY[0x1E4FB28C8]);
}

uint64_t *Fonts.PTT.channelNameLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for channelNameLabel != -1) {
    swift_once();
  }
  return &static Fonts.PTT.channelNameLabel;
}

uint64_t *Fonts.ParticipantViews.bottomBarRegular.unsafeMutableAddressor()
{
  if (one-time initialization token for bottomBarRegular != -1) {
    swift_once();
  }
  return &static Fonts.ParticipantViews.bottomBarRegular;
}

uint64_t *Fonts.PTT.disclosureButtonLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for disclosureButtonLabel != -1) {
    swift_once();
  }
  return &static Fonts.PTT.disclosureButtonLabel;
}

id static Fonts.InCallControls.button.getter()
{
  return static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter(MEMORY[0x1E4FB28D8]);
}

void *Fonts.ParticipantViews.monogramFontName.unsafeMutableAddressor()
{
  return &static Fonts.ParticipantViews.monogramFontName;
}

uint64_t *Fonts.ParticipantViews.screenShareInfo.unsafeMutableAddressor()
{
  if (one-time initialization token for screenShareInfo != -1) {
    swift_once();
  }
  return &static Fonts.ParticipantViews.screenShareInfo;
}

uint64_t *Fonts.ParticipantViews.screenShareInfoFullScreen.unsafeMutableAddressor()
{
  if (one-time initialization token for screenShareInfoFullScreen != -1) {
    swift_once();
  }
  return &static Fonts.ParticipantViews.screenShareInfoFullScreen;
}

uint64_t *Fonts.ParticipantViews.ringButton.unsafeMutableAddressor()
{
  if (one-time initialization token for ringButton != -1) {
    swift_once();
  }
  return &static Fonts.ParticipantViews.ringButton;
}

uint64_t *Fonts.ParticipantViews.title.unsafeMutableAddressor()
{
  if (one-time initialization token for title != -1) {
    swift_once();
  }
  return &static Fonts.ParticipantViews.title;
}

uint64_t *Fonts.ParticipantViews.subtitle.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitle != -1) {
    swift_once();
  }
  return &static Fonts.ParticipantViews.subtitle;
}

id static Fonts.Notices.titlePrimaryFont.getter()
{
  return OUTLINED_FUNCTION_0_114(MEMORY[0x1E4FB2950]);
}

id static Fonts.Notices.titleSecondaryFont.getter()
{
  return static Fonts.Notices.systemApertureButtonFont.getter(MEMORY[0x1E4FB2950], 256);
}

Class static Fonts.InCallControls.tableViewParticipantCellTitleLabel.getter()
{
  return OUTLINED_FUNCTION_2_140(MEMORY[0x1E4FB2908]);
}

id static Fonts.InCallControls.tableViewCellSubtitleLabel.getter()
{
  return static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter(MEMORY[0x1E4FB2950]);
}

Class static Fonts.InCallControls.joinCountdownLabel.getter()
{
  return static Fonts.InCallControls.collectionViewSectionHeaderTitleLabel.getter(MEMORY[0x1E4FB2950], 0x8002u);
}

Class static Fonts.InCallControls.collectionViewSectionHeaderTitleLabel.getter(void *a1, UIFontDescriptorSymbolicTraits a2)
{
  id v3 = objc_msgSend(self, sel_preferredFontForTextStyle_, *a1);
  Class isa = UIFont.withTraits(_:)(a2).super.isa;

  return isa;
}

uint64_t *Fonts.PTT.buttonLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonLabel != -1) {
    swift_once();
  }
  return &static Fonts.PTT.buttonLabel;
}

uint64_t *Fonts.PTT.detailTitleLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for detailTitleLabel != -1) {
    swift_once();
  }
  return &static Fonts.PTT.detailTitleLabel;
}

uint64_t *Fonts.ParticipantViews.alertTitle.unsafeMutableAddressor()
{
  if (one-time initialization token for alertTitle != -1) {
    swift_once();
  }
  return &static Fonts.ParticipantViews.alertTitle;
}

unint64_t static Fonts.ParticipantViews.monogramFontName.getter()
{
  return 0xD00000000000001BLL;
}

void one-time initialization function for title(uint64_t a1)
{
}

id static Fonts.ParticipantViews.title.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for title, (void **)&static Fonts.ParticipantViews.title);
}

void one-time initialization function for subtitle(uint64_t a1)
{
}

id static Fonts.ParticipantViews.subtitle.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for subtitle, (void **)&static Fonts.ParticipantViews.subtitle);
}

void one-time initialization function for screenShareInfo(uint64_t a1)
{
}

id static Fonts.ParticipantViews.screenShareInfo.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for screenShareInfo, (void **)&static Fonts.ParticipantViews.screenShareInfo);
}

id one-time initialization function for screenShareInfoFullScreen(uint64_t a1)
{
  return one-time initialization function for screenShareInfoFullScreen(a1, MEMORY[0x1E4FB28F0], &static Fonts.ParticipantViews.screenShareInfoFullScreen);
}

id static Fonts.ParticipantViews.screenShareInfoFullScreen.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for screenShareInfoFullScreen, (void **)&static Fonts.ParticipantViews.screenShareInfoFullScreen);
}

void one-time initialization function for bottomBarRegular(uint64_t a1)
{
}

id static Fonts.ParticipantViews.bottomBarRegular.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for bottomBarRegular, (void **)&static Fonts.ParticipantViews.bottomBarRegular);
}

id one-time initialization function for monogram()
{
  id v0 = self;
  id result = outlined bridged method (mnnbnn) of @objc static UIFont.systemFont(ofSize:weight:design:)(116.0, *MEMORY[0x1E4FB09D0], 0xD00000000000001BLL, 0x80000001C37A7620, v0);
  static Fonts.ParticipantViews.monogram = (uint64_t)result;
  return result;
}

uint64_t *Fonts.ParticipantViews.monogram.unsafeMutableAddressor()
{
  if (one-time initialization token for monogram != -1) {
    swift_once();
  }
  return &static Fonts.ParticipantViews.monogram;
}

uint64_t static Fonts.ParticipantViews.monogram.getter()
{
  if (one-time initialization token for monogram != -1) {
    swift_once();
  }
  uint64_t v0 = static Fonts.ParticipantViews.monogram;
  id v1 = (id)static Fonts.ParticipantViews.monogram;
  return v0;
}

void one-time initialization function for alertTitle(uint64_t a1)
{
}

void one-time initialization function for title(uint64_t a1, void *a2, Class *a3)
{
  id v4 = objc_msgSend(self, sel_preferredFontForTextStyle_, *a2);
  Class isa = UIFont.withTraits(_:)(2u).super.isa;

  Class v6 = UIFont.caseSensitive()().super.isa;
  *a3 = v6;
}

id static Fonts.ParticipantViews.alertTitle.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for alertTitle, (void **)&static Fonts.ParticipantViews.alertTitle);
}

void one-time initialization function for ringButton(uint64_t a1)
{
}

id static Fonts.ParticipantViews.ringButton.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for ringButton, (void **)&static Fonts.ParticipantViews.ringButton);
}

void one-time initialization function for participantLabel(uint64_t a1)
{
}

Class *Fonts.StagingArea.participantLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for participantLabel != -1) {
    swift_once();
  }
  return &static Fonts.StagingArea.participantLabel;
}

id static Fonts.StagingArea.participantLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for participantLabel, (void **)&static Fonts.StagingArea.participantLabel);
}

void one-time initialization function for smallParticipantLabel(uint64_t a1)
{
}

Class *Fonts.StagingArea.smallParticipantLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for smallParticipantLabel != -1) {
    swift_once();
  }
  return &static Fonts.StagingArea.smallParticipantLabel;
}

id static Fonts.StagingArea.smallParticipantLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for smallParticipantLabel, (void **)&static Fonts.StagingArea.smallParticipantLabel);
}

void one-time initialization function for secondaryParticipantLabel(uint64_t a1)
{
}

Class *Fonts.StagingArea.secondaryParticipantLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for secondaryParticipantLabel != -1) {
    swift_once();
  }
  return &static Fonts.StagingArea.secondaryParticipantLabel;
}

id static Fonts.StagingArea.secondaryParticipantLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for secondaryParticipantLabel, (void **)&static Fonts.StagingArea.secondaryParticipantLabel);
}

void one-time initialization function for explanationLabel(uint64_t a1)
{
}

Class *Fonts.DebugOverlay.explanationLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for explanationLabel != -1) {
    swift_once();
  }
  return &static Fonts.DebugOverlay.explanationLabel;
}

id static Fonts.DebugOverlay.explanationLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for explanationLabel, (void **)&static Fonts.DebugOverlay.explanationLabel);
}

void *Fonts.DebugOverlay.buttonLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonLabel != -1) {
    swift_once();
  }
  return &static Fonts.DebugOverlay.buttonLabel;
}

id static Fonts.DebugOverlay.buttonLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for buttonLabel, (void **)&static Fonts.DebugOverlay.buttonLabel);
}

void one-time initialization function for nameInputLabel(uint64_t a1)
{
}

void one-time initialization function for participantLabel(double a1, uint64_t a2, Class *a3)
{
  id v4 = objc_msgSend(self, sel_systemFontOfSize_weight_, a1, *MEMORY[0x1E4FB09D8]);
  Class isa = UIFont.caseSensitive()().super.isa;

  *a3 = isa;
}

Class *Fonts.DebugOverlay.nameInputLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for nameInputLabel != -1) {
    swift_once();
  }
  return &static Fonts.DebugOverlay.nameInputLabel;
}

id static Fonts.DebugOverlay.nameInputLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for nameInputLabel, (void **)&static Fonts.DebugOverlay.nameInputLabel);
}

id static Fonts.InCallControls.tableViewHeaderSubtitleLabel.getter()
{
  return static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter(MEMORY[0x1E4FB28F0]);
}

id static Fonts.InCallControls.actionButton.getter()
{
  return static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter(MEMORY[0x1E4FB28F0]);
}

id static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter(void *a1)
{
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *a1);
  return v1;
}

void one-time initialization function for tableHeaderSingleLabelTopConstraintConstant()
{
  static Fonts.InCallControls.tableHeaderSingleLabelTopConstraintConstant = 0x4042000000000000;
}

double static Fonts.InCallControls.tableHeaderSingleLabelTopConstraintConstant.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for tableHeaderSingleLabelTopConstraintConstant, (uint64_t)&static Fonts.InCallControls.tableHeaderSingleLabelTopConstraintConstant);
}

void one-time initialization function for tableHeaderSingleLabelBottomConstraintConstant()
{
  static Fonts.InCallControls.tableHeaderSingleLabelBottomConstraintConstant = 0x4038000000000000;
}

double static Fonts.InCallControls.tableHeaderSingleLabelBottomConstraintConstant.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for tableHeaderSingleLabelBottomConstraintConstant, (uint64_t)&static Fonts.InCallControls.tableHeaderSingleLabelBottomConstraintConstant);
}

void one-time initialization function for tableHeaderDualLabelTopConstraintConstant()
{
  static Fonts.InCallControls.tableHeaderDualLabelTopConstraintConstant = 0x4039000000000000;
}

uint64_t *Fonts.InCallControls.tableHeaderDualLabelTopConstraintConstant.unsafeMutableAddressor()
{
  if (one-time initialization token for tableHeaderDualLabelTopConstraintConstant != -1) {
    swift_once();
  }
  return &static Fonts.InCallControls.tableHeaderDualLabelTopConstraintConstant;
}

double static Fonts.InCallControls.tableHeaderDualLabelTopConstraintConstant.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for tableHeaderDualLabelTopConstraintConstant, (uint64_t)&static Fonts.InCallControls.tableHeaderDualLabelTopConstraintConstant);
}

void one-time initialization function for tableHeaderDualLabelBottomConstraintConstant()
{
  static Fonts.InCallControls.tableHeaderDualLabelBottomConstraintConstant = 0x402A000000000000;
}

uint64_t *Fonts.InCallControls.tableHeaderDualLabelBottomConstraintConstant.unsafeMutableAddressor()
{
  if (one-time initialization token for tableHeaderDualLabelBottomConstraintConstant != -1) {
    swift_once();
  }
  return &static Fonts.InCallControls.tableHeaderDualLabelBottomConstraintConstant;
}

double static Fonts.InCallControls.tableHeaderDualLabelBottomConstraintConstant.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for tableHeaderDualLabelBottomConstraintConstant, (uint64_t)&static Fonts.InCallControls.tableHeaderDualLabelBottomConstraintConstant);
}

void one-time initialization function for tableHeaderInterLabelConstraintConstant()
{
  static Fonts.InCallControls.tableHeaderInterLabelConstraintConstant = 0x4034000000000000;
}

uint64_t *Fonts.InCallControls.tableHeaderInterLabelConstraintConstant.unsafeMutableAddressor()
{
  if (one-time initialization token for tableHeaderInterLabelConstraintConstant != -1) {
    swift_once();
  }
  return &static Fonts.InCallControls.tableHeaderInterLabelConstraintConstant;
}

double static Fonts.InCallControls.tableHeaderInterLabelConstraintConstant.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for tableHeaderInterLabelConstraintConstant, (uint64_t)&static Fonts.InCallControls.tableHeaderInterLabelConstraintConstant);
}

void one-time initialization function for tableHeaderSingleVerticalPaddingConstant()
{
  static Fonts.InCallControls.tableHeaderSingleVerticalPaddingConstant = 0x402E000000000000;
}

uint64_t *Fonts.InCallControls.tableHeaderSingleVerticalPaddingConstant.unsafeMutableAddressor()
{
  if (one-time initialization token for tableHeaderSingleVerticalPaddingConstant != -1) {
    swift_once();
  }
  return &static Fonts.InCallControls.tableHeaderSingleVerticalPaddingConstant;
}

double static Fonts.InCallControls.tableHeaderSingleVerticalPaddingConstant.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for tableHeaderSingleVerticalPaddingConstant, (uint64_t)&static Fonts.InCallControls.tableHeaderSingleVerticalPaddingConstant);
}

id static Fonts.ConversationControls.disclosureLabelFont.getter()
{
  return OUTLINED_FUNCTION_0_114(MEMORY[0x1E4FB28F0]);
}

id static Fonts.Notices.systemApertureButtonFont.getter(void *a1, uint64_t a2)
{
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *a1, a2);
  if (!result) {
    __break(1u);
  }
  return result;
}

Class static Fonts.ConversationControls.ephemeralAlertPrimaryLabelFont.getter()
{
  type metadata accessor for UIFont();
  id v0 = static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(*MEMORY[0x1E4FB28D0], 0, 1);
  Class isa = UIFont.withTraits(_:)(0x10000u).super.isa;

  Class v2 = UIFont.caseSensitive()().super.isa;
  return v2;
}

Class static Fonts.ConversationControls.ephemeralAlertSecondaryLabelFont.getter()
{
  return static Fonts.InCallControls.tableViewCellTitleLabel.getter(MEMORY[0x1E4FB28E0]);
}

Class static Fonts.InCallControls.tableViewCellTitleLabel.getter(void *a1)
{
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *a1);
  Class isa = UIFont.caseSensitive()().super.isa;

  return isa;
}

void one-time initialization function for nameLabel(uint64_t a1)
{
}

Class *Fonts.Roster.nameLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for nameLabel != -1) {
    swift_once();
  }
  return &static Fonts.Roster.nameLabel;
}

id static Fonts.Roster.nameLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for nameLabel, (void **)&static Fonts.Roster.nameLabel);
}

void one-time initialization function for collaborateSubtitleLabel(uint64_t a1)
{
}

void one-time initialization function for subtitle(uint64_t a1, void *a2, Class *a3)
{
  id v4 = objc_msgSend(self, sel_preferredFontForTextStyle_, *a2);
  Class isa = UIFont.caseSensitive()().super.isa;

  *a3 = isa;
}

uint64_t *Fonts.ShareCard.collaborateSubtitleLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for collaborateSubtitleLabel != -1) {
    swift_once();
  }
  return &static Fonts.ShareCard.collaborateSubtitleLabel;
}

id static Fonts.ShareCard.collaborateSubtitleLabel.getter()
{
  if (one-time initialization token for collaborateSubtitleLabel != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (void *)static Fonts.ShareCard.collaborateSubtitleLabel;
  return v0;
}

void static Fonts.ShareCard.collaborateSubtitleLabel.setter(uint64_t a1)
{
  if (one-time initialization token for collaborateSubtitleLabel != -1) {
    swift_once();
  }
  swift_beginAccess();
  Class v2 = (void *)static Fonts.ShareCard.collaborateSubtitleLabel;
  static Fonts.ShareCard.collaborateSubtitleLabel = a1;
}

uint64_t (*static Fonts.ShareCard.collaborateSubtitleLabel.modify())()
{
  if (one-time initialization token for collaborateSubtitleLabel != -1) {
    swift_once();
  }
  swift_beginAccess();
  return CallRecordingPillViewController.cancellable.modify;
}

id static Fonts.PTT.channelNameLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for channelNameLabel, (void **)&static Fonts.PTT.channelNameLabel);
}

id one-time initialization function for disclosureButtonLabel(uint64_t a1)
{
  return one-time initialization function for screenShareInfoFullScreen(a1, MEMORY[0x1E4FB2990], &static Fonts.PTT.disclosureButtonLabel);
}

id one-time initialization function for screenShareInfoFullScreen(uint64_t a1, void *a2, void *a3)
{
  id result = objc_msgSend(self, sel_preferredFontForTextStyle_, *a2);
  *a3 = result;
  return result;
}

id static Fonts.PTT.disclosureButtonLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for disclosureButtonLabel, (void **)&static Fonts.PTT.disclosureButtonLabel);
}

id one-time initialization function for buttonLabel()
{
  id result = objc_msgSend(self, sel_systemFontOfSize_weight_, 16.0, *MEMORY[0x1E4FB09D8]);
  static Fonts.PTT.buttonLabel = (uint64_t)result;
  return result;
}

id static Fonts.PTT.buttonLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for buttonLabel, (void **)&static Fonts.PTT.buttonLabel);
}

void one-time initialization function for detailTitleLabel()
{
  id v0 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2988]);
  Class isa = UIFont.withTraits(_:)(2u).super.isa;

  static Fonts.PTT.detailTitleLabel = (uint64_t)isa;
}

id static Fonts.PTT.detailTitleLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for detailTitleLabel, (void **)&static Fonts.PTT.detailTitleLabel);
}

void type metadata accessor for Fonts()
{
}

void type metadata accessor for Fonts.ParticipantViews()
{
}

void type metadata accessor for Fonts.StagingArea()
{
}

void type metadata accessor for Fonts.DebugOverlay()
{
}

void type metadata accessor for Fonts.InCallControls()
{
}

void type metadata accessor for Fonts.ConversationControls()
{
}

void type metadata accessor for Fonts.Roster()
{
}

void type metadata accessor for Fonts.ShareCard()
{
}

void type metadata accessor for Fonts.PTT()
{
}

void type metadata accessor for Fonts.Notices()
{
}

id outlined bridged method (mnnbnn) of @objc static UIFont.systemFont(ofSize:weight:design:)(double a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = (void *)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(a5, sel_systemFontOfSize_weight_design_, v8, a1, a2);

  return v9;
}

uint64_t TimerService.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  TimerService.init()();
  return v0;
}

uint64_t key path setter for TimerService.TimerTaskObservation.timerTask : TimerService.TimerTaskObservation(uint64_t a1, uint64_t a2)
{
  Class v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 96);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t TimerService.TimerTaskObservation.timerTask.getter()
{
  return swift_retain();
}

uint64_t TimerService.TimerTaskObservation.timerTask.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*TimerService.TimerTaskObservation.timerTask.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t TimerService.TimerTaskObservation.deinit()
{
  swift_release();
  return v0;
}

uint64_t TimerService.TimerTaskObservation.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t TimerService.TimerTaskObservation.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t TimerService.TimerTaskObservation.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  return result;
}

uint64_t TimerService.init()()
{
  uint64_t v2 = v0;
  OUTLINED_FUNCTION_3_2();
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = 0;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  id v4 = OUTLINED_FUNCTION_30(v3, (uint64_t)static Logger.conversationKit);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_107(v5))
  {
    Class v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)Class v6 = 136446210;
    uint64_t v7 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v4, v1, "%{public}s created", v6, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  return v2;
}

uint64_t TimerService.start(duration:onFire:onCancel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  uint64_t v17 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v17);
  id v18 = (void *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v7;
  v18[5] = a1;
  v18[6] = a2;
  v18[7] = a3;
  v18[8] = a4;
  v18[9] = a5;
  v18[10] = a6;
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in TimerService.start(duration:onFire:onCancel:)()
{
  os_log_type_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return TimerService._start(duration:onFire:onCancel:)();
}

uint64_t TimerService._start(duration:onFire:onCancel:)()
{
  OUTLINED_FUNCTION_17_2();
  v1[11] = v2;
  v1[12] = v0;
  v1[9] = v3;
  v1[10] = v4;
  v1[7] = v5;
  v1[8] = v6;
  v1[6] = v7;
  OUTLINED_FUNCTION_3_2();
  v1[13] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v1[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](TimerService._start(duration:onFire:onCancel:), v0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_38_15();
  OUTLINED_FUNCTION_55();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  os_log_type_t v1 = type metadata accessor for Logger();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_30(v1, (uint64_t)static Logger.conversationKit);
  uint64_t v3 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v3))
  {
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_10_47();
    OUTLINED_FUNCTION_30_37();
    uint64_t v4 = OUTLINED_FUNCTION_5_120(4.8751e-34);
    *(void *)(v0 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = OUTLINED_FUNCTION_29_40(v4, v5, v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_28_27(&dword_1C2F90000, v7, v8, "%{public}s timerTask starting");
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  id v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v9;
  *id v9 = v0;
  v9[1] = TimerService._start(duration:onFire:onCancel:);
  OUTLINED_FUNCTION_40();
  return TimerService.cancel()();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v4 = v3;
  *(void *)(v6 + 128) = v5;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](TimerService._start(duration:onFire:onCancel:), v2, 0);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;

  OUTLINED_FUNCTION_28_0();
  if (v0[16])
  {
    os_log_type_t v1 = (void *)swift_task_alloc();
    v0[17] = v1;
    void *v1 = v0;
    v1[1] = TimerService._start(duration:onFire:onCancel:);
    return MEMORY[0x1F4187DC0]();
  }
  else
  {
    uint64_t v2 = v0[13];
    type metadata accessor for TimerService.TimerTaskObservation();
    uint64_t v3 = swift_allocObject();
    OUTLINED_FUNCTION_24_58(v3);
    swift_release();
    uint64_t v4 = swift_allocObject();
    v0[19] = v4;
    *(void *)(v4 + 16) = 0;
    *(void *)(v4 + 24) = v2;
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[20] = v5;
    *uint64_t v5 = v0;
    v5[1] = TimerService._start(duration:onFire:onCancel:);
    return TimerService.beginBackgroundTask(expirationHandler:)((uint64_t)partial apply for closure #1 in TimerService._start(duration:onFire:onCancel:), v4);
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  os_log_type_t v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_37_2();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;

  OUTLINED_FUNCTION_28_0();
  uint64_t v2 = v1[13];
  type metadata accessor for TimerService.TimerTaskObservation();
  uint64_t v3 = swift_allocObject();
  OUTLINED_FUNCTION_24_58(v3);
  swift_release();
  uint64_t v4 = swift_allocObject();
  v1[19] = v4;
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v2;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v1[20] = v5;
  *uint64_t v5 = v1;
  v5[1] = TimerService._start(duration:onFire:onCancel:);
  return TimerService.beginBackgroundTask(expirationHandler:)((uint64_t)partial apply for closure #1 in TimerService._start(duration:onFire:onCancel:), v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  os_log_type_t v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v2 = v1;
  *(void *)(v4 + 168) = v3;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_37_2();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  long long v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;

  os_log_type_t v1 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v15 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 64);
  id v13 = *(_OWORD *)(v0 + 48);
  uint64_t v16 = (uint64_t *)(*(void *)(v0 + 144) + 16);
  static TaskPriority.userInitiated.getter();
  uint64_t v7 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v7);
  uint64_t v8 = lazy protocol witness table accessor for type TimerService and conformance TimerService();
  id v9 = swift_allocObject();
  *(void *)(v9 + 16) = v2;
  *(void *)(v9 + 24) = v8;
  *(_OWORD *)(v9 + 32) = v13;
  *(void *)(v9 + 48) = v4;
  *(void *)(v9 + 56) = v3;
  *(void *)(v9 + 64) = v6;
  *(void *)(v9 + 72) = v5;
  *(void *)(v9 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v2;
  *(void *)(v9 + 88) = v15;
  *(void *)(v9 + 96) = v14;
  swift_retain_n();
  swift_retain();
  swift_retain();
  uint64_t v10 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_beginAccess();
  *uint64_t v16 = v10;
  swift_release();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v11();
}

uint64_t closure #1 in TimerService._start(duration:onFire:onCancel:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationKit);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = v9;
    *(_DWORD *)uint64_t v8 = 136446210;
    uint64_t v10 = _typeName(_:qualified:)();
    uint64_t v15 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v6, v7, "%{public}s backgroundTask expired", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v9, -1, -1);
    MEMORY[0x1C87760E0](v8, -1, -1);
  }

  static TaskPriority.userInitiated.getter();
  uint64_t v12 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v12);
  id v13 = (void *)swift_allocObject();
  void v13[2] = 0;
  v13[3] = 0;
  v13[4] = a1;
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #1 in TimerService._start(duration:onFire:onCancel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x1F4188298](closure #1 in closure #1 in TimerService._start(duration:onFire:onCancel:), 0, 0);
}

uint64_t closure #1 in closure #1 in TimerService._start(duration:onFire:onCancel:)()
{
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_50();
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 88))();
  uint64_t v3 = v2;
  if (v2)
  {
    MEMORY[0x1C8773690](v2, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    swift_release();
  }
  **(unsigned char **)(v0 + 16) = v3 == 0;
  OUTLINED_FUNCTION_6();
  return v4();
}

uint64_t closure #2 in TimerService._start(duration:onFire:onCancel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = v12;
  v8[15] = v13;
  v8[12] = v10;
  v8[13] = v11;
  v8[10] = a7;
  v8[11] = a8;
  v8[8] = a5;
  v8[9] = a6;
  v8[7] = a4;
  return MEMORY[0x1F4188298](closure #2 in TimerService._start(duration:onFire:onCancel:), v11, 0);
}

uint64_t closure #2 in TimerService._start(duration:onFire:onCancel:)()
{
  OUTLINED_FUNCTION_17_2();
  type metadata accessor for AsyncCancellableTimer();
  uint64_t v1 = swift_allocObject();
  v0[16] = v1;
  swift_defaultActor_initialize();
  *(void *)(v1 + 112) = 0;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[17] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = closure #2 in TimerService._start(duration:onFire:onCancel:);
  OUTLINED_FUNCTION_78(v0[7]);
  return AsyncCancellableTimer.wait(with:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void (*v7)();
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v5 = v4;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = *(void *)(v3 + 104);
    os_log_type_t v7 = closure #2 in TimerService._start(duration:onFire:onCancel:);
  }
  else
  {
    uint64_t v8 = *(void *)(v3 + 104);
    swift_release();
    os_log_type_t v7 = closure #2 in TimerService._start(duration:onFire:onCancel:);
    uint64_t v6 = v8;
  }
  return MEMORY[0x1F4188298](v7, v6, 0);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_2_5();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  *uint64_t v4 = *v1;
  swift_task_dealloc();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 168) = v6;
  *uint64_t v6 = v5;
  v6[1] = closure #2 in TimerService._start(duration:onFire:onCancel:);
  os_log_type_t v7 = OUTLINED_FUNCTION_78(*(void *)(v0 + 112));
  return TimerService.endBackgroundTask(_:)(v7);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_2_5();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  *uint64_t v4 = *v1;
  swift_task_dealloc();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 168) = v6;
  *uint64_t v6 = v5;
  v6[1] = closure #2 in TimerService._start(duration:onFire:onCancel:);
  os_log_type_t v7 = OUTLINED_FUNCTION_78(*(void *)(v0 + 112));
  return TimerService.endBackgroundTask(_:)(v7);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v3();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](closure #2 in TimerService._start(duration:onFire:onCancel:), v2, 0);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();

  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v1;
  void *v1 = v0;
  v1[1] = closure #2 in TimerService._start(duration:onFire:onCancel:);
  uint64_t v2 = OUTLINED_FUNCTION_78(*(void *)(v0 + 112));
  return TimerService.endBackgroundTask(_:)(v2);
}

void closure #2 in TimerService._start(duration:onFire:onCancel:)()
{
  if (static Task<>.isCancelled.getter())
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    uint64_t v2 = (void *)OUTLINED_FUNCTION_30(v1, (uint64_t)static Logger.conversationKit);
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_107(v3))
    {
      uint64_t v4 = (_DWORD *)OUTLINED_FUNCTION_15_19();
      uint64_t v21 = swift_slowAlloc();
      *uint64_t v4 = 136446210;
      uint64_t v5 = _typeName(_:qualified:)();
      v0[6] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v6, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_52_1(&dword_1C2F90000, v7, v8, "%{public}s timerTask cancelled");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }

    OUTLINED_FUNCTION_9_96();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[19] = v9;
    *uint64_t v9 = v0;
    v9[1] = closure #2 in TimerService._start(duration:onFire:onCancel:);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    uint64_t v11 = (void *)OUTLINED_FUNCTION_30(v10, (uint64_t)static Logger.conversationKit);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_107(v12))
    {
      uint64_t v13 = (_DWORD *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *uint64_t v13 = 136446210;
      uint64_t v14 = _typeName(_:qualified:)();
      v0[5] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_52_1(&dword_1C2F90000, v16, v17, "%{public}s timerTask fired");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }

    id v18 = (void *)swift_task_alloc();
    v0[20] = v18;
    *id v18 = v0;
    v18[1] = closure #2 in TimerService._start(duration:onFire:onCancel:);
  }
  OUTLINED_FUNCTION_263();
  __asm { BRAA            X0, X16 }
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;

  swift_release();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationKit);
  os_log_type_t v3 = v1;
  uint64_t v4 = v1;
  uint64_t v5 = Logger.logObject.getter();
  unint64_t v6 = static os_log_type_t.error.getter();
  uint64_t v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[18];
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    id v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v10 = _typeName(_:qualified:)();
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v0[3] = v8;
    os_log_type_t v12 = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v13 = String.init<A>(reflecting:)();
    v0[4] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v5, v6, "%{public}s timerTask cancelled with error %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  OUTLINED_FUNCTION_9_96();
  unint64_t v15 = (void *)swift_task_alloc();
  v0[22] = v15;
  *unint64_t v15 = v0;
  v15[1] = closure #2 in TimerService._start(duration:onFire:onCancel:);
  OUTLINED_FUNCTION_263();
  __asm { BRAA            X0, X16 }
}

uint64_t TimerService.cancel()()
{
  *(void *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_3_2();
  *(void *)(v1 + 32) = v2;
  return OUTLINED_FUNCTION_8_93((uint64_t)TimerService.cancel(), v3);
}

uint64_t TimerService.cancel()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_38_15();
  OUTLINED_FUNCTION_55();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_30(v13, (uint64_t)static Logger.conversationKit);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v15))
  {
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_10_47();
    OUTLINED_FUNCTION_30_37();
    uint64_t v16 = OUTLINED_FUNCTION_5_120(4.8751e-34);
    uint64_t v19 = OUTLINED_FUNCTION_29_40(v16, v17, v18);
    OUTLINED_FUNCTION_10_88(v19);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_28_27(&dword_1C2F90000, v20, v21, "%{public}s cancel");
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  uint64_t v22 = *(void *)(v12 + 24);
  uint64_t v23 = *(void *)(v22 + 112);
  if (v23)
  {
    id v24 = *(uint64_t (**)(uint64_t))(*(void *)v23 + 88);
    uint64_t v25 = swift_retain();
    uint64_t v26 = v24(v25);
    swift_release();
    if (v26)
    {
      MEMORY[0x1C8773690](v26, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
      swift_release();
    }
    uint64_t v27 = *(void *)(v22 + 112);
    if (v27)
    {
      uint64_t v28 = *(void (**)(uint64_t))(*(void *)v27 + 88);
      uint64_t v29 = swift_retain();
      v28(v29);
      swift_release();
    }
  }
  OUTLINED_FUNCTION_40();
  return v32(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12);
}

uint64_t TimerService.beginBackgroundTask(expirationHandler:)(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  OUTLINED_FUNCTION_3_2();
  v3[11] = v4;
  return OUTLINED_FUNCTION_8_93((uint64_t)TimerService.beginBackgroundTask(expirationHandler:), v2);
}

uint64_t TimerService.beginBackgroundTask(expirationHandler:)()
{
  OUTLINED_FUNCTION_38_15();
  OUTLINED_FUNCTION_55();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_30(v1, (uint64_t)static Logger.conversationKit);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v3))
  {
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_10_47();
    OUTLINED_FUNCTION_30_37();
    uint64_t v4 = OUTLINED_FUNCTION_5_120(4.8751e-34);
    uint64_t v7 = OUTLINED_FUNCTION_29_40(v4, v5, v6);
    OUTLINED_FUNCTION_10_88(v7);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_28_27(&dword_1C2F90000, v8, v9, "%{public}s beginBackgroundTask");
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  *(void *)(v0 + 96) = self;
  type metadata accessor for MainActor();
  *(void *)(v0 + 104) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  OUTLINED_FUNCTION_40();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void **)(v0 + 96);
  swift_release();
  *(void *)(v0 + 112) = objc_msgSend(v1, sel_sharedApplication);
  OUTLINED_FUNCTION_37_2();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t (*v6)(id);
  uint64_t v8;

  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = v0[8];
  if (v1)
  {
    uint64_t v2 = v0[9];
    v0[6] = v1;
    v0[7] = v2;
    v0[2] = MEMORY[0x1E4F143A8];
    v0[3] = 1107296256;
    v0[4] = thunk for @escaping @callee_guaranteed () -> ();
    v0[5] = &block_descriptor_119;
    os_log_type_t v3 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
  }
  else
  {
    os_log_type_t v3 = 0;
  }
  uint64_t v4 = (void *)v0[14];
  unint64_t v5 = objc_msgSend(v4, sel_beginBackgroundTaskWithExpirationHandler_, v3);
  _Block_release(v3);

  uint64_t v6 = (uint64_t (*)(id))v0[1];
  return v6(v5);
}

uint64_t TimerService.endBackgroundTask(_:)(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  OUTLINED_FUNCTION_3_2();
  v2[5] = v3;
  return OUTLINED_FUNCTION_8_93((uint64_t)TimerService.endBackgroundTask(_:), v4);
}

uint64_t TimerService.endBackgroundTask(_:)()
{
  OUTLINED_FUNCTION_38_15();
  OUTLINED_FUNCTION_55();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_30(v1, (uint64_t)static Logger.conversationKit);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v3))
  {
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_10_47();
    OUTLINED_FUNCTION_30_37();
    uint64_t v4 = OUTLINED_FUNCTION_5_120(4.8751e-34);
    uint64_t v7 = OUTLINED_FUNCTION_29_40(v4, v5, v6);
    OUTLINED_FUNCTION_10_88(v7);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_28_27(&dword_1C2F90000, v8, v9, "%{public}s beginBackgroundTask");
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  *(void *)(v0 + 48) = self;
  type metadata accessor for MainActor();
  *(void *)(v0 + 56) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  OUTLINED_FUNCTION_40();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();
  *(void *)(v0 + 64) = objc_msgSend(v1, sel_sharedApplication);
  OUTLINED_FUNCTION_37_2();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = *(void **)(v0 + 64);
  objc_msgSend(v1, sel_endBackgroundTask_, *(void *)(v0 + 24));

  OUTLINED_FUNCTION_6();
  return v2();
}

uint64_t TimerService.deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t TimerService.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t TimerService.unownedExecutor.getter()
{
  return v0;
}

uint64_t protocol witness for Actor.unownedExecutor.getter in conformance TimerService()
{
  return TimerService.unownedExecutor.getter();
}

uint64_t sub_1C372070C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in TimerService.start(duration:onFire:onCancel:)()
{
  OUTLINED_FUNCTION_55();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  OUTLINED_FUNCTION_18_66();
  return closure #1 in TimerService.start(duration:onFire:onCancel:)();
}

uint64_t type metadata accessor for TimerService.TimerTaskObservation()
{
  return self;
}

uint64_t sub_1C3720854()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in TimerService._start(duration:onFire:onCancel:)()
{
  return closure #1 in TimerService._start(duration:onFire:onCancel:)(*(void *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type TimerService and conformance TimerService()
{
  unint64_t result = lazy protocol witness table cache variable for type TimerService and conformance TimerService;
  if (!lazy protocol witness table cache variable for type TimerService and conformance TimerService)
  {
    type metadata accessor for TimerService();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TimerService and conformance TimerService);
  }
  return result;
}

uint64_t type metadata accessor for TimerService()
{
  return self;
}

uint64_t sub_1C3720904()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in TimerService._start(duration:onFire:onCancel:)()
{
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  OUTLINED_FUNCTION_18_66();
  OUTLINED_FUNCTION_263();
  return closure #2 in TimerService._start(duration:onFire:onCancel:)(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C3720A30@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_50();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 88))();
  *a1 = result;
  return result;
}

uint64_t method lookup function for TimerService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TimerService);
}

uint64_t dispatch thunk of TimerService.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of TimerService.start(duration:onFire:onCancel:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of TimerService._start(duration:onFire:onCancel:)()
{
  OUTLINED_FUNCTION_55();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_50();
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 136)
                                                                                     + **(int **)(v13 + 136));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v14;
  *uint64_t v14 = v0;
  v14[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return v16(v12, v10, v8, v6, v4, v2);
}

uint64_t dispatch thunk of TimerService.cancel()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_50();
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(v1 + 144) + **(int **)(v1 + 144));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = dispatch thunk of DelayedAnsweringMachine.screenCall(withUUID:manualScreening:);
  return v4();
}

uint64_t method lookup function for TimerService.TimerTaskObservation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TimerService.TimerTaskObservation);
}

uint64_t dispatch thunk of TimerService.TimerTaskObservation.timerTask.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of TimerService.TimerTaskObservation.timerTask.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of TimerService.TimerTaskObservation.timerTask.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of TimerService.TimerTaskObservation.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C3720D84()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in TimerService._start(duration:onFire:onCancel:)()
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_10(v6);
  *uint64_t v7 = v8;
  v7[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in closure #1 in TimerService._start(duration:onFire:onCancel:)(v2, v3, v4, v5);
}

uint64_t *ClarityUIFavoritesList.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static ClarityUIFavoritesList.shared;
}

uint64_t ClarityUIFavoritesList.favorites.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static ClarityUIFavoritesList.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t key path getter for ClarityUIFavoritesList.favorites : ClarityUIFavoritesList@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ClarityUIFavoritesList.favorites.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C3721008@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ClarityUIFavoritesList.favorites.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for ClarityUIFavoritesList.favorites : ClarityUIFavoritesList()
{
  return ClarityUIFavoritesList.favorites.setter();
}

unint64_t lazy protocol witness table accessor for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList()
{
  unint64_t result = lazy protocol witness table cache variable for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList;
  if (!lazy protocol witness table cache variable for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList)
  {
    type metadata accessor for ClarityUIFavoritesList();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList);
  }
  return result;
}

uint64_t type metadata accessor for ClarityUIFavoritesList()
{
  uint64_t result = type metadata singleton initialization cache for ClarityUIFavoritesList;
  if (!type metadata singleton initialization cache for ClarityUIFavoritesList) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ClarityUIFavoritesList.favorites.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t ClarityUIFavoritesList.favorites.init@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t ClarityUIFavoritesList.access<A>(keyPath:)()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t specialized ClarityUIFavoritesList.withMutation<A, B>(keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t ClarityUIFavoritesList.withMutation<A, B>(keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void (*ClarityUIFavoritesList.favorites.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_getKeyPath();
  v3[4] = OBJC_IVAR____TtC15ConversationKit22ClarityUIFavoritesList___observationRegistrar;
  *uint64_t v3 = v1;
  v3[5] = lazy protocol witness table accessor for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return ClarityUIFavoritesList.favorites.modify;
}

void ClarityUIFavoritesList.favorites.modify(void **a1)
{
  uint64_t v1 = *a1;
  swift_endAccess();
  void *v1 = v1[3];
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  free(v1);
}

void *ClarityUIFavoritesList.().init()()
{
  v0[2] = MEMORY[0x1E4FBC860];
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  v0[3] = static ClarityUIPreferences.shared;
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1B980]);
  swift_retain();
  v0[4] = objc_msgSend(v1, sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C37696D0;
  *(void *)(v2 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v2 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v3;
  id v4 = (id)TUPreferredFaceTimeBundleIdentifier();
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  *(void *)(v2 + 48) = v5;
  *(void *)(v2 + 56) = v7;
  v0[6] = v2;
  ObservationRegistrar.init()();
  v0[5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADA28]), sel_initWithContactStore_prefetchCount_, v0[4], 0);
  ClarityUIFavoritesList.populateFavorites()();
  id v8 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v8, sel_addObserver_selector_name_object_, v0, sel_populateFavorites, *MEMORY[0x1E4FADA68], 0);

  return v0;
}

uint64_t ClarityUIFavoritesList.populateFavorites()()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (void *)((char *)v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBE8], v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0) {
    goto LABEL_81;
  }
  id v97 = (id)v2[5];
  id v8 = objc_msgSend(v97, sel_favoritesEntries);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNFavoritesEntry);
  unint64_t v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v1 >> 62)
  {
LABEL_82:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_4:
      unint64_t v11 = 0;
      unint64_t v12 = v1 & 0xC000000000000001;
      uint64_t v13 = (void *)v2[6];
      uint64_t v93 = v1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v92 = v1 + 32;
      uint64_t v103 = v13[2];
      v83[1] = &v108;
      v83[0] = v13 + 9;
      unint64_t v102 = MEMORY[0x1E4FBC860];
      *(void *)&long long v9 = 138412290;
      long long v87 = v9;
      long long v84 = xmmword_1C3769620;
      uint64_t v94 = v10;
      unint64_t v95 = v1 & 0xC000000000000001;
      uint64_t v100 = v13;
      uint64_t v86 = v2;
      unint64_t v85 = v1;
      while (1)
      {
        if (v12)
        {
          id v14 = (id)MEMORY[0x1C87744F0](v11, v1);
        }
        else
        {
          if (v11 >= *(void *)(v93 + 16)) {
            goto LABEL_78;
          }
          id v14 = *(id *)(v92 + 8 * v11);
        }
        os_log_type_t v15 = v14;
        if (__OFADD__(v11, 1)) {
          goto LABEL_77;
        }
        swift_bridgeObjectRetain();
        id v105 = v15;
        id v16 = objc_msgSend(v15, sel_bundleIdentifier);
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;

        unint64_t v104 = v11 + 1;
        if (v103)
        {
          BOOL v20 = v13[4] == v17 && v13[5] == v19;
          if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
LABEL_16:
            swift_bridgeObjectRelease();
LABEL_17:
            swift_bridgeObjectRelease();
            uint64_t v21 = (void *)v2[4];
            static ClarityUIContact.requiredDescriptors(for:)((uint64_t)v21);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            id v23 = objc_msgSend(v97, sel_contactForFavoritesEntry_keyDescriptors_, v105, isa);

            if (v23)
            {
              id v24 = v21;
              uint64_t v25 = v23;
              id v26 = [v25 identifier];
              uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v101 = v27;

              id v99 = v24;
              uint64_t v28 = (void *)v102;
              unint64_t v29 = *(void *)(v102 + 16);
              if (v29)
              {
                type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
                unint64_t v30 = 0;
                unint64_t v91 = v29 - 1;
                int v98 = 1;
LABEL_20:
                uint64_t v31 = 7 * v30;
                uint64_t v2 = v28;
                uint64_t v32 = v28 + 7;
                unint64_t v1 = v30;
                while (v1 < v29)
                {
                  if (v1 >= v2[2]) {
                    goto LABEL_76;
                  }
                  id v33 = (id)v32[v31];
                  char v34 = static NSObject.== infix(_:_:)();

                  if (v34)
                  {
                    unint64_t v106 = v11;
                    uint64_t v107 = 0x657469726F766146;
                    unint64_t v108 = 0xE90000000000002DLL;
                    id v35 = v105;
                    v36._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
                    String.append(_:)(v36);
                    swift_bridgeObjectRelease();
                    uint64_t v37 = v107;
                    unint64_t v102 = v108;
                    int v90 = CNFavoritesEntry.callType.getter();
                    uint64_t v38 = swift_allocObject();
                    *(void *)(v38 + 16) = v35;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      specialized _ArrayBuffer._consumeAndCreateNew()();
                      uint64_t v2 = v46;
                    }
                    if (v1 >= v2[2]) {
                      goto LABEL_79;
                    }
                    uint64_t v88 = v38;
                    uint64_t v39 = &v2[v31];
                    uint64_t v40 = v2[v31 + 6];
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v2[v31 + 6] = v40;
                    uint64_t v89 = v37;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
                      uint64_t v40 = v47;
                      v39[6] = v47;
                    }
                    unint64_t v42 = *(void *)(v40 + 16);
                    if (v42 >= *(void *)(v40 + 24) >> 1)
                    {
                      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
                      uint64_t v40 = v48;
                      v39[6] = v48;
                    }
                    int v98 = 0;
                    char v43 = v90 & 1;
                    unint64_t v30 = v1 + 1;
                    *(void *)(v40 + 16) = v42 + 1;
                    uint64_t v44 = v40 + 40 * v42;
                    *(void *)(v44 + 32) = v89;
                    *(void *)(v44 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v102;
                    *(unsigned char *)(v44 + 48) = v43;
                    uint64_t v45 = v88;
                    *(void *)(v44 + 56) = closure #1 in ClarityUIOutgoingCallAction.init(favoritesEntry:index:)partial apply;
                    *(void *)(v44 + 64) = v45;
                    BOOL v20 = v91 == v1;
                    uint64_t v28 = v2;
                    if (v20) {
                      goto LABEL_53;
                    }
                    goto LABEL_20;
                  }
                  ++v1;
                  v31 += 7;
                  if (v29 == v1)
                  {
                    uint64_t v28 = v2;
                    if (v98) {
                      goto LABEL_41;
                    }
LABEL_53:
                    unint64_t v102 = (unint64_t)v28;
                    swift_bridgeObjectRelease();

                    uint64_t v2 = v86;
                    unint64_t v1 = v85;
                    goto LABEL_54;
                  }
                }
                __break(1u);
LABEL_76:
                __break(1u);
LABEL_77:
                __break(1u);
LABEL_78:
                __break(1u);
LABEL_79:
                __break(1u);
                goto LABEL_80;
              }
LABEL_41:
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ClarityUIOutgoingCallAction>);
              uint64_t v56 = swift_allocObject();
              *(_OWORD *)(v56 + 16) = v84;
              uint64_t v57 = v105;
              swift_bridgeObjectRetain();
              ClarityUIOutgoingCallAction.init(favoritesEntry:index:)((uint64_t)v57, (uint64_t)v109);
              long long v58 = v109[1];
              *(_OWORD *)(v56 + 32) = v109[0];
              *(_OWORD *)(v56 + 48) = v58;
              *(void *)(v56 + 64) = v110;
              uint64_t v59 = v25;
              id v60 = v99;
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t v61 = v59;
              id v62 = v60;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
                uint64_t v28 = v80;
              }
              uint64_t v2 = v86;
              unint64_t v64 = v28[2];
              unint64_t v63 = v28[3];
              unint64_t v102 = (unint64_t)v28;
              unint64_t v1 = v85;
              if (v64 >= v63 >> 1)
              {
                specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
                unint64_t v102 = v81;
              }
              unint64_t v65 = v102;
              *(void *)(v102 + 16) = v64 + 1;
              uint64_t v66 = (void *)(v65 + 56 * v64);
              uint64_t v67 = v96;
              uint64_t v68 = v101;
              v66[4] = v96;
              v66[5] = v68;
              v66[6] = v56;
              v66[7] = v61;
              v66[8] = v62;
              v66[9] = v67;
              v66[10] = v68;

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              uint64_t v25 = v57;
LABEL_54:
              uint64_t v10 = v94;
              unint64_t v12 = v95;
              uint64_t v13 = v100;
            }
            else
            {
              if (one-time initialization token for clarityUI != -1) {
                swift_once();
              }
              uint64_t v49 = type metadata accessor for Logger();
              __swift_project_value_buffer(v49, (uint64_t)static Log.clarityUI);
              uint64_t v50 = v105;
              uint64_t v25 = Logger.logObject.getter();
              os_log_type_t v51 = static os_log_type_t.default.getter();
              if (!os_log_type_enabled(v25, v51))
              {

                goto LABEL_56;
              }
              uint64_t v52 = (uint8_t *)swift_slowAlloc();
              id v53 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v52 = v87;
              uint64_t v107 = (uint64_t)v50;
              uint64_t v54 = v50;
              uint64_t v10 = v94;
              unint64_t v12 = v95;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *id v53 = v50;

              _os_log_impl(&dword_1C2F90000, v25, v51, "No contact found for favorite: %@", v52, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
              swift_arrayDestroy();
              int v55 = v53;
              uint64_t v13 = v100;
              MEMORY[0x1C87760E0](v55, -1, -1);
              MEMORY[0x1C87760E0](v52, -1, -1);
            }
            goto LABEL_57;
          }
          if (v103 != 1)
          {
            BOOL v75 = v13[6] == v17 && v13[7] == v19;
            if (v75 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              goto LABEL_16;
            }
            if (v103 != 2)
            {
              uint64_t v76 = (void *)v83[0];
              uint64_t v77 = 2;
              while (1)
              {
                uint64_t v78 = v77 + 1;
                if (__OFADD__(v77, 1)) {
                  break;
                }
                BOOL v79 = *(v76 - 1) == v17 && *v76 == v19;
                if (v79 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  uint64_t v13 = v100;
                  swift_bridgeObjectRelease();
                  unint64_t v12 = v95;
                  goto LABEL_17;
                }
                v76 += 2;
                ++v77;
                if (v78 == v103)
                {
                  uint64_t v13 = v100;
                  swift_bridgeObjectRelease();
                  unint64_t v12 = v95;
                  goto LABEL_48;
                }
              }
LABEL_80:
              __break(1u);
LABEL_81:
              __break(1u);
              goto LABEL_82;
            }
          }
        }
        swift_bridgeObjectRelease();
LABEL_48:
        id v69 = v105;
        swift_bridgeObjectRelease();
        if (one-time initialization token for clarityUI != -1) {
          swift_once();
        }
        uint64_t v70 = type metadata accessor for Logger();
        __swift_project_value_buffer(v70, (uint64_t)static Log.clarityUI);
        uint64_t v50 = v69;
        uint64_t v25 = Logger.logObject.getter();
        os_log_type_t v71 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v25, v71))
        {

LABEL_56:
          uint64_t v25 = v50;
          goto LABEL_57;
        }
        uint64_t v72 = swift_slowAlloc();
        int v73 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v72 = v87;
        *(void *)(v72 + 4) = v50;
        *int v73 = v50;
        _os_log_impl(&dword_1C2F90000, v25, v71, "Skipping inapplicable favorite: %@", (uint8_t *)v72, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        uint64_t v74 = v73;
        uint64_t v13 = v100;
        MEMORY[0x1C87760E0](v74, -1, -1);
        MEMORY[0x1C87760E0](v72, -1, -1);

LABEL_57:
        unint64_t v11 = v104;
        if (v104 == v10) {
          goto LABEL_84;
        }
      }
    }
  }
  unint64_t v102 = MEMORY[0x1E4FBC860];
LABEL_84:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  ClarityUIFavoritesList.favorites.setter();
  return swift_bridgeObjectRelease();
}

uint64_t ClarityUIFavoritesList.deinit()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v2 = v0 + OBJC_IVAR____TtC15ConversationKit22ClarityUIFavoritesList___observationRegistrar;
  uint64_t v3 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t ClarityUIFavoritesList.__deallocating_deinit()
{
  ClarityUIFavoritesList.deinit();
  return swift_deallocClassInstance();
}

uint64_t ClarityUIOutgoingCallAction.init(favoritesEntry:index:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v4._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  char v5 = CNFavoritesEntry.callType.getter() & 1;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)a2 = 0x657469726F766146;
  *(void *)(a2 + 8) = 0xE90000000000002DLL;
  *(unsigned char *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = partial apply for closure #1 in ClarityUIOutgoingCallAction.init(favoritesEntry:index:);
  *(void *)(a2 + 32) = result;
  return result;
}

uint64_t sub_1C3722344()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in ClarityUIOutgoingCallAction.init(favoritesEntry:index:)()
{
}

uint64_t ObjC metadata update function for ClarityUIFavoritesList()
{
  return type metadata accessor for ClarityUIFavoritesList();
}

uint64_t type metadata completion function for ClarityUIFavoritesList()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ClarityUIFavoritesList(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClarityUIFavoritesList);
}

__n128 InCallControlsFramesCache.frame(for:state:using:)@<Q0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<InCallControlsState>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3769620;
  *(void *)(inited + 32) = a2;
  InCallControlsFramesCache.measureFrames(for:states:using:)(a1, inited, a3);
  swift_setDeallocating();
  Swift::Int v10 = InCallControlsFramesCache.cacheKey(for:)(a1);
  swift_beginAccess();
  if (specialized Dictionary.subscript.getter(v10, *(void *)(v4 + 16)))
  {
    specialized Dictionary.subscript.getter();
    __n128 v17 = (__n128)v19[1];
    long long v18 = v19[0];
    char v11 = v20;
    swift_endAccess();
    swift_bridgeObjectRelease();
    outlined init with take of CGRect?((uint64_t)v19, (uint64_t)v21);
    if ((v21[32] & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    swift_endAccess();
    __n128 v17 = 0u;
    long long v18 = 0u;
    char v11 = 1;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C3769620;
  uint64_t v13 = String.init<A>(reflecting:)();
  uint64_t v15 = v14;
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v15;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
LABEL_8:
  __n128 result = v17;
  *(_OWORD *)a4 = v18;
  *(__n128 *)(a4 + 16) = v17;
  *(unsigned char *)(a4 + 32) = v11;
  return result;
}

uint64_t InCallControlsFramesCache.measureFrames(for:states:using:)(void *a1, uint64_t a2, uint64_t a3)
{
  char v5 = a1;
  uint64_t v6 = &selRef_ringButton;
  id v7 = objc_msgSend(a1, sel_superview);
  uint64_t v8 = (uint64_t)&selRef_ringButton;
  if (!v7)
  {
LABEL_41:
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_42:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = xmmword_1C37696D0;
      id v69 = [v5 v6[399]];
      if (v69)
      {
        uint64_t v70 = v69;
        [v69 *(SEL *)(v8 + 1624)];
        uint64_t v72 = v71;
        uint64_t v74 = v73;
        uint64_t v76 = v75;
        uint64_t v78 = v77;

        unint64_t v106 = v72;
        uint64_t v107 = v74;
        uint64_t v108 = v76;
        uint64_t v109 = v78;
        type metadata accessor for CGRect(0);
        uint64_t v79 = String.init<A>(reflecting:)();
        unint64_t v81 = v80;
      }
      else
      {
        unint64_t v81 = 0xE300000000000000;
        uint64_t v79 = 7104878;
      }
      uint64_t v82 = MEMORY[0x1E4FBB1A0];
      *(void *)(v68 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v83 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v68 + 64) = v83;
      *(void *)(v68 + 32) = v79;
      *(void *)(v68 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v81;
      unint64_t v106 = v5;
      type metadata accessor for UIView();
      id v84 = v5;
      uint64_t v85 = String.init<A>(reflecting:)();
      *(void *)(v68 + 96) = v82;
      *(void *)(v68 + 104) = v83;
      *(void *)(v68 + 72) = v85;
      *(void *)(v68 + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v86;
      os_log(_:dso:log:type:_:)();
      return swift_bridgeObjectRelease();
    }
LABEL_77:
    swift_once();
    goto LABEL_42;
  }
  long long v9 = v7;
  objc_msgSend(v7, sel_bounds);
  if (v10 <= 0.0 || (objc_msgSend(v9, sel_bounds), v11 <= 0.0))
  {

    goto LABEL_41;
  }
  Swift::Int v12 = InCallControlsFramesCache.cacheKey(for:)(v5);
  swift_beginAccess();
  uint64_t v13 = (void *)specialized Dictionary.subscript.getter(v12, *(void *)(v3 + 16));
  swift_endAccess();
  if (!v13)
  {
    type metadata accessor for CGRect(0);
    lazy protocol witness table accessor for type InCallControlsState and conformance InCallControlsState();
    uint64_t v13 = (void *)Dictionary.init(dictionaryLiteral:)();
  }
  uint64_t v14 = (Swift::UInt *)(a3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  unint64_t v102 = v14;
  Swift::UInt v15 = *v14;
  objc_msgSend(v9, sel_bounds);
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  swift_bridgeObjectRetain();
  uint64_t v20 = specialized Set.init<A>(_:)();
  specialized Set.contains(_:)(v15, v20);
  uint64_t v103 = v9;
  uint64_t v101 = v15;
  if (v21)
  {
    specialized Dictionary.subscript.getter();
    outlined init with take of CGRect?((uint64_t)v105, (uint64_t)v111);
    if (v111[32] == 1)
    {
      objc_msgSend(v5, sel_frame);
      v117.origin.double x = v22;
      v117.origin.double y = v23;
      v117.size.double width = v24;
      v117.size.double height = v25;
      v112.origin.double x = 0.0;
      v112.origin.double y = 0.0;
      v112.size.double width = v17;
      v112.size.double height = v19;
      CGRect v113 = CGRectIntersection(v112, v117);
      double x = v113.origin.x;
      double y = v113.origin.y;
      double width = v113.size.width;
      double height = v113.size.height;
      swift_isUniquelyReferenced_nonNull_native();
      unint64_t v106 = v13;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v15, x, y, width, height);
      uint64_t v13 = v106;
      swift_bridgeObjectRelease();
    }
    specialized Set._Variant.remove(_:)(v15);
  }
  uint64_t v30 = v20 + 56;
  uint64_t v31 = 1 << *(unsigned char *)(v20 + 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  unint64_t v33 = v32 & *(void *)(v20 + 56);
  int64_t v34 = (unint64_t)(v31 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v104 = v34;
  while (1)
  {
    if (v33)
    {
      unint64_t v35 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      unint64_t v36 = v35 | (v8 << 6);
      goto LABEL_29;
    }
    int64_t v37 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    if (v37 >= v34) {
      goto LABEL_47;
    }
    unint64_t v38 = *(void *)(v30 + 8 * v37);
    ++v8;
    if (!v38)
    {
      uint64_t v8 = v37 + 1;
      if (v37 + 1 >= v34) {
        goto LABEL_47;
      }
      unint64_t v38 = *(void *)(v30 + 8 * v8);
      if (!v38)
      {
        uint64_t v8 = v37 + 2;
        if (v37 + 2 >= v34) {
          goto LABEL_47;
        }
        unint64_t v38 = *(void *)(v30 + 8 * v8);
        if (!v38) {
          break;
        }
      }
    }
LABEL_28:
    unint64_t v33 = (v38 - 1) & v38;
    unint64_t v36 = __clz(__rbit64(v38)) + (v8 << 6);
LABEL_29:
    Swift::UInt v40 = *(void *)(*(void *)(v20 + 48) + 8 * v36);
    if (v13[2])
    {
      specialized __RawDictionaryStorage.find<A>(_:)(v40);
      if (v41) {
        continue;
      }
    }
    MultiwayViewConstraintsController.inCallControlsState.setter(v40);
    id v42 = [v5 v6[399]];
    objc_msgSend(v42, sel_layoutIfNeeded);

    char v43 = v5;
    objc_msgSend(v5, sel_frame);
    v118.origin.double x = v44;
    v118.origin.double y = v45;
    v118.size.double width = v46;
    v118.size.double height = v47;
    v114.origin.double x = 0.0;
    v114.origin.double y = 0.0;
    v114.size.double width = v17;
    v114.size.double height = v19;
    CGRect v115 = CGRectIntersection(v114, v118);
    CGFloat v48 = v115.origin.x;
    CGFloat v49 = v115.origin.y;
    CGFloat v50 = v115.size.width;
    CGFloat v51 = v115.size.height;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v106 = v13;
    unint64_t v53 = specialized __RawDictionaryStorage.find<A>(_:)(v40);
    uint64_t v55 = v13[2];
    BOOL v56 = (v54 & 1) == 0;
    Swift::Int v57 = v55 + v56;
    if (__OFADD__(v55, v56)) {
      goto LABEL_79;
    }
    unint64_t v58 = v53;
    char v59 = v54;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<InCallControlsState, CGRect>);
    Swift::Bool v60 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v57);
    char v5 = v43;
    if (v60)
    {
      unint64_t v61 = specialized __RawDictionaryStorage.find<A>(_:)(v40);
      if ((v59 & 1) != (v62 & 1)) {
        goto LABEL_81;
      }
      unint64_t v58 = v61;
    }
    uint64_t v13 = v106;
    if (v59)
    {
      unint64_t v63 = (CGFloat *)(v106[7] + 32 * v58);
      *unint64_t v63 = v48;
      v63[1] = v49;
      v63[2] = v50;
      v63[3] = v51;
    }
    else
    {
      v106[(v58 >> 6) + 8] |= 1 << v58;
      *(void *)(v13[6] + 8 * v58) = v40;
      unint64_t v64 = (CGFloat *)(v13[7] + 32 * v58);
      CGFloat *v64 = v48;
      v64[1] = v49;
      v64[2] = v50;
      v64[3] = v51;
      uint64_t v65 = v13[2];
      BOOL v66 = __OFADD__(v65, 1);
      uint64_t v67 = v65 + 1;
      if (v66) {
        goto LABEL_80;
      }
      void v13[2] = v67;
    }
    uint64_t v6 = &selRef_ringButton;
    int64_t v34 = v104;
    uint64_t v30 = v20 + 56;
    swift_bridgeObjectRelease();
  }
  uint64_t v39 = v37 + 3;
  if (v39 < v34)
  {
    unint64_t v38 = *(void *)(v30 + 8 * v39);
    if (!v38)
    {
      while (1)
      {
        uint64_t v8 = v39 + 1;
        if (__OFADD__(v39, 1)) {
          break;
        }
        if (v8 >= v34) {
          goto LABEL_47;
        }
        unint64_t v38 = *(void *)(v30 + 8 * v8);
        ++v39;
        if (v38) {
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      return result;
    }
    uint64_t v8 = v39;
    goto LABEL_28;
  }
LABEL_47:
  swift_release();
  specialized _NativeDictionary.makeIterator()(&v106, v13);
  uint64_t v88 = v106;
  uint64_t v8 = (uint64_t)v107;
  int64_t v89 = v109;
  unint64_t v90 = v110;
  int64_t v91 = (unint64_t)(v108 + 64) >> 6;
  swift_bridgeObjectRetain_n();
  while (2)
  {
    if (v90)
    {
      unint64_t v92 = __clz(__rbit64(v90));
      v90 &= v90 - 1;
      unint64_t v93 = v92 | (v89 << 6);
LABEL_68:
      int v98 = (CGFloat *)(v88[7] + 32 * v93);
      v116.origin.double x = *v98;
      double v99 = v98[1];
      v116.size.double width = v98[2];
      v116.size.double height = v98[3];
      v116.origin.double y = v99;
      if (CGRectIsEmpty(v116) || v99 < 1.0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        type metadata accessor for CGRect(0);
        lazy protocol witness table accessor for type InCallControlsState and conformance InCallControlsState();
        Dictionary.init(dictionaryLiteral:)();
        goto LABEL_72;
      }
      continue;
    }
    break;
  }
  int64_t v94 = v89 + 1;
  if (__OFADD__(v89, 1)) {
    goto LABEL_76;
  }
  if (v94 >= v91) {
    goto LABEL_71;
  }
  unint64_t v95 = *(void *)(v8 + 8 * v94);
  int64_t v96 = v89 + 1;
  if (v95) {
    goto LABEL_67;
  }
  int64_t v96 = v89 + 2;
  if (v89 + 2 >= v91) {
    goto LABEL_71;
  }
  unint64_t v95 = *(void *)(v8 + 8 * v96);
  if (v95) {
    goto LABEL_67;
  }
  int64_t v96 = v89 + 3;
  if (v89 + 3 >= v91) {
    goto LABEL_71;
  }
  unint64_t v95 = *(void *)(v8 + 8 * v96);
  if (v95) {
    goto LABEL_67;
  }
  int64_t v96 = v89 + 4;
  if (v89 + 4 >= v91) {
    goto LABEL_71;
  }
  unint64_t v95 = *(void *)(v8 + 8 * v96);
  if (v95) {
    goto LABEL_67;
  }
  int64_t v96 = v89 + 5;
  if (v89 + 5 >= v91) {
    goto LABEL_71;
  }
  unint64_t v95 = *(void *)(v8 + 8 * v96);
  if (v95) {
    goto LABEL_67;
  }
  int64_t v96 = v89 + 6;
  if (v89 + 6 >= v91) {
    goto LABEL_71;
  }
  unint64_t v95 = *(void *)(v8 + 8 * v96);
  if (v95)
  {
LABEL_67:
    unint64_t v90 = (v95 - 1) & v95;
    unint64_t v93 = __clz(__rbit64(v95)) + (v96 << 6);
    int64_t v89 = v96;
    goto LABEL_68;
  }
  int64_t v97 = v89 + 7;
  while (v97 < v91)
  {
    unint64_t v95 = *(void *)(v8 + 8 * v97++);
    if (v95)
    {
      int64_t v96 = v97 - 1;
      goto LABEL_67;
    }
  }
LABEL_71:
  swift_bridgeObjectRelease();
  swift_release();
LABEL_72:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  specialized Dictionary._Variant.setValue(_:forKey:)();
  swift_endAccess();
  if (*v102 != v101)
  {
    MultiwayViewConstraintsController.inCallControlsState.setter(v101);
    id v100 = [v5 v6[399]];
    objc_msgSend(v100, sel_layoutIfNeeded);
  }
  return swift_bridgeObjectRelease();
}

Swift::Int InCallControlsFramesCache.cacheKey(for:)(void *a1)
{
  id v1 = objc_msgSend(a1, sel_superview);
  Swift::UInt64 v2 = (Swift::UInt64)v1;
  if (v1)
  {
    objc_msgSend(v1, sel_bounds);
    Swift::UInt64 v4 = v3;
    Swift::UInt64 v6 = v5;

    Swift::UInt64 v7 = v4;
    Swift::UInt64 v2 = v6;
  }
  else
  {
    Swift::UInt64 v7 = 0;
  }
  Hasher.init()();
  if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v8 = v7;
  }
  else {
    Swift::UInt64 v8 = 0;
  }
  Hasher._combine(_:)(v8);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = v2;
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  Hasher._combine(_:)(v9);
  memcpy(__dst, v11, sizeof(__dst));
  return Hasher.finalize()();
}

uint64_t InCallControlsFramesCache.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InCallControlsFramesCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t InCallControlsFramesCache.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [InCallControlsState : CGRect]);
  *(void *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)();
  return v0;
}

uint64_t InCallControlsFramesCache.init()()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [InCallControlsState : CGRect]);
  *(void *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)();
  return v0;
}

uint64_t type metadata accessor for InCallControlsFramesCache()
{
  return self;
}

uint64_t method lookup function for InCallControlsFramesCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InCallControlsFramesCache);
}

uint64_t dispatch thunk of InCallControlsFramesCache.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

char *ParticipantView.__allocating_init(frame:localParticipant:)()
{
  id v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_6_118());
  OUTLINED_FUNCTION_6_2();
  return ParticipantView.init(frame:localParticipant:)();
}

uint64_t ParticipantView.isInRoster.setter(char a1)
{
  return ParticipantView.isInRoster.setter(a1, &OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster, (uint64_t (*)(uint64_t))ParticipantView.isInRoster.didset);
}

Swift::Void __swiftcall ParticipantView.reset()()
{
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(*(void *)(v0
                                                                      + OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView)
                                                          + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_audioVisualizationView))
                    + 0xA8))();
}

Swift::Int ParticipantView.configure(with:isOneToOneMode:)(uint64_t a1, int a2)
{
  Swift::UInt64 v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  id v160 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  OUTLINED_FUNCTION_0();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  Swift::UInt64 v9 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  Swift::Int v12 = (char *)&v137 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  Swift::UInt v15 = (char *)&v137 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v143 = (uint64_t)&v137 - v17;
  MEMORY[0x1F4188790](v16);
  id v159 = (char *)&v137 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantViewModel?);
  MEMORY[0x1F4188790](v19 - 8);
  OUTLINED_FUNCTION_21();
  uint64_t v22 = v21 - v20;
  uint64_t v158 = type metadata accessor for ParticipantViewModel(0);
  OUTLINED_FUNCTION_0();
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  unint64_t v157 = (unint64_t)&v137 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v137 - v26;
  Hasher.init(_seed:)();
  ParticipantViewModel.hash(into:)();
  Swift::Int result = Hasher._finalize()();
  if ((v2[OBJC_IVAR____TtC15ConversationKit15ParticipantView_mostRecentViewModelHash + 8] & 1) == 0
    && *(void *)&v2[OBJC_IVAR____TtC15ConversationKit15ParticipantView_mostRecentViewModelHash] == result)
  {
    return result;
  }
  Swift::Int v154 = result;
  uint64_t v146 = &v2[OBJC_IVAR____TtC15ConversationKit15ParticipantView_mostRecentViewModelHash];
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)static Logger.conversationKit);
  uint64_t v155 = a1;
  outlined init with copy of ParticipantViewModel(a1, (uint64_t)v27, (void (*)(void))type metadata accessor for ParticipantViewModel);
  uint64_t v31 = v3;
  uint64_t v156 = v30;
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  LODWORD(v161) = v33;
  BOOL v34 = os_log_type_enabled(v32, v33);
  int v145 = a2;
  uint64_t v144 = v9;
  uint64_t v140 = v15;
  uint64_t v141 = v12;
  if (v34)
  {
    uint64_t v35 = swift_slowAlloc();
    os_log_t v151 = v32;
    uint64_t v36 = v35;
    uint64_t v152 = swift_slowAlloc();
    v172[0] = v152;
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    MEMORY[0x1F4188790](v37 - 8);
    OUTLINED_FUNCTION_60();
    unint64_t v38 = &v31[OBJC_IVAR____TtC15ConversationKit15ParticipantView_loggingIdentifier];
    uint64_t v39 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_0();
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 16))(v30, v38, v39);
    __swift_storeEnumTagSinglePayload(v30, 0, 1, v39);
    uint64_t v41 = specialized >> prefix<A>(_:)(v30);
    unint64_t v43 = v42;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v30, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v163[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v43, v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    outlined init with copy of ParticipantViewModel((uint64_t)v27, v22, (void (*)(void))type metadata accessor for ParticipantViewModel);
    __swift_storeEnumTagSinglePayload(v22, 0, 1, v158);
    uint64_t v44 = specialized >> prefix<A>(_:)();
    unint64_t v46 = v45;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v22, &demangling cache variable for type metadata for ParticipantViewModel?);
    v163[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v46, v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ParticipantViewModel((uint64_t)v27, (void (*)(void))type metadata accessor for ParticipantViewModel);
    os_log_t v47 = v151;
    _os_log_impl(&dword_1C2F90000, v151, (os_log_type_t)v161, "Configuring participant view %s with %s...", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    outlined destroy of ParticipantViewModel((uint64_t)v27, (void (*)(void))type metadata accessor for ParticipantViewModel);
  }
  CGFloat v48 = v31;
  CGFloat v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.default.getter();
  BOOL v51 = os_log_type_enabled(v49, v50);
  id v161 = v48;
  if (v51)
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    v172[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = 136315138;
    v163[0] = v161;
    unint64_t v53 = v161;
    uint64_t v54 = String.init<A>(reflecting:)();
    v163[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v49, v50, "... for %s.", v52, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v57 = (uint64_t)v159;
  BOOL v56 = v160;
  unint64_t v58 = (char *)v157;
  char v59 = v146;
  uint64_t v139 = *(void *)v146;
  int v138 = v146[8];
  uint64_t v60 = v155;
  *(void *)uint64_t v146 = v154;
  v59[8] = 0;
  ParticipantView.configureViewVisibility(for:)(v60);
  outlined init with copy of ParticipantViewModel(v60, (uint64_t)v58, (void (*)(void))type metadata accessor for ParticipantViewModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  char v62 = &lazy protocol witness table cache variable for type UUID and conformance UUID;
  unint64_t v63 = (void *)MEMORY[0x1E4FBC8C8];
  if (!EnumCaseMultiPayload)
  {
    uint64_t v67 = &v58[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                      + 48)];
    outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v58, v57);
    memcpy(v172, v67, 0xACuLL);
    int v142 = 0;
    LODWORD(v143) = 0;
    OUTLINED_FUNCTION_3_143();
    long long v164 = 0u;
    long long v165 = 0u;
    long long v166 = 0u;
    long long v167 = 0u;
    long long v168 = 0u;
    long long v169 = 0u;
    uint64_t v170 = 0;
    char v171 = -1;
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v68 = &v58[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                      + 48)];
    uint64_t v70 = *(char **)v68;
    id v69 = *((void *)v68 + 1);
    uint64_t v71 = *((void *)v68 + 2);
    uint64_t v150 = *((void *)v68 + 3);
    os_log_t v151 = v69;
    uint64_t v72 = *((void *)v68 + 4);
    uint64_t v149 = *((void *)v68 + 5);
    uint64_t v73 = *((void *)v68 + 6);
    unint64_t v74 = v68[64];
    uint64_t v156 = *((void *)v68 + 7);
    unint64_t v157 = v74;
    int v75 = v68[65];
    uint64_t v76 = *((void *)v68 + 9);
    Swift::Int v154 = *((void *)v68 + 10);
    uint64_t v155 = v76;
    uint64_t v77 = *((void *)v68 + 11);
    uint64_t v152 = *((void *)v68 + 12);
    uint64_t ObjectType = v77;
    uint64_t v78 = (uint64_t)v58;
    uint64_t v79 = v143;
    outlined init with take of ParticipantViewModel.ParticipantDetails(v78, v143);
    outlined init with copy of ParticipantViewModel(v79, v57, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
    if (v75) {
      uint64_t v80 = 256;
    }
    else {
      uint64_t v80 = 0;
    }
    memset(v172, 0, 24);
    v172[3] = 1;
    bzero(&v172[4], 0x8CuLL);
    uint64_t v170 = 0;
    long long v168 = 0u;
    long long v169 = 0u;
    long long v166 = 0u;
    long long v167 = 0u;
    long long v164 = 0u;
    long long v165 = 0u;
    char v171 = -1;
    __int16 v137 = v70;
    unint64_t v81 = v70;
    uint64_t v158 = v71;
    swift_bridgeObjectRetain();
    uint64_t v148 = v72;
    swift_bridgeObjectRetain();
    uint64_t v147 = v73;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    outlined copy of (title: String, subtitle: String?)?(v155, v154);
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    v157 |= v80;
    OUTLINED_FUNCTION_50();
    char v83 = (*(uint64_t (**)(void))(v82 + 568))();
    uint64_t v84 = (uint64_t)v140;
    outlined init with copy of ParticipantViewModel(v57, (uint64_t)v140, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
    uint64_t v85 = (uint64_t)v141;
    BOOL v56 = v160;
    if (v83) {
      int v86 = *(unsigned __int8 *)(v84 + v160[7]) ^ 1;
    }
    else {
      int v86 = 1;
    }
    int v142 = v86;
    unint64_t v63 = (void *)MEMORY[0x1E4FBC8C8];
    outlined destroy of ParticipantViewModel(v84, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
    OUTLINED_FUNCTION_50();
    char v88 = (*(uint64_t (**)(void))(v87 + 568))();
    outlined init with copy of ParticipantViewModel(v57, v85, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
    if (v88)
    {
      char v89 = *(unsigned char *)(v85 + v56[7]);
      outlined destroy of ParticipantViewModel(v85, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
      if (v89)
      {
        unint64_t v90 = ParticipantView.infoView.getter();
        OUTLINED_FUNCTION_19_6();
        int v92 = (*(uint64_t (**)(void))(v91 + 232))();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        outlined consume of AnsweringMachineCallStatus?(v155, v154);
        outlined destroy of ParticipantViewModel(v143, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
        LODWORD(v141) = 0;
        int v93 = v92 ^ 1;
LABEL_29:
        LODWORD(v143) = v93;
        char v62 = &lazy protocol witness table cache variable for type UUID and conformance UUID;
        unint64_t v58 = v137;
        goto LABEL_30;
      }
    }
    else
    {
      outlined destroy of ParticipantViewModel(v85, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
    }
    outlined destroy of ParticipantViewModel(v143, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    outlined consume of AnsweringMachineCallStatus?(v155, v154);
    LODWORD(v141) = 0;
    int v93 = 1;
    goto LABEL_29;
  }
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
  uint64_t v65 = &v58[*(int *)(v64 + 48)];
  uint64_t v66 = (uint64_t)&v58[*(int *)(v64 + 64)];
  outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v58, v57);
  memcpy(v172, v65, 0xACuLL);
  outlined init with take of ParticipantVideoOverlayView.ViewModel(v66, (uint64_t)&v164);
  OUTLINED_FUNCTION_3_143();
  int v142 = 0;
  LODWORD(v143) = 1;
LABEL_15:
  LODWORD(v141) = 1;
LABEL_30:
  uint64_t v94 = *(void *)&v161[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView];
  if (v62[175] != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  char v96 = (*(uint64_t (**)(void))(v95 + 632))();
  uint64_t v97 = (uint64_t)v144;
  outlined init with copy of ParticipantViewModel(v57, (uint64_t)v144, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
  if (v96) {
    uint64_t v98 = *(unsigned __int8 *)(v97 + v56[7]);
  }
  else {
    uint64_t v98 = 0;
  }
  outlined destroy of ParticipantViewModel(v97, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
  uint64_t v144 = (char *)v94;
  *(unsigned char *)(v94 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_shouldSkipTransformsForLayerHostMode) = v98;
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v99 - 8);
  OUTLINED_FUNCTION_60();
  uint64_t v100 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v98, v57, v100);
  __swift_storeEnumTagSinglePayload(v98, 0, 1, v100);
  unint64_t v102 = v161;
  uint64_t v103 = &v161[OBJC_IVAR____TtC15ConversationKit15ParticipantView_participantIdentifier];
  swift_beginAccess();
  outlined assign with take of UUID?(v98, (uint64_t)v103);
  swift_endAccess();
  int64_t v104 = ParticipantView.infoView.getter();
  uint64_t v105 = v56[6];
  unint64_t v106 = (uint64_t *)(v57 + v56[5]);
  uint64_t v107 = *v106;
  uint64_t v108 = v106[1];
  uint64_t v109 = *(unsigned __int8 *)(v57 + v105);
  OUTLINED_FUNCTION_0_91();
  uint64_t v111 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 296);
  swift_bridgeObjectRetain();
  v111(v107, v108, v109, v143 & 1);

  swift_bridgeObjectRelease();
  CGRect v112 = *(void **)&v102[OBJC_IVAR____TtC15ConversationKit15ParticipantView_backgroundEffectsView];
  if (v112) {
    objc_msgSend(v112, sel_setHidden_, v141);
  }
  id v113 = objc_msgSend(*(id *)&v102[OBJC_IVAR____TtC15ConversationKit15ParticipantView_prominenceBorderView], sel_setHidden_, (v159[v160[9]] & 1) == 0);
  if (v158)
  {
    v163[0] = v58;
    v163[1] = v151;
    v163[2] = v158;
    v163[3] = v150;
    uint64_t v114 = v148;
    v163[4] = v148;
    v163[5] = v149;
    uint64_t v115 = v147;
    uint64_t v116 = v156;
    v163[6] = v147;
    v163[7] = v156;
    LOWORD(v163[8]) = v157 & 0xFF01;
    uint64_t v117 = v155;
    uint64_t v118 = v154;
    v163[9] = v155;
    v163[10] = v154;
    v163[11] = ObjectType;
    v163[12] = v152;
    long long v119 = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    outlined copy of (title: String, subtitle: String?)?(v117, v118);
    ParticipantMonogramView.configure(with:)((uint64_t)v163);
    uint64_t v133 = v157;
    uint64_t v120 = OUTLINED_FUNCTION_17_66();
    outlined consume of ParticipantMonogramView.ViewModel?(v120, v121, v122, v123, v114, v124, v115, v116, v133, v117, v118);
  }
  else
  {
    (*(void (**)(id))((*v63 & **(void **)(*(void *)&v102[OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView]
                                                     + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_audioVisualizationView))
                               + 0xA8))(v113);
  }
  outlined init with copy of FeatureEligibility?((uint64_t)v172, (uint64_t)v162, &demangling cache variable for type metadata for ParticipantVideoView.ViewModel?);
  if (v162[3] == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v162, &demangling cache variable for type metadata for ParticipantVideoView.ViewModel?);
  }
  else
  {
    memcpy(v163, v162, 0xACuLL);
    ParticipantVideoView.configure(with:)((uint64_t)v163);
    outlined destroy of ParticipantVideoView.ViewModel((uint64_t)v163);
  }
  outlined init with copy of FeatureEligibility?((uint64_t)&v164, (uint64_t)v162, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
  if (LOBYTE(v162[13]) == 255)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v162, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
    uint64_t v126 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    ParticipantVideoOverlayView.setAlpha(_:animated:completion:)(1, (void (*)(uint64_t))partial apply for closure #1 in ParticipantView.configure(with:isOneToOneMode:), v126, 0.0);
    swift_release_n();
  }
  else
  {
    uint64_t v125 = outlined init with take of ParticipantVideoOverlayView.ViewModel((uint64_t)v162, (uint64_t)v163);
    OUTLINED_FUNCTION_21_5(v125, sel_setHidden_);
    ParticipantVideoOverlayView.configure(with:)((uint64_t)v163);
    ParticipantVideoOverlayView.setAlpha(_:animated:completion:)(1, 0, 0, 1.0);
    outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)v163);
  }
  uint64_t v127 = (uint64_t)v159;
  ParticipantView.setKickMemberButtonIsVisible(_:)(v159[v160[8]] & ~(_BYTE)v145 & 1);
  if (v142) {
    ParticipantView.setInfoViewIsVisible(_:animated:)(0, 0);
  }
  uint64_t v136 = v154;
  uint64_t v135 = v155;
  uint64_t v134 = v157;
  uint64_t v128 = OUTLINED_FUNCTION_17_66();
  outlined consume of ParticipantMonogramView.ViewModel?(v128, v129, v130, v131, v148, v132, v147, v156, v134, v135, v136);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v164, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v172, &demangling cache variable for type metadata for ParticipantVideoView.ViewModel?);
  return outlined destroy of ParticipantViewModel(v127, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
}

Swift::Void __swiftcall ParticipantView.updateAudioVisualization(with:)(Swift::Float with)
{
}

Swift::Void __swiftcall ParticipantView.setInfoViewIsVisible(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  Swift::UInt64 v5 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideInfoViewTimer];
  if (v5) {
    objc_msgSend(v5, sel_invalidate);
  }
  uint64_t v6 = ParticipantView.infoView.getter();
  objc_msgSend(v6, sel_setHidden_, 0);

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v2;
  *(unsigned char *)(v7 + 24) = _;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v2;
  *(unsigned char *)(v8 + 24) = _;
  if (animated)
  {
    if (_) {
      double v9 = 0.1;
    }
    else {
      double v9 = 0.25;
    }
    uint64_t v10 = self;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = partial apply for closure #1 in ParticipantView.setInfoViewIsVisible(_:animated:);
    *(void *)(v11 + 24) = v7;
    uint64_t v30 = partial apply for thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v31 = v11;
    uint64_t v26 = MEMORY[0x1E4F143A8];
    uint64_t v27 = 1107296256;
    uint64_t v28 = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v29 = &block_descriptor_120;
    Swift::Int v12 = _Block_copy(&v26);
    uint64_t v13 = v2;
    swift_retain();
    swift_release();
    uint64_t v30 = partial apply for closure #2 in ParticipantView.setInfoViewIsVisible(_:animated:);
    uint64_t v31 = v8;
    uint64_t v26 = MEMORY[0x1E4F143A8];
    uint64_t v27 = 1107296256;
    uint64_t v28 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    uint64_t v29 = &block_descriptor_12_6;
    uint64_t v14 = _Block_copy(&v26);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_animateWithDuration_delay_options_animations_completion_, 131076, v12, v14, v9, 0.0);
    swift_release();
    swift_release();
    _Block_release(v14);
    _Block_release(v12);
  }
  else
  {
    Swift::UInt v15 = v2;
    uint64_t v16 = ParticipantView.infoView.getter();
    uint64_t v17 = v16;
    double v18 = 0.0;
    if (_) {
      double v18 = 1.0;
    }
    objc_msgSend(v16, sel_setAlpha_, v18);

    uint64_t v19 = ParticipantView.infoView.getter();
    objc_msgSend(v19, sel_alpha);
    double v21 = v20;

    if (v21 >= 0.5)
    {
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v22 = ParticipantView.infoView.getter();
      objc_msgSend(v22, sel_setHidden_, 1);

      uint64_t v23 = &v15[OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate];
      OUTLINED_FUNCTION_2();
      if (MEMORY[0x1C8776240](v23))
      {
        uint64_t v24 = *((void *)v23 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(char *, Swift::Bool, uint64_t, uint64_t))(v24 + 40))(v15, _, ObjectType, v24);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
        swift_release();
      }
    }
  }
}

Swift::Void __swiftcall ParticipantView.setKickMemberButtonIsVisible(_:)(Swift::Bool a1)
{
  Swift::UInt64 v3 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton];
  char v4 = ~a1;
  objc_msgSend(v3, sel_setHidden_, !a1);
  double v5 = 0.8;
  if (!a1) {
    double v5 = 0.0;
  }
  objc_msgSend(v3, sel_setAlpha_, v5);
  if ((v4 & 1) == 0)
  {
    objc_msgSend(v1, sel_bringSubviewToFront_, v3);
  }
}

void ParticipantView.updateGradientOverlayView(isHidden:alpha:)(char a1, uint64_t a2, char a3)
{
  id v7 = objc_msgSend(v3, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_userInterfaceIdiom);

  if (!v8)
  {
    if (a1 != 2) {
      objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView], sel_setHidden_, a1 & 1);
    }
    if ((a3 & 1) == 0)
    {
      double v9 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView];
      objc_msgSend(v9, sel_setAlpha_, *(double *)&a2);
    }
  }
}

void ParticipantView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(char a1, uint64_t a2, char a3, char a4)
{
}

void ParticipantView.customCornerRadius.setter(double a1)
{
  Swift::UInt64 v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius);
  OUTLINED_FUNCTION_11_0();
  *Swift::UInt64 v3 = a1;
  ParticipantView.customCornerRadius.didset();
}

void ParticipantView.transform.setter(_OWORD *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v6.receiver = v1;
  v6.super_class = ObjectType;
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  id v7[2] = a1[2];
  objc_msgSendSuper2(&v6, sel_setTransform_, v7);
  v5.receiver = v1;
  v5.super_class = ObjectType;
  objc_msgSendSuper2(&v5, sel_transform);
  ParticipantView.updateOverlayTransforms(with:)((CGFloat *)v7);
}

uint64_t ParticipantView.registerVideoLayers(with:)(uint64_t a1)
{
  type metadata accessor for ParticipantViewModel(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_21();
  uint64_t v6 = v5 - v4;
  if (objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView), sel_isHidden))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    return os_log(_:dso:log:type:_:)();
  }
  outlined init with copy of ParticipantViewModel(a1, v6, (void (*)(void))type metadata accessor for ParticipantViewModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      memset(__dst, 0, 24);
      __dst[3] = 1;
      bzero(&__dst[4], 0x8CuLL);
      outlined destroy of ParticipantViewModel(v6, (void (*)(void))type metadata accessor for ParticipantViewModel);
      goto LABEL_13;
    }
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    uint64_t v10 = v6 + *(int *)(v9 + 64);
    memcpy(v17, (const void *)(v6 + *(int *)(v9 + 48)), sizeof(v17));
    outlined destroy of ParticipantVideoOverlayView.ViewModel(v10);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel));
    memcpy(v17, (const void *)(v6 + *(int *)(v11 + 48)), sizeof(v17));
  }
  outlined destroy of ParticipantViewModel(v6, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
  memcpy(__dst, v17, 0xACuLL);
LABEL_13:
  outlined init with copy of FeatureEligibility?((uint64_t)__dst, (uint64_t)v15, &demangling cache variable for type metadata for ParticipantVideoView.ViewModel?);
  if (v15[3] == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for ParticipantVideoView.ViewModel?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    memcpy(v16, v15, 0xACuLL);
    ParticipantVideoView.registerVideoLayers(with:)((uint64_t)v16, v12, v13, v14);
    outlined destroy of ParticipantVideoView.ViewModel((uint64_t)v16);
  }
  return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)__dst, &demangling cache variable for type metadata for ParticipantVideoView.ViewModel?);
}

Swift::Void __swiftcall ParticipantView.configureWithRecordingLocalVideo(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  if ((*(uint64_t (**)(void))(v4 + 568))())
  {
    uint64_t v5 = ParticipantView.infoView.getter();
    OUTLINED_FUNCTION_19_6();
    (*(void (**)(Swift::Bool))(v6 + 240))(a1);

    if ((objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView), sel_isHidden) & 1) == 0&& !a1)
    {
      id v8 = ParticipantView.infoView.getter();
      OUTLINED_FUNCTION_19_6();
      (*(void (**)(uint64_t))(v7 + 304))(1);
    }
  }
}

Swift::Void __swiftcall ParticipantView.updateLayerTransform(to:)(CGAffineTransform *to)
{
  long long v6 = *(_OWORD *)&to->c;
  long long v7 = *(_OWORD *)&to->a;
  tdouble x = to->tx;
  tdouble y = to->ty;
  id v5 = objc_msgSend(v1, sel_layer);
  *(_OWORD *)&m.a = v7;
  *(_OWORD *)&m.c = v6;
  m.tdouble x = tx;
  m.tdouble y = ty;
  CATransform3DMakeAffineTransform(&v8, &m);
  objc_msgSend(v5, sel_setTransform_, &v8);

  ParticipantView.updateOverlayTransforms(with:)(&to->a);
}

uint64_t ParticipantView.shouldOverrideShadowHidden.setter(char a1)
{
  return ParticipantView.isInRoster.setter(a1, &OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden, (uint64_t (*)(uint64_t))ParticipantView.shouldOverrideShadowHidden.didset);
}

uint64_t ParticipantView.isInRoster.setter(char a1, void *a2, uint64_t (*a3)(uint64_t))
{
  long long v6 = (unsigned char *)(v3 + *a2);
  OUTLINED_FUNCTION_11_0();
  uint64_t v7 = *v6;
  *long long v6 = a1;
  return a3(v7);
}

void ParticipantView.isExpanded.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded);
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  ParticipantView.isExpanded.didset();
}

double ParticipantView.transform.getter()
{
  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  id v1 = objc_msgSendSuper2(&v13, sel_transform);
  *(void *)&double result = OUTLINED_FUNCTION_19_58((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11).n128_u64[0];
  return result;
}

void ParticipantView.updateOverlayTransforms(with:)(CGFloat *a1)
{
  uint64_t v2 = v1;
  CGFloat v3 = *a1;
  CGFloat v4 = a1[1];
  CGFloat v5 = a1[2];
  CGFloat v6 = a1[3];
  CGFloat v7 = a1[4];
  CGFloat v8 = a1[5];
  id v9 = objc_msgSend(v1, sel_traitCollection);
  id v10 = objc_msgSend(v9, sel_userInterfaceIdiom);

  double v11 = 0.0;
  if (!v10) {
    double v11 = closure #1 in ParticipantView.updateOverlayTransforms(with:)();
  }
  v70.a = v3;
  v70.b = v4;
  v70.c = v5;
  v70.d = v6;
  v70.tdouble x = v7;
  v70.tdouble y = v8;
  uint64_t v12 = CGAffineTransformInvert(&v69, &v70);
  OUTLINED_FUNCTION_15_81((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, *(uint64_t *)&v68.a, *(uint64_t *)&v68.b, *(uint64_t *)&v68.c, *(uint64_t *)&v68.d, *(uint64_t *)&v68.tx, *(uint64_t *)&v68.ty, *(long long *)&v69.a);
  double v20 = CGAffineTransformRotate(&v69, &v70, v11);
  OUTLINED_FUNCTION_15_81((uint64_t)v20, v21, v22, v23, v24, v25, v26, v27, *(uint64_t *)&v68.a, *(uint64_t *)&v68.b, *(uint64_t *)&v68.c, *(uint64_t *)&v68.d, *(uint64_t *)&v68.tx, *(uint64_t *)&v68.ty, *(long long *)&v69.a);
  int v28 = ParticipantVideoOverlayView.imageAndLabelTransform.setter((uint64_t *)&v70);
  uint64_t v37 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView];
  if (v2[OBJC_IVAR____TtC15ConversationKit15ParticipantView_localParticipant] == 1)
  {
    OUTLINED_FUNCTION_7_112(v28, v29, v30, v31, v32, v33, v34, v35, *(uint64_t *)&v68.a, *(uint64_t *)&v68.b, *(uint64_t *)&v68.c, *(uint64_t *)&v68.d, *(uint64_t *)&v68.tx, *(uint64_t *)&v68.ty, *(CGAffineTransform **)&v69.a, *(uint64_t *)&v69.b, *(uint64_t *)&v69.c, *(uint64_t *)&v69.d, *(uint64_t *)&v69.tx,
      *(uint64_t *)&v69.ty);
    CGAffineTransform v69 = v68;
    unint64_t v38 = CGAffineTransformRotate(&v68, &v69, v11);
    *(void *)&double v36 = OUTLINED_FUNCTION_11_83((uint64_t)v38, v39, v40, v41, v42, v43, v44, v45, *(long long *)&v68.a).n128_u64[0];
  }
  else
  {
    unint64_t v46 = sel_setTransform_;
    v69.a = 1.0;
    v69.b = 0.0;
    v69.c = 0.0;
    v69.d = 1.0;
    v69.tdouble x = 0.0;
    v69.tdouble y = 0.0;
  }
  objc_msgSend(v37, v46, &v69, v36);
  id v47 = objc_msgSend(v2, sel_traitCollection);
  id v48 = objc_msgSend(v47, sel_userInterfaceIdiom);

  if (!v48)
  {
    uint64_t v57 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView];
    unint64_t v58 = OUTLINED_FUNCTION_7_112(v49, v50, v51, v52, v53, v54, v55, v56, *(uint64_t *)&v68.a, *(uint64_t *)&v68.b, *(uint64_t *)&v68.c, *(uint64_t *)&v68.d, *(uint64_t *)&v68.tx, *(uint64_t *)&v68.ty, *(CGAffineTransform **)&v69.a, *(uint64_t *)&v69.b, *(uint64_t *)&v69.c, *(uint64_t *)&v69.d, *(uint64_t *)&v69.tx,
            *(uint64_t *)&v69.ty);
    *(void *)&double v66 = OUTLINED_FUNCTION_11_83((uint64_t)v58, v59, v60, v61, v62, v63, v64, v65, *(long long *)&v68.a).n128_u64[0];
    objc_msgSend(v57, v67, &v69, v66);
  }
}

void (*ParticipantView.transform.modify(objc_super **a1))(uint64_t *a1, char a2)
{
  CGFloat v3 = (objc_super *)malloc(0xE0uLL);
  *a1 = v3;
  v3[13].receiver = v1;
  uint64_t ObjectType = swift_getObjectType();
  v3[13].super_class = (Class)ObjectType;
  v3[11].receiver = v1;
  v3[11].super_class = (Class)ObjectType;
  objc_msgSendSuper2(v3 + 11, sel_transform);
  v3[3] = v6;
  v3[4] = v7;
  v3[5] = v8;
  return ParticipantView.transform.modify;
}

void ParticipantView.transform.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 48);
  uint64_t v4 = *a1 + 96;
  uint64_t v6 = *(void *)(*a1 + 56);
  uint64_t v5 = *(void *)(*a1 + 64);
  uint64_t v8 = *(void *)(*a1 + 72);
  uint64_t v7 = *(void *)(*a1 + 80);
  uint64_t v9 = *(void *)(*a1 + 88);
  if (a2)
  {
    *(_OWORD *)(v2 + 144) = *(_OWORD *)(v2 + 208);
    *(void *)(v2 + 96) = v3;
    *(void *)(v2 + 104) = v6;
    *(void *)(v2 + 112) = v5;
    *(void *)(v2 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v8;
    *(void *)(v2 + 128) = v7;
    *(void *)(v2 + 136) = v9;
    objc_msgSendSuper2((objc_super *)(v2 + 144), sel_setTransform_, v4);
  }
  else
  {
    uint64_t v10 = *(void *)(v2 + 208);
    uint64_t v11 = *(void *)(v2 + 216);
    *(void *)(v2 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v10;
    *(void *)(v2 + 168) = v11;
    *(void *)(v2 + 96) = v3;
    *(void *)(v2 + 104) = v6;
    *(void *)(v2 + 112) = v5;
    *(void *)(v2 + 12ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v8;
    *(void *)(v2 + 128) = v7;
    *(void *)(v2 + 136) = v9;
    objc_msgSendSuper2((objc_super *)(v2 + 160), sel_setTransform_, v4);
    *(void *)(v2 + 192) = v10;
    *(void *)(v2 + 20ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v11;
    id v12 = objc_msgSendSuper2((objc_super *)(v2 + 192), sel_transform);
    OUTLINED_FUNCTION_19_58((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
    ParticipantView.updateOverlayTransforms(with:)((CGFloat *)v2);
  }
  free((void *)v2);
}

double closure #1 in ParticipantView.updateOverlayTransforms(with:)()
{
  id v0 = objc_msgSend(self, sel_currentDevice);
  id v1 = (char *)objc_msgSend(v0, sel_orientation);

  double result = 0.0;
  if ((unint64_t)(v1 - 2) <= 2) {
    return dbl_1C378EB20[(void)(v1 - 2)];
  }
  return result;
}

id ParticipantView.monogramView.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView);
}

char *ParticipantView.infoView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView);
  }
  else
  {
    uint64_t v4 = v0;
    char v5 = *(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_localParticipant);
    id v6 = objc_allocWithZone((Class)type metadata accessor for ParticipantInfoView());
    uint64_t v7 = ParticipantInfoView.init(localParticipant:)(v5);
    uint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    uint64_t v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void ParticipantView.infoView.setter(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView) = a1;
}

id ParticipantView.kickMemberButton.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton);
}

uint64_t ParticipantView.participantIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_participantIdentifier;
  OUTLINED_FUNCTION_2();
  return outlined init with copy of FeatureEligibility?(v3, a1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
}

uint64_t key path getter for ParticipantView.delegate : ParticipantView@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for ParticipantView.delegate : ParticipantView(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t ParticipantView.delegate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  OUTLINED_FUNCTION_2();
  return MEMORY[0x1C8776240](v1);
}

uint64_t ParticipantView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  OUTLINED_FUNCTION_11_0();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*ParticipantView.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

uint64_t ParticipantView.isInRoster.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for ParticipantView.isInRoster : ParticipantView@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

id ParticipantView.isInRoster.didset(char a1)
{
  int v2 = a1 & 1;
  uint64_t v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster);
  id result = (id)swift_beginAccess();
  if (*v3 != v2) {
    return ParticipantView.isInRosterDidChange()();
  }
  return result;
}

id ParticipantView.isInRosterDidChange()()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_layer);
  closure #1 in ParticipantView.updateShadowVisibility()(v2);

  uint64_t v3 = &v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster];
  swift_beginAccess();
  ParticipantMonogramView.isInRoster.setter(*v3);
  LOBYTE(v3) = *v3;
  uint64_t v4 = (unsigned char *)(*(void *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView]
               + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster);
  swift_beginAccess();
  *uint64_t v4 = (_BYTE)v3;
  return ParticipantVideoOverlayView.isInRoster.didset();
}

void (*ParticipantView.isInRoster.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster);
  OUTLINED_FUNCTION_2();
  *((unsigned char *)v3 + 32) = *v4;
  return ParticipantView.isInRoster.modify;
}

void ParticipantView.isInRoster.modify(uint64_t a1, uint64_t a2)
{
}

uint64_t ParticipantView.shouldOverrideShadowHidden.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for ParticipantView.shouldOverrideShadowHidden : ParticipantView@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ParticipantView.shouldOverrideShadowHidden.didset(char a1)
{
  int v2 = a1 & 1;
  uint64_t v3 = &v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden];
  swift_beginAccess();
  if (*v3 != v2)
  {
    id v4 = objc_msgSend(v1, sel_layer);
    closure #1 in ParticipantView.updateShadowVisibility()(v4);
  }
}

void (*ParticipantView.shouldOverrideShadowHidden.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  id v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden);
  OUTLINED_FUNCTION_2();
  *((unsigned char *)v3 + 32) = *v4;
  return ParticipantView.shouldOverrideShadowHidden.modify;
}

void ParticipantView.shouldOverrideShadowHidden.modify(uint64_t a1, uint64_t a2)
{
}

void ParticipantView.isInRoster.modify(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3 = *(void **)a1;
  a3(*(unsigned __int8 *)(*(void *)a1 + 32));
  free(v3);
}

uint64_t ParticipantView.wantsShadow.getter()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster);
  swift_beginAccess();
  if (*v1)
  {
    char v2 = 0;
  }
  else
  {
    uint64_t v3 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden);
    swift_beginAccess();
    char v2 = *v3 ^ 1;
  }
  return v2 & 1;
}

double ParticipantView.customCornerRadius.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius;
  OUTLINED_FUNCTION_2();
  return *(double *)v1;
}

double key path getter for ParticipantView.customCornerRadius : ParticipantView@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (double *)(*a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

void ParticipantView.customCornerRadius.didset()
{
  uint64_t v1 = v0;
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_backgroundEffectsView);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView);
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView);
  uint64_t v5 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius);
  if (v2)
  {
    OUTLINED_FUNCTION_2();
    double v6 = *v5;
    id v7 = v3;
    id v8 = v4;
    id v2 = v2;
    objc_msgSend(v2, sel__setContinuousCornerRadius_, v6);
  }
  else
  {
    id v9 = v3;
    id v10 = v4;
  }
  OUTLINED_FUNCTION_2();
  objc_msgSend(v3, sel__setContinuousCornerRadius_, *v5);
  objc_msgSend(v4, sel__setContinuousCornerRadius_, *v5);

  (*(void (**)(double))((*MEMORY[0x1E4FBC8C8] & **(void **)(v1
                                                                       + OBJC_IVAR____TtC15ConversationKit15ParticipantView_prominenceBorderView))
                                 + 0x88))(*v5);
  uint64_t v11 = *(void *)v5;
  id v12 = (void *)(*(void *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView)
                 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_customCornerRadius);
  OUTLINED_FUNCTION_11_0();
  *id v12 = v11;
  ParticipantMonogramView.customCornerRadius.didset();
  uint64_t v13 = ParticipantView.infoView.getter();
  OUTLINED_FUNCTION_19_6();
  (*(void (**)(void))(v14 + 192))();
}

uint64_t (*ParticipantView.customCornerRadius.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return ParticipantView.customCornerRadius.modify;
}

uint64_t ParticipantView.customCornerRadius.modify(uint64_t a1, char a2)
{
  return ParticipantView.customCornerRadius.modify(a1, a2, (uint64_t (*)(uint64_t))ParticipantView.customCornerRadius.didset);
}

uint64_t ParticipantView.isExpanded.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for ParticipantView.isExpanded : ParticipantView@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ParticipantView.isExpanded.didset()
{
  uint64_t v1 = v0;
  id v2 = ParticipantView.infoView.getter();
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded);
  OUTLINED_FUNCTION_2();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v2) + 0xA8))(*v3);

  if ((*v3 & 1) == 0) {
    ParticipantView.hideAlert()();
  }
}

uint64_t ParticipantView.hideAlert()()
{
  uint64_t result = (uint64_t)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView), sel_isHidden);
  if ((result & 1) == 0)
  {
    uint64_t v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v3 = self;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = partial apply for closure #1 in ParticipantView.hideAlert();
    *(void *)(v4 + 24) = v2;
    uint64_t v14 = partial apply for closure #3 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:);
    uint64_t v15 = v4;
    uint64_t v10 = MEMORY[0x1E4F143A8];
    uint64_t v11 = 1107296256;
    id v12 = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v13 = &block_descriptor_46;
    uint64_t v5 = _Block_copy(&v10);
    swift_retain();
    swift_release();
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v14 = partial apply for closure #3 in ParticipantView.hideAlert();
    uint64_t v15 = v6;
    uint64_t v10 = MEMORY[0x1E4F143A8];
    uint64_t v11 = 1107296256;
    id v12 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    uint64_t v13 = &block_descriptor_50_2;
    id v7 = _Block_copy(&v10);
    swift_release();
    objc_msgSend(v3, sel_animateWithDuration_delay_options_animations_completion_, 0x20000, v5, v7, 0.15, 0.0);
    _Block_release(v7);
    _Block_release(v5);
    id v8 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideAlertViewTimer);
    if (v8)
    {
      id v9 = v8;
      objc_msgSend(v9, sel_invalidate);
    }
    return swift_release();
  }
  return result;
}

uint64_t (*ParticipantView.isExpanded.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return ParticipantView.isExpanded.modify;
}

uint64_t ParticipantView.isExpanded.modify(uint64_t a1, char a2)
{
  return ParticipantView.customCornerRadius.modify(a1, a2, (uint64_t (*)(uint64_t))ParticipantView.isExpanded.didset);
}

uint64_t ParticipantView.customCornerRadius.modify(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

char *ParticipantView.init(frame:localParticipant:)()
{
  OUTLINED_FUNCTION_6_118();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_contentView;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView;
  v125[0] = 0;
  id v7 = objc_allocWithZone((Class)type metadata accessor for ParticipantMonogramView());
  *(void *)&v5[v6] = ParticipantMonogramView.init(colorStyle:)(v125);
  uint64_t v8 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView;
  *(void *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantVideoView()), sel_init);
  uint64_t v9 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView;
  *(void *)&v5[v9] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantAlertView()), sel_init);
  uint64_t v10 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView;
  *(void *)&v5[v10] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantVideoOverlayView()), sel_init);
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView] = 0;
  uint64_t v11 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_prominenceBorderView;
  type metadata accessor for ParticipantBorderView();
  *(void *)&v5[v11] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v12 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel;
  *(void *)&v5[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v13 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton;
  type metadata accessor for ParticipantViewButton();
  uint64_t v126 = &type metadata for ImageNames.ParticipantView;
  uint64_t v127 = &protocol witness table for ImageNames.ParticipantView;
  v125[0] = 4;
  *(void *)&v5[v13] = ParticipantViewButton.__allocating_init(imageName:)((uint64_t)v125);
  uint64_t v14 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView;
  *(void *)&v5[v14] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), sel_init);
  uint64_t v15 = &v5[OBJC_IVAR____TtC15ConversationKit15ParticipantView_mostRecentViewModelHash];
  *(void *)uint64_t v15 = 0;
  v15[8] = 1;
  UUID.init()();
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideInfoViewTimer] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideAlertViewTimer] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit15ParticipantView_orientationCancellable] = 0;
  uint64_t v16 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_13_18(v16);
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster] = 0;
  v5[OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius] = 0;
  v5[OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded] = 0;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  if ((*(uint64_t (**)(void))(v17 + 320))()) {
    id v18 = 0;
  }
  else {
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1FE0]), sel_initWithPrivateStyle_, 2030);
  }
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit15ParticipantView_backgroundEffectsView] = v18;
  v5[OBJC_IVAR____TtC15ConversationKit15ParticipantView_localParticipant] = v0 & 1;

  uint64_t v123 = v5;
  uint64_t v124 = ObjectType;
  double v19 = OUTLINED_FUNCTION_6_2();
  id v22 = objc_msgSendSuper2(v20, v21, v19);
  uint64_t v23 = self;
  uint64_t v24 = (char *)v22;
  id v25 = objc_msgSend(v23, sel_clearColor);
  objc_msgSend(v24, sel_setBackgroundColor_, v25);

  uint64_t v26 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_contentView;
  uint64_t v27 = *(uint64_t (**)(void))(*(void *)static Defaults.shared + 320);
  id v28 = *(id *)&v24[OBJC_IVAR____TtC15ConversationKit15ParticipantView_contentView];
  if (v27())
  {
    if (one-time initialization token for background != -1) {
      swift_once();
    }
    id v29 = (id)static Colors.ParticipantViews.background;
  }
  else
  {
    id v29 = objc_msgSend(v23, sel_clearColor);
  }
  int v30 = v29;
  uint64_t v120 = v23;
  OUTLINED_FUNCTION_12_3((uint64_t)v29, sel_setBackgroundColor_);

  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[v26]);
  uint64_t v31 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView;
  int v32 = *(void **)&v24[OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView];
  int v33 = &v24[OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster];
  OUTLINED_FUNCTION_2();
  LOBYTE(v33) = *v33;
  id v34 = v32;
  ParticipantMonogramView.isInRoster.setter((char)v33);

  uint64_t v35 = *(void *)&v24[v31] + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_delegate;
  OUTLINED_FUNCTION_11_0();
  *(void *)(v35 + 8) = &protocol witness table for ParticipantView;
  id v36 = (id)swift_unknownObjectWeakAssign();
  uint64_t v37 = *(void *)&v24[OBJC_IVAR____TtC15ConversationKit15ParticipantView_backgroundEffectsView];
  if (v37) {
    id v36 = objc_msgSend(v24, sel_insertSubview_atIndex_, v37, 0);
  }
  OUTLINED_FUNCTION_12_3((uint64_t)v36, sel_addSubview_);
  unint64_t v38 = *(void **)&v24[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView];
  objc_msgSend(v38, sel_setAlpha_, 0.0);
  id v39 = *(id *)&v24[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView];
  id v40 = v38;
  id v41 = OUTLINED_FUNCTION_13_81((uint64_t)v40, sel_setHidden_);
  id v42 = OUTLINED_FUNCTION_13_81((uint64_t)v41, sel_setClipsToBounds_);
  OUTLINED_FUNCTION_12_3((uint64_t)v42, sel_addSubview_);

  id v43 = v40;
  objc_msgSend(v43, (SEL)&selRef_isSystemProvider, 1);
  objc_msgSend(v43, sel_setClipsToBounds_, 1);
  objc_msgSend(*(id *)&v24[v26], sel_addSubview_, v43);

  uint64_t v44 = ParticipantView.infoView.getter();
  objc_msgSend(v44, sel_setAlpha_, 0.0);

  uint64_t v45 = ParticipantView.infoView.getter();
  objc_msgSend(v45, (SEL)&selRef_isSystemProvider, 1);

  unint64_t v46 = ParticipantView.infoView.getter();
  OUTLINED_FUNCTION_0_91();
  id v48 = *(void (**)(char *, _UNKNOWN **))(v47 + 264);
  int v49 = v24;
  v48(v24, &protocol witness table for ParticipantView);

  id v50 = *(id *)&v24[v26];
  int v51 = ParticipantView.infoView.getter();
  objc_msgSend(v50, sel_addSubview_, v51);

  uint64_t v52 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView;
  int v53 = *(void **)&v49[OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView];
  objc_msgSend(v53, sel_setAlpha_, 0.0);
  objc_msgSend(v53, (SEL)&selRef_isSystemProvider, 1);
  objc_msgSend(v53, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(*(id *)&v24[v26], sel_addSubview_, v53);
  int v54 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1C3769F40;
  id v56 = objc_msgSend(v53, sel_centerXAnchor);
  id v57 = objc_msgSend(v49, sel_centerXAnchor);
  id v58 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v57);

  *(void *)(v55 + 32) = v58;
  id v59 = objc_msgSend(*(id *)&v49[v52], sel_centerYAnchor);
  id v60 = objc_msgSend(v49, sel_centerYAnchor);
  id v61 = objc_msgSend(v59, sel_constraintEqualToAnchor_, v60);

  *(void *)(v55 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v61;
  id v62 = objc_msgSend(*(id *)&v49[v52], sel_widthAnchor);
  id v63 = objc_msgSend(v49, sel_widthAnchor);
  id v64 = objc_msgSend(v62, sel_constraintLessThanOrEqualToAnchor_, v63);

  *(void *)(v55 + 48) = v64;
  uint64_t v122 = v55;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v54, sel_activateConstraints_, isa);

  objc_msgSend(*(id *)&v49[v52], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  double v66 = v49;
  id v67 = objc_msgSend(v66, sel_layer);
  objc_msgSend(v67, sel_setShadowPathIsBounds_, 1);

  uint64_t v68 = *(void *)&v66[OBJC_IVAR____TtC15ConversationKit15ParticipantView_prominenceBorderView];
  id v70 = OUTLINED_FUNCTION_21_5(v69, sel_setUserInteractionEnabled_);
  OUTLINED_FUNCTION_13_81((uint64_t)v70, sel_setHidden_);
  objc_msgSend(*(id *)&v24[v26], sel_addSubview_, v68);
  uint64_t v71 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel;
  uint64_t v72 = *(void **)&v66[OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel];
  uint64_t v73 = self;
  id v74 = v72;
  id v75 = objc_msgSend(v73, sel_systemFontOfSize_, 12.0);
  objc_msgSend(v74, sel_setFont_, v75);

  id v76 = *(id *)&v66[v71];
  id v77 = objc_msgSend(v120, sel_redColor);
  objc_msgSend(v76, sel_setTextColor_, v77);

  objc_msgSend(*(id *)&v66[v71], sel_setNumberOfLines_, 0);
  uint64_t v78 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton;
  id v79 = *(id *)&v66[OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton];
  id v80 = objc_msgSend(v120, sel_blackColor);
  objc_msgSend(v79, sel_setTintColor_, v80);

  unint64_t v81 = *(void **)&v66[v78];
  uint64_t v82 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v83 = v81;
  swift_retain();
  UIControl.addAction(for:handler:)(64, (uint64_t)partial apply for closure #2 in ParticipantView.init(frame:localParticipant:), v82);

  swift_release_n();
  id v84 = OUTLINED_FUNCTION_13_81((uint64_t)objc_msgSend(*(id *)&v66[v78], sel_setAlpha_, 0.0), sel_setHidden_);
  id v85 = OUTLINED_FUNCTION_12_3((uint64_t)v84, sel_addSubview_);
  uint64_t v86 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView;
  uint64_t v87 = *(void **)&v66[OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView];
  id v88 = OUTLINED_FUNCTION_13_81((uint64_t)v85, (const char *)&selRef_isSystemProvider);
  id v89 = OUTLINED_FUNCTION_21_5((uint64_t)v88, sel_setUserInteractionEnabled_);
  OUTLINED_FUNCTION_21_5((uint64_t)v89, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  uint64_t v90 = swift_allocObject();
  *(_OWORD *)(v90 + 16) = xmmword_1C3769830;
  id v91 = objc_allocWithZone(MEMORY[0x1E4F39C10]);
  id v92 = v87;
  LODWORD(v93) = 1050514104;
  LODWORD(v94) = 1000812206;
  LODWORD(v95) = 1048863561;
  LODWORD(v96) = 1.0;
  *(void *)(v90 + 32) = objc_msgSend(v91, sel_initWithControlPoints__::, v93, v94, v95, v96);
  uint64_t v122 = v90;
  specialized Array._endMutation()();
  GradientView.interpolations.setter(v90);

  uint64_t v97 = *(void **)&v66[v86];
  uint64_t v98 = swift_allocObject();
  *(_OWORD *)(v98 + 16) = xmmword_1C3769610;
  id v99 = v97;
  id v100 = objc_msgSend(v120, sel_blackColor);
  id v101 = objc_msgSend(v100, sel_colorWithAlphaComponent_, 0.5);

  *(void *)(v98 + 32) = v101;
  *(void *)(v98 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = objc_msgSend(v120, sel_clearColor);
  uint64_t v122 = v98;
  specialized Array._endMutation()();
  GradientView.colors.setter(v98);

  unint64_t v102 = &v66[OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate];
  OUTLINED_FUNCTION_2();
  if (!MEMORY[0x1C8776240](v102)
    || (uint64_t v103 = *((void *)v102 + 1),
        uint64_t v104 = swift_getObjectType(),
        (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v103 + 56))(&v121, v104, v103),
        swift_unknownObjectRelease(),
        v121 == 2)
    || (v121 & 1) != 0)
  {
    id v109 = *(id *)&v66[v86];
    uint64_t v110 = (void *)GradientView.gradientLayer.getter();
    objc_msgSend(v110, sel_setStartPoint_, 0.5, 0.0);

    id v107 = *(id *)&v66[v86];
    uint64_t v108 = (void *)GradientView.gradientLayer.getter();
    objc_msgSend(v108, sel_setEndPoint_, 0.5, 0.333333333);
  }
  else
  {
    id v105 = *(id *)&v66[v86];
    unint64_t v106 = (void *)GradientView.gradientLayer.getter();
    objc_msgSend(v106, sel_setStartPoint_, 0.5, 1.0);

    id v107 = *(id *)&v66[v86];
    uint64_t v108 = (void *)GradientView.gradientLayer.getter();
    objc_msgSend(v108, sel_setEndPoint_, 0.5, 0.6);
  }

  objc_msgSend(v66, sel_addSubview_, *(void *)&v66[v86]);
  uint64_t v111 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v112 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  OUTLINED_FUNCTION_21();
  uint64_t v115 = v114 - v113;
  id v116 = objc_msgSend(self, sel_defaultCenter);
  id v117 = objc_msgSend(self, sel_currentDevice);
  NSNotificationCenter.publisher(for:object:)();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
  uint64_t v118 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v115, v111);
  *(void *)&v66[OBJC_IVAR____TtC15ConversationKit15ParticipantView_orientationCancellable] = v118;
  swift_release();
  ParticipantView.isInRosterDidChange()();

  return v66;
}

uint64_t ParticipantView.didTapKickMember()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v1);
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void closure #3 in ParticipantView.init(frame:localParticipant:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (void *)MEMORY[0x1C8776240](v2);
  if (v3)
  {
    id v4 = v3;
    v5.receiver = v3;
    v5.super_class = (Class)type metadata accessor for ParticipantView();
    objc_msgSendSuper2(&v5, sel_transform);
    ParticipantView.updateOverlayTransforms(with:)((CGFloat *)&v6);
  }
}

id ParticipantView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantView.init(coder:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_contentView;
  *(void *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView;
  v14[0] = 0;
  id v4 = objc_allocWithZone((Class)type metadata accessor for ParticipantMonogramView());
  *(void *)&v1[v3] = ParticipantMonogramView.init(colorStyle:)(v14);
  uint64_t v5 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView;
  *(void *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantVideoView()), sel_init);
  uint64_t v6 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView;
  *(void *)&v1[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantAlertView()), sel_init);
  uint64_t v7 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView;
  *(void *)&v1[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantVideoOverlayView()), sel_init);
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView] = 0;
  uint64_t v8 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_prominenceBorderView;
  type metadata accessor for ParticipantBorderView();
  *(void *)&v1[v8] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v9 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel;
  *(void *)&v1[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v10 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton;
  type metadata accessor for ParticipantViewButton();
  uint64_t v15 = &type metadata for ImageNames.ParticipantView;
  uint64_t v16 = &protocol witness table for ImageNames.ParticipantView;
  v14[0] = 4;
  *(void *)&v1[v10] = ParticipantViewButton.__allocating_init(imageName:)((uint64_t)v14);
  uint64_t v11 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView;
  *(void *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), sel_init);
  uint64_t v12 = &v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_mostRecentViewModelHash];
  *(void *)uint64_t v12 = 0;
  v12[8] = 1;
  UUID.init()();
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideInfoViewTimer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideAlertViewTimer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_orientationCancellable] = 0;
  uint64_t v13 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_13_18(v13);
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id ParticipantView.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideInfoViewTimer];
  if (v2) {
    objc_msgSend(v2, sel_invalidate);
  }
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideAlertViewTimer];
  if (v3) {
    objc_msgSend(v3, sel_invalidate);
  }
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

Swift::Void __swiftcall ParticipantView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  ParticipantView._layout()();
}

id ParticipantView._layout()()
{
  objc_super v1 = v0;
  objc_msgSend(v0, sel_bounds);
  id result = (id)CGRectIsInfinite(v39);
  if ((result & 1) == 0)
  {
    objc_msgSend(v0, sel_bounds);
    id result = (id)CGRectIsEmpty(v40);
    if ((result & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C37709C0;
      id v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit15ParticipantView_contentView];
      *(void *)(inited + 32) = v4;
      objc_super v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView];
      *(void *)(inited + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v5;
      uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView];
      *(void *)(inited + 48) = v6;
      uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView];
      *(void *)(inited + 56) = v7;
      uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_prominenceBorderView];
      *(void *)(inited + 64) = v8;
      uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel];
      *(void *)(inited + 72) = v9;
      uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView];
      *(void *)(inited + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v10;
      id v11 = v4;
      id v12 = v5;
      id v13 = v6;
      id v14 = v7;
      id v15 = v8;
      id v16 = v9;
      id v17 = v10;
      *(void *)(inited + 88) = ParticipantView.infoView.getter();
      specialized Array._endMutation()();
      uint64_t v18 = inited;
      unint64_t v19 = inited & 0xC000000000000001;
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v18 & 0xC000000000000001) == 0, v18);
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(7, (inited & 0xC000000000000001) == 0, inited);
      if ((inited & 0xC000000000000001) != 0) {
        id v20 = (id)MEMORY[0x1C87744F0](0, inited);
      }
      else {
        id v20 = *(id *)(inited + 32);
      }
      SEL v21 = v20;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v21, sel_setFrame_);

      if (v19) {
        id v22 = (id)MEMORY[0x1C87744F0](1, v18);
      }
      else {
        id v22 = *(id *)(v18 + 40);
      }
      uint64_t v23 = v22;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v23, sel_setFrame_);

      if (v19) {
        id v24 = (id)MEMORY[0x1C87744F0](2, v18);
      }
      else {
        id v24 = *(id *)(v18 + 48);
      }
      id v25 = v24;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v25, sel_setFrame_);

      if (v19) {
        id v26 = (id)MEMORY[0x1C87744F0](3, v18);
      }
      else {
        id v26 = *(id *)(v18 + 56);
      }
      uint64_t v27 = v26;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v27, sel_setFrame_);

      if (v19) {
        id v28 = (id)MEMORY[0x1C87744F0](4, v18);
      }
      else {
        id v28 = *(id *)(v18 + 64);
      }
      id v29 = v28;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v29, sel_setFrame_);

      if (v19) {
        id v30 = (id)MEMORY[0x1C87744F0](5, v18);
      }
      else {
        id v30 = *(id *)(v18 + 72);
      }
      uint64_t v31 = v30;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v31, sel_setFrame_);

      if (v19) {
        id v32 = (id)MEMORY[0x1C87744F0](6, v18);
      }
      else {
        id v32 = *(id *)(v18 + 80);
      }
      int v33 = v32;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v33, sel_setFrame_);

      if (v19) {
        id v34 = (id)MEMORY[0x1C87744F0](7, v18);
      }
      else {
        id v34 = *(id *)(v18 + 88);
      }
      uint64_t v35 = v34;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v35, sel_setFrame_);
      swift_bridgeObjectRelease();

      id v36 = objc_msgSend(v1, sel_traitCollection);
      id v37 = objc_msgSend(v36, sel_userInterfaceIdiom);

      if (!v37)
      {
        unint64_t v38 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView];
        objc_msgSend(v1, sel_bounds);
        objc_msgSend(v38, sel_setFrame_);
      }
      return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton], sel_setFrame_, 10.0, 10.0, 32.0, 32.0);
    }
  }
  return result;
}

uint64_t ParticipantView.configureViewVisibility(for:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ParticipantViewModel(0);
  MEMORY[0x1F4188790](v4);
  uint64_t i = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (unint64_t *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C3769610;
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView];
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView];
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v10;
  unint64_t v57 = v8;
  specialized Array._endMutation()();
  outlined init with copy of ParticipantViewModel(a1, i, (void (*)(void))type metadata accessor for ParticipantViewModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v52 = v7;
      uint64_t v29 = i
          + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                   + 48);
      id v30 = *(void **)v29;
      uint64_t v31 = *(void *)(v29 + 80);
      uint64_t v54 = *(void *)(v29 + 72);
      id v55 = v30;
      uint64_t v53 = *(void *)(v29 + 96);
      int v51 = v9;
      id v32 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      outlined consume of AnsweringMachineCallStatus?(v54, v31);
      uint64_t v25 = specialized MutableCollection._halfStablePartition(isSuffixElement:)((uint64_t *)&v57, v1);
      if (v57 >> 62) {
        goto LABEL_39;
      }
      uint64_t v39 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_11;
    }
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    int v13 = *(_DWORD *)(v12 + 48);
    uint64_t v14 = i + *(int *)(v12 + 64);
    id v15 = v9;
    id v16 = v10;
    outlined destroy of ParticipantVideoOverlayView.ViewModel(v14);
  }
  else
  {
    int v13 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                    + 48);
    id v17 = v9;
    id v18 = v10;
  }
  outlined destroy of ParticipantVideoView.ViewModel(i + v13);
  outlined destroy of ParticipantViewModel(i, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
  uint64_t v25 = specialized MutableCollection._halfStablePartition(isSuffixElement:)((uint64_t *)&v57, v2);
  if (v57 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t i = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t i = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (i < v25)
  {
    __break(1u);
    goto LABEL_36;
  }
  specialized Array.replaceSubrange<A>(_:with:)(v25, i, v19, v20, v21, v22, v23, v24, v51, v52);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C3769830;
  *(void *)(v26 + 32) = v10;
  uint64_t v56 = v26;
  specialized Array._endMutation()();
  unint64_t v27 = v56;
  id v28 = v10;
  while (1)
  {
    unint64_t v43 = v57;
    if (v57 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v25)
    {
      if (v25 < 1)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      for (uint64_t i = 0; i != v25; ++i)
      {
        if ((v43 & 0xC000000000000001) != 0) {
          id v44 = (id)MEMORY[0x1C87744F0](i, v43);
        }
        else {
          id v44 = *(id *)(v43 + 8 * i + 32);
        }
        uint64_t v45 = v44;
        objc_msgSend(v44, sel_setHidden_, 1);
      }
    }
    swift_bridgeObjectRelease();
    if (v27 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v46) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v46 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v46) {
        return swift_bridgeObjectRelease();
      }
    }
    if (v46 >= 1) {
      break;
    }
LABEL_37:
    __break(1u);
    do
    {
      __break(1u);
LABEL_39:
      swift_bridgeObjectRetain();
      uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_11:
      ;
    }
    while (v39 < v25);
    specialized Array.replaceSubrange<A>(_:with:)(v25, v39, v33, v34, v35, v36, v37, v38, v51, v52);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1C3769830;
    id v41 = v51;
    *(void *)(v40 + 32) = v51;
    uint64_t v56 = v40;
    specialized Array._endMutation()();
    unint64_t v27 = v56;
    id v42 = v41;
    outlined destroy of ParticipantViewModel(i, (void (*)(void))type metadata accessor for ParticipantViewModel.ParticipantDetails);
  }
  for (uint64_t j = 0; j != v46; ++j)
  {
    if ((v27 & 0xC000000000000001) != 0) {
      id v48 = (id)MEMORY[0x1C87744F0](j, v27);
    }
    else {
      id v48 = *(id *)(v27 + 8 * j + 32);
    }
    int v49 = v48;
    objc_msgSend(v48, sel_setHidden_, 0);
  }
  return swift_bridgeObjectRelease();
}

void closure #1 in ParticipantView.configure(with:isOneToOneMode:)(char a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = a2 + 16;
    swift_beginAccess();
    uint64_t v3 = (void *)MEMORY[0x1C8776240](v2);
    if (v3)
    {
      uint64_t v4 = v3;
      objc_msgSend(v3, sel_setHidden_, 1);
    }
  }
}

Swift::Void __swiftcall ParticipantView.updateDebugOverlayLabel(text:)(Swift::String_optional text)
{
  if (text.value._object)
  {
    uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel];
    outlined bridged method (mbgnn) of @objc UILabel.text.setter(text.value._countAndFlagsBits, (uint64_t)text.value._object, v2);
    id v3 = objc_msgSend(v2, sel_superview);

    if (v3) {
      return;
    }
    objc_msgSend(v1, sel_addSubview_, v2);
    uint64_t v5 = sel_setNeedsLayout;
    uint64_t v4 = v1;
  }
  else
  {
    uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel];
    uint64_t v5 = sel_removeFromSuperview;
  }
  [v4 v5];
}

void closure #1 in ParticipantView.setInfoViewIsVisible(_:animated:)(uint64_t a1, char a2)
{
  id v3 = ParticipantView.infoView.getter();
  uint64_t v5 = v3;
  double v4 = 0.0;
  if (a2) {
    double v4 = 1.0;
  }
  objc_msgSend(v3, sel_setAlpha_, v4);
}

void closure #2 in ParticipantView.setInfoViewIsVisible(_:animated:)(char a1, uint64_t a2, char a3)
{
  if (a1)
  {
    uint64_t v5 = ParticipantView.infoView.getter();
    objc_msgSend(v5, sel_alpha);
    double v7 = v6;

    if (v7 < 0.5)
    {
      uint64_t v8 = ParticipantView.infoView.getter();
      objc_msgSend(v8, sel_setHidden_, 1);

      uint64_t v9 = a2 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
      swift_beginAccess();
      if (MEMORY[0x1C8776240](v9))
      {
        uint64_t v10 = *(void *)(v9 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 40))(a2, a3 & 1, ObjectType, v10);
        swift_unknownObjectRelease();
      }
    }
  }
}

id closure #1 in ParticipantView.updateShadowVisibility()(void *a1)
{
  if (ParticipantView.wantsShadow.getter())
  {
    if (one-time initialization token for shadow != -1) {
      swift_once();
    }
    id v2 = objc_msgSend((id)static Colors.ParticipantViews.shadow, sel_CGColor);
    objc_msgSend(a1, sel_setShadowColor_, v2);

    objc_msgSend(a1, sel_setShadowRadius_, 25.0);
    LODWORD(v3) = 1062501089;
  }
  else
  {
    id v4 = objc_msgSend(self, sel_clearColor);
    id v5 = objc_msgSend(v4, sel_CGColor);

    objc_msgSend(a1, sel_setShadowColor_, v5);
    double v3 = 0.0;
  }
  return objc_msgSend(a1, sel_setShadowOpacity_, v3);
}

Swift::Void __swiftcall ParticipantView.showLivePhotosAlert(success:)(Swift::Bool success)
{
  id v2 = objc_msgSend(self, sel_conversationKit);
  if (success)
  {
    unint64_t v9 = 0xE000000000000000;
    unint64_t v3 = 0x80000001C37B5A40;
    unint64_t v4 = 0xD000000000000027;
  }
  else
  {
    unint64_t v4 = 0xD000000000000028;
    unint64_t v9 = 0xE000000000000000;
    unint64_t v3 = 0x80000001C37B5A10;
  }
  v5.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  uint64_t v7 = 0;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, v5, (NSBundle)v2, v6, *(Swift::String *)(&v9 - 1));

  ParticipantView.showAlert(with:)(v8._countAndFlagsBits, (uint64_t)v8._object);
  swift_bridgeObjectRelease();
}

void ParticipantView.showAlert(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideAlertViewTimer;
  Swift::String v6 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideAlertViewTimer);
  if (v6) {
    objc_msgSend(v6, sel_invalidate);
  }
  uint64_t v7 = *(char **)(v2 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView);
  Swift::String v8 = *(void **)&v7[OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel];
  swift_bridgeObjectRetain();
  outlined bridged method (mbgnn) of @objc UILabel.text.setter(a1, a2, v8);
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setHidden_, 0);
  objc_msgSend(v7, sel_setAlpha_, 0.0);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = self;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = partial apply for closure #1 in ParticipantView.showAlert(with:);
  *(void *)(v11 + 24) = v9;
  uint64_t v22 = (void (*)(uint64_t))partial apply for closure #2 in ParticipantView.showAlert(with:);
  uint64_t v23 = v11;
  uint64_t v18 = MEMORY[0x1E4F143A8];
  uint64_t v19 = 1107296256;
  uint64_t v20 = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v21 = &block_descriptor_35_5;
  uint64_t v12 = _Block_copy(&v18);
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_animateWithDuration_animations_completion_, v12, 0, 0.25);
  _Block_release(v12);
  int v13 = self;
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v22 = partial apply for closure #3 in ParticipantView.showAlert(with:);
  uint64_t v23 = v14;
  uint64_t v18 = MEMORY[0x1E4F143A8];
  uint64_t v19 = 1107296256;
  uint64_t v20 = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  uint64_t v21 = &block_descriptor_39_2;
  id v15 = _Block_copy(&v18);
  swift_release();
  id v16 = objc_msgSend(v13, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v15, 3.0);
  swift_release();
  _Block_release(v15);
  id v17 = *(void **)(v2 + v5);
  *(void *)(v2 + v5) = v16;
}

void closure #2 in ParticipantView.init(frame:localParticipant:)(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = a2 + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = MEMORY[0x1C8776240](v4);
  if (v5)
  {
    Swift::String v6 = (void *)v5;
    a3();
  }
}

BOOL closure #1 in ParticipantView.showAlert(with:)(uint64_t a1, double a2)
{
  uint64_t v3 = a1 + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  uint64_t v5 = (void *)v4;
  if (v4)
  {
    id v6 = *(id *)(v4 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView);

    objc_msgSend(v6, sel_setAlpha_, a2);
  }
  return v5 == 0;
}

void closure #3 in ParticipantView.hideAlert()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8776240](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v5 = *(id *)(v3 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView);

    objc_msgSend(v5, sel_setAlpha_, 0.0);
  }
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v2);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    id v8 = *(id *)(v6 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView);

    objc_msgSend(v8, sel_setHidden_, 1);
  }
}

id ParticipantView.__allocating_init(frame:)()
{
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

void ParticipantView.init(frame:)()
{
}

void (*protocol witness for ParticipantTile.isInRoster.modify in conformance ParticipantView(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  double v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster);
  swift_beginAccess();
  *((unsigned char *)v3 + 32) = *v4;
  return protocol witness for ParticipantTile.isInRoster.modify in conformance ParticipantView;
}

void protocol witness for ParticipantTile.isInRoster.modify in conformance ParticipantView(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  ParticipantView.isInRoster.setter(*(unsigned char *)(*(void *)a1 + 32));
  free(v1);
}

uint64_t (*protocol witness for ParticipantTile.customCornerRadius.modify in conformance ParticipantView(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return ParticipantView.customCornerRadius.modify;
}

uint64_t (*protocol witness for ParticipantTile.isExpanded.modify in conformance ParticipantView(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return ParticipantView.isExpanded.modify;
}

Swift::Void __swiftcall ParticipantView.participantViewDidTapToggleFocus()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  OUTLINED_FUNCTION_2();
  if (MEMORY[0x1C8776240](v1))
  {
    swift_getObjectType();
    uint64_t v2 = OUTLINED_FUNCTION_22_57();
    v3(v2);
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall ParticipantView.participantViewDidTapShutter(isEnabled:)(Swift::Bool isEnabled)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  OUTLINED_FUNCTION_2();
  if (!MEMORY[0x1C8776240](v3))
  {
    if (isEnabled) {
      goto LABEL_6;
    }
LABEL_10:
    ParticipantView.showLivePhotosAlert(success:)(0);
    return;
  }
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, ObjectType, v4);
  swift_unknownObjectRelease();
  if (!isEnabled)
  {
    if ((v6 & 1) == 0) {
      return;
    }
    goto LABEL_10;
  }
  if (v6) {
LABEL_6:
  }
    ParticipantView.showLivePhotosAlert(success:)(1);
  if (MEMORY[0x1C8776240](v3))
  {
    uint64_t v7 = *(void *)(v3 + 8);
    uint64_t v8 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v1, v8, v7);
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall ParticipantView.participantViewDidTapRing()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  OUTLINED_FUNCTION_2();
  if (MEMORY[0x1C8776240](v1))
  {
    swift_getObjectType();
    uint64_t v2 = OUTLINED_FUNCTION_22_57();
    v3(v2);
    swift_unknownObjectRelease();
  }
}

uint64_t outlined init with copy of ParticipantViewModel(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = OUTLINED_FUNCTION_89_0();
  v5(v4);
  return a2;
}

uint64_t outlined destroy of ParticipantViewModel(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1C37290A4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ParticipantView.configure(with:isOneToOneMode:)(char a1)
{
  closure #1 in ParticipantView.configure(with:isOneToOneMode:)(a1, v1);
}

uint64_t outlined consume of ParticipantMonogramView.ViewModel?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a3)
  {
    uint64_t v11 = (void *)result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return outlined consume of AnsweringMachineCallStatus?(a10, a11);
  }
  return result;
}

uint64_t sub_1C372917C()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in ParticipantView.setInfoViewIsVisible(_:animated:)()
{
  closure #1 in ParticipantView.setInfoViewIsVisible(_:animated:)(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void partial apply for closure #2 in ParticipantView.setInfoViewIsVisible(_:animated:)(char a1)
{
  closure #2 in ParticipantView.setInfoViewIsVisible(_:animated:)(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void partial apply for closure #2 in ParticipantView.init(frame:localParticipant:)(uint64_t a1)
{
  closure #2 in ParticipantView.init(frame:localParticipant:)(a1, v1, (void (*)(void))ParticipantView.didTapKickMember());
}

void partial apply for closure #3 in ParticipantView.init(frame:localParticipant:)(uint64_t a1)
{
  closure #3 in ParticipantView.init(frame:localParticipant:)(a1, v1);
}

uint64_t sub_1C3729574(char *a1)
{
  return ParticipantView.isInRoster.setter(*a1);
}

uint64_t sub_1C37295A0(char *a1)
{
  return ParticipantView.shouldOverrideShadowHidden.setter(*a1);
}

void sub_1C37295CC(double *a1)
{
}

void sub_1C37295F8(char *a1)
{
}

uint64_t dispatch thunk of ParticipantViewDelegate.participantViewDidTapToggleFocus(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ParticipantViewDelegate.participantViewDidTapShutter(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ParticipantViewDelegate.participantViewDidTapRing(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ParticipantViewDelegate.participantViewDidTapKickMember(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ParticipantViewDelegate.participantView(_:didUpdateSashVisibility:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ParticipantViewDelegate.participantViewShouldShowShutterTappedAlert(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ParticipantViewDelegate.layoutIdiom.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t ObjC metadata update function for ParticipantView()
{
  return type metadata accessor for ParticipantView();
}

uint64_t type metadata accessor for ParticipantView()
{
  uint64_t result = type metadata singleton initialization cache for ParticipantView;
  if (!type metadata singleton initialization cache for ParticipantView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void type metadata completion function for ParticipantView()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID?();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for ParticipantView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ParticipantView);
}

uint64_t dispatch thunk of ParticipantView.__allocating_init(frame:localParticipant:)()
{
  return (*(uint64_t (**)(void))(v0 + 264))();
}

BOOL partial apply for closure #1 in ParticipantView.showAlert(with:)()
{
  return closure #1 in ParticipantView.showAlert(with:)(v0, 1.0);
}

uint64_t sub_1C3729878()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #3 in ParticipantView.showAlert(with:)(uint64_t a1)
{
  closure #2 in ParticipantView.init(frame:localParticipant:)(a1, v1, (void (*)(void))ParticipantView.hideAlert());
}

BOOL partial apply for closure #1 in ParticipantView.hideAlert()()
{
  return closure #1 in ParticipantView.showAlert(with:)(v0, 0.0);
}

void partial apply for closure #3 in ParticipantView.hideAlert()(uint64_t a1)
{
  closure #3 in ParticipantView.hideAlert()(a1, v1);
}

uint64_t ConversationControlsDialogButtonProvider.__allocating_init(controlsManager:context:)(void *a1, char a2)
{
  return ConversationControlsDialogButtonProvider.init(controlsManager:context:)(a1, a2);
}

uint64_t ConversationControlsDialogButtonProvider.init(controlsManager:context:)(void *a1, char a2)
{
  *(void *)(v2 + 136) = a1;
  uint64_t v4 = ControlsButtonProvider.init(context:shape:)(a2, 2);
  id v5 = self;
  id v6 = a1;
  swift_retain();
  ControlsButtonProvider.backgroundStyle.setter(objc_msgSend(v5, sel_secondarySystemFillColor), 0, 64);
  swift_retain();
  Class v7 = ControlsButtonProvider.prominentTitleFont.getter();
  swift_release();
  ControlsButtonProvider.titleFont.setter(v7);
  swift_release();

  return v4;
}

void ConversationControlsDialogButtonProvider.__allocating_init(controlsManager:context:shape:)()
{
}

void ConversationControlsDialogButtonProvider.init(controlsManager:context:shape:)()
{
}

uint64_t ConversationControlsDialogButtonProvider.deinit()
{
  uint64_t v0 = ControlsButtonProvider.deinit();

  return v0;
}

uint64_t ConversationControlsDialogButtonProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConversationControlsDialogButtonProvider()
{
  return self;
}

uint64_t method lookup function for ConversationControlsDialogButtonProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationControlsDialogButtonProvider);
}

uint64_t dispatch thunk of ConversationControlsDialogButtonProvider.__allocating_init(controlsManager:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 480))();
}

UIImage_optional __swiftcall UIImage.init(bundleIdentifier:usingIconCrop:)(Swift::String bundleIdentifier, Swift::Bool usingIconCrop)
{
  object = bundleIdentifier._object;
  uint64_t countAndFlagsBits = bundleIdentifier._countAndFlagsBits;
  id v5 = objc_allocWithZone(MEMORY[0x1E4F223C8]);
  swift_bridgeObjectRetain();
  id v14 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(countAndFlagsBits, (uint64_t)object, 1);

  if (!v14)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.conversationControls);
    swift_bridgeObjectRetain();
    Class v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v7, v8))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_8;
    }
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v30 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C2F90000, v7, v8, "Unable to acquire app record for bundleIdentifier:%s, app is uninstalled.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v10, -1, -1);
    MEMORY[0x1C87760E0](v9, -1, -1);
    goto LABEL_6;
  }
  Class v7 = objc_msgSend(self, sel_imageDescriptorNamed_, *MEMORY[0x1E4F6F298]);
  type metadata accessor for ISIcon();
  id v15 = ISIcon.__allocating_init(bundleIdentifier:)(countAndFlagsBits, (uint64_t)object);
  uint64_t v12 = (CGImage *)objc_msgSend(v15, sel_prepareImageForDescriptor_, v7);

  if (!v12)
  {
LABEL_27:

    goto LABEL_9;
  }
  id v16 = (CGImage *)[(CGImage *)v12 CGImage];

  if (!v16)
  {
LABEL_6:

    goto LABEL_8;
  }
  if (!usingIconCrop)
  {
    uint64_t v12 = (CGImage *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCGImage_, v16);
    goto LABEL_26;
  }
  CGFloat Width = (objc_class *)CGImageGetWidth(v16);
  double v17 = (double)(uint64_t)Width;
  double v18 = (double)(uint64_t)Width / 0.79;
  if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  size_t BitsPerComponent = CGImageGetBitsPerComponent(v16);
  uint64_t v20 = CGImageGetColorSpace(v16);
  if (!v20)
  {
    CGFloat Width = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DC98]);
    uint64_t v20 = Width;
    if (!Width) {
      goto LABEL_35;
    }
  }
  uint32_t BitmapInfo = CGImageGetBitmapInfo(v16);
  uint64_t v22 = CGBitmapContextCreate(0, (uint64_t)v18, (uint64_t)v18, BitsPerComponent, 0, v20, BitmapInfo);

  if (v22)
  {
    CGContextSetInterpolationQuality(v22, kCGInterpolationHigh);
    uint64_t v23 = v22;
    v32.origin.CGFloat x = 0.0;
    v32.origin.CGFloat y = 0.0;
    v32.size.double width = v18;
    v32.size.CGFloat height = v18;
    CGContextRef.draw(_:in:byTiling:)(v16, v32, 0);
  }
  v33.origin.CGFloat x = 0.0;
  v33.origin.CGFloat y = 0.0;
  v33.size.double width = v18;
  v33.size.CGFloat height = v18;
  CGRect v34 = CGRectInset(v33, (v18 - v17) * 0.5, (v18 - v17) * 0.5);
  if (v22)
  {
    CGFloat x = v34.origin.x;
    CGFloat y = v34.origin.y;
    CGFloat v26 = v34.size.width;
    CGFloat height = v34.size.height;
    Image = CGBitmapContextCreateImage(v22);
    uint64_t v12 = Image;
    if (!Image)
    {

      goto LABEL_9;
    }
    v35.origin.CGFloat x = x;
    v35.origin.CGFloat y = y;
    v35.size.double width = v26;
    v35.size.CGFloat height = height;
    CGImageRef v29 = CGImageCreateWithImageInRect(Image, v35);

    if (v29)
    {
      uint64_t v12 = (CGImage *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCGImage_, v29);

      id v16 = v22;
LABEL_26:

      goto LABEL_27;
    }
  }
  else
  {
  }
LABEL_8:
  uint64_t v12 = 0;
LABEL_9:
  CGFloat Width = v12;
LABEL_36:
  result.value.super.Class isa = Width;
  result.is_nil = v11;
  return result;
}

id ISIcon.__allocating_init(bundleIdentifier:)(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v5 = (void *)MEMORY[0x1C87730B0](a1, a2);
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithBundleIdentifier_, v5);

  return v6;
}

id @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(uint64_t a1, uint64_t a2, char a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  id v5 = (void *)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

unint64_t type metadata accessor for ISIcon()
{
  unint64_t result = lazy cache variable for type metadata for ISIcon;
  if (!lazy cache variable for type metadata for ISIcon)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for ISIcon);
  }
  return result;
}

uint64_t specialized OptionSet.union(_:)(unsigned int a1, int a2)
{
  return a2 | a1;
}

uint64_t specialized SetAlgebra<>.init(arrayLiteral:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    LODWORD(v2) = 0;
    uint64_t v3 = (int *)(a1 + 32);
    do
    {
      int v5 = *v3++;
      int v4 = v5;
      if ((v5 & ~v2) == 0) {
        int v4 = 0;
      }
      uint64_t v2 = v4 | v2;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = (uint64_t *)(a1 + 32);
    do
    {
      int v5 = *v3++;
      int v4 = v5;
      if ((v5 & ~v2) == 0) {
        int v4 = 0;
      }
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t specialized OptionSet<>.remove(_:)(uint64_t a1)
{
  uint64_t result = *v1 & a1;
  if (result) {
    *v1 &= ~a1;
  }
  return result;
}

unint64_t specialized OptionSet<>.remove(_:)(unsigned int a1)
{
  int v2 = *v1;
  int v3 = *v1 & a1;
  if (v3)
  {
    int *v1 = v2 & ~a1;
    uint64_t v4 = v2 & a1;
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4 | ((unint64_t)(v3 == 0) << 32);
}

uint64_t PeoplePickerViewModel.__allocating_init(activeConversation:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = 1;
  *(void *)(result + 32) = a1;
  return result;
}

Swift::Bool __swiftcall PeoplePickerViewModel.isWebCapableAvailable(for:)(Swift::String a1)
{
  return PeoplePickerViewModel.isWebCapableAvailable(for:)(a1._countAndFlagsBits, a1._object);
}

uint64_t PeoplePickerViewModel.update(for:style:)(uint64_t a1, char *a2)
{
  char v2 = *a2;
  PeoplePickerViewModel.updateRecipientsState(for:)(a1);
  char v4 = v2;
  return PeoplePickerViewModel.updateExplanationType(for:)(&v4);
}

Swift::Bool __swiftcall PeoplePickerViewModel.isModernAvailable(for:)(Swift::String a1)
{
  return PeoplePickerViewModel.isWebCapableAvailable(for:)(a1._countAndFlagsBits, a1._object);
}

id PeoplePickerViewModel.isWebCapableAvailable(for:)(uint64_t a1, void *a2)
{
  id v4 = objc_msgSend(self, sel_sharedManager);
  uint64_t v5 = MEMORY[0x1C87730B0](a1, a2);
  id v6 = OUTLINED_FUNCTION_1_151(v5);

  return v6;
}

Swift::Bool __swiftcall PeoplePickerViewModel.isMultiwayAvailable(for:)(Swift::String a1)
{
  return PeoplePickerViewModel.isMultiwayAvailable(for:)(a1._countAndFlagsBits, a1._object);
}

Swift::Bool __swiftcall PeoplePickerViewModel.isAudioAvailable(for:)(Swift::String a1)
{
  return PeoplePickerViewModel.isMultiwayAvailable(for:)(a1._countAndFlagsBits, a1._object);
}

Swift::Bool __swiftcall PeoplePickerViewModel.isVideoAvailable(for:)(Swift::String a1)
{
  return PeoplePickerViewModel.isMultiwayAvailable(for:)(a1._countAndFlagsBits, a1._object);
}

BOOL PeoplePickerViewModel.isMultiwayAvailable(for:)(uint64_t a1, void *a2)
{
  id v4 = objc_msgSend(self, sel_sharedManager);
  uint64_t v5 = MEMORY[0x1C87730B0](a1, a2);
  unsigned int v6 = OUTLINED_FUNCTION_1_151(v5);

  return v6 == 1;
}

BOOL PeoplePickerExplanationType.shouldIgnoreEmails.getter(char a1)
{
  return a1 != 1;
}

uint64_t specialized OptionSet<>.update(with:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

unint64_t specialized OptionSet<>.update(with:)(unsigned int a1)
{
  int v2 = *v1;
  *v1 |= a1;
  return v2 & a1 | ((unint64_t)((v2 & a1) == 0) << 32);
}

uint64_t specialized SetAlgebra.subtracting(_:)(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

uint64_t specialized SetAlgebra.subtracting(_:)(int a1, int a2)
{
  return a2 & ~a1;
}

BOOL specialized SetAlgebra.isDisjoint(with:)(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL specialized SetAlgebra.isDisjoint(with:)(int a1, int a2)
{
  return (a2 & a1) == 0;
}

uint64_t protocol witness for OptionSet.init(rawValue:) in conformance PeoplePickerRecipientsState@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = TPNumberPadCharacter.rawValue.getter(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance PeoplePickerRecipientsState@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = TPNumberPadCharacter.rawValue.getter(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t protocol witness for ExpressibleByArrayLiteral.init(arrayLiteral:) in conformance PeoplePickerRecipientsState@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = specialized SetAlgebra<>.init(arrayLiteral:)(a1);
  *a2 = result;
  return result;
}

ConversationKit::PeoplePickerExplanationType_optional __swiftcall PeoplePickerExplanationType.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 4) {
    LOBYTE(rawValue) = 4;
  }
  return (ConversationKit::PeoplePickerExplanationType_optional)rawValue;
}

uint64_t PeoplePickerExplanationType.rawValue.getter(uint64_t result)
{
  return result;
}

ConversationKit::PeoplePickerExplanationType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PeoplePickerExplanationType@<W0>(Swift::Int *a1@<X0>, ConversationKit::PeoplePickerExplanationType_optional *a2@<X8>)
{
  result.value = PeoplePickerExplanationType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PeoplePickerExplanationType@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PeoplePickerExplanationType.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t PeoplePickerViewModel.explanationType.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PeoplePickerViewModel.init(activeConversation:)(uint64_t a1)
{
  *(unsigned char *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 1;
  *(void *)(v1 + 32) = a1;
  return v1;
}

uint64_t PeoplePickerViewModel.deinit()
{
  return v0;
}

uint64_t PeoplePickerViewModel.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t PeoplePickerViewModel.updateRecipientsState(for:)(uint64_t a1)
{
  uint64_t v40 = 1;
  if (*(void *)(a1 + 16) == 1)
  {
    specialized Collection.first.getter(a1);
    if (v3)
    {
      id v4 = (void *)MEMORY[0x1C87730B0]();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v4 = 0;
    }
    id v5 = (id)TUCopyIDSCanonicalAddressForDestinationID();

    if (v5)
    {
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v8 = v7;

      v9._uint64_t countAndFlagsBits = v6;
      v9._object = v8;
      if (PeoplePickerViewModel.isVideoAvailable(for:)(v9))
      {
        Swift::Bool v10 = 1;
      }
      else
      {
        v34._uint64_t countAndFlagsBits = v6;
        v34._object = v8;
        Swift::Bool v10 = PeoplePickerViewModel.isAudioAvailable(for:)(v34);
      }
      specialized closure #1 in PeoplePickerViewModel.updateRecipientsState(for:)(v6, v8, v10, v1, &v40);
      swift_bridgeObjectRelease();
LABEL_39:
      if (one-time initialization token for conversationKit != -1) {
        goto LABEL_43;
      }
      goto LABEL_40;
    }
  }
  uint64_t v11 = a1 + 56;
  uint64_t v12 = 1;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  int64_t v16 = 0;
  int64_t v17 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    unint64_t v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v19 = v18 | (v16 << 6);
LABEL_27:
    uint64_t v23 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v19);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    CGFloat v26 = (void *)MEMORY[0x1C87730B0](v24, v25);
    swift_bridgeObjectRelease();
    id v27 = (id)TUCopyIDSCanonicalAddressForDestinationID();

    if (v27)
    {
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;

      v31._uint64_t countAndFlagsBits = v28;
      v31._object = v30;
      if (PeoplePickerViewModel.isMultiwayAvailable(for:)(v31))
      {
        v32._uint64_t countAndFlagsBits = v28;
        v32._object = v30;
        if (PeoplePickerViewModel.isModernAvailable(for:)(v32))
        {
          v12 |= 2uLL;
        }
        else
        {
          v33._uint64_t countAndFlagsBits = v28;
          v33._object = v30;
          if (PeoplePickerViewModel.isWebCapableAvailable(for:)(v33)) {
            v12 |= 4uLL;
          }
          else {
            v12 |= 8uLL;
          }
        }
      }
      else
      {
        v12 |= 0x10uLL;
      }
      uint64_t v40 = v12;
      swift_bridgeObjectRelease();
    }
  }
  int64_t v20 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v20 >= v17) {
    goto LABEL_36;
  }
  unint64_t v21 = *(void *)(v11 + 8 * v20);
  ++v16;
  if (v21) {
    goto LABEL_26;
  }
  int64_t v16 = v20 + 1;
  if (v20 + 1 >= v17) {
    goto LABEL_36;
  }
  unint64_t v21 = *(void *)(v11 + 8 * v16);
  if (v21) {
    goto LABEL_26;
  }
  int64_t v16 = v20 + 2;
  if (v20 + 2 >= v17) {
    goto LABEL_36;
  }
  unint64_t v21 = *(void *)(v11 + 8 * v16);
  if (v21)
  {
LABEL_26:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
    goto LABEL_27;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v17)
  {
LABEL_36:
    swift_release();
    goto LABEL_39;
  }
  unint64_t v21 = *(void *)(v11 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v17) {
      goto LABEL_36;
    }
    unint64_t v21 = *(void *)(v11 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_26;
    }
  }
LABEL_42:
  __break(1u);
LABEL_43:
  swift_once();
LABEL_40:
  static os_log_type_t.default.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1C3769620;
  uint64_t v36 = String.init<A>(reflecting:)();
  uint64_t v38 = v37;
  *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v35 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v35 + 32) = v36;
  *(void *)(v35 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v38;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 24) = v40;
  return result;
}

uint64_t PeoplePickerViewModel.updateExplanationType(for:)(unsigned char *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 + 24);
  if (!*a1)
  {
    if ((v3 & 8) != 0) {
      char v8 = 1;
    }
    else {
      char v8 = 2;
    }
    if ((v3 & 0x10) != 0) {
      char v7 = v8;
    }
    else {
      char v7 = 0;
    }
    goto LABEL_27;
  }
  id v4 = *(void **)(v1 + 32);
  if (v4)
  {
    id v5 = v4;
    id v6 = objc_msgSend(v5, sel_link);

    if ((v3 & 0x10) == 0 && !v6) {
      goto LABEL_5;
    }
    if ((v3 & 8) != 0)
    {

      if (v6) {
        char v7 = 1;
      }
      else {
        char v7 = 3;
      }
      goto LABEL_27;
    }
    if ((v3 & 4) != 0)
    {

      if (v6) {
        char v7 = 0;
      }
      else {
        char v7 = 3;
      }
      goto LABEL_27;
    }
    if ((v3 & 0x10) != 0)
    {
      Swift::Bool v10 = TUConversation.isGondolaCallingAvailable()();

      if (v10) {
        char v7 = 2;
      }
      else {
        char v7 = 3;
      }
    }
    else
    {
LABEL_5:

      char v7 = 0;
    }
LABEL_27:
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(v2 + 16) = v7;
    return result;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = 0;
  return result;
}

uint64_t protocol witness for PeoplePickerViewModelProtocol.update(for:style:) in conformance PeoplePickerViewModel(uint64_t a1, char *a2)
{
  return PeoplePickerViewModel.update(for:style:)(a1, a2);
}

uint64_t specialized closure #1 in PeoplePickerViewModel.updateRecipientsState(for:)(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t *a5)
{
  if (a3)
  {
    if (PeoplePickerViewModel.isModernAvailable(for:)(*(Swift::String *)&a1))
    {
      swift_beginAccess();
      uint64_t v8 = *a5 | 2;
    }
    else
    {
      v9._uint64_t countAndFlagsBits = a1;
      v9._object = a2;
      if (PeoplePickerViewModel.isWebCapableAvailable(for:)(v9))
      {
        swift_beginAccess();
        uint64_t v8 = *a5 | 4;
      }
      else
      {
        swift_beginAccess();
        uint64_t v8 = *a5 | 8;
      }
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v8 = *a5 | 0x10;
  }
  uint64_t result = swift_beginAccess();
  *a5 = v8;
  return result;
}

Swift::Bool __swiftcall TUConversation.isGondolaCallingAvailable()()
{
  id v1 = objc_msgSend(v0, sel_activeRemoteParticipants);
  type metadata accessor for TUConversationParticipant();
  lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject();
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.contains(where:)(v2);
  LOBYTE(v1) = v3;
  swift_bridgeObjectRelease();
  return (v1 & 1) == 0;
}

unint64_t type metadata accessor for TUConversationParticipant()
{
  unint64_t result = lazy cache variable for type metadata for TUConversationParticipant;
  if (!lazy cache variable for type metadata for TUConversationParticipant)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PeoplePickerExplanationType and conformance PeoplePickerExplanationType()
{
  unint64_t result = lazy protocol witness table cache variable for type PeoplePickerExplanationType and conformance PeoplePickerExplanationType;
  if (!lazy protocol witness table cache variable for type PeoplePickerExplanationType and conformance PeoplePickerExplanationType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PeoplePickerExplanationType and conformance PeoplePickerExplanationType);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PeoplePickerExplanationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C372B14CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PeoplePickerExplanationType()
{
  return &type metadata for PeoplePickerExplanationType;
}

uint64_t dispatch thunk of PeoplePickerViewModelProtocol.update(for:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for PeoplePickerViewModel()
{
  return self;
}

uint64_t method lookup function for PeoplePickerViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PeoplePickerViewModel);
}

uint64_t dispatch thunk of PeoplePickerViewModel.__allocating_init(activeConversation:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void *type metadata accessor for PeoplePickerRecipientsState()
{
  return &unk_1F1EBCFB8;
}

unint64_t lazy protocol witness table accessor for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState()
{
  unint64_t result = lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState;
  if (!lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState;
  if (!lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState;
  if (!lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState;
  if (!lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState);
  }
  return result;
}

uint64_t ConversationRemoteParticipantsStateProvider.__allocating_init(remoteParticipants:)()
{
  uint64_t v0 = swift_allocObject();
  ConversationRemoteParticipantsStateProvider.init(remoteParticipants:)();
  return v0;
}

Swift::Void __swiftcall ConversationRemoteParticipantsStateProvider.onParticipantsChanged(_:)(Swift::OpaquePointer a1)
{
  uint64_t v43 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_62();
  uint64_t v5 = type metadata accessor for Participant(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v41 = (uint64_t)v40 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v40 - v12;
  if (*(void *)(v1 + 32))
  {
    swift_bridgeObjectRetain();
    Array<A>.sorted(byIdentifiers:)();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
    rawValue = a1._rawValue;
    swift_bridgeObjectRetain();
    specialized MutableCollection<>.sort(by:)((uint64_t *)&rawValue);
    uint64_t v15 = (uint64_t)rawValue;
  }
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    v40[1] = v15;
    void v40[2] = v1;
    unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v18 = v15 + v17;
    uint64_t v19 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    uint64_t v20 = MEMORY[0x1E4FBC860];
    id v42 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      outlined init with copy of Participant(v18, (uint64_t)v13, (void (*)(void))type metadata accessor for Participant);
      outlined init with copy of Participant((uint64_t)v13, v2, (void (*)(void))type metadata accessor for Participant.State);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v28 = v2 + *(int *)(v27 + 48);
          outlined consume of Participant.CopresenceInfo?(*(void *)(v2 + *(int *)(v27 + 64)), *(void *)(v2 + *(int *)(v27 + 64) + 8));
          outlined destroy of Participant.MediaInfo(v28);
          type metadata accessor for Date();
          OUTLINED_FUNCTION_0();
          (*(void (**)())(v29 + 8))();
          outlined init with copy of Participant((uint64_t)v13, v41, (void (*)(void))type metadata accessor for Participant);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v30 = (uint64_t)v42;
          }
          else {
            uint64_t v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v42[2] + 1, 1, (uint64_t)v42);
          }
          unint64_t v23 = *(void *)(v30 + 16);
          unint64_t v31 = *(void *)(v30 + 24);
          unint64_t v24 = v23 + 1;
          if (v23 >= v31 >> 1)
          {
            char v35 = OUTLINED_FUNCTION_3_144(v31);
            uint64_t v25 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v35, v36, v37, v38);
            uint64_t v26 = v41;
            id v42 = (void *)v25;
          }
          else
          {
            id v42 = (void *)v30;
            uint64_t v25 = v30;
            uint64_t v26 = v41;
          }
          break;
        case 6u:
          goto LABEL_8;
        default:
          type metadata accessor for Date();
          OUTLINED_FUNCTION_0();
          (*(void (**)())(v21 + 8))();
LABEL_8:
          outlined init with copy of Participant((uint64_t)v13, (uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v20 + 16) + 1, 1, v20);
          }
          unint64_t v23 = *(void *)(v20 + 16);
          unint64_t v22 = *(void *)(v20 + 24);
          unint64_t v24 = v23 + 1;
          if (v23 >= v22 >> 1)
          {
            char v32 = OUTLINED_FUNCTION_3_144(v22);
            uint64_t v25 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v32, v33, v34, v20);
            uint64_t v26 = (uint64_t)v8;
            uint64_t v20 = v25;
          }
          else
          {
            uint64_t v25 = v20;
            uint64_t v26 = (uint64_t)v8;
          }
          break;
      }
      *(void *)(v25 + 16) = v24;
      outlined init with take of Participant(v26, v25 + v17 + v23 * v19);
      _s15ConversationKit11ParticipantVWOhTm_11((uint64_t)v13, (void (*)(void))type metadata accessor for Participant);
      v18 += v19;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease_n();
    uint64_t v39 = v42;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v39 = (void *)MEMORY[0x1E4FBC860];
  }
  rawValue = v39;
  specialized Array.append<A>(contentsOf:)();
  CurrentValueSubject.send(_:)();
  swift_bridgeObjectRelease();
}

uint64_t ConversationRemoteParticipantsStateProvider.onCaptionsUpdated(for:)()
{
  return PassthroughSubject.send(_:)();
}

Swift::Void __swiftcall ConversationRemoteParticipantsStateProvider.onMostActiveParticipantsChanged(_:)(Swift::OpaquePointer a1)
{
  v1[4]._rawValue = a1._rawValue;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v2 = ConversationRemoteParticipantsStateProvider.participants.getter();
  ConversationRemoteParticipantsStateProvider.onParticipantsChanged(_:)((Swift::OpaquePointer)v2);
  swift_bridgeObjectRelease();
}

uint64_t ConversationRemoteParticipantsStateProvider.participants.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

uint64_t ConversationRemoteParticipantsStateProvider.participantsPublisher.getter()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<[Participant], Never>>);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = partial apply for implicit closure #2 in implicit closure #1 in ConversationRemoteParticipantsStateProvider.participantsPublisher.getter;
  *(void *)(v4 + 24) = v0;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<[Participant], Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<[Participant], Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<[Participant], Never>);
  Publisher.removeDuplicates(by:)();
  swift_release();
  swift_release();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<[Participant], Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<[Participant], Never>>);
  uint64_t v5 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return v5;
}

uint64_t ConversationRemoteParticipantsStateProvider.equivalentParticipantsComparator(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v106 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v106);
  uint64_t v5 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v99 = (uint64_t)&v90 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v103 = (char *)&v90 - v9;
  MEMORY[0x1F4188790](v10);
  unint64_t v102 = (char *)&v90 - v11;
  MEMORY[0x1F4188790](v12);
  id v101 = (char *)&v90 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v100 = (uint64_t)&v90 - v15;
  uint64_t v16 = type metadata accessor for Participant(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  unint64_t v22 = (char *)&v90 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v90 - v24;
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Participant));
  MEMORY[0x1F4188790](v105);
  uint64_t v104 = (uint64_t)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27 != *(void *)(a2 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v27)
  {
LABEL_73:
    uint64_t v88 = 1;
    goto LABEL_76;
  }
  uint64_t v96 = a1;
  uint64_t v97 = v25;
  unint64_t v28 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v90 = *(void *)(v17 + 72);
  id v91 = v5;
  double v93 = &v107[12];
  double v94 = &v108[4];
  uint64_t v95 = a2;
  while (1)
  {
    uint64_t v29 = (uint64_t)v97;
    outlined init with copy of Participant(a1 + v28, (uint64_t)v97, (void (*)(void))type metadata accessor for Participant);
    BOOL v92 = v27 == 0;
    uint64_t v30 = a2 + v28;
    uint64_t v31 = v104;
    uint64_t v32 = v104 + *(int *)(v105 + 48);
    outlined init with take of Participant(v29, v104);
    outlined init with copy of Participant(v30, v32, (void (*)(void))type metadata accessor for Participant);
    outlined init with take of Participant(v31, (uint64_t)v22);
    outlined init with take of Participant(v32, (uint64_t)v19);
    static Participant.== infix(_:_:)();
    if ((v33 & 1) == 0) {
      break;
    }
    uint64_t v34 = v100;
    outlined init with copy of Participant((uint64_t)v22, v100, (void (*)(void))type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v36 = (const void *)(v34 + *(int *)(v35 + 48));
      outlined consume of Participant.CopresenceInfo?(*(void *)(v34 + *(int *)(v35 + 64)), *(void *)(v34 + *(int *)(v35 + 64) + 8));
      memcpy(v107, v36, sizeof(v107));
      uint64_t v37 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v34, v37);
      outlined init with copy of Participant.ScreenInfo?((uint64_t)v93, (uint64_t)v108);
      outlined destroy of Participant.MediaInfo((uint64_t)v107);
      uint64_t v38 = (uint64_t)v102;
      uint64_t v39 = (uint64_t)v103;
      uint64_t v40 = (uint64_t)v101;
      if (v108[3] != 1)
      {
        memcpy(v109, v108, 0xD1uLL);
        uint64_t v98 = v109[6];
        outlined destroy of Participant.ScreenInfo((uint64_t)v109);
LABEL_12:
        char v46 = 0;
        goto LABEL_15;
      }
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_11(v34, (void (*)(void))type metadata accessor for Participant.State);
      memset(v108, 0, 24);
      v108[3] = 1;
      bzero(v94, 0xB1uLL);
      uint64_t v38 = (uint64_t)v102;
      uint64_t v39 = (uint64_t)v103;
      uint64_t v40 = (uint64_t)v101;
    }
    outlined destroy of Participant.ScreenInfo?((uint64_t)v108);
    outlined init with copy of Participant((uint64_t)v22, v38, (void (*)(void))type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      id v42 = (const void *)(v38 + *(int *)(v41 + 48));
      outlined consume of Participant.CopresenceInfo?(*(void *)(v38 + *(int *)(v41 + 64)), *(void *)(v38 + *(int *)(v41 + 64) + 8));
      memcpy(v107, v42, sizeof(v107));
      uint64_t v43 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v38, v43);
      uint64_t v44 = v107[2];
      uint64_t v45 = v107[5];
      swift_bridgeObjectRetain();
      outlined destroy of Participant.MediaInfo((uint64_t)v107);
      if (v44)
      {
        uint64_t v98 = v45;
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_11(v38, (void (*)(void))type metadata accessor for Participant.State);
    }
    uint64_t v98 = 0;
    char v46 = 1;
LABEL_15:
    outlined init with copy of Participant((uint64_t)v19, v40, (void (*)(void))type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      id v48 = (const void *)(v40 + *(int *)(v47 + 48));
      outlined consume of Participant.CopresenceInfo?(*(void *)(v40 + *(int *)(v47 + 64)), *(void *)(v40 + *(int *)(v47 + 64) + 8));
      memcpy(v107, v48, sizeof(v107));
      uint64_t v49 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v40, v49);
      outlined init with copy of Participant.ScreenInfo?((uint64_t)v93, (uint64_t)v108);
      outlined destroy of Participant.MediaInfo((uint64_t)v107);
      if (v108[3] != 1)
      {
        memcpy(v109, v108, 0xD1uLL);
        uint64_t v50 = v109[6];
        outlined destroy of Participant.ScreenInfo((uint64_t)v109);
        goto LABEL_22;
      }
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_11(v40, (void (*)(void))type metadata accessor for Participant.State);
      memset(v108, 0, 24);
      v108[3] = 1;
      bzero(v94, 0xB1uLL);
    }
    outlined destroy of Participant.ScreenInfo?((uint64_t)v108);
    outlined init with copy of Participant((uint64_t)v19, v39, (void (*)(void))type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v52 = (const void *)(v39 + *(int *)(v51 + 48));
      outlined consume of Participant.CopresenceInfo?(*(void *)(v39 + *(int *)(v51 + 64)), *(void *)(v39 + *(int *)(v51 + 64) + 8));
      memcpy(v107, v52, sizeof(v107));
      uint64_t v53 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v39, v53);
      uint64_t v54 = v107[2];
      uint64_t v50 = v107[5];
      swift_bridgeObjectRetain();
      outlined destroy of Participant.MediaInfo((uint64_t)v107);
      if (v54)
      {
        swift_bridgeObjectRelease();
LABEL_22:
        int v55 = 0;
        if (v46) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_11(v39, (void (*)(void))type metadata accessor for Participant.State);
    }
    uint64_t v50 = 0;
    int v55 = 1;
    if (v46)
    {
LABEL_29:
      if (!v55) {
        break;
      }
      goto LABEL_30;
    }
LABEL_23:
    if (v98 != v50) {
      LOBYTE(v55) = 1;
    }
    if (v55) {
      break;
    }
LABEL_30:
    uint64_t v56 = v99;
    outlined init with copy of Participant((uint64_t)v22, v99, (void (*)(void))type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      id v58 = (const void *)(v56 + *(int *)(v57 + 48));
      outlined consume of Participant.CopresenceInfo?(*(void *)(v56 + *(int *)(v57 + 64)), *(void *)(v56 + *(int *)(v57 + 64) + 8));
      memcpy(v107, v58, sizeof(v107));
      uint64_t v59 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v56, v59);
      uint64_t v60 = v107[2];
      double v61 = *(double *)&v107[7];
      double v62 = *(double *)&v107[8];
      double v63 = *(double *)&v107[9];
      double v64 = *(double *)&v107[10];
      char v65 = v107[11];
      swift_bridgeObjectRetain();
      outlined destroy of Participant.MediaInfo((uint64_t)v107);
      if (v60)
      {
        swift_bridgeObjectRelease();
        char v66 = 0;
        int v67 = v65 & 1;
        goto LABEL_35;
      }
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_11(v56, (void (*)(void))type metadata accessor for Participant.State);
    }
    int v67 = 0;
    char v66 = 1;
    double v61 = 0.0;
    double v62 = 0.0;
    double v63 = 0.0;
    double v64 = 0.0;
LABEL_35:
    uint64_t v68 = (uint64_t)v91;
    outlined init with copy of Participant((uint64_t)v19, (uint64_t)v91, (void (*)(void))type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      _s15ConversationKit11ParticipantVWOhTm_11(v68, (void (*)(void))type metadata accessor for Participant.State);
LABEL_71:
      if ((v66 & 1) == 0) {
        break;
      }
      goto LABEL_72;
    }
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    id v70 = (const void *)(v68 + *(int *)(v69 + 48));
    outlined consume of Participant.CopresenceInfo?(*(void *)(v68 + *(int *)(v69 + 64)), *(void *)(v68 + *(int *)(v69 + 64) + 8));
    memcpy(v107, v70, sizeof(v107));
    uint64_t v71 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8))(v68, v71);
    uint64_t v72 = v107[2];
    double v74 = *(double *)&v107[7];
    double v73 = *(double *)&v107[8];
    double v75 = *(double *)&v107[9];
    double v76 = *(double *)&v107[10];
    char v77 = v107[11];
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v107);
    if (!v72) {
      goto LABEL_71;
    }
    swift_bridgeObjectRelease();
    if (v66) {
      break;
    }
    double v78 = 1.0;
    if (v67) {
      double v79 = 1.0;
    }
    else {
      double v79 = v62;
    }
    if (v67) {
      double v80 = 1.0;
    }
    else {
      double v80 = v61;
    }
    if (v77) {
      double v81 = 1.0;
    }
    else {
      double v81 = v73;
    }
    if ((v77 & 1) == 0) {
      double v78 = v74;
    }
    if (v80 != v78 || v79 != v81) {
      break;
    }
    double v83 = 1.0;
    if (v67) {
      double v84 = 1.0;
    }
    else {
      double v84 = v64;
    }
    if (v67) {
      double v85 = 1.0;
    }
    else {
      double v85 = v63;
    }
    if (v77) {
      double v86 = 1.0;
    }
    else {
      double v86 = v76;
    }
    if ((v77 & 1) == 0) {
      double v83 = v75;
    }
    if (v85 != v83 || v84 != v86) {
      break;
    }
LABEL_72:
    _s15ConversationKit11ParticipantVWOhTm_11((uint64_t)v19, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_11((uint64_t)v22, (void (*)(void))type metadata accessor for Participant);
    v28 += v90;
    --v27;
    a2 = v95;
    a1 = v96;
    if (!v27) {
      goto LABEL_73;
    }
  }
  _s15ConversationKit11ParticipantVWOhTm_11((uint64_t)v19, (void (*)(void))type metadata accessor for Participant);
  uint64_t v88 = v92;
  _s15ConversationKit11ParticipantVWOhTm_11((uint64_t)v22, (void (*)(void))type metadata accessor for Participant);
LABEL_76:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v88;
}

uint64_t ConversationRemoteParticipantsStateProvider.participantCaptionsUpdatePublisher.getter()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t ConversationRemoteParticipantsStateProvider.stateManager.getter()
{
  swift_beginAccess();
  return MEMORY[0x1C8776240](v0 + 40);
}

uint64_t ConversationRemoteParticipantsStateProvider.stateManager.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 48) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*ConversationRemoteParticipantsStateProvider.stateManager.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  v3[3] = v4;
  v3[4] = v5;
  return ConversationLocalParticipantStateProvider.stateManager.modify;
}

void *ConversationRemoteParticipantsStateProvider.init(remoteParticipants:)()
{
  v0[4] = 0;
  v0[6] = 0;
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<[Participant], Never>);
  swift_allocObject();
  v0[2] = CurrentValueSubject.init(_:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<Participant, Never>);
  swift_allocObject();
  v0[3] = PassthroughSubject.init()();
  return v0;
}

Swift::Void __swiftcall ConversationRemoteParticipantsStateProvider.update(presentationContexts:)(Swift::OpaquePointer presentationContexts)
{
  OUTLINED_FUNCTION_1_152();
  if (MEMORY[0x1C8776240]())
  {
    swift_getObjectType();
    uint64_t v1 = OUTLINED_FUNCTION_4_128();
    v2(v1);
    swift_unknownObjectRelease();
  }
}

uint64_t ConversationRemoteParticipantsStateProvider.userDidSelect(participantID:)()
{
  OUTLINED_FUNCTION_1_152();
  uint64_t result = MEMORY[0x1C8776240](v0);
  if (result)
  {
    swift_getObjectType();
    uint64_t v2 = OUTLINED_FUNCTION_4_128();
    v3(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t ConversationRemoteParticipantsStateProvider.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 40);
  return v0;
}

uint64_t ConversationRemoteParticipantsStateProvider.__deallocating_deinit()
{
  ConversationRemoteParticipantsStateProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ConversationRemoteParticipantsStateProviding.participantsPublisher.getter in conformance ConversationRemoteParticipantsStateProvider()
{
  return ConversationRemoteParticipantsStateProvider.participantsPublisher.getter();
}

uint64_t protocol witness for ConversationRemoteParticipantsStateProviding.participants.getter in conformance ConversationRemoteParticipantsStateProvider()
{
  return ConversationRemoteParticipantsStateProvider.participants.getter();
}

uint64_t protocol witness for ConversationRemoteParticipantsStateProviding.participantCaptionsUpdatePublisher.getter in conformance ConversationRemoteParticipantsStateProvider()
{
  return ConversationRemoteParticipantsStateProvider.participantCaptionsUpdatePublisher.getter();
}

void protocol witness for ConversationRemoteParticipantsStateProviding.update(presentationContexts:) in conformance ConversationRemoteParticipantsStateProvider(Swift::OpaquePointer a1)
{
}

uint64_t protocol witness for ConversationRemoteParticipantsStateProviding.userDidSelect(participantID:) in conformance ConversationRemoteParticipantsStateProvider()
{
  return ConversationRemoteParticipantsStateProvider.userDidSelect(participantID:)();
}

uint64_t sub_1C372CA38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant], @guaranteed [Participant]) -> (@unowned Bool)(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2) & 1;
}

uint64_t dispatch thunk of ConversationRemoteParticipantsStateProviding.participantsPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ConversationRemoteParticipantsStateProviding.participants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConversationRemoteParticipantsStateProviding.participantCaptionsUpdatePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ConversationRemoteParticipantsStateProviding.update(presentationContexts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ConversationRemoteParticipantsStateProviding.userDidSelect(participantID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ConversationRemoteParticipantsStateManaging.update(presentationContexts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ConversationRemoteParticipantsStateManaging.userDidSelect(participantID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for ConversationRemoteParticipantsStateProvider()
{
  return self;
}

uint64_t method lookup function for ConversationRemoteParticipantsStateProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationRemoteParticipantsStateProvider);
}

uint64_t dispatch thunk of ConversationRemoteParticipantsStateProvider.__allocating_init(remoteParticipants:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t outlined destroy of Participant.ScreenInfo?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v24 = a1;
  uint64_t v27 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v27);
  uint64_t v28 = (uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v22 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v26 = a3;
  uint64_t v23 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v30 = v15 * (v26 - 1);
    uint64_t v25 = v15;
    uint64_t v29 = v15 * v26;
    while (2)
    {
      uint64_t v16 = 0;
      uint64_t v17 = v24;
      do
      {
        uint64_t v18 = *a4;
        uint64_t v19 = a4;
        outlined init with copy of Participant(v29 + v16 + *a4, (uint64_t)v14, (void (*)(void))type metadata accessor for Participant);
        outlined init with copy of Participant(v30 + v16 + v18, (uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
        LOBYTE(v18) = MEMORY[0x1C876F0D0](&v14[*(int *)(v27 + 20)], &v10[*(int *)(v27 + 20)]);
        _s15ConversationKit11ParticipantVWOhTm_11((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWOhTm_11((uint64_t)v14, (void (*)(void))type metadata accessor for Participant);
        if ((v18 & 1) == 0) {
          break;
        }
        uint64_t v20 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        uint64_t v21 = v20 + v30 + v16;
        outlined init with take of Participant(v20 + v29 + v16, v28);
        swift_arrayInitWithTakeFrontToBack();
        outlined init with take of Participant(v28, v21);
        v16 -= v25;
        ++v17;
        a4 = v19;
      }
      while (v26 != v17);
      v30 += v25;
      v29 += v25;
      if (++v26 != v23) {
        continue;
      }
      break;
    }
  }
}

ConversationKit::InCallControlsShareLinkCell::ViewModel __swiftcall InCallControlsShareLinkCell.ViewModel.init(isLinkSharingEnabled:gridLayoutStyle:)(Swift::Bool isLinkSharingEnabled, ConversationKit::MultiwayViewController::LayoutStyle gridLayoutStyle)
{
  char v3 = *(unsigned char *)gridLayoutStyle;
  *uint64_t v2 = isLinkSharingEnabled;
  v2[1] = v3;
  result.isLinkSharingEnabled = isLinkSharingEnabled;
  return result;
}

uint64_t InCallControlsShareLinkCell.ViewModel.isLinkSharingEnabled.getter()
{
  return *v0;
}

void InCallControlsShareLinkCell.ViewModel.gridLayoutStyle.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

void InCallControlsShareLinkCell.ViewModel.hash(into:)()
{
  Swift::UInt v1 = v0[1];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
}

BOOL static InCallControlsShareLinkCell.ViewModel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

Swift::Int InCallControlsShareLinkCell.ViewModel.hashValue.getter()
{
  Swift::UInt8 v1 = *v0;
  Swift::UInt v2 = v0[1];
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance InCallControlsShareLinkCell.ViewModel()
{
  Hasher.init(_seed:)();
  Swift::UInt v1 = v0[1];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t closure #1 in variable initialization expression of InCallControlsShareLinkCell.shareLinkButton()
{
  type metadata accessor for InCallControlButton();
  uint64_t v9 = &type metadata for SymbolImageDescribers.DrawerTable;
  uint64_t v10 = &protocol witness table for SymbolImageDescribers.DrawerTable;
  v8[0] = 7;
  id v0 = objc_msgSend(self, sel_conversationKit);
  v11._object = (void *)0xE000000000000000;
  v1._uint64_t countAndFlagsBits = 0x494C5F4552414853;
  v1._object = (void *)0xEA00000000004B4ELL;
  v2.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v11._uint64_t countAndFlagsBits = 0;
  Swift::String v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v11);

  uint64_t v5 = InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(4, (uint64_t)v8, v4._countAndFlagsBits, (uint64_t)v4._object, 0x402C000000000000, 0, 0, 0, 56.0, 256);
  uint64_t v6 = *(void **)(v5 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
  if (v6) {
    objc_msgSend(v6, sel_setNumberOfLines_, 2);
  }
  objc_msgSend(v6, sel_setAdjustsFontSizeToFitWidth_, 1);
  return v5;
}

void InCallControlsShareLinkCell.buttonHeightConstraint.setter(uint64_t a1)
{
  Swift::String_optional v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_buttonHeightConstraint);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_buttonHeightConstraint) = a1;
}

uint64_t key path getter for InCallControlsShareLinkCell.delegate : InCallControlsShareLinkCell@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x88))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for InCallControlsShareLinkCell.delegate : InCallControlsShareLinkCell(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  Swift::String v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x90);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t InCallControlsShareLinkCell.delegate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_delegate;
  swift_beginAccess();
  return MEMORY[0x1C8776240](v1);
}

uint64_t InCallControlsShareLinkCell.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*InCallControlsShareLinkCell.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  Swift::String v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id InCallControlsShareLinkCell.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

void *InCallControlsShareLinkCell.init(frame:)()
{
  OUTLINED_FUNCTION_7();
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton;
  uint64_t v2 = v0;
  *(void *)&v0[v1] = closure #1 in variable initialization expression of InCallControlsShareLinkCell.shareLinkButton();
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_buttonHeightConstraint] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  Swift::String v3 = &v2[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_previousViewModelHash];
  *(void *)Swift::String v3 = 0;
  v3[8] = 1;

  uint64_t v11 = type metadata accessor for InCallControlsShareLinkCell();
  double v4 = OUTLINED_FUNCTION_6_2();
  uint64_t v7 = objc_msgSendSuper2(v5, v6, v4, v2, v11);
  uint64_t v8 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v7) + 0xB8);
  uint64_t v9 = v7;
  v8();

  return v9;
}

uint64_t type metadata accessor for InCallControlsShareLinkCell()
{
  return self;
}

Swift::Void __swiftcall InCallControlsShareLinkCell.configureSubviews()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1F4188790](v2 - 8);
  double v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.listPlainCell()();
  id v5 = objc_msgSend(self, sel_clearColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  uint64_t v6 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v6);
  MEMORY[0x1C8773CE0](v4);
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  UIControl.addAction(for:handler:)(64, (uint64_t)partial apply for closure #1 in InCallControlsShareLinkCell.configureSubviews(), v8);
  swift_release_n();
  if (one-time initialization token for brickButton != -1) {
    swift_once();
  }
  uint64_t v9 = *(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v7) + 0x188);
  uint64_t v10 = swift_bridgeObjectRetain();
  v9(v10);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v11 = OUTLINED_FUNCTION_0_37();
  objc_msgSend(v11, sel_addSubview_, v7);

  id v12 = objc_msgSend(v7, sel_heightAnchor);
  id v13 = objc_msgSend(v12, sel_constraintGreaterThanOrEqualToConstant_, 52.0);

  InCallControlsShareLinkCell.buttonHeightConstraint.setter((uint64_t)v13);
  InCallControlsShareLinkCell.updateConstraintsConstants()();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C376FBD0;
  id v15 = objc_msgSend(v7, sel_leadingAnchor);
  id v16 = OUTLINED_FUNCTION_0_37();
  id v17 = objc_msgSend(v16, sel_leadingAnchor);

  id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(void *)(v14 + 32) = v18;
  uint64_t v19 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_buttonHeightConstraint);
  if (v19)
  {
    uint64_t v20 = self;
    *(void *)(v14 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v19;
    id v21 = v19;
    id v22 = objc_msgSend(v7, sel_centerYAnchor);
    id v23 = OUTLINED_FUNCTION_0_37();
    id v24 = objc_msgSend(v23, sel_centerYAnchor);

    id v25 = OUTLINED_FUNCTION_1_59();
    *(void *)(v14 + 48) = v25;
    id v26 = objc_msgSend(v7, sel_topAnchor);
    id v27 = OUTLINED_FUNCTION_0_37();
    id v28 = objc_msgSend(v27, sel_topAnchor);

    id v29 = OUTLINED_FUNCTION_1_59();
    *(void *)(v14 + 56) = v29;
    id v30 = objc_msgSend(v7, sel_bottomAnchor);
    id v31 = OUTLINED_FUNCTION_0_37();
    id v32 = objc_msgSend(v31, sel_bottomAnchor);

    id v33 = OUTLINED_FUNCTION_1_59();
    *(void *)(v14 + 64) = v33;
    id v34 = objc_msgSend(v7, sel_trailingAnchor);
    id v35 = OUTLINED_FUNCTION_0_37();
    id v36 = objc_msgSend(v35, sel_trailingAnchor);

    id v37 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v36);
    *(void *)(v14 + 72) = v37;
    v39[1] = v14;
    specialized Array._endMutation()();
    type metadata accessor for NSLayoutConstraint();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_activateConstraints_, isa);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C372E788()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void closure #1 in InCallControlsShareLinkCell.configureSubviews()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (char *)MEMORY[0x1C8776240](v2);
  if (v3)
  {
    double v4 = v3;
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v3) + 0x88))())
    {
      uint64_t v6 = v5;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v8 = *(void (**)(char *, id, uint64_t, uint64_t))(v6 + 8);
      id v9 = *(id *)&v4[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton];
      v8(v4, v9, ObjectType, v6);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void partial apply for closure #1 in InCallControlsShareLinkCell.configureSubviews()(uint64_t a1)
{
  closure #1 in InCallControlsShareLinkCell.configureSubviews()(a1, v1);
}

id InCallControlsShareLinkCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsShareLinkCell.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton;
  *(void *)&v0[v1] = closure #1 in variable initialization expression of InCallControlsShareLinkCell.shareLinkButton();
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_buttonHeightConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = &v0[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_previousViewModelHash];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id InCallControlsShareLinkCell.configure(with:delegate:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  double v4 = v3;
  uint64_t v6 = *a1;
  Swift::UInt v7 = a1[1];
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(v7);
  id result = (id)Hasher._finalize()();
  id v9 = (char *)v3 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_previousViewModelHash;
  if ((*((unsigned char *)v3 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_previousViewModelHash + 8) & 1) != 0
    || result != *(id *)v9)
  {
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(v7);
    *(void *)id v9 = Hasher._finalize()();
    v9[8] = 0;
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x90);
    uint64_t v11 = swift_unknownObjectRetain();
    v10(v11, a3);
    id v12 = *(void **)((char *)v3 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton);
    objc_msgSend(*(id *)((char *)v4 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton), sel_setHidden_, 0);
    return objc_msgSend(v12, sel_setEnabled_, v6);
  }
  return result;
}

Swift::Void __swiftcall InCallControlsShareLinkCell.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for InCallControlsShareLinkCell();
  objc_msgSendSuper2(&v11, sel_traitCollectionDidChange_, isa);
  if (isa) {
    Class isa = (Class)[(objc_class *)isa preferredContentSizeCategory];
  }
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (isa)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
    if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_13;
    }
  }
  else
  {
  }
  InCallControlsShareLinkCell.updateConstraintsConstants()();
LABEL_13:
}

void InCallControlsShareLinkCell.updateConstraintsConstants()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_buttonHeightConstraint);
  if (v1)
  {
    uint64_t v2 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton)
                  + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
    id v4 = v1;
    id v3 = objc_msgSend(v2, sel_font);
    if (!v3) {
      id v3 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
    }
    NSLayoutConstraint.setConstant(_:scaledToFont:)(v3, 52.0);
  }
  else
  {
    __break(1u);
  }
}

id InCallControlsShareLinkCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsShareLinkCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t lazy protocol witness table accessor for type InCallControlsShareLinkCell.ViewModel and conformance InCallControlsShareLinkCell.ViewModel()
{
  unint64_t result = lazy protocol witness table cache variable for type InCallControlsShareLinkCell.ViewModel and conformance InCallControlsShareLinkCell.ViewModel;
  if (!lazy protocol witness table cache variable for type InCallControlsShareLinkCell.ViewModel and conformance InCallControlsShareLinkCell.ViewModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsShareLinkCell.ViewModel and conformance InCallControlsShareLinkCell.ViewModel);
  }
  return result;
}

uint64_t dispatch thunk of InCallControlsShareLinkCellDelegate.shareLinkCell(cell:tappedCopyLinkButton:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for InCallControlsShareLinkCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InCallControlsShareLinkCell);
}

uint64_t dispatch thunk of InCallControlsShareLinkCell.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of InCallControlsShareLinkCell.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of InCallControlsShareLinkCell.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of InCallControlsShareLinkCell.configureSubviews()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of InCallControlsShareLinkCell.configure(with:delegate:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t storeEnumTagSinglePayload for InCallControlsShareLinkCell.ViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C372F09CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsShareLinkCell.ViewModel()
{
  return &type metadata for InCallControlsShareLinkCell.ViewModel;
}

uint64_t static ParticipantVideoOverlayView.ViewModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  outlined init with copy of ParticipantVideoOverlayView.ViewModel(a1, (uint64_t)&v106);
  uint64_t v3 = outlined init with copy of ParticipantVideoOverlayView.ViewModel(a2, (uint64_t)&v118);
  switch(v117)
  {
    case 1:
      uint64_t v11 = v110;
      if (v125 != 1)
      {
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v106);
        goto LABEL_35;
      }
      uint64_t v12 = *((void *)&v109 + 1);
      int8x16_t v13 = v121;
      outlined init with take of Notice(&v106, (uint64_t)&v95);
      outlined init with take of Notice((long long *)&v118, (uint64_t)&v85);
      uint64_t v14 = v97;
      uint64_t v15 = *(void *)v98;
      __swift_project_boxed_opaque_existential_1(&v95, v97);
      uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
      uint64_t v18 = v17;
      uint64_t v19 = v88;
      uint64_t v20 = v89;
      __swift_project_boxed_opaque_existential_1(&v85, v88);
      if (v16 == (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20) && v18 == v21)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_53:
          swift_bridgeObjectRelease();
          char v24 = 0;
          goto LABEL_56;
        }
      }
      if (v11)
      {
        if (!v13.i64[1]) {
          goto LABEL_53;
        }
        if (v12 != v13.i64[0] || v11 != v13.i64[1])
        {
          char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_56;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (v13.i64[1])
      {
        goto LABEL_53;
      }
      char v24 = 1;
LABEL_56:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v95);
      return v24 & 1;
    case 2:
      OUTLINED_FUNCTION_12_80(v3, v4, v5, v6, v7, v8, v9, v10, v47, v48, v50, v52, v53, v55, v57, v59, v61, v63, v65,
        v68,
        v69,
        v71,
        v73,
        v74,
        v75,
        v76,
        v78,
        v79,
        v80,
        v81,
        v82,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93,
        v94,
        v95,
        *((uint64_t *)&v95 + 1),
        v96,
        v97,
        *(uint64_t *)v98,
        *(uint64_t *)&v98[8],
        *(uint64_t *)&v98[16],
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        *((uint64_t *)&v106 + 1),
        v107,
        v108,
        v109);
      if (v125 != 2) {
        goto LABEL_32;
      }
      OUTLINED_FUNCTION_11_84();
      char v24 = static SymbolImageDescription.== infix(_:_:)((uint64_t)&v85, (uint64_t)&v95);
      outlined release of SymbolImageDescription((uint64_t)&v95);
      outlined release of SymbolImageDescription((uint64_t)&v85);
      return v24 & 1;
    case 3:
      OUTLINED_FUNCTION_12_80(v3, v4, v5, v6, v7, v8, v9, v10, v47, v48, v50, v52, v53, v55, v57, v59, v61, v63, v65,
        v68,
        v69,
        v71,
        v73,
        v74,
        v75,
        v76,
        v78,
        v79,
        v80,
        v81,
        v82,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93,
        v94,
        v95,
        *((uint64_t *)&v95 + 1),
        v96,
        v97,
        *(uint64_t *)v98,
        *(uint64_t *)&v98[8],
        *(uint64_t *)&v98[16],
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        *((uint64_t *)&v106 + 1),
        v107,
        v108,
        v109);
      uint64_t v25 = v113;
      id v26 = v114;
      if (v125 != 3)
      {

        swift_bridgeObjectRelease();
LABEL_32:
        outlined release of SymbolImageDescription((uint64_t)&v85);
LABEL_35:
        outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)&v118);
        goto LABEL_36;
      }
      OUTLINED_FUNCTION_11_84();
      uint64_t v27 = v112;
      uint64_t v28 = v122.i64[1];
      int8x16_t v29 = v123;
      if ((static SymbolImageDescription.== infix(_:_:)((uint64_t)&v85, (uint64_t)&v95) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      if (!v25)
      {
        if (!v29.i64[0]) {
          goto LABEL_59;
        }
        goto LABEL_47;
      }
      if (!v29.i64[0])
      {
LABEL_47:
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
      if (v27 == v28 && v25 == v29.i64[0])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
      char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0)
      {
LABEL_48:
        outlined release of SymbolImageDescription((uint64_t)&v95);
        outlined release of SymbolImageDescription((uint64_t)&v85);

        goto LABEL_36;
      }
LABEL_59:
      if (v26)
      {
        if (v29.i64[1])
        {
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
          id v44 = (id)v29.i64[1];
          id v45 = v26;
          char v24 = static NSObject.== infix(_:_:)();

          outlined release of SymbolImageDescription((uint64_t)&v95);
          outlined release of SymbolImageDescription((uint64_t)&v85);

          return v24 & 1;
        }
        id v46 = v26;
        outlined release of SymbolImageDescription((uint64_t)&v95);
        outlined release of SymbolImageDescription((uint64_t)&v85);

        goto LABEL_36;
      }
      outlined release of SymbolImageDescription((uint64_t)&v95);
      outlined release of SymbolImageDescription((uint64_t)&v85);
      if (v29.i64[1])
      {

LABEL_36:
        char v24 = 0;
        return v24 & 1;
      }
LABEL_29:
      char v24 = 1;
      return v24 & 1;
    case 4:
      id v32 = (void *)v106;
      uint64_t v34 = v113;
      uint64_t v33 = (uint64_t)v114;
      if (v125 == 4)
      {
        uint64_t v64 = v119.i64[1];
        uint64_t v70 = v120.i64[0];
        uint64_t v72 = v119.i64[0];
        int8x16_t v35 = v121;
        uint64_t v54 = v120.i64[1];
        uint64_t v49 = (void *)v118;
        uint64_t v51 = v122.i64[0];
        __int8 v66 = v122.i8[9];
        __int8 v67 = v122.i8[8];
        uint64_t v36 = (uint64_t)v114;
        uint64_t v60 = v123.i64[1];
        uint64_t v62 = v123.i64[0];
        uint64_t v56 = v124.i64[1];
        uint64_t v58 = v124.i64[0];
        long long v95 = v106;
        uint64_t v96 = v107;
        uint64_t v97 = v108;
        *(_OWORD *)uint64_t v98 = v109;
        *(void *)&v98[16] = v110;
        uint64_t v99 = v111;
        LOWORD(v10ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v112;
        uint64_t v101 = v113;
        uint64_t v102 = (uint64_t)v114;
        uint64_t v103 = v115;
        uint64_t v104 = v116;
        Hasher.init(_seed:)();
        id v77 = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        outlined copy of (title: String, subtitle: String?)?(v34, v36);
        ParticipantMonogramView.ViewModel.hash(into:)((uint64_t)&v85);
        Swift::Int v83 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        outlined consume of AnsweringMachineCallStatus?(v34, v36);
        *(void *)&long long v95 = v49;
        *((void *)&v95 + 1) = v72;
        uint64_t v96 = v64;
        uint64_t v97 = v70;
        *(void *)uint64_t v98 = v54;
        *(int8x16_t *)&v98[8] = v35;
        uint64_t v99 = v51;
        LOBYTE(v10ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v67;
        BYTE1(v10ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v66;
        uint64_t v101 = v62;
        uint64_t v102 = v60;
        uint64_t v103 = v58;
        uint64_t v104 = v56;
        Hasher.init(_seed:)();
        id v37 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        outlined copy of (title: String, subtitle: String?)?(v62, v60);
        ParticipantMonogramView.ViewModel.hash(into:)((uint64_t)&v85);
        Swift::Int v38 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        OUTLINED_FUNCTION_9_97();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        OUTLINED_FUNCTION_9_97();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        outlined consume of AnsweringMachineCallStatus?(v34, v36);
        char v24 = v83 == v38;
        return v24 & 1;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      outlined consume of AnsweringMachineCallStatus?(v34, v33);
      goto LABEL_35;
    case 5:
      uint64_t v39 = (void *)v106;
      if (v125 == 5)
      {
        uint64_t v40 = (void *)v118;
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
        char v24 = static NSObject.== infix(_:_:)();

        return v24 & 1;
      }

      goto LABEL_35;
    case 6:
      if (v125 == 6)
      {
        int8x16_t v41 = vorrq_s8(vorrq_s8(vorrq_s8(v121, v123), vorrq_s8(v122, v124)), vorrq_s8(v119, v120));
        if (!(*(void *)&vorr_s8(*(int8x8_t *)v41.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v41, v41, 8uLL)) | v118)) {
          goto LABEL_29;
        }
      }
      goto LABEL_35;
    default:
      if (!v125) {
        goto LABEL_29;
      }
      goto LABEL_35;
  }
}

id ParticipantVideoOverlayView.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ParticipantVideoOverlayView.configure(with:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_labelView];
  objc_msgSend(v5, sel_setText_, 0);
  uint64_t v6 = outlined init with copy of ParticipantVideoOverlayView.ViewModel(a1, (uint64_t)&v82);
  switch(v93)
  {
    case 1:
      uint64_t v17 = *((void *)&v85 + 1);
      uint64_t v18 = v86;
      uint64_t v19 = outlined init with take of Notice(&v82, (uint64_t)&v69);
      if (v18)
      {
        OUTLINED_FUNCTION_21_5(v19, sel_setHidden_);
        outlined bridged method (mbnn) of @objc UILabel.text.setter(v17, v18, v5);
      }
      else
      {
        OUTLINED_FUNCTION_13_81(v19, sel_setHidden_);
      }
      OUTLINED_FUNCTION_8_94(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView);
      OUTLINED_FUNCTION_1_153(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView);
      uint64_t v43 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      uint64_t v44 = v72;
      uint64_t v45 = v73;
      id v46 = __swift_project_boxed_opaque_existential_1(&v69, v72);
      uint64_t v47 = (void *)specialized static UIImage.image(named:)((uint64_t)v46, v43, v44, v45);
      ParticipantVideoOverlayView.setImage(_:)(v47);

      uint64_t v48 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView];
      OUTLINED_FUNCTION_13_81(v49, (const char *)(v2 + 1176));
      OUTLINED_FUNCTION_1_153(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView);
      v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = 0;
      objc_msgSend(v48, sel_stopAnimating);
      objc_msgSend(v3, sel_setNeedsLayout);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v69);
      break;
    case 2:
      OUTLINED_FUNCTION_4_129(v6, v7, v8, v9, v10, v11, v12, v13, v53, v55, v57, v60, v62, v64, v66, v67, v69, v70, v71,
        v72,
        v73,
        v74,
        v75,
        v76,
        v77,
        v78,
        v79,
        v80,
        v81,
        v82,
        *((uint64_t *)&v82 + 1),
        v83,
        v84,
        v85);
      OUTLINED_FUNCTION_13_81(v20, sel_setHidden_);
      objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView], sel_setHidden_, 0);
      OUTLINED_FUNCTION_2_141(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      id v21 = static UIImage.symbolImage(for:)((uint64_t)&v69);
      ParticipantVideoOverlayView.setImage(_:)(v21);

      id v22 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView];
      OUTLINED_FUNCTION_13_81(v23, sel_setHidden_);
      OUTLINED_FUNCTION_2_141(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView);
      v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = 0;
      objc_msgSend(v22, sel_stopAnimating);
      objc_msgSend(v3, sel_setNeedsLayout);
      goto LABEL_16;
    case 3:
      OUTLINED_FUNCTION_4_129(v6, v7, v8, v9, v10, v11, v12, v13, v53, v55, v57, v60, v62, v64, v66, v67, v69, v70, v71,
        v72,
        v73,
        v74,
        v75,
        v76,
        v77,
        v78,
        v79,
        v80,
        v81,
        v82,
        *((uint64_t *)&v82 + 1),
        v83,
        v84,
        v85);
      uint64_t v26 = v89;
      uint64_t v25 = v90;
      if (v89)
      {
        uint64_t v2 = v88;
        OUTLINED_FUNCTION_21_5(v24, sel_setHidden_);
        outlined bridged method (mbnn) of @objc UILabel.text.setter(v2, v26, v5);
      }
      else
      {
        OUTLINED_FUNCTION_13_81(v24, sel_setHidden_);
      }
      objc_msgSend(v5, sel_setFont_, v25);
      OUTLINED_FUNCTION_8_94(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView);
      OUTLINED_FUNCTION_1_153(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      id v50 = static UIImage.symbolImage(for:)((uint64_t)&v69);
      ParticipantVideoOverlayView.setImage(_:)(v50);

      uint64_t v51 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView];
      OUTLINED_FUNCTION_13_81(v52, (const char *)(v2 + 1176));
      OUTLINED_FUNCTION_1_153(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView);
      v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = 0;
      objc_msgSend(v51, sel_stopAnimating);
      objc_msgSend(v3, sel_setNeedsLayout);

LABEL_16:
      outlined release of SymbolImageDescription((uint64_t)&v69);
      break;
    case 4:
      uint64_t v27 = v82;
      uint64_t v28 = v83;
      uint64_t v63 = v84;
      uint64_t v65 = *((void *)&v82 + 1);
      uint64_t v29 = v86;
      uint64_t v61 = *((void *)&v85 + 1);
      uint64_t v68 = (void *)v82;
      uint64_t v54 = v85;
      uint64_t v56 = v87;
      char v58 = BYTE1(v88);
      char v59 = v88;
      uint64_t v30 = v89;
      uint64_t v31 = (uint64_t)v90;
      uint64_t v32 = v91;
      uint64_t v33 = v92;
      OUTLINED_FUNCTION_13_81(v6, sel_setHidden_);
      id v34 = OUTLINED_FUNCTION_3_145(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView);
      OUTLINED_FUNCTION_21_5((uint64_t)v34, sel_setHidden_);
      uint64_t v69 = v27;
      uint64_t v70 = v65;
      uint64_t v71 = v28;
      uint64_t v72 = v63;
      uint64_t v73 = v54;
      uint64_t v74 = v61;
      uint64_t v75 = v29;
      uint64_t v76 = v56;
      LOBYTE(v77) = v59;
      BYTE1(v77) = v58;
      uint64_t v78 = v30;
      uint64_t v79 = v31;
      uint64_t v80 = v32;
      uint64_t v81 = v33;
      uint64_t v35 = ParticipantMonogramView.configure(with:)((uint64_t)&v69);
      uint64_t v36 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView];
      OUTLINED_FUNCTION_13_81(v35, sel_setHidden_);
      OUTLINED_FUNCTION_3_145(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView);
      v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = 0;
      objc_msgSend(v36, sel_stopAnimating);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      outlined consume of AnsweringMachineCallStatus?(v30, v31);
      break;
    case 5:
      id v37 = (void *)v82;
      OUTLINED_FUNCTION_13_81(v6, sel_setHidden_);
      OUTLINED_FUNCTION_1_153(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView);
      id v38 = OUTLINED_FUNCTION_1_153(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView);
      uint64_t v39 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView];
      OUTLINED_FUNCTION_13_81((uint64_t)v38, sel_setHidden_);
      uint64_t v40 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView];
      objc_msgSend(v40, sel_setHidden_, 0);
      objc_msgSend(v40, sel_setImage_, v37);
      v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = 1;
      objc_msgSend(v39, sel_stopAnimating);
      objc_msgSend(v3, sel_setNeedsLayout);

      break;
    case 6:
      OUTLINED_FUNCTION_13_81(v6, sel_setHidden_);
      OUTLINED_FUNCTION_3_145(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView);
      id v41 = OUTLINED_FUNCTION_3_145(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView);
      id v42 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView];
      OUTLINED_FUNCTION_21_5((uint64_t)v41, sel_setHidden_);
      OUTLINED_FUNCTION_3_145(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView);
      v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = 0;
      objc_msgSend(v42, sel_startAnimating);
      break;
    default:
      char v14 = v82;
      OUTLINED_FUNCTION_13_81(v6, sel_setHidden_);
      OUTLINED_FUNCTION_2_141(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView);
      id v15 = OUTLINED_FUNCTION_2_141(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView);
      uint64_t v16 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView];
      OUTLINED_FUNCTION_13_81((uint64_t)v15, sel_setHidden_);
      OUTLINED_FUNCTION_2_141(OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView);
      v3[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = v14;
      objc_msgSend(v16, sel_stopAnimating);
      break;
  }
}

uint64_t ParticipantVideoOverlayView.imageAndLabelTransform.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer);
  objc_msgSend(v8, sel_transform);
  uint64_t result = static CGAffineTransform.== infix(_:_:)();
  if ((result & 1) == 0)
  {
    v10[0] = v2;
    v10[1] = v3;
    id v10[2] = v4;
    void v10[3] = v5;
    v10[4] = v6;
    v10[5] = v7;
    return (uint64_t)objc_msgSend(v8, sel_setTransform_, v10);
  }
  return result;
}

id ParticipantVideoOverlayView.setAlpha(_:animated:completion:)(char a1, void (*a2)(uint64_t), uint64_t a3, double a4)
{
  uint64_t v5 = v4;
  if (*((unsigned char *)v4 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation) == 1)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v5;
    *(double *)(v10 + 24) = a4;
    if (a1)
    {
      uint64_t v11 = one-time initialization token for shared;
      id v12 = v5;
      if (v11 != -1) {
        swift_once();
      }
      if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 576))() & 1) == 0)
      {
        uint64_t v13 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = v13;
        *(void *)(v14 + 24) = a2;
        *(void *)(v14 + 32) = a3;
        *(double *)(v14 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a4;
        if (a4 <= 0.0) {
          uint64_t v15 = 0x20000;
        }
        else {
          uint64_t v15 = 0x10000;
        }
        uint64_t v16 = self;
        uint64_t v26 = partial apply for closure #1 in ParticipantVideoOverlayView.setAlpha(_:animated:completion:);
        uint64_t v27 = v10;
        uint64_t v22 = MEMORY[0x1E4F143A8];
        uint64_t v23 = 1107296256;
        uint64_t v24 = thunk for @escaping @callee_guaranteed () -> ();
        uint64_t v25 = &block_descriptor_121;
        uint64_t v17 = _Block_copy(&v22);
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)a2);
        swift_retain();
        swift_release();
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = partial apply for closure #2 in ParticipantVideoOverlayView.setAlpha(_:animated:completion:);
        *(void *)(v18 + 24) = v14;
        uint64_t v26 = partial apply for thunk for @escaping @callee_guaranteed () -> ();
        uint64_t v27 = v18;
        uint64_t v22 = MEMORY[0x1E4F143A8];
        uint64_t v23 = 1107296256;
        uint64_t v24 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
        uint64_t v25 = &block_descriptor_12_7;
        uint64_t v19 = _Block_copy(&v22);
        swift_retain();
        swift_release();
        objc_msgSend(v16, sel_animateWithDuration_delay_options_animations_completion_, v15, v17, v19, 0.1, 0.0);
        _Block_release(v19);
        _Block_release(v17);
        swift_release();
        return (id)swift_release();
      }
    }
    else
    {
      id v21 = v5;
    }
    objc_msgSend(v5, sel_setAlpha_, a4);
    if (a2) {
      a2(1);
    }
    return (id)swift_release();
  }
  else
  {
    id result = objc_msgSend(v4, sel_setAlpha_, 1.0);
    if (a2) {
      return (id)((uint64_t (*)(uint64_t))a2)(1);
    }
  }
  return result;
}

id ParticipantVideoOverlayView.isInRoster.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return ParticipantVideoOverlayView.isInRoster.didset();
}

uint64_t ParticipantVideoOverlayView.WantsAlphaAnimation.BOOLValue.getter(char a1)
{
  return a1 & 1;
}

BOOL static ParticipantVideoOverlayView.WantsAlphaAnimation.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void ParticipantVideoOverlayView.WantsAlphaAnimation.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int ParticipantVideoOverlayView.WantsAlphaAnimation.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ParticipantVideoOverlayView.WantsAlphaAnimation(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ParticipantVideoOverlayView.WantsAlphaAnimation.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ParticipantVideoOverlayView.WantsAlphaAnimation()
{
  return ParticipantVideoOverlayView.WantsAlphaAnimation.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ParticipantVideoOverlayView.WantsAlphaAnimation(uint64_t a1)
{
  ParticipantVideoOverlayView.WantsAlphaAnimation.hash(into:)(a1, *v1);
}

double ParticipantVideoOverlayView.imageAndLabelTransform.getter@<D0>(_OWORD *a1@<X8>)
{
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer), sel_transform);
  double result = *(double *)&v4;
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  return result;
}

double key path getter for ParticipantVideoOverlayView.imageAndLabelTransform : ParticipantVideoOverlayView@<D0>(_OWORD *a1@<X8>)
{
  ParticipantVideoOverlayView.imageAndLabelTransform.getter(v4);
  long long v2 = v4[1];
  *a1 = v4[0];
  a1[1] = v2;
  double result = *(double *)&v5;
  a1[2] = v5;
  return result;
}

uint64_t key path setter for ParticipantVideoOverlayView.imageAndLabelTransform : ParticipantVideoOverlayView(_OWORD *a1)
{
  long long v1 = a1[1];
  v3[0] = *a1;
  v3[1] = v1;
  v3[2] = a1[2];
  return ParticipantVideoOverlayView.imageAndLabelTransform.setter((uint64_t *)v3);
}

void (*ParticipantVideoOverlayView.imageAndLabelTransform.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x98uLL);
  *a1 = v3;
  v3[18] = v1;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer), sel_transform);
  *((_OWORD *)v3 + 6) = v5;
  *((_OWORD *)v3 + 7) = v6;
  *((_OWORD *)v3 + 8) = v7;
  return ParticipantVideoOverlayView.imageAndLabelTransform.modify;
}

void ParticipantVideoOverlayView.imageAndLabelTransform.modify(uint64_t *a1, char a2)
{
  long long v2 = (_OWORD *)*a1;
  if (a2) {
    uint64_t v3 = *a1;
  }
  else {
    uint64_t v3 = *a1 + 48;
  }
  long long v4 = v2[7];
  *(_OWORD *)uint64_t v3 = v2[6];
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v2[8];
  ParticipantVideoOverlayView.imageAndLabelTransform.setter((uint64_t *)v3);
  free(v2);
}

uint64_t ParticipantVideoOverlayView.isInRoster.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster);
  swift_beginAccess();
  return *v1;
}

uint64_t key path getter for ParticipantVideoOverlayView.isInRoster : ParticipantVideoOverlayView@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

id ParticipantVideoOverlayView.isInRoster.didset()
{
  uint64_t v1 = (char *)(v0 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster);
  swift_beginAccess();
  return ParticipantMonogramView.isInRoster.setter(*v1);
}

id (*ParticipantVideoOverlayView.isInRoster.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return ParticipantVideoOverlayView.isInRoster.modify;
}

id ParticipantVideoOverlayView.isInRoster.modify(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return ParticipantVideoOverlayView.isInRoster.didset();
  }
  return result;
}

char *ParticipantVideoOverlayView.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_visualEffectView;
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1F00]);
  long long v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, sel_init);
  uint64_t v5 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer;
  *(void *)&v4[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
  uint64_t v6 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView;
  *(void *)&v4[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  uint64_t v7 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_labelView;
  *(void *)&v4[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  *(void *)&v4[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewWidthConstraint] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewHeightConstraint] = 0;
  uint64_t v8 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView;
  LOBYTE(v74[0]) = 1;
  id v9 = objc_allocWithZone((Class)type metadata accessor for ParticipantMonogramView());
  *(void *)&v4[v8] = ParticipantMonogramView.init(colorStyle:)((unsigned __int8 *)v74);
  uint64_t v10 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIActivityIndicatorView);
  OUTLINED_FUNCTION_6_119(v11);
  *(void *)&v4[v10] = v12;
  uint64_t v13 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView;
  *(void *)&v4[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  v4[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = 0;
  v4[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster] = 0;

  v75.receiver = v4;
  v75.super_class = ObjectType;
  uint64_t v14 = (char *)objc_msgSendSuper2(&v75, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v15 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_visualEffectView;
  uint64_t v16 = *(void **)&v14[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_visualEffectView];
  uint64_t v17 = v14;
  id v18 = v16;
  UIVisualEffectView.applyEffect(_:)(ConversationKit_PlatformEffectViewStyle_light);

  uint64_t v19 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView;
  uint64_t v20 = one-time initialization token for overlayContent;
  id v21 = *(id *)&v17[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView];
  if (v20 != -1) {
    swift_once();
  }
  objc_msgSend(v21, sel_setTintColor_, static Colors.ParticipantViews.overlayContent);

  objc_msgSend(*(id *)&v17[v19], sel_setContentMode_, 1);
  uint64_t v70 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView;
  uint64_t v22 = *(void **)&v17[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView];
  uint64_t v23 = self;
  id v24 = v22;
  id v25 = objc_msgSend(v23, sel_whiteColor);
  objc_msgSend(v24, sel_setColor_, v25);

  objc_msgSend(v17, sel_addSubview_, *(void *)&v17[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView]);
  uint64_t v72 = v15;
  uint64_t v73 = v14;
  uint64_t v26 = *(void **)&v14[v15];
  objc_msgSend(v17, sel_addSubview_, v26);
  uint64_t v27 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer;
  uint64_t v28 = *(void **)&v17[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer];
  objc_msgSend(v28, sel_addArrangedSubview_, *(void *)&v17[v19]);
  uint64_t v29 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_labelView;
  objc_msgSend(v28, sel_addArrangedSubview_, *(void *)&v17[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_labelView]);
  id v30 = objc_msgSend(v26, sel_contentView);
  objc_msgSend(v30, sel_addSubview_, v28);

  uint64_t v31 = *(void **)&v17[v27];
  objc_msgSend(v31, sel_setAxis_, 1);
  objc_msgSend(v31, sel_setSpacing_, 3.0);
  objc_msgSend(v31, sel_setAlignment_, 3);
  objc_msgSend(v31, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(*(id *)&v17[v19], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(*(id *)&v17[v29], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v32 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C3769F40;
  id v34 = objc_msgSend(v31, sel_centerYAnchor);
  id v35 = objc_msgSend(v17, sel_centerYAnchor);
  id v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

  *(void *)(v33 + 32) = v36;
  id v37 = objc_msgSend(*(id *)&v17[v27], sel_centerXAnchor);
  id v38 = objc_msgSend(v17, sel_centerXAnchor);
  id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

  *(void *)(v33 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v39;
  id v40 = objc_msgSend(*(id *)&v17[v29], sel_widthAnchor);
  id v41 = objc_msgSend(v17, sel_widthAnchor);
  id v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v41, -20.0);

  *(void *)(v33 + 48) = v42;
  v74[0] = v33;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_activateConstraints_, isa);

  id v44 = objc_msgSend(*(id *)&v17[v19], sel_widthAnchor);
  id v45 = objc_msgSend(v44, sel_constraintEqualToConstant_, 0.0);

  uint64_t v46 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewWidthConstraint;
  uint64_t v47 = *(void **)&v17[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewWidthConstraint];
  *(void *)&v17[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewWidthConstraint] = v45;

  uint64_t v48 = *(void **)&v17[v46];
  if (v48) {
    objc_msgSend(v48, sel_setActive_, 1, v70);
  }
  id v49 = objc_msgSend(*(id *)&v17[v19], sel_heightAnchor, v70);
  id v50 = objc_msgSend(v49, sel_constraintEqualToConstant_, 0.0);

  uint64_t v51 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewHeightConstraint;
  uint64_t v52 = *(void **)&v17[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewHeightConstraint];
  *(void *)&v17[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewHeightConstraint] = v50;

  uint64_t v53 = *(void **)&v17[v51];
  if (v53) {
    objc_msgSend(v53, sel_setActive_, 1);
  }
  uint64_t v54 = *(void **)&v17[v29];
  objc_msgSend(v54, sel_setNumberOfLines_, 0);
  objc_msgSend(v54, sel_setTextAlignment_, 1);
  objc_msgSend(v54, sel_setTextColor_, static Colors.ParticipantViews.overlayContent);
  objc_msgSend(v54, sel_setLineBreakMode_, 0);
  id v55 = objc_msgSend(v54, sel_layer);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CAFilter);
  uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v58 = CAFilter.__allocating_init(type:)(v56, v57);
  objc_msgSend(v55, sel_setCompositingFilter_, v58);

  char v59 = *(void **)&v17[v29];
  OUTLINED_FUNCTION_13_81(v60, sel_setAdjustsFontSizeToFitWidth_);
  objc_msgSend(v59, sel_setMinimumScaleFactor_, 0.8);
  id v61 = objc_msgSend(*(id *)&v73[v72], sel_contentView);
  uint64_t v62 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView;
  objc_msgSend(v61, sel_addSubview_, *(void *)&v17[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView]);

  uint64_t v63 = *(void **)&v17[v62];
  OUTLINED_FUNCTION_21_5(v64, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  uint64_t v65 = &v17[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster];
  swift_beginAccess();
  LOBYTE(v65) = *v65;
  id v66 = v63;
  ParticipantMonogramView.isInRoster.setter((char)v65);

  id v67 = objc_msgSend(*(id *)&v73[v72], sel_contentView);
  id v68 = *(id *)&v17[v71];
  objc_msgSend(v67, sel_addSubview_, v68);

  return v17;
}

id ParticipantVideoOverlayView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantVideoOverlayView.init(coder:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_visualEffectView;
  *(void *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer;
  *(void *)&v1[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView;
  *(void *)&v1[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  uint64_t v5 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_labelView;
  *(void *)&v1[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewWidthConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewHeightConstraint] = 0;
  uint64_t v6 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView;
  unsigned __int8 v12 = 1;
  id v7 = objc_allocWithZone((Class)type metadata accessor for ParticipantMonogramView());
  *(void *)&v1[v6] = ParticipantMonogramView.init(colorStyle:)(&v12);
  uint64_t v8 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIActivityIndicatorView);
  OUTLINED_FUNCTION_6_119(v9);
  *(void *)&v1[v8] = v10;
  uint64_t v11 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView;
  *(void *)&v1[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster] = 0;

  OUTLINED_FUNCTION_5_121();
  __break(1u);
}

id ParticipantVideoOverlayView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantVideoOverlayView.init(frame:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_visualEffectView;
  *(void *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer;
  *(void *)&v1[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView;
  *(void *)&v1[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  uint64_t v5 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_labelView;
  *(void *)&v1[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewWidthConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewHeightConstraint] = 0;
  uint64_t v6 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView;
  unsigned __int8 v12 = 1;
  id v7 = objc_allocWithZone((Class)type metadata accessor for ParticipantMonogramView());
  *(void *)&v1[v6] = ParticipantMonogramView.init(colorStyle:)(&v12);
  uint64_t v8 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIActivityIndicatorView);
  OUTLINED_FUNCTION_6_119(v9);
  *(void *)&v1[v8] = v10;
  uint64_t v11 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView;
  *(void *)&v1[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster] = 0;

  OUTLINED_FUNCTION_5_121();
  __break(1u);
}

Swift::Void __swiftcall ParticipantVideoOverlayView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  ParticipantVideoOverlayView._layout()();
}

id ParticipantVideoOverlayView._layout()()
{
  objc_msgSend(v0, sel_bounds);
  id result = (id)CGRectIsInfinite(v13);
  if ((result & 1) == 0)
  {
    objc_msgSend(v0, sel_bounds);
    id result = (id)CGRectIsEmpty(v14);
    if ((result & 1) == 0)
    {
      objc_msgSend(v0, sel_bounds);
      double v3 = v2;
      double v5 = v4;
      uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView];
      id v7 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView];
      id v8 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_visualEffectView];
      id v9 = v6;
      id v10 = v7;
      objc_msgSend(v8, sel_setFrame_, 0.0, 0.0, v3, v5);
      objc_msgSend(v9, sel_setFrame_, 0.0, 0.0, v3, v5);
      objc_msgSend(v10, sel_setFrame_, 0.0, 0.0, v3, v5);

      uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView];
      return objc_msgSend(v11, sel_setFrame_, 0.0, 0.0, v3, v5);
    }
  }
  return result;
}

void ParticipantVideoOverlayView.setImage(_:)(void *a1)
{
  if (a1)
  {
    id v3 = objc_msgSend(self, sel_configurationWithTextStyle_, *MEMORY[0x1E4FB2988]);
    id v12 = objc_msgSend(a1, sel_imageByApplyingSymbolConfiguration_, v3);

    id v4 = v12;
  }
  else
  {
    id v4 = 0;
  }
  id v13 = v4;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView), sel_setImage_);
  double v5 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewWidthConstraint);
  if (v5)
  {
    id v6 = v5;
    if (v13) {
      objc_msgSend(v13, sel_size);
    }
    else {
      double v7 = 0.0;
    }
    objc_msgSend(v6, sel_setConstant_, v7);
  }
  id v8 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewHeightConstraint);
  if (v8)
  {
    id v9 = v8;
    if (v13)
    {
      objc_msgSend(v13, sel_size);
      double v11 = v10;
    }
    else
    {
      double v11 = 0.0;
    }
    objc_msgSend(v9, sel_setConstant_, v11);
  }
}

void closure #2 in ParticipantVideoOverlayView.setAlpha(_:animated:completion:)(uint64_t a1, void (*a2)(BOOL), double a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  id v6 = (void *)MEMORY[0x1C8776240](v5);
  if (v6)
  {
    double v7 = v6;
    if (a2)
    {
      objc_msgSend(v6, sel_alpha);
      a2(v8 == a3);
    }
  }
}

id ParticipantVideoOverlayView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ParticipantVideoOverlayView.ViewModel.hash(into:)(uint64_t a1)
{
  uint64_t v3 = outlined init with copy of ParticipantVideoOverlayView.ViewModel(v1, (uint64_t)&v34);
  switch(v45)
  {
    case 1:
      uint64_t v11 = v38;
      outlined init with take of Notice(&v34, (uint64_t)&v22);
      uint64_t v12 = v24;
      uint64_t v13 = v25;
      __swift_project_boxed_opaque_existential_1(&v22, v24);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      if (v11)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
      return;
    case 2:
      OUTLINED_FUNCTION_10_89(v3, v4, v5, v6, v7, v8, v9, v10, v19, v21, v22, *((uint64_t *)&v22 + 1), v23, v24, v25, *((uint64_t *)&v25 + 1), v26, v27, v28,
        v29,
        v30,
        v31,
        v32,
        v33,
        v34,
        *((uint64_t *)&v34 + 1),
        v35,
        v36,
        v37);
      SymbolImageDescription.hash(into:)();
      goto LABEL_15;
    case 3:
      OUTLINED_FUNCTION_10_89(v3, v4, v5, v6, v7, v8, v9, v10, v19, v21, v22, *((uint64_t *)&v22 + 1), v23, v24, v25, *((uint64_t *)&v25 + 1), v26, v27, v28,
        v29,
        v30,
        v31,
        v32,
        v33,
        v34,
        *((uint64_t *)&v34 + 1),
        v35,
        v36,
        v37);
      uint64_t v14 = v41;
      uint64_t v15 = (void *)v42;
      SymbolImageDescription.hash(into:)();
      if (v14)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease_n();
        if (v15) {
          goto LABEL_7;
        }
LABEL_14:
        Hasher._combine(_:)(0);
LABEL_15:
        outlined release of SymbolImageDescription((uint64_t)&v22);
        return;
      }
      Hasher._combine(_:)(0);
      if (!v15) {
        goto LABEL_14;
      }
LABEL_7:
      Hasher._combine(_:)(1u);
      id v16 = v15;
      NSObject.hash(into:)();

      outlined release of SymbolImageDescription((uint64_t)&v22);
LABEL_10:

      return;
    case 4:
      uint64_t v17 = v41;
      uint64_t v18 = v42;
      uint64_t v20 = (void *)v34;
      long long v22 = v34;
      uint64_t v23 = v35;
      uint64_t v24 = v36;
      long long v25 = v37;
      uint64_t v26 = v38;
      uint64_t v27 = v39;
      LOWORD(v28) = v40;
      uint64_t v29 = v41;
      uint64_t v30 = v42;
      uint64_t v31 = v43;
      uint64_t v32 = v44;
      ParticipantMonogramView.ViewModel.hash(into:)(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      outlined consume of AnsweringMachineCallStatus?(v17, v18);
      return;
    case 5:
      id v16 = (id)v34;
      NSObject.hash(into:)();
      goto LABEL_10;
    default:
      return;
  }
}

Swift::Int ParticipantVideoOverlayView.ViewModel.hashValue.getter()
{
  Hasher.init(_seed:)();
  ParticipantVideoOverlayView.ViewModel.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ParticipantVideoOverlayView.ViewModel()
{
  Hasher.init(_seed:)();
  ParticipantVideoOverlayView.ViewModel.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_1C3731AB4()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in ParticipantVideoOverlayView.setAlpha(_:animated:completion:)()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, *(double *)(v0 + 24));
}

uint64_t sub_1C3731B00()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C3731B38()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

void partial apply for closure #2 in ParticipantVideoOverlayView.setAlpha(_:animated:completion:)()
{
  closure #2 in ParticipantVideoOverlayView.setAlpha(_:animated:completion:)(*(void *)(v0 + 16), *(void (**)(BOOL))(v0 + 24), *(double *)(v0 + 40));
}

uint64_t sub_1C3731B90()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type ParticipantVideoOverlayView.WantsAlphaAnimation and conformance ParticipantVideoOverlayView.WantsAlphaAnimation()
{
  unint64_t result = lazy protocol witness table cache variable for type ParticipantVideoOverlayView.WantsAlphaAnimation and conformance ParticipantVideoOverlayView.WantsAlphaAnimation;
  if (!lazy protocol witness table cache variable for type ParticipantVideoOverlayView.WantsAlphaAnimation and conformance ParticipantVideoOverlayView.WantsAlphaAnimation)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantVideoOverlayView.WantsAlphaAnimation and conformance ParticipantVideoOverlayView.WantsAlphaAnimation);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ParticipantVideoOverlayView.ViewModel and conformance ParticipantVideoOverlayView.ViewModel()
{
  unint64_t result = lazy protocol witness table cache variable for type ParticipantVideoOverlayView.ViewModel and conformance ParticipantVideoOverlayView.ViewModel;
  if (!lazy protocol witness table cache variable for type ParticipantVideoOverlayView.ViewModel and conformance ParticipantVideoOverlayView.ViewModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantVideoOverlayView.ViewModel and conformance ParticipantVideoOverlayView.ViewModel);
  }
  return result;
}

id sub_1C3731C74(char *a1)
{
  return ParticipantVideoOverlayView.isInRoster.setter(*a1);
}

uint64_t type metadata accessor for ParticipantVideoOverlayView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ParticipantVideoOverlayView.WantsAlphaAnimation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3731D8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticipantVideoOverlayView.WantsAlphaAnimation()
{
  return &type metadata for ParticipantVideoOverlayView.WantsAlphaAnimation;
}

void destroy for ParticipantVideoOverlayView.ViewModel(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 104);
  if (v2 >= 6) {
    unsigned int v2 = *(_DWORD *)a1 + 6;
  }
  switch(v2)
  {
    case 1u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      goto LABEL_9;
    case 2u:
      swift_bridgeObjectRelease();

      id v3 = *(id *)(a1 + 56);
      goto LABEL_14;
    case 3u:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      id v3 = *(id *)(a1 + 80);
      goto LABEL_14;
    case 4u:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80))
      {
        swift_bridgeObjectRelease();
LABEL_9:
        swift_bridgeObjectRelease();
      }
      return;
    case 5u:
      id v3 = *(id *)a1;
LABEL_14:

      break;
    default:
      return;
  }
}

char *initializeWithCopy for ParticipantVideoOverlayView.ViewModel(char *__dst, unsigned __int8 *__src)
{
  unsigned int v4 = __src[104];
  if (v4 >= 6) {
    unsigned int v4 = *(_DWORD *)__src + 6;
  }
  switch(v4)
  {
    case 0u:
      *__dst = *__src;
      __dst[104] = 0;
      break;
    case 1u:
      long long v5 = *(_OWORD *)(__src + 24);
      *(_OWORD *)(__dst + 24) = v5;
      (**(void (***)(char *, unsigned __int8 *))(v5 - 8))(__dst, __src);
      uint64_t v6 = *((void *)__src + 6);
      *((void *)__dst + 5) = *((void *)__src + 5);
      *((void *)__dst + 6) = v6;
      __dst[104] = 1;
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v7 = *((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = v7;
      uint64_t v8 = (void *)*((void *)__src + 3);
      *((void *)__dst + 2) = *((void *)__src + 2);
      *((void *)__dst + 3) = v8;
      *((_WORD *)__dst + 16) = *((_WORD *)__src + 16);
      *((void *)__dst + 5) = *((void *)__src + 5);
      __dst[48] = __src[48];
      uint64_t v9 = (void *)*((void *)__src + 7);
      *((void *)__dst + 7) = v9;
      __dst[104] = 2;
      swift_bridgeObjectRetain();
      id v10 = v8;
      goto LABEL_9;
    case 3u:
      uint64_t v11 = *((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = v11;
      uint64_t v12 = (void *)*((void *)__src + 3);
      *((void *)__dst + 2) = *((void *)__src + 2);
      *((void *)__dst + 3) = v12;
      *((_WORD *)__dst + 16) = *((_WORD *)__src + 16);
      *((void *)__dst + 5) = *((void *)__src + 5);
      __dst[48] = __src[48];
      uint64_t v14 = (void *)*((void *)__src + 7);
      uint64_t v13 = *((void *)__src + 8);
      *((void *)__dst + 7) = v14;
      *((void *)__dst + 8) = v13;
      uint64_t v9 = (void *)*((void *)__src + 10);
      *((void *)__dst + 9) = *((void *)__src + 9);
      *((void *)__dst + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v9;
      __dst[104] = 3;
      swift_bridgeObjectRetain();
      id v15 = v12;
      id v16 = v14;
      swift_bridgeObjectRetain();
LABEL_9:
      id v17 = v9;
      break;
    case 4u:
      uint64_t v18 = *(void **)__src;
      uint64_t v19 = *((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = v19;
      uint64_t v20 = *((void *)__src + 3);
      *((void *)__dst + 2) = *((void *)__src + 2);
      *((void *)__dst + 3) = v20;
      uint64_t v21 = *((void *)__src + 5);
      *((void *)__dst + 4) = *((void *)__src + 4);
      *((void *)__dst + 5) = v21;
      uint64_t v22 = *((void *)__src + 7);
      *((void *)__dst + 6) = *((void *)__src + 6);
      *((void *)__dst + 7) = v22;
      __dst[64] = __src[64];
      __dst[65] = __src[65];
      uint64_t v23 = *((void *)__src + 10);
      id v24 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v23)
      {
        *((void *)__dst + 9) = *((void *)__src + 9);
        *((void *)__dst + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v23;
        uint64_t v25 = *((void *)__src + 11);
        uint64_t v26 = *((void *)__src + 12);
        *((void *)__dst + 11) = v25;
        *((void *)__dst + 12) = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v29 = *(_OWORD *)(__src + 88);
        *(_OWORD *)(__dst + 72) = *(_OWORD *)(__src + 72);
        *(_OWORD *)(__dst + 88) = v29;
      }
      __dst[104] = 4;
      break;
    case 5u:
      uint64_t v27 = *(void **)__src;
      *(void *)__dst = *(void *)__src;
      __dst[104] = 5;
      id v28 = v27;
      break;
    default:
      memcpy(__dst, __src, 0x69uLL);
      break;
  }
  return __dst;
}

unsigned __int8 *assignWithCopy for ParticipantVideoOverlayView.ViewModel(unsigned __int8 *__dst, unsigned __int8 *__src)
{
  if (__dst != __src)
  {
    unsigned int v4 = __dst[104];
    if (v4 >= 6) {
      unsigned int v4 = *(_DWORD *)__dst + 6;
    }
    switch(v4)
    {
      case 1u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        goto LABEL_10;
      case 2u:
        swift_bridgeObjectRelease();

        id v5 = (id)*((void *)__dst + 7);
        goto LABEL_12;
      case 3u:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        id v5 = (id)*((void *)__dst + 10);
        goto LABEL_12;
      case 4u:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)__dst + 10))
        {
          swift_bridgeObjectRelease();
LABEL_10:
          swift_bridgeObjectRelease();
        }
        break;
      case 5u:
        id v5 = *(id *)__dst;
LABEL_12:

        break;
      default:
        break;
    }
    unsigned int v6 = __src[104];
    if (v6 >= 6) {
      unsigned int v6 = *(_DWORD *)__src + 6;
    }
    switch(v6)
    {
      case 0u:
        *__dst = *__src;
        __dst[104] = 0;
        break;
      case 1u:
        uint64_t v7 = *((void *)__src + 3);
        *((void *)__dst + 3) = v7;
        *((void *)__dst + 4) = *((void *)__src + 4);
        (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v7 - 8))(__dst, __src);
        *((void *)__dst + 5) = *((void *)__src + 5);
        *((void *)__dst + 6) = *((void *)__src + 6);
        __dst[104] = 1;
        swift_bridgeObjectRetain();
        break;
      case 2u:
        *(void *)__dst = *(void *)__src;
        *((void *)__dst + 1) = *((void *)__src + 1);
        *((void *)__dst + 2) = *((void *)__src + 2);
        uint64_t v8 = (void *)*((void *)__src + 3);
        *((void *)__dst + 3) = v8;
        __dst[32] = __src[32];
        __dst[33] = __src[33];
        uint64_t v9 = *((void *)__src + 5);
        __dst[48] = __src[48];
        *((void *)__dst + 5) = v9;
        id v10 = (void *)*((void *)__src + 7);
        *((void *)__dst + 7) = v10;
        __dst[104] = 2;
        swift_bridgeObjectRetain();
        id v11 = v8;
        goto LABEL_21;
      case 3u:
        *(void *)__dst = *(void *)__src;
        *((void *)__dst + 1) = *((void *)__src + 1);
        *((void *)__dst + 2) = *((void *)__src + 2);
        uint64_t v12 = (void *)*((void *)__src + 3);
        *((void *)__dst + 3) = v12;
        __dst[32] = __src[32];
        __dst[33] = __src[33];
        uint64_t v13 = *((void *)__src + 5);
        __dst[48] = __src[48];
        *((void *)__dst + 5) = v13;
        uint64_t v14 = (void *)*((void *)__src + 7);
        *((void *)__dst + 7) = v14;
        *((void *)__dst + 8) = *((void *)__src + 8);
        *((void *)__dst + 9) = *((void *)__src + 9);
        id v10 = (void *)*((void *)__src + 10);
        *((void *)__dst + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v10;
        __dst[104] = 3;
        swift_bridgeObjectRetain();
        id v15 = v12;
        id v16 = v14;
        swift_bridgeObjectRetain();
LABEL_21:
        id v17 = v10;
        break;
      case 4u:
        uint64_t v18 = *(void **)__src;
        *(void *)__dst = *(void *)__src;
        *((void *)__dst + 1) = *((void *)__src + 1);
        *((void *)__dst + 2) = *((void *)__src + 2);
        *((void *)__dst + 3) = *((void *)__src + 3);
        *((void *)__dst + 4) = *((void *)__src + 4);
        *((void *)__dst + 5) = *((void *)__src + 5);
        *((void *)__dst + 6) = *((void *)__src + 6);
        *((void *)__dst + 7) = *((void *)__src + 7);
        __dst[64] = __src[64];
        __dst[65] = __src[65];
        uint64_t v19 = *((void *)__src + 10);
        id v20 = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19)
        {
          *((void *)__dst + 9) = *((void *)__src + 9);
          *((void *)__dst + 1ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *((void *)__src + 10);
          *((void *)__dst + 11) = *((void *)__src + 11);
          *((void *)__dst + 12) = *((void *)__src + 12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v23 = *(_OWORD *)(__src + 88);
          *(_OWORD *)(__dst + 72) = *(_OWORD *)(__src + 72);
          *(_OWORD *)(__dst + 88) = v23;
        }
        __dst[104] = 4;
        break;
      case 5u:
        uint64_t v21 = *(void **)__src;
        *(void *)__dst = *(void *)__src;
        __dst[104] = 5;
        id v22 = v21;
        break;
      default:
        memcpy(__dst, __src, 0x69uLL);
        break;
    }
  }
  return __dst;
}

void *__swift_memcpy105_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x69uLL);
}

id *assignWithTake for ParticipantVideoOverlayView.ViewModel(id *__dst, id *__src)
{
  if (__dst != __src)
  {
    unsigned int v4 = *((unsigned __int8 *)__dst + 104);
    if (v4 >= 6) {
      unsigned int v4 = *(_DWORD *)__dst + 6;
    }
    switch(v4)
    {
      case 1u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        goto LABEL_10;
      case 2u:
        swift_bridgeObjectRelease();

        id v5 = __dst[7];
        goto LABEL_12;
      case 3u:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        id v5 = __dst[10];
        goto LABEL_12;
      case 4u:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (__dst[10])
        {
          swift_bridgeObjectRelease();
LABEL_10:
          swift_bridgeObjectRelease();
        }
        break;
      case 5u:
        id v5 = *__dst;
LABEL_12:

        break;
      default:
        break;
    }
    unsigned int v6 = *((unsigned __int8 *)__src + 104);
    if (v6 >= 6) {
      unsigned int v6 = *(_DWORD *)__src + 6;
    }
    switch(v6)
    {
      case 0u:
        *(unsigned char *)__dst = *(unsigned char *)__src;
        *((unsigned char *)__dst + 104) = 0;
        return __dst;
      case 1u:
        long long v7 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v7;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        __dst[6] = __src[6];
        char v8 = 1;
        goto LABEL_23;
      case 2u:
        long long v9 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v9;
        long long v10 = *((_OWORD *)__src + 3);
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *((_OWORD *)__dst + 3) = v10;
        char v8 = 2;
        goto LABEL_23;
      case 3u:
        memcpy(__dst, __src, 0x58uLL);
        char v8 = 3;
        goto LABEL_23;
      case 4u:
        memcpy(__dst, __src, 0x68uLL);
        char v8 = 4;
        goto LABEL_23;
      case 5u:
        *__dst = *__src;
        char v8 = 5;
LABEL_23:
        *((unsigned char *)__dst + 104) = v8;
        break;
      default:
        memcpy(__dst, __src, 0x69uLL);
        break;
    }
  }
  return __dst;
}

uint64_t getEnumTagSinglePayload for ParticipantVideoOverlayView.ViewModel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 105)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 104);
  if (v3 >= 7) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ParticipantVideoOverlayView.ViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_OWORD *)(result + 89) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 250;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 105) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 104) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTag for ParticipantVideoOverlayView.ViewModel(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 104);
  if (result >= 6) {
    return (*(_DWORD *)a1 + 6);
  }
  return result;
}

uint64_t destructiveInjectEnumTag for ParticipantVideoOverlayView.ViewModel(uint64_t result, unsigned int a2)
{
  if (a2 > 5)
  {
    unsigned int v2 = a2 - 6;
    *(void *)(result + 96) = 0;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 8ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    LOBYTE(a2) = 6;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 104) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ParticipantVideoOverlayView.ViewModel()
{
  return &type metadata for ParticipantVideoOverlayView.ViewModel;
}

uint64_t specialized Sequence.forEach(_:)(unint64_t a1, void (*a2)(uint64_t))
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (uint64_t i = 4; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x1C87744F0](i - 4, a1);
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 8 * i);
        swift_unknownObjectRetain();
      }
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      a2(v7);
      if (v2)
      {
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      if (v8 == v5) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

void ScreenSharingInteractionController.session(_:didUpdateState:)(uint64_t a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  OUTLINED_FUNCTION_0_20();
  uint64_t v5 = (*(uint64_t (**)(void))(v4 + 248))();
  if (v5 && (uint64_t v6 = v5, swift_release(), v6 == a1))
  {
    switch(v3 >> 61)
    {
      case 3uLL:
        goto LABEL_17;
      case 4uLL:
        if (*(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) >> 61 != 3) {
          goto LABEL_11;
        }
LABEL_17:
        if (one-time initialization token for screenSharing != -1) {
          swift_once();
        }
        uint64_t v16 = type metadata accessor for Logger();
        __swift_project_value_buffer(v16, (uint64_t)static Log.screenSharing);
        id v11 = (void *)Logger.logObject.getter();
        os_log_type_t v17 = static os_log_type_t.default.getter();
        if (OUTLINED_FUNCTION_107(v17))
        {
          *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
          OUTLINED_FUNCTION_54_17(&dword_1C2F90000, v18, v19, "Enabling device restrictions for remote control session");
          Swift::Bool v15 = 1;
          goto LABEL_21;
        }
        Swift::Bool v15 = 1;
        break;
      default:
LABEL_11:
        if (one-time initialization token for screenSharing != -1) {
          swift_once();
        }
        uint64_t v10 = type metadata accessor for Logger();
        __swift_project_value_buffer(v10, (uint64_t)static Log.screenSharing);
        id v11 = (void *)Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.default.getter();
        if (OUTLINED_FUNCTION_107(v12))
        {
          *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
          OUTLINED_FUNCTION_54_17(&dword_1C2F90000, v13, v14, "Disabling device restrictions after remote control session");
          Swift::Bool v15 = 0;
LABEL_21:
          OUTLINED_FUNCTION_3();
        }
        else
        {
          Swift::Bool v15 = 0;
        }
        break;
    }

    DeviceRestrictionController.setRestrictionsActive(_:)(v15);
    outlined copy of RemoteControlState(v3);
    ScreenSharingInteractionController.remoteControlState.setter();
  }
  else
  {
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Log.screenSharing);
    oschar log = (os_log_t)Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      long long v9 = (uint8_t *)OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_9_0();
      *(_DWORD *)long long v9 = 136315138;
      OUTLINED_FUNCTION_46_28((uint64_t)"session(_:didUpdateState:)", v20, (uint64_t)oslog, v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1C2F90000, osloga, v8, "Dropping message from non-current session %s", v9, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
    }
  }
}

void *ScreenSharingInteractionActivity.activityIdentifier.unsafeMutableAddressor()
{
  return &static ScreenSharingInteractionActivity.activityIdentifier;
}

unint64_t static ScreenSharingInteractionActivity.activityIdentifier.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t ScreenSharingInteractionActivity.remoteControlAllowed.getter(char a1)
{
  return a1 & 1;
}

uint64_t ScreenSharingInteractionActivity.metadata.getter()
{
  uint64_t v0 = type metadata accessor for GroupActivityMetadata.ActivityType();
  uint64_t v1 = OUTLINED_FUNCTION_8(v0);
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_21();
  GroupActivityMetadata.init()();
  static GroupActivityMetadata.ActivityType.screenSharing.getter();
  return GroupActivityMetadata.type.setter();
}

uint64_t ScreenSharingInteractionActivity.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001C37BFCA0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t ScreenSharingInteractionActivity.CodingKeys.stringValue.getter()
{
  return 0xD000000000000014;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ScreenSharingInteractionActivity.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = ScreenSharingInteractionActivity.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ScreenSharingInteractionActivity.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ScreenSharingInteractionActivity.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ScreenSharingInteractionActivity.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ScreenSharingInteractionActivity.CodingKeys>);
  OUTLINED_FUNCTION_5_3();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_64();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

uint64_t ScreenSharingInteractionActivity.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for KeyedDecodingContainer<ScreenSharingInteractionActivity.CodingKeys>);
  OUTLINED_FUNCTION_5_3();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_63();
  unsigned __int8 v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    unsigned __int8 v8 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8 & 1;
}

ConversationKit::ScreenSharingInteractionActivity __swiftcall ScreenSharingInteractionActivity.init(remoteControlAllowed:)(Swift::Bool remoteControlAllowed)
{
  return (ConversationKit::ScreenSharingInteractionActivity)remoteControlAllowed;
}

unint64_t protocol witness for static GroupActivity.activityIdentifier.getter in conformance ScreenSharingInteractionActivity()
{
  return 0xD00000000000002CLL;
}

uint64_t protocol witness for GroupActivity.metadata.getter in conformance ScreenSharingInteractionActivity()
{
  ScreenSharingInteractionActivity.metadata.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return protocol witness for GroupActivity.metadata.getter in conformance ScreenSharingInteractionActivity(v1);
}

uint64_t protocol witness for static GroupActivity._identifiable(by:) in conformance ScreenSharingInteractionActivity()
{
  return MEMORY[0x1F40E7740]();
}

uint64_t protocol witness for Decodable.init(from:) in conformance ScreenSharingInteractionActivity@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = ScreenSharingInteractionActivity.init(from:)(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ScreenSharingInteractionActivity(void *a1)
{
  return ScreenSharingInteractionActivity.encode(to:)(a1);
}

CNKScreenSharingInteractionControllerFactory __swiftcall CNKScreenSharingInteractionControllerFactory.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return (CNKScreenSharingInteractionControllerFactory)objc_msgSend(v0, sel_init);
}

id CNKScreenSharingInteractionControllerFactory.init()()
{
  v1.super_class = (Class)CNKScreenSharingInteractionControllerFactory;
  return objc_msgSendSuper2(&v1, sel_init);
}

id ScreenSharingInteractionController.__allocating_init(featureFlags:deviceRestrictionController:eligibilityChecker:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_allocWithZone(v3);
  swift_getObjectType();
  OUTLINED_FUNCTION_58_14();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v6);
  unsigned __int8 v8 = OUTLINED_FUNCTION_2_93(v7, v12);
  v9(v8);
  id v10 = OUTLINED_FUNCTION_26_52();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v10;
}

uint64_t key path getter for ScreenSharingInteractionController.session : ScreenSharingInteractionController@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xF8))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ScreenSharingInteractionController.session : ScreenSharingInteractionController()
{
  return ScreenSharingInteractionController.session.setter();
}

uint64_t ScreenSharingInteractionController.session.didset()
{
  if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))())
  {
    if (one-time initialization token for $isScreenSharingInteractive != -1) {
      swift_once();
    }
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
    __swift_project_value_buffer(v1, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();
    return swift_release();
  }
  else
  {
    if (one-time initialization token for $isScreenSharingInteractive != -1) {
      swift_once();
    }
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
    __swift_project_value_buffer(v3, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    return swift_endAccess();
  }
}

uint64_t ScreenSharingInteractionController.session.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  id v1 = v0;
  static Published.subscript.setter();
  ScreenSharingInteractionController.session.didset();
  return swift_release();
}

uint64_t key path getter for ScreenSharingInteractionController.$session : ScreenSharingInteractionController(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x110))();
}

uint64_t ScreenSharingInteractionController.$session.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__session, &demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>);
}

uint64_t ScreenSharingInteractionController.$session.setter(uint64_t a1)
{
  return ScreenSharingInteractionController.$session.setter(a1, &demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__session, &demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>);
}

uint64_t ScreenSharingInteractionController.latestRemoteControlDate.getter()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_23_0();
  return outlined init with copy of Environment<DynamicTypeSize>.Content(v0, v1, v2);
}

uint64_t ScreenSharingInteractionController.latestRemoteControlDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_latestRemoteControlDate;
  OUTLINED_FUNCTION_6_1();
  outlined assign with take of CompactPresentable?(a1, v3, (uint64_t *)&demangling cache variable for type metadata for Date?);
  return swift_endAccess();
}

uint64_t key path getter for ScreenSharingInteractionController.latestRemoteControlDate : ScreenSharingInteractionController(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x130))();
}

uint64_t key path setter for ScreenSharingInteractionController.latestRemoteControlDate : ScreenSharingInteractionController(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Environment<DynamicTypeSize>.Content(a1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for Date?);
  return ScreenSharingInteractionController.latestRemoteControlDate.setter((uint64_t)v4);
}

uint64_t key path getter for ScreenSharingInteractionController.hasJoinedOneToOneConversation : ScreenSharingInteractionController@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x148))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ScreenSharingInteractionController.hasJoinedOneToOneConversation : ScreenSharingInteractionController(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x150))(*a1);
}

uint64_t ScreenSharingInteractionController.hasJoinedOneToOneConversation.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t ScreenSharingInteractionController.hasJoinedOneToOneConversation.setter(char a1)
{
  return ScreenSharingInteractionController.hasJoinedOneToOneConversation.setter(a1, &OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_hasJoinedOneToOneConversation, "Setting hasJoinedOneToOneConversation=%{BOOL}d");
}

void (*ScreenSharingInteractionController.hasJoinedOneToOneConversation.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  _OWORD v3[3] = v1;
  uint64_t v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_hasJoinedOneToOneConversation);
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_2();
  *((unsigned char *)v3 + 32) = *v4;
  return ScreenSharingInteractionController.hasJoinedOneToOneConversation.modify;
}

void ScreenSharingInteractionController.hasJoinedOneToOneConversation.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  ScreenSharingInteractionController.hasJoinedOneToOneConversation.setter(*(unsigned char *)(*(void *)a1 + 32));
  free(v1);
}

uint64_t key path getter for ScreenSharingInteractionController.isBroadcastingScreenSharing : ScreenSharingInteractionController@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x160))();
  *a2 = result & 1;
  return result;
}

uint64_t ScreenSharingInteractionController.isBroadcastingScreenSharing.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

void *key path getter for ScreenSharingInteractionController.remoteControlState : ScreenSharingInteractionController@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x178))(&v4);
  *a2 = v4;
  return result;
}

uint64_t key path setter for ScreenSharingInteractionController.remoteControlState : ScreenSharingInteractionController(unint64_t *a1)
{
  return ScreenSharingInteractionController.remoteControlState.setter();
}

uint64_t ScreenSharingInteractionController.remoteControlState.didset()
{
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v2 = (void (*)(void))(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
  v2();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))((*v1 & *v0) + 0x1D8);
  return v3();
}

uint64_t ScreenSharingInteractionController.remoteControlState.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_41_0();
  static Published.subscript.getter();
  swift_release();
  return swift_release();
}

uint64_t ScreenSharingInteractionController.remoteControlState.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  static Published.subscript.setter();
  return ScreenSharingInteractionController.remoteControlState.didset();
}

uint64_t key path getter for ScreenSharingInteractionController.$remoteControlState : ScreenSharingInteractionController(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x190))();
}

uint64_t key path setter for ScreenSharingInteractionController.$session : ScreenSharingInteractionController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_62();
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v6, a1);
  return a6(v6);
}

uint64_t ScreenSharingInteractionController.$remoteControlState.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__remoteControlState, (uint64_t *)&demangling cache variable for type metadata for Published<RemoteControlState>);
}

uint64_t ScreenSharingInteractionController.$remoteControlState.setter(uint64_t a1)
{
  return ScreenSharingInteractionController.$session.setter(a1, &demangling cache variable for type metadata for Published<RemoteControlState>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__remoteControlState, (uint64_t *)&demangling cache variable for type metadata for Published<RemoteControlState>);
}

uint64_t ScreenSharingInteractionController.$session.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_5_3();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_2_1();
  v10();
  OUTLINED_FUNCTION_6_1();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v6);
}

uint64_t key path getter for ScreenSharingInteractionController.onUpdateUI : ScreenSharingInteractionController@<X0>(void **a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x1A8))();
  uint64_t v5 = v4;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(void *)(result + 24) = v5;
  *a2 = partial apply for thunk for @callee_guaranteed () -> ();
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t key path setter for ScreenSharingInteractionController.onUpdateUI : ScreenSharingInteractionController(uint64_t *a1, void **a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  uint64_t v6 = *(uint64_t (**)(uint64_t (*)(), uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x1B0);
  swift_retain();
  return v6(partial apply for thunk for @escaping @callee_guaranteed () -> (@out ()), v5);
}

uint64_t ScreenSharingInteractionController.onUpdateUI.getter()
{
  return OUTLINED_FUNCTION_23_0();
}

uint64_t ScreenSharingInteractionController.onUpdateUI.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_onUpdateUI);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_release();
}

uint64_t (*ScreenSharingInteractionController.onUpdateUI.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

id ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  OUTLINED_FUNCTION_58_14();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = OUTLINED_FUNCTION_2_93(v5, v10);
  v7(v6);
  id v8 = OUTLINED_FUNCTION_26_52();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v8;
}

void closure #1 in closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.State);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (void **)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1C8776240](a2 + 16);
  if (v10)
  {
    id v11 = (void *)v10;
    (*(void (**)(void **, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    if ((*(unsigned int (**)(void **, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x1E4F29440])
    {
      (*(void (**)(void **, uint64_t))(v7 + 96))(v9, v6);
      uint64_t v12 = *v9;
      if (one-time initialization token for screenSharing != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      __swift_project_value_buffer(v13, (uint64_t)static Log.screenSharing);
      swift_retain();
      id v14 = v12;
      swift_retain();
      id v15 = v12;
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v19 = (void *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v26 = a3;
        uint64_t v27 = v25;
        *(_DWORD *)uint64_t v18 = 136315394;
        lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type GroupSession<ScreenSharingInteractionActivity> and conformance GroupSession<A>, &demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
        uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, &v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v18 + 12) = 2112;
        id v22 = v12;
        uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v26 = v23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v19 = v23;

        _os_log_impl(&dword_1C2F90000, v16, v17, "Invalidating ScreenSharingInteractionSession since %s was invalidated with reason %@", (uint8_t *)v18, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v19, -1, -1);
        uint64_t v24 = v25;
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v24, -1, -1);
        MEMORY[0x1C87760E0](v18, -1, -1);
      }
      else
      {
        swift_release_n();
      }
      ScreenSharingInteractionController.resetSession()();
    }
    else
    {

      (*(void (**)(void **, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

void ScreenSharingInteractionController.addDelegate(_:)(uint64_t a1)
{
}

void ScreenSharingInteractionController.removeDelegate(_:)(uint64_t a1)
{
}

void ScreenSharingInteractionController.addDelegate(_:)(uint64_t a1, SEL *a2)
{
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_lock];
  uint64_t v6 = *(os_unfair_lock_s **)(v5 + 16);
  uint64_t v7 = v2;
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v6);
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_observers], *a2, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_unknownObjectRelease();
}

void @objc ScreenSharingInteractionController.addDelegate(_:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

Swift::Void __swiftcall ScreenSharingInteractionController.notifyObserversOfUpdatedRemoteControlStatus()()
{
  OUTLINED_FUNCTION_31();
  uint64_t ObjectType = swift_getObjectType();
  if (one-time initialization token for screenSharing != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Log.screenSharing);
  uint64_t v4 = v0;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)MEMORY[0x1E4FBC8C8];
  if (v7)
  {
    id v1 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v9 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)id v1 = 136315138;
    uint64_t v20 = v9;
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v4) + 0x128))();
    type metadata accessor for TURemoteControlStatus(0);
    uint64_t v10 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v20);
    uint64_t v8 = (void *)MEMORY[0x1E4FBC8C8];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v5, v6, "Notifying observers of changed remote control status: %s", v1, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))((*v8 & *v4) + 0x128))(v12, v13);
  if (v14 != 2)
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    uint64_t v16 = OUTLINED_FUNCTION_8(v15);
    MEMORY[0x1F4188790](v16);
    OUTLINED_FUNCTION_63();
    static Date.now.getter();
    uint64_t v17 = type metadata accessor for Date();
    __swift_storeEnumTagSinglePayload((uint64_t)v1, 0, 1, v17);
    uint64_t v18 = (uint64_t)v4 + OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_latestRemoteControlDate;
    OUTLINED_FUNCTION_6_1();
    outlined assign with take of CompactPresentable?((uint64_t)v1, v18, (uint64_t *)&demangling cache variable for type metadata for Date?);
    swift_endAccess();
  }
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = v14 == 2;
  *(void *)(v19 + 24) = ObjectType;
  (*(void (**)(uint64_t (*)(void *), uint64_t))((*v8 & *v4) + 0x220))(partial apply for closure #1 in ScreenSharingInteractionController.notifyObserversOfUpdatedRemoteControlStatus(), v19);
  swift_release();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in ScreenSharingInteractionController.notifyObserversOfUpdatedRemoteControlStatus()(void *a1, char a2)
{
  uint64_t result = (uint64_t)objc_msgSend(a1, sel_respondsToSelector_, sel_screenSharingInteractionController_didUpdateRemoteControlStatus_);
  if (result)
  {
    uint64_t v5 = one-time initialization token for shared;
    swift_unknownObjectRetain();
    if (v5 != -1) {
      swift_once();
    }
    objc_msgSend(a1, sel_screenSharingInteractionController_didUpdateRemoteControlStatus_, static ScreenSharingInteractionController.shared, a2 & 1);
    return swift_unknownObjectRelease();
  }
  return result;
}

void ScreenSharingInteractionController.resetSession()()
{
  if (one-time initialization token for screenSharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = __swift_project_value_buffer(v1, (uint64_t)static Log.screenSharing);
  id v3 = v0;
  unint64_t v4 = v2;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    BOOL v7 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v17 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)BOOL v7 = 136315138;
    OUTLINED_FUNCTION_37_36();
    if (v8())
    {
      type metadata accessor for ScreenSharingInteractionSession();
      uint64_t v9 = String.init<A>(reflecting:)();
      unint64_t v4 = v10;
    }
    else
    {
      uint64_t v9 = OUTLINED_FUNCTION_41_31();
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v4, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v5, v6, "Resetting session %s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  OUTLINED_FUNCTION_37_36();
  if (v13(v11, v12))
  {
    OUTLINED_FUNCTION_17_8();
    (*(void (**)(uint64_t, uint64_t))(v14 + 520))(v15, v16);
    swift_release();
  }
  ScreenSharingInteractionController.session.setter();
  uint64_t v17 = 0xA000000000000000;
  ScreenSharingInteractionController.remoteControlState.setter();
  DeviceRestrictionController.setRestrictionsActive(_:)(0);
}

uint64_t ScreenSharingInteractionController.sessionDidRequestRemoteControl(_:)()
{
  OUTLINED_FUNCTION_0_20();
  (*(void (**)(void))(v0 + 248))();
  return swift_release();
}

Swift::Void __swiftcall ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()()
{
}

uint64_t closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x1F4188298](closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding(), 0, 0);
}

uint64_t closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_20();
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(v1 + 248))();
  *(void *)(v0 + 32) = v2;
  if (v2)
  {
    uint64_t v15 = (void *)(*v2 + 528);
    uint64_t v14 = *v15 + *(int *)*v15;
    id v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v3;
    *id v3 = v0;
    v3[1] = closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding();
    OUTLINED_FUNCTION_157_0((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v13, v14, (uint64_t)v15);
  }
  else
  {
    **(unsigned char **)(v0 + 16) = 1;
    OUTLINED_FUNCTION_6();
  }
  return v11();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  id v3 = v2;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

Swift::Void __swiftcall ScreenSharingInteractionController.handleRemoteControlUserResponse(allowRemoteControl:)(Swift::Bool allowRemoteControl)
{
  OUTLINED_FUNCTION_0_20();
  if ((*(uint64_t (**)(void))(v2 + 248))())
  {
    OUTLINED_FUNCTION_17_8();
    (*(void (**)(Swift::Bool))(v3 + 664))(allowRemoteControl);
    swift_release();
  }
}

Swift::Void __swiftcall ScreenSharingInteractionController.cancelRemoteControlRequest()()
{
}

uint64_t ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_62();
  uint64_t v4 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v4);
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = 0;
  void v5[3] = 0;
  v5[4] = v0;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v4);
  id v7 = v0;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for TaskPriority?);
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_26_2();
    v8();
    if (v5[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      dispatch thunk of Actor.unownedExecutor.getter();
      swift_unknownObjectRelease();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ()?);
  swift_task_create();
  return swift_release();
}

uint64_t closure #1 in ScreenSharingInteractionController.cancelRemoteControlRequest()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x1F4188298](closure #1 in ScreenSharingInteractionController.cancelRemoteControlRequest(), 0, 0);
}

uint64_t closure #1 in ScreenSharingInteractionController.cancelRemoteControlRequest()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_20();
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(v1 + 248))();
  *(void *)(v0 + 32) = v2;
  if (v2)
  {
    uint64_t v15 = (void *)(*v2 + 552);
    uint64_t v14 = *v15 + *(int *)*v15;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v3;
    *uint64_t v3 = v0;
    v3[1] = closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding();
    OUTLINED_FUNCTION_157_0((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v13, v14, (uint64_t)v15);
  }
  else
  {
    **(unsigned char **)(v0 + 16) = 1;
    OUTLINED_FUNCTION_6();
  }
  return v11();
}

Swift::Void __swiftcall ScreenSharingInteractionController.endRemoteControlSession()()
{
}

uint64_t closure #1 in ScreenSharingInteractionController.endRemoteControlSession()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x1F4188298](closure #1 in ScreenSharingInteractionController.endRemoteControlSession(), 0, 0);
}

uint64_t closure #1 in ScreenSharingInteractionController.endRemoteControlSession()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_20();
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(v1 + 248))();
  *(void *)(v0 + 32) = v2;
  if (v2)
  {
    uint64_t v15 = (void *)(*v2 + 560);
    uint64_t v14 = *v15 + *(int *)*v15;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v3;
    *uint64_t v3 = v0;
    v3[1] = closure #1 in ScreenSharingInteractionController.endRemoteControlSession();
    OUTLINED_FUNCTION_157_0((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v13, v14, (uint64_t)v15);
  }
  else
  {
    **(unsigned char **)(v0 + 16) = 1;
    OUTLINED_FUNCTION_6();
  }
  return v11();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

{
  uint64_t v0;

  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  OUTLINED_FUNCTION_6();
  return v0();
}

uint64_t ScreenSharingInteractionController.updateInteractionSession()()
{
  if (one-time initialization token for screenSharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = __swift_project_value_buffer(v1, (uint64_t)static Log.screenSharing);
  id v3 = v0;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 136315906;
    OUTLINED_FUNCTION_46_28((uint64_t)"updateInteractionSession()", v7, v2, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 1024;
    OUTLINED_FUNCTION_38_34();
    os_log_type_t v8 = v3;
    unint64_t v10 = (unint64_t)v3;
    (*(void (**)(void))(v9 + 352))();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 18) = 1024;
    OUTLINED_FUNCTION_38_34();
    (*(uint64_t (**)(void))(v11 + 328))();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 24) = 2080;
    OUTLINED_FUNCTION_38_34();
    if ((*(uint64_t (**)(void))(v12 + 248))())
    {
      type metadata accessor for ScreenSharingInteractionSession();
      uint64_t v13 = String.init<A>(reflecting:)();
      unint64_t v10 = v14;
    }
    else
    {
      uint64_t v13 = OUTLINED_FUNCTION_41_31();
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v10, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2F90000, v4, v5, "%s isBroadcastingScreenSharing=%{BOOL}d hasJoinedOneToOneConversation%{BOOL}d session=%s", (uint8_t *)v6, 0x22u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    os_log_type_t v8 = v3;
  }
  OUTLINED_FUNCTION_28_48();
  if ((*(uint64_t (**)(void))(v15 + 352))())
  {
    OUTLINED_FUNCTION_28_48();
    char v17 = (*(uint64_t (**)(void))(v16 + 328))();
  }
  else
  {
    char v17 = 0;
  }
  OUTLINED_FUNCTION_28_48();
  OUTLINED_FUNCTION_37_36();
  uint64_t result = v18();
  if ((v17 & 1) == 0)
  {
    if (!result) {
      return result;
    }
    swift_retain();
    char v23 = GroupSession.isLocallyInitiated.getter();
    swift_release();
    if (v23)
    {
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_2_12(v25))
      {
        uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_8_0();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_1C2F90000, v24, v8, "Resetting interaction session", v26, 2u);
        OUTLINED_FUNCTION_3();
      }

      ScreenSharingInteractionController.resetSession()();
    }
    return swift_release();
  }
  if (result) {
    return swift_release();
  }
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v21))
  {
    id v22 = (uint8_t *)OUTLINED_FUNCTION_8_0();
    *(_WORD *)id v22 = 0;
    _os_log_impl(&dword_1C2F90000, v20, v8, "Starting interaction session", v22, 2u);
    OUTLINED_FUNCTION_3();
  }

  return ScreenSharingInteractionController.startInteractionSession()();
}

uint64_t ScreenSharingInteractionController.startInteractionSession()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_21();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
  uint64_t v7 = (void *)swift_allocObject();
  id v7[2] = 0;
  _OWORD v7[3] = 0;
  id v7[4] = v0;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v5, 1, v6);
  id v9 = v0;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of SystemUpdateNotice?(v5, &demangling cache variable for type metadata for TaskPriority?);
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_26_2();
    v10();
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      dispatch thunk of Actor.unownedExecutor.getter();
      swift_unknownObjectRelease();
    }
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = &async function pointer to partial apply for closure #1 in ScreenSharingInteractionController.startInteractionSession();
  *(void *)(v11 + 24) = v7;
  swift_task_create();
  return swift_release();
}

uint64_t closure #1 in ScreenSharingInteractionController.startInteractionSession()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FeatureEligibility?);
  v4[6] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for FeatureEligibilityDomain();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FeatureEligibility();
  void v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](closure #1 in ScreenSharingInteractionController.startInteractionSession(), 0, 0);
}

uint64_t closure #1 in ScreenSharingInteractionController.startInteractionSession()()
{
  uint64_t v74 = v0;
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v71 = (void *)(*(void *)(v0 + 40)
                 + OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_eligibilityChecker);
  __swift_project_boxed_opaque_existential_1(v71, v71[3]);
  unsigned int v70 = *MEMORY[0x1E4F61798];
  uint64_t v69 = *(void (**)(uint64_t))(v2 + 104);
  v69(v1);
  dispatch thunk of FeatureEligibilityChecking.getEligibilityForDomain(_:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (one-time initialization token for screenSharing != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = type metadata accessor for Logger();
  *(void *)(v0 + 136) = __swift_project_value_buffer(v8, (uint64_t)static Log.screenSharing);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  unint64_t v10 = v7 + 16;
  id v9 = v11;
  v11(v4, v5, v6);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  uint64_t v14 = v13;
  BOOL v15 = os_log_type_enabled(v12, v13);
  uint64_t v16 = *(void *)(v0 + 120);
  uint64_t v17 = *(void *)(v0 + 80);
  uint64_t v72 = (void (*)(void))v11;
  if (v15)
  {
    char log = v12;
    uint64_t v18 = *(void *)(v0 + 48);
    os_log_type_t typea = v14;
    uint64_t v19 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v73 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v19 = 136315138;
    buf = v19;
    v9(v18, v16, v17);
    __swift_storeEnumTagSinglePayload(v18, 0, 1, v17);
    uint64_t v14 = specialized >> prefix<A>(_:)(v18);
    unint64_t v10 = v20;
    outlined destroy of SystemUpdateNotice?(v18, &demangling cache variable for type metadata for FeatureEligibility?);
    *(void *)(v0 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v10, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v21 = OUTLINED_FUNCTION_30_38();
    ((void (*)(uint64_t))v14)(v21);
    _os_log_impl(&dword_1C2F90000, log, typea, "Loaded drawToHighlight eligibility %s", buf, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    uint64_t v22 = OUTLINED_FUNCTION_30_38();
    ((void (*)(uint64_t))v14)(v22);
  }
  *(void *)(v0 + 144) = v14;
  uint64_t v23 = *(void *)(v0 + 112);
  uint64_t v24 = *(void *)(v0 + 80);
  unsigned int v25 = *MEMORY[0x1E4F61780];
  uint64_t v26 = *(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 88) + 104);
  v26(v23, *MEMORY[0x1E4F61780], v24);
  lazy protocol witness table accessor for type FeatureEligibility and conformance FeatureEligibility((unint64_t *)&lazy protocol witness table cache variable for type FeatureEligibility and conformance FeatureEligibility, MEMORY[0x1E4F61788]);
  OUTLINED_FUNCTION_23_0();
  char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
  *(void *)(v0 + 152) = v10;
  ((void (*)(uint64_t, uint64_t))v14)(v23, v24);
  if (v27)
  {
    uint64_t v28 = (void *)Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_104(v29))
    {
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_15_4(&dword_1C2F90000, v30, v31, "Draw to highlight restricted by OS");
      OUTLINED_FUNCTION_3();
    }

    uint64_t v32 = OUTLINED_FUNCTION_6_120();
    v33(v32);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6();
    return v34();
  }
  else
  {
    uint64_t v63 = v26;
    unsigned int v64 = v25;
    type = (void (*)(uint64_t, uint64_t))v14;
    uint64_t v37 = *(void *)(v0 + 96);
    uint64_t v36 = *(void *)(v0 + 104);
    uint64_t v39 = *(void *)(v0 + 72);
    uint64_t v38 = *(void *)(v0 + 80);
    uint64_t v40 = *(void *)(v0 + 56);
    __swift_project_boxed_opaque_existential_1(v71, v71[3]);
    ((void (*)(uint64_t, void, uint64_t))v69)(v39, v70, v40);
    dispatch thunk of FeatureEligibilityChecking.getEligibilityForDomain(_:)();
    OUTLINED_FUNCTION_15();
    v41();
    ((void (*)(uint64_t, uint64_t, uint64_t))v72)(v37, v36, v38);
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.default.getter();
    BOOL v44 = OUTLINED_FUNCTION_104(v43);
    uint64_t v45 = *(void *)(v0 + 96);
    uint64_t v46 = *(void *)(v0 + 80);
    if (v44)
    {
      uint64_t v47 = *(void *)(v0 + 48);
      uint64_t v48 = (uint8_t *)OUTLINED_FUNCTION_37();
      uint64_t v73 = OUTLINED_FUNCTION_9_0();
      *(_DWORD *)uint64_t v48 = 136315138;
      OUTLINED_FUNCTION_2_1();
      v72();
      __swift_storeEnumTagSinglePayload(v47, 0, 1, v46);
      uint64_t v49 = specialized >> prefix<A>(_:)(v47);
      unint64_t v51 = v50;
      outlined destroy of SystemUpdateNotice?(v47, &demangling cache variable for type metadata for FeatureEligibility?);
      *(void *)(v0 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v51, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v52 = v45;
      uint64_t v53 = type;
      type(v52, v46);
      _os_log_impl(&dword_1C2F90000, v42, (os_log_type_t)v36, "Loaded remoteControl eligibility %s", v48, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
      uint64_t v53 = type;
      type(*(void *)(v0 + 96), *(void *)(v0 + 80));
    }

    uint64_t v54 = (void *)Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_104(v55))
    {
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_15_4(&dword_1C2F90000, v56, v57, "Started screen sharing, beginning interaction activity");
      OUTLINED_FUNCTION_3();
    }
    uint64_t v58 = *(void *)(v0 + 112);
    uint64_t v59 = *(void *)(v0 + 80);

    v63(v58, v64, v59);
    char v60 = dispatch thunk of static Equatable.== infix(_:_:)();
    v53(v58, v59);
    *(unsigned char *)(v0 + 176) = (v60 & 1) == 0;
    id v61 = (void *)swift_task_alloc();
    *(void *)(v0 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v61;
    unint64_t v62 = lazy protocol witness table accessor for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity();
    *id v61 = v0;
    v61[1] = closure #1 in ScreenSharingInteractionController.startInteractionSession();
    return MEMORY[0x1F40E7768](&type metadata for ScreenSharingInteractionActivity, v62);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_13_1();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(void);
  uint64_t v5;

  (*(void (**)(void, void))(v0 + 144))(*(void *)(v0 + 104), *(void *)(v0 + 80));
  uint64_t v1 = OUTLINED_FUNCTION_6_120();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t (*v13)(void);
  uint64_t v15;

  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = v1;
  uint64_t v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  uint64_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 168);
    uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    unint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v8 = v10;

    _os_log_impl(&dword_1C2F90000, v4, v5, "Error starting screen sharing interaction activity: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 168);
  }
  (*(void (**)(void, void))(v0 + 144))(*(void *)(v0 + 104), *(void *)(v0 + 80));
  uint64_t v11 = OUTLINED_FUNCTION_6_120();
  v12(v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v13();
}

void ScreenSharingInteractionController.notifyObservers(with:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_lock];
  uint64_t v8 = *(os_unfair_lock_s **)(v7 + 16);
  id v9 = v0;
  os_unfair_lock_lock(v8);
  id v10 = objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_observers], sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNKScreenSharingInteractionControllerDelegate);
  uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)(v6 + 16) = v11;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v26 = static OS_dispatch_queue.main.getter();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v25 = v6;
  v12[2] = v6;
  v12[3] = v4;
  v12[4] = v2;
  v27[4] = partial apply for closure #2 in ScreenSharingInteractionController.notifyObservers(with:);
  v27[5] = v12;
  v27[0] = MEMORY[0x1E4F143A8];
  v27[1] = 1107296256;
  v27[2] = thunk for @escaping @callee_guaranteed () -> ();
  v27[3] = &block_descriptor_122;
  os_log_type_t v13 = _Block_copy(v27);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v14 = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_5_3();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_64();
  static DispatchQoS.unspecified.getter();
  uint64_t v18 = type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[0] = MEMORY[0x1E4FBC860];
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x1F41AAF18]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v24 = (void *)v26;
  MEMORY[0x1C8773BA0](0, v11, v23, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v11, v14);
  swift_release();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #2 in ScreenSharingInteractionController.notifyObservers(with:)(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 16))
  {
    unint64_t v5 = swift_bridgeObjectRetain();
    specialized Sequence.forEach(_:)(v5, a2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id ScreenSharingInteractionController.__deallocating_deinit()
{
  OUTLINED_FUNCTION_0_20();
  if ((*(uint64_t (**)(void))(v1 + 248))())
  {
    OUTLINED_FUNCTION_17_8();
    (*(void (**)(void))(v2 + 520))();
    swift_release();
  }
  if (*(void *)&v0[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_sessionObserverTask])
  {
    uint64_t v3 = swift_retain();
    MEMORY[0x1C8773690](v3, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    swift_release();
  }
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for ScreenSharingInteractionController();
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t ScreenSharingInteractionController.requestRemoteControl()()
{
  OUTLINED_FUNCTION_17_2();
  v1[8] = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlMessage?);
  OUTLINED_FUNCTION_8(v2);
  v1[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for RemoteControlMessage(0);
  v1[10] = v3;
  OUTLINED_FUNCTION_8(v3);
  v1[11] = OUTLINED_FUNCTION_28_2();
  v1[12] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_8(v4);
  v1[13] = OUTLINED_FUNCTION_28_2();
  v1[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Participant();
  v1[15] = v5;
  v1[16] = *(void *)(v5 - 8);
  v1[17] = OUTLINED_FUNCTION_28_2();
  v1[18] = swift_task_alloc();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

{
  os_log_type_t v0;
  void *v1;
  void **v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  BOOL v16;
  void *v17;
  uint8_t *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t (*v27)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *log;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  os_log_type_t type;
  uint64_t (*typea)(uint64_t, uint64_t);
  uint64_t v62[2];
  void *v63;
  uint64_t v64;

  uint64_t v63 = v1;
  uint64_t v2 = (void **)(v1 + 8);
  OUTLINED_FUNCTION_0_20();
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 248))();
  v1[19] = v4;
  if (!v4)
  {
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v11 = *v2;
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static Log.screenSharing);
    os_log_type_t v13 = v11;
    uint64_t v14 = Logger.logObject.getter();
    uint64_t v15 = static os_log_type_t.error.getter();
    uint64_t v16 = OUTLINED_FUNCTION_2_12(v15);
    uint64_t v17 = *v2;
    if (!v16)
    {

      goto LABEL_17;
    }
    uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_37();
    v62[0] = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v18 = 136315138;
    v1[2] = v17;
    type metadata accessor for ScreenSharingInteractionController();
    uint64_t v19 = v17;
    uint64_t v20 = String.init<A>(reflecting:)();
    v1[3] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v14, v0, "Couldn't request remoteControl because we can't find the session on self: %s", v18, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
    goto LABEL_14;
  }
  uint64_t v5 = (void *)v4;
  GroupSession.activeParticipants.getter();
  swift_retain();
  uint64_t v6 = OUTLINED_FUNCTION_23_0();
  uint64_t v8 = specialized _NativeSet.filter(_:)(v6, v7);
  if (*(void *)(v8 + 16) != 1)
  {
    swift_release();
    goto LABEL_10;
  }
  uint64_t v10 = v1[14];
  id v9 = v1[15];
  specialized Collection.first.getter(v8, v10);
  swift_release();
  if (__swift_getEnumTagSinglePayload(v10, 1, v9) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v1[14], (uint64_t *)&demangling cache variable for type metadata for Participant?);
LABEL_10:
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static Log.screenSharing);
    swift_retain_n();
    uint64_t v14 = Logger.logObject.getter();
    uint64_t v23 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v14, v23))
    {

      swift_release_n();
      goto LABEL_17;
    }
    uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_37();
    v62[0] = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v24 = 136315138;
    v1[4] = v5[3];
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
    uint64_t v25 = String.init<A>(reflecting:)();
    v1[5] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v14, v23, "Couldn't request remoteControl because we can't find the remote participant on session: %s", v24, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
    swift_release();
LABEL_14:

LABEL_17:
    OUTLINED_FUNCTION_59_14();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v27 = (uint64_t (*)(void))v1[1];
    return v27();
  }
  (*(void (**)(void, void, void))(v1[16] + 32))(v1[18], v1[14], v1[15]);
  UUID.init()();
  type metadata accessor for RemoteControlRequest(0);
  static Date.now.getter();
  OUTLINED_FUNCTION_41_0();
  swift_storeEnumTagMultiPayload();
  if (one-time initialization token for screenSharing != -1) {
    swift_once();
  }
  uint64_t v30 = v1[17];
  os_log_type_t v29 = v1[18];
  uint64_t v32 = v1[15];
  uint64_t v31 = v1[16];
  long long v34 = v1[11];
  uint64_t v33 = v1[12];
  uint64_t v35 = type metadata accessor for Logger();
  __swift_project_value_buffer(v35, (uint64_t)static Log.screenSharing);
  outlined init with copy of RemoteControlMessage(v33, v34);
  uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  v59(v30, v29, v32);
  uint64_t v36 = Logger.logObject.getter();
  type = static os_log_type_t.default.getter();
  uint64_t v37 = os_log_type_enabled(v36, type);
  uint64_t v39 = v1[16];
  uint64_t v38 = v1[17];
  uint64_t v40 = v1[15];
  if (v37)
  {
    os_log_type_t v55 = v1[13];
    uint64_t v56 = v1[17];
    uint64_t v41 = v1[10];
    uint64_t v42 = v1[11];
    os_log_type_t v43 = v1[9];
    uint64_t v58 = v1[15];
    BOOL v44 = swift_slowAlloc();
    v62[0] = swift_slowAlloc();
    *(_DWORD *)BOOL v44 = 136315394;
    outlined init with copy of RemoteControlMessage(v42, v43);
    __swift_storeEnumTagSinglePayload(v43, 0, 1, v41);
    uint64_t v45 = specialized >> prefix<A>(_:)();
    char log = v36;
    uint64_t v47 = v46;
    outlined destroy of SystemUpdateNotice?(v43, &demangling cache variable for type metadata for RemoteControlMessage?);
    v1[6] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v47, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of RemoteControlMessage(v42);
    *(_WORD *)(v44 + 12) = 2080;
    v59(v55, v56, v58);
    __swift_storeEnumTagSinglePayload(v55, 0, 1, v58);
    uint64_t v48 = specialized >> prefix<A>(_:)(v55);
    unint64_t v50 = v49;
    outlined destroy of SystemUpdateNotice?(v55, (uint64_t *)&demangling cache variable for type metadata for Participant?);
    v1[7] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v50, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v51 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v51(v56, v58);
    _os_log_impl(&dword_1C2F90000, log, type, "Sending remote control message: %s to: %s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
    outlined destroy of RemoteControlMessage(v1[11]);
    unint64_t v51 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v51(v38, v40);
  }
  v1[20] = v51;
  os_log_type_t typea = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*v5 + 536) + **(int **)(*v5 + 536));
  uint64_t v52 = (void *)swift_task_alloc();
  v1[21] = v52;
  *uint64_t v52 = v1;
  v52[1] = ScreenSharingInteractionController.requestRemoteControl();
  uint64_t v53 = v1[18];
  uint64_t v54 = v1[12];
  return typea(v54, v53);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_13_1();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

{
  void *v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v1 = (void (*)(void))v0[20];
  uint64_t v2 = v0[12];
  swift_release();
  outlined destroy of RemoteControlMessage(v2);
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_15();
  v1();
  OUTLINED_FUNCTION_59_14();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v1 = *(void (**)(void))(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 96);
  swift_release();
  outlined destroy of RemoteControlMessage(v2);
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_15();
  v1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6();
  return v3();
}

id ScreenSharingInteractionController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ScreenSharingInteractionController.init()()
{
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance ScreenSharingInteractionController@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ScreenSharingInteractionController();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys);
  }
  return result;
}

void specialized _NativeSet.extractSubset(using:count:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

{
  specialized _NativeSet.extractSubset(using:count:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUScreenSharingRequest>);
}

{
  specialized _NativeSet.extractSubset(using:count:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUConversationMember>);
}

{
  specialized _NativeSet.extractSubset(using:count:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUHandle>);
}

{
  specialized _NativeSet.extractSubset(using:count:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<SGURL>);
}

{
  specialized _NativeSet.extractSubset(using:count:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<CHHandle>);
}

void specialized _NativeSet.extractSubset(using:count:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v3;
  if (!v2)
  {
    swift_release();
LABEL_38:
    OUTLINED_FUNCTION_28();
    return;
  }
  uint64_t v5 = v2;
  if (*(void *)(v3 + 16) == v2) {
    goto LABEL_38;
  }
  uint64_t v6 = v1;
  uint64_t v7 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<UUID>);
  uint64_t v8 = OUTLINED_FUNCTION_60_12();
  uint64_t v9 = v8;
  uint64_t v37 = v7;
  uint64_t v38 = v6;
  if (v6 < 1) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = *v7;
  }
  uint64_t v11 = 0;
  uint64_t v12 = v8 + 56;
  while (1)
  {
    if (v10)
    {
      OUTLINED_FUNCTION_57_13();
      uint64_t v39 = v13;
    }
    else
    {
      uint64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_41;
      }
      if (v14 >= v38)
      {
LABEL_37:
        swift_release();
        goto LABEL_38;
      }
      uint64_t v15 = v37[v14];
      uint64_t v16 = v11 + 1;
      if (!v15)
      {
        uint64_t v16 = v11 + 2;
        if (v11 + 2 >= v38) {
          goto LABEL_37;
        }
        uint64_t v15 = v37[v16];
        if (!v15)
        {
          uint64_t v16 = v11 + 3;
          if (v11 + 3 >= v38) {
            goto LABEL_37;
          }
          uint64_t v15 = v37[v16];
          if (!v15)
          {
            uint64_t v17 = v11 + 4;
            if (v11 + 4 >= v38) {
              goto LABEL_37;
            }
            uint64_t v15 = v37[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_42;
                }
                if (v16 >= v38) {
                  goto LABEL_37;
                }
                uint64_t v15 = v37[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v11 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v10 = (v15 - 1) & v15;
      uint64_t v39 = v16;
    }
    uint64_t v18 = type metadata accessor for UUID();
    uint64_t v40 = &v37;
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x1F4188790](v18);
    uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v22 = v4;
    uint64_t v24 = *(void *)(v23 + 72);
    OUTLINED_FUNCTION_2_1();
    v25();
    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1F418BB00]);
    dispatch thunk of Hashable._rawHashValue(seed:)();
    OUTLINED_FUNCTION_56_17();
    if (((v28 << v27) & ~*(void *)(v12 + 8 * v26)) == 0) {
      break;
    }
    OUTLINED_FUNCTION_38_0();
LABEL_35:
    OUTLINED_FUNCTION_23_41();
    *(void *)(v12 + v33) |= v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(*(void *)(v9 + 48) + v35 * v24, v21, v18);
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_40;
    }
    uint64_t v4 = v22;
    uint64_t v11 = v39;
    if (!v5) {
      goto LABEL_37;
    }
  }
  OUTLINED_FUNCTION_36_15();
  while (1)
  {
    OUTLINED_FUNCTION_111();
    if (v32)
    {
      if (v29) {
        break;
      }
    }
    if (v30 == v31) {
      uint64_t v30 = 0;
    }
    if (*(void *)(v12 + 8 * v30) != -1)
    {
      OUTLINED_FUNCTION_37_1();
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;

  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v38 = v6;
  uint64_t v7 = type metadata accessor for Participant();
  OUTLINED_FUNCTION_5_3();
  uint64_t v39 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_21();
  uint64_t v12 = v11 - v10;
  if (!v3)
  {
LABEL_37:
    swift_release();
LABEL_38:
    OUTLINED_FUNCTION_28();
    return;
  }
  if (*(void *)(v1 + 16) == v3) {
    goto LABEL_38;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<Participant>);
  uint64_t v13 = OUTLINED_FUNCTION_60_12();
  uint64_t v14 = v13;
  uint64_t v37 = v5;
  if (v5 < 1) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = *v38;
  }
  uint64_t v16 = 0;
  uint64_t v17 = v13 + 56;
  while (1)
  {
    if (v15)
    {
      uint64_t v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      uint64_t v19 = v18 | (v16 << 6);
      goto LABEL_25;
    }
    uint64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_41;
    }
    if (v20 >= v37) {
      goto LABEL_37;
    }
    uint64_t v21 = v38[v20];
    ++v16;
    if (!v21)
    {
      uint64_t v16 = v20 + 1;
      if (v20 + 1 >= v37) {
        goto LABEL_37;
      }
      uint64_t v21 = v38[v16];
      if (!v21)
      {
        uint64_t v16 = v20 + 2;
        if (v20 + 2 >= v37) {
          goto LABEL_37;
        }
        uint64_t v21 = v38[v16];
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v15 = (v21 - 1) & v21;
    uint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_25:
    uint64_t v23 = v1;
    uint64_t v24 = *(void *)(v1 + 48);
    uint64_t v25 = *(void *)(v39 + 72);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v39 + 16))(v12, v24 + v25 * v19, v7);
    lazy protocol witness table accessor for type FeatureEligibility and conformance FeatureEligibility((unint64_t *)&lazy protocol witness table cache variable for type Participant and conformance Participant, MEMORY[0x1E4F294B8]);
    dispatch thunk of Hashable._rawHashValue(seed:)();
    OUTLINED_FUNCTION_56_17();
    if (((v28 << v27) & ~*(void *)(v17 + 8 * v26)) == 0)
    {
      OUTLINED_FUNCTION_36_15();
      while (1)
      {
        OUTLINED_FUNCTION_111();
        if (v32)
        {
          if (v29) {
            break;
          }
        }
        if (v30 == v31) {
          uint64_t v30 = 0;
        }
        if (*(void *)(v17 + 8 * v30) != -1)
        {
          OUTLINED_FUNCTION_37_1();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    OUTLINED_FUNCTION_38_0();
LABEL_35:
    OUTLINED_FUNCTION_23_41();
    *(void *)(v17 + v33) |= v34;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(*(void *)(v14 + 48) + v35 * v25, v12, v7);
    OUTLINED_FUNCTION_31_45();
    if (v36) {
      goto LABEL_40;
    }
    uint64_t v1 = v23;
  }
  uint64_t v22 = v20 + 3;
  if (v22 >= v37) {
    goto LABEL_37;
  }
  uint64_t v21 = v38[v22];
  if (v21)
  {
    uint64_t v16 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v37) {
      goto LABEL_37;
    }
    uint64_t v21 = v38[v16];
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_42:
  __break(1u);
}

void specialized _NativeSet.extractSubset(using:count:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (!a3)
  {
LABEL_36:
    swift_release();
    return;
  }
  if (*(void *)(a4 + 16) == a3) {
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v8 = OUTLINED_FUNCTION_60_12();
  uint64_t v9 = v8;
  uint64_t v30 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = v8 + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_40;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v30[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v30[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v30[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = *(void *)(v9 + 40);
    id v19 = *(id *)(*(void *)(a4 + 48) + 8 * v14);
    NSObject._rawHashValue(seed:)(v18);
    OUTLINED_FUNCTION_56_17();
    if (((-1 << v21) & ~*(void *)(v12 + 8 * v20)) == 0)
    {
      OUTLINED_FUNCTION_36_15();
      while (1)
      {
        OUTLINED_FUNCTION_111();
        if (v25)
        {
          if (v22) {
            break;
          }
        }
        if (v23 == v24) {
          uint64_t v23 = 0;
        }
        if (*(void *)(v12 + 8 * v23) != -1)
        {
          OUTLINED_FUNCTION_37_1();
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    OUTLINED_FUNCTION_38_0();
LABEL_34:
    OUTLINED_FUNCTION_23_41();
    *(void *)(v12 + v26) |= v27;
    *(void *)(*(void *)(v9 + 48) + 8 * v28) = v19;
    OUTLINED_FUNCTION_31_45();
    if (v29) {
      goto LABEL_39;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v30[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v30[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
}

void specialized _NativeSet.extractSubset(using:count:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3)
  {
LABEL_36:
    swift_release();
    return;
  }
  if (*(void *)(a4 + 16) == a3) {
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<String>);
  uint64_t v6 = OUTLINED_FUNCTION_60_12();
  uint64_t v7 = v6;
  uint64_t v28 = a2;
  if (a2 < 1) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = *a1;
  }
  uint64_t v9 = 0;
  uint64_t v10 = v6 + 56;
  while (1)
  {
    if (v8)
    {
      OUTLINED_FUNCTION_57_13();
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    uint64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_40;
    }
    if (v13 >= v28) {
      goto LABEL_36;
    }
    unint64_t v14 = a1[v13];
    ++v9;
    if (!v14)
    {
      uint64_t v9 = v13 + 1;
      if (v13 + 1 >= v28) {
        goto LABEL_36;
      }
      unint64_t v14 = a1[v9];
      if (!v14)
      {
        uint64_t v9 = v13 + 2;
        if (v13 + 2 >= v28) {
          goto LABEL_36;
        }
        unint64_t v14 = a1[v9];
        if (!v14) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    unint64_t v16 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v12);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Hasher._finalize()();
    OUTLINED_FUNCTION_56_17();
    if (((-1 << v20) & ~*(void *)(v10 + 8 * v19)) == 0)
    {
      OUTLINED_FUNCTION_36_15();
      while (1)
      {
        OUTLINED_FUNCTION_111();
        if (v25)
        {
          if (v22) {
            break;
          }
        }
        if (v23 == v24) {
          uint64_t v23 = 0;
        }
        if (*(void *)(v10 + 8 * v23) != -1)
        {
          OUTLINED_FUNCTION_37_1();
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    OUTLINED_FUNCTION_38_0();
LABEL_34:
    *(void *)(v10 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v26 = (void *)(*(void *)(v7 + 48) + 16 * v21);
    *uint64_t v26 = v17;
    v26[1] = v18;
    OUTLINED_FUNCTION_31_45();
    if (v27) {
      goto LABEL_39;
    }
  }
  uint64_t v15 = v13 + 3;
  if (v15 >= v28) {
    goto LABEL_36;
  }
  unint64_t v14 = a1[v15];
  if (v14)
  {
    uint64_t v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v28) {
      goto LABEL_36;
    }
    unint64_t v14 = a1[v9];
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
}

id specialized ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(void *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v58 = a1;
  uint64_t v59 = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<RemoteControlState>);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  char v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62[3] = a6;
  id v62[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v62);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a3, a6);
  *(void *)&a4[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_sessionObserverTask] = 0;
  char v22 = &a4[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_groupSessionStateCancellable];
  *(_OWORD *)char v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  *((void *)v22 + 4) = 0;
  uint64_t v23 = OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_lock;
  type metadata accessor for Lock();
  uint64_t v24 = swift_allocObject();
  char v25 = a4;
  uint64_t v26 = (_DWORD *)swift_slowAlloc();
  *(void *)(v24 + 16) = v26;
  *uint64_t v26 = 0;
  *(void *)&a4[v23] = v24;
  uint64_t v27 = OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_observers;
  *(void *)&v25[v27] = objc_msgSend(self, sel_weakObjectsHashTable);
  uint64_t v28 = &v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__session];
  unint64_t v61 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScreenSharingInteractionSession?);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v28, v20, v17);
  uint64_t v29 = (uint64_t)&v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_latestRemoteControlDate];
  uint64_t v30 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v29, 1, 1, v30);
  v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_hasJoinedOneToOneConversation] = 0;
  v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_isBroadcastingScreenSharing] = 0;
  uint64_t v31 = &v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__remoteControlState];
  unint64_t v61 = 0xA000000000000000;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v31, v16, v13);
  char v32 = &v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_onUpdateUI];
  *(void *)char v32 = TPNumberPadCharacter.rawValue.getter;
  *((void *)v32 + 1) = 0;
  if (one-time initialization token for screenSharing != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  __swift_project_value_buffer(v33, (uint64_t)static Log.screenSharing);
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl(&dword_1C2F90000, v34, v35, "Setting up DeviceRestrictionController and disabling restrictions on launch", v36, 2u);
    MEMORY[0x1C87760E0](v36, -1, -1);
  }

  uint64_t v37 = &v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_deviceRestrictionController];
  uint64_t v38 = type metadata accessor for DeviceRestrictionController();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v37, v59, v38);
  DeviceRestrictionController.setRestrictionsActive(_:)(0);
  outlined init with copy of IDSLookupManager((uint64_t)v62, (uint64_t)&v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_eligibilityChecker]);

  uint64_t v41 = (objc_class *)type metadata accessor for ScreenSharingInteractionController();
  v60.receiver = v25;
  v60.super_class = v41;
  id v42 = objc_msgSendSuper2(&v60, sel_init);
  id v43 = v58;
  if ((objc_msgSend(v58, sel_screenSharingDrawToHighlightEnabled) & 1) != 0
    || objc_msgSend(v43, sel_screenSharingRemoteControlEnabled))
  {
    if (one-time initialization token for sharedMonitor != -1) {
      swift_once();
    }
    BOOL v44 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static ScreenSharingStateMonitor.sharedMonitor) + 0x140);
    id v45 = v42;
    v44();

    uint64_t v46 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v57, 1, 1, v46);
    type metadata accessor for MainActor();
    uint64_t v47 = (char *)v45;
    uint64_t v48 = static MainActor.shared.getter();
    uint64_t v49 = (void *)swift_allocObject();
    uint64_t v50 = MEMORY[0x1E4FBCFD8];
    void v49[2] = v48;
    v49[3] = v50;
    v49[4] = v47;
    uint64_t v51 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
    *(void *)&v47[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_sessionObserverTask] = v51;
    swift_release();
  }
  else
  {
    if (one-time initialization token for screenTime != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v33, (uint64_t)static Log.screenTime);
    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl(&dword_1C2F90000, v52, v53, "Not starting screen sharing interaction controller, as the correct feature flags are not set.", v54, 2u);
      MEMORY[0x1C87760E0](v54, -1, -1);
    }

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
  }
  return v42;
}

uint64_t sub_1C373A0DC()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionController.notifyObserversOfUpdatedRemoteControlStatus()(void *a1)
{
  return closure #1 in ScreenSharingInteractionController.notifyObserversOfUpdatedRemoteControlStatus()(a1, *(unsigned char *)(v1 + 16));
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()(v3, v4, v5, v6);
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionController.cancelRemoteControlRequest()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ScreenSharingInteractionController.cancelRemoteControlRequest()(v3, v4, v5, v6);
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionController.endRemoteControlSession()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ScreenSharingInteractionController.endRemoteControlSession()(v3, v4, v5, v6);
}

uint64_t sub_1C373A2B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C373A2EC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ScreenSharingInteractionController.notifyObservers(with:)()
{
  return closure #2 in ScreenSharingInteractionController.notifyObservers(with:)(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t outlined init with copy of RemoteControlMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteControlMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of RemoteControlMessage(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoteControlMessage(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C373A3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ScreenSharingInteractionController.$session : ScreenSharingInteractionController(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>.Publisher, ScreenSharingInteractionController.$session.setter);
}

uint64_t sub_1C373A444(char *a1)
{
  return ScreenSharingInteractionController.isBroadcastingScreenSharing.setter(*a1);
}

uint64_t sub_1C373A470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ScreenSharingInteractionController.$session : ScreenSharingInteractionController(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<RemoteControlState>.Publisher, ScreenSharingInteractionController.$remoteControlState.setter);
}

unsigned char *storeEnumTagSinglePayload for ScreenSharingInteractionActivity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C373A578);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for CNKScreenSharingInteractionControllerFactory(uint64_t a1)
{
  return type metadata accessor for NSObject(a1, &lazy cache variable for type metadata for CNKScreenSharingInteractionControllerFactory);
}

uint64_t ObjC metadata update function for ScreenSharingInteractionController()
{
  return type metadata accessor for ScreenSharingInteractionController();
}

uint64_t method lookup function for ScreenSharingInteractionController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScreenSharingInteractionController);
}

uint64_t dispatch thunk of ScreenSharingInteractionController.session.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.$session.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.latestRemoteControlDate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.hasJoinedOneToOneConversation.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.hasJoinedOneToOneConversation.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.hasJoinedOneToOneConversation.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.isBroadcastingScreenSharing.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.remoteControlState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.$remoteControlState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.onUpdateUI.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.onUpdateUI.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.onUpdateUI.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.__allocating_init(featureFlags:deviceRestrictionController:eligibilityChecker:)()
{
  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.addDelegate(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.removeDelegate(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.notifyObserversOfUpdatedRemoteControlStatus()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.sessionDidRequestRemoteControl(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.handleRemoteControlUserResponse(allowRemoteControl:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.cancelRemoteControlRequest()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.endRemoteControlSession()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.notifyObservers(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x220))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.requestRemoteControl()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_20();
  uint64_t v14 = (void *)(v1 + 552);
  uint64_t v13 = *v14 + *(int *)*v14;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  OUTLINED_FUNCTION_157_0((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12, v13, (uint64_t)v14);
  return v10();
}

unsigned char *storeEnumTagSinglePayload for ScreenSharingInteractionActivity.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C373AC68);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *type metadata accessor for ScreenSharingInteractionActivity.CodingKeys()
{
  return &unk_1F1EBD510;
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionController.startInteractionSession()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ScreenSharingInteractionController.startInteractionSession()(v3, v4, v5, v6);
}

uint64_t sub_1C373AE24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t protocol witness for GroupActivity.metadata.getter in conformance ScreenSharingInteractionActivity(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t lazy protocol witness table accessor for type FeatureEligibility and conformance FeatureEligibility(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C373AEB0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C373AEE8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(uint64_t a1)
{
  closure #1 in closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t OUTLINED_FUNCTION_41_31()
{
  return 7104878;
}

id LinkCreationCoordinator.__allocating_init(parentViewController:)()
{
  id v1 = objc_allocWithZone(v0);
  swift_getObjectType();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_8_10();
  return specialized LinkCreationCoordinator.init(parentViewController:)(v2, v3, v4, v5);
}

id TUStringShareItem.__allocating_init(message:)(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = (void *)MEMORY[0x1C87730B0](a1, a2);
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithMessage_, v5);

  return v6;
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed UIActivityType?, @unowned Bool, @guaranteed [Any]?, @guaranteed Error?) -> ()(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  if (a4) {
    uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v9 = 0;
  }
  swift_retain();
  id v10 = a2;
  id v11 = a5;
  v8(a2, a3, v9, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t key path getter for LinkCreationCoordinator.parentViewController : LinkCreationCoordinator@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x68))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

void key path setter for LinkCreationCoordinator.parentViewController : LinkCreationCoordinator(uint64_t a1)
{
}

uint64_t LinkCreationCoordinator.parentViewController.getter()
{
  return swift_unknownObjectUnownedLoadStrong();
}

void LinkCreationCoordinator.parentViewController.setter(void *a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_parentViewController;
  swift_beginAccess();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectUnownedAssign();
}

void LinkCreationCoordinator.shareSheetViewController.setter(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_shareSheetViewController);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_shareSheetViewController) = a1;
}

void LinkCreationCoordinator.conversationLink.didset()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_shareSheetViewController);
    if (v2)
    {
      id v3 = objc_allocWithZone(MEMORY[0x1E4FADBF0]);
      outlined copy of ConversationLink?(v1);
      id v4 = v2;
      id v5 = objc_msgSend(v3, sel_initWithTUConversationLink_, v1);
      uint64_t v6 = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUStringShareItem);
      id v7 = objc_msgSend(self, sel_conversationKit);
      v19._object = (void *)0xE000000000000000;
      v8._object = (void *)0x80000001C3799820;
      v8._uint64_t countAndFlagsBits = 0xD000000000000010;
      v9.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
      v9.value._object = (void *)0xEF74694B6E6F6974;
      v10._uint64_t countAndFlagsBits = 0;
      v10._object = (void *)0xE000000000000000;
      v19._uint64_t countAndFlagsBits = 0;
      Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v19);

      id v12 = TUStringShareItem.__allocating_init(message:)(v11._countAndFlagsBits, (uint64_t)v11._object);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1C37696D0;
      uint64_t v14 = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TULinkShareItem);
      *(void *)(v13 + 32) = v5;
      *(void *)(v13 + 88) = v6;
      *(void *)(v13 + 56) = v14;
      *(void *)(v13 + 64) = v12;
      id v15 = v5;
      id v16 = v12;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel__updateActivityItems_, isa);

      outlined consume of ConversationLink?(v1);
    }
  }
}

void *LinkCreationCoordinator.conversationLink.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink + 8);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink + 16);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return outlined copy of ConversationLink?(v2);
}

void LinkCreationCoordinator.conversationLink.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a1;
  *(void *)(v3 + 16) = v2;
  outlined consume of ConversationLink?(v4);
  LinkCreationCoordinator.conversationLink.didset();
}

id LinkCreationCoordinator.init(parentViewController:)()
{
  swift_getObjectType();
  uint64_t v0 = (void *)OUTLINED_FUNCTION_8_10();
  return specialized LinkCreationCoordinator.init(parentViewController:)(v0, v1, v2, v3);
}

Swift::Void __swiftcall LinkCreationCoordinator.start(from:)(UIView *from)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  id v3 = objc_msgSend(v2, sel_conversationManager);

  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E4FBC860]);
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = from;
  void v9[4] = partial apply for closure #1 in LinkCreationCoordinator.start(from:);
  v9[5] = v6;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  long long v9[2] = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
  v9[3] = &block_descriptor_123;
  id v7 = _Block_copy(v9);
  Swift::String v8 = from;
  swift_release();
  objc_msgSend(v3, sel_generateLinkWithInvitedMemberHandles_linkLifetimeScope_completionHandler_, isa, 0, v7);
  _Block_release(v7);
}

uint64_t closure #1 in LinkCreationCoordinator.start(from:)(void *a1, void *a2, uint64_t a3, void *a4)
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  Swift::String v8 = (void *)static OS_dispatch_queue.main.getter();
  Swift::String_optional v9 = (void *)swift_allocObject();
  long long v9[2] = a3;
  v9[3] = a1;
  void v9[4] = a4;
  v9[5] = a2;
  aBlock[4] = partial apply for closure #1 in closure #1 in LinkCreationCoordinator.start(from:);
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_36_1;
  Swift::String v10 = _Block_copy(aBlock);
  swift_retain();
  id v11 = a1;
  id v12 = a4;
  id v13 = a2;
  swift_release();
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)aBlock - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v18 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  unint64_t v21 = (char *)aBlock - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC860];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C8773BA0](0, v17, v21, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

void closure #1 in closure #1 in LinkCreationCoordinator.start(from:)(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C8776240](v7);
  if (v8)
  {
    Swift::String_optional v9 = (void *)v8;
    if (a2)
    {
      id v10 = a2;
      if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
      {
        specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E4FBC860]);
        uint64_t v11 = v25;
      }
      else
      {
        uint64_t v11 = MEMORY[0x1E4FBC870];
      }
      if (one-time initialization token for faceTime != -1) {
        swift_once();
      }
      id v12 = static ParticipantContactDetailsCache.faceTime;
      uint64_t v13 = one-time initialization token for conversationKit;
      swift_retain();
      if (v13 != -1) {
        swift_once();
      }
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      id v26 = a2;
      uint64_t v27 = v11;
      uint64_t v28 = v12;
      id v14 = v10;
      swift_bridgeObjectRetain();
      swift_retain();
      LinkCreationCoordinator.conversationLink.setter((uint64_t)&v26);
      id v26 = v14;
      uint64_t v27 = v11;
      uint64_t v28 = v12;
      LinkCreationCoordinator.shareLink(_:from:)(&v26, a3);
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C3769620;
      if (a4)
      {
        id v26 = a4;
        id v16 = a4;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
        uint64_t v17 = String.init<A>(reflecting:)();
        unint64_t v19 = v18;
      }
      else
      {
        unint64_t v19 = 0xE300000000000000;
        uint64_t v17 = 7104878;
      }
      *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v15 + 32) = v17;
      *(void *)(v15 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v19;
      os_log(_:dso:log:type:_:)();
      uint64_t v20 = swift_bridgeObjectRelease();
      unint64_t v21 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v9) + 0x68))(v20);
      uint64_t v23 = v22;
      uint64_t ObjectType = swift_getObjectType();
      id v26 = v21;
      (*(void (**)(void *, uint64_t, uint64_t))(v23 + 16))(v9, ObjectType, v23);
    }
  }
}

void LinkCreationCoordinator.shareLink(_:from:)(void *a1, uint64_t a2)
{
  id v3 = v2;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBF0]), sel_initWithTUConversationLink_, *a1);
  uint64_t v6 = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUStringShareItem);
  id v7 = objc_msgSend(self, sel_conversationKit);
  v32._object = (void *)0xE000000000000000;
  v8._object = (void *)0x80000001C3799820;
  v8._uint64_t countAndFlagsBits = 0xD000000000000010;
  v9.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
  v9.value._object = (void *)0xEF74694B6E6F6974;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v32._uint64_t countAndFlagsBits = 0;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v32);

  id v12 = TUStringShareItem.__allocating_init(message:)(v11._countAndFlagsBits, (uint64_t)v11._object);
  type metadata accessor for LinkShareActivityViewController();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C37696D0;
  uint64_t v14 = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TULinkShareItem);
  *(void *)(v13 + 32) = v5;
  *(void *)(v13 + 88) = v6;
  *(void *)(v13 + 56) = v14;
  *(void *)(v13 + 64) = v12;
  id v15 = v5;
  id v16 = v12;
  id v17 = LinkShareActivityViewController.__allocating_init(activityItems:applicationActivities:)(v13, 0);
  objc_msgSend(v17, sel_setObjectManipulationDelegate_, v3);
  objc_msgSend(v17, sel_setOverrideUserInterfaceStyle_, 2);
  objc_msgSend(v17, sel_setAllowsCustomPresentationStyle_, 1);
  id v18 = objc_msgSend(self, sel_currentDevice);
  id v19 = objc_msgSend(v18, sel_userInterfaceIdiom);

  uint64_t v20 = (void *)MEMORY[0x1E4FBC8C8];
  if (v19 == (id)1)
  {
    unint64_t v21 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x68))();
    id v22 = objc_msgSend(v21, sel_traitCollection);

    id v23 = objc_msgSend(v22, sel_horizontalSizeClass);
    if (v23 == (id)2) {
      objc_msgSend(v17, sel_setModalPresentationStyle_, 2);
    }
  }
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in LinkCreationCoordinator.shareLink(_:from:);
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIActivityType?, @unowned Bool, @guaranteed [Any]?, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_40_3;
  uint64_t v25 = _Block_copy(aBlock);
  id v26 = v17;
  swift_release();
  objc_msgSend(v26, sel_setCompletionWithItemsHandler_, v25);
  _Block_release(v25);

  id v27 = objc_msgSend(v26, sel_popoverPresentationController);
  if (v27)
  {
    uint64_t v28 = v27;
    objc_msgSend(v27, sel_setSourceView_, a2);
  }
  uint64_t v29 = (void *)(*(uint64_t (**)(void))((*v20 & *v3) + 0x68))();
  objc_msgSend(v29, sel_presentViewController_animated_completion_, v26, 1, 0);

  id v30 = v26;
  LinkCreationCoordinator.shareSheetViewController.setter((uint64_t)v26);
}

Swift::Void __swiftcall LinkCreationCoordinator.stop()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_shareSheetViewController);
  if (v1) {
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

id LinkCreationCoordinator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void LinkCreationCoordinator.init()()
{
}

id LinkCreationCoordinator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LinkCreationCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void LinkCreationCoordinator.renameLink(to:)(uint64_t a1, uint64_t a2)
{
  LinkCreationCoordinator.conversationLink.getter(v11);
  id v4 = v11[0];
  if (v11[0])
  {
    id v5 = v11[0];
    outlined consume of ConversationLink?(v4);
    id v6 = objc_msgSend(self, sel_sharedInstance);
    id v7 = objc_msgSend(v6, sel_conversationManager);

    Swift::String v8 = (void *)MEMORY[0x1C87730B0](a1, a2);
    Swift::String_optional v9 = (void *)swift_allocObject();
    swift_unknownObjectWeakInit();
    v11[4] = partial apply for closure #1 in LinkCreationCoordinator.renameLink(to:);
    v11[5] = v9;
    v11[0] = (id)MEMORY[0x1E4F143A8];
    v11[1] = (id)1107296256;
    void v11[2] = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
    v11[3] = &block_descriptor_24_3;
    Swift::String v10 = _Block_copy(v11);
    swift_release();
    objc_msgSend(v7, sel_setLinkName_forConversationLink_completionHandler_, v8, v5, v10);
    _Block_release(v10);
  }
}

uint64_t closure #1 in LinkCreationCoordinator.renameLink(to:)(void *a1, void *a2, uint64_t a3)
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  id v6 = (void *)static OS_dispatch_queue.main.getter();
  id v7 = (void *)swift_allocObject();
  id v7[2] = a3;
  _OWORD v7[3] = a1;
  id v7[4] = a2;
  aBlock[4] = partial apply for closure #1 in closure #1 in LinkCreationCoordinator.renameLink(to:);
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_30_1;
  Swift::String v8 = _Block_copy(aBlock);
  swift_retain();
  id v9 = a1;
  id v10 = a2;
  swift_release();
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v15 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)aBlock - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC860];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C8773BA0](0, v14, v18, v8);
  _Block_release(v8);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void closure #1 in closure #1 in LinkCreationCoordinator.renameLink(to:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  if (v6)
  {
    id v7 = (void *)v6;
    if (a2)
    {
      id v8 = a2;
      if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
      {
        specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E4FBC860]);
        uint64_t v9 = v15;
      }
      else
      {
        uint64_t v9 = MEMORY[0x1E4FBC870];
      }
      if (one-time initialization token for faceTime != -1) {
        swift_once();
      }
      v16[0] = a2;
      v16[1] = v9;
      v16[2] = static ParticipantContactDetailsCache.faceTime;
      swift_retain();
      LinkCreationCoordinator.conversationLink.setter((uint64_t)v16);
    }
    else
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1C3769620;
      if (a3)
      {
        v16[0] = a3;
        id v11 = a3;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
        uint64_t v12 = String.init<A>(reflecting:)();
        unint64_t v14 = v13;
      }
      else
      {
        unint64_t v14 = 0xE300000000000000;
        uint64_t v12 = 7104878;
      }
      *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v10 + 32) = v12;
      *(void *)(v10 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v14;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
    }
  }
}

void closure #1 in LinkCreationCoordinator.shareLink(_:from:)(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8 = a5 + 16;
  swift_beginAccess();
  uint64_t v9 = (void *)MEMORY[0x1C8776240](v8);
  if (v9)
  {
    uint64_t v10 = v9;
    if (a4)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C3769620;
      id v12 = a4;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      uint64_t v13 = String.init<A>(reflecting:)();
      uint64_t v15 = v14;
      *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v11 + 32) = v13;
      *(void *)(v11 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v15;
      os_log(_:dso:log:type:_:)();
      uint64_t v16 = swift_bridgeObjectRelease();
      uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x68))(v16);
      uint64_t v19 = v18;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v19 + 16))(v10, ObjectType, v19);
    }
    else
    {
      if (!a1)
      {
        uint64_t v10 = v9;
        specialized LinkCreationCoordinator.invalidateLink(completionHandler:)((uint64_t)v10, v10);
        goto LABEL_7;
      }
      if ((a2 & 1) == 0)
      {
LABEL_7:

        return;
      }
      uint64_t v17 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v9) + 0x68))();
      uint64_t v22 = v21;
      uint64_t v23 = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v22 + 8))(v10, v23, v22);
    }

    goto LABEL_7;
  }
}

void closure #1 in closure #1 in LinkCreationCoordinator.shareLink(_:from:)(void *a1)
{
  objc_super v2 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x68))();
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);
}

void specialized LinkCreationCoordinator.invalidateLink(completionHandler:)(uint64_t a1, void *a2)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a2;
  LinkCreationCoordinator.conversationLink.getter(v16);
  uint64_t v4 = (void *)v16[0];
  if (v16[0])
  {
    uint64_t v5 = a2;
    id v6 = v4;
    outlined consume of ConversationLink?(v4);
    id v7 = objc_msgSend(self, sel_sharedInstance);
    id v8 = objc_msgSend(v7, sel_conversationManager);

    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = partial apply for closure #1 in closure #1 in LinkCreationCoordinator.shareLink(_:from:);
    *(void *)(v9 + 24) = v3;
    v16[4] = partial apply for closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:);
    v16[5] = v9;
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 1107296256;
    v16[2] = thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
    void v16[3] = &block_descriptor_49_4;
    uint64_t v10 = _Block_copy(v16);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_invalidateLink_completionHandler_, v6, v10);
    _Block_release(v10);

    swift_release();
  }
  else
  {
    uint64_t v11 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a2) + 0x68);
    id v12 = a2;
    id v8 = (id)v11();
    uint64_t v14 = v13;
    uint64_t ObjectType = swift_getObjectType();
    v16[0] = v8;
    (*(void (**)(void *, uint64_t, uint64_t))(v14 + 8))(v12, ObjectType, v14);

    swift_release();
  }
}

uint64_t closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:)(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  id v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a4;
  aBlock[4] = partial apply for closure #1 in closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:);
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_55_0;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = a2;
  swift_retain();
  swift_release();
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v16 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)aBlock - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC860];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C8773BA0](0, v15, v19, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t closure #1 in closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:)(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  if ((a1 & 1) == 0)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C3769620;
    if (a2)
    {
      id v6 = a2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      uint64_t v7 = String.init<A>(reflecting:)();
      unint64_t v9 = v8;
    }
    else
    {
      unint64_t v9 = 0xE300000000000000;
      uint64_t v7 = 7104878;
    }
    *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v5 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v5 + 32) = v7;
    *(void *)(v5 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v9;
    os_log(_:dso:log:type:_:)();
    a1 = swift_bridgeObjectRelease();
  }
  return a3(a1);
}

Swift::Bool __swiftcall LinkCreationCoordinator._customizationAvailable(for:)(UIActivityViewController *a1)
{
  return 1;
}

uint64_t LinkCreationCoordinator._customizationGroups(for:)()
{
  return MEMORY[0x1E4FBC860];
}

Swift::String __swiftcall LinkCreationCoordinator.customLocalizedActionTitle(for:)(UIActivityViewController *a1)
{
  id v1 = objc_msgSend(self, sel_conversationKit);
  uint64_t v2 = OUTLINED_FUNCTION_11_1(0xD00000000000001CLL, 0x80000001C37BFD10);
  uint64_t v4 = v3;

  uint64_t v5 = v2;
  id v6 = v4;
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

void __swiftcall LinkCreationCoordinator.customActionViewController(for:)(UIViewController *__return_ptr retstr, UIActivityViewController *a2)
{
  uint64_t v3 = v2;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_conversationKit);
  uint64_t v6 = OUTLINED_FUNCTION_11_1(0xD000000000000019, 0x80000001C37BFD30);
  uint64_t v8 = v7;

  id v9 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v6, v8, 0, 0, 1);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v2;
  aBlock[4] = partial apply for closure #1 in LinkCreationCoordinator.customActionViewController(for:);
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  aBlock[3] = &block_descriptor_9_4;
  id v11 = _Block_copy(aBlock);
  id v12 = v3;
  swift_release();
  objc_msgSend(v9, sel_addTextFieldWithConfigurationHandler_, v11, 0xE000000000000000);
  _Block_release(v11);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIAlertAction);
  id v13 = objc_msgSend(v4, sel_conversationKit);
  v31._object = (void *)0xE000000000000000;
  OUTLINED_FUNCTION_4_6();
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v31._uint64_t countAndFlagsBits = 0;
  Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v13, v14, v31);

  uint64_t v18 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = v12;
  uint64_t v20 = v12;
  id v21 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v17._countAndFlagsBits, (uint64_t)v17._object, 0, (uint64_t)partial apply for closure #2 in LinkCreationCoordinator.customActionViewController(for:), v19);
  id v22 = objc_msgSend(v4, sel_conversationKit);
  v32._object = (void *)0xE000000000000000;
  OUTLINED_FUNCTION_4_6();
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v32._uint64_t countAndFlagsBits = 0;
  Swift::String v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v22, v23, v32);

  id v27 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v26._countAndFlagsBits, (uint64_t)v26._object, 1, 0, 0);
  objc_msgSend(v9, sel_addAction_, v21);
  id v28 = objc_msgSend(v9, sel_addAction_, v27);
  uint64_t v29 = (void *)(*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & *v20) + 0x68))(v28);
  objc_msgSend(v9, sel_showViewController_sender_, v29, 0);
}

id closure #1 in LinkCreationCoordinator.customActionViewController(for:)(void *a1)
{
  LinkCreationCoordinator.conversationLink.getter(&v14);
  id v2 = v14;
  if (v14
    && (id v3 = v14,
        outlined consume of ConversationLink?(v2),
        uint64_t v4 = outlined bridged method (ob) of @objc TUConversationLink.linkName.getter(v3),
        v5))
  {
    uint64_t countAndFlagsBits = v4;
    object = v5;
  }
  else
  {
    id v8 = objc_msgSend(self, sel_conversationKit);
    v16._object = (void *)0xE000000000000000;
    v9._uint64_t countAndFlagsBits = 0x454D495445434146;
    v9._object = (void *)0xED00004B4E494C5FLL;
    v10.value._uint64_t countAndFlagsBits = 0x61737265766E6F43;
    v10.value._object = (void *)0xEF74694B6E6F6974;
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v16._uint64_t countAndFlagsBits = 0;
    Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v16);
    uint64_t countAndFlagsBits = v12._countAndFlagsBits;
    object = v12._object;
    swift_bridgeObjectRelease();
  }
  outlined bridged method (mbnn) of @objc UITextField.placeholder.setter(countAndFlagsBits, (uint64_t)object, a1);
  return objc_msgSend(a1, sel_setAutocapitalizationType_, 2);
}

void closure #2 in LinkCreationCoordinator.customActionViewController(for:)()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  unint64_t v1 = outlined bridged method (ob) of @objc UIAlertController.textFields.getter(Strong);
  if (!v1) {
    return;
  }
  unint64_t v2 = v1;
  if (!(v1 >> 62))
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_12;
  }
LABEL_4:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0) {
    id v3 = (id)MEMORY[0x1C87744F0](0, v2);
  }
  else {
    id v3 = *(id *)(v2 + 32);
  }
  id v7 = v3;
  swift_bridgeObjectRelease();
  uint64_t v4 = outlined bridged method (pb) of @objc UILabel.text.getter(v7);
  if (v5)
  {
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v6) {
      LinkCreationCoordinator.renameLink(to:)(v4, v5);
    }

    goto LABEL_12;
  }
}

void outlined bridged method (mbnn) of @objc UITextField.placeholder.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setPlaceholder_, v4);
}

uint64_t outlined bridged method (ob) of @objc UIAlertController.textFields.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_textFields);

  if (!v2) {
    return 0;
  }
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UITextField);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id specialized LinkCreationCoordinator.init(parentViewController:)(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&a2[OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_shareSheetViewController] = 0;
  id v7 = &a2[OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink];
  *((void *)v7 + 1) = 0;
  *((void *)v7 + 2) = 0;
  *(void *)id v7 = 0;
  id v8 = &a2[OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_parentViewController];
  swift_beginAccess();
  *((void *)v8 + 1) = a4;
  swift_unknownObjectUnownedInit();
  v11.receiver = a2;
  v11.super_class = (Class)type metadata accessor for LinkCreationCoordinator();
  id v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

uint64_t sub_1C373DA74()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in LinkCreationCoordinator.start(from:)(void *a1, void *a2)
{
  return closure #1 in LinkCreationCoordinator.start(from:)(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t type metadata accessor for LinkCreationCoordinator()
{
  return self;
}

id partial apply for closure #1 in LinkCreationCoordinator.customActionViewController(for:)(void *a1)
{
  return closure #1 in LinkCreationCoordinator.customActionViewController(for:)(a1);
}

uint64_t sub_1C373DADC()
{
  swift_unknownObjectUnownedDestroy();
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

void partial apply for closure #2 in LinkCreationCoordinator.customActionViewController(for:)()
{
}

uint64_t dispatch thunk of LinkCreationCoordinatorDelegate.coordinatorFinished(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of LinkCreationCoordinatorDelegate.coordinatorFailed(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for LinkCreationCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LinkCreationCoordinator);
}

uint64_t dispatch thunk of LinkCreationCoordinator.parentViewController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of LinkCreationCoordinator.__allocating_init(parentViewController:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of LinkCreationCoordinator.start(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of LinkCreationCoordinator.stop()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t partial apply for closure #1 in LinkCreationCoordinator.renameLink(to:)(void *a1, void *a2)
{
  return closure #1 in LinkCreationCoordinator.renameLink(to:)(a1, a2, v2);
}

uint64_t sub_1C373DC18()
{
  swift_release();

  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in LinkCreationCoordinator.renameLink(to:)()
{
  closure #1 in closure #1 in LinkCreationCoordinator.renameLink(to:)(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1C373DC6C()
{
  swift_release();

  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in LinkCreationCoordinator.start(from:)()
{
  closure #1 in closure #1 in LinkCreationCoordinator.start(from:)(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

void partial apply for closure #1 in LinkCreationCoordinator.shareLink(_:from:)(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  closure #1 in LinkCreationCoordinator.shareLink(_:from:)(a1, a2, a3, a4, v4);
}

uint64_t sub_1C373DCD0()
{
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in LinkCreationCoordinator.shareLink(_:from:)()
{
  closure #1 in closure #1 in LinkCreationCoordinator.shareLink(_:from:)(*(void **)(v0 + 16));
}

uint64_t sub_1C373DD08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:)(char a1, void *a2)
{
  return closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:)(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C373DD48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:)()
{
  return closure #1 in closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:)(*(unsigned __int8 *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t BroadcastingState.isMuted.getter(char a1)
{
  return a1 & 1;
}

uint64_t BroadcastingState.isAudioVideo.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 7) & 1;
}

unint64_t BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(a1, a3, a4, a5, ObjectType, a2);
}

uint64_t static BroadcastingState.== infix(_:_:)(unsigned __int16 a1, uint64_t a2, char a3, unint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  unsigned int v6 = (a2 == a5) & (((a3 & 1) == 0) ^ a6);
  if ((((unsigned __int16)a4 ^ a1) & 0xFF00) != 0) {
    unsigned int v6 = 0;
  }
  if (((a1 & 1) == 0) == (a4 & 1)) {
    unsigned int v6 = 0;
  }
  if ((a6 & 0x80) == 0) {
    unsigned int v6 = 0;
  }
  if (((a1 & 1) == 0) == (a4 & 1)) {
    unsigned int v7 = 0;
  }
  else {
    unsigned int v7 = ((a1 & 0x100) == 0) ^ (a4 >> 8) & 1;
  }
  if ((a6 & 0x80) != 0) {
    unsigned int v8 = 0;
  }
  else {
    unsigned int v8 = v7;
  }
  if (a3 < 0) {
    return v6;
  }
  else {
    return v8;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance BroadcastingState(uint64_t a1, uint64_t a2)
{
  return static BroadcastingState.== infix(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t BroadcastingState.cameraPosition.getter(unint64_t a1, uint64_t a2, char a3)
{
  if (a3 < 0) {
    return (a1 >> 8);
  }
  else {
    return 3;
  }
}

uint64_t BroadcastingState.isScreenSharing.getter(__int16 a1, uint64_t a2, char a3)
{
  if (a3 >= 0) {
    char v3 = HIBYTE(a1) & 1;
  }
  else {
    char v3 = a3;
  }
  return v3 & 1;
}

unint64_t specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a6 + 304))(a5, a6) & 1) == 0) {
    goto LABEL_7;
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 152))())
  {
    outlined init with copy of IDSLookupManager((uint64_t)a2, (uint64_t)v37);
    if (a4)
    {
      BOOL v8 = 0;
    }
    else
    {
      uint64_t v17 = v38;
      uint64_t v18 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      id v19 = objc_msgSend((id)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18), sel_currentVideoCalls);
      swift_unknownObjectRelease();
      type metadata accessor for TUCall();
      unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v20 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      BOOL v8 = v21 < 2;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    uint64_t v22 = OUTLINED_FUNCTION_0_116();
    char v24 = v23(v22);
    if (v8)
    {
      unint64_t v25 = 0;
    }
    else
    {
      uint64_t v26 = a2[3];
      uint64_t v27 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v26);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v27 + 32))(v34, v26, v27);
      uint64_t v28 = v35;
      uint64_t v29 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      unsigned __int8 v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      unint64_t v25 = (unint64_t)v30 << 8;
    }
    uint64_t v31 = OUTLINED_FUNCTION_1_154();
    v32(v31);
    swift_unknownObjectRelease();
    unint64_t v16 = v25 | v24 & 1;
  }
  else
  {
LABEL_7:
    uint64_t v9 = OUTLINED_FUNCTION_0_116();
    char v11 = v10(v9);
    uint64_t v12 = OUTLINED_FUNCTION_1_154();
    char v14 = v13(v12);
    swift_unknownObjectRelease();
    if (v14) {
      uint64_t v15 = 256;
    }
    else {
      uint64_t v15 = 0;
    }
    unint64_t v16 = v15 & 0xFFFFFFFFFFFFFFFELL | v11 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v16;
}

uint64_t getEnumTagSinglePayload for BroadcastingState(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 17))
    {
      int v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unsigned int v2 = (*(void *)a1 >> 3) & 0xFFFFFF80 | (*(void *)a1 >> 1);
      if (v2 > 0x80000000) {
        int v3 = ~v2;
      }
      else {
        int v3 = -1;
      }
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for BroadcastingState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)Swift::String result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)Swift::String result = (8 * -a2) & 0x7FFFFFC00 | (2 * (-a2 & 0x7FLL));
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 0;
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTag for BroadcastingState(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t destructiveProjectEnumData for BroadcastingState(uint64_t result)
{
  *(unsigned char *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t destructiveInjectEnumTag for BroadcastingState(uint64_t result, char a2)
{
  char v2 = *(unsigned char *)(result + 16) & 1 | (a2 << 7);
  *(void *)result &= 0x301uLL;
  *(unsigned char *)(result + 16) = v2;
  return result;
}

ValueMetadata *type metadata accessor for BroadcastingState()
{
  return &type metadata for BroadcastingState;
}

BOOL ClarityUIOutgoingCallAction.isPending.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  if (v1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    uint64_t v4 = 0;
  }
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v4);
  return v1 == 0;
}

uint64_t sub_1C373E370()
{
  swift_release();
  return swift_deallocObject();
}

BOOL static ClarityUICallType.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t ClarityUIOutgoingCallAction.init(id:callType:callHandler:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3 & 1;
  *(void *)(a6 + 24) = a4;
  *(void *)(a6 + 32) = a5;
  return result;
}

unint64_t ClarityUIOutgoingCallAction.name.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t ClarityUIOutgoingCallAction.glyph.getter()
{
  return Image.init(systemName:)();
}

uint64_t ClarityUIOutgoingCallAction.tint.getter()
{
  if (*(unsigned char *)(v0 + 16)) {
    return static Color.green.getter();
  }
  else {
    return static Color.orange.getter();
  }
}

BOOL static ClarityUIOutgoingCallAction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16))
    {
      uint64_t v7 = *(void *)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 32);
      if (v7)
      {
        uint64_t v9 = swift_allocObject();
        *(void *)(v9 + 16) = v7;
        *(void *)(v9 + 24) = v8;
        Swift::String_optional v10 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
      }
      else
      {
        Swift::String_optional v10 = 0;
      }
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v7);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v10);
      uint64_t v12 = *(void *)(a2 + 24);
      uint64_t v11 = *(void *)(a2 + 32);
      if (v12)
      {
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = v12;
        *(void *)(v13 + 24) = v11;
        char v14 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
      }
      else
      {
        char v14 = 0;
      }
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v12);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v14);
      return (v7 == 0) == (v12 == 0);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void ClarityUICallType.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int ClarityUICallType.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ClarityUICallType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ClarityUICallType.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ClarityUICallType()
{
  return ClarityUICallType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ClarityUICallType(uint64_t a1)
{
  ClarityUICallType.hash(into:)(a1, *v1);
}

uint64_t ClarityUIOutgoingCallAction.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClarityUIOutgoingCallAction.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ClarityUIOutgoingCallAction.id.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIOutgoingCallAction.callType.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ClarityUIOutgoingCallAction.callType.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result & 1;
  return result;
}

uint64_t (*ClarityUIOutgoingCallAction.callType.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for ClarityUIOutgoingCallAction.callHandler : ClarityUIOutgoingCallAction@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    unsigned int v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    unsigned int v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
}

uint64_t key path setter for ClarityUIOutgoingCallAction.callHandler : ClarityUIOutgoingCallAction(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    unsigned int v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  }
  else
  {
    unsigned int v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 24);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  uint64_t result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v7);
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v5;
  return result;
}

uint64_t ClarityUIOutgoingCallAction.callHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return v1;
}

uint64_t ClarityUIOutgoingCallAction.callHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(void *)(v2 + 24));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ClarityUIOutgoingCallAction.callHandler.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ClarityUIOutgoingCallAction.hash(into:)()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned __int8 *)(v0 + 16));
  Hasher._combine(_:)(*(void *)(v0 + 24) == 0);
}

Swift::Int ClarityUIOutgoingCallAction.hashValue.getter()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned __int8 *)(v0 + 16));
  Hasher._combine(_:)(*(void *)(v0 + 24) == 0);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ClarityUIOutgoingCallAction()
{
  Swift::UInt v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2 == 0);
  return Hasher._finalize()();
}

unint64_t lazy protocol witness table accessor for type ClarityUICallType and conformance ClarityUICallType()
{
  unint64_t result = lazy protocol witness table cache variable for type ClarityUICallType and conformance ClarityUICallType;
  if (!lazy protocol witness table cache variable for type ClarityUICallType and conformance ClarityUICallType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUICallType and conformance ClarityUICallType);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClarityUICallType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C373EB7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUICallType()
{
  return &type metadata for ClarityUICallType;
}

uint64_t destroy for ClarityUIOutgoingCallAction(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for ClarityUIOutgoingCallAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unsigned int v6 = (_OWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for ClarityUIOutgoingCallAction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 24);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  if (!v4)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ClarityUIOutgoingCallAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 24);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (!v6)
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v7;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ClarityUIOutgoingCallAction()
{
  return &type metadata for ClarityUIOutgoingCallAction;
}

Swift::Void __swiftcall UIViewPropertyAnimator.stopAnimation(withoutFinishing:)(Swift::Bool withoutFinishing)
{
  objc_msgSend(v1, sel_stopAnimation_, withoutFinishing);
}

id protocol witness for ViewAnimating.startAnimation() in conformance UIViewPropertyAnimator()
{
  return @nonobjc UIViewPropertyAnimator.startAnimation()();
}

id @nonobjc UIViewPropertyAnimator.startAnimation()()
{
  return objc_msgSend(v0, sel_startAnimation);
}

void protocol witness for ViewAnimating.stopAnimation(withoutFinishing:) in conformance UIViewPropertyAnimator(Swift::Bool a1)
{
}

uint64_t dispatch thunk of AnimationTiming.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnimationTiming.provider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ViewAnimating.startAnimation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ViewAnimating.stopAnimation(withoutFinishing:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSD4KeysVy15ConversationKit28SharePlayDiscoverabilityTypeOSDySSAH11ApplicationVG_G_SDyAjGySSAL_GSgGs5NeverOTg504_s15e5Kit38ghi79AppsControllerC07refetchF033_CC22454BD5C7E952C63FC0162491D292LLyyFSaySDyAA0cdE4j4OSD4d8VySSAA11K21V_GSgGGycfu1_AnGXEfU_AH0ghioP0CTf1cn_n(uint64_t a1, char *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v5 = v22;
    uint64_t v6 = specialized _NativeDictionary.startIndex.getter(a1);
    if ((v6 & 0x8000000000000000) == 0)
    {
      unint64_t v8 = v6;
      if (v6 < 1 << *(unsigned char *)(a1 + 32))
      {
        uint64_t v9 = a1 + 64;
        uint64_t v19 = OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_cachedUnsortedApps;
        uint64_t v18 = v2;
        while ((*(void *)(v9 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
        {
          if (v7 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_23;
          }
          int v20 = v7;
          uint64_t v21 = v5;
          char v10 = *(unsigned char *)(*(void *)(a1 + 48) + v8);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(SharePlayDiscoverabilityType, [String : Application].Keys?)>);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1C3769620;
          *(unsigned char *)(inited + 32) = v10;
          uint64_t v12 = *(void *)&v2[v19];
          if (*(void *)(v12 + 16) && (unint64_t v13 = specialized __RawDictionaryStorage.find<A>(_:)(v10), (v14 & 1) != 0))
          {
            *(void *)(inited + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *(void *)(*(void *)(v12 + 56) + 8 * v13);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(void *)(inited + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0;
          }
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Application].Keys?);
          lazy protocol witness table accessor for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType();
          uint64_t v15 = Dictionary.init(dictionaryLiteral:)();
          uint64_t v5 = v21;
          unint64_t v16 = *(void *)(v21 + 16);
          if (v16 >= *(void *)(v21 + 24) >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v5 = v21;
          }
          *(void *)(v5 + 16) = v16 + 1;
          *(void *)(v5 + 8 * v16 + 32) = v15;
          if ((uint64_t)v8 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_24;
          }
          uint64_t v9 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v8 >> 6)) & (1 << v8)) == 0) {
            goto LABEL_25;
          }
          if (v20 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_26;
          }
          uint64_t v17 = _HashTable.occupiedBucket(after:)();
          if (!--v3)
          {

            return;
          }
          unint64_t v8 = v17;
          uint64_t v2 = v18;
          if ((v17 & 0x8000000000000000) == 0)
          {
            int v7 = *(_DWORD *)(a1 + 36);
            if (v17 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_27;
        }
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
    }
LABEL_27:
    __break(1u);
  }
  else
  {
  }
}

uint64_t *SharePlayDiscoverabilityAppsController.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static SharePlayDiscoverabilityAppsController.shared;
}

void __swiftcall Application.init(bundleIdentifier:name:icon:)(ConversationKit::Application *__return_ptr retstr, Swift::String bundleIdentifier, Swift::String name, UIImage icon)
{
  retstr->bundleIdentifier = bundleIdentifier;
  retstr->name = name;
  retstr->icon = icon;
}

uint64_t Application.bundleIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Application.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id Application.icon.getter()
{
  return *(id *)(v0 + 32);
}

void SharePlayDiscoverabilityType.hash(into:)(uint64_t a1, char a2)
{
}

BOOL static SharePlayDiscoverabilityType.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void *static SharePlayDiscoverabilityType.allCases.getter()
{
  return &outlined read-only object #0 of static SharePlayDiscoverabilityType.allCases.getter;
}

Swift::Int SharePlayDiscoverabilityType.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SharePlayDiscoverabilityType()
{
  return SharePlayDiscoverabilityType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance SharePlayDiscoverabilityType(uint64_t a1)
{
  SharePlayDiscoverabilityType.hash(into:)(a1, *v1);
}

void protocol witness for static CaseIterable.allCases.getter in conformance SharePlayDiscoverabilityType(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SharePlayDiscoverabilityType.allCases.getter;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SharePlayDiscoverabilityType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static SharePlayDiscoverabilityType.== infix(_:_:)(*a1, *a2);
}

id SharePlayDiscoverabilityAppsController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static SharePlayDiscoverabilityAppsController.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static SharePlayDiscoverabilityAppsController.shared;
  return v0;
}

uint64_t SharePlayDiscoverabilityAppsController.sortedApps(for:)(char a1)
{
  uint64_t v2 = a1 & 1;
  if (*(unsigned char *)(v1
                + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_needsAppRefetchOnNextQuery) == 1)
    SharePlayDiscoverabilityAppsController.refetchApps()();
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_appTypesNeedingSort);
  OUTLINED_FUNCTION_2();
  if (specialized Sequence<>.contains(_:)(v2, *v3)) {
    SharePlayDiscoverabilityAppsController.sortApps(type:)(v2);
  }
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_cachedSortedApps);
  OUTLINED_FUNCTION_2();
  uint64_t result = specialized Dictionary.subscript.getter(v2, *v4);
  if (!result) {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t SharePlayDiscoverabilityAppsController.refetchApps()()
{
  unint64_t v1 = v0;
  char isUniquelyReferenced_nonNull_native = (uint64_t (**)(uint64_t, void *))objc_msgSend(self, sel_enumeratorWithOptions_, 0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Application]);
  lazy protocol witness table accessor for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType();
  uint64_t v103 = Dictionary.init(dictionaryLiteral:)();
  if (one-time initialization token for shared != -1) {
LABEL_83:
  }
    swift_once();
  uint64_t v3 = (void *)MEMORY[0x1E4FBC8C8];
  char v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static Features.shared) + 0xF8))();
  uint64_t v89 = isUniquelyReferenced_nonNull_native;
  uint64_t v92 = (char *)v1;
  if (v4)
  {
    (*(void (**)(void *__return_ptr))((*v3 & *(void *)v1) + 0x130))(v104);
    uint64_t v5 = v105;
    if (v105)
    {
      uint64_t v6 = v106;
      int v7 = __swift_project_boxed_opaque_existential_1(v104, v105);
      uint64_t v8 = *(void *)(v5 - 8);
      __n128 v9 = MEMORY[0x1F4188790](v7);
      uint64_t v11 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
      outlined destroy of Conversation?((uint64_t)v104, &demangling cache variable for type metadata for ProtectedAppsObserverProtocol?);
      uint64_t v100 = (void *)v6[4](v5, v6);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v5);
      char isUniquelyReferenced_nonNull_native = v89;
      goto LABEL_7;
    }
    outlined destroy of Conversation?((uint64_t)v104, &demangling cache variable for type metadata for ProtectedAppsObserverProtocol?);
  }
  uint64_t v100 = (void *)MEMORY[0x1E4FBC860];
LABEL_7:
  uint64_t v12 = OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_entitlementsChecker;
  id v13 = objc_msgSend(isUniquelyReferenced_nonNull_native, sel_nextObject, v88);
  if (!v13)
  {
LABEL_73:
    swift_bridgeObjectRelease();
    uint64_t v71 = swift_bridgeObjectRetain();
    uint64_t v72 = v92;
    SharePlayDiscoverabilityAppsController.cachedUnsortedApps.setter(v71);
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v73 = type metadata accessor for Logger();
    __swift_project_value_buffer(v73, (uint64_t)static Logger.conversationControls);
    id v74 = v72;
    uint64_t v75 = Logger.logObject.getter();
    os_log_type_t v76 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = 136315138;
      uint64_t v100 = v77 + 4;
      v101[0] = v78;
      uint64_t v79 = (char *)v74;
      uint64_t v80 = swift_bridgeObjectRetain();
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSD4KeysVy15ConversationKit28SharePlayDiscoverabilityTypeOSDySSAH11ApplicationVG_G_SDyAjGySSAL_GSgGs5NeverOTg504_s15e5Kit38ghi79AppsControllerC07refetchF033_CC22454BD5C7E952C63FC0162491D292LLyyFSaySDyAA0cdE4j4OSD4d8VySSAA11K21V_GSgGGycfu1_AnGXEfU_AH0ghioP0CTf1cn_n(v80, v79);
      uint64_t v82 = v81;
      swift_bridgeObjectRelease();
      uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SharePlayDiscoverabilityType : [String : Application].Keys?]);
      uint64_t v84 = MEMORY[0x1C87733E0](v82, v83);
      unint64_t v86 = v85;
      swift_bridgeObjectRelease();
      uint64_t v102 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v86, v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v75, v76, "Updated unsorted apps to %s", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v78, -1, -1);
      char isUniquelyReferenced_nonNull_native = v89;
      MEMORY[0x1C87760E0](v77, -1, -1);
    }
    else
    {
    }
    SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.setter(0);

    return swift_bridgeObjectRelease();
  }
  uint64_t v91 = &v92[v12];
  uint64_t v88 = (uint64_t (**)(uint64_t, void *))(v100 + 9);
  uint64_t v15 = *MEMORY[0x1E4FADD18];
  uint64_t v97 = 0x80000001C37AAE90;
  *(void *)&long long v14 = 136315138;
  long long v94 = v14;
  uint64_t v93 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v98 = (void *)0x80000001C3797370;
  uint64_t v90 = v15;
  while (1)
  {
    id v95 = v13;
    id v16 = v13;
    uint64_t v17 = outlined bridged method (ob) of @objc TUConversationActivity.bundleIdentifier.getter(v16);
    if (!v18)
    {

      goto LABEL_72;
    }
    uint64_t v19 = v17;
    unint64_t v20 = v18;
    if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_72;
    }
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      break;
    }

    swift_bridgeObjectRelease();
LABEL_72:
    id v13 = objc_msgSend(isUniquelyReferenced_nonNull_native, sel_nextObject, v88);
    if (!v13) {
      goto LABEL_73;
    }
  }
  char v24 = 0;
  unint64_t v25 = 0;
  id v99 = v16;
  while (1)
  {
    char v26 = v24;
    if (v25 >= qword_1F1E92FC0)
    {
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    int v27 = *((unsigned __int8 *)&outlined read-only object #0 of SharePlayDiscoverabilityAppsController.refetchApps()
          + v25
          + 32);
    uint64_t v28 = v103;
    if (!*(void *)(v103 + 16) || (specialized __RawDictionaryStorage.find<A>(_:)(v27), (v29 & 1) == 0))
    {
      uint64_t v30 = Dictionary.init(dictionaryLiteral:)();
      char isUniquelyReferenced_nonNull_native = (uint64_t (**)(uint64_t, void *))swift_isUniquelyReferenced_nonNull_native();
      v101[0] = v28;
      unint64_t v31 = specialized __RawDictionaryStorage.find<A>(_:)(v27);
      uint64_t v33 = *(void *)(v28 + 16);
      BOOL v34 = (v32 & 1) == 0;
      Swift::Int v35 = v33 + v34;
      if (__OFADD__(v33, v34)) {
        goto LABEL_80;
      }
      unint64_t v1 = v31;
      char v36 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<SharePlayDiscoverabilityType, [String : Application]>);
      Swift::Bool v37 = _NativeDictionary.ensureUnique(isUnique:capacity:)((Swift::Bool)isUniquelyReferenced_nonNull_native, v35);
      id v16 = v99;
      if (v37)
      {
        unint64_t v38 = specialized __RawDictionaryStorage.find<A>(_:)(v27);
        if ((v36 & 1) != (v39 & 1)) {
          goto LABEL_85;
        }
        unint64_t v1 = v38;
      }
      uint64_t v40 = (void *)v101[0];
      if (v36)
      {
        char isUniquelyReferenced_nonNull_native = *(uint64_t (***)(uint64_t, void *))(v101[0] + 56);
        swift_bridgeObjectRelease();
        isUniquelyReferenced_nonNull_native[v1] = (uint64_t (*)(uint64_t, void *))v30;
      }
      else
      {
        *(void *)(v101[0] + 8 * (v1 >> 6) + 64) |= 1 << v1;
        *(unsigned char *)(v40[6] + v1) = v27;
        *(void *)(v40[7] + 8 * v1) = v30;
        uint64_t v41 = v40[2];
        BOOL v42 = __OFADD__(v41, 1);
        uint64_t v43 = v41 + 1;
        if (v42) {
          goto LABEL_81;
        }
        void v40[2] = v43;
      }
      uint64_t v103 = (uint64_t)v40;
      swift_bridgeObjectRelease();
    }
    if ((v27 & 1) == 0)
    {
      id v50 = objc_msgSend(v16, sel_entitlements);
      v52._uint64_t countAndFlagsBits = 0xD000000000000021;
      v52._object = v98;
      char v51 = LSPropertyList.contains(entitlement:)(v52);
      goto LABEL_36;
    }
    id v44 = objc_msgSend(self, sel_defaultWorkspace);
    if (!v44) {
      break;
    }
    id v45 = v44;
    unsigned __int8 v46 = outlined bridged method (mbnn) of @objc LSApplicationWorkspace.applicationIsInstalled(_:)(0xD000000000000013, v97, v44);

    if ((v46 & 1) == 0)
    {
      char v53 = 0;
      id v16 = v99;
      goto LABEL_38;
    }
    char isUniquelyReferenced_nonNull_native = (uint64_t (**)(uint64_t, void *))*((void *)v91 + 3);
    uint64_t v47 = *((void *)v91 + 4);
    __swift_project_boxed_opaque_existential_1(v91, (uint64_t)isUniquelyReferenced_nonNull_native);
    int v96 = v27;
    char v48 = v26;
    unint64_t v1 = v47 + 8;
    uint64_t v49 = *(uint64_t (**)(void, void, void, void, void))(v47 + 8);
    id v16 = v99;
    id v50 = v99;
    char v51 = v49(v19, v20, v95, isUniquelyReferenced_nonNull_native, v47);
    char v26 = v48;
LABEL_36:
    char v53 = v51;

LABEL_38:
    uint64_t v54 = v100[2];
    if (!v54) {
      goto LABEL_50;
    }
    BOOL v55 = v100[4] == v19 && v20 == v100[5];
    if (!v55 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      if (v54 == 1) {
        goto LABEL_50;
      }
      BOOL v68 = v100[6] == v19 && v20 == v100[7];
      if (!v68 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        if (v54 != 2)
        {
          char isUniquelyReferenced_nonNull_native = v88;
          uint64_t v69 = 2;
          do
          {
            unint64_t v1 = v69 + 1;
            if (__OFADD__(v69, 1)) {
              goto LABEL_82;
            }
            BOOL v70 = *(isUniquelyReferenced_nonNull_native - 1) == (uint64_t (*)(uint64_t, void *))v19
               && v20 == (void)*isUniquelyReferenced_nonNull_native;
            if (v70 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              goto LABEL_44;
            }
            isUniquelyReferenced_nonNull_native += 2;
            ++v69;
          }
          while (v1 != v54);
        }
LABEL_50:
        if (v53)
        {
          objc_super v60 = (uint64_t (**)(uint64_t, void *))SharePlayDiscoverabilityAppsController.icon(for:bundleRecord:)(v19, v20, v16);
          if (v60)
          {
            unint64_t v61 = v60;
            uint64_t v63 = specialized Dictionary.subscript.modify();
            if (*v62)
            {
              unint64_t v1 = (unint64_t)v62;
              swift_bridgeObjectRetain_n();
              id v64 = objc_msgSend(v16, sel_localizedName);
              uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v67 = v66;

              v104[0] = v19;
              v104[1] = v20;
              v104[2] = v65;
              uint64_t v105 = v67;
              id v16 = v99;
              long long v106 = v61;
              char isUniquelyReferenced_nonNull_native = v61;
              swift_isUniquelyReferenced_nonNull_native();
              uint64_t v102 = *(void *)v1;
              *(void *)unint64_t v1 = 0x8000000000000000;
              specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
              *(void *)unint64_t v1 = v102;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              ((void (*)(uint64_t *, void))v63)(v101, 0);
            }
            else
            {
              ((void (*)(uint64_t *, void))v63)(v101, 0);
            }
          }
        }
        goto LABEL_70;
      }
    }
LABEL_44:
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    __swift_project_value_buffer(v56, (uint64_t)static Logger.conversationControls);
    swift_bridgeObjectRetain_n();
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v57, v58))
    {
      char isUniquelyReferenced_nonNull_native = (uint64_t (**)(uint64_t, void *))swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v101[0] = v59;
      *(_DWORD *)char isUniquelyReferenced_nonNull_native = v94;
      swift_bridgeObjectRetain();
      *(uint64_t (**)(uint64_t, void *))((char *)isUniquelyReferenced_nonNull_native + 4) = (uint64_t (*)(uint64_t, void *))getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, v101);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2F90000, v57, v58, "[SharePlayDiscoverabilityAppsController] Hidden app found for %s", (uint8_t *)isUniquelyReferenced_nonNull_native, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v59, -1, -1);
      MEMORY[0x1C87760E0](isUniquelyReferenced_nonNull_native, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_70:
    char v24 = 1;
    unint64_t v25 = 1u;
    if (v26)
    {
      swift_bridgeObjectRelease();

      char isUniquelyReferenced_nonNull_native = v89;
      goto LABEL_72;
    }
  }
  __break(1u);
LABEL_85:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t SharePlayDiscoverabilityAppsController.sortApps(type:)(uint64_t result)
{
  uint64_t v2 = v1;
  if (*(void *)(*(void *)(v1
                             + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_cachedUnsortedApps)
                 + 16))
  {
    int v3 = result & 1;
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(result & 1);
    if (v4)
    {
      uint64_t v5 = swift_bridgeObjectRetain();
      uint64_t v6 = SharePlayDiscoverabilityAppsController.sortedApplications(_:)(v5);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      specialized Dictionary._Variant.setValue(_:forKey:)();
      swift_endAccess();
      if (one-time initialization token for conversationControls != -1) {
        goto LABEL_47;
      }
      while (1)
      {
        uint64_t v7 = type metadata accessor for Logger();
        __swift_project_value_buffer(v7, (uint64_t)static Logger.conversationControls);
        swift_bridgeObjectRetain();
        uint64_t v8 = Logger.logObject.getter();
        os_log_type_t v9 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v8, v9))
        {
          os_log_type_t v40 = v9;
          uint64_t v10 = swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          v42[0] = v39;
          *(_DWORD *)uint64_t v10 = 136315394;
          uint64_t v11 = String.init<A>(reflecting:)();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v42);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v10 + 12) = 2080;
          uint64_t v13 = *(void *)(v6 + 16);
          uint64_t v14 = MEMORY[0x1E4FBC860];
          if (v13)
          {
            uint64_t v36 = v10;
            Swift::Bool v37 = v8;
            uint64_t v41 = MEMORY[0x1E4FBC860];
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v14 = v41;
            uint64_t v38 = v6;
            uint64_t v15 = (uint64_t *)(v6 + 40);
            do
            {
              uint64_t v16 = *(v15 - 1);
              uint64_t v17 = *v15;
              unint64_t v19 = *(void *)(v41 + 16);
              unint64_t v18 = *(void *)(v41 + 24);
              swift_bridgeObjectRetain();
              if (v19 >= v18 >> 1) {
                specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              v15 += 5;
              *(void *)(v41 + 16) = v19 + 1;
              uint64_t v20 = v41 + 16 * v19;
              *(void *)(v20 + 32) = v16;
              *(void *)(v20 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v17;
              --v13;
            }
            while (v13);
            uint64_t v8 = v37;
            uint64_t v6 = v38;
            uint64_t v10 = v36;
          }
          uint64_t v21 = MEMORY[0x1C87733E0](v14, MEMORY[0x1E4FBB1A0]);
          unint64_t v23 = v22;
          swift_bridgeObjectRelease();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, v42);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v8, v40, "Updated sorted apps for %s to %s", (uint8_t *)v10, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v39, -1, -1);
          MEMORY[0x1C87760E0](v10, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        char v24 = (uint64_t *)(v2
                        + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_appTypesNeedingSort);
        uint64_t result = swift_beginAccess();
        uint64_t v2 = *v24;
        unint64_t v25 = *(void *)(*v24 + 16);
        if (!v25) {
          goto LABEL_40;
        }
        if (((v3 == 0) ^ *(unsigned __int8 *)(v2 + 32)))
        {
          unint64_t v26 = 0;
        }
        else
        {
          if (v25 == 1) {
            goto LABEL_40;
          }
          uint64_t v34 = 33;
          while (1)
          {
            unint64_t v26 = v34 - 32;
            if (((v3 == 0) ^ *(unsigned __int8 *)(v2 + v34))) {
              break;
            }
            uint64_t v35 = v34 - 31;
            if (__OFADD__(v26, 1)) {
              goto LABEL_45;
            }
            ++v34;
            if (v35 == v25) {
              goto LABEL_40;
            }
          }
        }
        unint64_t v27 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          break;
        }
        if (v27 == v25)
        {
LABEL_18:
          if ((uint64_t)v25 < (uint64_t)v26) {
            __break(1u);
          }
LABEL_40:
          specialized Array.replaceSubrange<A>(_:with:)();
          return swift_endAccess();
        }
        uint64_t v6 = v26 + 33;
        while ((v27 & 0x8000000000000000) == 0)
        {
          if (v6 - 32 >= v25) {
            goto LABEL_43;
          }
          int v28 = *(unsigned __int8 *)(v2 + v6);
          if ((((v3 == 0) ^ v28) & 1) == 0)
          {
            if (v6 - 32 != v26)
            {
              if (v26 >= v25) {
                goto LABEL_46;
              }
              char v29 = *(unsigned char *)(v2 + 32 + v26);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *char v24 = v2;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                specialized _ArrayBuffer._consumeAndCreateNew()();
                uint64_t v2 = v33;
                *char v24 = v33;
              }
              *(unsigned char *)(v2 + v26 + 32) = v28;
              *(unsigned char *)(*v24 + v6) = v29;
              uint64_t v2 = *v24;
            }
            if (__OFADD__(v26++, 1)) {
              goto LABEL_44;
            }
            unint64_t v25 = *(void *)(v2 + 16);
          }
          uint64_t v32 = v6 - 31;
          ++v6;
          if (v32 == v25) {
            goto LABEL_18;
          }
        }
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        swift_once();
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t key path getter for SharePlayDiscoverabilityAppsController.foregroundApp : SharePlayDiscoverabilityAppsController@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x98))();
  *a2 = result;
  return result;
}

uint64_t key path setter for SharePlayDiscoverabilityAppsController.foregroundApp : SharePlayDiscoverabilityAppsController(id *a1, void **a2)
{
  id v2 = *a1;
  int v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xA0);
  id v4 = *a1;
  return v3(v2);
}

uint64_t SharePlayDiscoverabilityAppsController.foregroundApp.didset()
{
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.conversationControls);
  id v2 = v0;
  int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = &v2[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_foregroundApp];
    swift_beginAccess();
    if (*(void *)v7)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = String.init<A>(reflecting:)();
      unint64_t v10 = v9;
    }
    else
    {
      unint64_t v10 = 0xE300000000000000;
      uint64_t v8 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v3, v4, "Foreground app changed, removing bundleIdentifier: %s on next sort", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v6, -1, -1);
    MEMORY[0x1C87760E0](v5, -1, -1);
  }
  else
  {
  }
  return SharePlayDiscoverabilityAppsController.appTypesNeedingSort.setter((uint64_t)&outlined read-only object #0 of SharePlayDiscoverabilityAppsController.foregroundApp.didset);
}

void *SharePlayDiscoverabilityAppsController.foregroundApp.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_foregroundApp);
  OUTLINED_FUNCTION_2();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

void SharePlayDiscoverabilityAppsController.foregroundApp.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_foregroundApp);
  swift_beginAccess();
  os_log_type_t v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  SharePlayDiscoverabilityAppsController.foregroundApp.didset();
}

uint64_t (*SharePlayDiscoverabilityAppsController.foregroundApp.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_6_1();
  return SharePlayDiscoverabilityAppsController.foregroundApp.modify;
}

uint64_t SharePlayDiscoverabilityAppsController.foregroundApp.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return SharePlayDiscoverabilityAppsController.foregroundApp.didset();
  }
  return result;
}

uint64_t SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.didset(uint64_t result)
{
  if (*(unsigned char *)(v1
                + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_needsAppRefetchOnNextQuery) == 1
    && (result & 1) == 0)
  {
    return SharePlayDiscoverabilityAppsController.appTypesNeedingSort.setter((uint64_t)&outlined read-only object #0 of SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.didset);
  }
  return result;
}

uint64_t SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.setter(char a1)
{
  uint64_t v2 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_needsAppRefetchOnNextQuery);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_needsAppRefetchOnNextQuery) = a1;
  return SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.didset(v2);
}

uint64_t SharePlayDiscoverabilityAppsController.appTypesNeedingSort.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_1_155(OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_appTypesNeedingSort);
  swift_beginAccess();
  void *v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t SharePlayDiscoverabilityAppsController.cachedUnsortedApps.setter(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_cachedUnsortedApps) = a1;
  return swift_bridgeObjectRelease();
}

id SharePlayDiscoverabilityAppsController.suggester.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController____lazy_storage___suggester;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController____lazy_storage___suggester);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController____lazy_storage___suggester);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_suggesterWithDaemon);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t key path getter for SharePlayDiscoverabilityAppsController.protectedAppsObserver : SharePlayDiscoverabilityAppsController(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x130))();
}

uint64_t key path setter for SharePlayDiscoverabilityAppsController.protectedAppsObserver : SharePlayDiscoverabilityAppsController(uint64_t a1, void **a2)
{
  outlined init with copy of ProtectedAppsObserverProtocol?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(unsigned char *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x138))(v4);
}

uint64_t SharePlayDiscoverabilityAppsController.protectedAppsObserver.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_1_155(OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_protectedAppsObserver);
  OUTLINED_FUNCTION_2();
  return outlined init with copy of ProtectedAppsObserverProtocol?(v1, a1);
}

uint64_t SharePlayDiscoverabilityAppsController.protectedAppsObserver.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_1_155(OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_protectedAppsObserver);
  OUTLINED_FUNCTION_6_1();
  outlined assign with take of ProtectedAppsObserverProtocol?(a1, v1);
  return swift_endAccess();
}

uint64_t (*SharePlayDiscoverabilityAppsController.protectedAppsObserver.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

CFNotificationCenterRef SharePlayDiscoverabilityAppsController.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_foregroundApp] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_needsAppRefetchOnNextQuery] = 1;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_appTypesNeedingSort] = &outlined read-only object #0 of SharePlayDiscoverabilityAppsController.init();
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_cachedUnsortedApps;
  uint64_t v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Application]);
  lazy protocol witness table accessor for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType();
  *(void *)&v0[v1] = Dictionary.init(dictionaryLiteral:)();
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_cachedSortedApps;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Application]);
  *(void *)&v2[v3] = Dictionary.init(dictionaryLiteral:)();
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController____lazy_storage___suggester] = 0;
  id v4 = (uint64_t *)&v2[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_entitlementsChecker];
  uint64_t v5 = type metadata accessor for EntitlementsChecker();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  void v4[3] = v5;
  v4[4] = (uint64_t)&protocol witness table for EntitlementsChecker;
  *id v4 = v6;
  uint64_t v7 = &v2[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_protectedAppsObserver];
  *((void *)v7 + 4) = 0;
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;

  v27.receiver = v2;
  v27.super_class = (Class)type metadata accessor for SharePlayDiscoverabilityAppsController();
  id v8 = objc_msgSendSuper2(&v27, sel_init);
  unint64_t v9 = self;
  id v10 = v8;
  id v11 = objc_msgSend(v9, sel_defaultCenter);
  objc_msgSend(v11, sel_addObserver_selector_name_object_, v10, sel_handleCallConnected_, *MEMORY[0x1E4FADD70], 0);

  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static Features.shared) + 0xF8))())
  {
    Class v25 = (Class)type metadata accessor for ProtectedAppsObserver();
    unint64_t v26 = &protocol witness table for ProtectedAppsObserver;
    v24[0] = objc_msgSend(objc_allocWithZone(v25), sel_init);
    uint64_t v12 = (uint64_t)v10 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_protectedAppsObserver;
    OUTLINED_FUNCTION_6_1();
    outlined assign with take of ProtectedAppsObserverProtocol?((uint64_t)v24, v12);
    swift_endAccess();
    OUTLINED_FUNCTION_6_1();
    uint64_t v13 = *(void *)(v12 + 24);
    if (v13)
    {
      uint64_t v14 = *(void *)(v12 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v12, *(void *)(v12 + 24));
      uint64_t v15 = *(void (**)(id, _UNKNOWN **, uint64_t, uint64_t))(v14 + 16);
      id v16 = v10;
      v15(v10, &protocol witness table for SharePlayDiscoverabilityAppsController, v13, v14);
    }
    swift_endAccess();
  }
  CFNotificationCenterRef result = CFNotificationCenterGetDistributedCenter();
  if (result)
  {
    unint64_t v18 = result;
    unint64_t v19 = (void *)MEMORY[0x1C87730B0](0xD00000000000002ELL, 0x80000001C37BFE80);
    OUTLINED_FUNCTION_2_142((uint64_t)v19, v20, (void (__cdecl *)(CFNotificationCenterRef, void *, CFNotificationName, const void *, CFDictionaryRef))@objc closure #1 in SharePlayDiscoverabilityAppsController.init());

    CFNotificationCenterRef result = CFNotificationCenterGetDistributedCenter();
    if (result)
    {
      uint64_t v21 = result;
      unint64_t v22 = (void *)MEMORY[0x1C87730B0](0xD000000000000030, 0x80000001C37BFEB0);
      OUTLINED_FUNCTION_2_142((uint64_t)v22, v23, (void (__cdecl *)(CFNotificationCenterRef, void *, CFNotificationName, const void *, CFDictionaryRef))@objc closure #1 in SharePlayDiscoverabilityAppsController.init());

      return (CFNotificationCenterRef)v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void closure #1 in SharePlayDiscoverabilityAppsController.init()(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  if (a2 && a5)
  {
    id v7 = a5;
    id v8 = (void *)MEMORY[0x1C87730B0](0x686563616C507369, 0xED00007265646C6FLL);
    id v9 = objc_msgSend(v7, sel_objectForKey_, v8);

    if (v9)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v23, 0, sizeof(v23));
    }
    outlined init with take of Any?((uint64_t)v23, (uint64_t)v24);
    if (v24[3])
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_10:

        return;
      }
      if (objc_msgSend(v22, sel_integerValue))
      {

        goto LABEL_10;
      }
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      __swift_project_value_buffer(v10, (uint64_t)static Logger.conversationControls);
      id v11 = a3;
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        v24[0] = v15;
        *(_DWORD *)uint64_t v14 = 136315138;
        uint64_t v21 = v15;
        if (a3)
        {
          *(void *)&v23[0] = v11;
          type metadata accessor for CFNotificationName(0);
          id v16 = v11;
          uint64_t v17 = String.init<A>(reflecting:)();
          unint64_t v19 = v18;
        }
        else
        {
          unint64_t v19 = 0xE300000000000000;
          uint64_t v17 = 7104878;
        }
        *(void *)&v23[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, v24);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v12, v13, "Received app installation notification: %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v21, -1, -1);
        MEMORY[0x1C87760E0](v14, -1, -1);
      }
      else
      {
      }
      id v20 = a2;
      SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.setter(1);
    }
    else
    {

      outlined destroy of Conversation?((uint64_t)v24, &demangling cache variable for type metadata for Any?);
    }
  }
}

void @objc closure #1 in SharePlayDiscoverabilityAppsController.init()(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v10 = a1;
  id v11 = a3;
  id v12 = a5;
  closure #1 in SharePlayDiscoverabilityAppsController.init()((uint64_t)a1, a2, a3, a4, a5);
}

CFNotificationCenterRef SharePlayDiscoverabilityAppsController.__deallocating_deinit()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  CFNotificationCenterRef result = CFNotificationCenterGetDistributedCenter();
  if (result)
  {
    uint64_t v3 = result;
    CFNotificationCenterRemoveEveryObserver(v3, v0);

    v4.receiver = v0;
    v4.super_class = (Class)type metadata accessor for SharePlayDiscoverabilityAppsController();
    return (CFNotificationCenterRef)objc_msgSendSuper2(&v4, sel_dealloc);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id SharePlayDiscoverabilityAppsController.icon(for:bundleRecord:)(uint64_t a1, uint64_t a2, void *a3)
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for ISIcon);
  id v4 = objc_msgSend(a3, sel_URL);
  uint64_t v5 = type metadata accessor for URL();
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  id v8 = LPLinkHTMLTextGenerator.__allocating_init(url:)((uint64_t)v7);
  uint64_t v9 = *MEMORY[0x1E4F6F298];
  id v10 = self;
  id v11 = objc_msgSend(v10, sel_imageDescriptorNamed_, v9);
  objc_msgSend(v11, sel_setAppearance_, 0);
  id v12 = objc_msgSend(v10, sel_imageDescriptorNamed_, v9);
  objc_msgSend(v12, sel_setAppearance_, 1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C3769610;
  *(void *)(v13 + 32) = v11;
  *(void *)(v13 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v12;
  v27[1] = v13;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for ISImageDescriptor);
  id v14 = v11;
  id v15 = v12;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_prepareImagesForImageDescriptors_, isa);

  id v17 = objc_msgSend(v8, sel_imageForDescriptor_, v14);
  if (v17)
  {
    id v18 = objc_msgSend(v17, sel_CGImage);

    if (v18)
    {
      id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_initWithCGImage_, v18);
    }
    else
    {
      id v17 = 0;
    }
  }
  id v19 = objc_msgSend(v8, sel_imageForDescriptor_, v15);

  if (v19)
  {
    id v20 = objc_msgSend(v19, sel_CGImage);

    if (v20)
    {
      id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_initWithCGImage_, v20);

      if (v21)
      {
        if (v17)
        {
          id v22 = v21;
          id v23 = objc_msgSend(v17, sel_imageAsset);
          if (v23)
          {
            char v24 = v23;
            id v25 = objc_msgSend(self, sel_traitCollectionWithUserInterfaceStyle_, 2);
            objc_msgSend(v24, sel_registerImage_withTraitCollection_, v22, v25);

            id v8 = v25;
          }

          id v21 = v22;
        }
        else
        {
          id v22 = v8;
        }

        id v8 = v21;
      }
    }
  }

  return v17;
}

uint64_t SharePlayDiscoverabilityAppsController.sortedApplications(_:)(uint64_t a1)
{
  id v95 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F89C98]), sel_init);
  specialized _NativeDictionary.makeIterator()(v118, a1);
  uint64_t v114 = v118[0];
  int64_t v2 = v118[3];
  unint64_t v3 = v118[4];
  uint64_t v108 = v118[1];
  int64_t v110 = (unint64_t)(v118[2] + 64) >> 6;
  uint64_t v100 = a1;
  swift_bridgeObjectRetain_n();
  uint64_t v4 = MEMORY[0x1E4FBC868];
  if (!v3) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v5 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  unint64_t v6 = v5 | (v2 << 6);
  while (1)
  {
    id v11 = (uint64_t *)(*(void *)(v114 + 48) + 16 * v6);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C3769620;
    *(void *)(v14 + 32) = v13;
    *(void *)(v14 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v12;
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v117 = v4;
    unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(v13, v12);
    uint64_t v18 = *(void *)(v4 + 16);
    BOOL v19 = (v17 & 1) == 0;
    Swift::Int v20 = v18 + v19;
    if (__OFADD__(v18, v19))
    {
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
      goto LABEL_130;
    }
    unint64_t v21 = v16;
    char v22 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, [String]>);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v20))
    {
      unint64_t v23 = specialized __RawDictionaryStorage.find<A>(_:)(v13, v12);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_132;
      }
      unint64_t v21 = v23;
    }
    uint64_t v4 = v117;
    if (v22)
    {
      uint64_t v25 = *(void *)(v117 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v25 + 8 * v21) = v14;
    }
    else
    {
      *(void *)(v117 + 8 * (v21 >> 6) + 64) |= 1 << v21;
      unint64_t v26 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v21);
      *unint64_t v26 = v13;
      v26[1] = v12;
      *(void *)(*(void *)(v4 + 56) + 8 * v21) = v14;
      uint64_t v27 = *(void *)(v4 + 16);
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        goto LABEL_118;
      }
      *(void *)(v4 + 16) = v29;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v7 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      goto LABEL_119;
    }
    if (v7 >= v110) {
      break;
    }
    unint64_t v8 = *(void *)(v108 + 8 * v7);
    int64_t v9 = v2 + 1;
    if (!v8)
    {
      int64_t v9 = v2 + 2;
      if (v2 + 2 >= v110) {
        break;
      }
      unint64_t v8 = *(void *)(v108 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v2 + 3;
        if (v2 + 3 >= v110) {
          break;
        }
        unint64_t v8 = *(void *)(v108 + 8 * v9);
        if (!v8)
        {
          int64_t v9 = v2 + 4;
          if (v2 + 4 >= v110) {
            break;
          }
          unint64_t v8 = *(void *)(v108 + 8 * v9);
          if (!v8)
          {
            int64_t v9 = v2 + 5;
            if (v2 + 5 >= v110) {
              break;
            }
            unint64_t v8 = *(void *)(v108 + 8 * v9);
            if (!v8)
            {
              int64_t v9 = v2 + 6;
              if (v2 + 6 >= v110) {
                break;
              }
              unint64_t v8 = *(void *)(v108 + 8 * v9);
              if (!v8)
              {
                int64_t v10 = v2 + 7;
                do
                {
                  if (v10 >= v110) {
                    goto LABEL_31;
                  }
                  unint64_t v8 = *(void *)(v108 + 8 * v10++);
                }
                while (!v8);
                int64_t v9 = v10 - 1;
              }
            }
          }
        }
      }
    }
    unint64_t v3 = (v8 - 1) & v8;
    unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
    int64_t v2 = v9;
  }
LABEL_31:
  swift_release();
  swift_bridgeObjectRelease();
  outlined bridged method (mbnn) of @objc _PSPredictionContext.appBundleIdsToShareExtensionBundleIdsMapping.setter(v4, v95);
  id v30 = SharePlayDiscoverabilityAppsController.suggester.getter();
  id v31 = objc_msgSend(v30, sel_shareExtensionSuggestionsFromContext_, v95);

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for _PSSuggestion);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!((unint64_t)v4 >> 62))
  {
    uint64_t v32 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_33;
  }
LABEL_130:
  swift_bridgeObjectRetain();
  uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
LABEL_33:
  uint64_t v33 = MEMORY[0x1E4FBC860];
  if (v32)
  {
    if (v32 < 1)
    {
      __break(1u);
LABEL_132:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
LABEL_133:
      _fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    uint64_t v34 = 0;
    uint64_t v35 = MEMORY[0x1E4FBC860];
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v36 = (id)MEMORY[0x1C87744F0](v34, v4);
      }
      else {
        id v36 = *(id *)(v4 + 8 * v34 + 32);
      }
      Swift::Bool v37 = v36;
      uint64_t v38 = outlined bridged method (pb) of @objc _PSSuggestion.bundleID.getter(v36);
      uint64_t v40 = v39;

      if (v40)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v35 = v43;
        }
        unint64_t v41 = *(void *)(v35 + 16);
        if (v41 >= *(void *)(v35 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v35 = v44;
        }
        *(void *)(v35 + 16) = v41 + 1;
        uint64_t v42 = v35 + 16 * v41;
        *(void *)(v42 + 32) = v38;
        *(void *)(v42 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v40;
      }
      ++v34;
    }
    while (v32 != v34);
  }
  else
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease_n();
  uint64_t v4 = v100;
  uint64_t v45 = swift_bridgeObjectRetain();
  unsigned __int8 v46 = (void *)specialized _copyCollectionToContiguousArray<A>(_:)(v45);
  swift_bridgeObjectRelease();
  uint64_t v117 = v33;
  uint64_t v47 = *(void *)(v35 + 16);
  if (v47)
  {
    unint64_t v48 = 0;
    uint64_t v49 = v35 + 32;
    uint64_t v111 = MEMORY[0x1E4FBC860];
    uint64_t v96 = *(void *)(v35 + 16);
    uint64_t v97 = v35;
    uint64_t v98 = v35 + 32;
    while (1)
    {
      if (v48 >= *(void *)(v35 + 16)) {
        goto LABEL_120;
      }
      if (*(void *)(v4 + 16)) {
        break;
      }
LABEL_82:
      if (++v48 == v47) {
        goto LABEL_114;
      }
    }
    id v50 = (uint64_t *)(v49 + 16 * v48);
    uint64_t v52 = *v50;
    uint64_t v51 = v50[1];
    swift_bridgeObjectRetain();
    unint64_t v53 = specialized __RawDictionaryStorage.find<A>(_:)(v52, v51);
    if ((v54 & 1) == 0)
    {
LABEL_81:
      swift_bridgeObjectRelease();
      goto LABEL_82;
    }
    uint64_t v55 = *(void *)(v4 + 56) + 40 * v53;
    uint64_t v56 = *(void *)v55;
    uint64_t v57 = *(void *)(v55 + 16);
    long long v112 = *(_OWORD *)(v55 + 24);
    uint64_t v115 = *(void *)(v55 + 8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v58 = *((id *)&v112 + 1);
    swift_bridgeObjectRelease();
    uint64_t v59 = v111;
    id v101 = v58;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v59 = v92;
    }
    unint64_t v60 = *(void *)(v59 + 16);
    uint64_t v61 = v115;
    if (v60 >= *(void *)(v59 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v61 = v115;
      uint64_t v59 = v93;
    }
    *(void *)(v59 + 16) = v60 + 1;
    uint64_t v62 = v59 + 40 * v60;
    *(void *)(v62 + 32) = v56;
    *(void *)(v62 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v61;
    *(void *)(v62 + 48) = v57;
    *(_OWORD *)(v62 + 56) = v112;
    uint64_t v117 = v59;
    uint64_t v63 = v46[2];
    uint64_t v111 = v59;
    if (v63)
    {
      BOOL v64 = v46[4] == v56 && v46[5] == v61;
      if (v64)
      {
        uint64_t v65 = 0;
LABEL_68:
        uint64_t v4 = v65 + 1;
        if (__OFADD__(v65, 1)) {
          goto LABEL_128;
        }
        if (v4 != v63)
        {
          uint64_t v72 = 40 * v65 + 104;
          unint64_t v73 = v65 + 1;
          uint64_t v99 = v56;
          while ((v4 & 0x8000000000000000) == 0)
          {
            unint64_t v74 = v46[2];
            if (v73 >= v74) {
              goto LABEL_117;
            }
            uint64_t v75 = (char *)v46 + v72;
            if (*(void *)((char *)v46 + v72 - 32) != v56 || *(void *)((char *)v46 + v72 - 24) != v61)
            {
              if (_stringCompareWithSmolCheck(_:_:expecting:)())
              {
                uint64_t v61 = v115;
              }
              else
              {
                if (v73 != v65)
                {
                  if (v65 >= v74) {
                    goto LABEL_122;
                  }
                  uint64_t v77 = &v46[5 * v65 + 4];
                  uint64_t v78 = v77[3];
                  uint64_t v103 = v77[2];
                  uint64_t v104 = *v77;
                  uint64_t v79 = (void *)v77[4];
                  uint64_t v80 = *((void *)v75 - 4);
                  uint64_t v81 = *((void *)v75 - 3);
                  uint64_t v82 = *(void *)((char *)v46 + v72 - 8);
                  uint64_t v107 = *(void *)((char *)v46 + v72 - 16);
                  uint64_t v109 = v80;
                  uint64_t v105 = v77[1];
                  long long v106 = *(void **)((char *)v46 + v72);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v102 = v79;
                  uint64_t v113 = v81;
                  uint64_t v83 = v82;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v84 = v106;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    specialized _ArrayBuffer._consumeAndCreateNew()();
                    unsigned __int8 v46 = v89;
                  }
                  unint64_t v85 = &v46[5 * v65];
                  unint64_t v86 = (void *)v85[8];
                  v85[4] = v109;
                  v85[5] = v113;
                  v85[6] = v107;
                  v85[7] = v83;
                  v85[8] = v84;

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v56 = v99;
                  if (v73 >= v46[2]) {
                    goto LABEL_123;
                  }
                  uint64_t v87 = (void *)((char *)v46 + v72);
                  uint64_t v88 = *(void **)((char *)v46 + v72);
                  *(v87 - 4) = v104;
                  *(v87 - 3) = v105;
                  *(v87 - 2) = v103;
                  *(v87 - 1) = v78;
                  *uint64_t v87 = v102;

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v49 = v98;
                }
                uint64_t v61 = v115;
                BOOL v28 = __OFADD__(v65++, 1);
                if (v28) {
                  goto LABEL_121;
                }
              }
            }
            ++v73;
            v72 += 40;
            if (v73 == v46[2]) {
              goto LABEL_70;
            }
          }
          goto LABEL_116;
        }
LABEL_70:
        uint64_t v4 = v46[2];
        if (v4 < v65) {
          goto LABEL_124;
        }
        if (v65 < 0) {
          goto LABEL_125;
        }
        goto LABEL_72;
      }
      if (_stringCompareWithSmolCheck(_:_:expecting:)())
      {
        uint64_t v65 = 0;
LABEL_64:
        uint64_t v61 = v115;
        goto LABEL_68;
      }
      if (v63 != 1)
      {
        uint64_t v4 = (uint64_t)(v46 + 10);
        uint64_t v65 = 1;
        while (1)
        {
          uint64_t v61 = v115;
          if (*(void *)(v4 - 8) == v56 && *(void *)v4 == v115) {
            goto LABEL_68;
          }
          if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
            goto LABEL_64;
          }
          uint64_t v91 = v65 + 1;
          if (__OFADD__(v65, 1)) {
            goto LABEL_127;
          }
          v4 += 40;
          ++v65;
          if (v91 == v63)
          {
            uint64_t v65 = v63;
            goto LABEL_70;
          }
        }
      }
      uint64_t v4 = v46[2];
      if (!v4) {
        goto LABEL_124;
      }
      uint64_t v65 = 1;
    }
    else
    {
      uint64_t v65 = 0;
      uint64_t v4 = 0;
    }
LABEL_72:
    uint64_t v66 = v65 - v4;
    if (__OFADD__(v4, v65 - v4)) {
      goto LABEL_126;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v65 > v46[3] >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      unsigned __int8 v46 = v67;
    }
    uint64_t v35 = v97;
    BOOL v68 = &v46[5 * v65 + 4];
    swift_arrayDestroy();
    BOOL v64 = v4 == v65;
    uint64_t v47 = v96;
    if (!v64)
    {
      uint64_t v69 = v46[2] - v4;
      if (v69 < 0) {
        goto LABEL_133;
      }
      memmove(v68, &v46[5 * v4 + 4], 40 * v69);
      uint64_t v70 = v46[2];
      BOOL v28 = __OFADD__(v70, v66);
      uint64_t v71 = v70 + v66;
      if (v28) {
        goto LABEL_129;
      }
      v46[2] = v71;
    }

    swift_bridgeObjectRelease();
    uint64_t v4 = v100;
    goto LABEL_81;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  uint64_t v116 = v46;
  swift_bridgeObjectRetain_n();
  specialized MutableCollection<>.sort(by:)((uint64_t *)&v116);
  swift_bridgeObjectRelease_n();
  specialized Array.append<A>(contentsOf:)();

  return v117;
}

uint64_t SharePlayDiscoverabilityAppsController.handleCallConnected(_:)()
{
  return SharePlayDiscoverabilityAppsController.appTypesNeedingSort.setter((uint64_t)&outlined read-only object #0 of SharePlayDiscoverabilityAppsController.handleCallConnected(_:));
}

Swift::Void __swiftcall SharePlayDiscoverabilityAppsController.appProtectionsChanged()()
{
}

uint64_t outlined init with copy of ProtectedAppsObserverProtocol?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProtectedAppsObserverProtocol?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of ProtectedAppsObserverProtocol?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProtectedAppsObserverProtocol?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SharePlayDiscoverabilityAppsController()
{
  return self;
}

unint64_t lazy protocol witness table accessor for type [SharePlayDiscoverabilityType] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [SharePlayDiscoverabilityType] and conformance [A];
  if (!lazy protocol witness table cache variable for type [SharePlayDiscoverabilityType] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SharePlayDiscoverabilityType]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [SharePlayDiscoverabilityType] and conformance [A]);
  }
  return result;
}

ValueMetadata *type metadata accessor for Application()
{
  return &type metadata for Application;
}

unsigned char *storeEnumTagSinglePayload for SharePlayDiscoverabilityType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C374252CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharePlayDiscoverabilityType()
{
  return &type metadata for SharePlayDiscoverabilityType;
}

uint64_t method lookup function for SharePlayDiscoverabilityAppsController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharePlayDiscoverabilityAppsController);
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.sortedApps(for:)(char a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x90))(a1 & 1);
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.foregroundApp.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.foregroundApp.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.foregroundApp.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.protectedAppsObserver.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.protectedAppsObserver.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.protectedAppsObserver.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

void outlined bridged method (mbnn) of @objc _PSPredictionContext.appBundleIdsToShareExtensionBundleIdsMapping.setter(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setAppBundleIdsToShareExtensionBundleIdsMapping_, isa);
}

uint64_t outlined bridged method (pb) of @objc _PSSuggestion.bundleID.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_bundleID);
  if (!v1) {
    return 0;
  }
  int64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t specialized _NativeDictionary.startIndex.getter(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 192;
  for (uint64_t i = 12; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void RecentsListViewController.presentDetailsView(for:sourceRect:sourceView:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v30[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RecentsCallItem(0);
  MEMORY[0x1F4188790](v7);
  int64_t v9 = (char *)&v30[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v1 + OBJC_IVAR___FTRecentsListViewController_detailControllerFactory, (uint64_t)v30);
  uint64_t v10 = v31;
  if (v31)
  {
    uint64_t v11 = v32;
    __swift_project_boxed_opaque_existential_1(v30, v31);
    uint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))(v11 + 8))(a1, 0, 0, v10, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    if (v12)
    {
      self;
      uint64_t v13 = swift_dynamicCastObjCClass();
      if (v13)
      {
        uint64_t v14 = (void *)v13;
        id v15 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x250);
        id v16 = v12;
        v15();
        RecentsCallItem.allowsFaceTimeSpamReporting.getter();
        char v18 = v17;
        swift_release();
        if (v18)
        {
          outlined init with copy of RecentsCallItem(a1, (uint64_t)v9);
          type metadata accessor for ReportSpamManager();
          LOBYTE(v30[0]) = 1;
          ReportSpamManager.__allocating_init(idsServiceType:)(v30);
          id v19 = objc_allocWithZone((Class)type metadata accessor for RecentItemContactsViewControllerDelegate(0));
          RecentItemContactsViewControllerDelegate.init(_:faceTimeReportSpamManager:)();
          OUTLINED_FUNCTION_0_117();
          (*(void (**)(void))(v20 + 528))();
          OUTLINED_FUNCTION_0_117();
          char v22 = (void *)(*(uint64_t (**)(void))(v21 + 520))();
          objc_msgSend(v14, sel_setDelegate_, v22);

          objc_msgSend(v14, sel_setActions_, (unint64_t)objc_msgSend(v14, sel_actions) & 0xFFFFFFFFFFFFF77FLL | 0x800);
        }
      }
      id v23 = objc_msgSend(v2, sel_navigationController);
      if (v23)
      {
        char v24 = v23;
        objc_msgSend(v23, sel_pushViewController_animated_, v12, 1);
      }
      return;
    }
  }
  else
  {
    outlined destroy of Conversation?((uint64_t)v30, &demangling cache variable for type metadata for RecentCallDetailControllerFactoryProtocol?);
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C3769620;
  outlined init with copy of RecentsCallItem(a1, (uint64_t)v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  uint64_t v26 = specialized >> prefix<A>(_:)();
  uint64_t v28 = v27;
  outlined destroy of Conversation?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v25 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v25 + 32) = v26;
  *(void *)(v25 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v28;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
}

uint64_t outlined init with copy of RecentCallDetailControllerFactoryProtocol?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentCallDetailControllerFactoryProtocol?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void RecentsListViewController.dismissContactsModal()()
{
  id v1 = objc_msgSend(v0, sel_presentedViewController);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void RecentsListViewController.presentDetailsView(for:)(void *a1)
{
  id v2 = v1;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v1 + OBJC_IVAR___FTRecentsListViewController_detailControllerFactory, (uint64_t)v14);
  uint64_t v4 = v15;
  if (v15)
  {
    uint64_t v5 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    unsigned int v6 = (void *)(*(uint64_t (**)(void *, void, void, void, void, uint64_t, uint64_t))(v5 + 32))(a1, 0, 0, 0, 0, v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    if (v6)
    {
      id v7 = objc_msgSend(v2, sel_navigationController);
      if (v7)
      {
        uint64_t v8 = v7;

        objc_msgSend(v8, sel_pushViewController_animated_, v6, 1);
      }
      else
      {
      }
      return;
    }
  }
  else
  {
    outlined destroy of Conversation?((uint64_t)v14, &demangling cache variable for type metadata for RecentCallDetailControllerFactoryProtocol?);
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C3769620;
  v14[0] = a1;
  type metadata accessor for CHRecentCall();
  id v10 = a1;
  uint64_t v11 = String.init<A>(reflecting:)();
  uint64_t v13 = v12;
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v13;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
}

unint64_t type metadata accessor for CHRecentCall()
{
  unint64_t result = lazy cache variable for type metadata for CHRecentCall;
  if (!lazy cache variable for type metadata for CHRecentCall)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CHRecentCall);
  }
  return result;
}

uint64_t dispatch thunk of RecentsItemDetailsPresenter.presentDetailsView(for:sourceRect:sourceView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of RecentsItemDetailsPresenter.presentDetailsView(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

id InCallBannerHostViewController.__allocating_init(controlsManager:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return InCallBannerHostViewController.init(controlsManager:)(a1);
}

void InCallBannerHostViewController.requiresControlsHidden.setter(char a1)
{
  OUTLINED_FUNCTION_4_10();
  unsigned char *v1 = a1;
  InCallBannerHostViewController.hideOrShowRootView()();
}

BOOL InCallBannerHostViewController.eligibleForDismissal.getter()
{
  return (InCallBannerHostViewController.menuPresented.getter() & 1) == 0;
}

uint64_t InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)(uint64_t a1, int a2)
{
  id v3 = v2;
  LODWORD(v69) = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v68 - v9;
  uint64_t v11 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_21();
  uint64_t v68 = v13 - v12;
  uint64_t v14 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_21();
  uint64_t v20 = (uint64_t *)(v19 - v18);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v20 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v16 + 104))(v20, *MEMORY[0x1E4FBCBE8], v14);
  char v21 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v20, v14);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_3_146(11);
  char v76 = 6;
  char v22 = static ConversationControlsType.== infix(_:_:)(a1);
  outlined destroy of ConversationControlsType((uint64_t)v75);
  outlined init with copy of ConversationControlsType(a1, (uint64_t)v74);
  if (v22)
  {
    outlined destroy of ConversationControlsType((uint64_t)v74);
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_3_146(12);
  char v76 = 6;
  char v23 = static ConversationControlsType.== infix(_:_:)((uint64_t)v74);
  outlined destroy of ConversationControlsType((uint64_t)v75);
  outlined destroy of ConversationControlsType((uint64_t)v74);
  if (v23)
  {
LABEL_5:
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_6:
      uint64_t v24 = type metadata accessor for Logger();
      __swift_project_value_buffer(v24, (uint64_t)static Logger.conversationControls);
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v25, v26))
      {
LABEL_9:

        return 0;
      }
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      uint64_t v28 = "Skipping update for collaboration HUD";
LABEL_8:
      _os_log_impl(&dword_1C2F90000, v25, v26, v28, v27, 2u);
      OUTLINED_FUNCTION_3();
      goto LABEL_9;
    }
LABEL_32:
    swift_once();
    goto LABEL_6;
  }
  id v30 = &v3[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate];
  OUTLINED_FUNCTION_2();
  if (!MEMORY[0x1C8776240](v30))
  {
    outlined init with copy of ConversationControlsType(a1, (uint64_t)v73);
    goto LABEL_19;
  }
  uint64_t v31 = *((void *)v30 + 1);
  uint64_t ObjectType = swift_getObjectType();
  LOBYTE(v31) = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 16))(ObjectType, v31);
  swift_unknownObjectRelease();
  outlined init with copy of ConversationControlsType(a1, (uint64_t)v73);
  if ((v31 & 1) == 0)
  {
LABEL_19:
    outlined destroy of ConversationControlsType((uint64_t)v73);
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_3_146(2);
  char v76 = 6;
  char v33 = static ConversationControlsType.== infix(_:_:)((uint64_t)v73);
  outlined destroy of ConversationControlsType((uint64_t)v75);
  outlined destroy of ConversationControlsType((uint64_t)v73);
  if (v33)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    __swift_project_value_buffer(v34, (uint64_t)static Logger.conversationControls);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v25, v26)) {
      goto LABEL_9;
    }
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    uint64_t v28 = "Skipping update for pending authorization request because the controls are expanded";
    goto LABEL_8;
  }
LABEL_20:
  updatedControlsType #1 () in InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)(v69 & 1, a1, (uint64_t)v3, v72);
  uint64_t v35 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType];
  swift_beginAccess();
  outlined assign with copy of ConversationControlsType((uint64_t)v72, v35);
  swift_endAccess();
  ConversationControlsType.associatedNotice.getter((uint64_t)v75);
  uint64_t v36 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_notice];
  swift_beginAccess();
  outlined assign with take of Notice?((uint64_t)v75, v36);
  swift_endAccess();
  uint64_t v37 = *(void *)&v3[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_recipeFactory];
  uint64_t v38 = (id *)&v3[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager];
  OUTLINED_FUNCTION_2();
  uint64_t v39 = *(void (**)(void, _OWORD *, id))(*(void *)v37 + 96);
  id v40 = *v38;
  v39(0, v72, v40);

  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    outlined destroy of Conversation?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    __swift_project_value_buffer(v41, (uint64_t)static Logger.conversationControls);
    outlined init with copy of ConversationControlsType((uint64_t)v72, (uint64_t)v75);
    uint64_t v42 = v3;
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      v70[0] = 0;
      v71[0] = v69;
      *(_DWORD *)uint64_t v45 = 136315650;
      uint64_t v46 = String.init<A>(reflecting:)();
      v70[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      outlined init with copy of ConversationControlsType((uint64_t)v75, (uint64_t)v70);
      uint64_t v48 = specialized >> prefix<A>(_:)((uint64_t)v70);
      unint64_t v50 = v49;
      outlined destroy of Conversation?((uint64_t)v70, &demangling cache variable for type metadata for ConversationControlsType?);
      v70[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v50, v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ConversationControlsType((uint64_t)v75);
      *(_WORD *)(v45 + 22) = 2080;
      uint64_t v51 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)*v38) + 0x840);
      id v52 = *v38;
      char v53 = v51();

      LOBYTE(v70[0]) = v53;
      uint64_t v54 = String.init<A>(reflecting:)();
      v70[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v43, v44, "InCallControls] Unable to acquire desired recipe, sizeClass:%s type:%s mode:%s", (uint8_t *)v45, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {

      outlined destroy of ConversationControlsType((uint64_t)v75);
    }
    outlined destroy of ConversationControlsType((uint64_t)v72);
    return 0;
  }
  uint64_t v56 = (uint64_t)v10;
  uint64_t v57 = v68;
  outlined init with take of ConversationControlsRecipe(v56, v68);
  id v58 = &v3[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController];
  OUTLINED_FUNCTION_2();
  uint64_t v59 = *(void **)v58;
  unint64_t v60 = (void *)MEMORY[0x1E4FBC8C8];
  if (v59)
  {
    outlined init with copy of ConversationControlsRecipe(v57, (uint64_t)v8);
    OUTLINED_FUNCTION_8_95();
    uint64_t v61 = *(void (**)(char *))((*v60 & *v59) + 0x380);
    uint64_t v62 = v59;
    v61(v8);
  }
  else
  {
    static Layout.ConversationControls.values.getter((uint64_t)v75);
    outlined init with copy of ConversationControlsRecipe(v57, (uint64_t)v8);
    OUTLINED_FUNCTION_8_95();
    id v63 = *v38;
    id v64 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDViewController());
    uint64_t v65 = ConversationHUDViewController.init(recipe:presentationSize:controlsManager:context:)((uint64_t)v8, v63, 2);
    InCallBannerHostViewController.conversationControlsViewController.setter(v65);
  }
  uint64_t v66 = *(void (**)(void))((*v60 & *(void *)*v38) + 0xA00);
  id v67 = *v38;
  v66();

  outlined destroy of ConversationControlsRecipe(v57);
  outlined destroy of ConversationControlsType((uint64_t)v72);
  return 1;
}

Swift::Void __swiftcall InCallBannerHostViewController.beginHUDTransition(isDismissed:)(Swift::Bool isDismissed)
{
  OUTLINED_FUNCTION_4_10();
  Swift::Bool *v1 = isDismissed;
  if (!isDismissed) {
    InCallBannerHostViewController.hideOrShowRootView()();
  }
}

Swift::Void __swiftcall InCallBannerHostViewController.hudTransition()()
{
  id v1 = (void **)(v0
                 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  OUTLINED_FUNCTION_2();
  id v2 = *v1;
  if (*v1)
  {
    id v3 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_isDismissed);
    OUTLINED_FUNCTION_2();
    if (*v3) {
      double v4 = 0.0;
    }
    else {
      double v4 = 1.0;
    }
    uint64_t v5 = *(void (**)(double))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x1A8);
    uint64_t v6 = v2;
    v5(v4);
  }
}

Swift::Void __swiftcall InCallBannerHostViewController.completeHUDTransition(isFinalPosition:)(Swift::Bool isFinalPosition)
{
  if (isFinalPosition) {
    InCallBannerHostViewController.hideOrShowRootView()();
  }
}

uint64_t key path getter for InCallBannerHostViewController.inCallBannerDelegate : InCallBannerHostViewController@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for InCallBannerHostViewController.inCallBannerDelegate : InCallBannerHostViewController(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t InCallBannerHostViewController.inCallBannerDelegate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate;
  OUTLINED_FUNCTION_2();
  return MEMORY[0x1C8776240](v1);
}

uint64_t InCallBannerHostViewController.inCallBannerDelegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_1();
  *(void *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*InCallBannerHostViewController.inCallBannerDelegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  _OWORD v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id InCallBannerHostViewController.controlsManager.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
  OUTLINED_FUNCTION_2();
  uint64_t v2 = *v1;
  return v2;
}

void InCallBannerHostViewController.controlsManager.setter(void *a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = *v1;
  Swift::Bool *v1 = a1;
}

uint64_t (*InCallBannerHostViewController.controlsManager.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t InCallBannerHostViewController.controlsType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType;
  OUTLINED_FUNCTION_2();
  return outlined init with copy of ConversationControlsType(v3, a1);
}

uint64_t InCallBannerHostViewController.notice.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_notice;
  OUTLINED_FUNCTION_2();
  return outlined init with copy of Notice?(v3, a1);
}

void *InCallBannerHostViewController.conversationControlsViewController.getter()
{
  uint64_t v1 = (void **)(v0
               + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  OUTLINED_FUNCTION_2();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

id key path getter for InCallBannerHostViewController.conversationControlsViewController : InCallBannerHostViewController@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  id v3 = (void **)(*a1
               + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

void key path setter for InCallBannerHostViewController.conversationControlsViewController : InCallBannerHostViewController(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  InCallBannerHostViewController.conversationControlsViewController.setter(v1);
}

void InCallBannerHostViewController.conversationControlsViewController.setter(void *a1)
{
  OUTLINED_FUNCTION_4_10();
  id v3 = *v1;
  Swift::Bool *v1 = a1;
  id v4 = a1;
  InCallBannerHostViewController.conversationControlsViewController.didset(v3);
}

void InCallBannerHostViewController.conversationControlsViewController.didset(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController];
  swift_beginAccess();
  id v4 = *(void **)v3;
  if (v4)
  {
    uint64_t v5 = *(void (**)(char *, _UNKNOWN **))((*MEMORY[0x1E4FBC8C8] & *v4) + 0x368);
    uint64_t v6 = v1;
    uint64_t v7 = v4;
    v5(v1, &protocol witness table for InCallBannerHostViewController);
    objc_msgSend(v6, sel_addChildViewController_, v7);
    objc_msgSend(v7, sel_didMoveToParentViewController_, v6);
    if (a1)
    {
      id v8 = a1;
      id v9 = objc_msgSend(v8, sel_view);
      if (!v9)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      id v10 = v9;
      id v11 = objc_msgSend(v7, sel_view);
      if (!v11)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      uint64_t v12 = v11;
      uint64_t v13 = self;
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      double v14 = (*(double (**)(void))(*(void *)static Defaults.shared + 1016))();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v8;
      aBlock[4] = partial apply for closure #1 in InCallBannerHostViewController.conversationControlsViewController.didset;
      aBlock[5] = v15;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      void aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      aBlock[3] = &block_descriptor_17_2;
      uint64_t v16 = _Block_copy(aBlock);
      id v17 = v8;
      swift_release();
      objc_msgSend(v13, sel_transitionFromView_toView_duration_options_completion_, v10, v12, 5242880, v16, v14);

      _Block_release(v16);
    }
    else
    {
      id v18 = objc_msgSend(v6, sel_view);
      if (!v18)
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      uint64_t v19 = v18;
      id v20 = objc_msgSend(v7, sel_view);
      if (!v20)
      {
LABEL_34:
        __break(1u);
        return;
      }
      char v21 = v20;
      objc_msgSend(v19, sel_addSubview_, v20);
    }
    id v22 = objc_msgSend(v7, sel_view);
    if (v22)
    {
      char v23 = v22;
      objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1C3769580;
      id v25 = objc_msgSend(v7, sel_view);
      if (v25)
      {
        os_log_type_t v26 = v25;
        id v27 = objc_msgSend(v25, sel_topAnchor);

        id v28 = objc_msgSend(v6, sel_view);
        if (v28)
        {
          uint64_t v29 = v28;
          id v30 = objc_msgSend(v28, sel_topAnchor);

          id v31 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v30);
          *(void *)(v24 + 32) = v31;
          id v32 = objc_msgSend(v7, sel_view);
          if (v32)
          {
            char v33 = v32;
            id v34 = objc_msgSend(v32, sel_leadingAnchor);

            id v35 = objc_msgSend(v6, sel_view);
            if (v35)
            {
              uint64_t v36 = v35;
              id v37 = objc_msgSend(v35, sel_leadingAnchor);

              id v38 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v37);
              *(void *)(v24 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v38;
              id v39 = objc_msgSend(v7, sel_view);
              if (v39)
              {
                id v40 = v39;
                id v41 = objc_msgSend(v39, sel_bottomAnchor);

                id v42 = objc_msgSend(v6, sel_view);
                if (v42)
                {
                  uint64_t v43 = v42;
                  id v44 = objc_msgSend(v42, sel_bottomAnchor);

                  id v45 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v44);
                  *(void *)(v24 + 48) = v45;
                  id v46 = objc_msgSend(v7, sel_view);
                  if (v46)
                  {
                    unint64_t v47 = v46;
                    id v48 = objc_msgSend(v46, sel_trailingAnchor);

                    id v49 = objc_msgSend(v6, sel_view);
                    if (v49)
                    {
                      unint64_t v50 = v49;
                      uint64_t v51 = self;
                      id v52 = objc_msgSend(v50, sel_trailingAnchor);

                      id v53 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v52);
                      *(void *)(v24 + 56) = v53;
                      aBlock[0] = v24;
                      specialized Array._endMutation()();
                      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
                      Class isa = Array._bridgeToObjectiveC()().super.isa;
                      swift_bridgeObjectRelease();
                      objc_msgSend(v51, sel_activateConstraints_, isa);

                      return;
                    }
                    goto LABEL_30;
                  }
LABEL_29:
                  __break(1u);
LABEL_30:
                  __break(1u);
                  goto LABEL_31;
                }
LABEL_28:
                __break(1u);
                goto LABEL_29;
              }
LABEL_27:
              __break(1u);
              goto LABEL_28;
            }
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_24;
  }
}

void (*InCallBannerHostViewController.conversationControlsViewController.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  id v4 = (void **)(v1
               + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  OUTLINED_FUNCTION_2();
  uint64_t v5 = *v4;
  _OWORD v3[3] = *v4;
  id v6 = v5;
  return InCallBannerHostViewController.conversationControlsViewController.modify;
}

void InCallBannerHostViewController.conversationControlsViewController.modify(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  id v4 = (id *)(*(void *)a1 + 24);
  id v3 = *v4;
  if (a2)
  {
    id v5 = v3;
    InCallBannerHostViewController.conversationControlsViewController.setter(v3);
  }
  else
  {
    InCallBannerHostViewController.conversationControlsViewController.setter(*(void **)(*(void *)a1 + 24));
  }
  free(v2);
}

uint64_t InCallBannerHostViewController.isDismissed.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_isDismissed);
  OUTLINED_FUNCTION_2();
  return *v1;
}

id InCallBannerHostViewController.init(controlsManager:)(void *a1)
{
  void (*v13)(long long *__return_ptr);
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  objc_super v20;
  long long v21[3];

  id v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v5 = &v2[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_notice];
  *(_OWORD *)id v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;
  id v6 = &v2[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_captureGroupName];
  *(void *)id v6 = 0xD00000000000001ALL;
  *((void *)v6 + 1) = 0x80000001C37C0070;
  uint64_t v7 = OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_recipeFactory;
  uint64_t v8 = one-time initialization token for shared;
  id v9 = v2;
  if (v8 != -1) {
    swift_once();
  }
  *(void *)&v2[v7] = static ConversationControlsRecipeGenerator.shared;
  uint64_t v10 = OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_features;
  uint64_t v11 = one-time initialization token for shared;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = static Features.shared;
  *(void *)&v9[v10] = static Features.shared;
  *(void *)&v9[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController] = 0;
  v9[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_isDismissed] = 1;
  v9[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_needsMenuContainerView] = 0;
  v9[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden] = 0;
  *(void *)&v9[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager] = a1;
  uint64_t v13 = *(void (**)(long long *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x848);
  double v14 = v12;
  uint64_t v15 = a1;
  v13(v21);
  outlined init with take of ConversationControlsType(v21, &v9[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType]);

  v20.receiver = v9;
  v20.super_class = ObjectType;
  uint64_t v16 = objc_msgSendSuper2(&v20, sel_initWithNibName_bundle_, 0, 0);
  id v17 = (uint64_t)v16 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType;
  OUTLINED_FUNCTION_2();
  outlined init with copy of ConversationControlsType(v17, (uint64_t)v21);
  id v18 = v16;
  InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)((uint64_t)v21, 0);

  outlined destroy of ConversationControlsType((uint64_t)v21);
  return v18;
}

id InCallBannerHostViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallBannerHostViewController.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_notice];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  id v2 = &v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_captureGroupName];
  *id v2 = 0xD00000000000001ALL;
  v2[1] = 0x80000001C37C0070;
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_recipeFactory;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  *(void *)&v0[v3] = static ConversationControlsRecipeGenerator.shared;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_features;
  uint64_t v5 = one-time initialization token for shared;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  id v6 = static Features.shared;
  *(void *)&v0[v4] = static Features.shared;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_isDismissed] = 1;
  v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_needsMenuContainerView] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden] = 0;
  id v7 = v6;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Bool __swiftcall InCallBannerHostViewController._canShowWhileLocked()()
{
  return 1;
}

Swift::Void __swiftcall InCallBannerHostViewController.viewDidLoad()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  InCallBannerHostViewController.hideOrShowRootView()();
}

void InCallBannerHostViewController.hideOrShowRootView()()
{
  id v1 = objc_msgSend(v0, sel_viewIfLoaded);
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = &v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_isDismissed];
    OUTLINED_FUNCTION_2();
    if (*v3)
    {
      uint64_t v4 = 1;
    }
    else
    {
      uint64_t v5 = &v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden];
      OUTLINED_FUNCTION_2();
      uint64_t v4 = *v5;
    }
    objc_msgSend(v2, sel_setHidden_, v4);
  }
}

void InCallBannerHostViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  uint64_t v4 = v3;
  v26.receiver = v3;
  v26.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v26, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.conversationControls);
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446466;
    uint64_t v12 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t v14 = CGSize.debugDescription.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v9, v10, "[%{public}s] willTransition(to size: %{public}s, with coordinator:)", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  uint64_t v24 = (void (*)(int))TPNumberPadCharacter.rawValue.getter;
  uint64_t v25 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v21 = 1107296256;
  id v22 = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
  char v23 = &block_descriptor_124;
  uint64_t v16 = _Block_copy(&aBlock);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v4;
  uint64_t v24 = partial apply for closure #2 in SystemBannerHostViewController.viewWillTransition(to:with:);
  uint64_t v25 = v17;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v21 = 1107296256;
  id v22 = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
  char v23 = &block_descriptor_3_0;
  id v18 = _Block_copy(&aBlock);
  id v19 = v4;
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v16, v18);
  _Block_release(v18);
  _Block_release(v16);
}

Swift::Void __swiftcall InCallBannerHostViewController.callDetailsGestureRecognizerTapped()()
{
  uint64_t v0 = type metadata accessor for SpringBoardUtilities();
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)(v0, v1);
}

void closure #1 in InCallBannerHostViewController.callDetailsGestureRecognizerTapped()(char a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = a2 + 16;
    OUTLINED_FUNCTION_2();
    uint64_t v3 = MEMORY[0x1C8776240](v2);
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      uint64_t v5 = v3 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate;
      OUTLINED_FUNCTION_2();
      if (MEMORY[0x1C8776240](v5))
      {
        uint64_t v6 = *(void *)(v5 + 8);

        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v6 + 32))(ObjectType, v6);
        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.conversationControls);
    oschar log = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v10 = 0;
      _os_log_impl(&dword_1C2F90000, oslog, v9, "Ignoring tap on call details button. Springboard wasn't unlocked.", v10, 2u);
      OUTLINED_FUNCTION_3();
    }
  }
}

Swift::Void __swiftcall InCallBannerHostViewController.controlsPreferredContentSizeChanged(presentingMenu:)(Swift::Bool presentingMenu)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_21();
  os_log_type_t v10 = (uint64_t *)(v9 - v8);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *os_log_type_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v10, *MEMORY[0x1E4FBCBE8], v4);
  char v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v10, v4);
  if (v11)
  {
    uint64_t v12 = (id *)(v2
               + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
    OUTLINED_FUNCTION_2();
    if (*v12)
    {
      objc_msgSend(*v12, sel_preferredContentSize);
      double v14 = v13;
      double v16 = v15;
      uint64_t v17 = v2 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate;
      OUTLINED_FUNCTION_2();
      if (MEMORY[0x1C8776240](v17))
      {
        uint64_t v18 = *(void *)(v17 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, Swift::Bool, uint64_t, uint64_t, double, double))(v18 + 24))(v2, presentingMenu, ObjectType, v18, v14, v16);
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t InCallBannerHostViewController.menuPresented.getter()
{
  uint64_t v1 = (void **)(v0
                 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  OUTLINED_FUNCTION_2();
  uint64_t v2 = *v1;
  if (*v1)
  {
    uint64_t v3 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x3A8);
    uint64_t v4 = v2;
    char v5 = v3();
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t InCallBannerHostViewController.needsMenuContainerView.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_needsMenuContainerView);
}

uint64_t InCallBannerHostViewController.needsBackgroundBlur.getter()
{
  return 0;
}

uint64_t InCallBannerHostViewController.requiresControlsHidden.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for InCallBannerHostViewController.requiresControlsHidden : InCallBannerHostViewController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void (*InCallBannerHostViewController.requiresControlsHidden.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return InCallBannerHostViewController.requiresControlsHidden.modify;
}

void InCallBannerHostViewController.requiresControlsHidden.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    InCallBannerHostViewController.hideOrShowRootView()();
  }
}

void InCallBannerHostViewController.layoutIdiom.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t InCallBannerHostViewController.captureGroup.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_captureGroupName);
  swift_bridgeObjectRetain();
  return v1;
}

id InCallBannerHostViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void InCallBannerHostViewController.init(nibName:bundle:)()
{
}

id InCallBannerHostViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void protocol witness for InCallConversationControlsViewControllerDelegate.layoutIdiom.getter in conformance InCallBannerHostViewController(unsigned char *a1@<X8>)
{
}

uint64_t protocol witness for ConversationControlsViewControllerDelegate.captureGroup.getter in conformance InCallBannerHostViewController()
{
  return InCallBannerHostViewController.captureGroup.getter();
}

_OWORD *updatedControlsType #1 () in InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1F4188790](v8 - 8);
  os_log_type_t v10 = (char *)&v42[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)static Logger.conversationControls);
    outlined init with copy of ConversationControlsType(a2, (uint64_t)v45);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      double v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v42[0] = v15;
      *(_DWORD *)double v14 = 136315138;
      outlined init with copy of ConversationControlsType((uint64_t)v45, (uint64_t)v43);
      uint64_t v16 = specialized >> prefix<A>(_:)((uint64_t)v43);
      unint64_t v18 = v17;
      outlined destroy of Conversation?((uint64_t)v43, &demangling cache variable for type metadata for ConversationControlsType?);
      *(void *)uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ConversationControlsType((uint64_t)v45);
      _os_log_impl(&dword_1C2F90000, v12, v13, "Forcing update to requested controls type: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v15, -1, -1);
      MEMORY[0x1C87760E0](v14, -1, -1);
    }
    else
    {
      outlined destroy of ConversationControlsType((uint64_t)v45);
    }

    return (_OWORD *)outlined init with copy of ConversationControlsType(a2, (uint64_t)a4);
  }
  id v19 = (void **)(a3
                  + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  swift_beginAccess();
  id v20 = *v19;
  if (!*v19) {
    return (_OWORD *)outlined init with copy of ConversationControlsType(a2, (uint64_t)a4);
  }
  uint64_t v21 = (void *)MEMORY[0x1E4FBC8C8];
  id v22 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v20) + 0x378);
  char v23 = v20;
  v22();

  uint64_t v24 = type metadata accessor for ConversationControlsRecipe();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v24))
  {
    outlined destroy of Conversation?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    return (_OWORD *)outlined init with copy of ConversationControlsType(a2, (uint64_t)a4);
  }
  outlined init with copy of ConversationControlsType((uint64_t)v10, (uint64_t)v43);
  outlined destroy of Conversation?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  outlined init with take of ConversationControlsType((long long *)v43, v45);
  memset(v43, 0, sizeof(v43));
  unsigned __int8 v44 = 6;
  char v26 = static ConversationControlsType.== infix(_:_:)(a2);
  uint64_t v27 = outlined destroy of ConversationControlsType((uint64_t)v43);
  if (v26)
  {
    outlined init with copy of ConversationControlsType((uint64_t)v45, (uint64_t)v43);
    int v28 = v44;
    uint64_t v27 = outlined destroy of ConversationControlsType((uint64_t)v43);
    if (!v28)
    {
      if (one-time initialization token for conversationControls != -1) {
        swift_once();
      }
      uint64_t v32 = type metadata accessor for Logger();
      __swift_project_value_buffer(v32, (uint64_t)static Logger.conversationControls);
      char v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v33, v34)) {
        goto LABEL_24;
      }
      id v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v35 = 0;
      goto LABEL_23;
    }
  }
  if (((*(uint64_t (**)(uint64_t))((*v21 & **(void **)(a3
                                                                 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_features))
                                           + 0xC0))(v27) & 1) != 0)
    goto LABEL_26;
  *(void *)uint64_t v43 = 6;
  memset(&v43[8], 0, 32);
  unsigned __int8 v44 = 6;
  char v29 = static ConversationControlsType.== infix(_:_:)(a2);
  outlined destroy of ConversationControlsType((uint64_t)v43);
  if ((v29 & 1) == 0) {
    goto LABEL_26;
  }
  outlined init with copy of ConversationControlsType((uint64_t)v45, (uint64_t)v43);
  if (v44 != 6
    || (int8x16_t v30 = vorrq_s8(*(int8x16_t *)&v43[8], *(int8x16_t *)&v43[24]),
        *(void *)&vorr_s8(*(int8x8_t *)v30.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v30, v30, 8uLL)) | *(void *)v43))
  {
    outlined destroy of ConversationControlsType((uint64_t)v45);
    id v31 = (long long *)v43;
LABEL_27:
    outlined destroy of ConversationControlsType((uint64_t)v31);
    return (_OWORD *)outlined init with copy of ConversationControlsType(a2, (uint64_t)a4);
  }
  outlined destroy of ConversationControlsType((uint64_t)v43);
  id v37 = (id *)(a3 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
  swift_beginAccess();
  id v38 = *(uint64_t (**)(void))((*v21 & *(void *)*v37) + 0x280);
  id v39 = *v37;
  LOBYTE(v38) = v38();

  if (v38)
  {
LABEL_26:
    id v31 = v45;
    goto LABEL_27;
  }
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  __swift_project_value_buffer(v40, (uint64_t)static Logger.conversationControls);
  char v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v34))
  {
    id v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v35 = 0;
LABEL_23:
    _os_log_impl(&dword_1C2F90000, v33, v34, v36, v35, 2u);
    MEMORY[0x1C87760E0](v35, -1, -1);
  }
LABEL_24:

  return outlined init with take of ConversationControlsType(v45, a4);
}

uint64_t outlined init with copy of Notice?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notice?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3746780()
{
  return swift_deallocObject();
}

uint64_t sub_1C37467B8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C3746804(char *a1)
{
}

uint64_t dispatch thunk of InCallBannerDelegate.inCallBannerDisplayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InCallBannerDelegate.isPresentingCallDetails.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InCallBannerDelegate.updateState(for:preferredControlsSize:presentingMenu:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of InCallBannerDelegate.presentCallDetails()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t type metadata accessor for InCallBannerHostViewController()
{
  return self;
}

uint64_t method lookup function for InCallBannerHostViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InCallBannerHostViewController);
}

uint64_t dispatch thunk of InCallBannerHostViewController.__allocating_init(controlsManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

id partial apply for closure #1 in InCallBannerHostViewController.conversationControlsViewController.didset()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromParentViewController);
}

void static ParticipantLayout.expandingFrame(_:of:in:displayScale:scaleFactor:shouldInsetFromEdge:)(unint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, double a6, double a7, double a8)
{
  uint64_t v18 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > a1)
  {
    double v48 = a6;
    double v49 = a7;
    id v22 = (double *)(a2 + 32 * a1);
    a7 = v22[4];
    a6 = v22[5];
    double v23 = v22[6];
    double v8 = v22[7];
    double v24 = 1.0;
    if ((a4 & 1) == 0) {
      double v24 = v22[6];
    }
    double v25 = v24 * *(double *)&a3;
    uint64_t v26 = *MEMORY[0x1E4FBBEA8];
    uint64_t v27 = *(void (**)(uint64_t))(v19 + 104);
    uint64_t v28 = OUTLINED_FUNCTION_3_10();
    v27(v28);
    double v50 = a8;
    a8 = CGFloat.rounded(_:toScale:)((uint64_t)v21, a8, v25);
    char v29 = *(void (**)(uint64_t))(v19 + 8);
    uint64_t v30 = OUTLINED_FUNCTION_1_82();
    v29(v30);
    v51.origin.CGFloat x = OUTLINED_FUNCTION_0_118();
    double MinX = CGRectGetMinX(v51);
    v52.origin.CGFloat x = OUTLINED_FUNCTION_0_118();
    double MaxX = CGRectGetMaxX(v52);
    v53.origin.CGFloat x = OUTLINED_FUNCTION_0_118();
    double MinY = CGRectGetMinY(v53);
    v54.origin.CGFloat x = OUTLINED_FUNCTION_0_118();
    double MaxY = CGRectGetMaxY(v54);
    if (a5)
    {
      if (MinX < 1.0)
      {
LABEL_9:
        double v9 = v23 + a8;
LABEL_11:
        if (MinY < 1.0) {
          goto LABEL_16;
        }
        if (v49 + -1.0 < MaxY)
        {
          a6 = a6 - a8;
          goto LABEL_16;
        }
        double v35 = a8 * 0.5;
LABEL_15:
        uint64_t v42 = OUTLINED_FUNCTION_3_10();
        v27(v42);
        double v43 = CGFloat.rounded(_:toScale:)((uint64_t)v21, v50, v35);
        uint64_t v44 = OUTLINED_FUNCTION_1_82();
        v29(v44);
        a6 = a6 - v43;
LABEL_16:
        swift_bridgeObjectRetain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_17;
        }
        goto LABEL_21;
      }
      if (v48 + -1.0 < MaxX)
      {
        a7 = a7 - a8;
        goto LABEL_9;
      }
    }
    double v35 = a8 * 0.5;
    double v48 = a6;
    double v36 = v8;
    double v37 = a8;
    double v38 = MinY;
    double v39 = MaxY;
    ((void (*)(char *, uint64_t, uint64_t))v27)(v21, v26, v18);
    double v40 = CGFloat.rounded(_:toScale:)((uint64_t)v21, v50, v35);
    uint64_t v41 = OUTLINED_FUNCTION_1_82();
    v29(v41);
    double MaxY = v39;
    double MinY = v38;
    a8 = v37;
    double v8 = v36;
    a6 = v48;
    a7 = a7 - v40;
    double v9 = v23 + a8;
    if ((a5 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  __break(1u);
LABEL_21:
  specialized _ArrayBuffer._consumeAndCreateNew()();
  a2 = v46;
LABEL_17:
  if (*(void *)(a2 + 16) <= a1)
  {
    __break(1u);
  }
  else
  {
    id v45 = (double *)(a2 + 32 * a1);
    v45[4] = a7;
    v45[5] = a6;
    v45[6] = v9;
    v45[7] = v8 + a8;
  }
}

BOOL static DeviceType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void DeviceType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int DeviceType.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance DeviceType(char *a1, char *a2)
{
  return static DeviceType.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance DeviceType()
{
  return DeviceType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance DeviceType(uint64_t a1)
{
  DeviceType.hash(into:)(a1, *v1);
}

double TileScaleFactor.sizeToIncrease(for:)(uint64_t a1, char a2, double a3, double a4, double a5)
{
  double v5 = 1.0;
  if ((a2 & 1) == 0) {
    double v5 = a5;
  }
  return v5 * *(double *)&a1;
}

unint64_t lazy protocol witness table accessor for type DeviceType and conformance DeviceType()
{
  unint64_t result = lazy protocol witness table cache variable for type DeviceType and conformance DeviceType;
  if (!lazy protocol witness table cache variable for type DeviceType and conformance DeviceType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DeviceType and conformance DeviceType);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DeviceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3746DA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceType()
{
  return &type metadata for DeviceType;
}

uint64_t dispatch thunk of ParticipantLayout.frames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for TileScaleFactor()
{
  return &type metadata for TileScaleFactor;
}

uint64_t ReactionPickerTipViewConstraintManager.__allocating_init(containingGuide:localParticipantView:reactionPickerTipView:)(void *a1, void *a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  ReactionPickerTipViewConstraintManager.init(containingGuide:localParticipantView:reactionPickerTipView:)(a1, a2, a3);
  return v6;
}

void *ReactionPickerTipViewConstraintManager.init(containingGuide:localParticipantView:reactionPickerTipView:)(void *a1, void *a2, id a3)
{
  v3[7] = MEMORY[0x1E4FBC860];
  id v7 = objc_msgSend(a3, sel_bottomAnchor);
  id v8 = objc_msgSend(a2, sel_topAnchor);
  id v9 = objc_msgSend(v7, sel_constraintGreaterThanOrEqualToAnchor_constant_, v8, -10.0);

  v3[2] = v9;
  id v10 = objc_msgSend(a3, sel_trailingAnchor);
  id v11 = objc_msgSend(a2, sel_trailingAnchor);
  id v12 = OUTLINED_FUNCTION_1_156();

  _OWORD v3[3] = v12;
  id v13 = objc_msgSend(a3, sel_bottomAnchor);
  id v14 = objc_msgSend(a1, sel_bottomAnchor);
  id v15 = OUTLINED_FUNCTION_1_156();

  v3[4] = v15;
  id v16 = objc_msgSend(a3, sel_trailingAnchor);
  id v17 = objc_msgSend(a1, sel_trailingAnchor);
  id v18 = OUTLINED_FUNCTION_1_156();

  v3[5] = v18;
  id v19 = objc_msgSend(a3, sel_widthAnchor);
  if (one-time initialization token for defaultTipWidth != -1) {
    swift_once();
  }
  id v20 = objc_msgSend(v19, sel_constraintEqualToConstant_, *(double *)&static Layout.Reactions.defaultTipWidth);

  v3[6] = v20;
  return v3;
}

uint64_t ReactionPickerTipViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(uint64_t a1)
{
  unint64_t v2 = (unint64_t)v1;
  unsigned int v3 = *(unsigned __int8 *)(a1 + 17);
  int v4 = *(unsigned __int8 *)(a1 + 21);
  uint64_t v5 = v1 + 7;
  swift_beginAccess();
  *(void *)(v2 + 56) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  if (v4 != 1) {
    return swift_bridgeObjectRetain();
  }
  if (v3 >> 6)
  {
    if (v3 >> 6 != 1) {
      return swift_bridgeObjectRetain();
    }
    v3 &= 0x3Fu;
  }
  uint64_t v6 = *(void **)(v2 + 48);
  OUTLINED_FUNCTION_0_52();
  id v7 = v6;
  MEMORY[0x1C87733A0]();
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((*(void *)(v2 + 56) & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x10));
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  if (v3 == 3)
  {
    id v9 = *(void **)(v2 + 16);
    id v8 = *(void **)(v2 + 24);
    OUTLINED_FUNCTION_0_52();
    unint64_t v2 = *(void *)(v2 + 56);
    if (v2 >> 62)
    {
      id v20 = v9;
      id v21 = v8;
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v11 = v9;
      id v12 = v8;
    }
    uint64_t result = v10 + 2;
    if (!__OFADD__(v10, 2)) {
      goto LABEL_14;
    }
    __break(1u);
  }
  id v9 = *(void **)(v2 + 32);
  id v8 = *(void **)(v2 + 40);
  OUTLINED_FUNCTION_0_52();
  unint64_t v14 = *(void *)(v2 + 56);
  if (v14 >> 62)
  {
    id v22 = v9;
    id v23 = v8;
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v16 = v9;
    id v17 = v8;
  }
  uint64_t result = v15 + 2;
  if (!__OFADD__(v15, 2))
  {
LABEL_14:
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(result, 1);
    specialized Array._endMutation()();
    id v18 = v9;
    MEMORY[0x1C87733A0]();
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10));
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v19 = v8;
    MEMORY[0x1C87733A0]();
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10));
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

    return swift_bridgeObjectRetain();
  }
  __break(1u);
  return result;
}

id *ReactionPickerTipViewConstraintManager.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ReactionPickerTipViewConstraintManager.__deallocating_deinit()
{
  ReactionPickerTipViewConstraintManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance ReactionPickerTipViewConstraintManager()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t type metadata accessor for ReactionPickerTipViewConstraintManager()
{
  return self;
}

uint64_t method lookup function for ReactionPickerTipViewConstraintManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ReactionPickerTipViewConstraintManager);
}

uint64_t dispatch thunk of ReactionPickerTipViewConstraintManager.__allocating_init(containingGuide:localParticipantView:reactionPickerTipView:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ReactionPickerTipViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t static PlatformEffectViewStyle.blurStyle(for:)(char a1)
{
  return qword_1C378FB20[a1];
}

BOOL static PlatformEffectViewStyle.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void PlatformEffectViewStyle.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int PlatformEffectViewStyle.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance PlatformEffectViewStyle(char *a1, char *a2)
{
  return static PlatformEffectViewStyle.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PlatformEffectViewStyle()
{
  return PlatformEffectViewStyle.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance PlatformEffectViewStyle(uint64_t a1)
{
  PlatformEffectViewStyle.hash(into:)(a1, *v1);
}

unint64_t lazy protocol witness table accessor for type PlatformEffectViewStyle and conformance PlatformEffectViewStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type PlatformEffectViewStyle and conformance PlatformEffectViewStyle;
  if (!lazy protocol witness table cache variable for type PlatformEffectViewStyle and conformance PlatformEffectViewStyle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlatformEffectViewStyle and conformance PlatformEffectViewStyle);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlatformEffectViewStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C37475B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlatformEffectViewStyle()
{
  return &type metadata for PlatformEffectViewStyle;
}

uint64_t ConversationControlsVideoMenuButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:isAVLess:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(swift_allocObject() + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a6;
  return ConversationControlsMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)();
}

uint64_t ConversationControlsVideoMenuButtonProvider.isAVLess.getter()
{
  return *(unsigned __int8 *)(v0 + 160);
}

Swift::Bool __swiftcall ConversationControlsVideoMenuButtonProvider.shouldEnableMenu()()
{
  return *(unsigned char *)(v0 + 160);
}

uint64_t ConversationControlsVideoMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:isAVLess:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 16ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a6;
  return ConversationControlsMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)();
}

void ConversationControlsVideoMenuButtonProvider.__allocating_init(coder:)()
{
}

void ConversationControlsVideoMenuButtonProvider.init(coder:)()
{
}

Swift::Void __swiftcall ConversationControlsVideoMenuButtonProvider.toggleVideoButtonTapped()()
{
  swift_beginAccess();
  uint64_t v1 = MEMORY[0x1C8776240](v0 + 16);
  if (v1)
  {
    unint64_t v2 = (void *)v1;
    objc_msgSend(*(id *)(v0 + 136), sel_toggleVideoButtonTappedWithButton_, v1);
  }
}

Swift::Void __swiftcall ConversationControlsVideoMenuButtonProvider.buttonChanged()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<ControlsActionState>.Publisher);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ControlsButtonProvider.buttonChanged()();
  swift_beginAccess();
  uint64_t v6 = (void *)MEMORY[0x1C8776240](v0 + 16);
  if (v6)
  {
    id v7 = v6;
    outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD000000000000011, 0x80000001C37971F0, v6);
    objc_msgSend(v7, sel_addTarget_action_forControlEvents_, v0, sel_toggleVideoButtonTapped, 0x2000);
    type metadata accessor for ConversationControlsButton();
    if (swift_dynamicCastClass())
    {
      id v8 = self;
      id v9 = v7;
      uint64_t v10 = (objc_class *)objc_msgSend(v8, sel_conversationKit);
      OUTLINED_FUNCTION_4_6();
      v11.super.Class isa = v10;
      uint64_t v16 = OUTLINED_FUNCTION_2_29(v12, v13, v14, v15, v11);
      uint64_t v18 = v17;

      ConversationControlsButton.localizedName.setter(v16, v18);
    }
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 136)) + 0x628))();
    swift_allocObject();
    swift_weakInit();
    lazy protocol witness table accessor for type Published<ControlsActionState>.Publisher and conformance Published<A>.Publisher();
    uint64_t v19 = Publisher<>.sink(receiveValue:)();

    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    swift_beginAccess();
    *(void *)(v1 + 48) = v19;
    swift_release();
  }
}

void closure #1 in ConversationControlsVideoMenuButtonProvider.buttonChanged()(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    uint64_t v5 = Strong + 16;
    swift_beginAccess();
    uint64_t v6 = (void *)MEMORY[0x1C8776240](v5);
    if (v6)
    {
      id v7 = v6;
      objc_msgSend(v6, sel_setEnabled_, v1);
      objc_msgSend(v7, sel_setSelected_, v2);
      objc_msgSend(v7, sel_setShowsMenuAsPrimaryAction_, *(unsigned __int8 *)(v4 + 160));
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

UIMenu ConversationControlsVideoMenuButtonProvider.menu(for:)()
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  uint64_t v0 = self;
  uint64_t v1 = (objc_class *)objc_msgSend(v0, sel_conversationKit);
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_4_6();
  v2.super.Class isa = v1;
  OUTLINED_FUNCTION_2_29(v3, v4, v5, v6, v2);

  id v7 = self;
  id v8 = (void *)MEMORY[0x1C87730B0](0x656E6F6870, 0xE500000000000000);
  id v9 = objc_msgSend(v7, sel___systemImageNamedSwift_, v8);

  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v12 = (objc_class *)objc_msgSend(v0, sel_conversationKit, 0, 0, 0, partial apply for closure #1 in ConversationControlsVideoMenuButtonProvider.menu(for:), v10);
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_4_6();
  v13.super.Class isa = v12;
  OUTLINED_FUNCTION_2_29(v14, v15, v16, v17, v13);

  uint64_t v18 = (void *)MEMORY[0x1C87730B0](0x6F65646976, 0xE500000000000000);
  id v19 = objc_msgSend(v7, sel___systemImageNamedSwift_, v18);

  swift_allocObject();
  swift_weakInit();
  uint64_t v20 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIMenu);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C3769610;
  *(void *)(v21 + 32) = v20;
  *(void *)(v21 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v11;
  UIMenuElementSize preferredElementSize = v21;
  specialized Array._endMutation()();
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v25.value.super.Class isa = 0;
  v25.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v22, (Swift::String_optional)0, v25, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0);
}

void closure #1 in ConversationControlsVideoMenuButtonProvider.menu(for:)()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    uint64_t v2 = Strong + 16;
    swift_beginAccess();
    uint64_t v3 = MEMORY[0x1C8776240](v2);
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      objc_msgSend(*(id *)(v1 + 136), sel_toggleMicButtonTappedWithButton_, v3);
      ConversationControlsMenuButtonProvider.disableMenuContainerViewInteraction()();
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t closure #2 in ConversationControlsVideoMenuButtonProvider.menu(for:)()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    ConversationControlsVideoMenuButtonProvider.toggleVideoButtonTapped()();
    ConversationControlsMenuButtonProvider.disableMenuContainerViewInteraction()();
    return swift_release();
  }
  return result;
}

void ConversationControlsVideoMenuButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:)()
{
}

void ConversationControlsVideoMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)()
{
}

uint64_t ConversationControlsVideoMenuButtonProvider.__deallocating_deinit()
{
  ConversationControlsMenuButtonProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C3747F80()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsVideoMenuButtonProvider.buttonChanged()(unsigned __int8 *a1)
{
}

unint64_t lazy protocol witness table accessor for type Published<ControlsActionState>.Publisher and conformance Published<A>.Publisher()
{
  unint64_t result = lazy protocol witness table cache variable for type Published<ControlsActionState>.Publisher and conformance Published<A>.Publisher;
  if (!lazy protocol witness table cache variable for type Published<ControlsActionState>.Publisher and conformance Published<A>.Publisher)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Published<ControlsActionState>.Publisher);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Published<ControlsActionState>.Publisher and conformance Published<A>.Publisher);
  }
  return result;
}

void partial apply for closure #1 in ConversationControlsVideoMenuButtonProvider.menu(for:)()
{
}

uint64_t partial apply for closure #2 in ConversationControlsVideoMenuButtonProvider.menu(for:)()
{
  return closure #2 in ConversationControlsVideoMenuButtonProvider.menu(for:)();
}

uint64_t type metadata accessor for ConversationControlsVideoMenuButtonProvider()
{
  return self;
}

uint64_t method lookup function for ConversationControlsVideoMenuButtonProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationControlsVideoMenuButtonProvider);
}

uint64_t dispatch thunk of ConversationControlsVideoMenuButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:isAVLess:)()
{
  return (*(uint64_t (**)(void))(v0 + 592))();
}

uint64_t dispatch thunk of ConversationControlsVideoMenuButtonProvider.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 600))();
}

uint64_t specialized _ArrayProtocol.filter(_:)(unint64_t a1, char *a2)
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      uint64_t v6 = OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_lowConfidenceThreshold;
      unint64_t v7 = a1 & 0xC000000000000001;
      uint64_t v14 = OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_lowConfidenceThreshold;
      while (v7)
      {
        id v8 = (id)MEMORY[0x1C87744F0](v5, a1);
LABEL_7:
        id v9 = v8;
        unint64_t v10 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_15;
        }
        objc_msgSend(v8, sel_confidence);
        if (v11 >= *(double *)&a2[v6])
        {
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v6 = v14;
          unint64_t v7 = a1 & 0xC000000000000001;
        }
        ++v5;
        if (v10 == v4)
        {
          uint64_t v12 = v15;
          goto LABEL_18;
        }
      }
      if (v5 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        goto LABEL_17;
      }
    }
    id v8 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_7;
  }
LABEL_17:
  uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_18:

  swift_bridgeObjectRelease();
  return v12;
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo16AVCCaptionsTokenCG_So8_NSRangeVs5NeverOTg5097_s15ConversationKit025CaptionsClientParticipantC8ProviderC08captionsD0_09didUpdateC06sourceySo011dq15CSg_So0K6Resultvwx13SourceVtFSo8_f6VSo0K5E54Ccfu2_33_4c94f2a9ae96d10c2646dde87984b78dArPTf3nnnpk_nTf1cn_n(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v3 = 0;
    while (v2 != v3)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v4 = (id)MEMORY[0x1C87744F0](v3, a1);
      }
      else {
        id v4 = *(id *)(a1 + 8 * v3 + 32);
      }
      unint64_t v5 = v4;
      id v6 = objc_msgSend(v4, sel_range);
      uint64_t v8 = v7;

      unint64_t v9 = *(void *)(v11 + 16);
      if (v9 >= *(void *)(v11 + 24) >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v3;
      *(void *)(v11 + 16) = v9 + 1;
      uint64_t v10 = v11 + 16 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v8;
      if (v2 == v3) {
        return;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
}

id CaptionsClientParticipantCaptionsProvider.__allocating_init(logger:token:usage:)(uint64_t a1, uint64_t a2, int a3)
{
  id v7 = objc_allocWithZone(v3);
  return CaptionsClientParticipantCaptionsProvider.init(logger:token:usage:)(a1, a2, a3);
}

id CaptionsClientParticipantCaptionsProvider.token.getter()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient)) {
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient), sel_streamToken);
  }
  else {
    return 0;
  }
}

uint64_t CaptionsClientParticipantCaptionsProvider.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_logger;
  uint64_t v4 = type metadata accessor for Logger();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t key path getter for CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate : CaptionsClientParticipantCaptionsProvider@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x78))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate : CaptionsClientParticipantCaptionsProvider(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x80);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate.getter()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_participantCaptionsProviderDelegate;
  swift_beginAccess();
  return MEMORY[0x1C8776240](v1);
}

uint64_t CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2
     + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_participantCaptionsProviderDelegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_participantCaptionsProviderDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  _OWORD v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id CaptionsClientParticipantCaptionsProvider.init(logger:token:usage:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  LODWORD(v92) = a3;
  type metadata accessor for LanguageManager();
  OUTLINED_FUNCTION_4();
  uint64_t v90 = v8;
  uint64_t v91 = v7;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_21();
  uint64_t v9 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_participantCaptionsProviderDelegate];
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_participantCaptionsProviderDelegate
               + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient;
  *(void *)&v3[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient] = 0;
  uint64_t v11 = OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_lowConfidenceThreshold;
  uint64_t v12 = one-time initialization token for shared;
  NSBundle v13 = v4;
  if (v12 != -1) {
    swift_once();
  }
  *(double *)&v4[v11] = (*(double (**)(void))(*(void *)static Defaults.shared + 752))();
  uint64_t v14 = &v13[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_logger];
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v93 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v14, a1, v15);

  uint64_t v16 = a1;
  if (!a2)
  {
    uint64_t v32 = v15;
    char v33 = Logger.logObject.getter();
    uint64_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, (os_log_type_t)v34))
    {
      double v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v35 = 0;
      _os_log_impl(&dword_1C2F90000, v33, (os_log_type_t)v34, "Requesting captions provider with stream token == 0. Will not create client.", v35, 2u);
      OUTLINED_FUNCTION_3();
    }

    double v36 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
    v36(v16, v32);
    v36((uint64_t)v14, v32);
    outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v9);

    type metadata accessor for CaptionsClientParticipantCaptionsProvider();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v97.receiver = v13;
  v97.super_class = (Class)type metadata accessor for CaptionsClientParticipantCaptionsProvider();
  id v17 = objc_msgSendSuper2(&v97, sel_init);
  id v18 = objc_allocWithZone(MEMORY[0x1E4F47910]);
  id v19 = (char *)v17;
  id v20 = objc_msgSend(v18, sel_initWithDelegate_streamToken_, v19, a2);
  if (!v20)
  {

    double v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v88 = v19;
      double v39 = (uint8_t *)OUTLINED_FUNCTION_37();
      v95[0] = OUTLINED_FUNCTION_9_0();
      *(_DWORD *)double v39 = 136315138;
      uint64_t v96 = a2;
      uint64_t v40 = String.init<A>(reflecting:)();
      uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v37, v38, "Failed to create AVCCaptionsClient with stream token %s.", v39, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();

      OUTLINED_FUNCTION_26_2();
      v42();
    }
    else
    {

      OUTLINED_FUNCTION_26_2();
      v80();
    }
    return 0;
  }
  id v21 = v20;
  id v22 = v20;
  id v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  uint64_t v88 = v19;
  uint64_t v89 = v16;
  id v85 = v17;
  uint64_t v86 = v15;
  id v83 = v22;
  id v84 = v21;
  if (os_log_type_enabled(v23, v24))
  {
    UIImage_optional v25 = v22;
    uint64_t v26 = swift_slowAlloc();
    v95[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v96 = a2;
    uint64_t v27 = String.init<A>(reflecting:)();
    uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    uint64_t v96 = (uint64_t)v25;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for AVCCaptionsClient);
    id v29 = v25;
    uint64_t v30 = String.init<A>(reflecting:)();
    uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v23, v24, "Captions client created for token %s: %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v43 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_4();
  uint64_t v87 = v44;
  uint64_t v46 = *(void *)(v45 + 64);
  MEMORY[0x1F4188790](v47);
  unint64_t v48 = (v46 + 15) & 0xFFFFFFFFFFFFFFF0;
  double v49 = (char *)v82 - v48;
  uint64_t v50 = Locale.init(identifier:)();
  uint64_t v51 = v92;
  uint64_t v52 = v43;
  if (v92 == 2)
  {
    uint64_t v92 = v82;
    MEMORY[0x1F4188790](v50);
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
    uint64_t v54 = OUTLINED_FUNCTION_8(v53);
    MEMORY[0x1F4188790](v54);
    OUTLINED_FUNCTION_21();
    __swift_storeEnumTagSinglePayload(v56 - v55, 1, 1, v43);
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
    LanguageManager.init(featureFlags:localeOverride:)();
    v98.value._rawValue = 0;
    LanguageManager.mappedASRLanguageIdentifier(supportedLanguages:)(v98);
    OUTLINED_FUNCTION_26_2();
    v57();
    Locale.init(identifier:)();
    (*(void (**)(char *, char *, uint64_t))(v87 + 40))(v49, (char *)v82 - v48, v43);
  }
  id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F47918]), sel_init);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v58, sel_setLocale_, isa);

  objc_msgSend(v58, sel_setUsage_, v51);
  unint64_t v60 = Logger.logObject.getter();
  os_log_type_t v61 = static os_log_type_t.default.getter();
  int v62 = v61;
  id v63 = v49;
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v64 = OUTLINED_FUNCTION_37();
    LODWORD(v92) = v62;
    uint64_t v65 = (uint8_t *)v64;
    uint64_t v91 = OUTLINED_FUNCTION_9_0();
    uint64_t v96 = v91;
    uint64_t v90 = v65;
    *(_DWORD *)uint64_t v65 = 136315138;
    void v82[2] = v65 + 4;
    uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
    v82[1] = v82;
    uint64_t v67 = OUTLINED_FUNCTION_8(v66);
    MEMORY[0x1F4188790](v67);
    OUTLINED_FUNCTION_21();
    uint64_t v70 = v69 - v68;
    swift_beginAccess();
    uint64_t v71 = v87;
    (*(void (**)(uint64_t, char *, uint64_t))(v87 + 16))(v70, v63, v43);
    __swift_storeEnumTagSinglePayload(v70, 0, 1, v43);
    uint64_t v72 = specialized >> prefix<A>(_:)(v70);
    unint64_t v74 = v73;
    outlined destroy of Locale?(v70);
    uint64_t v94 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v74, &v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v60, (os_log_type_t)v92, "Captions client configure with locale: %s", v90, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();

    uint64_t v75 = v93;
  }
  else
  {

    uint64_t v75 = v93;
    uint64_t v71 = v87;
  }
  char v76 = v88;
  id v78 = v84;
  id v77 = v85;
  objc_msgSend(v83, sel_configureCaptions_, v58);

  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v89, v86);
  uint64_t v79 = *(void **)&v76[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient];
  *(void *)&v76[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient] = v78;

  (*(void (**)(char *, uint64_t))(v71 + 8))(v63, v52);
  return v77;
}

uint64_t type metadata accessor for CaptionsClientParticipantCaptionsProvider()
{
  uint64_t result = type metadata singleton initialization cache for CaptionsClientParticipantCaptionsProvider;
  if (!type metadata singleton initialization cache for CaptionsClientParticipantCaptionsProvider) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id CaptionsClientParticipantCaptionsProvider.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v11 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v4 = 136315138;
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x70))();
    if (v5)
    {
      unint64_t v8 = 0xE300000000000000;
      uint64_t v6 = 7104878;
    }
    else
    {
      uint64_t v6 = String.init<A>(reflecting:)();
      unint64_t v8 = v7;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v2, v3, "Releasing CaptionsClientParticipantCaptionsProvider with token %s", v4, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v9 = (objc_class *)type metadata accessor for CaptionsClientParticipantCaptionsProvider();
  v12.receiver = v1;
  v12.super_class = v9;
  return objc_msgSendSuper2(&v12, sel_dealloc);
}

uint64_t key path getter for CaptionsClientParticipantCaptionsProvider.captionsEnabled : CaptionsClientParticipantCaptionsProvider@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0xB0))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for CaptionsClientParticipantCaptionsProvider.captionsEnabled : CaptionsClientParticipantCaptionsProvider(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0xB8))(*a1);
}

id CaptionsClientParticipantCaptionsProvider.captionsEnabled.getter()
{
  id result = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient);
  if (result) {
    return objc_msgSend(result, sel_captionsEnabled);
  }
  return result;
}

id CaptionsClientParticipantCaptionsProvider.captionsEnabled.setter()
{
  return OUTLINED_FUNCTION_0_113(sel_enableCaptions_, *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient));
}

id (*CaptionsClientParticipantCaptionsProvider.captionsEnabled.modify(uint64_t a1))(void *a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = CaptionsClientParticipantCaptionsProvider.captionsEnabled.getter() & 1;
  return CaptionsClientParticipantCaptionsProvider.captionsEnabled.modify;
}

id CaptionsClientParticipantCaptionsProvider.captionsEnabled.modify(void *a1)
{
  return OUTLINED_FUNCTION_0_113(sel_enableCaptions_, *(void **)(*a1+ OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient));
}

id CaptionsClientParticipantCaptionsProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CaptionsClientParticipantCaptionsProvider.init()()
{
}

uint64_t protocol witness for ParticipantCaptionsProvider.token.getter in conformance CaptionsClientParticipantCaptionsProvider()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t protocol witness for ParticipantCaptionsProvider.participantCaptionsProviderDelegate.getter in conformance CaptionsClientParticipantCaptionsProvider()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t protocol witness for ParticipantCaptionsProvider.participantCaptionsProviderDelegate.setter in conformance CaptionsClientParticipantCaptionsProvider()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t (*protocol witness for ParticipantCaptionsProvider.participantCaptionsProviderDelegate.modify in conformance CaptionsClientParticipantCaptionsProvider(void *a1))()
{
  os_log_type_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x88))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ParticipantCaptionsProvider.captionsEnabled.getter in conformance CaptionsClientParticipantCaptionsProvider()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t protocol witness for ParticipantCaptionsProvider.captionsEnabled.setter in conformance CaptionsClientParticipantCaptionsProvider()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t (*protocol witness for ParticipantCaptionsProvider.captionsEnabled.modify in conformance CaptionsClientParticipantCaptionsProvider(void *a1))()
{
  os_log_type_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xC0))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)(uint64_t a1, char a2, void *a3)
{
  return CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)(a1, a2, a3, "Captions enabled: %{BOOL}d; error: %@");
}

uint64_t closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a4;
  type metadata accessor for MainActor();
  *(void *)(v5 + 32) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:), v7, v6);
}

uint64_t closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)()
{
  swift_release();
  OUTLINED_FUNCTION_0_20();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 120))();
  if (v1)
  {
    OUTLINED_FUNCTION_17_67();
    uint64_t v2 = OUTLINED_FUNCTION_13_82();
    v3(v2);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_3_147(v1 == 0);
  return v4();
}

uint64_t CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDisableCaptions:error:)(uint64_t a1, char a2, void *a3)
{
  return CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)(a1, a2, a3, "Captions disabled: %{BOOL}d; error: %@");
}

uint64_t CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)(uint64_t a1, char a2, void *a3, const char *a4)
{
  uint64_t v6 = v4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v10 = OUTLINED_FUNCTION_8(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_21();
  uint64_t v13 = v12 - v11;
  id v14 = a3;
  id v15 = a3;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v30 = a4;
    uint64_t v18 = swift_slowAlloc();
    id v19 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 67109378;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 8) = 2112;
    if (a3)
    {
      id v20 = a3;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v21 = 0;
    }
    *id v19 = v21;

    _os_log_impl(&dword_1C2F90000, v16, v17, v30, (uint8_t *)v18, 0x12u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v22 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_10_90(v13, v23, v24, v22);
  id v25 = v6;
  uint64_t v26 = static MainActor.shared.getter();
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = MEMORY[0x1E4FBCFD8];
  *(void *)(v27 + 16) = v26;
  *(void *)(v27 + 24) = v28;
  *(void *)(v27 + 32) = v25;
  *(unsigned char *)(v27 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a2 & 1;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
  return swift_release();
}

uint64_t closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDisableCaptions:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a4;
  type metadata accessor for MainActor();
  *(void *)(v5 + 32) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDisableCaptions:error:), v7, v6);
}

uint64_t closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDisableCaptions:error:)()
{
  swift_release();
  OUTLINED_FUNCTION_0_20();
  uint64_t v3 = (*(uint64_t (**)(void))(v1 + 120))();
  if (v3)
  {
    uint64_t v4 = v2;
    char v5 = *(unsigned char *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, BOOL, uint64_t, uint64_t))(v4 + 16))(v6, &protocol witness table for CaptionsClientParticipantCaptionsProvider, (v5 & 1) == 0, ObjectType, v4);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_3_147(v3 == 0);
  return v8();
}

void CaptionsClientParticipantCaptionsProvider.captionsClient(_:didStartCaptioningWith:)(uint64_t a1, uint64_t a2)
{
}

void CaptionsClientParticipantCaptionsProvider.captionsClient(_:didStopCaptioningWith:)(uint64_t a1, uint64_t a2)
{
}

void CaptionsClientParticipantCaptionsProvider.captionsClient(_:didStartCaptioningWith:)(uint64_t a1, uint64_t a2, const char *a3)
{
  oschar log = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    char v5 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v9 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)char v5 = 136315138;
    type metadata accessor for AVCCaptionsReason(0);
    uint64_t v6 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, oslog, v4, a3, v5, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
}

uint64_t CaptionsClientParticipantCaptionsProvider.captionsClient(_:didUpdateCaptions:source:)(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2_3();
  uint64_t v78 = v6;
  type metadata accessor for Participant.Caption(0);
  OUTLINED_FUNCTION_4();
  uint64_t v75 = v7;
  uint64_t v76 = v8;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2_3();
  id v77 = v9;
  id v74 = v2;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_37();
    v83[0] = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v12 = 136315138;
    type metadata accessor for AVCCaptionsSource(0);
    uint64_t v13 = String.init<A>(reflecting:)();
    uint64_t v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v10, v11, "Captions updated: source: %s", v12, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  id v15 = a2;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_37();
    v83[0] = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v18 = 136315138;
    if (a2)
    {
      uint64_t v81 = (uint64_t)v15;
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCCaptionsResult);
      id v19 = v15;
      uint64_t v20 = String.init<A>(reflecting:)();
      unint64_t v22 = v21;
    }
    else
    {
      unint64_t v22 = 0xE300000000000000;
      uint64_t v20 = 7104878;
    }
    uint64_t v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v16, v17, "Captions: %s", v18, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v23 = type metadata accessor for Date();
  OUTLINED_FUNCTION_4();
  uint64_t v25 = v24;
  uint64_t v27 = *(void *)(v26 + 64);
  MEMORY[0x1F4188790](v28);
  unint64_t v29 = (v27 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t result = Date.init()();
  if (!a2)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v31 = objc_msgSend(v15, sel_utteranceNumber);
  unsigned int v32 = v31;
  uint64_t v71 = &v66;
  __n128 v33 = MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v66 - v29;
  uint64_t v72 = v25;
  double v35 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v25 + 16);
  uint64_t v36 = v35((char *)&v66 - v29, (char *)&v66 - v29, v23, v33);
  uint64_t v70 = &v66;
  __n128 v37 = MEMORY[0x1F4188790](v36);
  uint64_t v38 = v23;
  double v39 = (char *)&v66 - v29;
  uint64_t v73 = v38;
  ((void (*)(char *, char *, __n128))v35)((char *)&v66 - v29, (char *)&v66 - v29, v37);
  uint64_t result = outlined bridged method (pb) of @objc UILabel.text.getter(v15);
  if (!v40)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v68 = (char *)&v66 - v29;
  uint64_t v69 = &v66;
  v83[0] = result;
  v83[1] = v40;
  uint64_t v81 = 39;
  unint64_t v82 = 0xE100000000000000;
  uint64_t v79 = 10060002;
  unint64_t v80 = 0xA300000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v66 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  uint64_t v67 = v41;
  swift_bridgeObjectRelease();
  unsigned __int8 v42 = objc_msgSend(v15, sel_utteranceComplete);
  uint64_t result = outlined bridged method (pb) of @objc AVCCaptionsResult.tokens.getter(v15);
  if (result)
  {
    unint64_t v43 = result;
    uint64_t v44 = v32;
    uint64_t v45 = (char *)v74;
    unint64_t v46 = specialized _ArrayProtocol.filter(_:)(v43, v45);
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo16AVCCaptionsTokenCG_So8_NSRangeVs5NeverOTg5097_s15ConversationKit025CaptionsClientParticipantC8ProviderC08captionsD0_09didUpdateC06sourceySo011dq15CSg_So0K6Resultvwx13SourceVtFSo8_f6VSo0K5E54Ccfu2_33_4c94f2a9ae96d10c2646dde87984b78dArPTf3nnnpk_nTf1cn_n(v46);
    uint64_t v48 = v47;
    swift_bridgeObjectRelease();
    uint64_t v49 = (uint64_t)v77;
    *id v77 = v44;
    uint64_t v50 = v75;
    uint64_t v51 = v72;
    uint64_t v52 = *(void (**)(uint64_t, char *, uint64_t))(v72 + 32);
    uint64_t v53 = v34;
    uint64_t v54 = v73;
    v52(v49 + v75[5], v53, v73);
    v52(v49 + v50[6], v39, v54);
    uint64_t v55 = (uint64_t *)(v49 + v50[7]);
    uint64_t v56 = v67;
    *uint64_t v55 = v66;
    v55[1] = v56;
    *(unsigned char *)(v49 + v50[8]) = v42;
    *(void *)(v49 + v50[9]) = v48;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant.Caption>);
    unint64_t v57 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    uint64_t v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = xmmword_1C3769620;
    outlined init with copy of Participant.Caption(v49, v58 + v57);
    uint64_t v59 = type metadata accessor for TaskPriority();
    OUTLINED_FUNCTION_10_90(v78, v60, v61, v59);
    int v62 = v45;
    swift_bridgeObjectRetain();
    uint64_t v63 = static MainActor.shared.getter();
    uint64_t v64 = (void *)swift_allocObject();
    uint64_t v65 = MEMORY[0x1E4FBCFD8];
    v64[2] = v63;
    v64[3] = v65;
    v64[4] = v62;
    v64[5] = v62;
    v64[6] = &protocol witness table for CaptionsClientParticipantCaptionsProvider;
    v64[7] = v58;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
    swift_bridgeObjectRelease();

    swift_release();
    outlined destroy of Participant.Caption(v49);
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v68, v54);
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t closure #2 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didUpdateCaptions:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  _OWORD v7[3] = a4;
  id v7[4] = a5;
  id v7[2] = a1;
  type metadata accessor for MainActor();
  void v7[7] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #2 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didUpdateCaptions:source:), v9, v8);
}

uint64_t closure #2 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didUpdateCaptions:source:)()
{
  OUTLINED_FUNCTION_49_0();
  swift_release();
  OUTLINED_FUNCTION_0_20();
  uint64_t v3 = (*(uint64_t (**)(void))(v1 + 120))();
  if (v3)
  {
    uint64_t v4 = v2;
    uint64_t v6 = v0[5];
    uint64_t v5 = v0[6];
    uint64_t v8 = v0[3];
    uint64_t v7 = v0[4];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8))(v8, &protocol witness table for CaptionsClientParticipantCaptionsProvider, v7, v6, v5, ObjectType, v4);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_3_147(v3 == 0);
  return v10();
}

void CaptionsClientParticipantCaptionsProvider.captionsServerDidDie(_:)()
{
  oschar log = Logger.logObject.getter();
  os_log_type_t v0 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v0))
  {
    uint64_t v1 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl(&dword_1C2F90000, oslog, v0, "Captions server did die", v1, 2u);
    OUTLINED_FUNCTION_3();
  }
}

uint64_t CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDetectGibberish:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_21();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1C2F90000, v10, v11, "Captions updated isGibberish: %{BOOL}d", v12, 8u);
    OUTLINED_FUNCTION_3();
  }

  uint64_t v13 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_10_90(v9, v14, v15, v13);
  id v16 = v3;
  uint64_t v17 = static MainActor.shared.getter();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = MEMORY[0x1E4FBCFD8];
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v19;
  *(void *)(v18 + 32) = v16;
  *(unsigned char *)(v18 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a2 & 1;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
  return swift_release();
}

uint64_t closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDetectGibberish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = a5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a4;
  type metadata accessor for MainActor();
  *(void *)(v5 + 32) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDetectGibberish:), v7, v6);
}

uint64_t closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDetectGibberish:)()
{
  swift_release();
  OUTLINED_FUNCTION_0_20();
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 120))();
  if (v1)
  {
    OUTLINED_FUNCTION_17_67();
    uint64_t v2 = OUTLINED_FUNCTION_13_82();
    v3(v2);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_3_147(v1 == 0);
  return v4();
}

uint64_t partial apply for closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)()
{
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_6_121();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter;
  uint64_t v3 = OUTLINED_FUNCTION_34_4();
  return closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)(v3, v4, v5, v6, v7);
}

uint64_t partial apply for closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDisableCaptions:error:)()
{
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_6_121();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  uint64_t v3 = OUTLINED_FUNCTION_34_4();
  return closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDisableCaptions:error:)(v3, v4, v5, v6, v7);
}

uint64_t outlined bridged method (pb) of @objc AVCCaptionsResult.tokens.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_tokens);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for AVCCaptionsToken);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1C374AFBC()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didUpdateCaptions:source:)(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_10(v9);
  *uint64_t v10 = v11;
  v10[1] = partial apply for closure #1 in closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter;
  return closure #2 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didUpdateCaptions:source:)(a1, v3, v4, v5, v6, v8, v7);
}

uint64_t objectdestroyTm_23()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDetectGibberish:)()
{
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_6_121();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)OUTLINED_FUNCTION_10(v0);
  void *v1 = v2;
  v1[1] = partial apply for closure #1 in closure #2 in implicit closure #1 in ScreenSharingSpectatorViewController.supportedInterfaceOrientations.getter;
  uint64_t v3 = OUTLINED_FUNCTION_34_4();
  return closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDetectGibberish:)(v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.token.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.participantCaptionsProviderDelegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.participantCaptionsProviderDelegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.participantCaptionsProviderDelegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.captionsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.captionsEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.captionsEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of ParticipantCaptionsProviderDelegate.participantCaptionsProvider(_:didUpdateCaptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of ParticipantCaptionsProviderDelegate.participantCaptionsProvider(_:didEnableCaptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ParticipantCaptionsProviderDelegate.participantCaptionsProvider(_:didDetectGibberish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t ObjC metadata update function for CaptionsClientParticipantCaptionsProvider()
{
  return type metadata accessor for CaptionsClientParticipantCaptionsProvider();
}

uint64_t type metadata completion function for CaptionsClientParticipantCaptionsProvider()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CaptionsClientParticipantCaptionsProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CaptionsClientParticipantCaptionsProvider);
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.token.getter()
{
  OUTLINED_FUNCTION_0_20();
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.__allocating_init(logger:token:usage:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.captionsEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.captionsEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.captionsEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t one-time initialization function for startCallRecordingCountdownNotification()
{
  uint64_t result = MEMORY[0x1C87730B0](0xD00000000000001ELL, 0x80000001C37C04F0);
  static NSNotificationName.startCallRecordingCountdownNotification = result;
  return result;
}

id static NSNotificationName.startCallRecordingCountdownNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for startCallRecordingCountdownNotification, (void **)&static NSNotificationName.startCallRecordingCountdownNotification);
}

uint64_t one-time initialization function for startCallRecordingStateFailedNotification()
{
  uint64_t result = MEMORY[0x1C87730B0](0xD00000000000001DLL, 0x80000001C37C04D0);
  static NSNotificationName.startCallRecordingStateFailedNotification = result;
  return result;
}

id static NSNotificationName.startCallRecordingStateFailedNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for startCallRecordingStateFailedNotification, (void **)&static NSNotificationName.startCallRecordingStateFailedNotification);
}

uint64_t one-time initialization function for startCallRecordingStateCancelledNotification()
{
  uint64_t result = MEMORY[0x1C87730B0](0xD000000000000020, 0x80000001C37C04A0);
  static NSNotificationName.startCallRecordingStateCancelledNotification = result;
  return result;
}

id static NSNotificationName.startCallRecordingStateCancelledNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for startCallRecordingStateCancelledNotification, (void **)&static NSNotificationName.startCallRecordingStateCancelledNotification);
}

BOOL static AppUtilities.isRTL.getter()
{
  id v0 = objc_msgSend(self, sel_sharedApplication);
  id v1 = objc_msgSend(v0, sel_userInterfaceLayoutDirection);

  return v1 == (id)1;
}

uint64_t AppUtilities.deinit()
{
  return v0;
}

uint64_t AppUtilities.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t AppUtilities.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t AppUtilities.init()()
{
  return v0;
}

uint64_t type metadata accessor for AppUtilities()
{
  return self;
}

uint64_t method lookup function for AppUtilities(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppUtilities);
}

uint64_t dispatch thunk of AppUtilities.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

BOOL static InCallBannerState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 == *a1;
}

BOOL MultiwayViewConstraintsController.OverallLayoutState.isOneToOneModeEnabled.getter()
{
  return OUTLINED_FUNCTION_108(*(unsigned char *)(v0 + 18));
}

BOOL static CaptionsLayoutState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL MultiwayViewConstraintsController.LocalParticipantState.isInfo.getter()
{
  return OUTLINED_FUNCTION_373();
}

Swift::Bool __swiftcall MultiwayViewConstraintsController.OverallLayoutState.isPreviewingReaction()()
{
  return (*(unsigned char *)(v0 + 20) | *(unsigned char *)(v0 + 22)) & 1;
}

uint64_t InCallControlsState.isShowingDock.getter(unint64_t a1)
{
  return (a1 < 7) & (0x6Cu >> a1);
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.init(listState:controlsState:conversationBannerState:localState:gridState:captionsState:reactionsState:reactionPickerTipState:isLocalReactionActive:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char a4@<W3>, char a5@<W4>, char *a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, char a10)
{
  char v10 = *a3;
  char v11 = *a6;
  char v12 = *a7;
  char v13 = *a8;
  *(unsigned char *)a9 = result & 1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = v10;
  *(unsigned char *)(a9 + 17) = a4;
  *(unsigned char *)(a9 + 18) = a5 & 1;
  *(unsigned char *)(a9 + 19) = v11;
  *(unsigned char *)(a9 + 2ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v12;
  *(unsigned char *)(a9 + 21) = v13;
  *(unsigned char *)(a9 + 22) = a10;
  return result;
}

BOOL MultiwayViewConstraintsController.MultiwayCorner.isBottomSide.getter()
{
  return OUTLINED_FUNCTION_373();
}

BOOL MultiwayViewConstraintsController.MultiwayCorner.isLeftSide.getter()
{
  return OUTLINED_FUNCTION_373();
}

uint64_t static MultiwayViewConstraintsController.LocalParticipantState.== infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 >> 6)
  {
    if (a1 >> 6 != 1)
    {
      if (a1 == 128)
      {
        if (a2 != 128) {
          return 0;
        }
      }
      else if (a2 != 129)
      {
        return 0;
      }
      return 1;
    }
    if ((a2 & 0xC0) == 0x40) {
      return ((a2 ^ a1) & 0x3F) == 0;
    }
    return 0;
  }
  if (a2 > 0x3Fu) {
    return 0;
  }
  return a1 == a2;
}

BOOL CaptionsLayoutState.isVisible.getter()
{
  return *v0 != 0;
}

BOOL InCallBannerState.isVisible.getter()
{
  return *v0 != 0;
}

uint64_t ReactionsState.isVisible.getter()
{
  return *v0;
}

BOOL MultiwayViewConstraintsController.LocalParticipantState.isRegular.getter(unsigned __int8 a1)
{
  return a1 < 0x40u;
}

void static MultiwayViewConstraintsController.listItemWidth(for:displayScale:configurableRosterCellWidth:)(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_19_0();
  type metadata accessor for ParticipantListLayout();
  double v6 = static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  char v7 = a2 & 1;
  uint64_t v8 = static Defaults.shared;
  (*(void (**)(void))(*(void *)static Defaults.shared + 384))();
  uint64_t v9 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(void *)v8 + 488))(v9);
  static Platform.current.getter();
  static ParticipantListLayout.itemWidth(for:remoteCellCount:displayScale:includeLocalParticipant:configurableRosterCellWidth:)(1, a1, v7, v3 - (v6 + v6), 3.5, v2);
}

uint64_t InCallControlsState.stateWithoutDock.getter(uint64_t a1)
{
  uint64_t v1 = 4;
  if ((unint64_t)(a1 - 4) >= 3) {
    uint64_t v1 = a1;
  }
  if ((unint64_t)(a1 - 1) >= 3) {
    return v1;
  }
  else {
    return 1;
  }
}

void MultiwayViewConstraintsController.updateConstraints(with:controlsViewController:localParticipantView:effectsView:effectsBrowserViewController:)(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  if (a4 && a5)
  {
    uint64_t v7 = v5;
    id v18 = a4;
    id v11 = objc_msgSend(a5, sel_view);
    if (v11)
    {
      char v12 = v11;
      outlined init with copy of IDSLookupManager(v7 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout, (uint64_t)v19);
      uint64_t v13 = v20;
      uint64_t v14 = v21;
      __swift_project_boxed_opaque_existential_1(v19, v20);
      id v15 = objc_msgSend(a2, sel_view);
      if (v15)
      {
        id v16 = v15;
        (*(void (**)(uint64_t, id, uint64_t, id, void *, uint64_t, uint64_t))(v14 + 56))(a1, v15, a3, v18, v12, v13, v14);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        id v17 = v18;
        MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)();

        MultiwayViewConstraintsController.didAddEffectsBrowser()();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
    }
  }
}

BOOL MultiwayViewConstraintsController.LocalParticipantState.isExpanded.getter()
{
  return OUTLINED_FUNCTION_373();
}

BOOL InCallControlsState.isShowingExpandedDock.getter(uint64_t a1)
{
  return a1 == 3 || a1 == 6;
}

BOOL InCallControlsState.isExpanded.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_23_64(a1 - 4);
}

uint64_t static MultiwayViewConstraintsController.MultiwayCorner.defaultCorner.getter()
{
  if (static AppUtilities.isRTL.getter()) {
    return 2;
  }
  else {
    return 3;
  }
}

uint64_t MultiwayViewConstraintsController.MultiwayCorner.rawValue.getter(uint64_t result)
{
  return result;
}

ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional __swiftcall MultiwayViewConstraintsController.MultiwayCorner.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 4) {
    LOBYTE(rawValue) = 4;
  }
  return (ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional)rawValue;
}

uint64_t MultiwayViewConstraintsController.reactionsState.setter(char *a1)
{
  return MultiwayViewConstraintsController.reactionsState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
}

uint64_t MultiwayViewConstraintsController.isLocalReactionActive.setter(char a1)
{
  double v3 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  OUTLINED_FUNCTION_11_0();
  char v4 = *v3;
  *double v3 = a1;
  return MultiwayViewConstraintsController.isLocalReactionActive.didset(v4);
}

uint64_t MultiwayViewConstraintsController.reactionPickerTipState.setter(char *a1)
{
  return MultiwayViewConstraintsController.reactionsState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
}

uint64_t MultiwayViewConstraintsController.reactionsState.setter(char *a1, void *a2)
{
  char v4 = *a1;
  OUTLINED_FUNCTION_4_130();
  char v5 = *v2;
  *double v2 = v4;
  v7[0] = v5;
  return MultiwayViewConstraintsController.reactionsState.didset((uint64_t)v7, a2);
}

Swift::Void __swiftcall MultiwayViewConstraintsController.updateLocalPreviewConstraintWhenExpanded()()
{
  uint64_t v1 = v0;
  double v2 = (void *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 88))(v3, v4);
  char v5 = (char *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  OUTLINED_FUNCTION_2();
  char v23 = *v5;
  double v6 = (uint64_t *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  OUTLINED_FUNCTION_2();
  uint64_t v22 = *v6;
  uint64_t v7 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  OUTLINED_FUNCTION_2();
  char v21 = *v7;
  uint64_t v8 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  OUTLINED_FUNCTION_2();
  char v9 = *v8;
  char v10 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  OUTLINED_FUNCTION_2();
  char v11 = *v10;
  char v12 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  OUTLINED_FUNCTION_2();
  char v13 = *v12;
  uint64_t v14 = (unsigned char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  OUTLINED_FUNCTION_2();
  LOBYTE(v4) = *v14;
  id v15 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  OUTLINED_FUNCTION_2();
  char v16 = *v15;
  id v17 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  OUTLINED_FUNCTION_2();
  char v18 = *v17;
  uint64_t v19 = v2[3];
  uint64_t v20 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v19);
  v24[0] = v23;
  uint64_t v25 = v22;
  char v26 = v21;
  char v27 = v9;
  char v28 = v11;
  char v29 = v13;
  char v30 = v4;
  char v31 = v16;
  char v32 = v18;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 64))(v24, v19, v20);
}

char *MultiwayViewConstraintsController.__allocating_init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(char *a1, void *a2, void *a3, char a4, void *a5, char a6, void *a7, void *a8, long long a9, long long a10, void *a11, char a12, long long a13, long long a14, void *a15, char a16, long long a17, long long a18, long long a19, long long a20,long long a21,long long a22,long long a23,unsigned __int8 *a24,char a25)
{
  char v27 = a4 & 1;
  char v28 = a6 & 1;
  id v29 = objc_allocWithZone(v25);
  return MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(a1, a2, a3, v27, a5, v28, a7, a8, (void *)a9, *((unint64_t *)&a9 + 1), (void *)a10, *((unsigned __int8 **)&a10 + 1), a11, a12, (char *)a13, *((void **)&a13 + 1), (void *)a14, *((void **)&a14 + 1), a15,
           a16 & 1,
           (void *)a17,
           *((void **)&a17 + 1),
           (void *)a18,
           *((uint64_t *)&a18 + 1),
           a19,
           *((unint64_t *)&a19 + 1),
           (void *)a20,
           *((void **)&a20 + 1),
           (void *)a21,
           *((void **)&a21 + 1),
           (unsigned __int8 *)a22,
           *((void **)&a22 + 1),
           (unsigned __int8 *)a23,
           *((void **)&a23 + 1),
           a24,
           a25);
}

void *MultiwayViewConstraintsController.localParticipantViewCustomConstraintIdentifier.unsafeMutableAddressor()
{
  return &static MultiwayViewConstraintsController.localParticipantViewCustomConstraintIdentifier;
}

id MultiwayViewConstraintsController.configure(rosterCellWidth:)(id result, char a2)
{
  if ((*(unsigned char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_layoutIdiom) & 1) == 0)
  {
    id v5 = result;
    OUTLINED_FUNCTION_4_130();
    *(void *)uint64_t v3 = v5;
    *(unsigned char *)(v3 + 8) = a2 & 1;
    return MultiwayViewConstraintsController.configurableRosterCellWidth.didset();
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.update(for:deviceOrientation:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  char v10 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  OUTLINED_FUNCTION_2();
  char v30 = *v10;
  char v11 = (uint64_t *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  OUTLINED_FUNCTION_2();
  uint64_t v29 = *v11;
  char v12 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  OUTLINED_FUNCTION_2();
  char v13 = *v12;
  uint64_t v14 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  OUTLINED_FUNCTION_2();
  char v15 = *v14;
  char v16 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  OUTLINED_FUNCTION_2();
  char v17 = *v16;
  char v18 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  OUTLINED_FUNCTION_2();
  char v19 = *v18;
  uint64_t v20 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  OUTLINED_FUNCTION_2();
  char v21 = *v20;
  uint64_t v22 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  OUTLINED_FUNCTION_2();
  char v23 = *v22;
  uint64_t v24 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  OUTLINED_FUNCTION_2();
  char v25 = *v24;
  uint64_t v26 = *(void *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  uint64_t v27 = *(void *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v26);
  v32[0] = v30;
  uint64_t v33 = v29;
  char v34 = v13;
  char v35 = v15;
  char v36 = v17;
  char v37 = v19;
  char v38 = v21;
  char v39 = v23;
  char v40 = v25;
  return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t, double, double, double, double))(v27 + 16))(v32, a1, v26, v27, a2, a3, a4, a5);
}

Swift::Void __swiftcall MultiwayViewConstraintsController.update(isDisplayedInBanner:containingView:)(Swift::Bool isDisplayedInBanner, UIView *containingView)
{
  BOOL v4 = isDisplayedInBanner;
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v5);
  (*(void (**)(BOOL, UIView *, uint64_t, uint64_t))(v6 + 40))(v4, containingView, v5, v6);
}

uint64_t MultiwayViewConstraintsController.localParticipantAspectRatio.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio;
  OUTLINED_FUNCTION_11_0();
  outlined init with take of AspectRatio(v3, (uint64_t)v5);
  outlined init with take of AspectRatio(a1, v3);
  return MultiwayViewConstraintsController.localParticipantAspectRatio.didset((uint64_t)v5);
}

uint64_t MultiwayViewConstraintsController.participantGridState.setter(char a1)
{
  return MultiwayViewConstraintsController.participantGridState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState, (uint64_t (*)(uint64_t))MultiwayViewConstraintsController.participantGridStateDidChange(from:to:));
}

Swift::Void __swiftcall MultiwayViewConstraintsController.removeEffectsConstraints()()
{
  OUTLINED_FUNCTION_1_157(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  uint64_t v0 = OUTLINED_FUNCTION_92_0();
  v1(v0);
}

uint64_t MultiwayViewConstraintsController.captionsState.setter(uint64_t a1)
{
  return MultiwayViewConstraintsController.captionsState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
}

uint64_t MultiwayViewConstraintsController.localParticipantViewRegularWidth.getter()
{
  OUTLINED_FUNCTION_1_157(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  uint64_t v0 = OUTLINED_FUNCTION_92_0();
  return v1(v0);
}

Swift::Bool __swiftcall MultiwayViewConstraintsController.LocalParticipantState.collides(with:)(ConversationKit::MultiwayViewConstraintsController::ShutterButtonState with)
{
  unsigned __int8 v2 = v1;
  type metadata accessor for AppUtilities();
  if (static AppUtilities.isRTL.getter()) {
    char v4 = 3;
  }
  else {
    char v4 = 2;
  }
  if (static AppUtilities.isRTL.getter()) {
    char v5 = 2;
  }
  else {
    char v5 = 3;
  }
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      if ((v2 & 0x3F) != v4)
      {
        if ((v2 & 0x3F) == v5) {
          return with & 1;
        }
        return 0;
      }
      return (with & 1) == 0;
    }
  }
  else
  {
    if (v4 == v2) {
      return (with & 1) == 0;
    }
    if (v5 == v2) {
      return with & 1;
    }
  }
  return 0;
}

BOOL MultiwayViewConstraintsController.ShutterButtonState.nextState.getter(char a1)
{
  return (a1 & 1) == 0;
}

uint64_t MultiwayViewConstraintsController.shutterButtonState.setter(char a1)
{
  return MultiwayViewConstraintsController.floatingControlsState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_shutterButtonState, (uint64_t (*)(uint64_t))MultiwayViewConstraintsController.shutterButtonState.didset);
}

uint64_t MultiwayViewConstraintsController.floatingControlsState.setter(char a1, void *a2, uint64_t (*a3)(uint64_t))
{
  char v5 = a1 & 1;
  uint64_t v6 = (unsigned char *)(v3 + *a2);
  OUTLINED_FUNCTION_11_0();
  uint64_t v7 = *v6;
  *uint64_t v6 = v5;
  return a3(v7);
}

uint64_t MultiwayViewConstraintsController.localParticipantState.setter(char a1)
{
  return MultiwayViewConstraintsController.localParticipantState.setter(a1, (uint64_t)&OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState, MultiwayViewConstraintsController.localParticipantState.didset);
}

id MultiwayViewConstraintsController.bannerControlsSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize;
  OUTLINED_FUNCTION_11_0();
  *(void *)uint64_t v7 = a1;
  *(void *)(v7 + 8) = a2;
  *(unsigned char *)(v7 + 16) = a3 & 1;
  return MultiwayViewConstraintsController.bannerControlsSize.didset();
}

BOOL InCallControlsState.isVisible.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_23_64(a1 - 1);
}

uint64_t MultiwayViewConstraintsController.inCallControlsState.setter(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  OUTLINED_FUNCTION_11_0();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  return MultiwayViewConstraintsController.inCallControlsState.didset(v4);
}

uint64_t MultiwayViewConstraintsController.inCallConversationBannerState.setter(uint64_t a1)
{
  return MultiwayViewConstraintsController.captionsState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
}

uint64_t MultiwayViewConstraintsController.captionsState.setter(uint64_t a1, void *a2)
{
  OUTLINED_FUNCTION_11_85(a1, a2);
  OUTLINED_FUNCTION_11_0();
  char v5 = *v3;
  *uint64_t v3 = v4;
  v7[0] = v5;
  return v2(v7);
}

uint64_t MultiwayViewConstraintsController.participantListState.setter(char a1)
{
  return MultiwayViewConstraintsController.participantGridState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState, (uint64_t (*)(uint64_t))MultiwayViewConstraintsController.participantListStateDidChange(from:to:));
}

uint64_t MultiwayViewConstraintsController.participantGridState.setter(char a1, void *a2, uint64_t (*a3)(uint64_t))
{
  char v6 = a1 & 1;
  OUTLINED_FUNCTION_4_130();
  char v7 = *v3;
  *uint64_t v3 = v6;
  return MultiwayViewConstraintsController.participantListState.didset(v7, a2, a3);
}

Swift::Void __swiftcall MultiwayViewConstraintsController.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:)(CGPoint forPosition, Swift::Bool withSnapping)
{
  OUTLINED_FUNCTION_19_0();
  char v4 = (unsigned char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  OUTLINED_FUNCTION_2();
  if (*v4 == 1)
  {
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v5);
    (*(void (**)(Swift::Bool, uint64_t, uint64_t))(v6 + 104))(withSnapping, v5, v6);
  }
}

Swift::Void __swiftcall MultiwayViewConstraintsController.resetCaptionsBubbleViewConstraints()()
{
  OUTLINED_FUNCTION_1_157(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  uint64_t v0 = OUTLINED_FUNCTION_92_0();
  v1(v0);
}

unint64_t InCallControlsState.debugDescription.getter(uint64_t a1)
{
  unint64_t result = 0x6E65646469682ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x656C62697369762ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x65646E617078652ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x1C374C994);
  }
  return result;
}

unint64_t InCallControlsState.init(rawValue:)(unint64_t result)
{
  if (result > 6) {
    return 0;
  }
  return result;
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance InCallControlsState@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = InCallControlsState.init(rawValue:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance InCallControlsState()
{
  return InCallControlsState.debugDescription.getter(*v0);
}

uint64_t InCallBannerState.description.getter()
{
  uint64_t v1 = 0x656C6269736976;
  if (*v0 != 1) {
    uint64_t v1 = 0x69746E6573657270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6564646968;
  }
}

uint64_t InCallBannerState.rawValue.getter()
{
  uint64_t v1 = 0x656C6269736976;
  if (*v0 != 1) {
    uint64_t v1 = 0x69746E6573657270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6564646968;
  }
}

ConversationKit::InCallBannerState_optional __swiftcall InCallBannerState.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  char v4 = v1;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of InCallBannerState.init(rawValue:), v3);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *char v4 = v7;
  return result;
}

void *static InCallBannerState.allCases.getter()
{
  return &outlined read-only object #0 of static InCallBannerState.allCases.getter;
}

ConversationKit::InCallBannerState_optional protocol witness for RawRepresentable.init(rawValue:) in conformance InCallBannerState(Swift::String *a1)
{
  return InCallBannerState.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance InCallBannerState@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = InCallBannerState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance InCallBannerState(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static InCallBannerState.allCases.getter;
}

uint64_t ReactionsState.description.getter()
{
  if (*v0) {
    return 0x656C6269736976;
  }
  else {
    return 0x6E6564646968;
  }
}

uint64_t ReactionsState.rawValue.getter()
{
  if (*v0) {
    return 0x656C6269736976;
  }
  else {
    return 0x6E6564646968;
  }
}

uint64_t ReactionsState.debugDescription.getter()
{
  if (*v0) {
    return 0x656C62697369762ELL;
  }
  else {
    return 0x6E65646469682ELL;
  }
}

ConversationKit::ReactionsState_optional __swiftcall ReactionsState.init(rawValue:)(Swift::String rawValue)
{
  v2._rawValue = &outlined read-only object #0 of ReactionsState.init(rawValue:);
  return (ConversationKit::ReactionsState_optional)ReactionsState.init(rawValue:)(rawValue, v2, v1);
}

void *static ReactionsState.allCases.getter()
{
  return &outlined read-only object #0 of static ReactionsState.allCases.getter;
}

BOOL static ReactionsState.== infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  return OUTLINED_FUNCTION_108(*a1 ^ *a2);
}

ConversationKit::ReactionsState_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ReactionsState(Swift::String *a1)
{
  return ReactionsState.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ReactionsState@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ReactionsState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ReactionsState(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ReactionsState.allCases.getter;
}

ConversationKit::ReactionPickerTipState_optional __swiftcall ReactionPickerTipState.init(rawValue:)(Swift::String rawValue)
{
  v2._rawValue = &outlined read-only object #0 of ReactionPickerTipState.init(rawValue:);
  return (ConversationKit::ReactionPickerTipState_optional)ReactionsState.init(rawValue:)(rawValue, v2, v1);
}

uint64_t ReactionsState.init(rawValue:)@<X0>(Swift::String string@<0:X0, 8:X1>, Swift::OpaquePointer cases@<0:X2>, char *a3@<X8>)
{
  object = string._object;
  v4._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  Swift::Int v7 = _findStringSwitchCase(cases:string:)(cases, v4);
  uint64_t result = swift_bridgeObjectRelease();
  if (v7 == 1) {
    char v9 = 1;
  }
  else {
    char v9 = 2;
  }
  if (!v7) {
    char v9 = 0;
  }
  *a3 = v9;
  return result;
}

void *static ReactionPickerTipState.allCases.getter()
{
  return &outlined read-only object #0 of static ReactionPickerTipState.allCases.getter;
}

ConversationKit::ReactionPickerTipState_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ReactionPickerTipState(Swift::String *a1)
{
  return ReactionPickerTipState.init(rawValue:)(*a1);
}

void protocol witness for static CaseIterable.allCases.getter in conformance ReactionPickerTipState(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ReactionPickerTipState.allCases.getter;
}

uint64_t CaptionsLayoutState.debugDescription.getter()
{
  uint64_t v1 = 0x656C626275622ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x7263736E6172742ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E65646469682ELL;
  }
}

void *static CaptionsLayoutState.allCases.getter()
{
  return &outlined read-only object #0 of static CaptionsLayoutState.allCases.getter;
}

Swift::Int CaptionsLayoutState.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void protocol witness for static CaseIterable.allCases.getter in conformance CaptionsLayoutState(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static CaptionsLayoutState.allCases.getter;
}

void MultiwayViewConstraintsController.layoutIdiom.getter(unsigned char *a1@<X8>)
{
}

void one-time initialization function for allParticipantListStates()
{
  static MultiwayViewConstraintsController.allParticipantListStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allParticipantListStates;
}

uint64_t *MultiwayViewConstraintsController.allParticipantListStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allParticipantListStates != -1) {
    swift_once();
  }
  return &static MultiwayViewConstraintsController.allParticipantListStates;
}

uint64_t static MultiwayViewConstraintsController.allParticipantListStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allParticipantListStates);
}

uint64_t MultiwayViewConstraintsController.ParticipantListState.debugDescription.getter(char a1)
{
  if (a1) {
    return 0x656C62697369762ELL;
  }
  else {
    return 0x6E65646469682ELL;
  }
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MultiwayViewConstraintsController.ParticipantListState()
{
  return MultiwayViewConstraintsController.ParticipantListState.debugDescription.getter(*v0);
}

uint64_t MultiwayViewConstraintsController.MultiwayCorner.debugDescription.getter(char a1)
{
  uint64_t result = 0x7466654C706F742ELL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x68676952706F742ELL;
      break;
    case 2:
      uint64_t result = 0x4C6D6F74746F622ELL;
      break;
    case 3:
      uint64_t result = 0x526D6F74746F622ELL;
      break;
    default:
      return result;
  }
  return result;
}

void *static MultiwayViewConstraintsController.MultiwayCorner.allCases.getter()
{
  return &outlined read-only object #0 of static MultiwayViewConstraintsController.MultiwayCorner.allCases.getter;
}

ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional protocol witness for RawRepresentable.init(rawValue:) in conformance MultiwayViewConstraintsController.MultiwayCorner@<W0>(Swift::Int *a1@<X0>, ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional *a2@<X8>)
{
  result.value = MultiwayViewConstraintsController.MultiwayCorner.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance MultiwayViewConstraintsController.MultiwayCorner@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MultiwayViewConstraintsController.MultiwayCorner.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance MultiwayViewConstraintsController.MultiwayCorner(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static MultiwayViewConstraintsController.MultiwayCorner.allCases.getter;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MultiwayViewConstraintsController.MultiwayCorner()
{
  return MultiwayViewConstraintsController.MultiwayCorner.debugDescription.getter(*v0);
}

unint64_t MultiwayViewConstraintsController.AccessibilityLocalParticipantState.init(rawValue:)(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MultiwayViewConstraintsController.AccessibilityLocalParticipantState@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = MultiwayViewConstraintsController.AccessibilityLocalParticipantState.init(rawValue:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t static MultiwayViewConstraintsController.localParticipantViewCustomConstraintIdentifier.getter()
{
  return 0xD00000000000002ELL;
}

void one-time initialization function for allLocalParticipantStates()
{
  static MultiwayViewConstraintsController.allLocalParticipantStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allLocalParticipantStates;
}

uint64_t *MultiwayViewConstraintsController.allLocalParticipantStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allLocalParticipantStates != -1) {
    swift_once();
  }
  return &static MultiwayViewConstraintsController.allLocalParticipantStates;
}

uint64_t static MultiwayViewConstraintsController.allLocalParticipantStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allLocalParticipantStates);
}

BOOL static MultiwayViewConstraintsController.ShutterButtonState.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t MultiwayViewConstraintsController.LocalParticipantState.debugDescription.getter(unsigned __int8 a1)
{
  if (!(a1 >> 6))
  {
    uint64_t v1 = 0x72616C756765722ELL;
    unint64_t v2 = 0xE900000000000028;
    goto LABEL_5;
  }
  if (a1 >> 6 == 1)
  {
    uint64_t v1 = 0x286F666E692ELL;
    unint64_t v2 = 0xE600000000000000;
LABEL_5:
    String.append(_:)(*(Swift::String *)&v1);
    _print_unlocked<A, B>(_:_:)();
    v3._uint64_t countAndFlagsBits = 41;
    v3._object = (void *)0xE100000000000000;
    String.append(_:)(v3);
    return 0;
  }
  if (a1 == 128) {
    return 0x65646E617078652ELL;
  }
  else {
    return 0x7263536C6C75662ELL;
  }
}

void MultiwayViewConstraintsController.LocalParticipantState.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  if (a2 >> 6)
  {
    if (a2 >> 6 == 1)
    {
      Hasher._combine(_:)(1uLL);
      Swift::UInt v3 = a2 & 0x3F;
    }
    else if (a2 == 128)
    {
      Swift::UInt v3 = 2;
    }
    else
    {
      Swift::UInt v3 = 3;
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    Swift::UInt v3 = a2;
  }
  Hasher._combine(_:)(v3);
}

Swift::Int MultiwayViewConstraintsController.LocalParticipantState.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  MultiwayViewConstraintsController.LocalParticipantState.hash(into:)((uint64_t)v3, a1);
  return Hasher._finalize()();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MultiwayViewConstraintsController.LocalParticipantState(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MultiwayViewConstraintsController.LocalParticipantState.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MultiwayViewConstraintsController.LocalParticipantState()
{
  return MultiwayViewConstraintsController.LocalParticipantState.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance MultiwayViewConstraintsController.LocalParticipantState(uint64_t a1)
{
  MultiwayViewConstraintsController.LocalParticipantState.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MultiwayViewConstraintsController.LocalParticipantState()
{
  unsigned __int8 v1 = *v0;
  Hasher.init(_seed:)();
  MultiwayViewConstraintsController.LocalParticipantState.hash(into:)((uint64_t)v3, v1);
  return Hasher._finalize()();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MultiwayViewConstraintsController.LocalParticipantState()
{
  return MultiwayViewConstraintsController.LocalParticipantState.debugDescription.getter(*v0);
}

void MultiwayViewConstraintsController.ShutterButtonState.hash(into:)(uint64_t a1, char a2)
{
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MultiwayViewConstraintsController.ShutterButtonState(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MultiwayViewConstraintsController.ShutterButtonState.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance MultiwayViewConstraintsController.ShutterButtonState()
{
  return MultiwayViewConstraintsController.ShutterButtonState.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance MultiwayViewConstraintsController.ShutterButtonState(uint64_t a1)
{
  MultiwayViewConstraintsController.ShutterButtonState.hash(into:)(a1, *v1);
}

uint64_t MultiwayViewConstraintsController.shutterButtonState.getter()
{
  unsigned __int8 v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_shutterButtonState);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for MultiwayViewConstraintsController.shutterButtonState : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  Swift::UInt v3 = (unsigned char *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_shutterButtonState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.shutterButtonState.didset(char a1)
{
  Swift::UInt v3 = (unsigned __int8 *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_shutterButtonState);
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *v3;
  if (((((a1 & 1) == 0) ^ v5) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v6);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 72))(v5, v6, v7);
  }
  return result;
}

void (*MultiwayViewConstraintsController.shutterButtonState.modify())(uint64_t a1)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewConstraintsController.shutterButtonState.modify;
}

void MultiwayViewConstraintsController.shutterButtonState.modify(uint64_t a1)
{
}

{
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t vars8;

  unint64_t v2 = OUTLINED_FUNCTION_16_62(a1);
  v3(v2);
  free(v1);
}

void one-time initialization function for allParticipantGridStates()
{
  static MultiwayViewConstraintsController.allParticipantGridStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allParticipantGridStates;
}

uint64_t *MultiwayViewConstraintsController.allParticipantGridStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allParticipantGridStates != -1) {
    swift_once();
  }
  return &static MultiwayViewConstraintsController.allParticipantGridStates;
}

uint64_t static MultiwayViewConstraintsController.allParticipantGridStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allParticipantGridStates);
}

uint64_t MultiwayViewConstraintsController.ParticipantGridState.debugDescription.getter(char a1)
{
  if (a1) {
    return 0x63696E6167726F2ELL;
  }
  else {
    return 0x7263536C6C75662ELL;
  }
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MultiwayViewConstraintsController.ParticipantGridState()
{
  return MultiwayViewConstraintsController.ParticipantGridState.debugDescription.getter(*v0);
}

void one-time initialization function for allCaptionsStates()
{
  static MultiwayViewConstraintsController.allCaptionsStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allCaptionsStates;
}

uint64_t *MultiwayViewConstraintsController.allCaptionsStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allCaptionsStates != -1) {
    swift_once();
  }
  return &static MultiwayViewConstraintsController.allCaptionsStates;
}

uint64_t static MultiwayViewConstraintsController.allCaptionsStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allCaptionsStates);
}

void MultiwayViewConstraintsController.captionsState.getter()
{
}

uint64_t key path getter for MultiwayViewConstraintsController.captionsState : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  Swift::UInt v3 = (unsigned char *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t key path setter for MultiwayViewConstraintsController.captionsState : MultiwayViewConstraintsController(char *a1)
{
  char v2 = *a1;
  return MultiwayViewConstraintsController.captionsState.setter((uint64_t)&v2);
}

uint64_t MultiwayViewConstraintsController.captionsState.didset(unsigned __int8 *a1)
{
  int v2 = *a1;
  Swift::UInt v3 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  uint64_t result = swift_beginAccess();
  if (v2 != *v3)
  {
    char v5 = *v3;
    return MultiwayViewConstraintsController.captionsStateDidChange(from:to:)((uint64_t)&v6, &v5);
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.captionsStateDidChange(from:to:)(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  char v23 = *a2;
  char v4 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  char v5 = *v4;
  char v6 = (uint64_t *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v8 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  char v9 = *v8;
  char v10 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  char v11 = *v10;
  char v12 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  char v13 = *v12;
  uint64_t v14 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  char v15 = *v14;
  char v16 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  char v17 = *v16;
  char v18 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  char v22 = *v18;
  uint64_t v20 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  uint64_t v21 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v21);
  v24[0] = v5;
  uint64_t v25 = v7;
  char v26 = v9;
  char v27 = v11;
  char v28 = v13;
  char v29 = v23;
  char v30 = v15;
  char v31 = v17;
  char v32 = v22;
  (*(void (**)(unsigned char *, uint64_t))(v20 + 64))(v24, v21);
  v24[0] = v5;
  uint64_t v25 = v7;
  char v26 = v9;
  char v27 = v11;
  char v28 = v13;
  char v29 = v23;
  char v30 = v15;
  char v31 = v17;
  char v32 = v22;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v24);
}

void (*MultiwayViewConstraintsController.captionsState.modify())(uint64_t a1, char a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewConstraintsController.captionsState.modify;
}

void MultiwayViewConstraintsController.captionsState.modify(uint64_t a1, char a2)
{
}

void one-time initialization function for allReactionsStates()
{
  static MultiwayViewConstraintsController.allReactionsStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allReactionsStates;
}

uint64_t *MultiwayViewConstraintsController.allReactionsStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allReactionsStates != -1) {
    swift_once();
  }
  return &static MultiwayViewConstraintsController.allReactionsStates;
}

uint64_t static MultiwayViewConstraintsController.allReactionsStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allReactionsStates);
}

void MultiwayViewConstraintsController.reactionsState.getter()
{
}

uint64_t key path getter for MultiwayViewConstraintsController.reactionsState : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t key path setter for MultiwayViewConstraintsController.reactionsState : MultiwayViewConstraintsController(char *a1)
{
  char v2 = *a1;
  return MultiwayViewConstraintsController.reactionsState.setter(&v2);
}

uint64_t MultiwayViewConstraintsController.reactionsStateDidChange(from:to:)(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  char v24 = *a2;
  char v4 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  char v5 = *v4;
  char v6 = (uint64_t *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v8 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  char v9 = *v8;
  char v10 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  char v11 = *v10;
  char v12 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  char v13 = *v12;
  uint64_t v14 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  char v15 = *v14;
  char v23 = *v14;
  char v16 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  char v17 = *v16;
  char v18 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  char v22 = *v18;
  uint64_t v19 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  uint64_t v21 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v21);
  v25[0] = v5;
  uint64_t v26 = v7;
  char v27 = v9;
  char v28 = v11;
  char v29 = v13;
  char v30 = v15;
  char v31 = v24;
  char v32 = v17;
  char v33 = v22;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 64))(v25, v21, v19);
  v25[0] = v5;
  uint64_t v26 = v7;
  char v27 = v9;
  char v28 = v11;
  char v29 = v13;
  char v30 = v23;
  char v31 = v24;
  char v32 = v17;
  char v33 = v22;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v25);
}

void (*MultiwayViewConstraintsController.reactionsState.modify())(uint64_t a1, char a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewConstraintsController.reactionsState.modify;
}

void MultiwayViewConstraintsController.reactionsState.modify(uint64_t a1, char a2)
{
}

void one-time initialization function for allIsLocalReactionActiveStates()
{
  static MultiwayViewConstraintsController.allIsLocalReactionActiveStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allIsLocalReactionActiveStates;
}

uint64_t *MultiwayViewConstraintsController.allIsLocalReactionActiveStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allIsLocalReactionActiveStates != -1) {
    swift_once();
  }
  return &static MultiwayViewConstraintsController.allIsLocalReactionActiveStates;
}

uint64_t static MultiwayViewConstraintsController.allIsLocalReactionActiveStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allIsLocalReactionActiveStates);
}

uint64_t MultiwayViewConstraintsController.isLocalReactionActive.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for MultiwayViewConstraintsController.isLocalReactionActive : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.isLocalReactionActive.didset(char a1)
{
  uint64_t v2 = a1 & 1;
  uint64_t v3 = (unsigned __int8 *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *v3;
  if (v5 != v2) {
    return MultiwayViewConstraintsController.isLocalReactionActiveDidChange(from:to:)(v2, v5);
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.isLocalReactionActiveDidChange(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  char v27 = a2;
  char v4 = (void *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  uint64_t v5 = v2;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 96))(v3, v6, v7);
  uint64_t v8 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  char v26 = *v8;
  char v9 = (uint64_t *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  uint64_t v10 = *v9;
  char v11 = (unsigned char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  LOBYTE(v3) = *v11;
  char v12 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  char v13 = *v12;
  uint64_t v14 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  uint64_t v15 = v5;
  swift_beginAccess();
  char v16 = *v14;
  char v17 = (unsigned char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  LOBYTE(v5) = *v17;
  char v18 = (char *)(v15 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  char v19 = *v18;
  char v24 = *v18;
  uint64_t v20 = (char *)(v15 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  char v25 = *v20;
  uint64_t v21 = v4[3];
  uint64_t v22 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v21);
  v28[0] = v26;
  uint64_t v29 = v10;
  char v30 = v3;
  char v31 = v13;
  char v32 = v16;
  char v33 = v5;
  char v34 = v19;
  char v35 = v25;
  char v36 = v27;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v22 + 64))(v28, v21, v22);
  v28[0] = v26;
  uint64_t v29 = v10;
  char v30 = v3;
  char v31 = v13;
  char v32 = v16;
  char v33 = v5;
  char v34 = v24;
  char v35 = v25;
  char v36 = v27;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v28);
}

void (*MultiwayViewConstraintsController.isLocalReactionActive.modify())(uint64_t a1)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewConstraintsController.isLocalReactionActive.modify;
}

void MultiwayViewConstraintsController.isLocalReactionActive.modify(uint64_t a1)
{
  char v2 = OUTLINED_FUNCTION_16_62(a1);
  MultiwayViewConstraintsController.isLocalReactionActive.setter(v2);
  free(v1);
}

void one-time initialization function for allReactionPickerTipStates()
{
  static MultiwayViewConstraintsController.allReactionPickerTipStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allReactionPickerTipStates;
}

uint64_t *MultiwayViewConstraintsController.allReactionPickerTipStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allReactionPickerTipStates != -1) {
    swift_once();
  }
  return &static MultiwayViewConstraintsController.allReactionPickerTipStates;
}

uint64_t static MultiwayViewConstraintsController.allReactionPickerTipStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allReactionPickerTipStates);
}

void MultiwayViewConstraintsController.reactionPickerTipState.getter()
{
}

uint64_t key path getter for MultiwayViewConstraintsController.reactionPickerTipState : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t key path setter for MultiwayViewConstraintsController.reactionPickerTipState : MultiwayViewConstraintsController(char *a1)
{
  char v2 = *a1;
  return MultiwayViewConstraintsController.reactionPickerTipState.setter(&v2);
}

uint64_t MultiwayViewConstraintsController.reactionsState.didset(uint64_t a1, void *a2)
{
  OUTLINED_FUNCTION_11_85(a1, a2);
  uint64_t result = OUTLINED_FUNCTION_2();
  if (v4 != *v3)
  {
    char v6 = *v3;
    return v2(v7, &v6);
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.reactionPickerTipStateDidChange(from:to:)(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  char v23 = *a2;
  int v4 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  char v5 = *v4;
  char v6 = (uint64_t *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v8 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  char v9 = *v8;
  uint64_t v10 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  char v11 = *v10;
  char v12 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  char v13 = *v12;
  uint64_t v14 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  char v24 = *v14;
  uint64_t v15 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  char v16 = *v15;
  char v22 = *v15;
  char v17 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  char v21 = *v17;
  uint64_t v18 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  uint64_t v19 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v18);
  v25[0] = v5;
  uint64_t v26 = v7;
  char v27 = v9;
  char v28 = v11;
  char v29 = v13;
  char v30 = v24;
  char v31 = v16;
  char v32 = v23;
  char v33 = v21;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 64))(v25, v18, v19);
  v25[0] = v5;
  uint64_t v26 = v7;
  char v27 = v9;
  char v28 = v11;
  char v29 = v13;
  char v30 = v24;
  char v31 = v22;
  char v32 = v23;
  char v33 = v21;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v25);
}

void (*MultiwayViewConstraintsController.reactionPickerTipState.modify())(uint64_t a1, char a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewConstraintsController.reactionPickerTipState.modify;
}

void MultiwayViewConstraintsController.reactionPickerTipState.modify(uint64_t a1, char a2)
{
}

void MultiwayViewConstraintsController.reactionsState.modify(uint64_t a1, char a2, void (*a3)(char *))
{
  uint64_t v3 = *(void **)a1;
  if (a2)
  {
    char v5 = *(unsigned char *)(*(void *)a1 + 32);
    int v4 = &v5;
  }
  else
  {
    char v6 = *(unsigned char *)(*(void *)a1 + 32);
    int v4 = &v6;
  }
  a3(v4);
  free(v3);
}

void *static MultiwayViewConstraintsController.FloatingControlsState.allCases.getter()
{
  return &outlined read-only object #0 of static MultiwayViewConstraintsController.FloatingControlsState.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance MultiwayViewConstraintsController.FloatingControlsState(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static MultiwayViewConstraintsController.FloatingControlsState.allCases.getter;
}

uint64_t MultiwayViewConstraintsController.participantListState.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for MultiwayViewConstraintsController.participantListState : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.participantListStateDidChange(from:to:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  char v4 = a2 & 1;
  char v5 = (uint64_t *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t v7 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  char v8 = *v7;
  char v9 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  char v10 = *v9;
  char v11 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  char v12 = *v11;
  char v13 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  char v14 = *v13;
  uint64_t v15 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  char v16 = *v15;
  char v17 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  char v18 = *v17;
  uint64_t v19 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  char v23 = *v19;
  uint64_t v21 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  uint64_t v22 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v22);
  v24[0] = v4;
  uint64_t v25 = v6;
  char v26 = v8;
  char v27 = v10;
  char v28 = v12;
  char v29 = v14;
  char v30 = v16;
  char v31 = v18;
  char v32 = v23;
  (*(void (**)(unsigned char *, uint64_t))(v21 + 64))(v24, v22);
  v24[0] = v4;
  uint64_t v25 = v6;
  char v26 = v8;
  char v27 = v10;
  char v28 = v12;
  char v29 = v14;
  char v30 = v16;
  char v31 = v18;
  char v32 = v23;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v24);
}

void (*MultiwayViewConstraintsController.participantListState.modify())(uint64_t a1)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewConstraintsController.participantListState.modify;
}

void MultiwayViewConstraintsController.participantListState.modify(uint64_t a1)
{
}

uint64_t MultiwayViewConstraintsController.accessibilityLocalParticipantState.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  OUTLINED_FUNCTION_2();
  unint64_t v2 = *v1;
  uint64_t result = v2 >> 6;
  if ((v2 >> 6))
  {
    if (result == 1)
    {
      return 1;
    }
    else if (v2 == 128)
    {
      return 2;
    }
    else
    {
      return 3;
    }
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.accessibilityLocalParticipantState.setter(unint64_t a1)
{
  MultiwayViewConstraintsController.accessibilityLocalParticipantState.getter();
  if (one-time initialization token for logger != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)logger);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    unint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v6 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, (uint64_t *)&v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v8 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, (uint64_t *)&v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v3, v4, "accessibilityLocalParticipantState.set newValue: %s, oldValue: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  if (a1 < 4) {
    return MultiwayViewConstraintsController.localParticipantState.setter(0x81804303 >> (8 * a1));
  }
  unint64_t v11 = a1;
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t (*MultiwayViewConstraintsController.accessibilityLocalParticipantState.modify(uint64_t *a1))(unint64_t *a1)
{
  a1[1] = v1;
  *a1 = MultiwayViewConstraintsController.accessibilityLocalParticipantState.getter();
  return MultiwayViewConstraintsController.accessibilityLocalParticipantState.modify;
}

uint64_t MultiwayViewConstraintsController.accessibilityLocalParticipantState.modify(unint64_t *a1)
{
  return MultiwayViewConstraintsController.accessibilityLocalParticipantState.setter(*a1);
}

uint64_t MultiwayViewConstraintsController.shouldForceAllowNextLocalParticipantStateUpdate.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t MultiwayViewConstraintsController.shouldForceAllowNextLocalParticipantStateUpdate.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate);
  uint64_t result = OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.shouldForceAllowNextLocalParticipantStateUpdate.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t MultiwayViewConstraintsController.mostRecentLocalParticipantCorner.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for MultiwayViewConstraintsController.mostRecentLocalParticipantCorner : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.localParticipantState.setter(char a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  OUTLINED_FUNCTION_4_130();
  uint64_t v6 = *v3;
  *uint64_t v3 = a1;
  return a3(v6);
}

uint64_t MultiwayViewConstraintsController.mostRecentLocalParticipantCorner.didset(unsigned __int8 a1)
{
  int v3 = a1;
  os_log_type_t v4 = (unsigned __int8 *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner);
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *v4;
  if (v3 == 4)
  {
    if (v6 == 4) {
      return result;
    }
LABEL_6:
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v7);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, v7, v8);
  }
  if (v6 == 4 || v6 != a1) {
    goto LABEL_6;
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.localParticipantState.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for MultiwayViewConstraintsController.localParticipantState : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  int v3 = (unsigned char *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.localParticipantState.didset(uint64_t a1)
{
  int v3 = (unsigned __int8 *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  unsigned int v4 = *v3;
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((v4 & 0xC0) != 0x40 || ((v4 ^ a1) & 0x3F) != 0) {
        goto LABEL_17;
      }
LABEL_16:
      uint64_t v6 = (unsigned char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate);
      uint64_t result = swift_beginAccess();
      if (*v6 != 1) {
        return result;
      }
      goto LABEL_17;
    }
    if (a1 == 128)
    {
      if (v4 == 128) {
        goto LABEL_16;
      }
    }
    else if (v4 == 129)
    {
      goto LABEL_16;
    }
  }
  else if (v4 <= 0x3F && v4 == a1)
  {
    goto LABEL_16;
  }
LABEL_17:
  uint64_t v8 = (unsigned char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate);
  swift_beginAccess();
  unsigned char *v8 = 0;
  return MultiwayViewConstraintsController.localParticipantStateDidChange(from:to:)(a1, v4);
}

uint64_t MultiwayViewConstraintsController.localParticipantStateDidChange(from:to:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if (one-time initialization token for logger != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)logger);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  char v33 = a2;
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v44[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v10 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v12 = String.init<A>(reflecting:)();
    uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v6, v7, "Updating local participant state to %s from %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v9, -1, -1);
    MEMORY[0x1C87760E0](v8, -1, -1);
  }

  MultiwayViewConstraintsController.updateMostRecentLocalParticipantCorner()();
  char v14 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  char v15 = *v14;
  char v16 = (uint64_t *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  uint64_t v17 = *v16;
  char v18 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  char v19 = *v18;
  uint64_t v20 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  char v21 = *v20;
  uint64_t v22 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  char v23 = *v22;
  char v24 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  char v25 = *v24;
  char v26 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  char v27 = *v26;
  char v28 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  char v32 = *v28;
  uint64_t v29 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  uint64_t v31 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v31);
  v34[0] = v15;
  uint64_t v35 = v17;
  char v36 = v19;
  char v37 = v33;
  char v38 = v21;
  char v39 = v23;
  char v40 = v25;
  char v41 = v27;
  char v42 = v32;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v29 + 64))(v34, v31, v29);
  v34[0] = v15;
  uint64_t v35 = v17;
  char v36 = v19;
  char v37 = v33;
  char v38 = v21;
  char v39 = v23;
  char v40 = v25;
  char v41 = v27;
  char v42 = v32;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v34);
}

void (*MultiwayViewConstraintsController.localParticipantState.modify())(uint64_t a1)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewConstraintsController.localParticipantState.modify;
}

void MultiwayViewConstraintsController.localParticipantState.modify(uint64_t a1)
{
  char v2 = OUTLINED_FUNCTION_16_62(a1);
  MultiwayViewConstraintsController.localParticipantState.setter(v2);
  free(v1);
}

__n128 MultiwayViewConstraintsController.localParticipantAspectRatio.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio;
  OUTLINED_FUNCTION_2();
  char v4 = *(unsigned char *)(v3 + 32);
  __n128 result = *(__n128 *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = v4;
  return result;
}

__n128 key path getter for MultiwayViewConstraintsController.localParticipantAspectRatio : MultiwayViewConstraintsController@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio;
  swift_beginAccess();
  char v4 = *(unsigned char *)(v3 + 32);
  __n128 result = *(__n128 *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 32) = v4;
  return result;
}

uint64_t key path setter for MultiwayViewConstraintsController.localParticipantAspectRatio : MultiwayViewConstraintsController(uint64_t a1)
{
  outlined init with take of AspectRatio(a1, (uint64_t)v2);
  return MultiwayViewConstraintsController.localParticipantAspectRatio.setter((uint64_t)v2);
}

uint64_t MultiwayViewConstraintsController.localParticipantAspectRatio.didset(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio;
  swift_beginAccess();
  double v4 = *(double *)v3;
  double v5 = *(double *)(v3 + 8);
  double v6 = *(double *)(v3 + 16);
  double v7 = *(double *)(v3 + 24);
  int v8 = *(unsigned __int8 *)(v3 + 32);
  outlined init with take of AspectRatio(a1, (uint64_t)v63);
  double v9 = *(double *)v63;
  double v10 = *(double *)&v63[1];
  if (v64)
  {
    double v10 = 1.0;
    double v9 = 1.0;
  }
  if (v8) {
    double v11 = 1.0;
  }
  else {
    double v11 = v5;
  }
  if (v8) {
    double v12 = 1.0;
  }
  else {
    double v12 = v4;
  }
  if (v9 != v12 || v10 != v11) {
    goto LABEL_26;
  }
  uint64_t result = outlined init with take of AspectRatio(a1, (uint64_t)v59);
  double v15 = v60;
  double v16 = v61;
  if (v62)
  {
    double v16 = 1.0;
    double v15 = 1.0;
  }
  double v17 = v8 ? 1.0 : v7;
  double v18 = v8 ? 1.0 : v6;
  if (v15 != v18 || v16 != v17)
  {
LABEL_26:
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v48 = a1;
    uint64_t v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)static Logger.conversationKit);
    char v21 = v1;
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      char v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      v58[0] = v25;
      *(_DWORD *)char v24 = 136315138;
      char v26 = *(unsigned char *)(v3 + 32);
      long long v27 = *(_OWORD *)(v3 + 16);
      v65[0] = *(_OWORD *)v3;
      v65[1] = v27;
      char v66 = v26;
      uint64_t v28 = String.init<A>(reflecting:)();
      *(void *)&v65[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v22, v23, "ConstraintsController updating localParticipantAspectRatio to %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v25, -1, -1);
      MEMORY[0x1C87760E0](v24, -1, -1);
    }
    else
    {
    }
    outlined init with take of AspectRatio(v3, (uint64_t)v65);
    char v30 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState];
    swift_beginAccess();
    char v31 = *v30;
    char v32 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState];
    swift_beginAccess();
    uint64_t v33 = *(void *)v32;
    char v34 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState];
    swift_beginAccess();
    char v35 = *v34;
    char v36 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState];
    swift_beginAccess();
    char v37 = *v36;
    char v38 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState];
    swift_beginAccess();
    char v39 = *v38;
    char v40 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState];
    swift_beginAccess();
    char v41 = *v40;
    char v42 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState];
    swift_beginAccess();
    char v43 = *v42;
    uint64_t v44 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState];
    swift_beginAccess();
    char v45 = *v44;
    unint64_t v46 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive];
    swift_beginAccess();
    char v47 = *v46;
    v49[0] = v31;
    uint64_t v50 = v33;
    char v51 = v35;
    char v52 = v37;
    char v53 = v39;
    char v54 = v41;
    char v55 = v43;
    char v56 = v45;
    char v57 = v47;
    return MultiwayViewConstraintsController.localParticipantAspectRatioDidChange(from:to:layoutState:)(v48, (uint64_t)v65, v49);
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.localParticipantAspectRatioDidChange(from:to:layoutState:)(uint64_t a1, uint64_t a2, char *a3)
{
  char v4 = *a3;
  uint64_t v5 = *((void *)a3 + 1);
  __int16 v6 = *((_WORD *)a3 + 8);
  char v7 = a3[18];
  char v8 = a3[19];
  char v9 = a3[20];
  char v10 = a3[21];
  char v30 = a3[22];
  uint64_t v33 = (void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  uint64_t v12 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v11);
  v44[0] = v4;
  uint64_t v45 = v5;
  __int16 v46 = v6;
  char v47 = v7;
  char v48 = v8;
  char v49 = v9;
  char v50 = v10;
  char v51 = v30;
  (*(void (**)(uint64_t, unsigned char *, uint64_t, uint64_t))(v12 + 24))(a2, v44, v11, v12);
  unint64_t v13 = (char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  char v14 = *v13;
  double v15 = (uint64_t *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  uint64_t v16 = *v15;
  double v17 = (char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  char v18 = *v17;
  char v19 = (char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  char v20 = *v19;
  char v21 = (unsigned char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  LOBYTE(v5) = *v21;
  uint64_t v22 = (unsigned char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  LOBYTE(v6) = *v22;
  os_log_type_t v23 = (char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  char v24 = *v23;
  uint64_t v25 = (unsigned char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  LOBYTE(a2) = *v25;
  char v26 = (char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  char v31 = *v26;
  uint64_t v27 = v33[4];
  uint64_t v29 = v33[3];
  __swift_project_boxed_opaque_existential_1(v33, v29);
  v35[0] = v14;
  uint64_t v36 = v16;
  char v37 = v18;
  char v38 = v20;
  char v39 = v5;
  char v40 = v6;
  char v41 = v24;
  char v42 = a2;
  char v43 = v31;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v27 + 64))(v35, v29, v27);
  v35[0] = v14;
  uint64_t v36 = v16;
  char v37 = v18;
  char v38 = v20;
  char v39 = v5;
  char v40 = v6;
  char v41 = v24;
  char v42 = a2;
  char v43 = v31;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v35);
}

void (*MultiwayViewConstraintsController.localParticipantAspectRatio.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x98uLL);
  *a1 = v3;
  v3[18] = v1;
  uint64_t v4 = v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio;
  OUTLINED_FUNCTION_2();
  char v5 = *(unsigned char *)(v4 + 32);
  long long v6 = *(_OWORD *)(v4 + 16);
  *((_OWORD *)v3 + 5) = *(_OWORD *)v4;
  *((_OWORD *)v3 + 6) = v6;
  *((unsigned char *)v3 + 112) = v5;
  return MultiwayViewConstraintsController.localParticipantAspectRatio.modify;
}

void MultiwayViewConstraintsController.localParticipantAspectRatio.modify(void **a1, char a2)
{
  char v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 40;
  uint64_t v4 = (uint64_t)*a1 + 80;
  if (a2) {
    uint64_t v5 = (uint64_t)v2;
  }
  else {
    uint64_t v5 = v3;
  }
  outlined init with take of AspectRatio(v4, v5);
  MultiwayViewConstraintsController.localParticipantAspectRatio.setter(v5);
  free(v2);
}

void one-time initialization function for allInCallControlsStates()
{
  static MultiwayViewConstraintsController.allInCallControlsStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allInCallControlsStates;
}

uint64_t *MultiwayViewConstraintsController.allInCallControlsStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allInCallControlsStates != -1) {
    swift_once();
  }
  return &static MultiwayViewConstraintsController.allInCallControlsStates;
}

uint64_t static MultiwayViewConstraintsController.allInCallControlsStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allInCallControlsStates);
}

uint64_t MultiwayViewConstraintsController.inCallControlsState.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

uint64_t key path getter for MultiwayViewConstraintsController.inCallControlsState : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.inCallControlsState.didset(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  uint64_t result = swift_beginAccess();
  if (*v3 != a1) {
    return MultiwayViewConstraintsController.inCallControlsStateDidChange(from:to:)(a1, *v3);
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.inCallControlsStateDidChange(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  char v5 = *v4;
  long long v6 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  char v7 = *v6;
  char v8 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  char v9 = *v8;
  char v10 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  char v11 = *v10;
  uint64_t v12 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  char v13 = *v12;
  char v14 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  char v15 = *v14;
  uint64_t v16 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  char v17 = *v16;
  char v18 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  char v22 = *v18;
  uint64_t v20 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  uint64_t v21 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v21);
  v24[0] = v5;
  uint64_t v25 = a2;
  char v26 = v7;
  char v27 = v9;
  char v28 = v11;
  char v29 = v13;
  char v30 = v15;
  char v31 = v17;
  char v32 = v22;
  (*(void (**)(unsigned char *, uint64_t))(v20 + 64))(v24, v21);
  v24[0] = v5;
  uint64_t v25 = a2;
  char v26 = v7;
  char v27 = v9;
  char v28 = v11;
  char v29 = v13;
  char v30 = v15;
  char v31 = v17;
  char v32 = v22;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v24);
}

void (*MultiwayViewConstraintsController.inCallControlsState.modify())(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_37_0();
  *uint64_t v0 = v2;
  v2[4] = v1;
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  OUTLINED_FUNCTION_2();
  v2[3] = *v3;
  return MultiwayViewConstraintsController.inCallControlsState.modify;
}

void MultiwayViewConstraintsController.inCallControlsState.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  MultiwayViewConstraintsController.inCallControlsState.setter(*(void *)(*(void *)a1 + 24));
  free(v1);
}

void MultiwayViewConstraintsController.inCallConversationBannerState.getter()
{
}

uint64_t key path getter for MultiwayViewConstraintsController.inCallConversationBannerState : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t key path setter for MultiwayViewConstraintsController.inCallConversationBannerState : MultiwayViewConstraintsController(char *a1)
{
  char v2 = *a1;
  return MultiwayViewConstraintsController.inCallConversationBannerState.setter((uint64_t)&v2);
}

uint64_t MultiwayViewConstraintsController.inCallConversationBannerState.didset(unsigned __int8 *a1)
{
  int v2 = *a1;
  uint64_t v3 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  uint64_t result = swift_beginAccess();
  int v5 = *v3;
  if (v2)
  {
    if (v2 == 1)
    {
      if (v5 == 1) {
        return result;
      }
    }
    else if (v5 == 2)
    {
      return result;
    }
  }
  else if (!*v3)
  {
    return result;
  }
  char v6 = *v3;
  return MultiwayViewConstraintsController.inCallConversationBannerStateDidChange(from:to:)((uint64_t)&v7, &v6);
}

uint64_t MultiwayViewConstraintsController.inCallConversationBannerStateDidChange(from:to:)(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  char v23 = *a2;
  uint64_t v4 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  char v5 = *v4;
  char v6 = (uint64_t *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  uint64_t v7 = *v6;
  char v8 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  char v9 = *v8;
  char v10 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  char v11 = *v10;
  uint64_t v12 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  char v13 = *v12;
  char v14 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  char v15 = *v14;
  uint64_t v16 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  char v17 = *v16;
  char v18 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  char v22 = *v18;
  uint64_t v20 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  uint64_t v21 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v21);
  v24[0] = v5;
  uint64_t v25 = v7;
  char v26 = v23;
  char v27 = v9;
  char v28 = v11;
  char v29 = v13;
  char v30 = v15;
  char v31 = v17;
  char v32 = v22;
  (*(void (**)(unsigned char *, uint64_t))(v20 + 64))(v24, v21);
  v24[0] = v5;
  uint64_t v25 = v7;
  char v26 = v23;
  char v27 = v9;
  char v28 = v11;
  char v29 = v13;
  char v30 = v15;
  char v31 = v17;
  char v32 = v22;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v24);
}

void (*MultiwayViewConstraintsController.inCallConversationBannerState.modify())(uint64_t a1, char a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewConstraintsController.inCallConversationBannerState.modify;
}

void MultiwayViewConstraintsController.inCallConversationBannerState.modify(uint64_t a1, char a2)
{
}

void MultiwayViewConstraintsController.captionsState.modify(uint64_t a1, char a2, void (*a3)(char *))
{
  uint64_t v3 = *(void **)a1;
  if (a2)
  {
    char v5 = *(unsigned char *)(*(void *)a1 + 32);
    uint64_t v4 = &v5;
  }
  else
  {
    char v6 = *(unsigned char *)(*(void *)a1 + 32);
    uint64_t v4 = &v6;
  }
  a3(v4);
  free(v3);
}

uint64_t MultiwayViewConstraintsController.participantGridState.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for MultiwayViewConstraintsController.participantGridState : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.participantListState.didset(char a1, void *a2, uint64_t (*a3)(uint64_t))
{
  char v6 = (unsigned __int8 *)(v3 + *a2);
  OUTLINED_FUNCTION_2();
  uint64_t result = a1 & 1;
  if (((((a1 & 1) == 0) ^ *v6) & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.participantGridStateDidChange(from:to:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  char v4 = a2 & 1;
  if (one-time initialization token for logger != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)logger);
  char v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  char v31 = v4;
  if (os_log_type_enabled(v6, v7))
  {
    char v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v42[0] = v9;
    *(_DWORD *)char v8 = 136315138;
    uint64_t v10 = String.init<A>(reflecting:)();
    uint64_t v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v6, v7, "Updating grid state to %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v9, -1, -1);
    MEMORY[0x1C87760E0](v8, -1, -1);
  }

  uint64_t v12 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  char v13 = *v12;
  char v14 = (uint64_t *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v16 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  char v17 = *v16;
  char v18 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  char v19 = *v18;
  uint64_t v20 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  char v21 = *v20;
  char v22 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  char v23 = *v22;
  char v24 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  char v25 = *v24;
  char v26 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  char v30 = *v26;
  uint64_t v27 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  uint64_t v29 = *(void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v29);
  v32[0] = v13;
  uint64_t v33 = v15;
  char v34 = v17;
  char v35 = v19;
  char v36 = v31;
  char v37 = v21;
  char v38 = v23;
  char v39 = v25;
  char v40 = v30;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v27 + 64))(v32, v29, v27);
  v32[0] = v13;
  uint64_t v33 = v15;
  char v34 = v17;
  char v35 = v19;
  char v36 = v31;
  char v37 = v21;
  char v38 = v23;
  char v39 = v25;
  char v40 = v30;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v32);
}

void (*MultiwayViewConstraintsController.participantGridState.modify())(uint64_t a1)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewConstraintsController.participantGridState.modify;
}

void MultiwayViewConstraintsController.participantGridState.modify(uint64_t a1)
{
}

uint64_t MultiwayViewConstraintsController.floatingControlsState.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for MultiwayViewConstraintsController.floatingControlsState : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.floatingControlsState.setter(char a1)
{
  return MultiwayViewConstraintsController.floatingControlsState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState, (uint64_t (*)(uint64_t))MultiwayViewConstraintsController.floatingControlsState.didset);
}

uint64_t MultiwayViewConstraintsController.floatingControlsState.didset(char a1)
{
  uint64_t v3 = (unsigned __int8 *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState);
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *v3;
  uint64_t v6 = a1 & 1;
  if ((((v6 == 0) ^ v5) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v7);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 80))(v6, v5, v7, v8);
  }
  return result;
}

void (*MultiwayViewConstraintsController.floatingControlsState.modify())(uint64_t a1)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return MultiwayViewConstraintsController.floatingControlsState.modify;
}

void MultiwayViewConstraintsController.floatingControlsState.modify(uint64_t a1)
{
}

uint64_t MultiwayViewConstraintsController.localParticipantRegularSize.getter()
{
  OUTLINED_FUNCTION_1_157(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  uint64_t v0 = OUTLINED_FUNCTION_92_0();
  return v1(v0);
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.listState.getter()
{
  return *v0;
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.listState.setter(uint64_t result)
{
  unsigned char *v1 = result & 1;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.listState.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.controlsState.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.controlsState.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.controlsState.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewConstraintsController.OverallLayoutState.conversationBannerState.getter(unsigned char *a1@<X8>)
{
}

unsigned char *MultiwayViewConstraintsController.OverallLayoutState.conversationBannerState.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.conversationBannerState.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.localState.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.localState.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.localState.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.gridState.getter()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.gridState.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 18) = result & 1;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.gridState.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewConstraintsController.OverallLayoutState.captionsState.getter(unsigned char *a1@<X8>)
{
}

unsigned char *MultiwayViewConstraintsController.OverallLayoutState.captionsState.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 19) = *result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.captionsState.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewConstraintsController.OverallLayoutState.reactionsState.getter(unsigned char *a1@<X8>)
{
}

unsigned char *MultiwayViewConstraintsController.OverallLayoutState.reactionsState.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = *result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.reactionsState.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewConstraintsController.OverallLayoutState.reactionPickerTipState.getter(unsigned char *a1@<X8>)
{
}

unsigned char *MultiwayViewConstraintsController.OverallLayoutState.reactionPickerTipState.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 21) = *result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.reactionPickerTipState.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.isLocalReactionActive.getter()
{
  return *(unsigned __int8 *)(v0 + 22);
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.isLocalReactionActive.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 22) = result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.isLocalReactionActive.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewConstraintsController.OverallLayoutState.hash(into:)()
{
  Swift::UInt v1 = *((void *)v0 + 1);
  Swift::UInt v2 = v0[16];
  Swift::UInt v3 = v0[17];
  Swift::UInt v4 = v0[18];
  Swift::UInt v5 = v0[19];
  Swift::UInt v6 = v0[20];
  Swift::UInt v7 = v0[21];
  Swift::UInt8 v8 = v0[22];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  if (!(v3 >> 6))
  {
    Swift::UInt v9 = 0;
    goto LABEL_5;
  }
  if (v3 >> 6 == 1)
  {
    v3 &= 0x3Fu;
    Swift::UInt v9 = 1;
LABEL_5:
    Hasher._combine(_:)(v9);
    goto LABEL_9;
  }
  if (v3 == 128) {
    Swift::UInt v3 = 2;
  }
  else {
    Swift::UInt v3 = 3;
  }
LABEL_9:
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  Hasher._combine(_:)(v5);
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(v7);
  Hasher._combine(_:)(v8);
}

uint64_t static MultiwayViewConstraintsController.OverallLayoutState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2 || *((void *)a1 + 1) != *((void *)a2 + 1)) {
    return 0;
  }
  int v3 = a1[16];
  unsigned __int8 v4 = a1[17];
  int v5 = a1[18];
  int v6 = a1[19];
  unsigned __int8 v7 = a1[20];
  unsigned __int8 v8 = a1[21];
  int v9 = a1[22];
  int v10 = a2[16];
  int v11 = a2[18];
  int v12 = a2[19];
  unsigned __int8 v13 = a2[20];
  unsigned __int8 v14 = a2[21];
  int v15 = a2[22];
  if (!v3)
  {
    if (!a2[16]) {
      goto LABEL_10;
    }
    return 0;
  }
  if (v3 != 1)
  {
    if (v10 == 2) {
      goto LABEL_10;
    }
    return 0;
  }
  if (v10 != 1) {
    return 0;
  }
LABEL_10:
  if ((static MultiwayViewConstraintsController.LocalParticipantState.== infix(_:_:)(v4, a2[17]) & 1) == 0
    || ((v5 ^ v11) & 1) != 0)
  {
    return 0;
  }
  uint64_t result = 0;
  if (v6 == v12)
  {
    if ((v8 ^ v14)) {
      unsigned int v17 = 0;
    }
    else {
      unsigned int v17 = v9 ^ v15 ^ 1;
    }
    if ((v7 ^ v13)) {
      return 0;
    }
    else {
      return v17;
    }
  }
  return result;
}

Swift::Int MultiwayViewConstraintsController.OverallLayoutState.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MultiwayViewConstraintsController.OverallLayoutState()
{
  return Hasher._finalize()();
}

void *MultiwayViewConstraintsController.bannerDodgingLayoutGuide.getter()
{
  Swift::UInt v1 = *(void **)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerDodgingLayoutGuide);
  id v2 = v1;
  return v1;
}

uint64_t MultiwayViewConstraintsController.bannerViewConstraintManager.getter()
{
  OUTLINED_FUNCTION_1_157(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  uint64_t v0 = OUTLINED_FUNCTION_92_0();
  return v1(v0);
}

uint64_t MultiwayViewConstraintsController.bannerControlsSize.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

__n128 key path getter for MultiwayViewConstraintsController.bannerControlsSize : MultiwayViewConstraintsController@<Q0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  int v3 = (__n128 *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize);
  swift_beginAccess();
  unsigned __int8 v4 = v3[1].n128_u8[0];
  __n128 result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

id key path setter for MultiwayViewConstraintsController.bannerControlsSize : MultiwayViewConstraintsController(uint64_t a1)
{
  return MultiwayViewConstraintsController.bannerControlsSize.setter(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

id MultiwayViewConstraintsController.bannerControlsSize.didset()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsWidthConstraint);
  if (v1)
  {
    uint64_t v2 = v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize;
    OUTLINED_FUNCTION_2();
    double v3 = 0.0;
    if ((*(unsigned char *)(v2 + 16) & 1) == 0) {
      double v3 = *(double *)v2;
    }
    id result = objc_msgSend(v1, sel_setConstant_, v3);
  }
  int v5 = *(void **)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsHeightConstraint);
  if (v5)
  {
    uint64_t v6 = v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize;
    OUTLINED_FUNCTION_2();
    double v7 = 0.0;
    if ((*(unsigned char *)(v6 + 16) & 1) == 0) {
      double v7 = *(double *)(v6 + 8);
    }
    return objc_msgSend(v5, sel_setConstant_, v7);
  }
  return result;
}

id (*MultiwayViewConstraintsController.bannerControlsSize.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return MultiwayViewConstraintsController.bannerControlsSize.modify;
}

id MultiwayViewConstraintsController.bannerControlsSize.modify(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return MultiwayViewConstraintsController.bannerControlsSize.didset();
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.configurableRosterCellWidth.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidth;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

uint64_t key path getter for MultiwayViewConstraintsController.configurableRosterCellWidth : MultiwayViewConstraintsController@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidth;
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 8);
  *(void *)a2 = *(void *)v3;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

id key path setter for MultiwayViewConstraintsController.configurableRosterCellWidth : MultiwayViewConstraintsController(uint64_t a1)
{
  return MultiwayViewConstraintsController.configurableRosterCellWidth.setter(*(void *)a1, *(unsigned char *)(a1 + 8));
}

id MultiwayViewConstraintsController.configurableRosterCellWidth.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_4_130();
  *(void *)uint64_t v2 = a1;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return MultiwayViewConstraintsController.configurableRosterCellWidth.didset();
}

id MultiwayViewConstraintsController.configurableRosterCellWidth.didset()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidthConstraint);
  if (v1)
  {
    uint64_t v2 = v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidth;
    swift_beginAccess();
    double v3 = *(double *)v2;
    if (*(unsigned char *)(v2 + 8)) {
      double v3 = 0.0;
    }
    return objc_msgSend(v1, sel_setConstant_, v3);
  }
  return result;
}

uint64_t specialized static MultiwayViewConstraintsController.forEachOverallLayoutState(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  if (one-time initialization token for allParticipantListStates != -1) {
LABEL_65:
  }
    swift_once();
  if (*(void *)(static MultiwayViewConstraintsController.allParticipantListStates + 16))
  {
    uint64_t v79 = *(void *)(static MultiwayViewConstraintsController.allParticipantListStates + 16);
    uint64_t v98 = a8;
    uint64_t v26 = one-time initialization token for allInCallControlsStates;
    uint64_t v27 = static MultiwayViewConstraintsController.allParticipantListStates;
    swift_bridgeObjectRetain();
    if (v26 != -1) {
LABEL_68:
    }
      swift_once();
    unint64_t v28 = 0;
    uint64_t v29 = v27 + 32;
    char v30 = &static BezelMetrics.forCurrentDisplay;
    unint64_t v31 = 0x1EA345000uLL;
    while (1)
    {
      if (v28 >= *(void *)(v27 + 16))
      {
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      uint64_t v80 = *(void *)(*((void *)v30 + 456) + 16);
      if (v80)
      {
        unint64_t v67 = v28;
        uint64_t v68 = v27;
        uint64_t v66 = v29;
        unsigned __int8 v32 = *(unsigned char *)(v29 + v28);
        uint64_t v33 = *(void *)(v31 + 3664);
        uint64_t v34 = *((void *)v30 + 456);
        swift_bridgeObjectRetain();
        if (v33 != -1) {
          swift_once();
        }
        unint64_t v35 = 0;
        uint64_t v36 = v34 + 32;
        uint64_t result = v34;
        uint64_t v69 = v34 + 32;
        uint64_t v70 = v34;
        unsigned __int8 v95 = v32;
        while (2)
        {
          if (v35 >= *(void *)(result + 16))
          {
            __break(1u);
            return result;
          }
          uint64_t v38 = 0;
          uint64_t v39 = *(void *)(v36 + 8 * v35++);
          uint64_t v40 = static MultiwayViewConstraintsController.allLocalParticipantStates;
          unint64_t v71 = v35;
          uint64_t v97 = v39;
          do
          {
            uint64_t v81 = *(void *)(v40 + 16);
            if (v81)
            {
              uint64_t v72 = v38;
              char v41 = outlined read-only object #0 of specialized static MultiwayViewConstraintsController.forEachOverallLayoutState(_:)[v38 + 32];
              uint64_t v42 = one-time initialization token for allParticipantGridStates;
              uint64_t v27 = v40;
              swift_bridgeObjectRetain();
              if (v42 != -1) {
                swift_once();
              }
              unint64_t v43 = 0;
              uint64_t v44 = v27 + 32;
              uint64_t v45 = v27;
              uint64_t v73 = v27 + 32;
              uint64_t v74 = v27;
              char v96 = v41;
              while (1)
              {
                if (v43 >= *(void *)(v45 + 16))
                {
                  __break(1u);
                  goto LABEL_67;
                }
                uint64_t v82 = *(void *)(static MultiwayViewConstraintsController.allParticipantGridStates + 16);
                if (v82) {
                  break;
                }
LABEL_49:
                if (++v43 == v81)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v40 = static MultiwayViewConstraintsController.allLocalParticipantStates;
                  uint64_t result = v70;
                  unint64_t v35 = v71;
                  uint64_t v36 = v69;
                  uint64_t v38 = v72;
                  goto LABEL_51;
                }
              }
              unint64_t v75 = v43;
              char v99 = *(unsigned char *)(v44 + v43);
              a8 = one-time initialization token for allCaptionsStates;
              uint64_t v27 = static MultiwayViewConstraintsController.allParticipantGridStates;
              swift_bridgeObjectRetain();
              if (a8 != -1) {
                swift_once();
              }
              unint64_t v46 = 0;
              uint64_t v47 = v27 + 32;
              uint64_t v48 = v27;
              uint64_t v76 = v27 + 32;
              uint64_t v77 = v27;
              while (1)
              {
                if (v46 >= *(void *)(v48 + 16))
                {
LABEL_64:
                  __break(1u);
                  goto LABEL_65;
                }
                uint64_t v86 = *(void *)(static MultiwayViewConstraintsController.allCaptionsStates + 16);
                if (v86) {
                  break;
                }
LABEL_47:
                if (++v46 == v82)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v45 = v74;
                  unint64_t v43 = v75;
                  uint64_t v44 = v73;
                  goto LABEL_49;
                }
              }
              unint64_t v78 = v46;
              char v100 = *(unsigned char *)(v47 + v46);
              a8 = one-time initialization token for allReactionsStates;
              uint64_t v27 = static MultiwayViewConstraintsController.allCaptionsStates;
              swift_bridgeObjectRetain();
              if (a8 != -1) {
                swift_once();
              }
              unint64_t v49 = 0;
              uint64_t v83 = v27;
              uint64_t v84 = v27 + 32;
              uint64_t v50 = v27;
              while (1)
              {
                if (v49 >= *(void *)(v50 + 16))
                {
                  __break(1u);
                  goto LABEL_64;
                }
                uint64_t v89 = *(void *)(static MultiwayViewConstraintsController.allReactionsStates + 16);
                if (v89) {
                  break;
                }
LABEL_45:
                if (++v49 == v86)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v48 = v77;
                  unint64_t v46 = v78;
                  uint64_t v47 = v76;
                  goto LABEL_47;
                }
              }
              unint64_t v85 = v49;
              char v105 = *(unsigned char *)(v84 + v49);
              a8 = one-time initialization token for allReactionPickerTipStates;
              uint64_t v51 = static MultiwayViewConstraintsController.allReactionsStates;
              swift_bridgeObjectRetain();
              if (a8 != -1) {
                swift_once();
              }
              unint64_t v52 = 0;
              uint64_t v87 = v51;
              uint64_t v88 = v51 + 32;
              uint64_t v53 = v51;
              while (1)
              {
                if (v52 >= *(void *)(v53 + 16))
                {
                  __break(1u);
                  goto LABEL_62;
                }
                uint64_t v27 = static MultiwayViewConstraintsController.allReactionPickerTipStates;
                uint64_t v93 = *(void *)(static MultiwayViewConstraintsController.allReactionPickerTipStates + 16);
                if (v93) {
                  break;
                }
LABEL_43:
                if (++v52 == v89)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v50 = v83;
                  unint64_t v49 = v85;
                  goto LABEL_45;
                }
              }
              unint64_t v90 = v52;
              char v106 = *(unsigned char *)(v88 + v52);
              uint64_t v54 = one-time initialization token for allIsLocalReactionActiveStates;
              swift_bridgeObjectRetain();
              if (v54 != -1) {
                swift_once();
              }
              unint64_t v55 = 0;
              uint64_t v91 = v27 + 32;
              uint64_t v92 = v27;
              while (v55 < *(void *)(v27 + 16))
              {
                uint64_t v108 = static MultiwayViewConstraintsController.allIsLocalReactionActiveStates;
                a8 = *(void *)(static MultiwayViewConstraintsController.allIsLocalReactionActiveStates + 16);
                if (a8)
                {
                  unint64_t v94 = v55;
                  char v107 = *(unsigned char *)(v91 + v55);
                  uint64_t v56 = swift_bridgeObjectRetain();
                  uint64_t v57 = 0;
                  do
                  {
                    uint64_t v58 = a15;
                    uint64_t v59 = a13;
                    uint64_t v60 = a11;
                    uint64_t v61 = a9;
                    uint64_t v62 = a7;
                    uint64_t v63 = a5;
                    char v64 = *(unsigned char *)(v108 + v57++ + 32);
                    uint64_t v65 = (void *)MEMORY[0x1C8775630](v56);
                    v109[0] = v95;
                    uint64_t v110 = v97;
                    char v111 = v96;
                    char v112 = v99;
                    char v113 = v100;
                    char v114 = v105;
                    char v115 = v106;
                    char v116 = v107;
                    char v117 = v64;
                    a5 = v63;
                    a7 = v62;
                    a9 = v61;
                    a11 = v60;
                    a13 = v59;
                    a15 = v58;
                    closure #10 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v109, a2, a3, a4, a5, a6, a7, v98, a9, a10, a11, a12, a13, a14, v58, a16, a17, a18, a19);
                  }
                  while (a8 != v57);
                  swift_bridgeObjectRelease();
                  uint64_t v27 = v92;
                  unint64_t v55 = v94;
                }
                if (++v55 == v93)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v53 = v87;
                  unint64_t v52 = v90;
                  goto LABEL_43;
                }
              }
              __break(1u);
              goto LABEL_57;
            }
LABEL_51:
            ++v38;
          }
          while (v38 != 3);
          if (v35 != v80) {
            continue;
          }
          break;
        }
        swift_bridgeObjectRelease();
        unint64_t v28 = v67;
        uint64_t v27 = v68;
        uint64_t v29 = v66;
        char v30 = &static BezelMetrics.forCurrentDisplay;
        unint64_t v31 = 0x1EA345000;
      }
      if (++v28 == v79)
      {
LABEL_62:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
    }
  }
LABEL_57:
  swift_release();
LABEL_58:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void static MultiwayViewConstraintsController.forEachOverallLayoutState(_:)(void (*a1)(void))
{
  if (one-time initialization token for allParticipantListStates != -1) {
LABEL_64:
  }
    swift_once();
  uint64_t v2 = static MultiwayViewConstraintsController.allParticipantListStates;
  if (*(void *)(static MultiwayViewConstraintsController.allParticipantListStates + 16))
  {
    uint64_t v52 = *(void *)(static MultiwayViewConstraintsController.allParticipantListStates + 16);
    uint64_t v3 = one-time initialization token for allInCallControlsStates;
    swift_bridgeObjectRetain();
    if (v3 != -1) {
LABEL_67:
    }
      swift_once();
    unint64_t v4 = 0;
    uint64_t v5 = v2 + 32;
    uint64_t v6 = &static BezelMetrics.forCurrentDisplay;
    unint64_t v7 = 0x1EA345000uLL;
    unsigned __int8 v8 = &static BezelMetrics.forCurrentDisplay;
    do
    {
      if (v4 >= *(void *)(v2 + 16))
      {
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      uint64_t v53 = *(void *)(*((void *)v6 + 456) + 16);
      if (v53)
      {
        unint64_t v46 = v4;
        uint64_t v47 = v2;
        uint64_t v45 = v5;
        char v9 = *(unsigned char *)(v5 + v4);
        uint64_t v10 = *(void *)(v7 + 3664);
        swift_bridgeObjectRetain();
        if (v10 != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_14_82();
        char v62 = v9;
        while (2)
        {
          OUTLINED_FUNCTION_20_66();
          if (v13)
          {
            __break(1u);
            return;
          }
          uint64_t v14 = 0;
          uint64_t v15 = *(void *)(v12 + 8 * v11);
          uint64_t v16 = v11 + 1;
          uint64_t v17 = static MultiwayViewConstraintsController.allLocalParticipantStates;
          uint64_t v48 = v16;
          uint64_t v63 = v15;
          do
          {
            uint64_t v54 = *(void *)(v17 + 16);
            if (v54)
            {
              uint64_t v49 = v14;
              uint64_t v18 = outlined read-only object #0 of static MultiwayViewConstraintsController.forEachOverallLayoutState(_:)[v14 + 32];
              uint64_t v19 = one-time initialization token for allParticipantGridStates;
              uint64_t v2 = v17;
              swift_bridgeObjectRetain();
              if (v19 != -1) {
                swift_once();
              }
              OUTLINED_FUNCTION_14_82();
              while (1)
              {
                OUTLINED_FUNCTION_20_66();
                if (v13)
                {
                  __break(1u);
                  goto LABEL_66;
                }
                uint64_t v55 = *(void *)(static MultiwayViewConstraintsController.allParticipantGridStates + 16);
                if (v55) {
                  break;
                }
LABEL_49:
                if (v20 + 1 == v54)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v17 = static MultiwayViewConstraintsController.allLocalParticipantStates;
                  uint64_t v16 = v48;
                  uint64_t v14 = v49;
                  goto LABEL_51;
                }
              }
              uint64_t v50 = v20;
              char v22 = *(unsigned char *)(v21 + v20);
              uint64_t v23 = one-time initialization token for allCaptionsStates;
              uint64_t v2 = static MultiwayViewConstraintsController.allParticipantGridStates;
              swift_bridgeObjectRetain();
              if (v23 != -1) {
                swift_once();
              }
              OUTLINED_FUNCTION_14_82();
              char v68 = v22;
              while (1)
              {
                OUTLINED_FUNCTION_20_66();
                if (v13)
                {
LABEL_63:
                  __break(1u);
                  goto LABEL_64;
                }
                uint64_t v58 = *(void *)(static MultiwayViewConstraintsController.allCaptionsStates + 16);
                if (v58) {
                  break;
                }
LABEL_47:
                if (v24 + 1 == v55)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v20 = v50;
                  goto LABEL_49;
                }
              }
              uint64_t v51 = v24;
              char v26 = *(unsigned char *)(v25 + v24);
              uint64_t v27 = one-time initialization token for allReactionsStates;
              uint64_t v2 = static MultiwayViewConstraintsController.allCaptionsStates;
              swift_bridgeObjectRetain();
              if (v27 != -1) {
                swift_once();
              }
              uint64_t v56 = v2 + 32;
              while (1)
              {
                OUTLINED_FUNCTION_20_66();
                if (v13)
                {
                  __break(1u);
                  goto LABEL_63;
                }
                uint64_t v29 = *((void *)v8 + 453);
                uint64_t v60 = *(void *)(v29 + 16);
                if (v60) {
                  break;
                }
LABEL_45:
                if (v28 + 1 == v58)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v24 = v51;
                  goto LABEL_47;
                }
              }
              uint64_t v57 = v28;
              char v30 = *(unsigned char *)(v56 + v28);
              uint64_t v31 = one-time initialization token for allReactionPickerTipStates;
              uint64_t v2 = v29;
              swift_bridgeObjectRetain();
              if (v31 != -1) {
                swift_once();
              }
              uint64_t v59 = v2 + 32;
              char v69 = v30;
              while (1)
              {
                OUTLINED_FUNCTION_20_66();
                if (v13)
                {
                  __break(1u);
                  goto LABEL_59;
                }
                uint64_t v33 = static MultiwayViewConstraintsController.allReactionPickerTipStates;
                uint64_t v66 = *(void *)(static MultiwayViewConstraintsController.allReactionPickerTipStates + 16);
                if (v66) {
                  break;
                }
LABEL_43:
                if (v32 + 1 == v60)
                {
                  swift_bridgeObjectRelease();
                  unsigned __int8 v8 = &static BezelMetrics.forCurrentDisplay;
                  uint64_t v28 = v57;
                  goto LABEL_45;
                }
              }
              uint64_t v61 = v32;
              char v34 = *(unsigned char *)(v59 + v32);
              uint64_t v35 = one-time initialization token for allIsLocalReactionActiveStates;
              swift_bridgeObjectRetain();
              if (v35 != -1) {
                swift_once();
              }
              unint64_t v36 = 0;
              uint64_t v64 = v33 + 32;
              uint64_t v65 = v33;
              while (v36 < *(void *)(v33 + 16))
              {
                uint64_t v71 = static MultiwayViewConstraintsController.allIsLocalReactionActiveStates;
                uint64_t v2 = *(void *)(static MultiwayViewConstraintsController.allIsLocalReactionActiveStates + 16);
                if (v2)
                {
                  unint64_t v67 = v36;
                  char v70 = *(unsigned char *)(v64 + v36);
                  uint64_t v37 = swift_bridgeObjectRetain();
                  uint64_t v38 = 0;
                  uint64_t v39 = v18;
                  do
                  {
                    uint64_t v40 = a1;
                    char v41 = *(unsigned char *)(v71 + v38++ + 32);
                    uint64_t v42 = v2;
                    uint64_t v43 = MEMORY[0x1C8775630](v37);
                    v72[0] = v62;
                    uint64_t v73 = v63;
                    char v74 = v39;
                    char v75 = v68;
                    char v76 = v26;
                    char v77 = v69;
                    char v78 = v34;
                    char v79 = v70;
                    char v80 = v41;
                    a1 = v40;
                    v40(v72);
                    uint64_t v44 = (void *)v43;
                    uint64_t v2 = v42;
                  }
                  while (v42 != v38);
                  swift_bridgeObjectRelease();
                  uint64_t v18 = v39;
                  uint64_t v33 = v65;
                  unint64_t v36 = v67;
                }
                if (++v36 == v66)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v32 = v61;
                  goto LABEL_43;
                }
              }
              __break(1u);
              return;
            }
LABEL_51:
            ++v14;
          }
          while (v14 != 3);
          if (v16 != v53) {
            continue;
          }
          break;
        }
        swift_bridgeObjectRelease();
        unint64_t v4 = v46;
        uint64_t v2 = v47;
        uint64_t v5 = v45;
        uint64_t v6 = &static BezelMetrics.forCurrentDisplay;
        unint64_t v7 = 0x1EA345000;
      }
      ++v4;
    }
    while (v4 != v52);
LABEL_59:
    swift_bridgeObjectRelease();
  }
}

char *MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(char *a1, void *a2, void *a3, char a4, void *a5, char a6, void *a7, void *a8, void *a9, unint64_t a10, void *a11, unsigned __int8 *a12, void *a13, unsigned __int8 a14, char *a15, void *a16, void *a17, void *a18, void *a19, char a20,void *a21,void *a22,void *a23,uint64_t a24,uint64_t a25,unint64_t a26,void *a27,void *a28,void *a29,void *a30,unsigned __int8 *a31,void *a32,unsigned __int8 *a33,void *a34,unsigned __int8 *a35,char a36)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  unsigned int v183 = a4 & 1;
  *(void *)uint64_t v187 = a6 & 1;
  char v41 = *a1;
  uint64_t v192 = *a12;
  uint64_t v185 = *a31;
  int v186 = *a33;
  int v189 = *a35;
  v36[OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate] = 0;
  v36[OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner] = 4;
  uint64_t v42 = (uint64_t *)&v36[OBJC_IVAR___CNKFaceTimeConstraintsController_viewStateEffects];
  uint64_t v43 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [()]);
  lazy protocol witness table accessor for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState();
  id v160 = v42;
  *uint64_t v42 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v165 = OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsWidthConstraint;
  *(void *)&v43[OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsWidthConstraint] = 0;
  uint64_t v167 = OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsHeightConstraint;
  *(void *)&v43[OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsHeightConstraint] = 0;
  uint64_t v169 = OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidthConstraint;
  *(void *)&v43[OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidthConstraint] = 0;
  uint64_t v44 = &v43[OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize];
  *(void *)uint64_t v44 = 0;
  *((void *)v44 + 1) = 0;
  v44[16] = 1;
  uint64_t v45 = &v43[OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidth];
  *(void *)uint64_t v45 = 0;
  v45[8] = 1;
  char v173 = v41;
  v43[OBJC_IVAR___CNKFaceTimeConstraintsController_layoutIdiom] = v41;
  id v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1940]), sel_init);
  uint64_t v47 = a2;
  id v190 = a2;
  objc_msgSend(a2, sel_addLayoutGuide_, v46);
  id v48 = objc_msgSend(v46, sel_widthAnchor);
  static Layout.ConversationControls.values.getter((uint64_t)v200);
  id v49 = objc_msgSend(v48, sel_constraintEqualToConstant_, v200[0]);

  double v180 = v46;
  id v50 = objc_msgSend(v46, sel_heightAnchor);
  id v51 = objc_msgSend(v50, sel_constraintEqualToConstant_, 0.0);

  id v184 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_1C3769610;
  *(void *)(v52 + 32) = v49;
  *(void *)(v52 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v51;
  *(void *)&long long v197 = v52;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  id v161 = v49;
  id v162 = v51;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v184, sel_activateConstraints_, isa);

  id v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1940]), sel_init);
  objc_msgSend(v47, sel_addLayoutGuide_, v54);
  id v55 = objc_msgSend(v54, sel_widthAnchor);
  OUTLINED_FUNCTION_2();
  double v56 = *(double *)v45;
  if (v45[8]) {
    double v56 = 0.0;
  }
  id v57 = objc_msgSend(v55, sel_constraintEqualToConstant_, v56);

  type metadata accessor for UILayoutPriority(0);
  LODWORD(v196) = 1144750080;
  LODWORD(v194) = 1065353216;
  lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
  OUTLINED_FUNCTION_27_55();
  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  LODWORD(v58) = v197;
  objc_msgSend(v57, sel_setPriority_, v58);
  id v59 = objc_msgSend(v54, sel_widthAnchor);
  id v60 = objc_msgSend(v59, sel_constraintGreaterThanOrEqualToConstant_, dbl_1C378C9C0[static Platform.current.getter() == 0]);

  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_1C3769F40;
  *(void *)(v61 + 32) = v57;
  *(void *)(v61 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v60;
  id v62 = v57;
  id v159 = v60;
  id v63 = objc_msgSend(v54, sel_heightAnchor);
  char v171 = v54;
  id v64 = objc_msgSend(v54, sel_widthAnchor);
  id v65 = objc_msgSend(v63, sel_constraintEqualToAnchor_, v64);

  *(void *)(v61 + 48) = v65;
  *(void *)&long long v197 = v61;
  specialized Array._endMutation()();
  Class v66 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v184, sel_activateConstraints_, v66);

  id v67 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1940]), sel_init);
  objc_msgSend(v190, sel_addLayoutGuide_, v67);
  uint64_t v172 = v67;
  if (a16)
  {
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_1C3769830;
    id v69 = a16;
    id v70 = objc_msgSend(v69, sel_heightAnchor);
    id v71 = objc_msgSend(v70, sel_constraintEqualToConstant_, 75.0);

    LODWORD(v196) = 1148846080;
    LODWORD(v194) = 1065353216;
    OUTLINED_FUNCTION_27_55();
    static _UIKitNumericRawRepresentable.- infix(_:_:)();
    LODWORD(v72) = v197;
    objc_msgSend(v71, sel_setPriority_, v72);
    *(void *)(v68 + 32) = v71;
    *(void *)&long long v197 = v68;
    specialized Array._endMutation()();
    Class v73 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v184, sel_activateConstraints_, v73);

    id v67 = v172;
  }
  char v74 = *(void **)&v43[v165];
  *(void *)&v43[v165] = v161;
  id v75 = v161;

  char v76 = *(void **)&v43[v167];
  *(void *)&v43[v167] = v162;
  id v77 = v162;

  char v78 = *(void **)&v43[v169];
  *(void *)&v43[v169] = v62;
  id v79 = v62;

  *(void *)&v43[OBJC_IVAR___CNKFaceTimeConstraintsController_bannerDodgingLayoutGuide] = v67;
  uint64_t v178 = v43;
  long long v166 = v75;
  long long v168 = v77;
  uint64_t v170 = v79;
  if (v173)
  {
    id v80 = v67;
    uint64_t result = (char *)objc_msgSend(a3, sel_view);
    if (!result)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v174 = result;
    LOBYTE(v197) = v192;
    LOBYTE(v196) = v185;
    if (a32) {
      uint64_t v158 = (char **)objc_msgSend(a32, sel_view);
    }
    else {
      uint64_t v158 = 0;
    }
    LOBYTE(v194) = v186;
    LOBYTE(v193) = v189;
    uint64_t v164 = type metadata accessor for SmallMultiwayControllerLayout();
    swift_allocObject();
    id v84 = a18;
    id v157 = a11;
    id v156 = a7;
    id v85 = a16;
    id v153 = v80;
    id v86 = a34;
    uint64_t v152 = a30;
    id v87 = a23;
    id v88 = a22;
    id v89 = a21;
    id v90 = a17;
    uint64_t v150 = a13;
    id v148 = v180;
    id v91 = a8;
    id v146 = a5;
    id v144 = v190;
    id v92 = a27;
    id v93 = a28;
    unint64_t v94 = SmallMultiwayControllerLayout.init(containingView:participantListView:participantListState:gridView:participantGridState:controlsViewController:inCallControlsState:inCallBannerHostViewController:callControlsViewController:inCallBannerControlsAreaLayoutGuide:inCallBannerDodgingLayoutGuide:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:)(v144, v174, v183, v146, v187[0], v156, a10, v157, a8, (uint64_t)a9, v148, v153, (unsigned __int8 *)&v197, v150, a14, a15, a16, (uint64_t)a17, a18,
            a21,
            a22,
            a23,
            v92,
            a28,
            v152,
            (unsigned __int8 *)&v196,
            v158,
            (unsigned __int8 *)&v194,
            a34,
            (unsigned __int8 *)&v193);
    uint64_t v199 = &protocol witness table for SmallMultiwayControllerLayout;
    uint64_t v198 = v164;
    *(void *)&long long v197 = v94;
    outlined init with take of Notice(&v197, (uint64_t)&v43[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout]);
  }
  else
  {
    id v175 = v67;
    uint64_t result = (char *)objc_msgSend(a3, sel_view);
    if (!result)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v82 = result;
    uint64_t result = (char *)objc_msgSend(a7, sel_view);
    id v163 = result;
    if (!result)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    uint64_t result = (char *)objc_msgSend(a11, sel_view);
    if (!result)
    {
LABEL_37:
      __break(1u);
      return result;
    }
    uint64_t v83 = result;
    LOBYTE(v197) = v192;
    id v155 = objc_msgSend(a18, sel_view);
    if (a32) {
      id v143 = objc_msgSend(a32, sel_view);
    }
    else {
      id v143 = 0;
    }
    uint64_t v154 = type metadata accessor for LargeMultiwayControllerLayout();
    swift_allocObject();
    id v95 = a8;
    id v151 = a5;
    id v149 = v171;
    id v147 = v190;
    id v96 = a27;
    id v97 = a16;
    id v176 = v175;
    id v98 = a34;
    id v145 = a30;
    id v99 = a29;
    id v100 = a23;
    id v101 = a22;
    id v102 = a21;
    id v103 = a17;
    uint64_t v104 = LargeMultiwayControllerLayout.init(containingView:participantListView:participantListState:rosterCellLayoutGuide:gridView:participantGridState:controlsView:controlsState:callControlsViewController:bannerView:bannerState:bannerLayoutGuide:bannerDodgingLayoutGuide:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsView:effectsBrowserView:effectsControlsView:deviceOrientation:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:topCornerButtonsStackView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v147, v82, v183, v149, v151, v187[0], v163, a10, a8, a9, v83, (char *)&v197, v180, v176, a13, a14, (uint64_t)a15, a17, v155,
             a16,
             a26,
             a21,
             a22,
             a23,
             a27,
             a29,
             v145,
             (uint64_t)&v196,
             v143,
             (uint64_t)&v194,
             a34,
             (uint64_t)&v193,
             a36 & 1);
    uint64_t v199 = &protocol witness table for LargeMultiwayControllerLayout;
    uint64_t v198 = v154;
    *(void *)&long long v197 = v104;
    outlined init with take of Notice(&v197, (uint64_t)&v43[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout]);
  }
  uint64_t v177 = OUTLINED_FUNCTION_9_4();
  swift_unknownObjectWeakInit();
  uint64_t v105 = OUTLINED_FUNCTION_9_4();
  swift_unknownObjectWeakInit();
  uint64_t v106 = OUTLINED_FUNCTION_9_4();
  swift_unknownObjectWeakInit();
  uint64_t v107 = OUTLINED_FUNCTION_9_4();
  swift_unknownObjectWeakInit();
  uint64_t v108 = OUTLINED_FUNCTION_9_4();
  swift_unknownObjectWeakInit();
  uint64_t v109 = OUTLINED_FUNCTION_9_4();
  swift_unknownObjectWeakInit();
  uint64_t v110 = OUTLINED_FUNCTION_9_4();
  swift_unknownObjectWeakInit();
  uint64_t v111 = swift_allocObject();
  *(void *)(v111 + 16) = a24;
  *(void *)(v111 + 24) = a25;
  uint64_t v112 = swift_allocObject();
  *(void *)(v112 + 16) = a24;
  *(void *)(v112 + 24) = a25;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a24);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a24);
  uint64_t v196 = Dictionary.init(dictionaryLiteral:)();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  specialized static MultiwayViewConstraintsController.forEachOverallLayoutState(_:)((uint64_t)ObjectType, (uint64_t)partial apply for closure #8 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v111, (uint64_t)partial apply for closure #9 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v112, (uint64_t)partial apply for closure #1 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v177, (uint64_t)partial apply for closure #2 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v105, (uint64_t)partial apply for closure #3 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v106, (uint64_t)partial apply for closure #4 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v107, (uint64_t)partial apply for closure #5 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v108, (uint64_t)partial apply for closure #6 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v109, (uint64_t)partial apply for closure #7 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v110);
  uint64_t v113 = v196;
  OUTLINED_FUNCTION_11_0();
  *id v160 = v113;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v114 = 0x100000000;
  if (!v186) {
    uint64_t v114 = 0;
  }
  uint64_t v115 = 0x10000000000;
  if (!v189) {
    uint64_t v115 = 0;
  }
  uint64_t v116 = 0x1000000000000;
  if ((a36 & 1) == 0) {
    uint64_t v116 = 0;
  }
  uint64_t result = (char *)specialized Dictionary.subscript.getter(v183, a10, v192 & 0xFFFFFFFFFFFF00FFLL | ((unint64_t)a14 << 8) | (*(void *)v187 << 16) | (v185 << 24) | v114 | v115 | v116, v113);
  if (!result)
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v117 = *((void *)result + 2);
  if (v117)
  {
    unint64_t v118 = result + 40;
    do
    {
      int8x16_t v119 = (void (*)(uint64_t))*((void *)v118 - 1);
      uint64_t v120 = swift_retain();
      v119(v120);
      swift_release();
      v118 += 16;
      --v117;
    }
    while (v117);
  }
  swift_bridgeObjectRelease();
  v178[OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState] = v183;
  *(void *)&v178[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState] = a10;
  v178[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState] = v192;
  v178[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState] = a14;
  v178[OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState] = v187[0];
  v178[OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState] = a20 & 1;
  outlined init with take of AspectRatio((uint64_t)a15, (uint64_t)&v178[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio]);
  v178[OBJC_IVAR___CNKFaceTimeConstraintsController_shutterButtonState] = 0;
  v178[OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState] = v185;
  v178[OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState] = v186;
  v178[OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState] = v189;
  v178[OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive] = a36 & 1;

  if (one-time initialization token for logger != -1) {
    swift_once();
  }
  uint64_t v121 = type metadata accessor for Logger();
  __swift_project_value_buffer(v121, (uint64_t)logger);
  int8x16_t v122 = Logger.logObject.getter();
  os_log_type_t v123 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v122, v123))
  {
    uint64_t v124 = swift_slowAlloc();
    uint64_t v194 = swift_slowAlloc();
    *(_DWORD *)uint64_t v124 = 136316418;
    LOBYTE(v193) = v183;
    uint64_t v125 = String.init<A>(reflecting:)();
    uint64_t v193 = OUTLINED_FUNCTION_12_81(v125, v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v124 + 12) = 2080;
    uint64_t v193 = a10;
    uint64_t v127 = OUTLINED_FUNCTION_15_82();
    unint64_t v129 = OUTLINED_FUNCTION_12_81(v127, v128);
    OUTLINED_FUNCTION_7_113(v129);
    swift_bridgeObjectRelease();
    *(_WORD *)(v124 + 22) = 2080;
    LOBYTE(v193) = v192;
    uint64_t v130 = OUTLINED_FUNCTION_15_82();
    unint64_t v132 = OUTLINED_FUNCTION_12_81(v130, v131);
    OUTLINED_FUNCTION_7_113(v132);
    swift_bridgeObjectRelease();
    *(_WORD *)(v124 + 32) = 2080;
    LOBYTE(v193) = a14;
    uint64_t v133 = OUTLINED_FUNCTION_15_82();
    unint64_t v135 = OUTLINED_FUNCTION_12_81(v133, v134);
    OUTLINED_FUNCTION_7_113(v135);
    swift_bridgeObjectRelease();
    *(_WORD *)(v124 + 42) = 2080;
    LOBYTE(v193) = v187[0];
    uint64_t v136 = OUTLINED_FUNCTION_15_82();
    unint64_t v138 = OUTLINED_FUNCTION_12_81(v136, v137);
    OUTLINED_FUNCTION_7_113(v138);
    swift_bridgeObjectRelease();
    *(_WORD *)(v124 + 52) = 2080;
    LOBYTE(v193) = a20 & 1;
    uint64_t v139 = OUTLINED_FUNCTION_15_82();
    unint64_t v141 = OUTLINED_FUNCTION_12_81(v139, v140);
    OUTLINED_FUNCTION_7_113(v141);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v122, v123, "Initialized ConstraintsController with listState: %s controlsState: %s bannerState: %s localParticipantState: %s gridState: %s floatingControlsState: %s", (uint8_t *)v124, 0x3Eu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  v195.receiver = v178;
  v195.super_class = ObjectType;
  id v142 = objc_msgSendSuper2(&v195, sel_init);
  MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)();
  MultiwayViewConstraintsController.updateMostRecentLocalParticipantCorner()();

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a24);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return (char *)v142;
}

void closure #1 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = ParticipantListViewController.collectionView.getter();

    if (v6)
    {
      objc_msgSend(v6, sel_setHidden_, a2 & 1);
    }
  }
}

void closure #3 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = (void *)MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_setHidden_, a2 & 1);
  }
}

void closure #5 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_topInset);
    swift_beginAccess();
    *uint64_t v4 = 0x4043800000000000;
    InCallControlsViewController.topInset.didset();
  }
}

void closure #6 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_topInset);
    swift_beginAccess();
    *uint64_t v4 = 0x4058400000000000;
    InCallControlsViewController.topInset.didset();
  }
}

void closure #7 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_topInset);
    swift_beginAccess();
    *uint64_t v4 = 0x405C800000000000;
    InCallControlsViewController.topInset.didset();
  }
}

uint64_t closure #10 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v24 = *a1;
  unint64_t v25 = *((void *)a1 + 1);
  uint64_t v84 = a1[19];
  int v81 = a1[20];
  int v82 = a1[21];
  int v83 = a1[22];
  int v78 = a1[18];
  uint64_t v79 = a1[17];
  uint64_t v80 = a1[16];
  if (v78)
  {
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a2;
    *(void *)(v26 + 24) = a3;
    swift_retain();
    swift_retain();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v28 = v27;
    unint64_t v29 = *(void *)(v27 + 16);
    if (v29 >= *(void *)(v27 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v28 = v69;
    }
    uint64_t v30 = v24;
    *(void *)(v28 + 16) = v29 + 1;
    uint64_t v31 = v28 + 16 * v29;
    uint64_t v32 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else if ((a1[17] & 0x80) != 0 || !a1[16])
  {
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a2;
    *(void *)(v26 + 24) = a3;
    swift_retain();
    swift_retain();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v28 = v37;
    unint64_t v38 = *(void *)(v37 + 16);
    uint64_t v30 = v24;
    if (v38 >= *(void *)(v37 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v28 = v76;
    }
    *(void *)(v28 + 16) = v38 + 1;
    uint64_t v31 = v28 + 16 * v38;
    uint64_t v32 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a4;
    *(void *)(v26 + 24) = a5;
    swift_retain();
    swift_retain();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v28 = v35;
    unint64_t v36 = *(void *)(v35 + 16);
    if (v36 >= *(void *)(v35 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v28 = v77;
    }
    uint64_t v30 = v24;
    *(void *)(v28 + 16) = v36 + 1;
    uint64_t v31 = v28 + 16 * v36;
    uint64_t v32 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  *(void *)(v31 + 32) = v32;
  *(void *)(v31 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v26;
  swift_release();
  if (v30)
  {
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = a8;
    *(void *)(v39 + 24) = a9;
    unint64_t v40 = *(void *)(v28 + 16);
    unint64_t v41 = *(void *)(v28 + 24);
    swift_retain();
    swift_retain();
    if (v40 >= v41 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v28 = v70;
    }
    *(void *)(v28 + 16) = v40 + 1;
    uint64_t v42 = v28 + 16 * v40;
  }
  else
  {
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = a6;
    *(void *)(v39 + 24) = a7;
    unint64_t v43 = *(void *)(v28 + 16);
    unint64_t v44 = *(void *)(v28 + 24);
    swift_retain();
    swift_retain();
    if (v43 >= v44 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v28 = v71;
    }
    *(void *)(v28 + 16) = v43 + 1;
    uint64_t v42 = v28 + 16 * v43;
  }
  *(void *)(v42 + 32) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  *(void *)(v42 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v39;
  swift_release();
  if (v84)
  {
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = a12;
    *(void *)(v45 + 24) = a13;
    unint64_t v46 = *(void *)(v28 + 16);
    unint64_t v47 = *(void *)(v28 + 24);
    swift_retain();
    swift_retain();
    if (v46 >= v47 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v28 = v68;
    }
    *(void *)(v28 + 16) = v46 + 1;
    uint64_t v48 = v28 + 16 * v46;
  }
  else
  {
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = a10;
    *(void *)(v45 + 24) = a11;
    unint64_t v49 = *(void *)(v28 + 16);
    unint64_t v50 = *(void *)(v28 + 24);
    swift_retain();
    swift_retain();
    if (v49 >= v50 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v28 = v73;
    }
    *(void *)(v28 + 16) = v49 + 1;
    uint64_t v48 = v28 + 16 * v49;
  }
  *(void *)(v48 + 32) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  *(void *)(v48 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v45;
  swift_release();
  if (v25 > 6)
  {
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  else
  {
    if (((1 << v25) & 0x13) != 0)
    {
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = a14;
      *(void *)(v51 + 24) = a15;
      unint64_t v58 = *(void *)(v28 + 16);
      unint64_t v59 = *(void *)(v28 + 24);
      swift_retain();
      swift_retain();
      if (v58 >= v59 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v28 = v72;
      }
      int v55 = v82;
      int v54 = v83;
      int v56 = v81;
      *(void *)(v28 + 16) = v58 + 1;
      uint64_t v57 = v28 + 16 * v58;
    }
    else if (((1 << v25) & 0x24) != 0)
    {
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = a16;
      *(void *)(v51 + 24) = a17;
      unint64_t v52 = *(void *)(v28 + 16);
      unint64_t v53 = *(void *)(v28 + 24);
      swift_retain();
      swift_retain();
      if (v52 >= v53 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v28 = v74;
      }
      int v55 = v82;
      int v54 = v83;
      int v56 = v81;
      *(void *)(v28 + 16) = v52 + 1;
      uint64_t v57 = v28 + 16 * v52;
    }
    else
    {
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = a18;
      *(void *)(v51 + 24) = a19;
      unint64_t v60 = *(void *)(v28 + 16);
      unint64_t v61 = *(void *)(v28 + 24);
      swift_retain();
      swift_retain();
      if (v60 >= v61 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v28 = v75;
      }
      int v55 = v82;
      int v54 = v83;
      int v56 = v81;
      *(void *)(v28 + 16) = v60 + 1;
      uint64_t v57 = v28 + 16 * v60;
    }
    *(void *)(v57 + 32) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
    *(void *)(v57 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v51;
    swift_release();
    uint64_t v62 = 0x10000;
    if (!v78) {
      uint64_t v62 = 0;
    }
    uint64_t v63 = v80 | (v79 << 8) | v62 | (v84 << 24);
    uint64_t v64 = 0x100000000;
    if (!v56) {
      uint64_t v64 = 0;
    }
    uint64_t v65 = 0x10000000000;
    if (!v55) {
      uint64_t v65 = 0;
    }
    uint64_t v66 = 0x1000000000000;
    if (!v54) {
      uint64_t v66 = 0;
    }
    return specialized Dictionary._Variant.setValue(_:forKey:)(v28, v30, v25, v63 | v64 | v65 | v66);
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  unint64_t v3 = *(void *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v2);
  uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t))(v3 + 152))(v2, v3);
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v61 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v6;
  uint64_t v63 = v7;
  unsigned __int8 v8 = (uint64_t *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewStateEffects);
  swift_beginAccess();
  uint64_t v62 = *v8 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(*v8 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(*v8 + 64);
  int64_t v64 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v67 = *v8;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v66 = v8;
  if (!v11) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v13 = __clz(__rbit64(v11));
  uint64_t v14 = (v11 - 1) & v11;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v12 << 6))
  {
    uint64_t v19 = *(void *)(v67 + 48) + 24 * i;
    char v77 = *(unsigned char *)v19;
    unint64_t v80 = *(void *)(v19 + 8);
    uint64_t v78 = *(unsigned __int8 *)(v19 + 16);
    int v20 = *(char *)(v19 + 17);
    int v21 = *(unsigned __int8 *)(v19 + 18);
    uint64_t v79 = *(unsigned __int8 *)(v19 + 19);
    int v76 = *(unsigned __int8 *)(v19 + 20);
    int v22 = *(unsigned __int8 *)(v19 + 21);
    int v23 = *(unsigned __int8 *)(v19 + 22);
    uint64_t v24 = *(void *)(*(void *)(v67 + 56) + 8 * i);
    unint64_t v68 = v14;
    int64_t v69 = v12;
    if ((v20 & 0x80000000) == 0)
    {
LABEL_21:
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = partial apply for closure #2 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:);
      *(void *)(v25 + 24) = v63;
      swift_bridgeObjectRetain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v24 = v55;
      }
      unint64_t v26 = *(void *)(v24 + 16);
      if (v26 >= *(void *)(v24 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v24 = v56;
      }
      *(void *)(v24 + 16) = v26 + 1;
      uint64_t v70 = v24;
      uint64_t v27 = v24 + 16 * v26;
      goto LABEL_41;
    }
    if (v20 == -128)
    {
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = partial apply for closure #1 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:);
      *(void *)(v25 + 24) = v61;
      swift_bridgeObjectRetain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v24 = v57;
      }
      unint64_t v28 = *(void *)(v24 + 16);
      if (v28 >= *(void *)(v24 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v24 = v58;
      }
      *(void *)(v24 + 16) = v28 + 1;
      uint64_t v70 = v24;
      uint64_t v27 = v24 + 16 * v28;
    }
    else
    {
      if (v80 > 6 || ((1 << v80) & 0x6C) == 0) {
        goto LABEL_21;
      }
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = partial apply for closure #1 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:);
      *(void *)(v25 + 24) = v61;
      swift_bridgeObjectRetain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v24 = v59;
      }
      unint64_t v30 = *(void *)(v24 + 16);
      if (v30 >= *(void *)(v24 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v24 = v60;
      }
      *(void *)(v24 + 16) = v30 + 1;
      uint64_t v70 = v24;
      uint64_t v27 = v24 + 16 * v30;
    }
LABEL_41:
    *(void *)(v27 + 32) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
    *(void *)(v27 + 4ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v25;
    char v71 = v20;
    uint64_t v31 = v20;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *v8;
    int v81 = (void *)*v8;
    uint64_t *v8 = 0x8000000000000000;
    unint64_t v34 = v3 & 0xFF00000000000000;
    char v72 = v21;
    char v73 = v22;
    if (v21) {
      uint64_t v35 = 0x10000;
    }
    else {
      uint64_t v35 = 0;
    }
    if (v76) {
      uint64_t v36 = 0x100000000;
    }
    else {
      uint64_t v36 = 0;
    }
    if (v22) {
      uint64_t v37 = 0x10000000000;
    }
    else {
      uint64_t v37 = 0;
    }
    char v74 = v23;
    if (v23) {
      uint64_t v38 = 0x1000000000000;
    }
    else {
      uint64_t v38 = 0;
    }
    unint64_t v75 = (v34 | v78) & 0xFFFFFFFF00FF00FFLL | (unsigned __int16)(v31 << 8) | v35 & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v79 << 24) | v36 | v37 | v38;
    unint64_t v39 = specialized __RawDictionaryStorage.find<A>(_:)(v77, v80, v75);
    uint64_t v41 = *(void *)(v33 + 16);
    BOOL v42 = (v40 & 1) == 0;
    Swift::Int v43 = v41 + v42;
    if (__OFADD__(v41, v42))
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    unint64_t v44 = v39;
    char v45 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<MultiwayViewConstraintsController.OverallLayoutState, [()]>);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v43))
    {
      unint64_t v65 = v65 & 0xFF00000000000000 | v78 | (v31 << 8) | v35 | (v79 << 24) | v36 | v37 | v38;
      unint64_t v46 = specialized __RawDictionaryStorage.find<A>(_:)(v77, v80, v65);
      char v48 = v73;
      if ((v45 & 1) != (v47 & 1)) {
        goto LABEL_70;
      }
      unint64_t v44 = v46;
      unsigned __int8 v8 = v66;
      unint64_t v3 = v75;
      char v49 = v74;
    }
    else
    {
      unsigned __int8 v8 = v66;
      unint64_t v3 = v75;
      char v48 = v73;
      char v49 = v74;
    }
    if (v45)
    {
      uint64_t v50 = v81[7];
      swift_bridgeObjectRelease();
      *(void *)(v50 + 8 * v44) = v70;
    }
    else
    {
      v81[(v44 >> 6) + 8] |= 1 << v44;
      uint64_t v51 = v81[6] + 24 * v44;
      *(unsigned char *)uint64_t v51 = v77;
      *(void *)(v51 + 8) = v80;
      *(unsigned char *)(v51 + 16) = v78;
      *(unsigned char *)(v51 + 17) = v71;
      *(unsigned char *)(v51 + 18) = v72;
      *(unsigned char *)(v51 + 19) = v79;
      *(unsigned char *)(v51 + 2ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = v76;
      *(unsigned char *)(v51 + 21) = v48;
      *(unsigned char *)(v51 + 22) = v49;
      *(void *)(v81[7] + 8 * v44) = v70;
      uint64_t v52 = v81[2];
      BOOL v53 = __OFADD__(v52, 1);
      uint64_t v54 = v52 + 1;
      if (v53) {
        goto LABEL_67;
      }
      v81[2] = v54;
    }
    uint64_t *v8 = (uint64_t)v81;
    swift_bridgeObjectRelease();
    swift_endAccess();
    unint64_t v11 = v68;
    int64_t v12 = v69;
    if (v68) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_68;
    }
    if (v16 >= v64) {
      goto LABEL_64;
    }
    unint64_t v17 = *(void *)(v62 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v64) {
        goto LABEL_64;
      }
      unint64_t v17 = *(void *)(v62 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v64) {
          goto LABEL_64;
        }
        unint64_t v17 = *(void *)(v62 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_19:
    uint64_t v14 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v64)
  {
LABEL_64:
    swift_release();
    swift_release();
    return swift_release();
  }
  unint64_t v17 = *(void *)(v62 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v64) {
      goto LABEL_64;
    }
    unint64_t v17 = *(void *)(v62 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_19;
    }
  }
LABEL_69:
  __break(1u);
LABEL_70:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t MultiwayViewConstraintsController.updateMostRecentLocalParticipantCorner()()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  uint64_t result = *v1;
  if (result >> 6)
  {
    if (result >> 6 != 1) {
      return result;
    }
    LOBYTE(result) = result & 0x3F;
  }
  return MultiwayViewConstraintsController.localParticipantState.setter(result, (uint64_t)&OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner, (uint64_t (*)(uint64_t))MultiwayViewConstraintsController.mostRecentLocalParticipantCorner.didset);
}

Swift::Void __swiftcall MultiwayViewConstraintsController.updateLocalPreview(with:)(CGSize with)
{
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_1_157(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  uint64_t v1 = OUTLINED_FUNCTION_92_0();
  v2(v1);
}

uint64_t MultiwayViewConstraintsController.didAddEffectsBrowser()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (char *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  char v3 = *v2;
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  char v7 = *v6;
  unsigned __int8 v8 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  char v9 = *v8;
  uint64_t v10 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  char v11 = *v10;
  int64_t v12 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  char v13 = *v12;
  uint64_t v14 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  char v15 = *v14;
  int64_t v16 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  char v17 = *v16;
  int64_t v18 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  char v22 = *v18;
  uint64_t v20 = *(void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  uint64_t v21 = *(void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v21);
  v23[0] = v3;
  uint64_t v24 = v5;
  char v25 = v7;
  char v26 = v9;
  char v27 = v11;
  char v28 = v13;
  char v29 = v15;
  char v30 = v17;
  char v31 = v22;
  (*(void (**)(unsigned char *, uint64_t))(v20 + 64))(v23, v21);
  v23[0] = v3;
  uint64_t v24 = v5;
  char v25 = v7;
  char v26 = v9;
  char v27 = v11;
  char v28 = v13;
  char v29 = v15;
  char v30 = v17;
  char v31 = v22;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v23);
}

Swift::Void __swiftcall MultiwayViewConstraintsController.update(remoteParticipantAspectRatio:)(CGSize remoteParticipantAspectRatio)
{
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_1_157(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  uint64_t v1 = OUTLINED_FUNCTION_92_0();
  v2(v1);
}

void closure #1 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x1C8776240](v1);
  if (v2)
  {
    char v3 = v2;
    objc_msgSend(v2, sel_setAlpha_, 1.0);
  }
}

void closure #2 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + 16;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1C8776240](v2);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_setAlpha_, 0.0);
  }
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v3);
  if (v6)
  {
    char v7 = (void *)v6;
    self;
    unsigned __int8 v8 = (void *)swift_dynamicCastObjCClass();
    if (v8) {
      objc_msgSend(v8, sel_hideBrowserAnimated_completion_, 1, 0);
    }
  }
}

uint64_t MultiwayViewConstraintsController.applyEffects(for:)(uint64_t a1)
{
  char v2 = *(unsigned char *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 17);
  int v6 = *(unsigned __int8 *)(a1 + 18);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 19);
  int v8 = *(unsigned __int8 *)(a1 + 20);
  int v9 = *(unsigned __int8 *)(a1 + 21);
  int v10 = *(unsigned __int8 *)(a1 + 22);
  char v11 = (uint64_t *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewStateEffects);
  swift_beginAccess();
  uint64_t v12 = *v11;
  if (!*(void *)(v12 + 16)) {
    return swift_endAccess();
  }
  uint64_t v13 = 0x10000;
  if (!v6) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v4 | (v5 << 8) | v13 | (v7 << 24);
  uint64_t v15 = 0x100000000;
  if (!v8) {
    uint64_t v15 = 0;
  }
  uint64_t v16 = 0x10000000000;
  if (!v9) {
    uint64_t v16 = 0;
  }
  uint64_t v17 = 0x1000000000000;
  if (!v10) {
    uint64_t v17 = 0;
  }
  unint64_t v18 = specialized __RawDictionaryStorage.find<A>(_:)(v2, v3, v14 | v15 | v16 | v17);
  if ((v19 & 1) == 0) {
    return swift_endAccess();
  }
  uint64_t v20 = *(void *)(*(void *)(v12 + 56) + 8 * v18);
  uint64_t result = swift_endAccess();
  uint64_t v22 = *(void *)(v20 + 16);
  if (v22)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = v20 + 40;
    do
    {
      uint64_t v24 = *(void (**)(uint64_t))(v23 - 8);
      uint64_t v25 = swift_retain();
      v24(v25);
      swift_release();
      v23 += 16;
      --v22;
    }
    while (v22);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id MultiwayViewConstraintsController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MultiwayViewConstraintsController.init()()
{
}

id MultiwayViewConstraintsController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void InCallBannerState.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance InCallBannerState()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance InCallBannerState()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

void ReactionsState.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance ReactionsState()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable._rawHashValue(seed:) in conformance ReactionsState(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

uint64_t sub_1C375505C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  closure #1 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0, 1);
}

void partial apply for closure #2 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  closure #1 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0, 0);
}

void partial apply for closure #3 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  closure #3 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0, 1);
}

void partial apply for closure #4 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  closure #3 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0, 0);
}

void partial apply for closure #5 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  closure #5 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0);
}

void partial apply for closure #6 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  closure #6 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0);
}

void partial apply for closure #7 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  closure #7 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0);
}

uint64_t partial apply for closure #8 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  return partial apply for closure #1 in closure #2 in RecentsListViewController.presentReportJunkAlert(_:completion:)(1);
}

uint64_t partial apply for closure #9 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  return partial apply for closure #1 in closure #2 in RecentsListViewController.presentReportJunkAlert(_:completion:)(0);
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in InCallBannerState()
{
  return lazy protocol witness table accessor for type [UIWindow] and conformance [A](&lazy protocol witness table cache variable for type [InCallBannerState] and conformance [A], &demangling cache variable for type metadata for [InCallBannerState]);
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ReactionsState()
{
  return lazy protocol witness table accessor for type [UIWindow] and conformance [A](&lazy protocol witness table cache variable for type [ReactionsState] and conformance [A], &demangling cache variable for type metadata for [ReactionsState]);
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ReactionPickerTipState()
{
  return lazy protocol witness table accessor for type [UIWindow] and conformance [A](&lazy protocol witness table cache variable for type [ReactionPickerTipState] and conformance [A], &demangling cache variable for type metadata for [ReactionPickerTipState]);
}

unint64_t lazy protocol witness table accessor for type CaptionsLayoutState and conformance CaptionsLayoutState()
{
  unint64_t result = lazy protocol witness table cache variable for type CaptionsLayoutState and conformance CaptionsLayoutState;
  if (!lazy protocol witness table cache variable for type CaptionsLayoutState and conformance CaptionsLayoutState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CaptionsLayoutState and conformance CaptionsLayoutState);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in CaptionsLayoutState()
{
  return lazy protocol witness table accessor for type [UIWindow] and conformance [A](&lazy protocol witness table cache variable for type [CaptionsLayoutState] and conformance [A], &demangling cache variable for type metadata for [CaptionsLayoutState]);
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.ParticipantListState and conformance MultiwayViewConstraintsController.ParticipantListState()
{
  unint64_t result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ParticipantListState and conformance MultiwayViewConstraintsController.ParticipantListState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ParticipantListState and conformance MultiwayViewConstraintsController.ParticipantListState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ParticipantListState and conformance MultiwayViewConstraintsController.ParticipantListState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.MultiwayCorner and conformance MultiwayViewConstraintsController.MultiwayCorner()
{
  unint64_t result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.MultiwayCorner and conformance MultiwayViewConstraintsController.MultiwayCorner;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.MultiwayCorner and conformance MultiwayViewConstraintsController.MultiwayCorner)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.MultiwayCorner and conformance MultiwayViewConstraintsController.MultiwayCorner);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in MultiwayViewConstraintsController.MultiwayCorner()
{
  return lazy protocol witness table accessor for type [UIWindow] and conformance [A](&lazy protocol witness table cache variable for type [MultiwayViewConstraintsController.MultiwayCorner] and conformance [A], &demangling cache variable for type metadata for [MultiwayViewConstraintsController.MultiwayCorner]);
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.AccessibilityLocalParticipantState and conformance MultiwayViewConstraintsController.AccessibilityLocalParticipantState()
{
  unint64_t result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.AccessibilityLocalParticipantState and conformance MultiwayViewConstraintsController.AccessibilityLocalParticipantState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.AccessibilityLocalParticipantState and conformance MultiwayViewConstraintsController.AccessibilityLocalParticipantState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.AccessibilityLocalParticipantState and conformance MultiwayViewConstraintsController.AccessibilityLocalParticipantState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.LocalParticipantState and conformance MultiwayViewConstraintsController.LocalParticipantState()
{
  unint64_t result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.LocalParticipantState and conformance MultiwayViewConstraintsController.LocalParticipantState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.LocalParticipantState and conformance MultiwayViewConstraintsController.LocalParticipantState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.LocalParticipantState and conformance MultiwayViewConstraintsController.LocalParticipantState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.ShutterButtonState and conformance MultiwayViewConstraintsController.ShutterButtonState()
{
  unint64_t result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ShutterButtonState and conformance MultiwayViewConstraintsController.ShutterButtonState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ShutterButtonState and conformance MultiwayViewConstraintsController.ShutterButtonState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ShutterButtonState and conformance MultiwayViewConstraintsController.ShutterButtonState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.ParticipantGridState and conformance MultiwayViewConstraintsController.ParticipantGridState()
{
  unint64_t result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ParticipantGridState and conformance MultiwayViewConstraintsController.ParticipantGridState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ParticipantGridState and conformance MultiwayViewConstraintsController.ParticipantGridState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ParticipantGridState and conformance MultiwayViewConstraintsController.ParticipantGridState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.FloatingControlsState and conformance MultiwayViewConstraintsController.FloatingControlsState()
{
  unint64_t result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.FloatingControlsState and conformance MultiwayViewConstraintsController.FloatingControlsState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.FloatingControlsState and conformance MultiwayViewConstraintsController.FloatingControlsState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.FloatingControlsState and conformance MultiwayViewConstraintsController.FloatingControlsState);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in MultiwayViewConstraintsController.FloatingControlsState()
{
  return lazy protocol witness table accessor for type [UIWindow] and conformance [A](&lazy protocol witness table cache variable for type [MultiwayViewConstraintsController.FloatingControlsState] and conformance [A], &demangling cache variable for type metadata for [MultiwayViewConstraintsController.FloatingControlsState]);
}

unint64_t lazy protocol witness table accessor for type ReactionsState and conformance ReactionsState()
{
  unint64_t result = lazy protocol witness table cache variable for type ReactionsState and conformance ReactionsState;
  if (!lazy protocol witness table cache variable for type ReactionsState and conformance ReactionsState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionsState and conformance ReactionsState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ReactionPickerTipState and conformance ReactionPickerTipState()
{
  unint64_t result = lazy protocol witness table cache variable for type ReactionPickerTipState and conformance ReactionPickerTipState;
  if (!lazy protocol witness table cache variable for type ReactionPickerTipState and conformance ReactionPickerTipState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerTipState and conformance ReactionPickerTipState);
  }
  return result;
}

uint64_t sub_1C3755648(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return MultiwayViewConstraintsController.shutterButtonState.setter(v1);
}

uint64_t sub_1C3755680(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return MultiwayViewConstraintsController.isLocalReactionActive.setter(v1);
}

uint64_t sub_1C37556B0(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return MultiwayViewConstraintsController.participantListState.setter(v1);
}

uint64_t sub_1C37556D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MultiwayViewConstraintsController.accessibilityLocalParticipantState.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C3755700(unint64_t *a1)
{
  return MultiwayViewConstraintsController.accessibilityLocalParticipantState.setter(*a1);
}

uint64_t sub_1C375572C(char *a1)
{
  return MultiwayViewConstraintsController.localParticipantState.setter(*a1, (uint64_t)&OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner, (uint64_t (*)(uint64_t))MultiwayViewConstraintsController.mostRecentLocalParticipantCorner.didset);
}

uint64_t sub_1C3755774(char *a1)
{
  return MultiwayViewConstraintsController.localParticipantState.setter(*a1);
}

uint64_t sub_1C37557A8(uint64_t *a1)
{
  return MultiwayViewConstraintsController.inCallControlsState.setter(*a1);
}

uint64_t sub_1C37557DC(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return MultiwayViewConstraintsController.participantGridState.setter(v1);
}

uint64_t sub_1C3755804(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return MultiwayViewConstraintsController.floatingControlsState.setter(v1);
}

void type metadata accessor for InCallControlsState()
{
}

void type metadata accessor for InCallBannerState()
{
}

void type metadata accessor for ReactionsState()
{
}

void type metadata accessor for ReactionPickerTipState()
{
}

unsigned char *storeEnumTagSinglePayload for InCallBannerState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C375593CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for CaptionsLayoutState()
{
}

uint64_t type metadata accessor for MultiwayViewConstraintsController()
{
  return self;
}

uint64_t method lookup function for MultiwayViewConstraintsController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MultiwayViewConstraintsController);
}

uint64_t dispatch thunk of MultiwayViewConstraintsController.__allocating_init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, void))(v6 + 264))(a1, a2, a3, a4 & 1, a5, a6 & 1);
}

void type metadata accessor for MultiwayViewConstraintsController.ParticipantListState()
{
}

unsigned char *storeEnumTagSinglePayload for MultiwayViewConstraintsController.MultiwayCorner(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3755B4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for MultiwayViewConstraintsController.MultiwayCorner()
{
}

void type metadata accessor for MultiwayViewConstraintsController.AccessibilityLocalParticipantState()
{
}

uint64_t getEnumTagSinglePayload for MultiwayViewConstraintsController.LocalParticipantState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x3E)
  {
    if (a2 + 194 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 194) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 195;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v5 >= 0x3D) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *storeEnumTagSinglePayload for MultiwayViewConstraintsController.LocalParticipantState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 194 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 194) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3D)
  {
    unsigned int v6 = ((a2 - 62) >> 8) + 1;
    *uint64_t result = a2 - 62;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3755CF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t getEnumTag for MultiwayViewConstraintsController.LocalParticipantState(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 6;
  }
  else {
    return (v1 & 3u) + 2;
  }
}

unsigned char *destructiveInjectEnumTag for MultiwayViewConstraintsController.LocalParticipantState(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    char v2 = *result & 3 | ((_BYTE)a2 << 6);
  }
  else {
    char v2 = (a2 + 2) & 3 | 0x80;
  }
  *uint64_t result = v2;
  return result;
}

void type metadata accessor for MultiwayViewConstraintsController.LocalParticipantState()
{
}

void type metadata accessor for MultiwayViewConstraintsController.ShutterButtonState()
{
}

void type metadata accessor for MultiwayViewConstraintsController.ParticipantGridState()
{
}

unsigned char *storeEnumTagSinglePayload for ReactionsState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3755E58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for MultiwayViewConstraintsController.FloatingControlsState()
{
}

__n128 __swift_memcpy23_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 15) = *(void *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MultiwayViewConstraintsController.OverallLayoutState(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[23])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = v3 - 2;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiwayViewConstraintsController.OverallLayoutState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 22) = 0;
    *(_WORD *)(result + 2ConversationController.update(presentationContexts:forceUpdate:)(presentationContexts, 0) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 23) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 23) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for MultiwayViewConstraintsController.OverallLayoutState()
{
}

uint64_t sub_1C3755F34()
{
  swift_release();
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)()
{
  closure #1 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)(v0);
}

uint64_t sub_1C3755F6C()
{
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

void partial apply for closure #2 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)()
{
  closure #2 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t ResourceBundleClass.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

objc_class *one-time initialization function for resourceBundle()
{
  type metadata accessor for ResourceBundleClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  __n128 result = (objc_class *)objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  resourceBundle.super.Class isa = result;
  return result;
}

uint64_t one-time initialization function for audioMuteMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.audioMuteMac, 0x756D2D6F69647561, 0xEE0063616D5F6574);
}

uint64_t ImageResource.audioMuteMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for audioMuteMac, (uint64_t)static ImageResource.audioMuteMac);
}

uint64_t static ImageResource.audioMuteMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for audioMuteMac, (uint64_t)static ImageResource.audioMuteMac, a1);
}

uint64_t one-time initialization function for badConnectionLarge(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.badConnectionLarge, 0xD000000000000014, 0x80000001C3790D70);
}

uint64_t ImageResource.badConnectionLarge.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for badConnectionLarge, (uint64_t)static ImageResource.badConnectionLarge);
}

uint64_t static ImageResource.badConnectionLarge.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for badConnectionLarge, (uint64_t)static ImageResource.badConnectionLarge, a1);
}

uint64_t one-time initialization function for badConnectionSmall(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.badConnectionSmall, 0xD000000000000014, 0x80000001C3790D50);
}

uint64_t ImageResource.badConnectionSmall.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for badConnectionSmall, (uint64_t)static ImageResource.badConnectionSmall);
}

uint64_t static ImageResource.badConnectionSmall.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for badConnectionSmall, (uint64_t)static ImageResource.badConnectionSmall, a1);
}

uint64_t one-time initialization function for callRecordingEducationScreen(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.callRecordingEducationScreen, 0xD00000000000001FLL, 0x80000001C3790D90);
}

uint64_t ImageResource.callRecordingEducationScreen.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for callRecordingEducationScreen, (uint64_t)static ImageResource.callRecordingEducationScreen);
}

uint64_t static ImageResource.callRecordingEducationScreen.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for callRecordingEducationScreen, (uint64_t)static ImageResource.callRecordingEducationScreen, a1);
}

uint64_t one-time initialization function for contactGlow(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.contactGlow, 0x5F746361746E6F63, 0xEC000000776F6C67);
}

uint64_t ImageResource.contactGlow.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for contactGlow, (uint64_t)static ImageResource.contactGlow);
}

uint64_t static ImageResource.contactGlow.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for contactGlow, (uint64_t)static ImageResource.contactGlow, a1);
}

uint64_t one-time initialization function for contactSilhouette(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.contactSilhouette, 0xD000000000000012, 0x80000001C3790D20);
}

uint64_t ImageResource.contactSilhouette.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for contactSilhouette, (uint64_t)static ImageResource.contactSilhouette);
}

uint64_t static ImageResource.contactSilhouette.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for contactSilhouette, (uint64_t)static ImageResource.contactSilhouette, a1);
}

uint64_t one-time initialization function for drawerAddParticipantMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerAddParticipantMac, 0xD00000000000001ALL, 0x80000001C37C0A30);
}

uint64_t ImageResource.drawerAddParticipantMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerAddParticipantMac, (uint64_t)static ImageResource.drawerAddParticipantMac);
}

uint64_t static ImageResource.drawerAddParticipantMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerAddParticipantMac, (uint64_t)static ImageResource.drawerAddParticipantMac, a1);
}

uint64_t one-time initialization function for drawerEffects(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerEffects, 0x655F726577617264, 0xEE00737463656666);
}

uint64_t ImageResource.drawerEffects.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerEffects, (uint64_t)static ImageResource.drawerEffects);
}

uint64_t static ImageResource.drawerEffects.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerEffects, (uint64_t)static ImageResource.drawerEffects, a1);
}

uint64_t one-time initialization function for drawerEffectsSelected(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerEffectsSelected, 0xD000000000000017, 0x80000001C3790B00);
}

uint64_t ImageResource.drawerEffectsSelected.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerEffectsSelected, (uint64_t)static ImageResource.drawerEffectsSelected);
}

uint64_t static ImageResource.drawerEffectsSelected.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerEffectsSelected, (uint64_t)static ImageResource.drawerEffectsSelected, a1);
}

uint64_t one-time initialization function for drawerExpand(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerExpand, 0x655F726577617264, 0xED0000646E617078);
}

uint64_t ImageResource.drawerExpand.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerExpand, (uint64_t)static ImageResource.drawerExpand);
}

uint64_t static ImageResource.drawerExpand.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerExpand, (uint64_t)static ImageResource.drawerExpand, a1);
}

uint64_t one-time initialization function for drawerFacetimeIconMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerFacetimeIconMac, 0xD000000000000018, 0x80000001C37C0A10);
}

uint64_t ImageResource.drawerFacetimeIconMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerFacetimeIconMac, (uint64_t)static ImageResource.drawerFacetimeIconMac);
}

uint64_t static ImageResource.drawerFacetimeIconMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerFacetimeIconMac, (uint64_t)static ImageResource.drawerFacetimeIconMac, a1);
}

uint64_t one-time initialization function for drawerGlow(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerGlow, 0x675F726577617264, 0xEB00000000776F6CLL);
}

uint64_t ImageResource.drawerGlow.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerGlow, (uint64_t)static ImageResource.drawerGlow);
}

uint64_t static ImageResource.drawerGlow.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerGlow, (uint64_t)static ImageResource.drawerGlow, a1);
}

uint64_t one-time initialization function for drawerHotdog(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerHotdog, 0x685F726577617264, 0xED0000676F64746FLL);
}

uint64_t ImageResource.drawerHotdog.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerHotdog, (uint64_t)static ImageResource.drawerHotdog);
}

uint64_t static ImageResource.drawerHotdog.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerHotdog, (uint64_t)static ImageResource.drawerHotdog, a1);
}

uint64_t one-time initialization function for drawerJoinVideoCallMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerJoinVideoCallMac, 0xD00000000000001ALL, 0x80000001C37C09F0);
}

uint64_t ImageResource.drawerJoinVideoCallMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerJoinVideoCallMac, (uint64_t)static ImageResource.drawerJoinVideoCallMac);
}

uint64_t static ImageResource.drawerJoinVideoCallMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerJoinVideoCallMac, (uint64_t)static ImageResource.drawerJoinVideoCallMac, a1);
}

uint64_t one-time initialization function for drawerLeaveCallMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerLeaveCallMac, 0xD000000000000015, 0x80000001C37C09D0);
}

uint64_t ImageResource.drawerLeaveCallMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerLeaveCallMac, (uint64_t)static ImageResource.drawerLeaveCallMac);
}

uint64_t static ImageResource.drawerLeaveCallMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerLeaveCallMac, (uint64_t)static ImageResource.drawerLeaveCallMac, a1);
}

uint64_t one-time initialization function for drawerOpenMessagesMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerOpenMessagesMac, 0xD000000000000018, 0x80000001C37C09B0);
}

uint64_t ImageResource.drawerOpenMessagesMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerOpenMessagesMac, (uint64_t)static ImageResource.drawerOpenMessagesMac);
}

uint64_t static ImageResource.drawerOpenMessagesMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerOpenMessagesMac, (uint64_t)static ImageResource.drawerOpenMessagesMac, a1);
}

uint64_t one-time initialization function for drawerRingBackground(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerRingBackground, 0xD000000000000016, 0x80000001C3790B30);
}

uint64_t ImageResource.drawerRingBackground.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerRingBackground, (uint64_t)static ImageResource.drawerRingBackground);
}

uint64_t static ImageResource.drawerRingBackground.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerRingBackground, (uint64_t)static ImageResource.drawerRingBackground, a1);
}

uint64_t one-time initialization function for endCallMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.endCallMac, 0x6C6C61632D646E65, 0xEC00000063616D5FLL);
}

uint64_t ImageResource.endCallMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for endCallMac, (uint64_t)static ImageResource.endCallMac);
}

uint64_t static ImageResource.endCallMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for endCallMac, (uint64_t)static ImageResource.endCallMac, a1);
}

uint64_t one-time initialization function for infoMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.infoMac, 0x63616D5F6F666E69, 0xE800000000000000);
}

uint64_t ImageResource.infoMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for infoMac, (uint64_t)static ImageResource.infoMac);
}

uint64_t static ImageResource.infoMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for infoMac, (uint64_t)static ImageResource.infoMac, a1);
}

uint64_t one-time initialization function for joinAudioButton(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.joinAudioButton, 0xD000000000000011, 0x80000001C379FA60);
}

uint64_t ImageResource.joinAudioButton.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for joinAudioButton, (uint64_t)static ImageResource.joinAudioButton);
}

uint64_t static ImageResource.joinAudioButton.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for joinAudioButton, (uint64_t)static ImageResource.joinAudioButton, a1);
}

uint64_t ImageResource.joinButton.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for joinButton, (uint64_t)static ImageResource.joinButton);
}

uint64_t static ImageResource.joinButton.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for joinButton, (uint64_t)static ImageResource.joinButton, a1);
}

uint64_t one-time initialization function for macControlsBlurMask(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.macControlsBlurMask, 0xD000000000000016, 0x80000001C379AC90);
}

uint64_t ImageResource.macControlsBlurMask.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for macControlsBlurMask, (uint64_t)static ImageResource.macControlsBlurMask);
}

uint64_t static ImageResource.macControlsBlurMask.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for macControlsBlurMask, (uint64_t)static ImageResource.macControlsBlurMask, a1);
}

uint64_t one-time initialization function for participantCollapse(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.participantCollapse, 0xD000000000000014, 0x80000001C3790CF0);
}

uint64_t ImageResource.participantCollapse.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for participantCollapse, (uint64_t)static ImageResource.participantCollapse);
}

uint64_t static ImageResource.participantCollapse.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for participantCollapse, (uint64_t)static ImageResource.participantCollapse, a1);
}

uint64_t one-time initialization function for participantCollapseMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.participantCollapseMac, 0xD000000000000018, 0x80000001C37C0990);
}

uint64_t ImageResource.participantCollapseMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for participantCollapseMac, (uint64_t)static ImageResource.participantCollapseMac);
}

uint64_t static ImageResource.participantCollapseMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for participantCollapseMac, (uint64_t)static ImageResource.participantCollapseMac, a1);
}

uint64_t one-time initialization function for participantExpand(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.participantExpand, 0xD000000000000012, 0x80000001C3790CD0);
}

uint64_t ImageResource.participantExpand.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for participantExpand, (uint64_t)static ImageResource.participantExpand);
}

uint64_t static ImageResource.participantExpand.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for participantExpand, (uint64_t)static ImageResource.participantExpand, a1);
}

uint64_t one-time initialization function for participantExpandMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.participantExpandMac, 0xD000000000000016, 0x80000001C37C0970);
}

uint64_t ImageResource.participantExpandMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for participantExpandMac, (uint64_t)static ImageResource.participantExpandMac);
}

uint64_t static ImageResource.participantExpandMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for participantExpandMac, (uint64_t)static ImageResource.participantExpandMac, a1);
}

uint64_t one-time initialization function for participantShutter(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.participantShutter, 0xD000000000000013, 0x80000001C3790CB0);
}

uint64_t ImageResource.participantShutter.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for participantShutter, (uint64_t)static ImageResource.participantShutter);
}

uint64_t static ImageResource.participantShutter.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for participantShutter, (uint64_t)static ImageResource.participantShutter, a1);
}

uint64_t one-time initialization function for pausedLarge(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.pausedLarge, 0x6C5F646573756170, 0xEC00000065677261);
}

uint64_t ImageResource.pausedLarge.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for pausedLarge, (uint64_t)static ImageResource.pausedLarge);
}

uint64_t static ImageResource.pausedLarge.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for pausedLarge, (uint64_t)static ImageResource.pausedLarge, a1);
}

uint64_t one-time initialization function for pausedSmall(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.pausedSmall, 0x735F646573756170, 0xEC0000006C6C616DLL);
}

uint64_t ImageResource.pausedSmall.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for pausedSmall, (uint64_t)static ImageResource.pausedSmall);
}

uint64_t static ImageResource.pausedSmall.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for pausedSmall, (uint64_t)static ImageResource.pausedSmall, a1);
}

uint64_t one-time initialization function for rosterOnCanvas(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.rosterOnCanvas, 0xD000000000000010, 0x80000001C3790C90);
}

uint64_t ImageResource.rosterOnCanvas.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for rosterOnCanvas, (uint64_t)static ImageResource.rosterOnCanvas);
}

uint64_t static ImageResource.rosterOnCanvas.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for rosterOnCanvas, (uint64_t)static ImageResource.rosterOnCanvas, a1);
}

uint64_t one-time initialization function for screenshare(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.screenshare, 0x68736E6565726373, 0xEB00000000657261);
}

uint64_t ImageResource.screenshare.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for screenshare, (uint64_t)static ImageResource.screenshare);
}

uint64_t static ImageResource.screenshare.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for screenshare, (uint64_t)static ImageResource.screenshare, a1);
}

uint64_t one-time initialization function for screenshareApp(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.screenshareApp, 0x68736E6565726373, 0xEF7070612D657261);
}

uint64_t ImageResource.screenshareApp.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for screenshareApp, (uint64_t)static ImageResource.screenshareApp);
}

uint64_t static ImageResource.screenshareApp.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for screenshareApp, (uint64_t)static ImageResource.screenshareApp, a1);
}

uint64_t one-time initialization function for screenshareSharebutton(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.screenshareSharebutton, 0xD000000000000017, 0x80000001C3790C60);
}

uint64_t ImageResource.screenshareSharebutton.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for screenshareSharebutton, (uint64_t)static ImageResource.screenshareSharebutton);
}

uint64_t static ImageResource.screenshareSharebutton.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for screenshareSharebutton, (uint64_t)static ImageResource.screenshareSharebutton, a1);
}

uint64_t one-time initialization function for screenshareMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.screenshareMac, 0x68736E6565726373, 0xEF63616D5F657261);
}

uint64_t ImageResource.screenshareMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for screenshareMac, (uint64_t)static ImageResource.screenshareMac);
}

uint64_t static ImageResource.screenshareMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for screenshareMac, (uint64_t)static ImageResource.screenshareMac, a1);
}

uint64_t one-time initialization function for send(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.send, 1684956531, 0xE400000000000000);
}

uint64_t ImageResource.send.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for send, (uint64_t)static ImageResource.send);
}

uint64_t static ImageResource.send.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for send, (uint64_t)static ImageResource.send, a1);
}

uint64_t one-time initialization function for shareplay(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.shareplay, 0x616C706572616873, 0xE900000000000079);
}

uint64_t ImageResource.shareplay.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for shareplay, (uint64_t)static ImageResource.shareplay);
}

uint64_t static ImageResource.shareplay.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for shareplay, (uint64_t)static ImageResource.shareplay, a1);
}

uint64_t one-time initialization function for shareplaySharebutton(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.shareplaySharebutton, 0xD000000000000015, 0x80000001C3790C30);
}

uint64_t ImageResource.shareplaySharebutton.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for shareplaySharebutton, (uint64_t)static ImageResource.shareplaySharebutton);
}

uint64_t static ImageResource.shareplaySharebutton.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for shareplaySharebutton, (uint64_t)static ImageResource.shareplaySharebutton, a1);
}

uint64_t one-time initialization function for videoDisableMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.videoDisableMac, 0xD000000000000011, 0x80000001C37C0950);
}

uint64_t ImageResource.videoDisableMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for videoDisableMac, (uint64_t)static ImageResource.videoDisableMac);
}

uint64_t static ImageResource.videoDisableMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for videoDisableMac, (uint64_t)static ImageResource.videoDisableMac, a1);
}

uint64_t one-time initialization function for videoMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.videoMac, 0x616D5F6F65646976, 0xE900000000000063);
}

uint64_t one-time initialization function for audioMuteMac(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for ImageResource();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  return MEMORY[0x1C876FF50](a3, a4, resourceBundle.super.isa);
}

uint64_t ImageResource.videoMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for videoMac, (uint64_t)static ImageResource.videoMac);
}

uint64_t ImageResource.audioMuteMac.unsafeMutableAddressor(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for ImageResource();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t static ImageResource.videoMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for videoMac, (uint64_t)static ImageResource.videoMac, a1);
}

uint64_t static ImageResource.audioMuteMac.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for ImageResource();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

NSURLRequest __swiftcall URLRequest._bridgeToObjectiveC()()
{
  uint64_t v0 = (objc_class *)MEMORY[0x1F40E2EA0]();
  result._internal = v1;
  result.super.Class isa = v0;
  return result;
}

uint64_t URLRequest.init(url:cachePolicy:timeoutInterval:)()
{
  return MEMORY[0x1F40E2EF0]();
}

uint64_t type metadata accessor for URLRequest()
{
  return MEMORY[0x1F40E2F58]();
}

uint64_t static FormatStyle.list<A>(type:width:)()
{
  return MEMORY[0x1F40E2FC0]();
}

uint64_t static CharacterSet.whitespaces.getter()
{
  return MEMORY[0x1F40E32A0]();
}

uint64_t static CharacterSet.whitespacesAndNewlines.getter()
{
  return MEMORY[0x1F40E3360]();
}

uint64_t type metadata accessor for CharacterSet()
{
  return MEMORY[0x1F40E3428]();
}

uint64_t DataProtocol.copyBytes(to:)()
{
  return MEMORY[0x1F40E3468]();
}

NSNotification __swiftcall Notification._bridgeToObjectiveC()()
{
  return (NSNotification)MEMORY[0x1F40E3538]();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E3548]();
}

uint64_t Notification.init(name:object:userInfo:)()
{
  return MEMORY[0x1F40E3558]();
}

uint64_t Notification.name.getter()
{
  return MEMORY[0x1F40E3570]();
}

uint64_t Notification.object.getter()
{
  return MEMORY[0x1F40E3580]();
}

uint64_t Notification.userInfo.getter()
{
  return MEMORY[0x1F40E3588]();
}

uint64_t type metadata accessor for Notification()
{
  return MEMORY[0x1F40E35A0]();
}

uint64_t URLQueryItem.init(name:value:)()
{
  return MEMORY[0x1F40E35B8]();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return MEMORY[0x1F40E35E0]();
}

uint64_t URLComponents.queryItems.setter()
{
  return MEMORY[0x1F40E3678]();
}

uint64_t URLComponents.url(relativeTo:)()
{
  return MEMORY[0x1F40E36C0]();
}

uint64_t URLComponents.init(url:resolvingAgainstBaseURL:)()
{
  return MEMORY[0x1F40E36D0]();
}

uint64_t URLComponents.url.getter()
{
  return MEMORY[0x1F40E36E0]();
}

uint64_t URLComponents.host.setter()
{
  return MEMORY[0x1F40E36F0]();
}

uint64_t URLComponents.path.setter()
{
  return MEMORY[0x1F40E3710]();
}

uint64_t URLComponents.scheme.setter()
{
  return MEMORY[0x1F40E3758]();
}

uint64_t URLComponents.fragment.setter()
{
  return MEMORY[0x1F40E3790]();
}

uint64_t URLComponents.init()()
{
  return MEMORY[0x1F40E37A0]();
}

uint64_t type metadata accessor for URLComponents()
{
  return MEMORY[0x1F40E37B0]();
}

uint64_t __DataStorage.init(bytes:length:copy:deallocator:offset:)()
{
  return MEMORY[0x1F40E37C8]();
}

uint64_t __DataStorage._bytes.getter()
{
  return MEMORY[0x1F40E37E8]();
}

uint64_t __DataStorage._length.getter()
{
  return MEMORY[0x1F40E3808]();
}

uint64_t __DataStorage._offset.getter()
{
  return MEMORY[0x1F40E3810]();
}

uint64_t type metadata accessor for __DataStorage()
{
  return MEMORY[0x1F40E3828]();
}

uint64_t static AttributeScope.decodingConfiguration.getter()
{
  return MEMORY[0x1F40E3840]();
}

uint64_t static AttributeScope.encodingConfiguration.getter()
{
  return MEMORY[0x1F40E3850]();
}

uint64_t DateComponents.second.getter()
{
  return MEMORY[0x1F40E39D0]();
}

uint64_t type metadata accessor for DateComponents()
{
  return MEMORY[0x1F40E3A60]();
}

uint64_t AttributeScopes.FoundationAttributes.link.getter()
{
  return MEMORY[0x1F40E3B50]();
}

uint64_t type metadata accessor for AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute.AnnouncementPriority()
{
  return MEMORY[0x1F40D3108]();
}

uint64_t AttributeScopes.AccessibilityAttributes.accessibilitySpeechAnnouncementPriority.getter()
{
  return MEMORY[0x1F40D3118]();
}

uint64_t AttributeScopes.UIKitAttributes.attachment.getter()
{
  return MEMORY[0x1F4165668]();
}

uint64_t AttributeScopes.UIKitAttributes.paragraphStyle.getter()
{
  return MEMORY[0x1F4165678]();
}

uint64_t AttributeScopes.UIKitAttributes.underlineColor.getter()
{
  return MEMORY[0x1F4165680]();
}

uint64_t AttributeScopes.UIKitAttributes.underlineStyle.getter()
{
  return MEMORY[0x1F4165688]();
}

uint64_t AttributeScopes.UIKitAttributes.font.getter()
{
  return MEMORY[0x1F41656C0]();
}

uint64_t type metadata accessor for AttributeScopes.UIKitAttributes()
{
  return MEMORY[0x1F41656D8]();
}

uint64_t AttributeScopes.SwiftUIAttributes.underlineStyle.getter()
{
  return MEMORY[0x1F40F7D10]();
}

uint64_t dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)()
{
  return MEMORY[0x1F40E3B78]();
}

uint64_t AttributedString.characters.getter()
{
  return MEMORY[0x1F40E3BB8]();
}

uint64_t AttributedString.CharacterView.startIndex.getter()
{
  return MEMORY[0x1F40E3BD0]();
}

uint64_t AttributedString.CharacterView._index(_:offsetBy:)()
{
  return MEMORY[0x1F40E3BE8]();
}

uint64_t type metadata accessor for AttributedString.CharacterView()
{
  return MEMORY[0x1F40E3BF8]();
}

uint64_t AttributedString.subscript.setter()
{
  return MEMORY[0x1F40E3C08]();
}

uint64_t AttributedString.setAttributes(_:)()
{
  return MEMORY[0x1F40E3C28]();
}

uint64_t AttributedString.init(stringLiteral:)()
{
  return MEMORY[0x1F40E3C30]();
}

uint64_t AttributedString.mergeAttributes(_:mergePolicy:)()
{
  return MEMORY[0x1F40E3C58]();
}

uint64_t type metadata accessor for AttributedString.FormattingOptions()
{
  return MEMORY[0x1F40E3C70]();
}

uint64_t type metadata accessor for AttributedString.AttributeMergePolicy()
{
  return MEMORY[0x1F40E3CA8]();
}

uint64_t type metadata accessor for AttributedString.InterpolationOptions()
{
  return MEMORY[0x1F40E3CC0]();
}

uint64_t AttributedString.Runs.AttributesSlice1.makeIterator()()
{
  return MEMORY[0x1F40E3D48]();
}

uint64_t AttributedString.Runs.AttributesSlice1.Iterator.next()()
{
  return MEMORY[0x1F40E3D50]();
}

uint64_t AttributedString.Runs.Run.subscript.getter()
{
  return MEMORY[0x1F40E3D78]();
}

uint64_t AttributedString.Runs.Run.range.getter()
{
  return MEMORY[0x1F40E3D98]();
}

uint64_t type metadata accessor for AttributedString.Runs.Run()
{
  return MEMORY[0x1F40E3DA0]();
}

uint64_t type metadata accessor for AttributedString.Runs.Index()
{
  return MEMORY[0x1F40E3DB8]();
}

uint64_t type metadata accessor for AttributedString.Runs()
{
  return MEMORY[0x1F40E3DD0]();
}

uint64_t AttributedString.Runs.subscript.getter()
{
  return MEMORY[0x1F40E3DD8]();
}

uint64_t AttributedString.runs.getter()
{
  return MEMORY[0x1F40E3E00]();
}

uint64_t type metadata accessor for AttributedString.Index()
{
  return MEMORY[0x1F40E3E10]();
}

uint64_t AttributedString.append<A>(_:)()
{
  return MEMORY[0x1F40E3E28]();
}

uint64_t AttributedString.init<A>(localized:options:table:bundle:locale:comment:including:)()
{
  return MEMORY[0x1F40E3E70]();
}

uint64_t AttributedString.init(localized:options:table:bundle:locale:comment:)()
{
  return MEMORY[0x1F40E3E80]();
}

uint64_t AttributedString.init()()
{
  return MEMORY[0x1F40E3E90]();
}

uint64_t type metadata accessor for AttributedString()
{
  return MEMORY[0x1F40E3EA8]();
}

uint64_t AttributedString.init(_:attributes:)()
{
  return MEMORY[0x1F40E3EB8]();
}

uint64_t AttributedString.subscript.modify()
{
  return MEMORY[0x1F40E3EF0]();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = MEMORY[0x1F40E3F50](_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t AttributeContainer.subscript.setter()
{
  return MEMORY[0x1F40E4020]();
}

uint64_t AttributeContainer.subscript.getter()
{
  return MEMORY[0x1F40E4048]();
}

uint64_t AttributeContainer.Builder.callAsFunction(_:)()
{
  return MEMORY[0x1F40E4068]();
}

uint64_t AttributeContainer.init()()
{
  return MEMORY[0x1F40E4088]();
}

uint64_t type metadata accessor for AttributeContainer()
{
  return MEMORY[0x1F40E4098]();
}

uint64_t AttributeContainer.init(_:)()
{
  return MEMORY[0x1F40E40B8]();
}

uint64_t static AttributedStringKey.runBoundaries.getter()
{
  return MEMORY[0x1F40E4148]();
}

uint64_t static AttributedStringKey.inheritedByAddedText.getter()
{
  return MEMORY[0x1F40E4158]();
}

uint64_t static AttributedStringKey.invalidationConditions.getter()
{
  return MEMORY[0x1F40E4168]();
}

uint64_t AttributedSubstring.subscript.setter()
{
  return MEMORY[0x1F40E4180]();
}

uint64_t AttributedSubstring.setAttributes(_:)()
{
  return MEMORY[0x1F40E4190]();
}

uint64_t AttributedSubstring.mergeAttributes(_:mergePolicy:)()
{
  return MEMORY[0x1F40E41A8]();
}

uint64_t PersonNameComponents.givenName.setter()
{
  return MEMORY[0x1F40E42D0]();
}

uint64_t PersonNameComponents.familyName.setter()
{
  return MEMORY[0x1F40E42E8]();
}

uint64_t PersonNameComponents.middleName.setter()
{
  return MEMORY[0x1F40E4308]();
}

uint64_t PersonNameComponents.init(namePrefix:givenName:middleName:familyName:nameSuffix:nickname:phoneticRepresentation:)()
{
  return MEMORY[0x1F40E4318]();
}

NSPersonNameComponents __swiftcall PersonNameComponents._bridgeToObjectiveC()()
{
  uint64_t v0 = (objc_class *)MEMORY[0x1F40E4360]();
  result._private = v1;
  result.super.Class isa = v0;
  return result;
}

uint64_t static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E4380]();
}

uint64_t PersonNameComponents.init()()
{
  return MEMORY[0x1F40E43B8]();
}

uint64_t type metadata accessor for PersonNameComponents()
{
  return MEMORY[0x1F40E43C8]();
}

uint64_t static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)()
{
  return MEMORY[0x1F40E43F0]();
}

uint64_t static PredicateExpressions.build_Arg<A>(_:)()
{
  return MEMORY[0x1F40E4448]();
}

{
  return MEMORY[0x1F40E4458]();
}

uint64_t _convertErrorToNSError(_:)()
{
  return MEMORY[0x1F40E4538]();
}

uint64_t _convertNSErrorToError(_:)()
{
  return MEMORY[0x1F40E4548]();
}

uint64_t NSFastEnumerationIterator.next()()
{
  return MEMORY[0x1F40E46C0]();
}

uint64_t type metadata accessor for NSFastEnumerationIterator()
{
  return MEMORY[0x1F40E46C8]();
}

uint64_t static DecodableAttributedStringKey<>.decode(from:)()
{
  return MEMORY[0x1F40E4760]();
}

uint64_t static EncodableAttributedStringKey<>.encode(_:to:)()
{
  return MEMORY[0x1F40E4778]();
}

uint64_t static MarkdownDecodableAttributedStringKey<>.decodeMarkdown(from:)()
{
  return MEMORY[0x1F40E4850]();
}

uint64_t static MarkdownDecodableAttributedStringKey.markdownName.getter()
{
  return MEMORY[0x1F40E4858]();
}

uint64_t _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)()
{
  return MEMORY[0x1F40E4870]();
}

uint64_t URL.baseURL.getter()
{
  return MEMORY[0x1F40E4880]();
}

uint64_t URL.isFileURL.getter()
{
  return MEMORY[0x1F40E4890]();
}

uint64_t URL.relativePath.getter()
{
  return MEMORY[0x1F40E48C0]();
}

uint64_t type metadata accessor for URL.DirectoryHint()
{
  return MEMORY[0x1F40E48D0]();
}

uint64_t URL.absoluteString.getter()
{
  return MEMORY[0x1F40E48F0]();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t static URL.== infix(_:_:)()
{
  return MEMORY[0x1F40E4A48]();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E4A78]();
}

uint64_t URL.path.getter()
{
  return MEMORY[0x1F40E4AB8]();
}

uint64_t URL.init(string:)()
{
  return MEMORY[0x1F40E4B18]();
}

uint64_t URL.init(filePath:directoryHint:relativeTo:)()
{
  return MEMORY[0x1F40E4B28]();
}

uint64_t type metadata accessor for URL()
{
  return MEMORY[0x1F40E4B88]();
}

uint64_t Data.InlineData.init(_:)()
{
  return MEMORY[0x1F40E4BB8]();
}

Swift::Void __swiftcall Data.LargeSlice.ensureUniqueReference()()
{
}

uint64_t Data.LargeSlice.init(_:)()
{
  return MEMORY[0x1F40E4BD0]();
}

uint64_t Data.init(contentsOf:options:)()
{
  return MEMORY[0x1F40E4BE8]();
}

uint64_t Data.InlineSlice.init(_:)()
{
  return MEMORY[0x1F40E4C10]();
}

uint64_t Data._Representation.replaceSubrange(_:with:count:)()
{
  return MEMORY[0x1F40E4CB0]();
}

uint64_t Data._Representation.init(count:)()
{
  return MEMORY[0x1F40E4CC0]();
}

uint64_t Data._Representation.append(contentsOf:)()
{
  return MEMORY[0x1F40E4CE0]();
}

uint64_t Data._Representation.init(_:)()
{
  return MEMORY[0x1F40E4D08]();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)MEMORY[0x1F40E4D50]();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E4DA0]();
}

uint64_t Data.count.getter()
{
  return MEMORY[0x1F40E4DF8]();
}

uint64_t Date.timeIntervalSinceReferenceDate.getter()
{
  return MEMORY[0x1F40E4EE8]();
}

uint64_t static Date.distantPast.getter()
{
  return MEMORY[0x1F40E5080]();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return MEMORY[0x1F40E50D8]();
}

uint64_t Date.addingTimeInterval(_:)()
{
  return MEMORY[0x1F40E5150]();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)MEMORY[0x1F40E5190]();
}

uint64_t static Date.> infix(_:_:)()
{
  return MEMORY[0x1F40E51A0]();
}

uint64_t static Date.< infix(_:_:)()
{
  return MEMORY[0x1F40E51B0]();
}

uint64_t static Date.+ infix(_:_:)()
{
  return MEMORY[0x1F40E51B8]();
}

uint64_t Date.init(timeIntervalSinceNow:)()
{
  return MEMORY[0x1F40E51E0]();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return MEMORY[0x1F40E51E8]();
}

uint64_t Date.timeIntervalSince1970.getter()
{
  return MEMORY[0x1F40E52B8]();
}

uint64_t static Date.== infix(_:_:)()
{
  return MEMORY[0x1F40E52C8]();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E52E8]();
}

uint64_t static Date.now.getter()
{
  return MEMORY[0x1F40E52F8]();
}

uint64_t Date.compare(_:)()
{
  return MEMORY[0x1F40E5318]();
}

uint64_t Date.distance(to:)()
{
  return MEMORY[0x1F40E5340]();
}

uint64_t Date.init()()
{
  return MEMORY[0x1F40E5370]();
}

uint64_t type metadata accessor for Date()
{
  return MEMORY[0x1F40E5380]();
}

uint64_t UUID.init(uuidString:)()
{
  return MEMORY[0x1F40E5398]();
}

uint64_t UUID.uuidString.getter()
{
  return MEMORY[0x1F40E53A8]();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)MEMORY[0x1F40E53D0]();
}

uint64_t static UUID.< infix(_:_:)()
{
  return MEMORY[0x1F40E53E0]();
}

uint64_t static UUID.== infix(_:_:)()
{
  return MEMORY[0x1F40E53F0]();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E5400]();
}

uint64_t UUID.init(uuid:)()
{
  return MEMORY[0x1F40E5420]();
}

uint64_t UUID.init()()
{
  return MEMORY[0x1F40E5440]();
}

uint64_t type metadata accessor for UUID()
{
  return MEMORY[0x1F40E5450]();
}

uint64_t Locale.init(identifier:)()
{
  return MEMORY[0x1F40E5508]();
}

uint64_t Locale.identifier.getter()
{
  return MEMORY[0x1F40E5518]();
}

NSLocale __swiftcall Locale._bridgeToObjectiveC()()
{
  return (NSLocale)MEMORY[0x1F40E5640]();
}

uint64_t static Locale.current.getter()
{
  return MEMORY[0x1F40E5730]();
}

uint64_t type metadata accessor for Locale()
{
  return MEMORY[0x1F40E5888]();
}

uint64_t Calendar.isDateInToday(_:)()
{
  return MEMORY[0x1F40E5928]();
}

uint64_t Calendar.dateComponents(_:from:to:)()
{
  return MEMORY[0x1F40E5968]();
}

uint64_t Calendar.weekdaySymbols.getter()
{
  return MEMORY[0x1F40E5988]();
}

uint64_t Calendar.isDateInYesterday(_:)()
{
  return MEMORY[0x1F40E59C8]();
}

uint64_t Calendar.date(byAdding:value:to:wrappingComponents:)()
{
  return MEMORY[0x1F40E5A50]();
}

uint64_t Calendar.isDate(_:equalTo:toGranularity:)()
{
  return MEMORY[0x1F40E5A88]();
}

uint64_t static Calendar.current.getter()
{
  return MEMORY[0x1F40E5AB0]();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return MEMORY[0x1F40E5AF8]();
}

uint64_t Calendar.component(_:from:)()
{
  return MEMORY[0x1F40E5B08]();
}

uint64_t type metadata accessor for Calendar()
{
  return MEMORY[0x1F40E5B10]();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)MEMORY[0x1F40E5E70]();
}

uint64_t static IndexPath.== infix(_:_:)()
{
  return MEMORY[0x1F40E5E88]();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E5E98]();
}

uint64_t IndexPath.init(row:section:)()
{
  return MEMORY[0x1F4165708]();
}

uint64_t IndexPath.row.getter()
{
  return MEMORY[0x1F4165718]();
}

uint64_t IndexPath.init(item:section:)()
{
  return MEMORY[0x1F4165730]();
}

uint64_t IndexPath.item.getter()
{
  return MEMORY[0x1F4165748]();
}

uint64_t IndexPath.section.getter()
{
  return MEMORY[0x1F4165760]();
}

uint64_t type metadata accessor for IndexPath()
{
  return MEMORY[0x1F40E5EF8]();
}

uint64_t dispatch thunk of SystemEventsAgent.deregisterSync()()
{
  return MEMORY[0x1F4117700]();
}

uint64_t type metadata accessor for SystemEventsAgent()
{
  return MEMORY[0x1F4117708]();
}

uint64_t static AccessorySystemEvent.kHeaderEventRelease.getter()
{
  return MEMORY[0x1F4117710]();
}

uint64_t static AccessorySystemEvent.kHeaderCameraFlip.getter()
{
  return MEMORY[0x1F4117718]();
}

uint64_t static AccessorySystemEvent.kHeaderCameraZoom.getter()
{
  return MEMORY[0x1F4117720]();
}

uint64_t static AccessorySystemEvent.kHeaderCameraShutter.getter()
{
  return MEMORY[0x1F4117728]();
}

uint64_t AccessorySystemEvent.header.getter()
{
  return MEMORY[0x1F4117730]();
}

uint64_t AccessorySystemEvent.payload.getter()
{
  return MEMORY[0x1F4117738]();
}

uint64_t type metadata accessor for AccessorySystemEvent()
{
  return MEMORY[0x1F4117740]();
}

uint64_t withObservationTracking<A>(_:onChange:)()
{
  return MEMORY[0x1F41874F8]();
}

uint64_t ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)()
{
  return MEMORY[0x1F4187530]();
}

uint64_t ObservationRegistrar.access<A, B>(_:keyPath:)()
{
  return MEMORY[0x1F4187548]();
}

uint64_t ObservationRegistrar.didSet<A, B>(_:keyPath:)()
{
  return MEMORY[0x1F4187558]();
}

uint64_t ObservationRegistrar.willSet<A, B>(_:keyPath:)()
{
  return MEMORY[0x1F4187560]();
}

uint64_t ObservationRegistrar.init()()
{
  return MEMORY[0x1F4187570]();
}

uint64_t type metadata accessor for ObservationRegistrar()
{
  return MEMORY[0x1F4187580]();
}

uint64_t dispatch thunk of TPTipsHelper.removeEntries(_:)()
{
  return MEMORY[0x1F4163888]();
}

uint64_t type metadata accessor for TPTipsHelper.Entry.Kind()
{
  return MEMORY[0x1F4163890]();
}

uint64_t type metadata accessor for TPTipsHelper.Entry()
{
  return MEMORY[0x1F4163898]();
}

uint64_t TPTipsHelper.Entry.init(_:tip:observationTask:)()
{
  return MEMORY[0x1F41638A0]();
}

uint64_t dispatch thunk of TPTipsHelper.setup()()
{
  return MEMORY[0x1F41638A8]();
}

uint64_t dispatch thunk of TPTipsHelper.addEntry(_:)()
{
  return MEMORY[0x1F41638B8]();
}

uint64_t static TPTipsHelper.taskQueue.getter()
{
  return MEMORY[0x1F41638C0]();
}

uint64_t type metadata accessor for TPTipsHelper()
{
  return MEMORY[0x1F41638C8]();
}

uint64_t FaceInFrameTip.init()()
{
  return MEMORY[0x1F41638D0]();
}

uint64_t type metadata accessor for FaceInFrameTip()
{
  return MEMORY[0x1F41638D8]();
}

uint64_t FaceTimeLinkTip.init()()
{
  return MEMORY[0x1F41638E0]();
}

uint64_t type metadata accessor for FaceTimeLinkTip()
{
  return MEMORY[0x1F41638E8]();
}

uint64_t dispatch thunk of MessageIndicatorView.tapHandler.getter()
{
  return MEMORY[0x1F41638F0]();
}

uint64_t dispatch thunk of MessageIndicatorView.tapHandler.setter()
{
  return MEMORY[0x1F41638F8]();
}

uint64_t type metadata accessor for RecentsCallItemStyle()
{
  return MEMORY[0x1F4163900]();
}

uint64_t static VideoReactionPickerTip.hasOpenedReactionPicker.getter()
{
  return MEMORY[0x1F4163908]();
}

uint64_t static VideoReactionPickerTip.shouldShow.getter()
{
  return MEMORY[0x1F4163910]();
}

uint64_t static VideoReactionPickerTip.shouldShow.setter()
{
  return MEMORY[0x1F4163918]();
}

uint64_t VideoReactionPickerTip.init()()
{
  return MEMORY[0x1F4163920]();
}

uint64_t type metadata accessor for VideoReactionPickerTip()
{
  return MEMORY[0x1F4163928]();
}

uint64_t type metadata accessor for RecentsListItemLocation()
{
  return MEMORY[0x1F4163930]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.messageIndicatorView.getter()
{
  return MEMORY[0x1F4163938]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.avatarViewController.getter()
{
  return MEMORY[0x1F4163940]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.avatarViewController.setter()
{
  return MEMORY[0x1F4163948]();
}

uint64_t RecentsListItemViewHelper.init(parentView:location:)()
{
  return MEMORY[0x1F4163950]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.sizeThatFits(_:shouldHideTrailingAccessoryView:trailingAccessoryView:)()
{
  return MEMORY[0x1F4163958]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.detailAccessoryButton.getter()
{
  return MEMORY[0x1F4163960]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.updateForParentTraitCollectionDidChange()()
{
  return MEMORY[0x1F4163968]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.layout(shouldHideTrailingAccessoryView:trailingAccessoryView:)()
{
  return MEMORY[0x1F4163970]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.configure(with:)()
{
  return MEMORY[0x1F4163978]();
}

uint64_t type metadata accessor for RecentsListItemViewHelper()
{
  return MEMORY[0x1F4163980]();
}

uint64_t dispatch thunk of TaskQueue.async<A>(_:)()
{
  return MEMORY[0x1F4163988]();
}

uint64_t dispatch thunk of TaskQueue.async(_:)()
{
  return MEMORY[0x1F4163990]();
}

uint64_t TaskQueue.__allocating_init(priority:)()
{
  return MEMORY[0x1F4163998]();
}

uint64_t type metadata accessor for TaskQueue()
{
  return MEMORY[0x1F41639A0]();
}

uint64_t static AVPartialAsyncProperty<A>.duration.getter()
{
  return MEMORY[0x1F4182DA0]();
}

uint64_t type metadata accessor for CGPathFillRule()
{
  return MEMORY[0x1F40D9648]();
}

NSNumber __swiftcall CGFloat._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1F40E5F48]();
}

uint64_t static CGFloat._forceBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1F40E5F58]();
}

uint64_t static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1F40E5F68]();
}

uint64_t static CGFloat._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E5F78]();
}

uint64_t isFeatureEnabled(_:)()
{
  return MEMORY[0x1F4119150]();
}

Swift::Void __swiftcall _AccessibilityNotifications.post()()
{
}

uint64_t type metadata accessor for AccessibilityNotification.Announcement()
{
  return MEMORY[0x1F40D3138]();
}

uint64_t AccessibilityNotification.Announcement.init(_:)()
{
  return MEMORY[0x1F40D3140]();
}

uint64_t type metadata accessor for AccessibilityNotification.ScreenChanged()
{
  return MEMORY[0x1F40D3158]();
}

uint64_t AccessibilityNotification.ScreenChanged.init(_:)()
{
  return MEMORY[0x1F40D3160]();
}

uint64_t XPCHostConnection.clientObject.getter()
{
  return MEMORY[0x1F41133F8]();
}

uint64_t XPCHostConnection.bundleIdentifier.getter()
{
  return MEMORY[0x1F4113400]();
}

uint64_t XPCHostConnection.isEntitledToUsePrivateAPI.getter()
{
  return MEMORY[0x1F4113408]();
}

uint64_t dispatch thunk of PeoplePickerConfiguration.shareSheetSessionID.getter()
{
  return MEMORY[0x1F4113568]();
}

uint64_t type metadata accessor for PeoplePickerConfiguration()
{
  return MEMORY[0x1F4113570]();
}

uint64_t PeoplePickerHostConnection.init(connection:queue:)()
{
  return MEMORY[0x1F4113578]();
}

uint64_t PeoplePickerHostConnection.delegate.setter()
{
  return MEMORY[0x1F4113580]();
}

uint64_t type metadata accessor for PeoplePickerHostConnection()
{
  return MEMORY[0x1F4113588]();
}

uint64_t Cache.init(countLimit:)()
{
  return MEMORY[0x1F41137B0]();
}

Swift::Void __swiftcall Cache.removeAllObjects()()
{
}

uint64_t type metadata accessor for Cache()
{
  return MEMORY[0x1F41137C0]();
}

uint64_t Cache.subscript.getter()
{
  return MEMORY[0x1F41137C8]();
}

uint64_t Cache.subscript.setter()
{
  return MEMORY[0x1F41137D0]();
}

uint64_t static _CFObject.== infix(_:_:)()
{
  return MEMORY[0x1F4186950]();
}

uint64_t _CFObject.hash(into:)()
{
  return MEMORY[0x1F4186960]();
}

uint64_t _CFObject.hashValue.getter()
{
  return MEMORY[0x1F4186970]();
}

uint64_t static GroupActivityMetadata.ActivityType.screenSharing.getter()
{
  return MEMORY[0x1F40E7570]();
}

uint64_t type metadata accessor for GroupActivityMetadata.ActivityType()
{
  return MEMORY[0x1F40E7588]();
}

uint64_t GroupActivityMetadata.type.setter()
{
  return MEMORY[0x1F40E75C0]();
}

uint64_t GroupActivityMetadata.init()()
{
  return MEMORY[0x1F40E75D8]();
}

uint64_t type metadata accessor for GroupSessionMessenger.DeliveryMode()
{
  return MEMORY[0x1F40E75E8]();
}

uint64_t GroupSessionMessenger.MessageContext.source.getter()
{
  return MEMORY[0x1F40E75F0]();
}

uint64_t type metadata accessor for GroupSessionMessenger.MessageContext()
{
  return MEMORY[0x1F40E75F8]();
}

uint64_t GroupSessionMessenger.receive<A>(_:)()
{
  return MEMORY[0x1F40E7618]();
}

uint64_t GroupSessionMessenger.init<A>(session:deliveryMode:)()
{
  return MEMORY[0x1F40E7628]();
}

uint64_t GroupSessionMessenger.Messages.makeAsyncIterator()()
{
  return MEMORY[0x1F40E7640]();
}

uint64_t GroupSessionMessenger.messages(of:)()
{
  return MEMORY[0x1F40E7658]();
}

uint64_t type metadata accessor for GroupSessionMessenger()
{
  return MEMORY[0x1F40E7668]();
}

uint64_t GroupSession.localParticipant.getter()
{
  return MEMORY[0x1F40E7690]();
}

uint64_t GroupSession.activeParticipants.getter()
{
  return MEMORY[0x1F40E7698]();
}

uint64_t GroupSession.isLocallyInitiated.getter()
{
  return MEMORY[0x1F40E76A0]();
}

uint64_t GroupSession.$activeParticipants.getter()
{
  return MEMORY[0x1F40E76A8]();
}

Swift::Void __swiftcall GroupSession.end()()
{
}

Swift::Void __swiftcall GroupSession.join()()
{
}

uint64_t GroupSession.state.getter()
{
  return MEMORY[0x1F40E76F8]();
}

uint64_t GroupSession.$state.getter()
{
  return MEMORY[0x1F40E7700]();
}

uint64_t GroupSession.Sessions.makeAsyncIterator()()
{
  return MEMORY[0x1F40E7708]();
}

uint64_t GroupSession.activity.getter()
{
  return MEMORY[0x1F40E7718]();
}

uint64_t static GroupActivity.sessions()()
{
  return MEMORY[0x1F40E7770]();
}

uint64_t static Participant.== infix(_:_:)()
{
  return MEMORY[0x1F40E7780]();
}

uint64_t Participant.id.getter()
{
  return MEMORY[0x1F40E7788]();
}

uint64_t Participant.handle.getter()
{
  return MEMORY[0x1F40E7790]();
}

uint64_t type metadata accessor for Participant()
{
  return MEMORY[0x1F40E7798]();
}

uint64_t static Participants.only(_:)()
{
  return MEMORY[0x1F40E77A0]();
}

uint64_t type metadata accessor for Participants()
{
  return MEMORY[0x1F40E77A8]();
}

uint64_t CallRecordingRecordingView.stopwatchTime.setter()
{
  return MEMORY[0x1F4112AF8]();
}

uint64_t CallRecordingRecordingView.updateBackground(_:)()
{
  return MEMORY[0x1F4112B08]();
}

Swift::Void __swiftcall CallRecordingRecordingView.setAXLabelForStopButton(_:)(Swift::String_optional a1)
{
}

uint64_t CallRecordingRecordingView.init(config:)()
{
  return MEMORY[0x1F4112B18]();
}

uint64_t static CallRecordingRecordingView.Options.stopButton.getter()
{
  return MEMORY[0x1F4112B20]();
}

uint64_t static CallRecordingRecordingView.Options.all.getter()
{
  return MEMORY[0x1F4112B28]();
}

uint64_t static CallRecordingRecordingView.Options.none.getter()
{
  return MEMORY[0x1F4112B30]();
}

uint64_t type metadata accessor for CallRecordingRecordingView.Options()
{
  return MEMORY[0x1F4112B38]();
}

uint64_t CallRecordingRecordingView.delegate.setter()
{
  return MEMORY[0x1F4112B40]();
}

uint64_t type metadata accessor for CallRecordingRecordingView()
{
  return MEMORY[0x1F4112B48]();
}

uint64_t CallRecordingViewBackgroundView.init(effect:)()
{
  return MEMORY[0x1F4112B50]();
}

uint64_t type metadata accessor for CallRecordingViewBackgroundView()
{
  return MEMORY[0x1F4112B58]();
}

uint64_t MarqueeLabel.init(text:color:animated:)()
{
  return MEMORY[0x1F4112B70]();
}

uint64_t type metadata accessor for MarqueeLabel()
{
  return MEMORY[0x1F4112B78]();
}

uint64_t MacButtonStyle.init(insets:rim:fillWidth:)()
{
  return MEMORY[0x1F4112B80]();
}

uint64_t type metadata accessor for MacButtonStyle()
{
  return MEMORY[0x1F4112B88]();
}

Swift::Void __swiftcall CallRecordingButton.overrideTintColor(_:)(Swift::Bool a1)
{
}

uint64_t CallRecordingButton.isEnabled.setter()
{
  return MEMORY[0x1F4112B98]();
}

uint64_t type metadata accessor for CallRecordingButton()
{
  return MEMORY[0x1F4112BA0]();
}

uint64_t CallRecordingViewConfig.init(inset:options:interComponentSpacing:maxAXContentSize:backgroundEffect:)()
{
  return MEMORY[0x1F4112BA8]();
}

uint64_t type metadata accessor for CallRecordingViewConfig()
{
  return MEMORY[0x1F4112BB0]();
}

uint64_t static ClarityUINavigationTitle.recents.getter()
{
  return MEMORY[0x1F4112BC8]();
}

uint64_t static ClarityUINavigationTitle.contacts.getter()
{
  return MEMORY[0x1F4112BD0]();
}

uint64_t type metadata accessor for ClarityUINavigationTitle()
{
  return MEMORY[0x1F4112BD8]();
}

uint64_t CallRecordingCountdownView.updateBackground(_:)()
{
  return MEMORY[0x1F4112BE0]();
}

Swift::Void __swiftcall CallRecordingCountdownView.setAXLabelForCloseButton(_:)(Swift::String_optional a1)
{
}

uint64_t CallRecordingCountdownView.init(config:)()
{
  return MEMORY[0x1F4112BF0]();
}

uint64_t CallRecordingCountdownView.delegate.setter()
{
  return MEMORY[0x1F4112C00]();
}

uint64_t type metadata accessor for CallRecordingCountdownView()
{
  return MEMORY[0x1F4112C08]();
}

uint64_t type metadata accessor for GenerativeModelsAvailability.Availability()
{
  return MEMORY[0x1F411BD20]();
}

uint64_t GenerativeModelsAvailability.Parameters.init(useCaseIdentifiers:)()
{
  return MEMORY[0x1F411BD48]();
}

uint64_t type metadata accessor for GenerativeModelsAvailability.Parameters()
{
  return MEMORY[0x1F411BD50]();
}

uint64_t GenerativeModelsAvailability.availability.getter()
{
  return MEMORY[0x1F411BD68]();
}

uint64_t static GenerativeModelsAvailability.current(parameters:)()
{
  return MEMORY[0x1F411BD80]();
}

uint64_t type metadata accessor for GenerativeModelsAvailability()
{
  return MEMORY[0x1F411BDA0]();
}

uint64_t PlaybackServer.interactionState.getter()
{
  return MEMORY[0x1F414A700]();
}

uint64_t PlaybackServer.$interactionState.getter()
{
  return MEMORY[0x1F414A708]();
}

uint64_t PlaybackServer.__allocating_init(session:interruptionHandler:)()
{
  return MEMORY[0x1F414A718]();
}

uint64_t PlaybackServer.$isActive.getter()
{
  return MEMORY[0x1F414A720]();
}

uint64_t type metadata accessor for PlaybackServer()
{
  return MEMORY[0x1F414A728]();
}

uint64_t static InteractionState.== infix(_:_:)()
{
  return MEMORY[0x1F414A730]();
}

uint64_t static InteractionState.draw.getter()
{
  return MEMORY[0x1F414A738]();
}

uint64_t type metadata accessor for InteractionState()
{
  return MEMORY[0x1F414A740]();
}

uint64_t type metadata accessor for SystemGestureEvent()
{
  return MEMORY[0x1F414A748]();
}

uint64_t CaptureUIInteraction.interactionState.setter()
{
  return MEMORY[0x1F414A758]();
}

uint64_t CaptureUIInteraction.deviceOrientation.setter()
{
  return MEMORY[0x1F414A760]();
}

uint64_t CaptureUIInteraction.sendHardwareGesture(_:)()
{
  return MEMORY[0x1F414A768]();
}

uint64_t CaptureUIInteraction.__allocating_init(session:interruptionHandler:)()
{
  return MEMORY[0x1F414A770]();
}

uint64_t type metadata accessor for CaptureUIInteraction()
{
  return MEMORY[0x1F414A778]();
}

uint64_t type metadata accessor for ControlMessageSession.Role()
{
  return MEMORY[0x1F414A780]();
}

uint64_t ControlMessageSession.__allocating_init(transport:role:)()
{
  return MEMORY[0x1F414A788]();
}

uint64_t type metadata accessor for ControlMessageSession()
{
  return MEMORY[0x1F414A790]();
}

uint64_t type metadata accessor for ControlMessengerState()
{
  return MEMORY[0x1F414A798]();
}

uint64_t type metadata accessor for ControlMessageReliability()
{
  return MEMORY[0x1F414A7A0]();
}

uint64_t type metadata accessor for ActivityScene()
{
  return MEMORY[0x1F4106988]();
}

uint64_t LanguageManager.init(featureFlags:localeOverride:)()
{
  return MEMORY[0x1F41639A8]();
}

Swift::String __swiftcall LanguageManager.mappedASRLanguageIdentifier(supportedLanguages:)(Swift::OpaquePointer_optional supportedLanguages)
{
  uint64_t v1 = MEMORY[0x1F41639B0](supportedLanguages.value._rawValue, *(void *)&supportedLanguages.is_nil);
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t type metadata accessor for LanguageManager()
{
  return MEMORY[0x1F41639B8]();
}

uint64_t dispatch thunk of Message.recordUUID.getter()
{
  return MEMORY[0x1F4119058]();
}

uint64_t dispatch thunk of Message.dateCreated.getter()
{
  return MEMORY[0x1F4119060]();
}

uint64_t dispatch thunk of Message.isSensitive.getter()
{
  return MEMORY[0x1F4119068]();
}

uint64_t dispatch thunk of Message.messageFile.getter()
{
  return MEMORY[0x1F4119070]();
}

uint64_t dispatch thunk of Message.messageType.getter()
{
  return MEMORY[0x1F4119078]();
}

uint64_t dispatch thunk of Message.conversationID.getter()
{
  return MEMORY[0x1F4119080]();
}

uint64_t dispatch thunk of Message.messageThumbnail.getter()
{
  return MEMORY[0x1F4119088]();
}

uint64_t dispatch thunk of Message.from.getter()
{
  return MEMORY[0x1F4119090]();
}

uint64_t dispatch thunk of Message.isRead.getter()
{
  return MEMORY[0x1F4119098]();
}

uint64_t dispatch thunk of Message.duration.getter()
{
  return MEMORY[0x1F41190A0]();
}

uint64_t type metadata accessor for MessageFetchOptions()
{
  return MEMORY[0x1F41190A8]();
}

uint64_t type metadata accessor for MessageKey()
{
  return MEMORY[0x1F41190B0]();
}

uint64_t MessageType.rawValue.getter()
{
  return MEMORY[0x1F41190B8]();
}

uint64_t type metadata accessor for MessageSortOrder()
{
  return MEMORY[0x1F41190C0]();
}

uint64_t MessageStoreController.addDelegate(_:)()
{
  return MEMORY[0x1F41190C8]();
}

uint64_t static MessageStoreController.shared.getter()
{
  return MEMORY[0x1F41190F8]();
}

uint64_t type metadata accessor for MessageStoreController()
{
  return MEMORY[0x1F4119100]();
}

uint64_t type metadata accessor for MessageStoreFetchRequest.QuerySearchType()
{
  return MEMORY[0x1F4119108]();
}

uint64_t MessageStoreFetchRequest.init(query:sortType:options:pageSize:page:originatingBundleID:)()
{
  return MEMORY[0x1F4119110]();
}

uint64_t type metadata accessor for MessageStoreFetchRequest()
{
  return MEMORY[0x1F4119118]();
}

uint64_t static MessageStoreQuery.&& infix(_:_:)()
{
  return MEMORY[0x1F4119120]();
}

uint64_t type metadata accessor for MessageStoreQuery()
{
  return MEMORY[0x1F4119128]();
}

uint64_t ImageResource.init(name:bundle:)()
{
  return MEMORY[0x1F40E05E0]();
}

uint64_t type metadata accessor for ImageResource()
{
  return MEMORY[0x1F40E05E8]();
}

uint64_t Preview.init(_:traits:body:)()
{
  return MEMORY[0x1F40F7D58]();
}

uint64_t type metadata accessor for FeatureEligibility()
{
  return MEMORY[0x1F4119010]();
}

uint64_t type metadata accessor for FeatureEligibilityDomain()
{
  return MEMORY[0x1F4119018]();
}

uint64_t FeatureEligibilityChecker.init()()
{
  return MEMORY[0x1F4119020]();
}

uint64_t type metadata accessor for FeatureEligibilityChecker()
{
  return MEMORY[0x1F4119028]();
}

uint64_t dispatch thunk of FeatureEligibilityChecking.getEligibilityForDomain(_:)()
{
  return MEMORY[0x1F4119030]();
}

uint64_t DeviceRestrictionController.init(profileConnection:)()
{
  return MEMORY[0x1F4119038]();
}

Swift::Void __swiftcall DeviceRestrictionController.setRestrictionsActive(_:)(Swift::Bool a1)
{
}

uint64_t type metadata accessor for DeviceRestrictionController()
{
  return MEMORY[0x1F4119048]();
}

uint64_t os_log(_:dso:log:type:_:)()
{
  return MEMORY[0x1F41884F0]();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return MEMORY[0x1F4188500]();
}

uint64_t Logger.logObject.getter()
{
  return MEMORY[0x1F4188670]();
}

uint64_t Logger.init(subsystem:category:)()
{
  return MEMORY[0x1F4188680]();
}

uint64_t type metadata accessor for Logger()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t static _UIKitNumericRawRepresentable.+ infix(_:_:)()
{
  return MEMORY[0x1F4165770]();
}

uint64_t static _UIKitNumericRawRepresentable.- infix(_:_:)()
{
  return MEMORY[0x1F4165778]();
}

uint64_t static UIPointerShape.defaultCornerRadius.getter()
{
  return MEMORY[0x1F41658A8]();
}

uint64_t type metadata accessor for UIPointerShape()
{
  return MEMORY[0x1F41658B0]();
}

uint64_t static UICellAccessory.customView(configuration:)()
{
  return MEMORY[0x1F41658C8]();
}

uint64_t static UICellAccessory.multiselect(displayed:options:)()
{
  return MEMORY[0x1F41658D0]();
}

uint64_t type metadata accessor for UICellAccessory.DisplayedState()
{
  return MEMORY[0x1F4165900]();
}

uint64_t type metadata accessor for UICellAccessory.LayoutDimension()
{
  return MEMORY[0x1F4165918]();
}

uint64_t UICellAccessory.MultiselectOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)()
{
  return MEMORY[0x1F4165948]();
}

uint64_t type metadata accessor for UICellAccessory.MultiselectOptions()
{
  return MEMORY[0x1F4165950]();
}

uint64_t static UICellAccessory.disclosureIndicator(displayed:options:)()
{
  return MEMORY[0x1F4165958]();
}

uint64_t UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)()
{
  return MEMORY[0x1F4165960]();
}

uint64_t type metadata accessor for UICellAccessory.CustomViewConfiguration()
{
  return MEMORY[0x1F4165968]();
}

uint64_t UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)()
{
  return MEMORY[0x1F4165988]();
}

uint64_t type metadata accessor for UICellAccessory.DisclosureIndicatorOptions()
{
  return MEMORY[0x1F4165990]();
}

uint64_t type metadata accessor for UICellAccessory.Placement()
{
  return MEMORY[0x1F41659B0]();
}

uint64_t type metadata accessor for UICellAccessory()
{
  return MEMORY[0x1F41659C8]();
}

uint64_t UIMutableTraits.userInterfaceLevel.setter()
{
  return MEMORY[0x1F4165A38]();
}

uint64_t UIMutableTraits.userInterfaceStyle.setter()
{
  return MEMORY[0x1F4165A48]();
}

uint64_t dispatch thunk of UIMutableTraits.subscript.getter()
{
  return MEMORY[0x1F4165A98]();
}

uint64_t dispatch thunk of UIMutableTraits.subscript.setter()
{
  return MEMORY[0x1F4165AA0]();
}

uint64_t UIPointerEffect.preview.getter()
{
  return MEMORY[0x1F4165AB8]();
}

uint64_t type metadata accessor for UIPointerEffect.TintMode()
{
  return MEMORY[0x1F4165AC0]();
}

uint64_t type metadata accessor for UIPointerEffect()
{
  return MEMORY[0x1F4165AC8]();
}

uint64_t type metadata accessor for UITraitOverrides()
{
  return MEMORY[0x1F4165AD8]();
}

uint64_t static UITraitDefinition.affectsColorAppearance.getter()
{
  return MEMORY[0x1F4165AF8]();
}

uint64_t static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F4165C00]();
}

uint64_t type metadata accessor for UICellConfigurationState()
{
  return MEMORY[0x1F4165C28]();
}

uint64_t UIBackgroundConfiguration.customView.getter()
{
  return MEMORY[0x1F4165C60]();
}

uint64_t UIBackgroundConfiguration.customView.setter()
{
  return MEMORY[0x1F4165C68]();
}

uint64_t UIBackgroundConfiguration.cornerRadius.setter()
{
  return MEMORY[0x1F4165CA0]();
}

uint64_t UIBackgroundConfiguration.visualEffect.setter()
{
  return MEMORY[0x1F4165CB0]();
}

uint64_t static UIBackgroundConfiguration.listPlainCell()()
{
  return MEMORY[0x1F4165CB8]();
}

uint64_t UIBackgroundConfiguration.backgroundColor.setter()
{
  return MEMORY[0x1F4165CC8]();
}

uint64_t static UIBackgroundConfiguration.listGroupedCell()()
{
  return MEMORY[0x1F4165CD0]();
}

uint64_t static UIBackgroundConfiguration.clear()()
{
  return MEMORY[0x1F4165D18]();
}

uint64_t type metadata accessor for UIBackgroundConfiguration()
{
  return MEMORY[0x1F4165D30]();
}

uint64_t static UIListContentConfiguration.groupedHeader()()
{
  return MEMORY[0x1F4165D80]();
}

uint64_t UIListContentConfiguration.TextProperties.adjustsFontForContentSizeCategory.setter()
{
  return MEMORY[0x1F4165D90]();
}

uint64_t UIListContentConfiguration.TextProperties.font.setter()
{
  return MEMORY[0x1F4165DE0]();
}

uint64_t UIListContentConfiguration.TextProperties.color.getter()
{
  return MEMORY[0x1F4165DE8]();
}

uint64_t UIListContentConfiguration.TextProperties.color.setter()
{
  return MEMORY[0x1F4165DF0]();
}

uint64_t type metadata accessor for UIListContentConfiguration.TextProperties()
{
  return MEMORY[0x1F4165E08]();
}

uint64_t UIListContentConfiguration.textProperties.modify()
{
  return MEMORY[0x1F4165E28]();
}

uint64_t UIListContentConfiguration.textProperties.getter()
{
  return MEMORY[0x1F4165E30]();
}

uint64_t UIListContentConfiguration.directionalLayoutMargins.setter()
{
  return MEMORY[0x1F4165ED8]();
}

uint64_t UIListContentConfiguration.text.setter()
{
  return MEMORY[0x1F4165F30]();
}

uint64_t type metadata accessor for UIListContentConfiguration()
{
  return MEMORY[0x1F4165F68]();
}

uint64_t NSDiffableDataSourceSnapshot.appendItems(_:toSection:)()
{
  return MEMORY[0x1F4165F80]();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.deleteItems(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.appendSections(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reloadSections(_:)(Swift::OpaquePointer a1)
{
}

uint64_t NSDiffableDataSourceSnapshot.itemIdentifiers.getter()
{
  return MEMORY[0x1F4166008]();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reconfigureItems(_:)(Swift::OpaquePointer a1)
{
}

uint64_t NSDiffableDataSourceSnapshot.sectionIdentifiers.getter()
{
  return MEMORY[0x1F4166028]();
}

uint64_t NSDiffableDataSourceSnapshot.reconfiguredItemIdentifiers.getter()
{
  return MEMORY[0x1F4166048]();
}

uint64_t NSDiffableDataSourceSnapshot.init()()
{
  return MEMORY[0x1F4166068]();
}

uint64_t UIListSeparatorConfiguration.topSeparatorInsets.setter()
{
  return MEMORY[0x1F4166088]();
}

uint64_t UIListSeparatorConfiguration.bottomSeparatorVisibility.setter()
{
  return MEMORY[0x1F4166090]();
}

uint64_t type metadata accessor for UIListSeparatorConfiguration.Visibility()
{
  return MEMORY[0x1F41660A8]();
}

uint64_t UIListSeparatorConfiguration.visualEffect.setter()
{
  return MEMORY[0x1F41660B0]();
}

uint64_t UIListSeparatorConfiguration.color.setter()
{
  return MEMORY[0x1F41660B8]();
}

uint64_t type metadata accessor for UIListSeparatorConfiguration()
{
  return MEMORY[0x1F41660C0]();
}

uint64_t type metadata accessor for UIConfigurationColorTransformer()
{
  return MEMORY[0x1F4166158]();
}

uint64_t UIConfigurationColorTransformer.init(_:)()
{
  return MEMORY[0x1F4166160]();
}

uint64_t UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)()
{
  return MEMORY[0x1F4166220]();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter()
{
  return MEMORY[0x1F4166230]();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)()
{
  return MEMORY[0x1F4166240]();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)()
{
  return MEMORY[0x1F4166248]();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)()
{
  return MEMORY[0x1F4166288]();
}

uint64_t UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)()
{
  return MEMORY[0x1F4166290]();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.snapshot()()
{
  return MEMORY[0x1F41662A8]();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)()
{
  return MEMORY[0x1F41662B0]();
}

uint64_t NSDiffableDataSourceSectionSnapshot.append(_:to:)()
{
  return MEMORY[0x1F41662F0]();
}

uint64_t NSDiffableDataSourceSectionSnapshot.init()()
{
  return MEMORY[0x1F4166310]();
}

uint64_t UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter()
{
  return MEMORY[0x1F4166328]();
}

uint64_t UICollectionLayoutListConfiguration.separatorConfiguration.modify()
{
  return MEMORY[0x1F4166330]();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.Appearance()
{
  return MEMORY[0x1F4166340]();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.FooterMode()
{
  return MEMORY[0x1F4166350]();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode()
{
  return MEMORY[0x1F4166360]();
}

uint64_t UICollectionLayoutListConfiguration.init(appearance:)()
{
  return MEMORY[0x1F4166368]();
}

uint64_t UICollectionLayoutListConfiguration.footerMode.setter()
{
  return MEMORY[0x1F4166378]();
}

uint64_t UICollectionLayoutListConfiguration.headerMode.setter()
{
  return MEMORY[0x1F4166388]();
}

uint64_t UICollectionLayoutListConfiguration.backgroundColor.setter()
{
  return MEMORY[0x1F4166398]();
}

uint64_t UICollectionLayoutListConfiguration.headerTopPadding.setter()
{
  return MEMORY[0x1F41663A8]();
}

uint64_t UICollectionLayoutListConfiguration.itemSeparatorHandler.setter()
{
  return MEMORY[0x1F41663B0]();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration()
{
  return MEMORY[0x1F41663E8]();
}

uint64_t type metadata accessor for UIConfigurationTextAttributesTransformer()
{
  return MEMORY[0x1F4166428]();
}

uint64_t UIConfigurationTextAttributesTransformer.init(_:)()
{
  return MEMORY[0x1F4166430]();
}

uint64_t Tip.invalidate(reason:)()
{
  return MEMORY[0x1F4102158]();
}

uint64_t Tip.shouldDisplay.getter()
{
  return MEMORY[0x1F4102160]();
}

uint64_t Tip.statusUpdates.getter()
{
  return MEMORY[0x1F4102168]();
}

uint64_t Tip.shouldDisplayUpdates.getter()
{
  return MEMORY[0x1F4102178]();
}

uint64_t Tip.id.getter()
{
  return MEMORY[0x1F4102188]();
}

uint64_t Tip.actions.getter()
{
  return MEMORY[0x1F41021D0]();
}

uint64_t Tip.options.getter()
{
  return MEMORY[0x1F41021F0]();
}

uint64_t TipUIPopoverViewController.popoverPresentationController.getter()
{
  return MEMORY[0x1F4102200]();
}

uint64_t type metadata accessor for TipUIPopoverViewController()
{
  return MEMORY[0x1F4102218]();
}

uint64_t TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)()
{
  return MEMORY[0x1F4102220]();
}

uint64_t TipView.init(_:arrowEdge:action:)()
{
  return MEMORY[0x1F4102228]();
}

uint64_t type metadata accessor for TipUIView()
{
  return MEMORY[0x1F4102250]();
}

uint64_t TipUIView.init(_:arrowEdge:actionHandler:)()
{
  return MEMORY[0x1F4102258]();
}

uint64_t static Tips.RuleBuilder.buildExpression(_:)()
{
  return MEMORY[0x1F4102290]();
}

uint64_t static Tips.RuleBuilder.buildPartialBlock(first:)()
{
  return MEMORY[0x1F41022C0]();
}

uint64_t type metadata accessor for Tips.InvalidationReason()
{
  return MEMORY[0x1F41023B8]();
}

uint64_t type metadata accessor for Tips.Rule()
{
  return MEMORY[0x1F4102490]();
}

uint64_t Tips.Rule.init<A>(_:_:)()
{
  return MEMORY[0x1F41024B0]();
}

uint64_t Tips.Event.sendDonation<>(_:)()
{
  return MEMORY[0x1F41024B8]();
}

uint64_t static Tips.Status.== infix(_:_:)()
{
  return MEMORY[0x1F4102528]();
}

uint64_t type metadata accessor for Tips.Status()
{
  return MEMORY[0x1F4102530]();
}

uint64_t Tips.Parameter.wrappedValue.getter()
{
  return MEMORY[0x1F4102560]();
}

uint64_t Tips.Parameter.wrappedValue.setter()
{
  return MEMORY[0x1F4102568]();
}

uint64_t Tips.Parameter.init<A>(_:_:_:_:)()
{
  return MEMORY[0x1F4102580]();
}

uint64_t static Tips.configure(_:)()
{
  return MEMORY[0x1F4102598]();
}

uint64_t Publishers.CombineLatest.init(_:_:)()
{
  return MEMORY[0x1F40D6618]();
}

uint64_t Publishers.Merge.init(_:_:)()
{
  return MEMORY[0x1F40D6790]();
}

uint64_t Publishers.MergeMany.merge(with:)()
{
  return MEMORY[0x1F40D6868]();
}

uint64_t dispatch thunk of Cancellable.cancel()()
{
  return MEMORY[0x1F40D68C8]();
}

uint64_t Cancellable.store(in:)()
{
  return MEMORY[0x1F40D68D0]();
}

uint64_t AnyCancellable.store(in:)()
{
  return MEMORY[0x1F40D6940]();
}

uint64_t AnyCancellable.store<A>(in:)()
{
  return MEMORY[0x1F40D6948]();
}

Swift::Void __swiftcall AnyCancellable.cancel()()
{
}

uint64_t type metadata accessor for AnyCancellable()
{
  return MEMORY[0x1F40D6960]();
}

uint64_t AnyCancellable.init(_:)()
{
  return MEMORY[0x1F40D6988]();
}

uint64_t AsyncPublisher.makeAsyncIterator()()
{
  return MEMORY[0x1F40D6990]();
}

uint64_t static ObservableObject.environmentStore.getter()
{
  return MEMORY[0x1F40F7D68]();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return MEMORY[0x1F40D69E0]();
}

uint64_t PassthroughSubject.send(_:)()
{
  return MEMORY[0x1F40D6A08]();
}

uint64_t PassthroughSubject.init()()
{
  return MEMORY[0x1F40D6A20]();
}

uint64_t CurrentValueSubject.send(_:)()
{
  return MEMORY[0x1F40D6A40]();
}

uint64_t CurrentValueSubject.value.getter()
{
  return MEMORY[0x1F40D6A50]();
}

uint64_t type metadata accessor for CurrentValueSubject()
{
  return MEMORY[0x1F40D6A68]();
}

uint64_t CurrentValueSubject.__allocating_init(_:)()
{
  return MEMORY[0x1F40D6A70]();
}

uint64_t CurrentValueSubject.init(_:)()
{
  return MEMORY[0x1F40D6A78]();
}

uint64_t ConnectablePublisher.autoconnect()()
{
  return MEMORY[0x1F40D6A80]();
}

uint64_t Just.init(_:)()
{
  return MEMORY[0x1F40D6B18]();
}

uint64_t Empty.init(completeImmediately:)()
{
  return MEMORY[0x1F40D6B20]();
}

uint64_t Subject<>.send()()
{
  return MEMORY[0x1F40D6B68]();
}

uint64_t Published.init(initialValue:)()
{
  return MEMORY[0x1F40D6B80]();
}

uint64_t Published.projectedValue.getter()
{
  return MEMORY[0x1F40D6B88]();
}

uint64_t Published.projectedValue.setter()
{
  return MEMORY[0x1F40D6B90]();
}

uint64_t static Published.subscript.modify()
{
  return MEMORY[0x1F40D6B98]();
}

uint64_t static Published.subscript.getter()
{
  return MEMORY[0x1F40D6BA0]();
}

uint64_t static Published.subscript.setter()
{
  return MEMORY[0x1F40D6BA8]();
}

uint64_t type metadata accessor for Published()
{
  return MEMORY[0x1F40D6BB8]();
}

uint64_t Publisher.eraseToAnyPublisher()()
{
  return MEMORY[0x1F40D6BD8]();
}

uint64_t Publisher.compactMap<A>(_:)()
{
  return MEMORY[0x1F40D6BE0]();
}

uint64_t Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)()
{
  return MEMORY[0x1F40D6BE8]();
}

uint64_t Publisher.combineLatest<A, B, C>(_:_:_:)()
{
  return MEMORY[0x1F40D6C08]();
}

uint64_t Publisher.combineLatest<A>(_:)()
{
  return MEMORY[0x1F40D6C10]();
}

uint64_t Publisher.removeDuplicates(by:)()
{
  return MEMORY[0x1F40D6C40]();
}

uint64_t Publisher.map<A>(_:)()
{
  return MEMORY[0x1F40D6C50]();
}

uint64_t Publisher.zip<A>(_:)()
{
  return MEMORY[0x1F40D6C70]();
}

uint64_t Publisher.delay<A>(for:tolerance:scheduler:options:)()
{
  return MEMORY[0x1F40D6CB0]();
}

uint64_t Publisher.merge<A>(with:)()
{
  return MEMORY[0x1F40D6CC8]();
}

uint64_t Publisher.merge(with:)()
{
  return MEMORY[0x1F40D6CD0]();
}

uint64_t Publisher.filter(_:)()
{
  return MEMORY[0x1F40D6D10]();
}

uint64_t Publisher.prepend(_:)()
{
  return MEMORY[0x1F40D6D68]();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return MEMORY[0x1F40D6D80]();
}

uint64_t Publisher.debounce<A>(for:scheduler:options:)()
{
  return MEMORY[0x1F40D6D90]();
}

uint64_t Publisher.throttle<A>(for:scheduler:latest:)()
{
  return MEMORY[0x1F40D6DA0]();
}

uint64_t Publisher.dropFirst(_:)()
{
  return MEMORY[0x1F40D6DB8]();
}

uint64_t Publisher<>.removeDuplicates()()
{
  return MEMORY[0x1F40D6DF0]();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return MEMORY[0x1F40D6E18]();
}

uint64_t Publisher<>.assign(to:)()
{
  return MEMORY[0x1F40D6E28]();
}

uint64_t Publisher<>.values.getter()
{
  return MEMORY[0x1F40D6E30]();
}

uint64_t Animatable<>.animatableData.modify()
{
  return MEMORY[0x1F40F7D88]();
}

uint64_t static ButtonRole.destructive.getter()
{
  return MEMORY[0x1F40F7E20]();
}

uint64_t static ButtonRole.cancel.getter()
{
  return MEMORY[0x1F40F7E30]();
}

uint64_t type metadata accessor for ButtonRole()
{
  return MEMORY[0x1F40F7E40]();
}

uint64_t EdgeInsets.init(_all:)()
{
  return MEMORY[0x1F40F7E80]();
}

uint64_t LazyVStack.init(alignment:spacing:pinnedViews:content:)()
{
  return MEMORY[0x1F40F7F20]();
}

uint64_t type metadata accessor for LazyVStack()
{
  return MEMORY[0x1F40F7F28]();
}

uint64_t type metadata accessor for ScrollView()
{
  return MEMORY[0x1F40F7F50]();
}

uint64_t ScrollView.init(_:showsIndicators:content:)()
{
  return MEMORY[0x1F40F7F60]();
}

uint64_t ShapeStyle<>.resolve(in:)()
{
  return MEMORY[0x1F40F7F98]();
}

uint64_t type metadata accessor for ColorScheme()
{
  return MEMORY[0x1F40F8050]();
}

uint64_t static ContentMode.== infix(_:_:)()
{
  return MEMORY[0x1F40F8058]();
}

uint64_t type metadata accessor for ControlSize()
{
  return MEMORY[0x1F40F8068]();
}

uint64_t DragGesture.init<A>(minimumDistance:coordinateSpace:)()
{
  return MEMORY[0x1F40F8070]();
}

uint64_t type metadata accessor for DragGesture()
{
  return MEMORY[0x1F40F8090]();
}

uint64_t type metadata accessor for Environment.Content()
{
  return MEMORY[0x1F40F80A0]();
}

uint64_t Environment.init<A>(_:)()
{
  return MEMORY[0x1F40F80D0]();
}

uint64_t static GestureMask.all.getter()
{
  return MEMORY[0x1F40F80D8]();
}

uint64_t StateObject.init(wrappedValue:)()
{
  return MEMORY[0x1F40F8100]();
}

uint64_t StateObject.wrappedValue.getter()
{
  return MEMORY[0x1F40F8108]();
}

uint64_t StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)()
{
  return MEMORY[0x1F40F8118]();
}

uint64_t Transaction.animationReason.setter()
{
  return MEMORY[0x1F40F8170]();
}

uint64_t Transaction.disablesAnimations.getter()
{
  return MEMORY[0x1F40F8178]();
}

uint64_t Transaction.disablesAnimations.setter()
{
  return MEMORY[0x1F40F8180]();
}

uint64_t Transaction.addAnimationCompletion(criteria:_:)()
{
  return MEMORY[0x1F40F8188]();
}

uint64_t Transaction.animationFrameInterval.setter()
{
  return MEMORY[0x1F40F8190]();
}

uint64_t Transaction.animation.setter()
{
  return MEMORY[0x1F40F81A0]();
}

uint64_t ViewSpacing.distance(to:along:)()
{
  return MEMORY[0x1F40F81C0]();
}

uint64_t type metadata accessor for ViewSpacing()
{
  return MEMORY[0x1F40F81C8]();
}

uint64_t type metadata accessor for _ClipEffect()
{
  return MEMORY[0x1F40F81D8]();
}

uint64_t type metadata accessor for _LayoutRoot()
{
  return MEMORY[0x1F40F81E0]();
}

uint64_t _LayoutRoot.init(_:)()
{
  return MEMORY[0x1F40F81E8]();
}

uint64_t type metadata accessor for _ShadowView()
{
  return MEMORY[0x1F40F81F8]();
}

uint64_t ProgressView.init<A>(value:total:)()
{
  return MEMORY[0x1F40F8278]();
}

uint64_t static ViewModifier._viewListCount(inputs:body:)()
{
  return MEMORY[0x1F40F8378]();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return MEMORY[0x1F40F83E0]();
}

uint64_t AnyShapeStyle.init<A>(_:)()
{
  return MEMORY[0x1F40F83F0]();
}

uint64_t AnyTransition.init<A>(_:)()
{
  return MEMORY[0x1F40F8460]();
}

Swift::Void __swiftcall DismissAction.callAsFunction()()
{
}

uint64_t type metadata accessor for DismissAction()
{
  return MEMORY[0x1F40F8488]();
}

uint64_t GeometryProxy.safeAreaInsets.getter()
{
  return MEMORY[0x1F40F84A0]();
}

uint64_t GeometryProxy.size.getter()
{
  return MEMORY[0x1F40F84B8]();
}

uint64_t GeometryProxy.frame<A>(in:)()
{
  return MEMORY[0x1F40F84C8]();
}

uint64_t type metadata accessor for GeometryProxy()
{
  return MEMORY[0x1F40F84E8]();
}

uint64_t GeometryProxy.subscript.getter()
{
  return MEMORY[0x1F40F84F0]();
}

uint64_t LayoutSubview.sizeThatFits(_:)()
{
  return MEMORY[0x1F40F8550]();
}

uint64_t LayoutSubview.place(at:anchor:proposal:)()
{
  return MEMORY[0x1F40F8560]();
}

uint64_t LayoutSubview.spacing.getter()
{
  return MEMORY[0x1F40F8568]();
}

uint64_t type metadata accessor for LayoutSubview()
{
  return MEMORY[0x1F40F8578]();
}

uint64_t LayoutSubview.subscript.getter()
{
  return MEMORY[0x1F40F8580]();
}

uint64_t static PreferenceKey._includesRemovedValues.getter()
{
  return MEMORY[0x1F40F85D8]();
}

uint64_t type metadata accessor for _TaskModifier()
{
  return MEMORY[0x1F40F8618]();
}

uint64_t type metadata accessor for _VariadicView.Tree()
{
  return MEMORY[0x1F40F8630]();
}

uint64_t _VariadicView.Tree.init(_:content:)()
{
  return MEMORY[0x1F40F8638]();
}

uint64_t withAnimation<A>(_:_:)()
{
  return MEMORY[0x1F40F8650]();
}

uint64_t GeometryReader.init(content:)()
{
  return MEMORY[0x1F40F86E0]();
}

uint64_t type metadata accessor for GeometryReader()
{
  return MEMORY[0x1F40F86E8]();
}

uint64_t type metadata accessor for LayoutSubviews()
{
  return MEMORY[0x1F40F8728]();
}

uint64_t LayoutSubviews.subscript.getter()
{
  return MEMORY[0x1F40F8738]();
}

uint64_t LinearGradient.init(gradient:startPoint:endPoint:)()
{
  return MEMORY[0x1F40F8748]();
}

uint64_t MoveTransition.init(edge:)()
{
  return MEMORY[0x1F40F8758]();
}

uint64_t type metadata accessor for MoveTransition()
{
  return MEMORY[0x1F40F8760]();
}

uint64_t NavigationLink<>.init<A>(value:label:)()
{
  return MEMORY[0x1F40F8790]();
}

Swift::Void __swiftcall NavigationPath.removeLast(_:)(Swift::Int a1)
{
}

uint64_t NavigationPath.init()()
{
  return MEMORY[0x1F40F87C8]();
}

uint64_t type metadata accessor for NavigationPath()
{
  return MEMORY[0x1F40F87D0]();
}

uint64_t ObservedObject.init(wrappedValue:)()
{
  return MEMORY[0x1F40F87F0]();
}

uint64_t ObservedObject.projectedValue.getter()
{
  return MEMORY[0x1F40F8808]();
}

uint64_t ObservedObject.Wrapper.subscript.getter()
{
  return MEMORY[0x1F40F8818]();
}

uint64_t TintShapeStyle.init()()
{
  return MEMORY[0x1F40F88E0]();
}

uint64_t type metadata accessor for TintShapeStyle()
{
  return MEMORY[0x1F40F88E8]();
}

uint64_t ViewDimensions.height.getter()
{
  return MEMORY[0x1F40F8910]();
}

uint64_t ViewDimensions.subscript.getter()
{
  return MEMORY[0x1F40F8920]();
}

uint64_t _UIHostingView.init(rootView:)()
{
  return MEMORY[0x1F40F8960]();
}

uint64_t ButtonMenuStyle.init()()
{
  return MEMORY[0x1F40F89C0]();
}

uint64_t type metadata accessor for ButtonMenuStyle()
{
  return MEMORY[0x1F40F89C8]();
}

uint64_t static DynamicTypeSize.< infix(_:_:)()
{
  return MEMORY[0x1F40F8A10]();
}

uint64_t type metadata accessor for DynamicTypeSize()
{
  return MEMORY[0x1F40F8A28]();
}

uint64_t GraphicsContext.withCGContext(content:)()
{
  return MEMORY[0x1F40F8A50]();
}

uint64_t type metadata accessor for LayoutDirection()
{
  return MEMORY[0x1F40F8AF0]();
}

uint64_t type metadata accessor for ModifiedContent()
{
  return MEMORY[0x1F40F8C00]();
}

uint64_t NavigationStack.init<>(path:root:)()
{
  return MEMORY[0x1F40F8C08]();
}

uint64_t static SafeAreaRegions.all.getter()
{
  return MEMORY[0x1F40F8C58]();
}

uint64_t static SafeAreaRegions.keyboard.getter()
{
  return MEMORY[0x1F40F8C60]();
}

uint64_t ScrollViewProxy.scrollTo<A>(_:anchor:)()
{
  return MEMORY[0x1F40F8C78]();
}

uint64_t type metadata accessor for ScrollViewProxy()
{
  return MEMORY[0x1F40F8C80]();
}

uint64_t static SensoryFeedback.error.getter()
{
  return MEMORY[0x1F40F8C88]();
}

uint64_t type metadata accessor for SensoryFeedback()
{
  return MEMORY[0x1F40F8C98]();
}

uint64_t TransitionPhase.isIdentity.getter()
{
  return MEMORY[0x1F40F8CB8]();
}

uint64_t static ClarityUIMetrics.standardSpacing.getter()
{
  return MEMORY[0x1F40F8CF8]();
}

uint64_t static ClarityUIMetrics.buttonShadowOffset.getter()
{
  return MEMORY[0x1F40F8D08]();
}

uint64_t static ClarityUIMetrics.componentCornerRadius.getter()
{
  return MEMORY[0x1F40F8D18]();
}

uint64_t static ClarityUIMetrics.componentHorizontalPadding.getter()
{
  return MEMORY[0x1F40F8D28]();
}

uint64_t PlainButtonStyle.init()()
{
  return MEMORY[0x1F40F8DE8]();
}

uint64_t type metadata accessor for PlainButtonStyle()
{
  return MEMORY[0x1F40F8DF0]();
}

uint64_t static ProposedViewSize.unspecified.getter()
{
  return MEMORY[0x1F40F8E18]();
}

uint64_t static ProposedViewSize.== infix(_:_:)()
{
  return MEMORY[0x1F40F8E28]();
}

uint64_t static RedactionReasons.placeholder.getter()
{
  return MEMORY[0x1F40F8E38]();
}

uint64_t static RedactionReasons.privacy.getter()
{
  return MEMORY[0x1F40F8E50]();
}

uint64_t type metadata accessor for RedactionReasons()
{
  return MEMORY[0x1F40F8E70]();
}

uint64_t type metadata accessor for RoundedRectangle()
{
  return MEMORY[0x1F40F8EA0]();
}

uint64_t ScrollViewReader.init(content:)()
{
  return MEMORY[0x1F40F8EB8]();
}

uint64_t type metadata accessor for ScrollViewReader()
{
  return MEMORY[0x1F40F8EC0]();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return MEMORY[0x1F40F8F50]();
}

uint64_t type metadata accessor for _OverlayModifier()
{
  return MEMORY[0x1F40F8F68]();
}

uint64_t static ButtonBorderShape.capsule.getter()
{
  return MEMORY[0x1F40F8F88]();
}

uint64_t type metadata accessor for ButtonBorderShape()
{
  return MEMORY[0x1F40F8F98]();
}

uint64_t EnvironmentObject.error()()
{
  return MEMORY[0x1F40F90C8]();
}

uint64_t EnvironmentObject.init()()
{
  return MEMORY[0x1F40F90E0]();
}

uint64_t EnvironmentValues.imageScale.getter()
{
  return MEMORY[0x1F40F9100]();
}

uint64_t EnvironmentValues.imageScale.setter()
{
  return MEMORY[0x1F40F9110]();
}

uint64_t EnvironmentValues.accentColor.getter()
{
  return MEMORY[0x1F40F9128]();
}

uint64_t EnvironmentValues.accentColor.setter()
{
  return MEMORY[0x1F40F9130]();
}

uint64_t EnvironmentValues.colorScheme.getter()
{
  return MEMORY[0x1F40F9138]();
}

uint64_t EnvironmentValues.colorScheme.setter()
{
  return MEMORY[0x1F40F9150]();
}

uint64_t EnvironmentValues.controlSize.getter()
{
  return MEMORY[0x1F40F9160]();
}

uint64_t EnvironmentValues.controlSize.setter()
{
  return MEMORY[0x1F40F9168]();
}

uint64_t EnvironmentValues.sizeCategory.getter()
{
  return MEMORY[0x1F40F9208]();
}

uint64_t EnvironmentValues.sizeCategory.setter()
{
  return MEMORY[0x1F40F9210]();
}

uint64_t EnvironmentValues.truncationMode.getter()
{
  return MEMORY[0x1F40F9248]();
}

uint64_t EnvironmentValues.dynamicTypeSize.getter()
{
  return MEMORY[0x1F40F9268]();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return MEMORY[0x1F40F9280]();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return MEMORY[0x1F40F9298]();
}

uint64_t EnvironmentValues.layoutDirection.getter()
{
  return MEMORY[0x1F40F92A8]();
}

uint64_t EnvironmentValues.layoutDirection.setter()
{
  return MEMORY[0x1F40F92B8]();
}

uint64_t EnvironmentValues.redactionReasons.getter()
{
  return MEMORY[0x1F40F9320]();
}

uint64_t EnvironmentValues.redactionReasons.setter()
{
  return MEMORY[0x1F40F9328]();
}

uint64_t EnvironmentValues.verticalSizeClass.getter()
{
  return MEMORY[0x1F40F9360]();
}

uint64_t EnvironmentValues.verticalSizeClass.setter()
{
  return MEMORY[0x1F40F9370]();
}

uint64_t EnvironmentValues._buttonBorderShape.getter()
{
  return MEMORY[0x1F40F9378]();
}

uint64_t EnvironmentValues._buttonBorderShape.setter()
{
  return MEMORY[0x1F40F9380]();
}

uint64_t EnvironmentValues.backgroundMaterial.getter()
{
  return MEMORY[0x1F40F9388]();
}

uint64_t EnvironmentValues.backgroundMaterial.setter()
{
  return MEMORY[0x1F40F9390]();
}

uint64_t EnvironmentValues.horizontalSizeClass.getter()
{
  return MEMORY[0x1F40F93E8]();
}

uint64_t EnvironmentValues.horizontalSizeClass.setter()
{
  return MEMORY[0x1F40F93F0]();
}

uint64_t EnvironmentValues.symbolRenderingMode.getter()
{
  return MEMORY[0x1F40F9400]();
}

uint64_t EnvironmentValues.symbolRenderingMode.setter()
{
  return MEMORY[0x1F40F9410]();
}

uint64_t EnvironmentValues.multimodalListLayout.getter()
{
  return MEMORY[0x1F40F9450]();
}

uint64_t EnvironmentValues.multilineTextAlignment.getter()
{
  return MEMORY[0x1F40F9470]();
}

uint64_t EnvironmentValues.multilineTextAlignment.setter()
{
  return MEMORY[0x1F40F9480]();
}

uint64_t EnvironmentValues.menuIndicatorVisibility.getter()
{
  return MEMORY[0x1F40F94A0]();
}

uint64_t EnvironmentValues.menuIndicatorVisibility.setter()
{
  return MEMORY[0x1F40F94A8]();
}

uint64_t EnvironmentValues.accessibilityVoiceOverEnabled.getter()
{
  return MEMORY[0x1F40F9508]();
}

uint64_t EnvironmentValues.accessibilityReduceTransparency.getter()
{
  return MEMORY[0x1F40F9510]();
}

uint64_t EnvironmentValues.font.getter()
{
  return MEMORY[0x1F40F9550]();
}

uint64_t EnvironmentValues.font.setter()
{
  return MEMORY[0x1F40F9568]();
}

uint64_t EnvironmentValues.tint.getter()
{
  return MEMORY[0x1F40F9570]();
}

uint64_t EnvironmentValues.tint.setter()
{
  return MEMORY[0x1F40F9588]();
}

uint64_t EnvironmentValues.dismiss.getter()
{
  return MEMORY[0x1F40F95B8]();
}

uint64_t EnvironmentValues.isEnabled.getter()
{
  return MEMORY[0x1F40F9648]();
}

uint64_t EnvironmentValues.isEnabled.setter()
{
  return MEMORY[0x1F40F9658]();
}

uint64_t EnvironmentValues.lineLimit.getter()
{
  return MEMORY[0x1F40F9660]();
}

uint64_t EnvironmentValues.lineLimit.setter()
{
  return MEMORY[0x1F40F9670]();
}

uint64_t EnvironmentValues.tintColor.getter()
{
  return MEMORY[0x1F40F9688]();
}

uint64_t EnvironmentValues.tintColor.setter()
{
  return MEMORY[0x1F40F9690]();
}

uint64_t EnvironmentValues.init()()
{
  return MEMORY[0x1F40F96C8]();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return MEMORY[0x1F40F96D8]();
}

uint64_t EnvironmentValues.subscript.getter()
{
  return MEMORY[0x1F40F96E0]();
}

{
  return MEMORY[0x1F40F96F8]();
}

uint64_t EnvironmentValues.subscript.setter()
{
  return MEMORY[0x1F40F96E8]();
}

{
  return MEMORY[0x1F40F9708]();
}

uint64_t type metadata accessor for PlatterButtonType()
{
  return MEMORY[0x1F40F9800]();
}

uint64_t static VerticalAlignment.lastTextBaseline.getter()
{
  return MEMORY[0x1F40F9878]();
}

uint64_t static VerticalAlignment.firstTextBaseline.getter()
{
  return MEMORY[0x1F40F9888]();
}

uint64_t static VerticalAlignment.== infix(_:_:)()
{
  return MEMORY[0x1F40F9898]();
}

uint64_t static VerticalAlignment.top.getter()
{
  return MEMORY[0x1F40F98A0]();
}

uint64_t static VerticalAlignment.bottom.getter()
{
  return MEMORY[0x1F40F98B8]();
}

uint64_t static VerticalAlignment.center.getter()
{
  return MEMORY[0x1F40F98C0]();
}

uint64_t type metadata accessor for ColorRenderingMode()
{
  return MEMORY[0x1F40F99C8]();
}

uint64_t IconOnlyLabelStyle.init()()
{
  return MEMORY[0x1F40F9A18]();
}

uint64_t type metadata accessor for IconOnlyLabelStyle()
{
  return MEMORY[0x1F40F9A20]();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return MEMORY[0x1F40F9AD0]();
}

uint64_t static PresentationDetent.height(_:)()
{
  return MEMORY[0x1F40F9B28]();
}

uint64_t type metadata accessor for PresentationDetent()
{
  return MEMORY[0x1F40F9B40]();
}

uint64_t static RoundedCornerStyle.== infix(_:_:)()
{
  return MEMORY[0x1F40F9B58]();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return MEMORY[0x1F40F9B68]();
}

uint64_t type metadata accessor for _AnimationModifier()
{
  return MEMORY[0x1F40F9B78]();
}

uint64_t ContentSizeCategory.isAccessibilityCategory.getter()
{
  return MEMORY[0x1F40F9C80]();
}

uint64_t type metadata accessor for ContentSizeCategory()
{
  return MEMORY[0x1F40F9C98]();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return MEMORY[0x1F40F9CD8]();
}

uint64_t static HorizontalAlignment.leading.getter()
{
  return MEMORY[0x1F40F9CE8]();
}

uint64_t type metadata accessor for MultimodalListStyle.Layout()
{
  return MEMORY[0x1F40F9D10]();
}

uint64_t static SymbolRenderingMode.monochrome.getter()
{
  return MEMORY[0x1F40F9D60]();
}

uint64_t static SymbolRenderingMode.hierarchical.getter()
{
  return MEMORY[0x1F40F9D78]();
}

uint64_t type metadata accessor for SymbolRenderingMode()
{
  return MEMORY[0x1F40F9D98]();
}

uint64_t TitleOnlyLabelStyle.init()()
{
  return MEMORY[0x1F40F9DA8]();
}

uint64_t type metadata accessor for TitleOnlyLabelStyle()
{
  return MEMORY[0x1F40F9DC0]();
}

uint64_t dispatch thunk of UIHostingController.sizingOptions.setter()
{
  return MEMORY[0x1F40F9DE0]();
}

uint64_t UIHostingController.safeAreaRegions.setter()
{
  return MEMORY[0x1F40F9DE8]();
}

uint64_t UIHostingController.init(coder:rootView:)()
{
  return MEMORY[0x1F40F9E00]();
}

uint64_t UIHostingController.init(rootView:)()
{
  return MEMORY[0x1F40F9E10]();
}

uint64_t UIViewRepresentable.sizeThatFits(_:uiView:context:)()
{
  return MEMORY[0x1F40F9E70]();
}

uint64_t UIViewRepresentable.body.getter()
{
  return MEMORY[0x1F40F9EE0]();
}

uint64_t type metadata accessor for _BackgroundModifier()
{
  return MEMORY[0x1F40F9F88]();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return MEMORY[0x1F40F9FA8]();
}

uint64_t type metadata accessor for _ConditionalContent()
{
  return MEMORY[0x1F40F9FB8]();
}

uint64_t type metadata accessor for LocalCoordinateSpace()
{
  return MEMORY[0x1F40FA080]();
}

uint64_t type metadata accessor for NamedCoordinateSpace()
{
  return MEMORY[0x1F40FA090]();
}

uint64_t withBridgedAnimation<A>(_:_:completion:)()
{
  return MEMORY[0x1F40FA1F0]();
}

uint64_t withBridgedAnimation<A>(_:_:)()
{
  return MEMORY[0x1F40FA1F8]();
}

uint64_t BorderlessButtonStyle.init()()
{
  return MEMORY[0x1F40FA220]();
}

uint64_t type metadata accessor for BorderlessButtonStyle()
{
  return MEMORY[0x1F40FA230]();
}

uint64_t type metadata accessor for GlobalCoordinateSpace()
{
  return MEMORY[0x1F40FA278]();
}

uint64_t type metadata accessor for PinnedScrollableViews()
{
  return MEMORY[0x1F40FA2C0]();
}

uint64_t type metadata accessor for _ViewModifier_Content()
{
  return MEMORY[0x1F40FA350]();
}

uint64_t static HierarchicalShapeStyle.quaternary.getter()
{
  return MEMORY[0x1F40FA390]();
}

uint64_t static HierarchicalShapeStyle.primary.getter()
{
  return MEMORY[0x1F40FA3A0]();
}

uint64_t static HierarchicalShapeStyle.tertiary.getter()
{
  return MEMORY[0x1F40FA3A8]();
}

uint64_t static HierarchicalShapeStyle.secondary.getter()
{
  return MEMORY[0x1F40FA3B8]();
}

uint64_t type metadata accessor for MenuStyleConfiguration()
{
  return MEMORY[0x1F40FA3C8]();
}

uint64_t PlatterButtonStyleView.init(configuration:background:foregroundColor:type:includesPadding:)()
{
  return MEMORY[0x1F40FA3E0]();
}

uint64_t PlatterShadowedContent.init(shape:isPressed:content:)()
{
  return MEMORY[0x1F40FA3E8]();
}

uint64_t type metadata accessor for PlatterShadowedContent()
{
  return MEMORY[0x1F40FA3F0]();
}

uint64_t UIHostingConfiguration<>.init(content:)()
{
  return MEMORY[0x1F40FA450]();
}

uint64_t type metadata accessor for UserInterfaceSizeClass()
{
  return MEMORY[0x1F40FA470]();
}

uint64_t static AccessibilityActionKind.escape.getter()
{
  return MEMORY[0x1F40FA510]();
}

uint64_t type metadata accessor for AccessibilityActionKind()
{
  return MEMORY[0x1F40FA528]();
}

uint64_t AccessibilityFocusState.wrappedValue.getter()
{
  return MEMORY[0x1F40FA530]();
}

uint64_t AccessibilityFocusState.wrappedValue.setter()
{
  return MEMORY[0x1F40FA538]();
}

uint64_t AccessibilityFocusState.projectedValue.getter()
{
  return MEMORY[0x1F40FA540]();
}

uint64_t AccessibilityFocusState.init<>()()
{
  return MEMORY[0x1F40FA548]();
}

uint64_t type metadata accessor for AccessibilityFocusState()
{
  return MEMORY[0x1F40FA550]();
}

uint64_t static CoordinateSpaceProtocol<>.local.getter()
{
  return MEMORY[0x1F40FA558]();
}

uint64_t static CoordinateSpaceProtocol<>.named<A>(_:)()
{
  return MEMORY[0x1F40FA568]();
}

uint64_t static CoordinateSpaceProtocol<>.global.getter()
{
  return MEMORY[0x1F40FA580]();
}

uint64_t type metadata accessor for ButtonStyleConfiguration.Label()
{
  return MEMORY[0x1F40FA690]();
}

uint64_t ButtonStyleConfiguration.label.getter()
{
  return MEMORY[0x1F40FA6A0]();
}

uint64_t ButtonStyleConfiguration.isPressed.getter()
{
  return MEMORY[0x1F40FA6B8]();
}

uint64_t type metadata accessor for ButtonStyleConfiguration()
{
  return MEMORY[0x1F40FA6C0]();
}

uint64_t type metadata accessor for _BackgroundShapeModifier()
{
  return MEMORY[0x1F40FA740]();
}

uint64_t type metadata accessor for _BackgroundStyleModifier()
{
  return MEMORY[0x1F40FA748]();
}

uint64_t type metadata accessor for AccessibilityTechnologies()
{
  return MEMORY[0x1F40FA768]();
}

uint64_t BorderlessButtonMenuStyle.init()()
{
  return MEMORY[0x1F40FA780]();
}

uint64_t type metadata accessor for BorderlessButtonMenuStyle()
{
  return MEMORY[0x1F40FA788]();
}

uint64_t static AccessibilityChildBehavior.ignore.getter()
{
  return MEMORY[0x1F40FA860]();
}

uint64_t static AccessibilityChildBehavior.combine.getter()
{
  return MEMORY[0x1F40FA868]();
}

uint64_t static AccessibilityChildBehavior.contain.getter()
{
  return MEMORY[0x1F40FA878]();
}

uint64_t type metadata accessor for AccessibilityChildBehavior()
{
  return MEMORY[0x1F40FA880]();
}

uint64_t UIViewRepresentableContext.environment.getter()
{
  return MEMORY[0x1F40FA8C8]();
}

uint64_t static AnimationCompletionCriteria.logicallyComplete.getter()
{
  return MEMORY[0x1F40FA908]();
}

uint64_t type metadata accessor for AnimationCompletionCriteria()
{
  return MEMORY[0x1F40FA918]();
}

uint64_t BorderedProminentButtonStyle.init()()
{
  return MEMORY[0x1F40FAAA8]();
}

uint64_t type metadata accessor for BorderedProminentButtonStyle()
{
  return MEMORY[0x1F40FAAC0]();
}

uint64_t UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)()
{
  return MEMORY[0x1F40FAB18]();
}

uint64_t UIViewControllerRepresentable.body.getter()
{
  return MEMORY[0x1F40FAB58]();
}

uint64_t type metadata accessor for AccessibilityAttachmentModifier()
{
  return MEMORY[0x1F40FABE8]();
}

uint64_t static UIHostingControllerSizingOptions.intrinsicContentSize.getter()
{
  return MEMORY[0x1F40FAC40]();
}

uint64_t static UIHostingControllerSizingOptions.preferredContentSize.getter()
{
  return MEMORY[0x1F40FAC48]();
}

uint64_t type metadata accessor for UIHostingControllerSizingOptions()
{
  return MEMORY[0x1F40FAC50]();
}

uint64_t type metadata accessor for PrimitiveButtonStyleConfiguration.Label()
{
  return MEMORY[0x1F40FAC80]();
}

uint64_t PrimitiveButtonStyleConfiguration.label.getter()
{
  return MEMORY[0x1F40FAC88]();
}

Swift::Void __swiftcall PrimitiveButtonStyleConfiguration.trigger()()
{
}

uint64_t type metadata accessor for PrimitiveButtonStyleConfiguration()
{
  return MEMORY[0x1F40FAC98]();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return MEMORY[0x1F40FAD68]();
}

uint64_t static Axis.Set.horizontal.getter()
{
  return MEMORY[0x1F40FAD78]();
}

uint64_t Axis.Set.init(rawValue:)()
{
  return MEMORY[0x1F40FAD88]();
}

uint64_t static Axis.Set.vertical.getter()
{
  return MEMORY[0x1F40FAD98]();
}

uint64_t Axis.rawValue.getter()
{
  return MEMORY[0x1F40FADA8]();
}

uint64_t static Edge.Set.horizontal.getter()
{
  return MEMORY[0x1F40FADB8]();
}

uint64_t static Edge.Set.all.getter()
{
  return MEMORY[0x1F40FADC0]();
}

uint64_t static Edge.Set.top.getter()
{
  return MEMORY[0x1F40FADD8]();
}

uint64_t static Edge.Set.bottom.getter()
{
  return MEMORY[0x1F40FADE0]();
}

uint64_t static Edge.Set.leading.getter()
{
  return MEMORY[0x1F40FADF8]();
}

uint64_t Edge.Set.init(rawValue:)()
{
  return MEMORY[0x1F40FAE00]();
}

uint64_t static Edge.Set.trailing.getter()
{
  return MEMORY[0x1F40FAE18]();
}

uint64_t static Edge.Set.vertical.getter()
{
  return MEMORY[0x1F40FAE28]();
}

uint64_t Edge.rawValue.getter()
{
  return MEMORY[0x1F40FAE38]();
}

uint64_t static Font.largeTitle.getter()
{
  return MEMORY[0x1F40FAE58]();
}

uint64_t static Font.subheadline.getter()
{
  return MEMORY[0x1F40FAE68]();
}

uint64_t static Font.body.getter()
{
  return MEMORY[0x1F40FAF00]();
}

uint64_t Font.bold()()
{
  return MEMORY[0x1F40FAF08]();
}

uint64_t static Font.title.getter()
{
  return MEMORY[0x1F40FAF48]();
}

uint64_t type metadata accessor for Font.Design()
{
  return MEMORY[0x1F40FAF60]();
}

uint64_t static Font.Weight.bold.getter()
{
  return MEMORY[0x1F40FAF80]();
}

uint64_t static Font.Weight.medium.getter()
{
  return MEMORY[0x1F40FAFE0]();
}

uint64_t static Font.Weight.regular.getter()
{
  return MEMORY[0x1F40FAFF0]();
}

uint64_t static Font.Weight.semibold.getter()
{
  return MEMORY[0x1F40FB000]();
}

uint64_t static Font.system(size:weight:design:)()
{
  return MEMORY[0x1F40FB038]();
}

uint64_t static Font.system(_:design:weight:)()
{
  return MEMORY[0x1F40FB050]();
}

uint64_t static Font.title2.getter()
{
  return MEMORY[0x1F40FB068]();
}

uint64_t static Font.title3.getter()
{
  return MEMORY[0x1F40FB078]();
}

uint64_t Font.weight(_:)()
{
  return MEMORY[0x1F40FB088]();
}

uint64_t type metadata accessor for Font.Leading()
{
  return MEMORY[0x1F40FB0C8]();
}

uint64_t static Font.callout.getter()
{
  return MEMORY[0x1F40FB0D0]();
}

uint64_t static Font.caption.getter()
{
  return MEMORY[0x1F40FB0E8]();
}

uint64_t Font.leading(_:)()
{
  return MEMORY[0x1F40FB0F8]();
}

uint64_t static Font.caption2.getter()
{
  return MEMORY[0x1F40FB108]();
}

uint64_t static Font.footnote.getter()
{
  return MEMORY[0x1F40FB120]();
}

uint64_t static Font.headline.getter()
{
  return MEMORY[0x1F40FB130]();
}

uint64_t type metadata accessor for Font.TextStyle()
{
  return MEMORY[0x1F40FB148]();
}

uint64_t Font.init(_:)()
{
  return MEMORY[0x1F40FB180]();
}

uint64_t List<>.init(content:)()
{
  return MEMORY[0x1F40FB1E0]();
}

uint64_t Menu.init(content:label:)()
{
  return MEMORY[0x1F40FB1F8]();
}

uint64_t Menu<>.init(_:)()
{
  return MEMORY[0x1F40FB200]();
}

uint64_t type metadata accessor for Menu()
{
  return MEMORY[0x1F40FB208]();
}

Swift::Void __swiftcall Path.addEllipse(in:transform:)(__C::CGRect in, CGAffineTransform *transform)
{
}

uint64_t Path.addRoundedRect(in:cornerSize:style:transform:)()
{
  return MEMORY[0x1F40FB270]();
}

Swift::Void __swiftcall Path.move(to:)(CGPoint to)
{
  MEMORY[0x1F40FB280]((__n128)__PAIR128__(v1, *(unint64_t *)&to.x), (__n128)__PAIR128__(v2, *(unint64_t *)&to.y));
}

uint64_t Path.addArc(center:radius:startAngle:endAngle:clockwise:transform:)()
{
  return MEMORY[0x1F40FB290]();
}

Swift::Void __swiftcall Path.addLine(to:)(CGPoint to)
{
  MEMORY[0x1F40FB2A0]((__n128)__PAIR128__(v1, *(unint64_t *)&to.x), (__n128)__PAIR128__(v2, *(unint64_t *)&to.y));
}

uint64_t Path.init(_:)()
{
  return MEMORY[0x1F40FB2E8]();
}

{
  return MEMORY[0x1F40FB2F0]();
}

uint64_t Text.fontWeight(_:)()
{
  return MEMORY[0x1F40FB310]();
}

uint64_t type metadata accessor for Text.TruncationMode()
{
  return MEMORY[0x1F40FB3A0]();
}

uint64_t Text.foregroundColor(_:)()
{
  return MEMORY[0x1F40FB3B0]();
}

uint64_t Text.foregroundStyle<A>(_:)()
{
  return MEMORY[0x1F40FB3C0]();
}

uint64_t Text.font(_:)()
{
  return MEMORY[0x1F40FB460]();
}

uint64_t static Text.LineStyle.Pattern.solid.getter()
{
  return MEMORY[0x1F40FB4F8]();
}

uint64_t type metadata accessor for Text.LineStyle.Pattern()
{
  return MEMORY[0x1F40FB500]();
}

uint64_t Text.LineStyle.init(pattern:color:)()
{
  return MEMORY[0x1F40FB510]();
}

uint64_t type metadata accessor for Text.LineStyle()
{
  return MEMORY[0x1F40FB518]();
}

uint64_t Text.init(_:)()
{
  return MEMORY[0x1F40FB568]();
}

uint64_t Text.init<A>(_:)()
{
  return MEMORY[0x1F40FB580]();
}

uint64_t View.navigationTitle(_:)()
{
  return MEMORY[0x1F4112C10]();
}

uint64_t View.acceptsFirstMouse()()
{
  return MEMORY[0x1F4112C18]();
}

uint64_t View.background<A>(alignment:content:)()
{
  return MEMORY[0x1F40FB608]();
}

uint64_t View.background<A>(_:ignoresSafeAreaEdges:)()
{
  return MEMORY[0x1F40FB610]();
}

uint64_t View.background<A, B>(_:in:fillStyle:)()
{
  return MEMORY[0x1F40FB618]();
}

uint64_t View.background<A>(_:alignment:)()
{
  return MEMORY[0x1F40FB628]();
}

uint64_t View.fontWeight(_:)()
{
  return MEMORY[0x1F40FB648]();
}

uint64_t View.labelStyle<A>(_:)()
{
  return MEMORY[0x1F40FB660]();
}

uint64_t View.transition(_:)()
{
  return MEMORY[0x1F40FB698]();
}

uint64_t View.buttonStyle<A>(_:)()
{
  return MEMORY[0x1F40FB6C8]();
}

{
  return MEMORY[0x1F40FB6E0]();
}

uint64_t View.environment<A>(_:)()
{
  return MEMORY[0x1F40FB710]();
}

uint64_t View.environment<A>(_:_:)()
{
  return MEMORY[0x1F40FB720]();
}

uint64_t View.layoutValue<A>(key:value:)()
{
  return MEMORY[0x1F40FB738]();
}

uint64_t View.scaleEffect(_:anchor:)()
{
  return MEMORY[0x1F40FB7A8]();
}

uint64_t View._colorMatrix(_:)()
{
  return MEMORY[0x1F40FB7F8]();
}

uint64_t View.onTapGesture(count:perform:)()
{
  return MEMORY[0x1F40FB850]();
}

uint64_t View.accessibility(hidden:)()
{
  return MEMORY[0x1F40FB8B0]();
}

uint64_t static View._viewListCount(inputs:)()
{
  return MEMORY[0x1F40FB920]();
}

uint64_t View.foregroundColor(_:)()
{
  return MEMORY[0x1F40FB9E8]();
}

uint64_t View.ignoresSafeArea(_:edges:)()
{
  return MEMORY[0x1F40FBA30]();
}

uint64_t View.navigationTitle<A, B>(_:icon:)()
{
  return MEMORY[0x1F40FBA48]();
}

uint64_t View.sensoryFeedback<A>(_:trigger:condition:)()
{
  return MEMORY[0x1F40FBA68]();
}

uint64_t View.anchorPreference<A, B>(key:value:transform:)()
{
  return MEMORY[0x1F40FBA80]();
}

uint64_t View.privacySensitive(_:)()
{
  return MEMORY[0x1F40FBAC8]();
}

uint64_t View.accessibilityLabel(_:)()
{
  return MEMORY[0x1F40FBB78]();
}

{
  return MEMORY[0x1F40FBB90]();
}

uint64_t View.accessibilityLabel<A>(_:)()
{
  return MEMORY[0x1F40FBB98]();
}

uint64_t View.onPreferenceChange<A>(_:perform:)()
{
  return MEMORY[0x1F40FBC70]();
}

uint64_t View.accessibilityAction(_:_:)()
{
  return MEMORY[0x1F40FBCA8]();
}

uint64_t View.accessibilityHidden(_:)()
{
  return MEMORY[0x1F40FBCB8]();
}

uint64_t View.presentationDetents(_:)()
{
  return MEMORY[0x1F40FBD30]();
}

uint64_t View.accessibilityElement(children:)()
{
  return MEMORY[0x1F40FBD60]();
}

uint64_t View.accessibilityFocused(_:)()
{
  return MEMORY[0x1F40FBD68]();
}

uint64_t View.navigationDestination<A, B>(for:destination:)()
{
  return MEMORY[0x1F40FBDC0]();
}

uint64_t View.overlayPreferenceValue<A, B>(_:alignment:_:)()
{
  return MEMORY[0x1F40FBE48]();
}

uint64_t View.accessibilityIdentifier(_:)()
{
  return MEMORY[0x1F40FBE68]();
}

uint64_t View.interactiveDismissDisabled(_:)()
{
  return MEMORY[0x1F40FBEE8]();
}

uint64_t View.id<A>(_:)()
{
  return MEMORY[0x1F40FBF30]();
}

uint64_t View.font(_:)()
{
  return MEMORY[0x1F40FBF78]();
}

uint64_t View.mask<A>(_:)()
{
  return MEMORY[0x1F40FBF98]();
}

uint64_t View.badge(_:)()
{
  return MEMORY[0x1F40FBFF8]();
}

uint64_t View.frame(width:height:alignment:)()
{
  return MEMORY[0x1F40FC000]();
}

uint64_t View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return MEMORY[0x1F40FC010]();
}

uint64_t View.sheet<A>(isPresented:onDismiss:content:)()
{
  return MEMORY[0x1F40FC018]();
}

uint64_t View.gesture<A>(_:including:)()
{
  return MEMORY[0x1F40FC098]();
}

uint64_t View.opacity(_:)()
{
  return MEMORY[0x1F40FC0B0]();
}

uint64_t View.overlay<A>(alignment:content:)()
{
  return MEMORY[0x1F40FC0C0]();
}

uint64_t View.disabled(_:)()
{
  return MEMORY[0x1F40FC130]();
}

uint64_t View.modifier<A>(_:)()
{
  return MEMORY[0x1F40FC140]();
}

uint64_t View.onAppear(perform:)()
{
  return MEMORY[0x1F40FC150]();
}

uint64_t View.onChange<A>(of:initial:_:)()
{
  return MEMORY[0x1F40FC158]();
}

{
  return MEMORY[0x1F40FC168]();
}

uint64_t View.redacted(reason:)()
{
  return MEMORY[0x1F40FC190]();
}

uint64_t View.animation<A>(_:value:)()
{
  return MEMORY[0x1F40FC1B8]();
}

uint64_t View.clipShape<A>(_:style:)()
{
  return MEMORY[0x1F40FC1D8]();
}

uint64_t View.lineLimit(_:reservesSpace:)()
{
  return MEMORY[0x1F40FC220]();
}

uint64_t View.menuOrder(_:)()
{
  return MEMORY[0x1F40FC248]();
}

uint64_t View.menuStyle<A>(_:)()
{
  return MEMORY[0x1F40FC250]();
}

uint64_t static Color.clarityUIButtonShadowColor.getter()
{
  return MEMORY[0x1F40FC2C8]();
}

uint64_t Color.init(uiColor:)()
{
  return MEMORY[0x1F40FC2E0]();
}

uint64_t type metadata accessor for Color.RGBColorSpace()
{
  return MEMORY[0x1F40FC310]();
}

uint64_t static Color.clarityUIButtonBackground.getter()
{
  return MEMORY[0x1F40FC318]();
}

uint64_t static Color.clarityUIContentBackground.getter()
{
  return MEMORY[0x1F40FC320]();
}

uint64_t static Color.clarityUIPressedButtonOverlay.getter()
{
  return MEMORY[0x1F40FC328]();
}

uint64_t static Color.red.getter()
{
  return MEMORY[0x1F40FC350]();
}

uint64_t static Color.blue.getter()
{
  return MEMORY[0x1F40FC368]();
}

uint64_t static Color.gray.getter()
{
  return MEMORY[0x1F40FC380]();
}

uint64_t static Color.black.getter()
{
  return MEMORY[0x1F40FC3B8]();
}

uint64_t static Color.clear.getter()
{
  return MEMORY[0x1F40FC3D0]();
}

uint64_t static Color.green.getter()
{
  return MEMORY[0x1F40FC3E0]();
}

uint64_t static Color.white.getter()
{
  return MEMORY[0x1F40FC3E8]();
}

uint64_t Color._apply(to:)()
{
  return MEMORY[0x1F40FC3F8]();
}

uint64_t static Color.orange.getter()
{
  return MEMORY[0x1F40FC408]();
}

uint64_t static Color.yellow.getter()
{
  return MEMORY[0x1F40FC428]();
}

uint64_t Color.opacity(_:)()
{
  return MEMORY[0x1F40FC438]();
}

uint64_t static Color.primary.getter()
{
  return MEMORY[0x1F40FC450]();
}

uint64_t Color.resolve(in:)()
{
  return MEMORY[0x1F40FC460]();
}

uint64_t Color.Resolved.cgColor.getter()
{
  return MEMORY[0x1F40FC468]();
}

uint64_t static Color.secondary.getter()
{
  return MEMORY[0x1F40FC498]();
}

uint64_t Color.init(_:red:green:blue:opacity:)()
{
  return MEMORY[0x1F40FC4A8]();
}

uint64_t Color.init(_:white:opacity:)()
{
  return MEMORY[0x1F40FC4C0]();
}

uint64_t Color.init(_:)()
{
  return MEMORY[0x1F40FC4E8]();
}

uint64_t Image.init(uiImage:)()
{
  return MEMORY[0x1F40FC530]();
}

uint64_t Image.init(systemName:)()
{
  return MEMORY[0x1F40FC550]();
}

uint64_t type metadata accessor for Image.ResizingMode()
{
  return MEMORY[0x1F40FC568]();
}

uint64_t Image.renderingMode(_:)()
{
  return MEMORY[0x1F40FC580]();
}

uint64_t Image.symbolRenderingMode(_:)()
{
  return MEMORY[0x1F40FC5A8]();
}

uint64_t type metadata accessor for Image.TemplateRenderingMode()
{
  return MEMORY[0x1F40FC5B8]();
}

uint64_t static Image.== infix(_:_:)()
{
  return MEMORY[0x1F40FC5C0]();
}

uint64_t type metadata accessor for Image.Scale()
{
  return MEMORY[0x1F40FC5D0]();
}

uint64_t Image.resizable(capInsets:resizingMode:)()
{
  return MEMORY[0x1F40FC5E8]();
}

uint64_t Label<>.init(_:)()
{
  return MEMORY[0x1F4112C20]();
}

uint64_t Label.init(title:icon:)()
{
  return MEMORY[0x1F40FC620]();
}

uint64_t Label<>.init<A>(_:systemImage:)()
{
  return MEMORY[0x1F40FC638]();
}

uint64_t type metadata accessor for Label()
{
  return MEMORY[0x1F40FC658]();
}

uint64_t Shape.fillShadow(color:radius:x:y:)()
{
  return MEMORY[0x1F40FC678]();
}

uint64_t State.init(wrappedValue:)()
{
  return MEMORY[0x1F40FC6F0]();
}

uint64_t State.wrappedValue.getter()
{
  return MEMORY[0x1F40FC700]();
}

uint64_t State.wrappedValue.setter()
{
  return MEMORY[0x1F40FC708]();
}

uint64_t State.projectedValue.getter()
{
  return MEMORY[0x1F40FC718]();
}

uint64_t type metadata accessor for State()
{
  return MEMORY[0x1F40FC728]();
}

uint64_t static Anchor.Source<A>.bounds.getter()
{
  return MEMORY[0x1F40FC738]();
}

uint64_t static Anchor<A>.== infix(_:_:)()
{
  return MEMORY[0x1F40FC740]();
}

uint64_t Button.init(action:label:)()
{
  return MEMORY[0x1F40FC760]();
}

uint64_t Button<>.init(_:)()
{
  return MEMORY[0x1F40FC768]();
}

uint64_t Button<>.init<A>(_:role:action:)()
{
  return MEMORY[0x1F40FC778]();
}

uint64_t Button<>.init(_:action:)()
{
  return MEMORY[0x1F40FC780]();
}

uint64_t Button<>.init<A>(_:action:)()
{
  return MEMORY[0x1F40FC790]();
}

uint64_t Canvas<>.init(opaque:colorMode:rendersAsynchronously:renderer:)()
{
  return MEMORY[0x1F40FC7B8]();
}

uint64_t HStack.init(alignment:spacing:content:)()
{
  return MEMORY[0x1F40FC7C8]();
}

uint64_t type metadata accessor for HStack()
{
  return MEMORY[0x1F40FC7D0]();
}

uint64_t type metadata accessor for IDView()
{
  return MEMORY[0x1F40FC7E0]();
}

uint64_t VStack.init(alignment:spacing:content:)()
{
  return MEMORY[0x1F40FC8B8]();
}

uint64_t type metadata accessor for VStack()
{
  return MEMORY[0x1F40FC8C8]();
}

uint64_t ZStack.init(alignment:content:)()
{
  return MEMORY[0x1F40FC8E0]();
}

uint64_t type metadata accessor for ZStack()
{
  return MEMORY[0x1F40FC8E8]();
}

uint64_t AnyView.init<A>(_:)()
{
  return MEMORY[0x1F40FC8F8]();
}

uint64_t Binding.wrappedValue.getter()
{
  return MEMORY[0x1F40FC910]();
}

uint64_t Binding.wrappedValue.setter()
{
  return MEMORY[0x1F40FC920]();
}

uint64_t Binding.subscript.getter()
{
  return MEMORY[0x1F40FC930]();
}

uint64_t Binding.projectedValue.getter()
{
  return MEMORY[0x1F40FC940]();
}

uint64_t type metadata accessor for Binding()
{
  return MEMORY[0x1F40FC970]();
}

uint64_t type metadata accessor for Capsule()
{
  return MEMORY[0x1F40FC980]();
}

uint64_t Divider.init()()
{
  return MEMORY[0x1F40FC998]();
}

uint64_t type metadata accessor for Divider()
{
  return MEMORY[0x1F40FC9A0]();
}

uint64_t ForEach<>.init(_:id:content:)()
{
  return MEMORY[0x1F40FC9B8]();
}

uint64_t ForEach<>.init(_:content:)()
{
  return MEMORY[0x1F40FC9D0]();
}

uint64_t type metadata accessor for ForEach()
{
  return MEMORY[0x1F40FC9E0]();
}

uint64_t Gesture.onEnded(_:)()
{
  return MEMORY[0x1F40FC9E8]();
}

uint64_t Gesture<>.onChanged(_:)()
{
  return MEMORY[0x1F40FC9F0]();
}

uint64_t Section<>.init<A>(_:content:)()
{
  return MEMORY[0x1F40FCA08]();
}

uint64_t Section<>.init(header:content:)()
{
  return MEMORY[0x1F40FCA20]();
}

uint64_t Bindable.wrappedValue.modify()
{
  return MEMORY[0x1F40FCA88]();
}

uint64_t Bindable.wrappedValue.getter()
{
  return MEMORY[0x1F40FCA98]();
}

uint64_t Bindable.wrappedValue.setter()
{
  return MEMORY[0x1F40FCAA0]();
}

uint64_t Bindable<A>.init(wrappedValue:)()
{
  return MEMORY[0x1F40FCAB8]();
}

uint64_t type metadata accessor for Bindable()
{
  return MEMORY[0x1F40FCAD8]();
}

uint64_t Gradient.Stop.init(color:location:)()
{
  return MEMORY[0x1F40FCB30]();
}

uint64_t Gradient.init(stops:)()
{
  return MEMORY[0x1F40FCB38]();
}

uint64_t Gradient.init(colors:)()
{
  return MEMORY[0x1F40FCB40]();
}

uint64_t static Material.thin.getter()
{
  return MEMORY[0x1F40FCB98]();
}

uint64_t Material._apply(to:)()
{
  return MEMORY[0x1F40FCBB0]();
}

uint64_t static Material.regular.getter()
{
  return MEMORY[0x1F40FCBB8]();
}

uint64_t static Material.ultraThin.getter()
{
  return MEMORY[0x1F40FCBC8]();
}

uint64_t type metadata accessor for Material()
{
  return MEMORY[0x1F40FCBD8]();
}

uint64_t static Alignment.topLeading.getter()
{
  return MEMORY[0x1F40FCBE8]();
}

uint64_t static Alignment.topTrailing.getter()
{
  return MEMORY[0x1F40FCBF0]();
}

uint64_t static Alignment.bottomLeading.getter()
{
  return MEMORY[0x1F40FCBF8]();
}

uint64_t static Alignment.bottomTrailing.getter()
{
  return MEMORY[0x1F40FCC08]();
}

uint64_t static Alignment.top.getter()
{
  return MEMORY[0x1F40FCC10]();
}

uint64_t static Alignment.bottom.getter()
{
  return MEMORY[0x1F40FCC20]();
}

uint64_t static Alignment.center.getter()
{
  return MEMORY[0x1F40FCC30]();
}

uint64_t static Alignment.leading.getter()
{
  return MEMORY[0x1F40FCC40]();
}

uint64_t static Alignment.trailing.getter()
{
  return MEMORY[0x1F40FCC50]();
}

uint64_t static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)()
{
  return MEMORY[0x1F40FCC88]();
}

uint64_t Animation.delay(_:)()
{
  return MEMORY[0x1F40FCC98]();
}

uint64_t Animation.speed(_:)()
{
  return MEMORY[0x1F40FCCA0]();
}

uint64_t static Animation.easeIn(duration:)()
{
  return MEMORY[0x1F40FCCA8]();
}

uint64_t static Animation.linear(duration:)()
{
  return MEMORY[0x1F40FCCC0]();
}

uint64_t static Animation.spring(response:dampingFraction:blendDuration:)()
{
  return MEMORY[0x1F40FCCE0]();
}

uint64_t static Animation.default.getter()
{
  return MEMORY[0x1F40FCCF0]();
}

uint64_t static Animation.easeOut.getter()
{
  return MEMORY[0x1F40FCD08]();
}

uint64_t static Animation.easeInOut(duration:)()
{
  return MEMORY[0x1F40FCD10]();
}

uint64_t static Animation.easeInOut.getter()
{
  return MEMORY[0x1F40FCD18]();
}

uint64_t AnyLayout.init<A>(_:)()
{
  return MEMORY[0x1F40FCD20]();
}

uint64_t type metadata accessor for BlendMode()
{
  return MEMORY[0x1F40FCD30]();
}

uint64_t static MenuOrder.fixed.getter()
{
  return MEMORY[0x1F40FCDA8]();
}

uint64_t type metadata accessor for MenuOrder()
{
  return MEMORY[0x1F40FCDB0]();
}

uint64_t type metadata accessor for ShapeRole()
{
  return MEMORY[0x1F40FCDE0]();
}

uint64_t type metadata accessor for TupleView()
{
  return MEMORY[0x1F40FCE58]();
}

uint64_t TupleView.init(_:)()
{
  return MEMORY[0x1F40FCE60]();
}

uint64_t static UnitPoint.topLeading.getter()
{
  return MEMORY[0x1F40FCE88]();
}

uint64_t static UnitPoint.topTrailing.getter()
{
  return MEMORY[0x1F40FCE90]();
}

uint64_t static UnitPoint.bottomLeading.getter()
{
  return MEMORY[0x1F40FCE98]();
}

uint64_t static UnitPoint.bottomTrailing.getter()
{
  return MEMORY[0x1F40FCEA0]();
}

uint64_t static UnitPoint.top.getter()
{
  return MEMORY[0x1F40FCEB0]();
}

uint64_t static UnitPoint.bottom.getter()
{
  return MEMORY[0x1F40FCEC0]();
}

uint64_t static UnitPoint.center.getter()
{
  return MEMORY[0x1F40FCED8]();
}

uint64_t static UnitPoint.leading.getter()
{
  return MEMORY[0x1F40FCEE0]();
}

uint64_t static UnitPoint.trailing.getter()
{
  return MEMORY[0x1F40FCEE8]();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return MEMORY[0x1F4186C68]();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return MEMORY[0x1F4186CB8]();
}

uint64_t DispatchQoS.QoSClass.rawValue.getter()
{
  return MEMORY[0x1F4186CC8]();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return MEMORY[0x1F4186CD8]();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return MEMORY[0x1F4186D00]();
}

uint64_t static DispatchQoS.userInitiated.getter()
{
  return MEMORY[0x1F4186D10]();
}

uint64_t static DispatchQoS.userInteractive.getter()
{
  return MEMORY[0x1F4186D20]();
}

uint64_t static DispatchQoS.default.getter()
{
  return MEMORY[0x1F4186D30]();
}

uint64_t DispatchQoS.qosClass.getter()
{
  return MEMORY[0x1F4186D58]();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return MEMORY[0x1F4186D68]();
}

uint64_t static DispatchTime.now()()
{
  return MEMORY[0x1F4186E20]();
}

uint64_t DispatchTime.advanced(by:)()
{
  return MEMORY[0x1F4186E30]();
}

uint64_t type metadata accessor for DispatchTime()
{
  return MEMORY[0x1F4186E58]();
}

uint64_t dispatch thunk of DispatchWorkItem.isCancelled.getter()
{
  return MEMORY[0x1F4186E90]();
}

uint64_t DispatchWorkItem.init(flags:block:)()
{
  return MEMORY[0x1F4186EA8]();
}

uint64_t dispatch thunk of DispatchWorkItem.cancel()()
{
  return MEMORY[0x1F4186EB8]();
}

uint64_t dispatch thunk of DispatchWorkItem.perform()()
{
  return MEMORY[0x1F4186ED0]();
}

uint64_t type metadata accessor for DispatchWorkItem()
{
  return MEMORY[0x1F4186EE0]();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return MEMORY[0x1F4186EF0]();
}

uint64_t + infix(_:_:)()
{
  return MEMORY[0x1F4186F00]();
}

{
  return MEMORY[0x1F4186F10]();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return MEMORY[0x1F4186F38]();
}

uint64_t dispatch thunk of HashFunction.update(bufferPointer:)()
{
  return MEMORY[0x1F40DFF38]();
}

uint64_t dispatch thunk of HashFunction.finalize()()
{
  return MEMORY[0x1F40DFF40]();
}

uint64_t dispatch thunk of HashFunction.init()()
{
  return MEMORY[0x1F40DFF58]();
}

uint64_t type metadata accessor for SHA256Digest()
{
  return MEMORY[0x1F40DFF70]();
}

uint64_t type metadata accessor for SHA256()
{
  return MEMORY[0x1F40E04A8]();
}

uint64_t Set.init()()
{
  return MEMORY[0x1F4183288]();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)MEMORY[0x1F40E5FF8]();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E6028]();
}

uint64_t Dictionary.removeValue(forKey:)()
{
  return MEMORY[0x1F4183320]();
}

uint64_t Dictionary.init(dictionaryLiteral:)()
{
  return MEMORY[0x1F4183358]();
}

uint64_t Dictionary.count.getter()
{
  return MEMORY[0x1F41833D0]();
}

Swift::Void __swiftcall Dictionary._Variant.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
}

uint64_t type metadata accessor for Dictionary()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t Dictionary.subscript.getter()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t Dictionary.subscript.setter()
{
  return MEMORY[0x1F4183500]();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t dispatch thunk of Hashable.hashValue.getter()
{
  return MEMORY[0x1F41835D0]();
}

uint64_t BidirectionalCollection.last.getter()
{
  return MEMORY[0x1F41836E0]();
}

uint64_t BidirectionalCollection.reversed()()
{
  return MEMORY[0x1F4183710]();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return MEMORY[0x1F4183730]();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return MEMORY[0x1F4183740]();
}

uint64_t dispatch thunk of static Comparable.>= infix(_:_:)()
{
  return MEMORY[0x1F4183748]();
}

uint64_t dispatch thunk of static Comparable.<= infix(_:_:)()
{
  return MEMORY[0x1F4183750]();
}

uint64_t MutableCollection.swapAt(_:_:)()
{
  return MEMORY[0x1F4183798]();
}

uint64_t ObjectIdentifier.debugDescription.getter()
{
  return MEMORY[0x1F4183818]();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return MEMORY[0x1F4183838]();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return MEMORY[0x1F40E60B0]();
}

uint64_t String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)()
{
  return MEMORY[0x1F40E60D0]();
}

uint64_t String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)()
{
  return MEMORY[0x1F40E60E0]();
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return MEMORY[0x1F40E6120]();
}

uint64_t type metadata accessor for String.LocalizationValue.StringInterpolation()
{
  return MEMORY[0x1F40E6138]();
}

uint64_t String.LocalizationValue.init(stringInterpolation:)()
{
  return MEMORY[0x1F40E6140]();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return MEMORY[0x1F40E6150]();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)MEMORY[0x1F40E6198]();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return MEMORY[0x1F40E61A8]();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1F40E61B0]();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1F40E61C0]();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E61D0]();
}

uint64_t String.init(format:locale:arguments:)()
{
  return MEMORY[0x1F40E6210]();
}

uint64_t String.init(format:arguments:)()
{
  return MEMORY[0x1F40E6220]();
}

uint64_t String.init(format:_:)()
{
  return MEMORY[0x1F40E6230]();
}

uint64_t String.init<A>(describing:)()
{
  return MEMORY[0x1F4183880]();
}

{
  return MEMORY[0x1F4183888]();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = MEMORY[0x1F4183898]();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t String.init<A>(reflecting:)()
{
  return MEMORY[0x1F41838A0]();
}

Swift::String __swiftcall String.uppercased()()
{
  uint64_t v0 = MEMORY[0x1F41838B0]();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t String.utf8CString.getter()
{
  return MEMORY[0x1F41838B8]();
}

uint64_t static String._fromSubstring(_:)()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return MEMORY[0x1F4183958]();
}

uint64_t String.init(stringInterpolation:)()
{
  return MEMORY[0x1F4183968]();
}

uint64_t String.hash(into:)()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t String.count.getter()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t String.index(before:)()
{
  return MEMORY[0x1F4183A00]();
}

uint64_t String.append<A>(contentsOf:)()
{
  return MEMORY[0x1F4183A28]();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

uint64_t String.remove(at:)()
{
  return MEMORY[0x1F4183A58]();
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t String.init<A>(_:)()
{
  return MEMORY[0x1F4183B88]();
}

{
  return MEMORY[0x1F4183B90]();
}

uint64_t Sequence.formatted<A>(_:)()
{
  return MEMORY[0x1F40E6318]();
}

uint64_t dispatch thunk of Sequence.makeIterator()()
{
  return MEMORY[0x1F4183BA8]();
}

uint64_t dispatch thunk of Sequence.underestimatedCount.getter()
{
  return MEMORY[0x1F4183BB8]();
}

uint64_t Sequence.compactMap<A>(_:)()
{
  return MEMORY[0x1F4183BE8]();
}

uint64_t Sequence.enumerated()()
{
  return MEMORY[0x1F4183BF0]();
}

uint64_t Sequence.first(where:)()
{
  return MEMORY[0x1F4183C40]();
}

uint64_t Sequence.sorted(by:)()
{
  return MEMORY[0x1F4183C70]();
}

uint64_t Sequence.forEach(_:)()
{
  return MEMORY[0x1F4183C80]();
}

uint64_t Sequence.reversed()()
{
  return MEMORY[0x1F4183C90]();
}

uint64_t Sequence<>.sorted()()
{
  return MEMORY[0x1F4183CC8]();
}

uint64_t Sequence<>.contains(_:)()
{
  return MEMORY[0x1F4183CE0]();
}

uint64_t Sequence<>.joined(separator:)()
{
  return MEMORY[0x1F4183CF0]();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return MEMORY[0x1F4183D70]();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return MEMORY[0x1F4183D80]();
}

{
  return MEMORY[0x1F4183D98]();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return MEMORY[0x1F4183DF8]();
}

{
  return MEMORY[0x1F4183E10]();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)MEMORY[0x1F40E6340]();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E6368]();
}

uint64_t Array.startIndex.getter()
{
  return MEMORY[0x1F4183E88]();
}

uint64_t Array.description.getter()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t specialized Array._endMutation()()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t Array._checkSubscript(_:wasNativeTypeChecked:)()
{
  return MEMORY[0x1F4183EA8]();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t static Array.+ infix(_:_:)()
{
  return MEMORY[0x1F4183ED8]();
}

Swift::Void __swiftcall Array._makeMutableAndUnique()()
{
}

uint64_t static Array._allocateUninitialized(_:)()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return MEMORY[0x1F4183F08]();
}

Swift::Bool __swiftcall Array._hoistableIsNativeTypeChecked()()
{
  return MEMORY[0x1F4183F18]();
}

uint64_t static Array.+= infix(_:_:)()
{
  return MEMORY[0x1F4183F20]();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t Array.count.getter()
{
  return MEMORY[0x1F4183F40]();
}

uint64_t Array.append(_:)()
{
  return MEMORY[0x1F4183F60]();
}

uint64_t Array.remove(at:)()
{
  return MEMORY[0x1F4183F70]();
}

uint64_t Array.endIndex.getter()
{
  return MEMORY[0x1F4183F78]();
}

Swift::Int __swiftcall Array._getCount()()
{
  return MEMORY[0x1F4183F80]();
}

Swift::Void __swiftcall Array.formIndex(after:)(Swift::Int *after)
{
}

uint64_t Array.init(repeating:count:)()
{
  return MEMORY[0x1F4183FA0]();
}

uint64_t type metadata accessor for Array()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t static Array<A>.== infix(_:_:)()
{
  return MEMORY[0x1F4183FC8]();
}

uint64_t Array.init<A>(_:)()
{
  return MEMORY[0x1F4183FD8]();
}

uint64_t Array.subscript.getter()
{
  return MEMORY[0x1F4183FF0]();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1F40E6390]();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return MEMORY[0x1F4187C08]();
}

uint64_t type metadata accessor for CheckedContinuation()
{
  return MEMORY[0x1F4187C10]();
}

uint64_t static MainActor.shared.getter()
{
  return MEMORY[0x1F4187C98]();
}

uint64_t type metadata accessor for MainActor()
{
  return MEMORY[0x1F4187CA0]();
}

uint64_t static TaskPriority.background.getter()
{
  return MEMORY[0x1F4187CA8]();
}

uint64_t static TaskPriority.userInitiated.getter()
{
  return MEMORY[0x1F4187CB0]();
}

uint64_t static TaskPriority.utility.getter()
{
  return MEMORY[0x1F4187CE8]();
}

uint64_t TaskPriority.rawValue.getter()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t type metadata accessor for TaskPriority()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t AsyncStream.Continuation.onTermination.setter()
{
  return MEMORY[0x1F4187D18]();
}

uint64_t AsyncStream.Continuation.yield(_:)()
{
  return MEMORY[0x1F4187D38]();
}

Swift::Void __swiftcall AsyncStream.Continuation.finish()()
{
}

uint64_t AsyncStream.makeAsyncIterator()()
{
  return MEMORY[0x1F4187D50]();
}

uint64_t AsyncStream.init(_:bufferingPolicy:_:)()
{
  return MEMORY[0x1F4187D78]();
}

Swift::Void __swiftcall Task.cancel()()
{
}

uint64_t static Task<>.isCancelled.getter()
{
  return MEMORY[0x1F4187DC8]();
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return MEMORY[0x1F4187E68]();
}

NSNumber __swiftcall Double._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1F40E63C0]();
}

uint64_t Double.description.getter()
{
  return MEMORY[0x1F4184008]();
}

uint64_t Double._roundSlowPath(_:)()
{
  return MEMORY[0x1F4184018]();
}

uint64_t Double.write<A>(to:)()
{
  return MEMORY[0x1F4184048]();
}

NSNumber __swiftcall Float._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1F40E63F8]();
}

uint64_t static Float._forceBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1F40E6400]();
}

uint64_t static Float._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1F40E6418]();
}

uint64_t static Float._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E6420]();
}

uint64_t Float.write<A>(to:)()
{
  return MEMORY[0x1F41840C0]();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)MEMORY[0x1F40E6438]();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E6460]();
}

uint64_t Set.description.getter()
{
  return MEMORY[0x1F4184100]();
}

uint64_t Set.init(minimumCapacity:)()
{
  return MEMORY[0x1F4184138]();
}

uint64_t Set.Index._asCocoa.modify()
{
  return MEMORY[0x1F4184178]();
}

uint64_t Set.insert(_:)()
{
  return MEMORY[0x1F41841A8]();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return MEMORY[0x1F41841D0]();
}

uint64_t Set.contains(_:)()
{
  return MEMORY[0x1F41841F0]();
}

uint64_t type metadata accessor for Set()
{
  return MEMORY[0x1F4184230]();
}

uint64_t Set.init<A>(_:)()
{
  return MEMORY[0x1F4184250]();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1F40E6480]();
}

uint64_t static Int._forceBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1F40E6488]();
}

uint64_t static Int._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1F40E6498]();
}

uint64_t static Int._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1F40E64B0]();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t Collection<>.contains<A>(_:)()
{
  return MEMORY[0x1F4188450]();
}

uint64_t dispatch thunk of Collection.count.getter()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t dispatch thunk of Collection.distance(from:to:)()
{
  return MEMORY[0x1F4184328]();
}

uint64_t dispatch thunk of Collection.endIndex.getter()
{
  return MEMORY[0x1F4184330]();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return MEMORY[0x1F4184338]();
}

uint64_t Collection.firstIndex(where:)()
{
  return MEMORY[0x1F4184348]();
}

uint64_t Collection.first.getter()
{
  return MEMORY[0x1F4184398]();
}

uint64_t Collection.prefix(_:)()
{
  return MEMORY[0x1F41843C0]();
}

uint64_t Collection.isEmpty.getter()
{
  return MEMORY[0x1F41843D0]();
}

uint64_t Collection<>.firstIndex(of:)()
{
  return MEMORY[0x1F4184418]();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return MEMORY[0x1F4184440]();
}

uint64_t RangeReplaceableCollection.removeFirst()()
{
  return MEMORY[0x1F41844A0]();
}

uint64_t NSPredicate.init(format:_:)()
{
  return MEMORY[0x1F40E6510]();
}

Swift::Void __swiftcall CGContextRef.draw(_:in:byTiling:)(CGImageRef _, __C::CGRect in, Swift::Bool byTiling)
{
}

uint64_t CGContextRef.fillPath(using:)()
{
  return MEMORY[0x1F40D96C0]();
}

uint64_t NSDictionary.init(dictionaryLiteral:)()
{
  return MEMORY[0x1F40E6540]();
}

uint64_t NSOrderedSet.makeIterator()()
{
  return MEMORY[0x1F40E65C8]();
}

uint64_t type metadata accessor for APApplication()
{
  return MEMORY[0x1F4108FF8]();
}

uint64_t static UIColorEffect.inCallControlsButtonNoPhotoNoAvatar.getter()
{
  return MEMORY[0x1F4112C28]();
}

uint64_t static UIColorEffect.inCallControls.getter()
{
  return MEMORY[0x1F4112C30]();
}

uint64_t static UIColorEffect.inCallControlsButtonAvatarOnly.getter()
{
  return MEMORY[0x1F4112C38]();
}

uint64_t static os_log_type_t.info.getter()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t static os_log_type_t.debug.getter()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t static os_log_type_t.error.getter()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t static os_log_type_t.fault.getter()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t static os_log_type_t.default.getter()
{
  return MEMORY[0x1F4188700]();
}

uint64_t UIPointerStyle.init(effect:shape:)()
{
  return MEMORY[0x1F41664B0]();
}

UIBarButtonItem __swiftcall UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItem systemItem, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return (UIBarButtonItem)MEMORY[0x1F41664B8](systemItem, primaryAction.value.super.super.isa, *(void *)&primaryAction.is_nil, menu.value.super.super.isa, *(void *)&menu.is_nil);
}

UIBarButtonItem __swiftcall UIBarButtonItem.init(title:image:primaryAction:menu:)(Swift::String_optional title, UIImage_optional image, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return (UIBarButtonItem)MEMORY[0x1F41664C0](title.value._countAndFlagsBits, title.value._object, image.value.super.isa, *(void *)&image.is_nil, primaryAction.value.super.super.isa, *(void *)&primaryAction.is_nil, menu.value.super.super.isa, *(void *)&menu.is_nil);
}

uint64_t UIPointerRegion.init(rect:identifier:)()
{
  return MEMORY[0x1F41664D8]();
}

__C::CAFrameRateRange __swiftcall CAFrameRateRange.init(minimum:maximum:preferred:)(Swift::Float minimum, Swift::Float maximum, Swift::Float_optional *preferred)
{
  MEMORY[0x1F41875A0](preferred, minimum, maximum);
  result.__preferred = v5;
  result.maximuCGAffineTransform m = v4;
  result.minimuCGAffineTransform m = v3;
  return result;
}

Swift::Void __swiftcall CGMutablePathRef.addRect(_:transform:)(__C::CGRect _, CGAffineTransform *transform)
{
}

uint64_t UICollectionView.CellRegistration.init(handler:)()
{
  return MEMORY[0x1F4166510]();
}

uint64_t UICollectionView.SupplementaryRegistration.init(elementKind:handler:)()
{
  return MEMORY[0x1F4166520]();
}

uint64_t UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)()
{
  return MEMORY[0x1F4166530]();
}

uint64_t UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)()
{
  return MEMORY[0x1F4166538]();
}

uint64_t UIViewController.traitOverrides.getter()
{
  return MEMORY[0x1F4166570]();
}

uint64_t UIViewController.traitOverrides.setter()
{
  return MEMORY[0x1F4166578]();
}

uint64_t static CGAffineTransform.== infix(_:_:)()
{
  return MEMORY[0x1F40D9720]();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return MEMORY[0x1F4186FE0]();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return MEMORY[0x1F4186FF8]();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:execute:)()
{
  return MEMORY[0x1F4187008]();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return MEMORY[0x1F4187038]();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)()
{
  return MEMORY[0x1F4187050]();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)()
{
  return MEMORY[0x1F4187068]();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride()
{
  return MEMORY[0x1F4187080]();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return MEMORY[0x1F41870A8]();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return MEMORY[0x1F41870B0]();
}

uint64_t OS_dispatch_queue.sync<A>(execute:)()
{
  return MEMORY[0x1F41870D0]();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return MEMORY[0x1F41870E8]();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return MEMORY[0x1F41870F8]();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return MEMORY[0x1F4187118]();
}

uint64_t UITraitCollection.modifyingTraits(_:)()
{
  return MEMORY[0x1F41665C8]();
}

uint64_t UITraitCollection.subscript.getter()
{
  return MEMORY[0x1F41665F0]();
}

uint64_t NSAttributedString.init<A>(_:including:)()
{
  return MEMORY[0x1F40E6730]();
}

uint64_t NSAttributedString.init(_:)()
{
  return MEMORY[0x1F40E6738]();
}

uint64_t type metadata accessor for OS_dispatch_source.TimerFlags()
{
  return MEMORY[0x1F4187138]();
}

uint64_t static OS_dispatch_source.makeTimerSource(flags:queue:)()
{
  return MEMORY[0x1F4187160]();
}

uint64_t OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return MEMORY[0x1F41871D8]();
}

Swift::Void __swiftcall OS_dispatch_source.resume()()
{
}

uint64_t UIFocusEnvironment.contains(_:)()
{
  return MEMORY[0x1F4166630]();
}

uint64_t type metadata accessor for NSNotificationCenter.Notifications.Iterator()
{
  return MEMORY[0x1F40E6750]();
}

uint64_t type metadata accessor for NSNotificationCenter.Notifications()
{
  return MEMORY[0x1F40E6760]();
}

uint64_t NSNotificationCenter.notifications(named:object:)()
{
  return MEMORY[0x1F40E6770]();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return MEMORY[0x1F40E6790]();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return MEMORY[0x1F40E67A8]();
}

uint64_t UICollectionViewCell.contentConfiguration.getter()
{
  return MEMORY[0x1F4166650]();
}

uint64_t UICollectionViewCell.contentConfiguration.setter()
{
  return MEMORY[0x1F4166658]();
}

uint64_t UICollectionViewCell.backgroundConfiguration.setter()
{
  return MEMORY[0x1F4166668]();
}

uint64_t UIContentSizeCategory.isAccessibilityCategory.getter()
{
  return MEMORY[0x1F4166688]();
}

uint64_t static UIContentSizeCategory.>= infix(_:_:)()
{
  return MEMORY[0x1F41666A0]();
}

uint64_t OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)()
{
  return MEMORY[0x1F41872E0]();
}

uint64_t UICollectionViewListCell.accessories.setter()
{
  return MEMORY[0x1F41666C0]();
}

uint64_t UICollectionViewListCell.defaultContentConfiguration()()
{
  return MEMORY[0x1F41666C8]();
}

uint64_t UIPresentationController.traitOverrides.getter()
{
  return MEMORY[0x1F41666E0]();
}

uint64_t UIPresentationController.traitOverrides.setter()
{
  return MEMORY[0x1F41666E8]();
}

uint64_t static NSCollectionLayoutSection.list(using:layoutEnvironment:)()
{
  return MEMORY[0x1F41666F8]();
}

uint64_t static UISheetPresentationControllerDetent.custom(identifier:resolver:)()
{
  return MEMORY[0x1F4166740]();
}

void __swiftcall UIPopoverPresentationControllerSourceItem.frame(in:)(__C::CGRect_optional *__return_ptr retstr, UIView *in)
{
}

uint64_t CGSize.debugDescription.getter()
{
  return MEMORY[0x1F40D9730]();
}

CMTime __swiftcall CMTime.init(seconds:preferredTimescale:)(Swift::Double seconds, Swift::Int32 preferredTimescale)
{
  CMTimeValue v2 = MEMORY[0x1F4186B50](*(void *)&preferredTimescale, seconds);
  result.epoch = v4;
  result.timescale = v3;
  result.flags = HIDWORD(v3);
  result.value = v2;
  return result;
}

uint64_t CMTime.seconds.getter()
{
  return MEMORY[0x1F4186B58]();
}

UIMenu __swiftcall UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return (UIMenu)MEMORY[0x1F4166780](title._countAndFlagsBits, title._object, subtitle.value._countAndFlagsBits, subtitle.value._object, image.value.super.isa, *(void *)&image.is_nil, identifier.value, options);
}

NSValue __swiftcall CGPoint._bridgeToObjectiveC()()
{
  return (NSValue)MEMORY[0x1F40E6820]();
}

uint64_t NSTimer.TimerPublisher.connect()()
{
  return MEMORY[0x1F40E68B8]();
}

uint64_t type metadata accessor for NSTimer.TimerPublisher()
{
  return MEMORY[0x1F40E68C0]();
}

uint64_t static NSTimer.publish(every:tolerance:on:in:options:)()
{
  return MEMORY[0x1F40E68D0]();
}

uint64_t UIColor.init(_:)()
{
  return MEMORY[0x1F40FCF28]();
}

NSNumber __swiftcall NSNumber.init(floatLiteral:)(Swift::Double floatLiteral)
{
  return (NSNumber)MEMORY[0x1F40E68F0](floatLiteral);
}

NSNumber __swiftcall NSNumber.init(BOOLeanLiteral:)(Swift::Bool BOOLeanLiteral)
{
  return (NSNumber)MEMORY[0x1F40E6900](BOOLeanLiteral);
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)MEMORY[0x1F40E6908](integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return MEMORY[0x1F41874B0](seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return MEMORY[0x1F41874B8]();
}

uint64_t NSObject.hash(into:)()
{
  return MEMORY[0x1F41874C8]();
}

uint64_t NSObject.hashValue.getter()
{
  return MEMORY[0x1F41874D8]();
}

uint64_t NSString.init(stringLiteral:)()
{
  return MEMORY[0x1F40E6920]();
}

uint64_t static NSString.localizedStringWithFormat(_:_:)()
{
  return MEMORY[0x1F40E6930]();
}

uint64_t UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)()
{
  return MEMORY[0x1F4166838]();
}

uint64_t UIButton.Configuration.preferredSymbolConfigurationForImage.getter()
{
  return MEMORY[0x1F4166840]();
}

uint64_t UIButton.Configuration.preferredSymbolConfigurationForImage.setter()
{
  return MEMORY[0x1F4166850]();
}

uint64_t UIButton.Configuration.background.modify()
{
  return MEMORY[0x1F4166860]();
}

uint64_t UIButton.Configuration.background.getter()
{
  return MEMORY[0x1F4166868]();
}

uint64_t UIButton.Configuration.background.setter()
{
  return MEMORY[0x1F4166870]();
}

uint64_t UIButton.Configuration.buttonSize.setter()
{
  return MEMORY[0x1F4166888]();
}

uint64_t type metadata accessor for UIButton.Configuration.CornerStyle()
{
  return MEMORY[0x1F41668A0]();
}

uint64_t UIButton.Configuration.cornerStyle.setter()
{
  return MEMORY[0x1F41668B0]();
}

uint64_t UIButton.Configuration.imagePadding.setter()
{
  return MEMORY[0x1F41668B8]();
}

uint64_t UIButton.Configuration.contentInsets.getter()
{
  return MEMORY[0x1F41668D8]();
}

uint64_t UIButton.Configuration.contentInsets.setter()
{
  return MEMORY[0x1F41668E0]();
}

uint64_t UIButton.Configuration.imagePlacement.setter()
{
  return MEMORY[0x1F41668F8]();
}

uint64_t UIButton.Configuration.attributedTitle.modify()
{
  return MEMORY[0x1F4166908]();
}

uint64_t UIButton.Configuration.attributedTitle.setter()
{
  return MEMORY[0x1F4166910]();
}

uint64_t UIButton.Configuration.imageReservation.setter()
{
  return MEMORY[0x1F4166920]();
}

uint64_t UIButton.Configuration.titleLineBreakMode.setter()
{
  return MEMORY[0x1F4166930]();
}

uint64_t UIButton.Configuration.baseBackgroundColor.setter()
{
  return MEMORY[0x1F4166950]();
}

uint64_t UIButton.Configuration.baseForegroundColor.setter()
{
  return MEMORY[0x1F4166968]();
}

uint64_t UIButton.Configuration.imageColorTransformer.setter()
{
  return MEMORY[0x1F4166970]();
}

uint64_t UIButton.Configuration.titleTextAttributesTransformer.setter()
{
  return MEMORY[0x1F4166988]();
}

uint64_t type metadata accessor for UIButton.Configuration.Size()
{
  return MEMORY[0x1F4166998]();
}

uint64_t static UIButton.Configuration.gray()()
{
  return MEMORY[0x1F41669A8]();
}

uint64_t UIButton.Configuration.image.setter()
{
  return MEMORY[0x1F41669C0]();
}

uint64_t static UIButton.Configuration.plain()()
{
  return MEMORY[0x1F41669C8]();
}

uint64_t UIButton.Configuration.title.setter()
{
  return MEMORY[0x1F41669D8]();
}

uint64_t static UIButton.Configuration.filled()()
{
  return MEMORY[0x1F41669E8]();
}

uint64_t static UIButton.Configuration.tinted()()
{
  return MEMORY[0x1F41669F0]();
}

uint64_t type metadata accessor for UIButton.Configuration()
{
  return MEMORY[0x1F4166A28]();
}

uint64_t UIButton.init(configuration:primaryAction:)()
{
  return MEMORY[0x1F4166A38]();
}

uint64_t UIButton.configuration.getter()
{
  return MEMORY[0x1F4166A48]();
}

uint64_t UIButton.configuration.setter()
{
  return MEMORY[0x1F4166A50]();
}

uint64_t UIButton.pointerStyleProvider.setter()
{
  return MEMORY[0x1F4166A60]();
}

uint64_t type metadata accessor for APSubject()
{
  return MEMORY[0x1F4109000]();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerOptions()
{
  return MEMORY[0x1F40E6A90]();
}

uint64_t NSRunLoop.SchedulerTimeType.Stride.init(floatLiteral:)()
{
  return MEMORY[0x1F40E6AA0]();
}

uint64_t static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)()
{
  return MEMORY[0x1F40E6AB8]();
}

uint64_t static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)()
{
  return MEMORY[0x1F40E6AD0]();
}

{
  return MEMORY[0x1F40E6AE0]();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerTimeType.Stride()
{
  return MEMORY[0x1F40E6AE8]();
}

uint64_t static OS_os_log.default.getter()
{
  return MEMORY[0x1F4188728]();
}

uint64_t OS_os_log.init(subsystem:category:)()
{
  return MEMORY[0x1F4188758]();
}

uint64_t Optional.debugDescription.getter()
{
  return MEMORY[0x1F4184628]();
}

uint64_t type metadata accessor for Optional()
{
  return MEMORY[0x1F4184640]();
}

uint64_t Optional<A>.hashValue.getter()
{
  return MEMORY[0x1F4184658]();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return MEMORY[0x1F41847A0]();
}

NSNumber __swiftcall UInt._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1F40E6B88]();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return MEMORY[0x1F4184820]();
}

uint64_t StringProtocol.components(separatedBy:)()
{
  return MEMORY[0x1F40E6BA0]();
}

uint64_t StringProtocol.localizedCompare<A>(_:)()
{
  return MEMORY[0x1F40E6C20]();
}

uint64_t StringProtocol.localizedLowercase.getter()
{
  return MEMORY[0x1F40E6C48]();
}

uint64_t StringProtocol.localizedUppercase.getter()
{
  return MEMORY[0x1F40E6C58]();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return MEMORY[0x1F40E6C60]();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return MEMORY[0x1F40E6C88]();
}

uint64_t StringProtocol.caseInsensitiveCompare<A>(_:)()
{
  return MEMORY[0x1F40E6CA8]();
}

uint64_t StringProtocol.localizedStandardCompare<A>(_:)()
{
  return MEMORY[0x1F40E6CC0]();
}

uint64_t StringProtocol.hash.getter()
{
  return MEMORY[0x1F40E6D20]();
}

uint64_t StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)()
{
  return MEMORY[0x1F41876A8]();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return MEMORY[0x1F4184978]();
}

uint64_t type metadata accessor for ArraySlice()
{
  return MEMORY[0x1F4184A40]();
}

uint64_t dispatch thunk of SetAlgebra.isSuperset(of:)()
{
  return MEMORY[0x1F4184A78]();
}

uint64_t dispatch thunk of SetAlgebra.init()()
{
  return MEMORY[0x1F4184B10]();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t _HashTable.previousHole(before:)()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t _HashTable.occupiedBucket(after:)()
{
  return MEMORY[0x1F4184B28]();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return MEMORY[0x1F4184B58]();
}

uint64_t __CocoaSet.makeIterator()()
{
  return MEMORY[0x1F4184B60]();
}

uint64_t __CocoaSet.Index.handleBitPattern.getter()
{
  return MEMORY[0x1F4184B68]();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return MEMORY[0x1F4184B78]();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return MEMORY[0x1F4184B80]();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return MEMORY[0x1F4184B88]();
}

uint64_t __CocoaSet.count.getter()
{
  return MEMORY[0x1F4184B90]();
}

uint64_t __CocoaSet.index(after:)()
{
  return MEMORY[0x1F4184B98]();
}

uint64_t __CocoaSet.member(for:)()
{
  return MEMORY[0x1F4184BA8]();
}

uint64_t __CocoaSet.element(at:)()
{
  return MEMORY[0x1F4184BB0]();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return MEMORY[0x1F4184BC0]();
}

uint64_t __CocoaSet.contains(_:)()
{
  return MEMORY[0x1F4184BC8]();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return MEMORY[0x1F4184BD0]();
}

uint64_t __CocoaSet.formIndex(after:isUnique:)()
{
  return MEMORY[0x1F4184BD8]();
}

uint64_t _expectEnd<A>(of:is:)()
{
  return MEMORY[0x1F4184BE0]();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return MEMORY[0x1F4184C18](seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return MEMORY[0x1F4184C20]();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return MEMORY[0x1F4184C38]();
}

uint64_t static _SetStorage.copy(original:)()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return MEMORY[0x1F4184CA0]();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t type metadata accessor for _SetStorage()
{
  return MEMORY[0x1F4184CB0]();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t dispatch thunk of Identifiable.id.getter()
{
  return MEMORY[0x1F4184D08]();
}

uint64_t StaticString.description.getter()
{
  return MEMORY[0x1F4184D20]();
}

Swift::Void __swiftcall _ArrayBuffer._typeCheckSlowPath(_:)(Swift::Int a1)
{
}

uint64_t _ArrayBuffer._getElementSlowPath(_:)()
{
  return MEMORY[0x1F4184D78]();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t DecodingError.Context.init(codingPath:debugDescription:underlyingError:)()
{
  return MEMORY[0x1F4184DD0]();
}

uint64_t type metadata accessor for DecodingError()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t static ManagedBuffer.create(minimumCapacity:makingHeaderWith:)()
{
  return MEMORY[0x1F4184E28]();
}

uint64_t type metadata accessor for ManagedBuffer()
{
  return MEMORY[0x1F4184E38]();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t _ArrayProtocol.filter(_:)()
{
  return MEMORY[0x1F4184EA8]();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return MEMORY[0x1F4184ED8]();
}

Swift::Void __swiftcall ContiguousArray.reserveCapacity(_:)(Swift::Int a1)
{
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t ContiguousArray.append(_:)()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t ContiguousArray.init()()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t type metadata accessor for ContiguousArray()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t static ContinuousClock.Instant.now.getter()
{
  return MEMORY[0x1F4187F58]();
}

uint64_t ContinuousClock.Instant.advanced(by:)()
{
  return MEMORY[0x1F4187F60]();
}

uint64_t type metadata accessor for ContinuousClock.Instant()
{
  return MEMORY[0x1F4187F70]();
}

uint64_t ContinuousClock.init()()
{
  return MEMORY[0x1F4187F78]();
}

uint64_t type metadata accessor for ContinuousClock()
{
  return MEMORY[0x1F4187F80]();
}

uint64_t dispatch thunk of InstantProtocol.advanced(by:)()
{
  return MEMORY[0x1F4184F98]();
}

uint64_t _arrayForceCast<A, B>(_:)()
{
  return MEMORY[0x1F4185048]();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return MEMORY[0x1F4185050]();
}

uint64_t AsyncMapSequence.base.getter()
{
  return MEMORY[0x1F4187FC8]();
}

uint64_t AsyncMapSequence.Iterator.baseIterator.modify()
{
  return MEMORY[0x1F4187FD0]();
}

uint64_t AsyncMapSequence.Iterator.transform.getter()
{
  return MEMORY[0x1F4187FE0]();
}

uint64_t AsyncMapSequence.Iterator.init(_:transform:)()
{
  return MEMORY[0x1F4187FE8]();
}

uint64_t AsyncMapSequence.transform.getter()
{
  return MEMORY[0x1F4187FF0]();
}

uint64_t AsyncMapSequence.init(_:transform:)()
{
  return MEMORY[0x1F4188000]();
}

Swift::Bool __swiftcall _NativeDictionary.ensureUnique(isUnique:capacity:)(Swift::Bool isUnique, Swift::Int capacity)
{
  return MEMORY[0x1F41851A0](isUnique, capacity);
}

uint64_t _NativeDictionary._delete(at:)()
{
  return MEMORY[0x1F41851C0]();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return MEMORY[0x1F41851F8]();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return MEMORY[0x1F4185270]();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return MEMORY[0x1F4185298]();
}

{
  return MEMORY[0x1F41852A0]();
}

uint64_t _assertionFailure(_:_:flags:)()
{
  return MEMORY[0x1F41852A8]();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return MEMORY[0x1F41852B0]();
}

uint64_t EnumeratedSequence.makeIterator()()
{
  return MEMORY[0x1F41852E8]();
}

uint64_t EnumeratedSequence.Iterator.next()()
{
  return MEMORY[0x1F41852F0]();
}

uint64_t type metadata accessor for EnumeratedSequence.Iterator()
{
  return MEMORY[0x1F41852F8]();
}

uint64_t type metadata accessor for EnumeratedSequence()
{
  return MEMORY[0x1F4185300]();
}

uint64_t type metadata accessor for ReversedCollection()
{
  return MEMORY[0x1F4185340]();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return MEMORY[0x1F4185350]();
}

uint64_t _CocoaArrayWrapper.subscript.getter()
{
  return MEMORY[0x1F4185358]();
}

{
  return MEMORY[0x1F4185360]();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return MEMORY[0x1F4185368]();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return MEMORY[0x1F4185370]();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return MEMORY[0x1F4185380]();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return MEMORY[0x1F4185398]();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return MEMORY[0x1F4185450]();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return MEMORY[0x1F41854C8](cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.codingPath.getter()
{
  return MEMORY[0x1F41854E0]();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return MEMORY[0x1F4185570]();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return MEMORY[0x1F4185598]();
}

uint64_t KeyedDecodingContainer.allKeys.getter()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return MEMORY[0x1F4185608]();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return MEMORY[0x1F4185698]();
}

uint64_t specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return MEMORY[0x1F4185730]();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return MEMORY[0x1F4185740](a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return MEMORY[0x1F4185758]();
}

uint64_t type metadata accessor for FloatingPointRoundingRule()
{
  return MEMORY[0x1F41859C8]();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:)()
{
  return MEMORY[0x1F41859F0]();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t _diagnoseUnexpectedEnumCase<A>(type:)()
{
  return MEMORY[0x1F4185A38]();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t dispatch thunk of SingleValueDecodingContainer.decode(_:)()
{
  return MEMORY[0x1F4185A78]();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return MEMORY[0x1F4185B90]();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return MEMORY[0x1F4185B98]();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return MEMORY[0x1F4185D40]();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return MEMORY[0x1F4185D68]();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  return MEMORY[0x1F4188170]();
}

uint64_t Error.localizedDescription.getter()
{
  return MEMORY[0x1F40E6E28]();
}

uint64_t type metadata accessor for Slice()
{
  return MEMORY[0x1F4185E78]();
}

uint64_t static Hasher._hash(seed:bytes:count:)()
{
  return MEMORY[0x1F4185E98]();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return MEMORY[0x1F4185EA0]();
}

{
  return MEMORY[0x1F4185EA8]();
}

uint64_t Hasher.init(_seed:)()
{
  return MEMORY[0x1F4185EB0]();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt16 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt32 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
}

Swift::Int __swiftcall Hasher.finalize()()
{
  return MEMORY[0x1F4185EF0]();
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t Hasher.init()()
{
  return MEMORY[0x1F4185F00]();
}

NSNumber __swiftcall UInt32._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1F40E6EA0]();
}

uint64_t dispatch thunk of Decoder.singleValueContainer()()
{
  return MEMORY[0x1F4185FB8]();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t Duration.description.getter()
{
  return MEMORY[0x1F4186138]();
}

uint64_t static Duration.< infix(_:_:)()
{
  return MEMORY[0x1F4186160]();
}

uint64_t static Duration.+ infix(_:_:)()
{
  return MEMORY[0x1F4186178]();
}

uint64_t static Duration.== infix(_:_:)()
{
  return MEMORY[0x1F4186188]();
}

uint64_t static Duration.zero.getter()
{
  return MEMORY[0x1F41861A0]();
}

uint64_t static Duration.seconds(_:)()
{
  return MEMORY[0x1F41861A8]();
}

uint64_t _Pointer.debugDescription.getter()
{
  return MEMORY[0x1F4186278]();
}

uint64_t dispatch thunk of OptionSet.init(rawValue:)()
{
  return MEMORY[0x1F41862B8]();
}

uint64_t _typeName(_:qualified:)()
{
  return MEMORY[0x1F4186318]();
}

NSString *__cdecl AVCaptureReactionSystemImageNameForType(AVCaptureReactionType reactionType)
{
  return (NSString *)MEMORY[0x1F40D0E88](reactionType);
}

uint64_t AVControlCenterVideoEffectsModuleIsEffectSupportedForBundleID()
{
  return MEMORY[0x1F40D0EA8]();
}

uint64_t AVControlCenterVideoEffectsModulePerformReactionEffect()
{
  return MEMORY[0x1F40D0EB0]();
}

uint64_t AXDurationForDurationString()
{
  return MEMORY[0x1F4106700]();
}

uint64_t AXDurationStringForDuration()
{
  return MEMORY[0x1F4106708]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1F41138B8]();
}

OSStatus AudioQueueAllocateBuffer(AudioQueueRef inAQ, UInt32 inBufferByteSize, AudioQueueBufferRef *outBuffer)
{
  return MEMORY[0x1F40D4CE0](inAQ, *(void *)&inBufferByteSize, outBuffer);
}

OSStatus AudioQueueDispose(AudioQueueRef inAQ, Boolean inImmediate)
{
  return MEMORY[0x1F40D4D18](inAQ, inImmediate);
}

OSStatus AudioQueueEnqueueBuffer(AudioQueueRef inAQ, AudioQueueBufferRef inBuffer, UInt32 inNumPacketDescs, const AudioStreamPacketDescription *inPacketDescs)
{
  return MEMORY[0x1F40D4D20](inAQ, inBuffer, *(void *)&inNumPacketDescs, inPacketDescs);
}

OSStatus AudioQueueNewInput(const AudioStreamBasicDescription *inFormat, AudioQueueInputCallback inCallbackProc, void *inUserData, CFRunLoopRef inCallbackRunLoop, CFStringRef inCallbackRunLoopMode, UInt32 inFlags, AudioQueueRef *outAQ)
{
  return MEMORY[0x1F40D4D68](inFormat, inCallbackProc, inUserData, inCallbackRunLoop, inCallbackRunLoopMode, *(void *)&inFlags, outAQ);
}

OSStatus AudioQueuePause(AudioQueueRef inAQ)
{
  return MEMORY[0x1F40D4D90](inAQ);
}

OSStatus AudioQueueSetProperty(AudioQueueRef inAQ, AudioQueuePropertyID inID, const void *inData, UInt32 inDataSize)
{
  return MEMORY[0x1F40D4DE8](inAQ, *(void *)&inID, inData, *(void *)&inDataSize);
}

OSStatus AudioQueueStart(AudioQueueRef inAQ, const AudioTimeStamp *inStartTime)
{
  return MEMORY[0x1F40D4DF0](inAQ, inStartTime);
}

OSStatus AudioQueueStop(AudioQueueRef inAQ, Boolean inImmediate)
{
  return MEMORY[0x1F40D4E00](inAQ, inImmediate);
}

void AudioServicesPlaySystemSound(SystemSoundID inSystemSoundID)
{
}

BOOL CATransform3DEqualToTransform(CATransform3D *a, CATransform3D *b)
{
  return MEMORY[0x1F40F4CE0](a, b);
}

CGAffineTransform *__cdecl CATransform3DGetAffineTransform(CGAffineTransform *__return_ptr retstr, CATransform3D *t)
{
  return (CGAffineTransform *)MEMORY[0x1F40F4CE8](retstr, t);
}

BOOL CATransform3DIsAffine(CATransform3D *t)
{
  return MEMORY[0x1F40F4D00](t);
}

CATransform3D *__cdecl CATransform3DMakeAffineTransform(CATransform3D *__return_ptr retstr, CGAffineTransform *m)
{
  return (CATransform3D *)MEMORY[0x1F40F4D10](retstr, m);
}

CATransform3D *__cdecl CATransform3DMakeRotation(CATransform3D *__return_ptr retstr, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return (CATransform3D *)MEMORY[0x1F40F4D18](retstr, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x1F40F4D20](retstr, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DRotate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return (CATransform3D *)MEMORY[0x1F40F4D48](retstr, t, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x1F40F4D58](retstr, t, sx, sy, sz);
}

uint64_t CEKMonospacedStylisticNumeralFontOfSizeAndStyle()
{
  return MEMORY[0x1F410FA90]();
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1F40D7D10]();
}

CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1F40D7D18]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

uint64_t CFPhoneNumberCreate()
{
  return MEMORY[0x1F4114220]();
}

uint64_t CFPhoneNumberCreateString()
{
  return MEMORY[0x1F4114228]();
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7EC8](key, applicationID, userName, hostName);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x1F40D80C0]();
}

SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification)
{
  return MEMORY[0x1F40D8A18](userNotification);
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return (CFUserNotificationRef)MEMORY[0x1F40D8A30](allocator, flags, error, dictionary, timeout);
}

CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order)
{
  return (CFRunLoopSourceRef)MEMORY[0x1F40D8A38](allocator, userNotification, callout, order);
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97A8](retstr, t);
}

BOOL CGAffineTransformIsIdentity(CGAffineTransform *t)
{
  return MEMORY[0x1F40D97B0](t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97C8](retstr, angle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97D0](retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformRotate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97E8](retstr, t, angle);
}

CGAffineTransform *__cdecl CGAffineTransformScale(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97F0](retstr, t, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformTranslate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97F8](retstr, t, tx, ty);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1F40D9808](data, width, height, bitsPerComponent, bytesPerRow, space, *(void *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x1F40D9818](context);
}

CGColorRef CGColorCreateGenericCMYK(CGFloat cyan, CGFloat magenta, CGFloat yellow, CGFloat black, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x1F40D9990](cyan, magenta, yellow, black, alpha);
}

CGColorRef CGColorCreateGenericGray(CGFloat gray, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x1F40D9998](gray, alpha);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9AF8]();
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9B60](name);
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
}

void CGContextDrawRadialGradient(CGContextRef c, CGGradientRef gradient, CGPoint startCenter, CGFloat startRadius, CGPoint endCenter, CGFloat endRadius, CGGradientDrawingOptions options)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetInterpolationQuality(CGContextRef c, CGInterpolationQuality quality)
{
}

void CGContextSetLineCap(CGContextRef c, CGLineCap cap)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetShadowWithColor(CGContextRef c, CGSize offset, CGFloat blur, CGColorRef color)
{
}

void CGContextSetShouldAntialias(CGContextRef c, BOOL shouldAntialias)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

CGGradientRef CGGradientCreateWithColors(CGColorSpaceRef space, CFArrayRef colors, const CGFloat *locations)
{
  return (CGGradientRef)MEMORY[0x1F40DA778](space, colors, locations);
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return (CGImageRef)MEMORY[0x1F40DA890](image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGBitmapInfo CGImageGetBitmapInfo(CGImageRef image)
{
  return MEMORY[0x1F40DA8D8](image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return MEMORY[0x1F40DA8E0](image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x1F40DA908](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1F40DA9B8](image);
}

uint64_t CGPathAddContinuousRoundedRect()
{
  return MEMORY[0x1F40DAF80]();
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return (CGMutablePathRef)MEMORY[0x1F40DB068]();
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB230]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB248]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x1F40DB250]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  MEMORY[0x1F40DB268]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x1F40DB270]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  MEMORY[0x1F40DB280]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  MEMORY[0x1F40DB288]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x1F40DB298]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x1F40DB2A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x1F40DB2A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x1F40DB2B8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.CGFloat height = v6;
  result.size.double width = v5;
  result.origin.CGFloat y = v4;
  result.origin.CGFloat x = v3;
  return result;
}

CGRect CGRectIntegral(CGRect rect)
{
  MEMORY[0x1F40DB2C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.CGFloat height = v4;
  result.size.double width = v3;
  result.origin.CGFloat y = v2;
  result.origin.CGFloat x = v1;
  return result;
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  MEMORY[0x1F40DB2C8]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.CGFloat height = v5;
  result.size.double width = v4;
  result.origin.CGFloat y = v3;
  result.origin.CGFloat x = v2;
  return result;
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB2D0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x1F40DB2D8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectIsInfinite(CGRect rect)
{
  return MEMORY[0x1F40DB2E0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x1F40DB2F8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.CGFloat height = v6;
  result.size.double width = v5;
  result.origin.CGFloat y = v4;
  result.origin.CGFloat x = v3;
  return result;
}

CGRect CGRectStandardize(CGRect rect)
{
  MEMORY[0x1F40DB300]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.CGFloat height = v4;
  result.size.double width = v3;
  result.origin.CGFloat y = v2;
  result.origin.CGFloat x = v1;
  return result;
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  MEMORY[0x1F40DB310]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.CGFloat height = v5;
  result.size.double width = v4;
  result.origin.CGFloat y = v3;
  result.origin.CGFloat x = v2;
  return result;
}

BOOL CGSizeEqualToSize(CGSize size1, CGSize size2)
{
  return MEMORY[0x1F40DB4D8]((__n128)size1, *(__n128 *)&size1.height, (__n128)size2, *(__n128 *)&size2.height);
}

CGFloat CTFontGetAscent(CTFontRef font)
{
  MEMORY[0x1F40DF4A8](font);
  return result;
}

CGFloat CTFontGetDescent(CTFontRef font)
{
  MEMORY[0x1F40DF4E0](font);
  return result;
}

CGFloat CTFontGetLeading(CTFontRef font)
{
  MEMORY[0x1F40DF528](font);
  return result;
}

uint64_t IMPreferredAccountForService()
{
  return MEMORY[0x1F4122F30]();
}

uint64_t IMSPIQueryMessageWithGUIDAndLoadAttachmentsWithQOS()
{
  return MEMORY[0x1F4122F90]();
}

CFTypeRef IOHIDEventSystemClientCopyProperty(IOHIDEventSystemClientRef client, CFStringRef key)
{
  return (CFTypeRef)MEMORY[0x1F40E8AB0](client, key);
}

uint64_t IOHIDEventSystemClientCreateWithType()
{
  return MEMORY[0x1F40E8AC8]();
}

uint64_t IOHIDEventSystemClientRegisterPropertyChangedCallback()
{
  return MEMORY[0x1F40E8B08]();
}

uint64_t IOHIDEventSystemClientScheduleWithDispatchQueue()
{
  return MEMORY[0x1F40E8B18]();
}

uint64_t IOHIDEventSystemClientSetMatching()
{
  return MEMORY[0x1F40E8B38]();
}

Boolean IOHIDEventSystemClientSetProperty(IOHIDEventSystemClientRef client, CFStringRef key, CFTypeRef property)
{
  return MEMORY[0x1F40E8B48](client, key, property);
}

uint64_t IOHIDEventSystemClientUnregisterPropertyChangedCallback()
{
  return MEMORY[0x1F40E8B78]();
}

uint64_t MSNMonitorBeginException()
{
  return MEMORY[0x1F412EB50]();
}

uint64_t MSNMonitorEndException()
{
  return MEMORY[0x1F412EB58]();
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1F40E72B0](aSelector);
}

uint64_t PNCopyBestGuessCountryCodeForNumber()
{
  return MEMORY[0x1F4114238]();
}

uint64_t SBSIsSystemApertureAvailable()
{
  return MEMORY[0x1F415C3A0]();
}

uint64_t SBSRequestPasscodeUnlockUI()
{
  return MEMORY[0x1F415C408]();
}

uint64_t SBSUndimScreen()
{
  return MEMORY[0x1F415C470]();
}

uint64_t SBUIIsSystemApertureEnabled()
{
  return MEMORY[0x1F415C650]();
}

uint64_t SBUISystemApertureLayoutModeDescription()
{
  return MEMORY[0x1F415C690]();
}

uint64_t TUAllowLocalVideoRecording()
{
  return MEMORY[0x1F41639C0]();
}

uint64_t TUCallScreeningEnabled()
{
  return MEMORY[0x1F41639D0]();
}

uint64_t TUCallScreeningRTTEnabled()
{
  return MEMORY[0x1F41639D8]();
}

uint64_t TUCallTranscriptionSupported()
{
  return MEMORY[0x1F41639E0]();
}

uint64_t TUCopyIDSCanonicalAddressForDestinationID()
{
  return MEMORY[0x1F41639E8]();
}

uint64_t TUCopyIDSCanonicalAddressForHandle()
{
  return MEMORY[0x1F41639F0]();
}

uint64_t TUCopyIDSFromIDForHandle()
{
  return MEMORY[0x1F41639F8]();
}

uint64_t TUDestinationIDsAreEqual()
{
  return MEMORY[0x1F4163A08]();
}

uint64_t TUDeviceHasChinaSKU()
{
  return MEMORY[0x1F4163A10]();
}

uint64_t TUDeviceHasHomeButton()
{
  return MEMORY[0x1F4163A18]();
}

uint64_t TUDispatchMainIfNecessary()
{
  return MEMORY[0x1F4163A28]();
}

uint64_t TUHandleForIDSCanonicalAddress()
{
  return MEMORY[0x1F4163A38]();
}

uint64_t TUHandlesAreCanonicallyEqual()
{
  return MEMORY[0x1F4163A40]();
}

uint64_t TUHomeCountryCode()
{
  return MEMORY[0x1F4163A48]();
}

uint64_t TUIsBareMakoAccount()
{
  return MEMORY[0x1F4163A60]();
}

uint64_t TUIsCallRecordingStorageDestinationApplicationAvailable()
{
  return MEMORY[0x1F4163A70]();
}

uint64_t TUNormalizedHandleForTUHandle()
{
  return MEMORY[0x1F4163A90]();
}

uint64_t TUOpenSensitiveURL()
{
  return MEMORY[0x1F4163AA0]();
}

uint64_t TUOpenURL()
{
  return MEMORY[0x1F4163AA8]();
}

uint64_t TUOpenURLWithError()
{
  return MEMORY[0x1F4163AB0]();
}

uint64_t TUPreferredFaceTimeBundleIdentifier()
{
  return MEMORY[0x1F4163AB8]();
}

uint64_t TUStringKeyForProduct()
{
  return MEMORY[0x1F4163AD8]();
}

uint64_t TUUnlockDeviceWithPromptFrontBoardOptionsDictionary()
{
  return MEMORY[0x1F4163AF0]();
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return MEMORY[0x1F4166B18]();
}

BOOL UIAccessibilityIsReduceTransparencyEnabled(void)
{
  return MEMORY[0x1F4166B28]();
}

BOOL UIAccessibilityIsSwitchControlRunning(void)
{
  return MEMORY[0x1F4166B38]();
}

BOOL UIAccessibilityIsVoiceOverRunning(void)
{
  return MEMORY[0x1F4166B50]();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x1F4166C48]();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return (UIImage *)MEMORY[0x1F4166C50]();
}

void UIGraphicsPopContext(void)
{
}

void UIGraphicsPushContext(CGContextRef context)
{
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return (NSData *)MEMORY[0x1F4166CC0](image);
}

uint64_t UIRectRoundToViewScale()
{
  return MEMORY[0x1F4166EB0]();
}

uint64_t _AXSCommandAndControlEnabled()
{
  return MEMORY[0x1F4178A18]();
}

uint64_t _AXSFaceTimeCaptionsEnabled()
{
  return MEMORY[0x1F4178AB8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _TUIsInternalInstall()
{
  return MEMORY[0x1F4163B00]();
}

uint64_t _UITableViewDefaultSectionCornerRadiusForTraitCollection()
{
  return MEMORY[0x1F41670B8]();
}

double __exp10(double a1)
{
  MEMORY[0x1F40C9B90](a1);
  return result;
}

{
  return MEMORY[0x1F41813D8]();
}

{
  return MEMORY[0x1F41813E8]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1F4186340]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

float exp2f(float a1)
{
  MEMORY[0x1F40CBFF0](a1);
  return result;
}

void free(void *a1)
{
}

long double log2(long double __x)
{
  MEMORY[0x1F40CC8A8](__x);
  return result;
}

float log2f(float a1)
{
  MEMORY[0x1F40CC8B0](a1);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1F40CD028](*(void *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1F40CD040](*(void *)&token, state64);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1F40CD050](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x1F40CD058](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1F40CD060](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_enumerationMutation(id obj)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

void objc_storeStrong(id *location, id obj)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

BOOL os_unfair_lock_trylock(os_unfair_lock_t lock)
{
  return MEMORY[0x1F40CD5F8](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

long double pow(long double __x, long double __y)
{
  MEMORY[0x1F40CD810](__x, __y);
  return result;
}

float powf(float a1, float a2)
{
  MEMORY[0x1F40CD820](a1, a2);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1F4186478]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1F4186498]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1F4188218]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1F4188220]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x1F41864B0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1F41864C0]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1F41864D0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1F41864E8]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1F41864F0]();
}

uint64_t swift_dynamicCastObjCProtocolUnconditional()
{
  return MEMORY[0x1F41864F8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1F4186568]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1F4186580]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1F41865F0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1F4186618]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x1F4186620]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x1F4186630]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1F4186638]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1F4186640]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1F4186648]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1F4186658]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1F41866A0]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1F41866B0]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1F4186730]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1F41867B0]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_unknownObjectUnownedAssign()
{
  return MEMORY[0x1F4186800]();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return MEMORY[0x1F4186818]();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return MEMORY[0x1F4186820]();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return MEMORY[0x1F4186828]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1F4186840]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x1F4186848]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x1F4186850]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x1F4186870]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x1F4186878]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1F41868A0]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

FFTSetup vDSP_create_fftsetup(vDSP_Length __Log2n, FFTRadix __Radix)
{
  return (FFTSetup)MEMORY[0x1F40D19F0](__Log2n, *(void *)&__Radix);
}

void vDSP_ctoz(const DSPComplex *__C, vDSP_Stride __IC, const DSPSplitComplex *__Z, vDSP_Stride __IZ, vDSP_Length __N)
{
}

void vDSP_destroy_fftsetup(FFTSetup __setup)
{
}

void vDSP_fft_zrip(FFTSetup __Setup, const DSPSplitComplex *__C, vDSP_Stride __IC, vDSP_Length __Log2N, FFTDirection __Direction)
{
}

void vDSP_hann_window(float *__C, vDSP_Length __N, int __Flag)
{
}

void vDSP_vmul(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vsmul(const float *__A, vDSP_Stride __IA, const float *__B, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_zvmags(const DSPSplitComplex *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vvsqrtf(float *a1, const float *a2, const int *a3)
{
}