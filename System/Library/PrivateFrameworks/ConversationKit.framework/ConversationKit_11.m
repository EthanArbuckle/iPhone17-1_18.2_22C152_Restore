char *specialized MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(void *a1, void *a2, void *a3, uint64_t a4, void *a5, unsigned char *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  char *v43;
  void **v44;
  void *v45;
  void *v46;
  void *v47;
  char *v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  id v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  void *v75;
  void (*v76)(char *);
  char *v77;
  void *v78;
  id v79;
  char *v80;
  id v81;
  void *v82;
  uint64_t v83;
  char *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char v240;
  void *v241;
  uint64_t v242;
  NSObject *v243;
  uint64_t v244;
  NSObject *v245;
  void (*v246)(void);
  char *v247;
  uint64_t v249;
  char *v250;
  uint64_t ObjectType;
  char *v252;
  id v253;
  void *v254;
  uint64_t v255;
  id v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  void (**v261)(char *, uint64_t, uint64_t);
  void *v262;
  void *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unsigned long long v268;
  char v269;
  unsigned char v270[224];

  v255 = a8;
  v256 = a5;
  v257 = a7;
  v259 = a4;
  v262 = a2;
  v263 = a3;
  v254 = a1;
  ObjectType = swift_getObjectType();
  v266 = type metadata accessor for Participant(0);
  v264 = *(void *)(v266 - 8);
  MEMORY[0x1F4188790](v266);
  v265 = (uint64_t)&v249 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  v13 = (char *)&v249 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&a6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_queryForSuggestedBannerStartTime];
  v15 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v14, 1, 1, v15);
  *(void *)&a6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_remoteControlAccessoryEventsAgent] = 0;
  a6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow] = 0;
  v16 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags;
  v17 = objc_allocWithZone(MEMORY[0x1E4FADBD0]);
  v18 = a6;
  *(void *)&a6[v16] = objc_msgSend(v17, sel_init);
  v19 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_spamAlertBuilder;
  type metadata accessor for SpamAlertBuilder();
  *(void *)&v18[v19] = swift_allocObject();
  v20 = (void **)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox];
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox] = 0;
  v21 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captioningStateManager;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  v22 = static ConversationCapabilities.shared;
  type metadata accessor for CaptioningStateManager();
  swift_allocObject();
  *(void *)&v18[v21] = CaptioningStateManager.init(capabilities:)(v22);
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible] = 2;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer] = 0;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask] = 0;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask] = 0;
  v23 = (uint64_t)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTip];
  v24 = type metadata accessor for VideoReactionPickerTip();
  __swift_storeEnumTagSinglePayload(v23, 1, 1, v24);
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsTips] = 1;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects] = 0;
  v25 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  *(_OWORD *)v25 = 0u;
  *((_OWORD *)v25 + 1) = 0u;
  *((_OWORD *)v25 + 2) = 0u;
  *((_OWORD *)v25 + 3) = 0u;
  *((void *)v25 + 8) = 0;
  v26 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_linkShareCoordinator];
  *((void *)v26 + 4) = 0;
  *(_OWORD *)v26 = 0u;
  *((_OWORD *)v26 + 1) = 0u;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__cachedDidExpandActiveVideoCallFromBanner] = 2;
  v27 = (uint64_t)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOi0_(v270);
  outlined init with take of CATransform3D?((uint64_t)v270, v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator] = 0;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer] = 0;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls] = 0;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didNotifyMutedCaller] = 0;
  v28 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedPresentationSize];
  *(void *)v28 = 0;
  *((void *)v28 + 1) = 0;
  v29 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedGridViewSize];
  *(void *)v29 = 0;
  *((void *)v29 + 1) = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsConnectionAnimation] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState] = 4;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation] = 1;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations] = 2;
  v30 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__isOnScreen];
  v269 = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v13, v10);
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner] = 0;
  v31 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler];
  *(void *)v31 = 0;
  *((void *)v31 + 1) = 0;
  v32 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentFullScreenFocusedAspectRatio];
  *(void *)v32 = 0;
  *((void *)v32 + 1) = 0;
  v32[16] = 1;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentGridIsFullScreen] = 2;
  v33 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler];
  *(void *)v33 = 0;
  *((void *)v33 + 1) = 0;
  v34 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler];
  *(void *)v34 = 0;
  *((void *)v34 + 1) = 0;
  v35 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler];
  *(void *)v35 = 0;
  *((void *)v35 + 1) = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isAmbient] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed] = 0;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsUpdatePresentationContexts] = 0;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP] = 0;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView] = 0;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView] = 1;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews] = 0;
  v36 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame];
  *(_OWORD *)v36 = 0u;
  *((_OWORD *)v36 + 1) = 0u;
  v37 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene];
  *(_OWORD *)v37 = 0u;
  *((_OWORD *)v37 + 1) = 0u;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isScreenSharingFullScreen] = 0;
  v38 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo];
  *v38 = 4;
  *((void *)v38 + 1) = 0;
  *((void *)v38 + 2) = 0;
  v39 = MEMORY[0x1E4FBC860];
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callUUIDsThatPresentedSNaPSecondaryPill] = MEMORY[0x1E4FBC860];
  v40 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer;
  *(void *)&v18[v40] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TonePlayer()), sel_init);
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_subscriptions] = MEMORY[0x1E4FBC870];
  v41 = v262;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController] = v262;
  v42 = objc_allocWithZone((Class)CNKBannerPresentationManager);
  v258 = v41;
  v43 = (char *)objc_msgSend(v42, sel_init);
  v44 = (void **)&v43[OBJC_IVAR___CNKBannerPresentationManager_value];
  swift_beginAccess();
  v45 = *v44;
  v46 = v263;
  *v44 = v263;
  v253 = v46;

  swift_beginAccess();
  v47 = *v20;
  *v20 = v43;
  v252 = v43;

  v48 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults];
  v50 = v255;
  v49 = v256;
  *(void *)v48 = v259;
  *((void *)v48 + 1) = v50;
  *(void *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features] = v49;
  swift_beginAccess();
  if (static AmbientState.isPresented == 1)
  {
    v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle] = 0;
    swift_unknownObjectRetain();
    v51 = v49;
  }
  else
  {
    v52 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 248);
    swift_unknownObjectRetain();
    v53 = v49;
    v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle] = v52(v257, v50) & 1;
  }
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState] = 0;
  v250 = v18;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  v54 = (*(unsigned __int8 *)(v264 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v264 + 80);
  v264 = *(void *)(v264 + 72);
  v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1C3769620;
  v56 = &v258[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_18((uint64_t)v56, v55 + v54);
  swift_beginAccess();
  v267 = v55;
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  v57 = v267;
  v58 = *(void *)(v267 + 16);
  if (v58)
  {
    v267 = v39;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v58, 0);
    v249 = v57;
    v59 = v57 + v54;
    v60 = type metadata accessor for UUID();
    v61 = v60;
    v62 = *(void *)(v60 - 8);
    v262 = *(void **)(v62 + 64);
    v263 = (void *)v60;
    v260 = v62 + 32;
    v261 = (void (**)(char *, uint64_t, uint64_t))(v62 + 16);
    do
    {
      MEMORY[0x1F4188790](v60);
      v64 = (char *)&v249 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
      v65 = v265;
      _s15ConversationKit11ParticipantVWOcTm_18(v59, v265);
      (*v261)(v64, v65 + *(int *)(v266 + 20), v61);
      _s15ConversationKit11ParticipantVWOhTm_12(v65, (void (*)(void))type metadata accessor for Participant);
      v66 = v267;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v66 + 16) + 1, 1);
        v66 = v267;
      }
      v68 = *(void *)(v66 + 16);
      v67 = *(void *)(v66 + 24);
      if (v68 >= v67 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v68 + 1, 1);
        v66 = v267;
      }
      *(void *)(v66 + 16) = v68 + 1;
      v69 = v66
          + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))
          + *(void *)(v62 + 72) * v68;
      v61 = (uint64_t)v263;
      v60 = (*(uint64_t (**)(unint64_t, char *, void *))(v62 + 32))(v69, v64, v263);
      v267 = v66;
      v59 += v264;
      --v58;
    }
    while (v58);
  }
  swift_bridgeObjectRelease();
  v70 = v255;
  v71 = v257;
  (*(void (**)(uint64_t, uint64_t))(v255 + 248))(v257, v255);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>);
  swift_allocObject();
  specialized MostActiveParticipantsController.init(participantIdentifiers:configuration:)();
  v72 = v250;
  *(void *)&v250[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController] = v73;
  *(void *)&v72[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PipZoomControl()), sel_init);
  *(void *)&v72[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MutedTalkerBannerViewController()), sel_init);
  *(void *)&v72[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation] = 1;

  v268 = __PAIR128__(ObjectType, (unint64_t)v72);
  v74 = (char *)objc_msgSendSuper2((objc_super *)&v268, sel_initWithNibName_bundle_, 0, 0);
  v75 = *(void **)&v74[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController];
  v76 = *(void (**)(char *))((*MEMORY[0x1E4FBC8C8] & *v75) + 0x148);
  v77 = v74;
  v78 = v75;
  v76(v74);

  v79 = objc_allocWithZone((Class)type metadata accessor for EffectsLayoutController());
  v80 = v77;
  v81 = EffectsLayoutController.init(containingViewController:)(v80);
  v82 = *(void **)&v80[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController];
  *(void *)&v80[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController] = v81;

  v83 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v84 = v258;
  v85 = (uint64_t *)&v258[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant];
  swift_beginAccess();
  v86 = *v85;
  *v85 = (uint64_t)partial apply for closure #2 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v85[1] = v83;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v86);
  v87 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v88 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant];
  swift_beginAccess();
  v89 = *v88;
  *v88 = (uint64_t)partial apply for closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v88[1] = v87;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v89);
  v90 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v91 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant];
  swift_beginAccess();
  v92 = *v91;
  *v91 = (uint64_t)partial apply for closure #4 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v91[1] = v90;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v92);
  v93 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v94 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant];
  swift_beginAccess();
  v95 = *v94;
  *v94 = (uint64_t)partial apply for closure #5 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v94[1] = v93;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v95);
  v96 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v97 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant];
  swift_beginAccess();
  v98 = *v97;
  *v97 = (uint64_t)partial apply for closure #6 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v97[1] = v96;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v98);
  v99 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v100 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant];
  swift_beginAccess();
  v101 = *v100;
  *v100 = (uint64_t)partial apply for closure #7 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v100[1] = v99;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v101);
  v102 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v103 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange];
  swift_beginAccess();
  v104 = *v103;
  *v103 = (uint64_t)partial apply for closure #8 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v103[1] = v102;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v104);
  v105 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v106 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange];
  swift_beginAccess();
  v107 = *v106;
  *v106 = (uint64_t)partial apply for closure #9 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v106[1] = v105;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v107);
  v108 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v109 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant];
  swift_beginAccess();
  v110 = *v109;
  *v109 = (uint64_t)partial apply for closure #10 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v109[1] = v108;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v110);
  v111 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v112 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition];
  swift_beginAccess();
  v113 = *v112;
  *v112 = (uint64_t)partial apply for closure #11 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v112[1] = v111;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v113);
  v114 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v115 = (void *)swift_allocObject();
  v116 = v259;
  v115[2] = v114;
  v115[3] = v116;
  v115[4] = v70;
  v117 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo];
  swift_beginAccess();
  v118 = *v117;
  *v117 = (uint64_t)partial apply for closure #12 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v117[1] = (uint64_t)v115;
  swift_unknownObjectRetain();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v118);
  v119 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v120 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing];
  swift_beginAccess();
  v121 = *v120;
  *v120 = (uint64_t)partial apply for closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v120[1] = v119;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v121);
  v122 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v123 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive];
  swift_beginAccess();
  v124 = *v123;
  *v123 = (uint64_t)partial apply for closure #14 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v123[1] = v122;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v124);
  v125 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v126 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode];
  swift_beginAccess();
  v127 = *v126;
  *v126 = (uint64_t)partial apply for closure #15 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v126[1] = v125;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v127);
  v128 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v129 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive];
  swift_beginAccess();
  v130 = *v129;
  *v129 = (uint64_t)partial apply for closure #16 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v129[1] = v128;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v130);
  v131 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v132 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange];
  swift_beginAccess();
  v133 = *v132;
  *v132 = (uint64_t)partial apply for closure #17 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v132[1] = v131;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v133);
  v134 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v135 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange];
  swift_beginAccess();
  v136 = *v135;
  *v135 = (uint64_t)partial apply for closure #18 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v135[1] = v134;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v136);
  v137 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v138 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange];
  swift_beginAccess();
  v139 = *v138;
  *v138 = (uint64_t)partial apply for closure #19 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v138[1] = v137;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v139);
  v140 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v141 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact];
  swift_beginAccess();
  v142 = *v141;
  *v141 = (uint64_t)partial apply for closure #20 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v141[1] = v140;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v142);
  v143 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v144 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting];
  swift_beginAccess();
  v145 = *v144;
  *v144 = (uint64_t)partial apply for closure #21 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v144[1] = v143;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v145);
  v146 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v147 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange];
  swift_beginAccess();
  v148 = *v147;
  *v147 = (uint64_t)partial apply for closure #22 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v147[1] = v146;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v148);
  v149 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v150 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange];
  swift_beginAccess();
  v151 = *v150;
  *v150 = (uint64_t)partial apply for closure #23 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v150[1] = v149;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v151);
  v152 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v153 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange];
  swift_beginAccess();
  v154 = *v153;
  *v153 = (uint64_t)partial apply for closure #24 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v153[1] = v152;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v154);
  v155 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v156 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange];
  swift_beginAccess();
  v157 = *v156;
  *v156 = (uint64_t)partial apply for closure #25 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v156[1] = v155;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v157);
  v158 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v159 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange];
  swift_beginAccess();
  v160 = *v159;
  *v159 = (uint64_t)partial apply for closure #26 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v159[1] = v158;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v160);
  v161 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v162 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange];
  swift_beginAccess();
  v163 = *v162;
  *v162 = (uint64_t)partial apply for closure #27 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v162[1] = v161;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v163);
  v164 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v165 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange];
  swift_beginAccess();
  v166 = *v165;
  *v165 = (uint64_t)partial apply for closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v165[1] = v164;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v166);
  v167 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v168 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange];
  swift_beginAccess();
  v169 = *v168;
  *v168 = (uint64_t)partial apply for closure #29 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v168[1] = v167;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v169);
  v170 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v171 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange];
  swift_beginAccess();
  v172 = *v171;
  *v171 = (uint64_t)partial apply for closure #30 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v171[1] = v170;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v172);
  v173 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v174 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange];
  swift_beginAccess();
  v175 = *v174;
  *v174 = (uint64_t)partial apply for closure #31 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v174[1] = v173;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v175);
  v176 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v177 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange];
  swift_beginAccess();
  v178 = *v177;
  *v177 = (uint64_t)partial apply for closure #32 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v177[1] = v176;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v178);
  v179 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v180 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize];
  swift_beginAccess();
  v181 = *v180;
  *v180 = (uint64_t)partial apply for closure #33 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v180[1] = v179;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v181);
  v182 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v183 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange];
  swift_beginAccess();
  v184 = *v183;
  *v183 = (uint64_t)partial apply for closure #34 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v183[1] = v182;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v184);
  v185 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v186 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange];
  swift_beginAccess();
  v187 = *v186;
  *v186 = (uint64_t)partial apply for closure #35 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v186[1] = v185;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v187);
  v188 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v189 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange];
  swift_beginAccess();
  v190 = *v189;
  *v189 = (uint64_t)partial apply for closure #36 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v189[1] = v188;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v190);
  v191 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v192 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls];
  swift_beginAccess();
  v193 = *v192;
  *v192 = (uint64_t)partial apply for closure #37 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v192[1] = v191;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v193);
  v194 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v195 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic];
  swift_beginAccess();
  v196 = *v195;
  *v195 = (uint64_t)partial apply for closure #38 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v195[1] = v194;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v196);
  v197 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v198 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants];
  swift_beginAccess();
  v199 = *v198;
  *v198 = (uint64_t)partial apply for closure #39 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v198[1] = v197;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v199);
  v200 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v201 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations];
  swift_beginAccess();
  v202 = *v201;
  *v201 = (uint64_t)partial apply for closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v201[1] = v200;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v202);
  v203 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v204 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange];
  swift_beginAccess();
  v205 = *v204;
  *v204 = (uint64_t)partial apply for closure #41 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v204[1] = v203;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v205);
  v206 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v207 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame];
  swift_beginAccess();
  v208 = *v207;
  *v207 = (uint64_t)partial apply for closure #42 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v207[1] = v206;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v208);
  v209 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v210 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange];
  swift_beginAccess();
  v211 = *v210;
  *v210 = (uint64_t)partial apply for closure #43 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v210[1] = v209;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v211);
  v212 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v213 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants];
  swift_beginAccess();
  v214 = *v213;
  *v213 = (uint64_t)partial apply for closure #44 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v213[1] = v212;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v214);
  v215 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v216 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange];
  swift_beginAccess();
  v217 = *v216;
  *v216 = (uint64_t)partial apply for closure #45 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v216[1] = v215;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v217);
  v218 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v219 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment];
  swift_beginAccess();
  v220 = *v219;
  *v219 = (uint64_t)partial apply for closure #46 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v219[1] = v218;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v220);
  v221 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v222 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions];
  swift_beginAccess();
  v223 = *v222;
  *v222 = (uint64_t)partial apply for closure #47 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v222[1] = v221;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v223);
  v224 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v225 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange];
  swift_beginAccess();
  v226 = *v225;
  *v225 = (uint64_t)partial apply for closure #48 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v225[1] = v224;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v226);
  v227 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v228 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities];
  swift_beginAccess();
  v229 = *v228;
  *v228 = (uint64_t)partial apply for closure #49 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v228[1] = v227;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v229);
  v230 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v231 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured];
  swift_beginAccess();
  v232 = *v231;
  *v231 = (uint64_t)partial apply for closure #50 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v231[1] = v230;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v232);
  v233 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController;
  v234 = *(void *)&v80[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController];
  v235 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  v236 = *(void *)(v234 + 16);
  *(void *)(v234 + 16) = partial apply for closure #51 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  *(void *)(v234 + 24) = v235;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v236);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v70 + 128))(v71, v70))
  {
    v237 = *(void *)&v80[v233];
    v238 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_beginAccess();
    v239 = *(void *)(v237 + 32);
    *(void *)(v237 + 32) = partial apply for closure #52 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
    *(void *)(v237 + 40) = v238;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v239);
  }
  v240 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 48))(v257, v70);
  v241 = v254;
  if (v240)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    objc_msgSend(v241, sel_setUplinkMuted_, 1);
  }
  MultiwayViewController.testing_callStatusDidChange(_:)((int)objc_msgSend(v241, sel_status));
  v242 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  swift_retain();
  v243 = static OS_dispatch_queue.main.getter();
  notifyRegisterDispatch(name:queue:handler:)(0xD000000000000027, 0x80000001C3797120, v243, (uint64_t)partial apply for closure #53 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:), v242);

  swift_release_n();
  v244 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  v245 = static OS_dispatch_queue.main.getter();
  notifyRegisterDispatch(name:queue:handler:)(0xD000000000000028, 0x80000001C3797150, v245, (uint64_t)partial apply for closure #54 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:), v244);

  swift_release_n();
  MultiwayViewController.registerForSystemEventsIfNecessary()();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  v246 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static ScreenSharingInteractionController.shared)
                          + 0x1C8);
  v247 = v80;
  v246();

  swift_unknownObjectRelease();
  return v247;
}

uint64_t specialized ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  outlined init with take of DefaultParticipantMediaProviderCreator(a3, (uint64_t)v24);
  id v14 = objc_allocWithZone((Class)type metadata accessor for ConversationController(0));
  outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)v24, (uint64_t)&v23);
  outlined init with copy of DefaultParticipantCaptionsProviderCreator(a4, (uint64_t)v22);
  uint64_t v15 = OUTLINED_FUNCTION_48_3();
  specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(v15, v16, v17, v18, a5, a6, a7, a8, a9, (uint64_t)v14, v22[0], v22[1], v23, v24[0], v24[1], v24[2], v24[3], v24[4], v24[5],
    v24[6],
    v24[7],
    (unsigned char *)v24[8]);
  uint64_t v20 = v19;
  outlined destroy of DefaultParticipantCaptionsProviderCreator(a4);
  outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)v24);
  return v20;
}

void _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOi0_(void *a1)
{
}

uint64_t sub_1C3605198()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MultiwayViewController.viewDidLoad()(uint64_t a1)
{
  return closure #1 in MultiwayViewController.viewDidLoad()(a1, v1);
}

uint64_t specialized ParticipantViewDragController.init(participantView:constraintIdentifier:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)(a4 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 72) = 0;
  *(void *)(a4 + 80) = 0;
  *(unsigned char *)(a4 + 88) = 0;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1A58]), sel_init);
  *(void *)(a4 + 96) = v8;
  *(void *)(a4 + 48) = &protocol witness table for LocalParticipantView;
  swift_unknownObjectWeakAssign();
  *(void *)(a4 + 56) = a2;
  *(void *)(a4 + 64) = a3;
  objc_msgSend(v8, sel_addTarget_action_, a4, sel_handlePanGestureRecognizer_);
  objc_msgSend(v8, sel_setEnabled_, 0);
  objc_msgSend(a1, sel_addGestureRecognizer_, v8);

  return a4;
}

char *specialized EffectsControlsViewController.init(delegate:)(void *a1, unsigned char *a2)
{
  *(void *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserViewController] = 0;
  a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsEnabled] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserHeight] = 0x404D000000000000;
  a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButtonIsVisible] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_constraintsToUpdate] = MEMORY[0x1E4FBC860];
  *(void *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton;
  type metadata accessor for InCallControlButton();
  id v14 = &type metadata for SymbolImageDescribers.LocalParticipantView;
  uint64_t v15 = &protocol witness table for SymbolImageDescribers.LocalParticipantView;
  v13[0] = 3;
  v5 = a2;
  *(void *)&a2[v4] = InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(1, (uint64_t)v13, 0, 0, 0, 1, 0, 0, 56.0, 1);
  uint64_t v6 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView;
  id v7 = objc_msgSend(self, sel_effectWithStyle_, 8);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v7);

  *(void *)&v5[v6] = v8;
  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for EffectsControlsViewController();
  v9 = (char *)objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, 0, 0);
  *(void *)&v9[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate + 8] = &protocol witness table for MultiwayViewController;
  swift_unknownObjectWeakAssign();
  v10 = v9;
  EffectsControlsViewController.setupViews()();

  return v10;
}

char *specialized CallDetailsCoordinator.init(hostViewController:controlsManager:deferredPresentationManager:)(void *a1, void *a2, void *a3, unsigned char *a4)
{
  swift_getObjectType();
  a4[OBJC_IVAR___CNKCallDetailsCoordinatorInternal_shouldHideViewsFromScreenSharing] = 0;
  swift_unknownObjectUnownedInit();
  swift_unknownObjectUnownedInit();
  swift_unknownObjectUnownedInit();
  id v8 = a4;
  *(void *)&v8[OBJC_IVAR___CNKCallDetailsCoordinatorInternal_detailsNavigationController] = static CallDetailsCoordinator.makeDetailsNavigationController(using:)(a2);

  v15.receiver = v8;
  v15.super_class = (Class)type metadata accessor for CallDetailsCoordinator();
  v9 = (char *)objc_msgSendSuper2(&v15, sel_init);
  v10 = *(void **)&v9[OBJC_IVAR___CNKCallDetailsCoordinatorInternal_detailsNavigationController];
  v11 = *(void (**)(char *))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x78);
  objc_super v12 = v9;
  v13 = v10;
  v11(v9);

  return v12;
}

void partial apply for specialized closure #3 in MultiwayViewController.viewDidLoad()(char a1)
{
  specialized closure #3 in MultiwayViewController.viewDidLoad()(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void partial apply for closure #4 in MultiwayViewController.viewDidLoad()(char *a1@<X0>, char *a2@<X8>)
{
  closure #4 in MultiwayViewController.viewDidLoad()(a1, v2, a2);
}

unint64_t _sSo17OS_dispatch_queueCAB7Combine9Scheduler8DispatchWlTm_1(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_6_6(a1);
  if (!result)
  {
    type metadata accessor for NSObject(255, v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

void partial apply for closure #5 in MultiwayViewController.viewDidLoad()(char a1, int a2)
{
  closure #5 in MultiwayViewController.viewDidLoad()(a1, a2, v2);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned VideoMessageController.State, @unowned VideoMessageController.State) -> ()(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

unint64_t lazy protocol witness table accessor for type URL? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type URL? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type URL? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for URL?);
    _s10Foundation4UUIDVACSHAAWlTm_6((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type URL? and conformance <A> A?);
  }
  return result;
}

unint64_t _s10Foundation4UUIDVACSHAAWlTm_6(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_6_6(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t partial apply for closure #6 in MultiwayViewController.viewDidLoad()(uint64_t a1)
{
  return closure #6 in MultiwayViewController.viewDidLoad()(a1, v1);
}

void partial apply for closure #2 in MultiwayViewController.viewDidLoad()(char a1)
{
  closure #2 in MultiwayViewController.viewDidLoad()(a1, v1);
}

void partial apply for closure #3 in MultiwayViewController.showOneToOneLivePhotosAlert(_:)(uint64_t a1)
{
  closure #3 in MultiwayViewController.showOneToOneLivePhotosAlert(_:)(a1, v1);
}

void partial apply for closure #1 in MultiwayViewController.viewWillTransition(to:with:)(uint64_t a1)
{
  closure #1 in MultiwayViewController.viewWillTransition(to:with:)(a1, v1);
}

uint64_t partial apply for closure #2 in MultiwayViewController.viewWillTransition(to:with:)()
{
  return closure #2 in MultiwayViewController.viewWillTransition(to:with:)();
}

void partial apply for closure #1 in MultiwayViewController.showKickParticipantAlert(toKick:)(uint64_t a1)
{
  type metadata accessor for Participant(0);
  uint64_t v3 = *(void *)(v1 + 16);
  closure #1 in MultiwayViewController.showKickParticipantAlert(toKick:)(a1, v3);
}

void partial apply for closure #2 in MultiwayViewController.showKickParticipantAlert(toKick:)(uint64_t a1)
{
  closure #2 in MultiwayViewController.showKickParticipantAlert(toKick:)(a1, v1);
}

uint64_t _sSTsSQ7ElementRpzrlE8containsySbABFSbABXEfU_Say10Foundation4UUIDVG_Tg5TA_0(uint64_t a1)
{
  return specialized closure #1 in Sequence<>.contains(_:)(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1C3605814()
{
  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.cameraViewController(_:didChange:)()
{
  closure #1 in MultiwayViewController.cameraViewController(_:didChange:)(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C3605858()
{
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

double partial apply for closure #1 in MultiwayViewController.didCapture(_:)()
{
  *(void *)&double result = closure #1 in MultiwayViewController.didCapture(_:)(*(void *)(v0 + 16), *(void *)(v0 + 24)).n128_u64[0];
  return result;
}

uint64_t sub_1C3605890()
{
  return OUTLINED_FUNCTION_7_44();
}

uint64_t sub_1C360589C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.setControlsState(_:animated:)()
{
  closure #1 in MultiwayViewController.setControlsState(_:animated:)(v0 + 16, *(unsigned char *)(v0 + 232), *(unsigned char *)(v0 + 233), *(void *)(v0 + 240), *(unsigned char *)(v0 + 248));
}

void partial apply for closure #2 in MultiwayViewController.setControlsState(_:animated:)(char a1)
{
}

void partial apply for closure #1 in MultiwayViewController.participantViewDragController(_:didEndDragAtPosition:velocity:)()
{
  closure #1 in CallControlsViewController.animateSidebarState(_:)(*(void **)(v0 + 16));
}

uint64_t partial apply for closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  return closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v0, (uint64_t)&unk_1F1EB5CB0, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:), (void (*)(uint64_t, uint64_t, void *))_sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5);
}

uint64_t partial apply for closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  return closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t partial apply for closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  return closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v0, (uint64_t)&unk_1F1EB5C60, (uint64_t)&async function pointer to partial apply for closure #1 in closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:), (void (*)(uint64_t, uint64_t, void *))_sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5);
}

uint64_t partial apply for closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  return closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v0, (uint64_t)&unk_1F1EB5C38, (uint64_t)&async function pointer to partial apply for closure #1 in closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:), (void (*)(uint64_t, uint64_t, void *))_sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5);
}

unint64_t lazy protocol witness table accessor for type VideoMessagingError and conformance VideoMessagingError()
{
  unint64_t result = lazy protocol witness table cache variable for type VideoMessagingError and conformance VideoMessagingError;
  if (!lazy protocol witness table cache variable for type VideoMessagingError and conformance VideoMessagingError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessagingError and conformance VideoMessagingError);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VideoMessagingError and conformance VideoMessagingError;
  if (!lazy protocol witness table cache variable for type VideoMessagingError and conformance VideoMessagingError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessagingError and conformance VideoMessagingError);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewController.LayoutStyle and conformance MultiwayViewController.LayoutStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type MultiwayViewController.LayoutStyle and conformance MultiwayViewController.LayoutStyle;
  if (!lazy protocol witness table cache variable for type MultiwayViewController.LayoutStyle and conformance MultiwayViewController.LayoutStyle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewController.LayoutStyle and conformance MultiwayViewController.LayoutStyle);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewController.LayoutIdiom and conformance MultiwayViewController.LayoutIdiom()
{
  unint64_t result = lazy protocol witness table cache variable for type MultiwayViewController.LayoutIdiom and conformance MultiwayViewController.LayoutIdiom;
  if (!lazy protocol witness table cache variable for type MultiwayViewController.LayoutIdiom and conformance MultiwayViewController.LayoutIdiom)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewController.LayoutIdiom and conformance MultiwayViewController.LayoutIdiom);
  }
  return result;
}

uint64_t sub_1C3605BC4(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(v1);
}

uint64_t sub_1C3605BFC(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return MultiwayViewController.didExpandIncomingCallBanner.setter(v1);
}

uint64_t sub_1C3605C24(uint64_t *a1)
{
  return MultiwayViewController.deviceOrientation.setter(*a1);
}

uint64_t sub_1C3605C50(uint64_t *a1)
{
  return MultiwayViewController.frontBoardInterfaceOrientation.setter(*a1);
}

uint64_t sub_1C3605C78()
{
  return MultiwayViewController.$isOnScreen.getter();
}

uint64_t sub_1C3605CA4(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(v1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo, (uint64_t (*)(uint64_t))MultiwayViewController.hasParticipantVideo.didset);
}

uint64_t sub_1C3605CE8(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return MultiwayViewController.isDisplayedInBanner.setter(v1);
}

uint64_t sub_1C3605D30(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return MultiwayViewController.isFullScreen.setter(v1);
}

uint64_t sub_1C3605D58(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return MultiwayViewController.isPipStashed.setter(v1);
}

uint64_t sub_1C3605D80(uint64_t *a1)
{
  return MultiwayViewController.pipState.setter(*a1);
}

uint64_t sub_1C3605DA8()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = MultiwayViewController.isCaptioningEnabled.getter();
  *uint64_t v0 = result & 1;
  return result;
}

uint64_t sub_1C3605DD4(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return MultiwayViewController.isCaptioningEnabled.setter(v1);
}

uint64_t sub_1C3605DF8()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = MultiwayViewController.effectsViewController.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C3605E24()
{
  OUTLINED_FUNCTION_2_0();
  uint64_t result = MultiwayViewController.effectsBrowserViewController.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C3605E50@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for MultiwayViewController.delegate : MultiwayViewController(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate, a2);
}

uint64_t sub_1C3605E70()
{
  return key path setter for MultiwayViewController.delegate : MultiwayViewController();
}

uint64_t sub_1C3605E90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for MultiwayViewController.delegate : MultiwayViewController(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate, a2);
}

uint64_t sub_1C3605EB0()
{
  return key path setter for MultiwayViewController.delegate : MultiwayViewController();
}

id sub_1C3605ED0()
{
  OUTLINED_FUNCTION_2_0();
  id result = MultiwayViewController.flashView.getter();
  *uint64_t v0 = result;
  return result;
}

id sub_1C3605EFC()
{
  OUTLINED_FUNCTION_2_0();
  id result = MultiwayViewController.insulatingView.getter();
  *uint64_t v0 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for VideoMessagingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C3605FD4);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for VideoMessagingError()
{
}

uint64_t ObjC metadata update function for MultiwayViewController()
{
  return type metadata accessor for MultiwayViewController();
}

uint64_t type metadata accessor for MultiwayViewController()
{
  uint64_t result = type metadata singleton initialization cache for MultiwayViewController;
  if (!type metadata singleton initialization cache for MultiwayViewController) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void type metadata completion function for MultiwayViewController()
{
  _s10Foundation4DateVSgMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Date?, MEMORY[0x1F418BA30]);
  if (v0 <= 0x3F)
  {
    _s10Foundation4DateVSgMaTm_0(319, &lazy cache variable for type metadata for VideoReactionPickerTip?, MEMORY[0x1E4FAD9D8]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Bool>();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for MultiwayViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MultiwayViewController);
}

uint64_t dispatch thunk of MultiwayViewController.__allocating_init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return (*(uint64_t (**)(void))(v0 + 648))();
}

void type metadata accessor for MultiwayViewController.LayoutStyle()
{
}

unsigned char *storeEnumTagSinglePayload for MultiwayViewController.LayoutStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C36063E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for MultiwayViewController.LayoutIdiom()
{
}

void destroy for MultiwayViewController.ViewContent(uint64_t a1)
{
  swift_release();
  swift_release();

  unint64_t v2 = *(void **)(a1 + 208);
}

uint64_t initializeWithCopy for MultiwayViewController.ViewContent(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  long long v41 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v41;
  id v8 = *(void **)(a2 + 48);
  id v7 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v7;
  v9 = *(void **)(a2 + 64);
  v10 = *(void **)(a2 + 72);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  v11 = *(void **)(a2 + 80);
  objc_super v12 = *(void **)(a2 + 88);
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  v42 = *(void **)(a2 + 96);
  v43 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = v42;
  *(void *)(a1 + 104) = v43;
  v44 = *(void **)(a2 + 112);
  v45 = *(void **)(a2 + 120);
  *(void *)(a1 + 112) = v44;
  *(void *)(a1 + 120) = v45;
  v13 = *(void **)(a2 + 136);
  v46 = *(void **)(a2 + 128);
  *(void *)(a1 + 128) = v46;
  *(void *)(a1 + 136) = v13;
  v47 = v13;
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  v48 = *(void **)(a2 + 160);
  objc_super v15 = *(void **)(a2 + 168);
  *(void *)(a1 + 160) = v48;
  *(void *)(a1 + 168) = v15;
  v49 = v15;
  v50 = *(void **)(a2 + 176);
  v51 = *(void **)(a2 + 184);
  *(void *)(a1 + 176) = v50;
  *(void *)(a1 + 184) = v51;
  v52 = *(void **)(a2 + 192);
  v53 = *(void **)(a2 + 200);
  *(void *)(a1 + 192) = v52;
  *(void *)(a1 + 200) = v53;
  v54 = *(void **)(a2 + 208);
  *(void *)(a1 + 208) = v54;
  id v16 = v3;
  id v17 = v4;
  id v18 = v6;
  id v19 = v5;
  id v20 = (id)v41;
  id v21 = v8;
  id v22 = v7;
  id v23 = v9;
  id v24 = v10;
  id v25 = v11;
  id v26 = v12;
  id v27 = v42;
  id v28 = v43;
  id v29 = v44;
  id v30 = v45;
  id v31 = v46;
  id v32 = v47;
  swift_retain();
  swift_retain();
  id v33 = v48;
  id v34 = v49;
  id v35 = v50;
  id v36 = v51;
  id v37 = v52;
  id v38 = v53;
  id v39 = v54;
  return a1;
}

uint64_t assignWithCopy for MultiwayViewController.ViewContent(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  v13 = *(void **)(a2 + 24);
  uint64_t v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  id v16 = *(void **)(a2 + 32);
  uint64_t v17 = *(void *)(a2 + 40);
  id v18 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v16;
  id v19 = v16;

  *(void *)(a1 + 40) = v17;
  id v20 = *(void **)(a2 + 48);
  id v21 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v20;
  id v22 = v20;

  id v23 = *(void **)(a2 + 56);
  id v24 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v23;
  id v25 = v23;

  id v26 = *(void **)(a1 + 64);
  id v27 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v27;
  id v28 = v27;

  id v29 = *(void **)(a1 + 72);
  id v30 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v30;
  id v31 = v30;

  id v32 = *(void **)(a1 + 80);
  id v33 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v33;
  id v34 = v33;

  id v35 = *(void **)(a1 + 88);
  id v36 = *(void **)(a2 + 88);
  *(void *)(a1 + 88) = v36;
  id v37 = v36;

  id v38 = *(void **)(a2 + 96);
  id v39 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v38;
  id v40 = v38;

  long long v41 = *(void **)(a1 + 104);
  v42 = *(void **)(a2 + 104);
  *(void *)(a1 + 104) = v42;
  id v43 = v42;

  v44 = *(void **)(a1 + 112);
  v45 = *(void **)(a2 + 112);
  *(void *)(a1 + 112) = v45;
  id v46 = v45;

  v47 = *(void **)(a1 + 120);
  v48 = *(void **)(a2 + 120);
  *(void *)(a1 + 120) = v48;
  id v49 = v48;

  v50 = *(void **)(a1 + 128);
  v51 = *(void **)(a2 + 128);
  *(void *)(a1 + 128) = v51;
  id v52 = v51;

  v53 = *(void **)(a2 + 136);
  v54 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = v53;
  id v55 = v53;

  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  v56 = *(void **)(a1 + 160);
  v57 = *(void **)(a2 + 160);
  *(void *)(a1 + 160) = v57;
  id v58 = v57;

  v59 = *(void **)(a1 + 168);
  v60 = *(void **)(a2 + 168);
  *(void *)(a1 + 168) = v60;
  id v61 = v60;

  v62 = *(void **)(a1 + 176);
  v63 = *(void **)(a2 + 176);
  *(void *)(a1 + 176) = v63;
  id v64 = v63;

  v65 = *(void **)(a1 + 184);
  v66 = *(void **)(a2 + 184);
  *(void *)(a1 + 184) = v66;
  id v67 = v66;

  v68 = *(void **)(a1 + 192);
  v69 = *(void **)(a2 + 192);
  *(void *)(a1 + 192) = v69;
  id v70 = v69;

  v71 = *(void **)(a1 + 200);
  v72 = *(void **)(a2 + 200);
  *(void *)(a1 + 200) = v72;
  id v73 = v72;

  v74 = *(void **)(a1 + 208);
  v75 = *(void **)(a2 + 208);
  *(void *)(a1 + 208) = v75;
  id v76 = v75;

  return a1;
}

void *__swift_memcpy216_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD8uLL);
}

uint64_t assignWithTake for MultiwayViewController.ViewContent(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  id v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  id v7 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  id v8 = *(void **)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);

  id v9 = *(void **)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);

  v10 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  v11 = *(void **)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);

  swift_release();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();

  id v12 = *(void **)(a1 + 168);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);

  v13 = *(void **)(a1 + 184);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);

  uint64_t v14 = *(void **)(a1 + 200);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);

  id v15 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);

  return a1;
}

uint64_t getEnumTagSinglePayload for MultiwayViewController.ViewContent(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 216))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiwayViewController.ViewContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 216) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 216) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for MultiwayViewController.ViewContent()
{
}

uint64_t initializeWithCopy for MultiwayViewController.ConversationSnapshot(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MultiwayViewController.ConversationSnapshot(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  return a1;
}

__n128 __swift_memcpy36_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MultiwayViewController.ConversationSnapshot(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiwayViewController.ConversationSnapshot(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 36))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiwayViewController.ConversationSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 36) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 36) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for MultiwayViewController.ConversationSnapshot()
{
}

uint64_t getEnumTagSinglePayload for MultiwayViewController.VideoVisibility(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiwayViewController.VideoVisibility(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for MultiwayViewController.VideoVisibility()
{
}

uint64_t initializeWithCopy for MultiwayViewController.EffectsCaptureInfo(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for MultiwayViewController.EffectsCaptureInfo(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for MultiwayViewController.EffectsCaptureInfo(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

void *type metadata accessor for MultiwayViewController.EffectsCaptureInfo()
{
  return &unk_1F1EB5A50;
}

uint64_t sub_1C3606F04()
{
  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

uint64_t _sIeyB_Ieg_TRTA_0()
{
  return OUTLINED_FUNCTION_78_8(*(void *)(v0 + 16));
}

uint64_t sub_1C3606F3C()
{
  swift_release();
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  *unint64_t v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v3, v4, v5, v6);
}

uint64_t partial apply for closure #1 in closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  *unint64_t v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v3, v4, v5, v6);
}

uint64_t sub_1C3607094()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  *unint64_t v1 = v2;
  v1[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  uint64_t v3 = OUTLINED_FUNCTION_34_4();
  return closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v3, v4, v5, v6, v7);
}

uint64_t objectdestroy_224Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  *unint64_t v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v3, v4, v5, v6);
}

uint64_t _s15ConversationKit11ParticipantVWOcTm_18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_89();
  v4(v3);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_124();
  v5();
  return a2;
}

uint64_t sub_1C36072EC()
{
  swift_release();
  return swift_deallocObject();
}

BOOL partial apply for closure #1 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)()
{
  return closure #1 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

BOOL partial apply for closure #2 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)()
{
  return closure #2 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t partial apply for closure #3 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C3607364()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)()
{
  closure #1 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(*(void **)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1C36073B0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

uint64_t sub_1C36073E8()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(char a1)
{
  return closure #2 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_1C3607434()
{
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

uint64_t sub_1C3607464()
{
  return OUTLINED_FUNCTION_7_44();
}

uint64_t sub_1C3607470()
{
  return OUTLINED_FUNCTION_7_44();
}

void partial apply for specialized closure #1 in EffectsHandler.handleAVCServerTimeout()()
{
  specialized closure #1 in EffectsHandler.handleAVCServerTimeout()(*(void **)(v0 + 16));
}

void partial apply for closure #1 in MultiwayViewController.setParticipantListState(_:animated:)()
{
  closure #1 in MultiwayViewController.setParticipantListState(_:animated:)((id *)(v0 + 16));
}

uint64_t _s15ConversationKit11ParticipantVWOhTm_12(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

void partial apply for closure #1 in MultiwayViewController.handleShareLinkAction(_:)()
{
  closure #1 in MultiwayViewController.handleShareLinkAction(_:)(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t objectdestroy_36Tm()
{
  swift_release();

  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:)(void *a1, void *a2)
{
  return closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:)(a1, a2, *(void *)(v2 + 16), *(uint64_t **)(v2 + 24));
}

uint64_t sub_1C3607534()
{
  swift_release();

  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:)()
{
  closure #1 in closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:)(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

void partial apply for closure #1 in MultiwayViewController.needsUpdatePresentationContexts.didset()
{
  closure #1 in MultiwayViewController.needsUpdatePresentationContexts.didset(v0);
}

uint64_t sub_1C3607588()
{
  return OUTLINED_FUNCTION_7_44();
}

uint64_t partial apply for closure #1 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)()
{
  return closure #1 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(*(unsigned char *)(v0 + 16), v0 + 24, *(void *)(v0 + 240));
}

uint64_t objectdestroy_321Tm()
{
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(char a1)
{
  return closure #2 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(a1, *(unsigned char *)(v1 + 16), v1 + 24, *(void *)(v1 + 240));
}

uint64_t sub_1C36076C4()
{
  return objectdestroy_290Tm();
}

void partial apply for closure #1 in MultiwayViewController.setLocalParticipantState(_:animated:)()
{
  closure #1 in MultiwayViewController.setLocalParticipantState(_:animated:)(v0 + 16, *(unsigned __int8 *)(v0 + 232), *(unsigned char *)(v0 + 233));
}

uint64_t sub_1C36076DC()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in MultiwayViewController.setLocalParticipantState(_:animated:)(uint64_t a1)
{
  closure #2 in MultiwayViewController.setLocalParticipantState(_:animated:)(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(unsigned char *)(v1 + 25));
}

void partial apply for closure #1 in MultiwayViewController.showReactionPicker(after:)(uint64_t a1)
{
  closure #1 in MultiwayViewController.showReactionPicker(after:)(a1, v1);
}

id partial apply for closure #1 in MultiwayViewController.startRecordingVideoMessage()(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + 72), sel_updateCountdownWith_, a1);
}

uint64_t sub_1C3607744()
{
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in MultiwayViewController.startRecordingVideoMessage()(char a1)
{
  closure #2 in MultiwayViewController.startRecordingVideoMessage()(a1, v1 + 16, *(void *)(v1 + 232));
}

void partial apply for closure #1 in MultiwayViewController.showCameraAlert()(uint64_t a1)
{
  closure #1 in MultiwayViewController.showCameraAlert()(a1, v1);
}

uint64_t outlined release of MultiwayViewController.ViewContent(uint64_t a1)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 24);
  uint64_t v6 = *(void **)(a1 + 48);
  uint64_t v7 = *(void **)(a1 + 56);
  v11 = *(void **)(a1 + 32);
  id v12 = *(void **)(a1 + 64);
  v13 = *(void **)(a1 + 72);
  uint64_t v14 = *(void **)(a1 + 80);
  uint64_t v8 = *(void **)(a1 + 96);
  id v15 = *(void **)(a1 + 88);
  id v16 = *(void **)(a1 + 104);
  uint64_t v17 = *(void **)(a1 + 112);
  id v18 = *(void **)(a1 + 120);
  uint64_t v9 = *(void **)(a1 + 136);
  id v19 = *(void **)(a1 + 160);
  id v20 = *(void **)(a1 + 128);
  id v21 = *(void **)(a1 + 168);
  id v22 = *(void **)(a1 + 176);
  id v23 = *(void **)(a1 + 184);
  id v24 = *(void **)(a1 + 192);
  id v25 = *(void **)(a1 + 200);
  id v26 = *(void **)(a1 + 208);
  swift_release();
  swift_release();

  return a1;
}

void partial apply for closure #1 in MultiwayViewController.restartAutoHideInCallControlsTimer()(uint64_t a1)
{
  closure #1 in MultiwayViewController.restartAutoHideInCallControlsTimer()(a1, v1);
}

uint64_t sub_1C36079D0()
{
  uint64_t v1 = (id *)(v0 + 32);
  switch(*(unsigned char *)(v0 + 72))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.showSNAPHudIfNeeded(for:)()
{
  closure #1 in MultiwayViewController.showSNAPHudIfNeeded(for:)(*(void **)(v0 + 16), *(uint8_t **)(v0 + 24), v0 + 32);
}

void partial apply for closure #1 in MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)()
{
  closure #1 in MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

id partial apply for closure #3 in MultiwayViewController.hideAlert()()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setHidden_, 1);
}

uint64_t partial apply for closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver()()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v0 = type metadata accessor for VideoReactionPickerTip();
  OUTLINED_FUNCTION_1(v0);
  OUTLINED_FUNCTION_148();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10(v1);
  *uint64_t v2 = v3;
  v2[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v4 = OUTLINED_FUNCTION_34_4();
  return closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver()(v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_381Tm()
{
  OUTLINED_FUNCTION_14();
  type metadata accessor for VideoReactionPickerTip();
  OUTLINED_FUNCTION_4();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_1_19();
  v0();
  swift_release();
  OUTLINED_FUNCTION_15_0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in implicit closure #2 in MultiwayViewController.startTipStateObserver()()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v0 = type metadata accessor for VideoReactionPickerTip();
  OUTLINED_FUNCTION_1(v0);
  OUTLINED_FUNCTION_148();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10(v1);
  *uint64_t v2 = v3;
  v2[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v4 = OUTLINED_FUNCTION_34_4();
  return closure #2 in implicit closure #2 in MultiwayViewController.startTipStateObserver()(v4, v5, v6, v7, v8);
}

void partial apply for closure #1 in MultiwayViewController.registerCaptioningStateObservers()(uint64_t a1)
{
  closure #1 in MultiwayViewController.registerCaptioningStateObservers()(a1, v1);
}

uint64_t partial apply for closure #1 in MultiwayViewController.promptForCaptionsSpeechModelFetch()()
{
  return closure #1 in MultiwayViewController.promptForCaptionsSpeechModelFetch()(v0);
}

uint64_t partial apply for closure #2 in MultiwayViewController.promptForCaptionsSpeechModelFetch()()
{
  return closure #2 in MultiwayViewController.promptForCaptionsSpeechModelFetch()();
}

uint64_t partial apply for closure #4 in MultiwayViewController.mostActiveParticipants.getter()
{
  return closure #4 in MultiwayViewController.mostActiveParticipants.getter() & 1;
}

void partial apply for closure #2 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #5 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #12 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1)
{
  closure #12 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1[2], v1[3], v1[4]);
}

void partial apply for closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #17 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #19 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #21 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #22 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #32 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #35 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, char a2)
{
  closure #35 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2 & 1, v2);
}

void partial apply for closure #36 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #37 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #38 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #43 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
}

void partial apply for closure #51 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1)
{
  closure #51 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1 & 1, v1);
}

void partial apply for closure #53 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  closure #53 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0, 1);
}

void partial apply for closure #54 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  closure #53 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0, 0);
}

void partial apply for closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:)(uint64_t a1)
{
  closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:)(a1, *(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24));
}

void partial apply for closure #1 in closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:)(uint64_t a1)
{
  closure #1 in closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:)(a1, v1);
}

void partial apply for specialized closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto()()
{
  specialized closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto()(v0, (uint64_t (*)(void))MultiwayViewController.nameForPhotoIndicator.getter, (uint64_t (*)(void))MultiwayViewController.insulatingView.getter);
}

{
  uint64_t v0;

  specialized closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto()(v0, (uint64_t (*)(void))MostActiveParticipantViewController.nameForPhotoIndicator.getter, (uint64_t (*)(void))MostActiveParticipantViewController.insulatingView.getter);
}

uint64_t sub_1C3608138()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.scheduleLinkEducationFirstTimeAlert()()
{
  closure #1 in MultiwayViewController.scheduleLinkEducationFirstTimeAlert()(*(void *)(v0 + 16), (void *)(v0 + 24));
}

void *partial apply for closure #1 in closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #1 in closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t sub_1C360818C()
{
  return OUTLINED_FUNCTION_7_44();
}

void partial apply for closure #1 in closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  closure #1 in closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1C36081A4()
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  swift_release();
  OUTLINED_FUNCTION_1_19();
  v0();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)()
{
  return partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)(MEMORY[0x1F418BC48], (uint64_t (*)(uint64_t, uint64_t))specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:));
}

id *outlined release of ParticipantMediaPriorities(id *a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t objectdestroy_67Tm()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = (int *)type metadata accessor for Participant(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  swift_release();
  uint64_t v4 = v0 + v3;
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      (*(void (**)(uint64_t))(v5 + 8))(v0 + v3);
      break;
    case 4u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v13();
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v15 = v4 + *(int *)(v14 + 48);
      swift_bridgeObjectRelease();
      if (*(void *)(v15 + 120) >= 2uLL) {
        __swift_destroy_boxed_opaque_existential_1(v15 + 96);
      }
      if (*(void *)(v15 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v4 + *(int *)(v14 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v6();
  uint64_t v7 = (id *)(v4 + v1[7]);
  if (*v7)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v8 = v4 + v1[14];
  uint64_t v9 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = v8 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v10, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v10, v9);
  }
  swift_release();
  OUTLINED_FUNCTION_200_1();
  OUTLINED_FUNCTION_15_0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MultiwayViewController.scheduleUpdate(for:)()
{
  return partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)(type metadata accessor for Participant, (uint64_t (*)(uint64_t, uint64_t))closure #1 in MultiwayViewController.scheduleUpdate(for:));
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4, v5);
}

uint64_t objectdestroy_409Tm()
{
  swift_release();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

uint64_t sub_1C360869C()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

void partial apply for closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
}

uint64_t sub_1C36086F0()
{
  if (v0[2]) {
    swift_release();
  }
  if (v0[4]) {
    swift_release();
  }
  if (v0[6]) {
    swift_release();
  }
  if (v0[8]) {
    swift_release();
  }
  if (v0[10]) {
    swift_release();
  }
  if (v0[12]) {
    swift_release();
  }
  return swift_deallocObject();
}

void partial apply for closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
}

uint64_t partial apply for closure #1 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(void *a1)
{
  return closure #1 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1C36087C4()
{
  return objectdestroy_290Tm();
}

uint64_t objectdestroy_290Tm()
{
  swift_release();
  swift_release();

  OUTLINED_FUNCTION_23_0();
  return swift_deallocObject();
}

void partial apply for closure #3 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)()
{
  closure #3 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(*(double *)(v0 + 232));
}

uint64_t partial apply for closure #2 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)()
{
  return closure #2 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(*(void *)(v0 + 16));
}

uint64_t sub_1C36088E8()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in MultiwayViewController.reactionPickerTipState.didset()
{
  double v1 = 0.0;
  if (*(unsigned char *)(v0 + 24)) {
    double v1 = 1.0;
  }
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, v1);
}

uint64_t sub_1C3608944()
{
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

id partial apply for closure #2 in MultiwayViewController.reactionPickerTipState.didset()
{
  if ((*(unsigned char *)(v0 + 16) & 1) == 0) {
    return objc_msgSend(*(id *)(v0 + 24), sel_removeFromSuperview);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_41_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return outlined init with take of CATransform3D?(v4, (uint64_t)va, v5);
}

id OUTLINED_FUNCTION_75_8(uint64_t a1)
{
  v2[8] = a1;
  v2[4] = v3;
  v2[5] = v4;
  *(void *)(v1 + 72) = *(void *)(v1 + 64);
  return v5;
}

uint64_t OUTLINED_FUNCTION_76_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return outlined init with take of CATransform3D?((uint64_t)va, v7 - 248, v6);
}

uint64_t OUTLINED_FUNCTION_86_10()
{
  return v0;
}

id OUTLINED_FUNCTION_95_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + a1);
  return objc_msgSend(v3, sel_numberOfTapsRequired);
}

id OUTLINED_FUNCTION_107_8()
{
  return objc_msgSend(v0, (SEL)(v1 + 1048), v3, v4, v5, v6);
}

uint64_t OUTLINED_FUNCTION_109_4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[15] = a2;
  v2[16] = result;
  uint64_t v5 = *(void *)(v3 + 72);
  v2[13] = v4 + 16;
  v2[14] = v5;
  v2[12] = v4 + 32;
  return result;
}

void OUTLINED_FUNCTION_113_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  closure #10 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, a3, a4, v4);
}

void OUTLINED_FUNCTION_114_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  closure #7 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_116_4(uint64_t a1, uint64_t a2)
{
  return outlined init with take of CATransform3D?(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_118_4(char a1)
{
  return closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_119_5(char a1)
{
  closure #11 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_120_5(uint64_t a1, float a2, float a3, float a4)
{
  return closure #52 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a2, a3, a4, a1, v4);
}

void OUTLINED_FUNCTION_121_4(char a1)
{
  closure #27 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_125_7(uint64_t a1)
{
  closure #44 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_126_4(char a1)
{
  closure #25 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_128_4(char a1)
{
  closure #8 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_129_5(char a1)
{
  closure #50 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_130_6(char a1)
{
  closure #31 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_131_4(char a1)
{
  closure #24 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_135_4(void *a1, uint64_t a2, uint64_t a3)
{
  closure #48 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, a3, v3);
}

void OUTLINED_FUNCTION_136_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  closure #20 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, a3, v3);
}

void OUTLINED_FUNCTION_139_6(uint64_t a1, char a2)
{
  closure #41 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_142_3(uint64_t a1, uint64_t a2)
{
  return closure #16 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_144_5(uint64_t a1, uint64_t a2)
{
  return closure #14 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_152_2()
{
  return closure #42 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0);
}

uint64_t OUTLINED_FUNCTION_153_2()
{
  return closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0);
}

void OUTLINED_FUNCTION_159_2(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_163_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return outlined init with take of CATransform3D?((uint64_t)&a43, (uint64_t)&a70, v70);
}

double OUTLINED_FUNCTION_170_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_171_3()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_173_3()
{
  return String.init<A>(reflecting:)();
}

id OUTLINED_FUNCTION_175_3(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return [v3 (SEL)(v2 + 2007)];
}

uint64_t OUTLINED_FUNCTION_176_3@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 8) = a1;
  return swift_unknownObjectWeakAssign();
}

uint64_t OUTLINED_FUNCTION_186_3(uint64_t a1)
{
  return outlined init with take of CATransform3D?(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_189_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_197_1(uint64_t a1, uint64_t a2)
{
  return outlined init with take of CATransform3D?(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_200_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_205_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_209_2()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_213_0()
{
  return MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)((unsigned __int8 *)(v0 + 48), 252, 1);
}

id OUTLINED_FUNCTION_216_2()
{
  return [v0 (SEL)(v1 + 717)];
}

uint64_t OUTLINED_FUNCTION_219_1()
{
  return type metadata accessor for DispatchPredicate();
}

void *OUTLINED_FUNCTION_221_1(void *a1, uint64_t a2)
{
  return __swift_project_boxed_opaque_existential_1(a1, a2);
}

void OUTLINED_FUNCTION_222_1()
{
}

unint64_t OUTLINED_FUNCTION_226()
{
  return 0xD000000000000027;
}

uint64_t OUTLINED_FUNCTION_227_1()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_228_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_233_0(uint64_t a1, uint64_t a2)
{
  return outlined init with take of CATransform3D?(v2, a2, v3);
}

void OUTLINED_FUNCTION_234_0()
{
  JUMPOUT(0x1C87733A0);
}

uint64_t OUTLINED_FUNCTION_235_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_242_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_244_1(uint64_t a1, uint64_t a2)
{
  return outlined init with take of CATransform3D?(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_249_1(uint64_t a1, uint64_t a2)
{
  return outlined init with take of CATransform3D?(v2, a2, v3);
}

id OUTLINED_FUNCTION_254_1(void *a1)
{
  return [a1 (SEL)(v1 + 280)];
}

uint64_t *UIColor.systemGreenWithUserInterfaceStyleLight.unsafeMutableAddressor()
{
  if (one-time initialization token for systemGreenWithUserInterfaceStyleLight != -1) {
    swift_once();
  }
  return &static UIColor.systemGreenWithUserInterfaceStyleLight;
}

id static UIColor.systemGreenWithUserInterfaceStyleLight.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for systemGreenWithUserInterfaceStyleLight, (void **)&static UIColor.systemGreenWithUserInterfaceStyleLight);
}

id one-time initialization function for systemFillDark()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  id result = @nonobjc UIColor.init(dynamicProvider:)((uint64_t)closure #1 in variable initialization expression of static UIColor.systemFillDark, 0);
  static UIColor.systemFillDark = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static UIColor.systemFillDark(uint64_t a1)
{
  return closure #1 in variable initialization expression of static UIColor.systemGreenWithUserInterfaceStyleLight(a1, (SEL *)&selRef_systemFillColor);
}

uint64_t closure #1 in closure #1 in variable initialization expression of static UIColor.systemFillDark(uint64_t a1)
{
  return closure #1 in closure #1 in variable initialization expression of static UIColor.systemGreenWithUserInterfaceStyleLight(a1);
}

uint64_t *UIColor.systemFillDark.unsafeMutableAddressor()
{
  if (one-time initialization token for systemFillDark != -1) {
    swift_once();
  }
  return &static UIColor.systemFillDark;
}

id static UIColor.systemFillDark.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for systemFillDark, (void **)&static UIColor.systemFillDark);
}

void specialized Sequence.compactMap<A>(_:)()
{
  OUTLINED_FUNCTION_15_17();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v42 = v7;
  uint64_t v45 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_10_5();
  uint64_t v44 = v9;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_42();
  uint64_t v41 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v13 = OUTLINED_FUNCTION_8(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_118();
  uint64_t v14 = *(void *)(v4 + 16);
  if (v14)
  {
    uint64_t v15 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_5_3();
    uint64_t v17 = v4 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v43 = *(void *)(v18 + 72);
    OUTLINED_FUNCTION_483();
    swift_bridgeObjectRetain();
    uint64_t v46 = MEMORY[0x1E4FBC860];
    uint64_t v19 = v42;
    while (1)
    {
      OUTLINED_FUNCTION_124();
      v20();
      uint64_t v21 = OUTLINED_FUNCTION_466();
      __swift_storeEnumTagSinglePayload(v21, v22, v23, v24);
      uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 1, v15);
      if (EnumTagSinglePayload == 1) {
        break;
      }
      MEMORY[0x1F4188790](EnumTagSinglePayload);
      OUTLINED_FUNCTION_61();
      OUTLINED_FUNCTION_69_3();
      OUTLINED_FUNCTION_46();
      v26();
      ConversationController.participant(with:)();
      OUTLINED_FUNCTION_344();
      OUTLINED_FUNCTION_26_2();
      v27();
      uint64_t v28 = OUTLINED_FUNCTION_85_2();
      if (__swift_getEnumTagSinglePayload(v28, v29, v45) == 1)
      {
        outlined destroy of SystemUpdateNotice?(v19, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        _s15ConversationKit11ParticipantVWObTm_6(v19, v41);
        _s15ConversationKit11ParticipantVWObTm_6(v41, v44);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          char v35 = OUTLINED_FUNCTION_343();
          uint64_t v46 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v35, v36, v37, v38);
        }
        unint64_t v31 = *(void *)(v46 + 16);
        unint64_t v30 = *(void *)(v46 + 24);
        if (v31 >= v30 >> 1)
        {
          char v39 = OUTLINED_FUNCTION_57_5(v30);
          uint64_t v46 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v39, v31 + 1, 1, v46);
        }
        *(void *)(v46 + 16) = v31 + 1;
        OUTLINED_FUNCTION_12_19();
        _s15ConversationKit11ParticipantVWObTm_6(v44, v33 + v32 + *(void *)(v34 + 72) * v31);
        uint64_t v19 = v42;
      }
      v17 += v43;
      if (!--v14) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_14:
    uint64_t v40 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload(v0, 1, 1, v40);
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_17();
}

uint64_t specialized Sequence.compactMap<A>(_:)(void *(*a1)(uint64_t *__return_ptr, _OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (i = (unsigned char *)(a3 + 96); ; i += 72)
    {
      char v9 = *i;
      long long v10 = *((_OWORD *)i - 3);
      v14[0] = *((_OWORD *)i - 4);
      v14[1] = v10;
      long long v11 = *((_OWORD *)i - 1);
      v14[2] = *((_OWORD *)i - 2);
      v14[3] = v11;
      char v15 = v9;
      uint64_t v12 = a1(&v13, v14);
      if (v3) {
        break;
      }
      if (v13)
      {
        MEMORY[0x1C87733A0](v12);
        if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        return v16;
      }
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void specialized Sequence.forEach(_:)(uint64_t a1, uint64_t a2, char *a3)
{
  if (a1 == a2)
  {
LABEL_2:
  }
  else
  {
    if (a2 >= a1)
    {
      uint64_t v6 = (uint64_t *)&a3[OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants];
      unint64_t v7 = a1;
      while ((uint64_t)v7 < a2)
      {
        swift_beginAccess();
        uint64_t v8 = *v6;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v6 = v8;
        if (isUniquelyReferenced_nonNull_native)
        {
          if (a1 < 0) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v8 = specialized _ArrayBuffer._consumeAndCreateNew()();
          *uint64_t v6 = v8;
          if (a1 < 0)
          {
LABEL_12:
            __break(1u);
            break;
          }
        }
        if (v7 >= *(void *)(v8 + 16)) {
          goto LABEL_14;
        }
        uint64_t v10 = type metadata accessor for Participant(0);
        *(unsigned char *)(v8
                 + ((*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80))
                 + *(void *)(*(void *)(v10 - 8) + 72) * v7
                 + *(int *)(v10 + 52)) = 1;
        swift_endAccess();
        if (a2 == ++v7) {
          goto LABEL_2;
        }
      }
      __break(1u);
LABEL_14:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t specialized Sequence.forEach(_:)(uint64_t a1, char *a2)
{
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v45 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v50 = v9;
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v44 = a2;
  id v49 = &a2[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrameTasks];
  int64_t v46 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v51 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  long long v48 = xmmword_1C3769620;
  v47 = v10;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v7));
  uint64_t v14 = (v7 - 1) & v7;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v12 << 6))
  {
    uint64_t v19 = *(void *)(v51 + 48);
    uint64_t v20 = type metadata accessor for UUID();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = v21;
    uint64_t v23 = v19 + *(void *)(v21 + 72) * i;
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
    uint64_t v25 = v21 + 16;
    v24(v10, v23, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v20);
    uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v20);
    if (EnumTagSinglePayload == 1) {
      goto LABEL_34;
    }
    uint64_t v63 = v25;
    id v64 = (void (*)(char *, char *, uint64_t))v24;
    unint64_t v54 = v14;
    int64_t v55 = v12;
    v53 = &v43;
    uint64_t v27 = *(void *)(v22 + 64);
    MEMORY[0x1F4188790](EnumTagSinglePayload);
    unint64_t v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v62 = v22;
    id v52 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v52((char *)&v43 - v28, v10, v20);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v60 = static OS_os_log.conversationKit;
    int v59 = static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v29 = swift_allocObject();
    id v58 = &v43;
    *(_OWORD *)(v29 + 16) = v48;
    uint64_t v30 = v50;
    MEMORY[0x1F4188790](v29);
    unint64_t v31 = (char *)&v43 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v61 = (char *)&v43 - v28;
    v64(v31, (char *)&v43 - v28, v20);
    uint64_t v32 = __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v20);
    v57 = &v43;
    uint64_t v33 = MEMORY[0x1F4188790](v32);
    uint64_t v34 = (char *)&v43 - v28;
    v56 = &v43;
    MEMORY[0x1F4188790](v33);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v31, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v20) == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      unint64_t v35 = 0xE300000000000000;
      uint64_t v36 = 7104878;
    }
    else
    {
      uint64_t v37 = ((uint64_t (*)(char *, char *, uint64_t))v52)(v34, v31, v20);
      MEMORY[0x1F4188790](v37);
      v64((char *)&v43 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v20);
      uint64_t v36 = String.init<A>(reflecting:)();
      unint64_t v35 = v38;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v34, v20);
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v29 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v29 + 32) = v36;
    *(void *)(v29 + 40) = v35;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    char v39 = v49;
    swift_beginAccess();
    uint64_t v40 = v61;
    if (*(void *)(*(void *)v39 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(), (v41 & 1) != 0))
    {
      swift_endAccess();
      swift_retain();
      dispatch thunk of DispatchWorkItem.cancel()();
      swift_release();
    }
    else
    {
      swift_endAccess();
    }
    uint64_t v10 = v47;
    unint64_t v7 = v54;
    int64_t v12 = v55;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v40, v20);
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v16 >= v46) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v45 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v46) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v45 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v46) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v45 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v46) {
            goto LABEL_33;
          }
          unint64_t v17 = *(void *)(v45 + 8 * v12);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_20:
    uint64_t v14 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v46)
  {
LABEL_33:
    uint64_t v42 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v42);
LABEL_34:

    return swift_release();
  }
  unint64_t v17 = *(void *)(v45 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v46) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v45 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t specialized Sequence.forEach(_:)(uint64_t a1, void *a2)
{
  id v28 = a2;
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v26 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v25[1] = v25;
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = *(void *)(a1 + 48);
    uint64_t v19 = type metadata accessor for UUID();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v10, v18 + *(void *)(v20 + 72) * i, v19);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v19);
    uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v19);
    if (EnumTagSinglePayload == 1)
    {

      return swift_release();
    }
    MEMORY[0x1F4188790](EnumTagSinglePayload);
    uint64_t v23 = (char *)v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v10, v19);
    closure #2 in ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset((uint64_t)v23, (uint64_t)v28);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);

      return swift_release();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v27) {
      goto LABEL_28;
    }
    unint64_t v16 = *(void *)(v26 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v7 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v27) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v26 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v27) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v26 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v27) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v26 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v27)
  {
LABEL_28:
    uint64_t v24 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v24);

    return swift_release();
  }
  unint64_t v16 = *(void *)(v26 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v27) {
      goto LABEL_28;
    }
    unint64_t v16 = *(void *)(v26 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void specialized Sequence.first(where:)(uint64_t a1, id a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v19;
    uint64_t v18 = v20;
    uint64_t v4 = v21;
    int64_t v5 = v22;
    unint64_t v6 = v23;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  int64_t v17 = (unint64_t)(v4 + 64) >> 6;
  if (v3 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v6)
  {
    uint64_t v10 = (v6 - 1) & v6;
    unint64_t v11 = __clz(__rbit64(v6)) | (v5 << 6);
    int64_t v12 = v5;
    goto LABEL_29;
  }
  int64_t v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 < v17)
    {
      unint64_t v15 = *(void *)(v18 + 8 * v14);
      int64_t v12 = v5 + 1;
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v5 + 2;
      if (v5 + 2 >= v17) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v5 + 3;
      if (v5 + 3 >= v17) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v5 + 4;
      if (v5 + 4 >= v17) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (v15)
      {
LABEL_28:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
        id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
        if (v13)
        {
          do
          {
            if (objc_msgSend(v13, sel_identifier) == a2) {
              break;
            }

            int64_t v5 = v12;
            unint64_t v6 = v10;
            if ((v3 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (!__CocoaSet.Iterator.next()()) {
              break;
            }
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v13 = v24;
            swift_unknownObjectRelease();
            int64_t v12 = v5;
            uint64_t v10 = v6;
          }
          while (v24);
        }
        goto LABEL_33;
      }
      int64_t v12 = v5 + 5;
      if (v5 + 5 < v17)
      {
        unint64_t v15 = *(void *)(v18 + 8 * v12);
        if (!v15)
        {
          int64_t v16 = v5 + 6;
          while (v16 < v17)
          {
            unint64_t v15 = *(void *)(v18 + 8 * v16++);
            if (v15)
            {
              int64_t v12 = v16 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
    return;
  }
  __break(1u);
}

void specialized Sequence.first(where:)(uint64_t a1, id *a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v19;
    uint64_t v18 = v20;
    uint64_t v4 = v21;
    int64_t v5 = v22;
    unint64_t v6 = v23;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  int64_t v17 = (unint64_t)(v4 + 64) >> 6;
  if (v3 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v6)
  {
    uint64_t v10 = (v6 - 1) & v6;
    unint64_t v11 = __clz(__rbit64(v6)) | (v5 << 6);
    int64_t v12 = v5;
    goto LABEL_29;
  }
  int64_t v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 < v17)
    {
      unint64_t v15 = *(void *)(v18 + 8 * v14);
      int64_t v12 = v5 + 1;
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v5 + 2;
      if (v5 + 2 >= v17) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v5 + 3;
      if (v5 + 3 >= v17) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v5 + 4;
      if (v5 + 4 >= v17) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (v15)
      {
LABEL_28:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
        id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
        if (v13)
        {
          do
          {
            if (objc_msgSend(v13, sel_identifier) == *a2) {
              break;
            }

            int64_t v5 = v12;
            unint64_t v6 = v10;
            if ((v3 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (!__CocoaSet.Iterator.next()()) {
              break;
            }
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v13 = v24;
            swift_unknownObjectRelease();
            int64_t v12 = v5;
            uint64_t v10 = v6;
          }
          while (v24);
        }
        goto LABEL_33;
      }
      int64_t v12 = v5 + 5;
      if (v5 + 5 < v17)
      {
        unint64_t v15 = *(void *)(v18 + 8 * v12);
        if (!v15)
        {
          int64_t v16 = v5 + 6;
          while (v16 < v17)
          {
            unint64_t v15 = *(void *)(v18 + 8 * v16++);
            if (v15)
            {
              int64_t v12 = v16 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
    return;
  }
  __break(1u);
}

void specialized Sequence.first(where:)(uint64_t a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    uint64_t v9 = OUTLINED_FUNCTION_89();
    type metadata accessor for NSObject(v9, a3);
    lazy protocol witness table accessor for type TUConversationMember and conformance NSObject(a5);
    Set.Iterator.init(_cocoa:)();
    uint64_t v6 = v30;
    uint64_t v28 = v31;
    uint64_t v10 = v32;
    int64_t v11 = v33;
    unint64_t v12 = v34;
  }
  else
  {
    uint64_t v28 = a1 + 56;
    OUTLINED_FUNCTION_152_0();
    unint64_t v12 = v13 & v14;
    swift_bridgeObjectRetain();
    uint64_t v10 = v5;
    int64_t v11 = 0;
  }
  int64_t v27 = (unint64_t)(v10 + 64) >> 6;
  if (v6 < 0) {
    goto LABEL_7;
  }
LABEL_5:
  if (v12)
  {
    uint64_t v15 = (v12 - 1) & v12;
    unint64_t v16 = __clz(__rbit64(v12)) | (v11 << 6);
    int64_t v17 = v11;
    goto LABEL_26;
  }
  int64_t v19 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v19 < v27)
    {
      unint64_t v20 = *(void *)(v28 + 8 * v19);
      int64_t v17 = v11 + 1;
      if (v20) {
        goto LABEL_25;
      }
      int64_t v17 = v11 + 2;
      if (v11 + 2 >= v27) {
        goto LABEL_30;
      }
      unint64_t v20 = *(void *)(v28 + 8 * v17);
      if (v20) {
        goto LABEL_25;
      }
      int64_t v17 = v11 + 3;
      if (v11 + 3 >= v27) {
        goto LABEL_30;
      }
      unint64_t v20 = *(void *)(v28 + 8 * v17);
      if (v20) {
        goto LABEL_25;
      }
      int64_t v17 = v11 + 4;
      if (v11 + 4 >= v27) {
        goto LABEL_30;
      }
      unint64_t v20 = *(void *)(v28 + 8 * v17);
      if (v20)
      {
LABEL_25:
        uint64_t v15 = (v20 - 1) & v20;
        unint64_t v16 = __clz(__rbit64(v20)) + (v17 << 6);
LABEL_26:
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v16);
        if (v18)
        {
          do
          {
            uint64_t v22 = v6;
            id v23 = objc_msgSend(v18, sel_handle);
            id v24 = objc_msgSend(a2, sel_handle);
            unsigned int v25 = objc_msgSend(v23, sel_isEquivalentToHandle_, v24);

            if (v25) {
              break;
            }

            int64_t v11 = v17;
            unint64_t v12 = v15;
            uint64_t v6 = v22;
            if ((v22 & 0x8000000000000000) == 0) {
              goto LABEL_5;
            }
LABEL_7:
            if (!__CocoaSet.Iterator.next()()) {
              break;
            }
            type metadata accessor for NSObject(0, a3);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v18 = v35;
            swift_unknownObjectRelease();
            int64_t v17 = v11;
            uint64_t v15 = v12;
          }
          while (v35);
        }
        goto LABEL_30;
      }
      int64_t v17 = v11 + 5;
      if (v11 + 5 < v27)
      {
        unint64_t v20 = *(void *)(v28 + 8 * v17);
        if (!v20)
        {
          int64_t v21 = v11 + 6;
          while (v21 < v27)
          {
            unint64_t v20 = *(void *)(v28 + 8 * v21++);
            if (v20)
            {
              int64_t v17 = v21 - 1;
              goto LABEL_25;
            }
          }
          goto LABEL_30;
        }
        goto LABEL_25;
      }
    }
LABEL_30:
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();

    return;
  }
  __break(1u);
}

void specialized Sequence.first(where:)(uint64_t a1, void *a2, unint64_t *a3)
{
  uint64_t v4 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_421();
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    uint64_t v6 = OUTLINED_FUNCTION_89();
    type metadata accessor for NSObject(v6, a3);
    uint64_t v7 = OUTLINED_FUNCTION_12_13();
    lazy protocol witness table accessor for type TUConversationMember and conformance NSObject(v7);
    Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v27;
    uint64_t v25 = v28;
    uint64_t v8 = v29;
    int64_t v9 = v30;
    unint64_t v10 = v31;
  }
  else
  {
    uint64_t v25 = a1 + 56;
    OUTLINED_FUNCTION_152_0();
    unint64_t v10 = v11 & v12;
    swift_bridgeObjectRetain();
    uint64_t v8 = v3;
    int64_t v9 = 0;
  }
  uint64_t v22 = v8;
  int64_t v24 = (unint64_t)(v8 + 64) >> 6;
  if (v4 < 0) {
    goto LABEL_7;
  }
LABEL_5:
  if (v10)
  {
    uint64_t v13 = (v10 - 1) & v10;
    unint64_t v14 = __clz(__rbit64(v10)) | (v9 << 6);
    int64_t v15 = v9;
    goto LABEL_26;
  }
  int64_t v17 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v17 < v24)
    {
      unint64_t v18 = *(void *)(v25 + 8 * v17);
      int64_t v15 = v9 + 1;
      if (v18) {
        goto LABEL_25;
      }
      int64_t v15 = v9 + 2;
      if (v9 + 2 >= v24) {
        goto LABEL_30;
      }
      unint64_t v18 = *(void *)(v25 + 8 * v15);
      if (v18) {
        goto LABEL_25;
      }
      int64_t v15 = v9 + 3;
      if (v9 + 3 >= v24) {
        goto LABEL_30;
      }
      unint64_t v18 = *(void *)(v25 + 8 * v15);
      if (v18) {
        goto LABEL_25;
      }
      int64_t v15 = v9 + 4;
      if (v9 + 4 >= v24) {
        goto LABEL_30;
      }
      unint64_t v18 = *(void *)(v25 + 8 * v15);
      if (v18)
      {
LABEL_25:
        uint64_t v13 = (v18 - 1) & v18;
        unint64_t v14 = __clz(__rbit64(v18)) + (v15 << 6);
LABEL_26:
        id v16 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
        if (v16)
        {
          do
          {
            id v20 = objc_msgSend(v16, sel_handle, v22);
            unsigned int v21 = objc_msgSend(v20, sel_isEqualToHandle_, a2);

            if (v21) {
              break;
            }

            int64_t v9 = v15;
            unint64_t v10 = v13;
            if ((v4 & 0x8000000000000000) == 0) {
              goto LABEL_5;
            }
LABEL_7:
            if (!__CocoaSet.Iterator.next()()) {
              break;
            }
            type metadata accessor for NSObject(0, a3);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v16 = v32;
            swift_unknownObjectRelease();
            int64_t v15 = v9;
            uint64_t v13 = v10;
          }
          while (v32);
        }
        goto LABEL_30;
      }
      int64_t v15 = v9 + 5;
      if (v9 + 5 < v24)
      {
        unint64_t v18 = *(void *)(v25 + 8 * v15);
        if (!v18)
        {
          int64_t v19 = v9 + 6;
          while (v19 < v24)
          {
            unint64_t v18 = *(void *)(v25 + 8 * v19++);
            if (v18)
            {
              int64_t v15 = v19 - 1;
              goto LABEL_25;
            }
          }
          goto LABEL_30;
        }
        goto LABEL_25;
      }
    }
LABEL_30:
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();

    return;
  }
  __break(1u);
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()(unsigned __int8 *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed Bool) -> (@out ())(char a1, uint64_t (*a2)(char *))
{
  char v3 = a1;
  return a2(&v3);
}

void specialized Sequence.contains(where:)(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v21;
    uint64_t v19 = v22;
    uint64_t v3 = v23;
    int64_t v4 = v24;
    unint64_t v5 = v25;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v19 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v4 = 0;
  }
  int64_t v18 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    int64_t v9 = v4;
    if ((v2 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_32;
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v26;
    swift_unknownObjectRelease();
    if (!v26) {
      goto LABEL_32;
    }
LABEL_31:
    id v16 = objc_msgSend(v12, sel_identifier);
    id v17 = objc_msgSend(a2, sel_identifier);

    if (v16 == v17) {
      goto LABEL_32;
    }
  }
  if (v5)
  {
    unint64_t v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_30:
    id v12 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v12) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  int64_t v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 >= v18) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v19 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v9 + 2;
      if (v9 + 2 >= v18) {
        goto LABEL_32;
      }
      unint64_t v14 = *(void *)(v19 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v9 + 3;
        if (v9 + 3 >= v18) {
          goto LABEL_32;
        }
        unint64_t v14 = *(void *)(v19 + 8 * v4);
        if (!v14)
        {
          int64_t v4 = v9 + 4;
          if (v9 + 4 >= v18) {
            goto LABEL_32;
          }
          unint64_t v14 = *(void *)(v19 + 8 * v4);
          if (!v14)
          {
            int64_t v4 = v9 + 5;
            if (v9 + 5 >= v18) {
              goto LABEL_32;
            }
            unint64_t v14 = *(void *)(v19 + 8 * v4);
            if (!v14)
            {
              int64_t v15 = v9 + 6;
              while (v15 < v18)
              {
                unint64_t v14 = *(void *)(v19 + 8 * v15++);
                if (v14)
                {
                  int64_t v4 = v15 - 1;
                  goto LABEL_29;
                }
              }
LABEL_32:
              outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();

              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  char v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  id v27;
  char v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;

  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUScreenSharingRequest and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v34;
    unint64_t v31 = v35;
    int64_t v4 = v36;
    uint64_t v3 = v37;
    unint64_t v5 = v38;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v31 = a1 + 56;
    int64_t v4 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  uint64_t v30 = (unint64_t)(v4 + 64) >> 6;
  uint64_t v29 = v2;
  while (1)
  {
    int64_t v9 = v3;
    if (v2 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_43;
      }
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      int64_t v13 = v39;
      swift_unknownObjectRelease();
      id v12 = v9;
      if (!v39) {
        goto LABEL_43;
      }
      goto LABEL_31;
    }
    if (!v5) {
      break;
    }
    unint64_t v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v11 = v10 | (v3 << 6);
    id v12 = v3;
LABEL_30:
    int64_t v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_43;
    }
LABEL_31:
    uint64_t v32 = v12;
    id v17 = objc_msgSend(v13, sel_handles);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUScreenSharingRequest and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    int64_t v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v18 & 0xC000000000000001) != 0)
    {
      uint64_t v19 = a2;
      id v20 = __CocoaSet.contains(_:)();

      swift_bridgeObjectRelease();
      uint64_t v3 = v32;
      if (v20) {
        goto LABEL_43;
      }
    }
    else
    {
      if (*(void *)(v18 + 16))
      {
        uint64_t v21 = NSObject._rawHashValue(seed:)(*(void *)(v18 + 40));
        uint64_t v22 = -1 << *(unsigned char *)(v18 + 32);
        uint64_t v23 = v21 & ~v22;
        if ((*(void *)(v18 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
        {
          int64_t v24 = *(id *)(*(void *)(v18 + 48) + 8 * v23);
          unint64_t v25 = static NSObject.== infix(_:_:)();

          if (v25)
          {
LABEL_42:

            swift_bridgeObjectRelease();
LABEL_43:
            outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();

            return;
          }
          uint64_t v26 = ~v22;
          while (1)
          {
            uint64_t v23 = (v23 + 1) & v26;
            if (((*(void *)(v18 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
              break;
            }
            uint64_t v27 = *(id *)(*(void *)(v18 + 48) + 8 * v23);
            uint64_t v28 = static NSObject.== infix(_:_:)();

            if (v28) {
              goto LABEL_42;
            }
          }
        }
      }

      swift_bridgeObjectRelease();
      uint64_t v2 = v29;
      uint64_t v3 = v12;
    }
  }
  unint64_t v14 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v14 >= v30) {
      goto LABEL_43;
    }
    int64_t v15 = *(void *)(v31 + 8 * v14);
    id v12 = v9 + 1;
    if (!v15)
    {
      id v12 = v9 + 2;
      if (v9 + 2 >= v30) {
        goto LABEL_43;
      }
      int64_t v15 = *(void *)(v31 + 8 * v12);
      if (!v15)
      {
        id v12 = v9 + 3;
        if (v9 + 3 >= v30) {
          goto LABEL_43;
        }
        int64_t v15 = *(void *)(v31 + 8 * v12);
        if (!v15)
        {
          id v12 = v9 + 4;
          if (v9 + 4 >= v30) {
            goto LABEL_43;
          }
          int64_t v15 = *(void *)(v31 + 8 * v12);
          if (!v15)
          {
            id v12 = v9 + 5;
            if (v9 + 5 >= v30) {
              goto LABEL_43;
            }
            int64_t v15 = *(void *)(v31 + 8 * v12);
            if (!v15)
            {
              id v16 = v9 + 6;
              while (v16 < v30)
              {
                int64_t v15 = *(void *)(v31 + 8 * v16++);
                if (v15)
                {
                  id v12 = v16 - 1;
                  goto LABEL_29;
                }
              }
              goto LABEL_43;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v5 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void specialized Sequence.contains(where:)(uint64_t a1, id *a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v21;
    uint64_t v19 = v22;
    uint64_t v3 = v23;
    int64_t v4 = v24;
    unint64_t v5 = v25;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v19 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v4 = 0;
  }
  int64_t v18 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    int64_t v9 = v4;
    if ((v2 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_32;
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v26;
    swift_unknownObjectRelease();
    if (!v26) {
      goto LABEL_32;
    }
LABEL_31:
    id v16 = objc_msgSend(v12, sel_handle);
    unsigned int v17 = objc_msgSend(v16, sel_isEqualToHandle_, *a2);

    if (v17) {
      goto LABEL_32;
    }
  }
  if (v5)
  {
    unint64_t v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_30:
    id v12 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v12) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  int64_t v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 >= v18) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v19 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v9 + 2;
      if (v9 + 2 >= v18) {
        goto LABEL_32;
      }
      unint64_t v14 = *(void *)(v19 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v9 + 3;
        if (v9 + 3 >= v18) {
          goto LABEL_32;
        }
        unint64_t v14 = *(void *)(v19 + 8 * v4);
        if (!v14)
        {
          int64_t v4 = v9 + 4;
          if (v9 + 4 >= v18) {
            goto LABEL_32;
          }
          unint64_t v14 = *(void *)(v19 + 8 * v4);
          if (!v14)
          {
            int64_t v4 = v9 + 5;
            if (v9 + 5 >= v18) {
              goto LABEL_32;
            }
            unint64_t v14 = *(void *)(v19 + 8 * v4);
            if (!v14)
            {
              int64_t v15 = v9 + 6;
              while (v15 < v18)
              {
                unint64_t v14 = *(void *)(v19 + 8 * v15++);
                if (v14)
                {
                  int64_t v4 = v15 - 1;
                  goto LABEL_29;
                }
              }
LABEL_32:
              outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
              outlined release of ParticipantMediaPriorities(a2);
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t specialized Sequence.contains(where:)(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UISceneSession);
    lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type UISceneSession and conformance NSObject);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v30;
    uint64_t v29 = v31;
    uint64_t v3 = v32;
    int64_t v4 = v33;
    unint64_t v5 = v34;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v29 = a1 + 56;
    uint64_t v7 = ~v6;
    uint64_t v8 = -v6;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v5 = v9 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v3 = v7;
    int64_t v4 = 0;
  }
  uint64_t v27 = v3;
  int64_t v28 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    int64_t v10 = v4;
    if (v1 < 0)
    {
      uint64_t v13 = __CocoaSet.Iterator.next()();
      if (!v13) {
        goto LABEL_39;
      }
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UISceneSession);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v35;
      swift_unknownObjectRelease();
      uint64_t v11 = v5;
      if (!v35) {
        goto LABEL_38;
      }
      goto LABEL_31;
    }
    if (!v5) {
      break;
    }
    uint64_t v11 = (v5 - 1) & v5;
    unint64_t v12 = __clz(__rbit64(v5)) | (v4 << 6);
LABEL_30:
    id v14 = *(id *)(*(void *)(v1 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_38;
    }
LABEL_31:
    uint64_t v18 = v1;
    id v19 = objc_msgSend(v14, sel_configuration, v27);
    id v20 = objc_msgSend(v19, sel_role);

    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;
    if (v21 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v23 == v24)
    {

      swift_bridgeObjectRelease_n();
      uint64_t v13 = 1;
      goto LABEL_39;
    }
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v1 = v18;
    unint64_t v5 = v11;
    if (v26)
    {
      uint64_t v13 = 1;
      goto LABEL_39;
    }
  }
  int64_t v15 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v15 >= v28) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v15);
    ++v4;
    if (!v16)
    {
      int64_t v4 = v10 + 2;
      if (v10 + 2 >= v28) {
        goto LABEL_38;
      }
      unint64_t v16 = *(void *)(v29 + 8 * v4);
      if (!v16)
      {
        int64_t v4 = v10 + 3;
        if (v10 + 3 >= v28) {
          goto LABEL_38;
        }
        unint64_t v16 = *(void *)(v29 + 8 * v4);
        if (!v16)
        {
          int64_t v4 = v10 + 4;
          if (v10 + 4 >= v28) {
            goto LABEL_38;
          }
          unint64_t v16 = *(void *)(v29 + 8 * v4);
          if (!v16)
          {
            int64_t v4 = v10 + 5;
            if (v10 + 5 >= v28) {
              goto LABEL_38;
            }
            unint64_t v16 = *(void *)(v29 + 8 * v4);
            if (!v16)
            {
              int64_t v17 = v10 + 6;
              while (v17 < v28)
              {
                unint64_t v16 = *(void *)(v29 + 8 * v17++);
                if (v16)
                {
                  int64_t v4 = v17 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              uint64_t v13 = 0;
LABEL_39:
              outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
              return v13;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v4 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall ConversationController.swapLocalParticipantCamera()()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_5_3();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  uint64_t v7 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v8();
  _dispatchPreconditionTest(_:)();
  uint64_t v9 = OUTLINED_FUNCTION_1_18();
  v10(v9);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v7 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_2();
  if ((*(char *)(v7 + 16) & 0x80000000) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_4:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v11 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v11 + 16) = xmmword_1C3769620;
      char v12 = *(unsigned char *)(v7 + 16);
      long long v33 = *(_OWORD *)v7;
      char v34 = v12;
      String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_46_6();
      *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v5;
      OUTLINED_FUNCTION_402();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v13 = *(void *)v7;
  if (BYTE1(v13))
  {
    if (BYTE1(v13) != 1) {
      goto LABEL_12;
    }
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v14 = 1;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v15 = OUTLINED_FUNCTION_11_7();
  *(_OWORD *)(v15 + 16) = xmmword_1C37696D0;
  String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_281();
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v17 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v15 + 64) = v17;
  *(void *)(v15 + 32) = v2;
  *(void *)(v15 + 40) = v3;
  LOBYTE(v33) = v14;
  uint64_t v18 = String.init<A>(reflecting:)();
  *(void *)(v15 + 96) = v16;
  *(void *)(v15 + 104) = v17;
  *(void *)(v15 + 72) = v18;
  *(void *)(v15 + 80) = v19;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_157_6();
  swift_bridgeObjectRelease();
  id v20 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
  OUTLINED_FUNCTION_2();
  ConversationController.broadcastingState.setter();
  uint64_t v21 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_129_6(v23, v32);
  OUTLINED_FUNCTION_2_1();
  v24();
  OUTLINED_FUNCTION_57_11();
  v25();
  OUTLINED_FUNCTION_200_1();
  OUTLINED_FUNCTION_336();
  v26();
  uint64_t v27 = v35;
  uint64_t v28 = v36;
  __swift_project_boxed_opaque_existential_1(&v33, v35);
  uint64_t v29 = *v20;
  ConversationController.isOneToOneModeEnabled.getter();
  OUTLINED_FUNCTION_393();
  v31(v14, v29, (v30 & 1) == 0, v27, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
LABEL_12:
  OUTLINED_FUNCTION_28();
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed String) -> ()(void *a1, uint64_t (*a2)(void, void))
{
  return a2(*a1, a1[1]);
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed String) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *))
{
  v4[0] = a1;
  v4[1] = a2;
  return a3(v4);
}

void _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit11ParticipantVGG_SSs5NeverOTg506_sSi15f5Kit11h34VSSIgyno_Si6offset_AC7elementtSSs5I355OIegnrzr_TR04_s15a103Kit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalC217InVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSSSi_AA0O0VtXEfU3_Tf3nnnpf_nTf1cn_n()
{
  OUTLINED_FUNCTION_15_17();
  uint64_t v1 = v0;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant));
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  v68 = (char *)v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_8_4();
  id v67 = v5;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (void *)((char *)v62 - v7);
  uint64_t v84 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v9 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v66 = v9;
  v62[0] = v1;
  if (v9)
  {
    uint64_t v10 = type metadata accessor for Participant(0);
    uint64_t v11 = 0;
    OUTLINED_FUNCTION_5_7();
    uint64_t v13 = v1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v63 = *(void *)(v14 + 72);
    uint64_t v64 = v10;
    v65 = v8;
    do
    {
      uint64_t v15 = v69;
      uint64_t v16 = (uint64_t)&v68[*(int *)(v69 + 48)];
      uint64_t v75 = v13;
      _s15ConversationKit11ParticipantVWOcTm_19(v13, v16);
      uint64_t v17 = (uint64_t)v67;
      uint64_t v18 = (uint64_t)v67 + *(int *)(v15 + 48);
      uint64_t v76 = v11;
      *id v67 = v11;
      _s15ConversationKit11ParticipantVWObTm_6(v16, v18);
      outlined init with take of AspectRatio?(v17, (uint64_t)v8, &demangling cache variable for type metadata for (offset: Int, element: Participant));
      uint64_t v19 = (char *)v8 + *(int *)(v15 + 48);
      v77 = (void *)*v8;
      uint64_t v82 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v83 = v20;
      v21._countAndFlagsBits = 979659048;
      v21._object = (void *)0xE400000000000000;
      String.append(_:)(v21);
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      id v73 = v62;
      uint64_t v23 = OUTLINED_FUNCTION_8(v22);
      MEMORY[0x1F4188790](v23);
      OUTLINED_FUNCTION_479();
      unint64_t v25 = v24 & 0xFFFFFFFFFFFFFFF0;
      uint64_t v27 = v26 - (v24 & 0xFFFFFFFFFFFFFFF0);
      v74 = v19;
      uint64_t v28 = type metadata accessor for UUID();
      uint64_t v29 = OUTLINED_FUNCTION_23_0();
      id v70 = v30;
      v30(v29);
      uint64_t v31 = __swift_storeEnumTagSinglePayload(v27, 0, 1, v28);
      v72 = v62;
      MEMORY[0x1F4188790](v31);
      OUTLINED_FUNCTION_354();
      uint64_t v71 = v62;
      MEMORY[0x1F4188790](v32);
      uint64_t v33 = OUTLINED_FUNCTION_259_1();
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v33, v34, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v62 - v25, 1, v28) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v62 - v25, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      }
      else
      {
        OUTLINED_FUNCTION_303_1();
        OUTLINED_FUNCTION_63_0();
        uint64_t v37 = v36(v35);
        MEMORY[0x1F4188790](v37);
        uint64_t v38 = OUTLINED_FUNCTION_438();
        v70(v38);
        String.init<A>(reflecting:)();
        OUTLINED_FUNCTION_336();
        v40(v39);
      }
      OUTLINED_FUNCTION_256_0();
      outlined destroy of SystemUpdateNotice?(v27, v41);
      OUTLINED_FUNCTION_177_1();
      v42._countAndFlagsBits = OUTLINED_FUNCTION_344();
      String.append(_:)(v42);
      swift_bridgeObjectRelease();
      v43._countAndFlagsBits = 8236;
      v43._object = (void *)0xE200000000000000;
      String.append(_:)(v43);
      uint64_t v8 = v65;
      id v44 = &v74[*(int *)(v64 + 28)];
      uint64_t v45 = *(void **)v44;
      if (*(void *)v44)
      {
        uint64_t v47 = *((void *)v44 + 3);
        uint64_t v46 = *((void *)v44 + 4);
        int v48 = *((_DWORD *)v44 + 4);
        uint64_t v49 = *((void *)v44 + 1);
        v77 = v45;
        uint64_t v78 = v49;
        char v79 = v48 & 1;
        uint64_t v80 = v47;
        uint64_t v81 = v46;
        swift_bridgeObjectRetain();
        id v50 = v45;
        uint64_t v51 = String.init<A>(reflecting:)();
        unint64_t v53 = v52;
      }
      else
      {
        unint64_t v53 = 0xE300000000000000;
        uint64_t v51 = 7104878;
      }
      uint64_t v54 = v76;
      unint64_t v55 = v53;
      String.append(_:)(*(Swift::String *)&v51);
      swift_bridgeObjectRelease();
      uint64_t v56 = v82;
      uint64_t v57 = v83;
      outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for (offset: Int, element: Participant));
      uint64_t v58 = v84;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_343();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v58 = v84;
      }
      unint64_t v60 = *(void *)(v58 + 16);
      unint64_t v59 = *(void *)(v58 + 24);
      if (v60 >= v59 >> 1)
      {
        OUTLINED_FUNCTION_57_5(v59);
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v58 = v84;
      }
      uint64_t v11 = v54 + 1;
      *(void *)(v58 + 16) = v60 + 1;
      uint64_t v61 = v58 + 16 * v60;
      *(void *)(v61 + 32) = v56;
      *(void *)(v61 + 40) = v57;
      uint64_t v13 = v75 + v63;
    }
    while (v66 != v11);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_17();
}

void ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  HIDWORD(v21) = a8;
  uint64_t ObjectType = swift_getObjectType();
  specialized ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(a1, a3, a4, a5, a6, a7, HIDWORD(v21), a9, a10, a11, v11, ObjectType, a2, v19, a7, v21, v22, v23, v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30);
}

uint64_t protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.didUpdateVisibleParticipantScreenInfo.getter in conformance ConversationController()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter();
}

uint64_t ConversationController.didUpdateVisibleParticipantScreenInfo.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.didUpdateVisibleParticipantScreenInfo.setter in conformance ConversationController(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2);
}

uint64_t ConversationController.didUpdateVisibleParticipantScreenInfo.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.didUpdateVisibleParticipantScreenInfo.modify in conformance ConversationController())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t (*ConversationController.didUpdateVisibleParticipantScreenInfo.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.call.getter in conformance ConversationController()
{
  return ConversationController.call.getter();
}

uint64_t ConversationController.call.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.remoteParticipants.getter in conformance ConversationController()
{
  return ConversationController.remoteParticipants.getter();
}

uint64_t ConversationController.remoteParticipants.getter()
{
  return ParticipantsCollectionViewDataSource.onlineParticipants.getter();
}

uint64_t protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.lookupActiveParticipant(correspondingTo:) in conformance ConversationController(uint64_t a1)
{
  return ConversationController.lookupActiveParticipant(correspondingTo:)(a1);
}

uint64_t ConversationController.lookupActiveParticipant(correspondingTo:)(uint64_t a1)
{
  ConversationController.lookupActiveConversation()();
  if (v14)
  {
    OUTLINED_FUNCTION_309_1(v2, v3, v4, v5, v6, v7, v8, v9, v12, v13, v14, v15, v16[0]);
    uint64_t v10 = ConversationController.activeParticipant(correspondingTo:in:)(a1, v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v12, &demangling cache variable for type metadata for Conversation?);
    return 0;
  }
  return v10;
}

uint64_t protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.lookupActiveParticipant(from:) in conformance ConversationController@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ConversationController.lookupActiveParticipant(from:)(a1, a2);
}

uint64_t ConversationController.lookupActiveParticipant(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  ConversationController.lookupActiveConversation()();
  if (v19)
  {
    OUTLINED_FUNCTION_309_1(v4, v5, v6, v7, v8, v9, v10, v11, v17, v18, v19, v20, v21[0]);
    if (a1)
    {
      id v12 = a1;
      ConversationController.activeParticipant(from:in:)(v12, a2);

      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v17, &demangling cache variable for type metadata for Conversation?);
  }
  uint64_t v14 = type metadata accessor for Participant(0);
  return OUTLINED_FUNCTION_25_1(a2, v15, v16, v14);
}

uint64_t specialized Collection.firstIndex(where:)(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = *(void *)(a1 + 16);
  if (!v25) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for Participant(0);
  uint64_t v5 = a1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  uint64_t v23 = *(void *)(*(void *)(v4 - 8) + 72);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v24 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  uint64_t v21 = v10;
  uint64_t v22 = v4;
  while (1)
  {
    uint64_t v29 = v8;
    uint64_t v28 = &v20;
    uint64_t v26 = v5;
    __n128 v11 = MEMORY[0x1F4188790](v6);
    unint64_t v12 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v14 = v13;
    v13((char *)&v20 - v12, v11);
    uint64_t result = __swift_getEnumTagSinglePayload(a2, 1, v4);
    if (result == 1) {
      break;
    }
    uint64_t v27 = &v20;
    uint64_t v16 = a2;
    __n128 v17 = MEMORY[0x1F4188790](result);
    v14((char *)&v20 - v12, v17);
    char v18 = static UUID.== infix(_:_:)();
    uint64_t v19 = *v24;
    (*v24)((char *)&v20 - v12, v7);
    uint64_t v6 = v19((char *)&v20 - v12, v7);
    if (v18) {
      return v29;
    }
    uint64_t v8 = v29 + 1;
    uint64_t v5 = v26 + v23;
    a2 = v16;
    uint64_t v10 = v21;
    uint64_t v4 = v22;
    if (v25 == v29 + 1) {
      return 0;
    }
  }
  __break(1u);
  return result;
}

void ConversationController.lookupActiveConversation()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  ConversationController.updateConversationUUIDIfNeeded()();
  if (v37[3])
  {
    OUTLINED_FUNCTION_152_3();
    outlined init with take of Notice(&v38, v2);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v37, &demangling cache variable for type metadata for Conversation?);
    uint64_t v3 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_5_3();
    uint64_t v5 = v4;
    MEMORY[0x1F4188790](v6);
    uint64_t v36 = v7;
    OUTLINED_FUNCTION_378_0();
    OUTLINED_FUNCTION_2();
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v9 = OUTLINED_FUNCTION_8(v8);
    MEMORY[0x1F4188790](v9);
    OUTLINED_FUNCTION_5_1();
    uint64_t v10 = OUTLINED_FUNCTION_228_0();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v10, v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_33_0(v0, 1, v3);
    if (v12)
    {
      outlined destroy of SystemUpdateNotice?(v0, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(void *)(v2 + 32) = 0;
      *(_OWORD *)uint64_t v2 = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
    }
    else
    {
      OUTLINED_FUNCTION_393();
      OUTLINED_FUNCTION_63_0();
      v13();
      OUTLINED_FUNCTION_2();
      uint64_t v14 = (void *)OUTLINED_FUNCTION_259_1();
      __swift_project_boxed_opaque_existential_1(v14, v15);
      uint64_t v35 = &v29;
      OUTLINED_FUNCTION_5_3();
      OUTLINED_FUNCTION_50_0();
      MEMORY[0x1F4188790](v16);
      OUTLINED_FUNCTION_2_1();
      v17();
      uint64_t v18 = OUTLINED_FUNCTION_228_0();
      uint64_t v20 = v19(v18);
      OUTLINED_FUNCTION_259_1();
      OUTLINED_FUNCTION_4_1();
      v21();
      uint64_t v22 = *(void *)(v20 + 16);
      if (v22)
      {
        uint64_t v33 = &v29;
        uint64_t v34 = v2;
        uint64_t v23 = v20 + 32;
        uint64_t v30 = v5;
        uint64_t v32 = v20;
        swift_bridgeObjectRetain();
        uint64_t v31 = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        while (1)
        {
          outlined init with copy of Conversation(v23, (uint64_t)&v38);
          uint64_t v24 = __swift_project_boxed_opaque_existential_1(&v38, v39);
          MEMORY[0x1F4188790](v24);
          OUTLINED_FUNCTION_378_0();
          OUTLINED_FUNCTION_231_1();
          OUTLINED_FUNCTION_15_77();
          v25();
          char v26 = OUTLINED_FUNCTION_418();
          uint64_t v27 = *(void (**)(void))(v5 + 8);
          OUTLINED_FUNCTION_4_1();
          v27();
          if (v26) {
            break;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
          v23 += 40;
          if (!--v22)
          {
            swift_bridgeObjectRelease();
            uint64_t v2 = v34;
            uint64_t v5 = v30;
            goto LABEL_11;
          }
        }
        swift_bridgeObjectRelease();
        outlined init with take of Notice(&v38, v34);
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_11:
        *(void *)(v2 + 32) = 0;
        *(_OWORD *)uint64_t v2 = 0u;
        *(_OWORD *)(v2 + 16) = 0u;
        swift_bridgeObjectRelease();
        uint64_t v27 = *(void (**)(void))(v5 + 8);
      }
      uint64_t v28 = OUTLINED_FUNCTION_390();
      ((void (*)(uint64_t))v27)(v28);
    }
  }
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.mostRecentActiveConversation.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0
                                                                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController))
                              + 0x120))();
}

void ConversationController.conversationIsAVLess.getter()
{
  OUTLINED_FUNCTION_31();
  ConversationController.lookupActiveConversation()();
  if (v15)
  {
    OUTLINED_FUNCTION_152_3();
    uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    OUTLINED_FUNCTION_2();
    outlined init with copy of Conversation(v1, (uint64_t)v13);
    uint64_t v2 = v13[4];
    __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    OUTLINED_FUNCTION_2();
    uint64_t v3 = *(void (**)(void))(v2 + 112);
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_296_0();
    v3();
    swift_unknownObjectRelease();
    if (v12)
    {
      outlined init with take of Notice(&v11, (uint64_t)v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      OUTLINED_FUNCTION_9_85(v16, v16[3]);
      OUTLINED_FUNCTION_5_3();
      uint64_t v5 = v4;
      MEMORY[0x1F4188790](v6);
      OUTLINED_FUNCTION_15_77();
      v7();
      uint64_t v8 = __swift_project_boxed_opaque_existential_1(v14, v15);
      MEMORY[0x1F4188790](v8);
      OUTLINED_FUNCTION_457();
      OUTLINED_FUNCTION_15_77();
      v9();
      OUTLINED_FUNCTION_102();
      static UUID.== infix(_:_:)();
      uint64_t v10 = *(void (**)(void))(v5 + 8);
      OUTLINED_FUNCTION_34_30();
      OUTLINED_FUNCTION_12_1();
      v10();
      OUTLINED_FUNCTION_446();
      OUTLINED_FUNCTION_12_1();
      v10();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v11, &demangling cache variable for type metadata for Conversation?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v14, &demangling cache variable for type metadata for Conversation?);
  }
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.localVideoSupported.getter()
{
  if (ConversationController.isCarPlayConnected.getter()) {
    return 0;
  }
  uint64_t result = (uint64_t)objc_msgSend(self, sel_supportsDisplayingFaceTimeAudioCalls);
  if (result)
  {
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_246_1();
    uint64_t v4 = *(void (**)(uint64_t))(v2 + 128);
    swift_unknownObjectRetain();
    uint64_t v5 = OUTLINED_FUNCTION_160_4();
    v4(v5);
    OUTLINED_FUNCTION_407();
    if (v1)
    {
      return 1;
    }
    else
    {
      uint64_t v6 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
      OUTLINED_FUNCTION_2();
      return *v6 == 3;
    }
  }
  return result;
}

Swift::Void __swiftcall ConversationController.cancelJoinCountdown()()
{
  uint64_t v1 = type metadata accessor for Participant(0);
  uint64_t v2 = OUTLINED_FUNCTION_8(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_11_8();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_141_2();
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_74();
  uint64_t v6 = _s15ConversationKit11ParticipantVWOcTm_19(v4, v5);
  Participant.asCanceledJoinCountdown()(v6);
  _s15ConversationKit11ParticipantVWOhTm_13(v0, (void (*)(void))type metadata accessor for Participant);
  OUTLINED_FUNCTION_6_1();
  uint64_t v7 = OUTLINED_FUNCTION_24_2();
  outlined assign with take of Participant(v7, v8);
  swift_endAccess();
}

void ConversationController.shouldShowJoinCountdown.getter()
{
  OUTLINED_FUNCTION_14();
  uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_11_8();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_141_2();
  ConversationController.lookupActiveConversation()();
  if (v18)
  {
    outlined init with take of Notice(&v17, (uint64_t)v19);
    __swift_project_boxed_opaque_existential_1(v19, v19[3]);
    uint64_t v7 = OUTLINED_FUNCTION_212_3();
    uint64_t v9 = (void *)v8(v7);

    if (v9)
    {
      uint64_t v10 = (void *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
      OUTLINED_FUNCTION_2();
      if (*v10 == 3)
      {
        uint64_t v11 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
        OUTLINED_FUNCTION_2();
        _s15ConversationKit11ParticipantVWOcTm_19(v11, v2);
        uint64_t v12 = *(void *)(v2 + *(int *)(v4 + 28));
        uint64_t v13 = OUTLINED_FUNCTION_30_15();
        _s15ConversationKit11ParticipantVWOcTm_19(v13, v14);
        if (!v12) {
          Participant.CountdownInfo.shouldShowJoinCountdown.getter();
        }
        _s15ConversationKit11ParticipantVWOhTm_13(v0, (void (*)(void))type metadata accessor for Participant);
        uint64_t v15 = OUTLINED_FUNCTION_24_2();
        _s15ConversationKit11ParticipantVWOhTm_13(v15, v16);
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v17, &demangling cache variable for type metadata for Conversation?);
  }
  OUTLINED_FUNCTION_15_0();
}

void ConversationController.activeOneToOneConversationBackedByGroupSession.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  ConversationController.lookupActiveConversation()();
  if (!v19[3])
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v19, &demangling cache variable for type metadata for Conversation?);
LABEL_7:
    *(void *)(v3 + 32) = 0;
    *(_OWORD *)uint64_t v3 = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_200_2();
  uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2_1();
  v6();
  OUTLINED_FUNCTION_319_0();
  uint64_t v8 = (void *)v7();
  OUTLINED_FUNCTION_50_1();
  v9();
  uint64_t v10 = OUTLINED_FUNCTION_85_9(v20);
  v11(v10);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
  OUTLINED_FUNCTION_432();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  OUTLINED_FUNCTION_2();
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t ObjectType = swift_getObjectType();
  long long v17 = *(void (**)(uint64_t, uint64_t))(v15 + 128);
  swift_unknownObjectRetain();
  v17(ObjectType, v15);
  OUTLINED_FUNCTION_407();
  id v18 = objc_msgSend(v8, sel_activeConversationWithRemoteMembers_andLink_matchingVideo_backedByGroupSession_, isa, 0, v14 & 1, 1);

  if (!v18)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    goto LABEL_7;
  }
  if (objc_msgSend(v18, sel_isOneToOneModeEnabled))
  {
    *(void *)(v3 + 24) = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    *(void *)(v3 + 32) = &protocol witness table for TUConversation;
  }
  else
  {

    id v18 = 0;
    *(_OWORD *)(v3 + 24) = 0u;
    *(_OWORD *)(v3 + 8) = 0u;
  }
  *(void *)uint64_t v3 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
LABEL_10:
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.isOneToOneModeEnabled.getter()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter) & 1) != 0
    || (ConversationController.isOneToOneModeInferred.getter() & 1) != 0)
  {
    char v1 = *(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeDisabledByActivity) ^ 1;
  }
  else
  {
    char v1 = 0;
  }
  return v1 & 1;
}

void ConversationController.participant(with:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_5_3();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_2();
  uint64_t v14 = OUTLINED_FUNCTION_191_3();
  _s15ConversationKit11ParticipantVWOcTm_19(v14, v15);
  uint64_t v16 = *(void **)&v12[*(int *)(v6 + 28)];
  if (v16)
  {
    id v17 = v16;
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v12, (void (*)(void))type metadata accessor for Participant);
    unsigned int v18 = objc_msgSend(v17, sel_isEqualToHandle_, v3);

    if (v18)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v13, v5);
      uint64_t v19 = OUTLINED_FUNCTION_208_1();
      __swift_storeEnumTagSinglePayload(v19, v20, v21, v6);
      goto LABEL_15;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v12, (void (*)(void))type metadata accessor for Participant);
  }
  uint64_t v22 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v23 = *v22;
  uint64_t v24 = *(void *)(*v22 + 16);
  if (v24)
  {
    OUTLINED_FUNCTION_22_0();
    uint64_t v26 = v23 + v25;
    uint64_t v27 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v28 = OUTLINED_FUNCTION_45_4();
      _s15ConversationKit11ParticipantVWOcTm_19(v28, v29);
      uint64_t v30 = *(void **)(v1 + *(int *)(v6 + 28));
      if (v30)
      {
        if (objc_msgSend(v30, sel_isEqualToHandle_, v3)) {
          break;
        }
      }
      _s15ConversationKit11ParticipantVWOhTm_13(v1, (void (*)(void))type metadata accessor for Participant);
      v26 += v27;
      if (!--v24) {
        goto LABEL_12;
      }
    }
    _s15ConversationKit11ParticipantVWObTm_6(v1, v5);
    uint64_t v31 = v5;
    uint64_t v32 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_12:
    uint64_t v31 = v5;
    uint64_t v32 = 1;
  }
  __swift_storeEnumTagSinglePayload(v31, v32, 1, v6);
  swift_bridgeObjectRelease();
LABEL_15:
  OUTLINED_FUNCTION_28();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);
  char v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  OUTLINED_FUNCTION_31();
  uint64_t v61 = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_10_5();
  uint64_t v58 = v5;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_42();
  unint64_t v60 = v7;
  uint64_t v8 = OUTLINED_FUNCTION_128_5();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_36();
  uint64_t v12 = v10 - v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_8_4();
  uint64_t v57 = v14;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_11_8();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_42();
  unint64_t v59 = v17;
  unsigned int v18 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_2();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_303_1();
  OUTLINED_FUNCTION_2_1();
  v20();
  uint64_t v21 = static UUID.== infix(_:_:)();
  uint64_t v22 = OUTLINED_FUNCTION_390();
  v23(v22);
  if (v21)
  {
    uint64_t v24 = v61;
    _s15ConversationKit11ParticipantVWOcTm_19(v18, v61);
LABEL_25:
    uint64_t v54 = 0;
    goto LABEL_26;
  }
  uint64_t v25 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v26 = *v25;
  uint64_t v27 = *(void *)(*v25 + 16);
  if (v27)
  {
    OUTLINED_FUNCTION_12_19();
    uint64_t v29 = v26 + v28;
    uint64_t v31 = *(void *)(v30 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v32 = OUTLINED_FUNCTION_344();
      _s15ConversationKit11ParticipantVWOcTm_19(v32, v33);
      if (static UUID.== infix(_:_:)()) {
        break;
      }
      _s15ConversationKit11ParticipantVWOhTm_13(v0, (void (*)(void))type metadata accessor for Participant);
      v29 += v31;
      if (!--v27) {
        goto LABEL_9;
      }
    }
    uint64_t v35 = v60;
    _s15ConversationKit11ParticipantVWObTm_6(v0, v60);
    uint64_t v34 = 0;
    uint64_t v24 = v61;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v34 = 1;
    uint64_t v24 = v61;
    uint64_t v35 = v60;
  }
  OUTLINED_FUNCTION_348_0(v35, v34);
  swift_bridgeObjectRelease();
  uint64_t v36 = OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_33_0(v36, v37, v8);
  if (!v38)
  {
    int v48 = v35;
    uint64_t v49 = v59;
LABEL_24:
    _s15ConversationKit11ParticipantVWObTm_6(v48, v49);
    unint64_t v55 = OUTLINED_FUNCTION_259_1();
    _s15ConversationKit11ParticipantVWObTm_6(v55, v56);
    goto LABEL_25;
  }
  outlined destroy of SystemUpdateNotice?(v35, &demangling cache variable for type metadata for Participant?);
  uint64_t v39 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v40 = *v39;
  char v41 = *(void *)(v40 + 16);
  if (v41)
  {
    OUTLINED_FUNCTION_12_19();
    Swift::String v43 = v40 + v42;
    uint64_t v45 = *(void *)(v44 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v46 = OUTLINED_FUNCTION_248();
      _s15ConversationKit11ParticipantVWOcTm_19(v46, v47);
      if (static UUID.== infix(_:_:)()) {
        break;
      }
      _s15ConversationKit11ParticipantVWOhTm_13(v12, (void (*)(void))type metadata accessor for Participant);
      v43 += v45;
      if (!--v41) {
        goto LABEL_19;
      }
    }
    id v50 = v58;
    _s15ConversationKit11ParticipantVWObTm_6(v12, v58);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_19:
    id v50 = v58;
  }
  uint64_t v51 = OUTLINED_FUNCTION_430();
  __swift_storeEnumTagSinglePayload(v51, v52, v53, v8);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_0(v50, 1, v8);
  if (!v38)
  {
    int v48 = v50;
    uint64_t v49 = v57;
    goto LABEL_24;
  }
  outlined destroy of SystemUpdateNotice?(v50, &demangling cache variable for type metadata for Participant?);
  uint64_t v54 = 1;
LABEL_26:
  OUTLINED_FUNCTION_348_0(v24, v54);
  OUTLINED_FUNCTION_28();
}

void ConversationController.hasMessageCapableRemoteParticipants.getter()
{
  OUTLINED_FUNCTION_31();
  v43[2] = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = OUTLINED_FUNCTION_89_2();
  OUTLINED_FUNCTION_5_3();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_132_2();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v43 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v43 - v11;
  ConversationController.remoteAndAssociatedParticipants.getter();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    OUTLINED_FUNCTION_22_0();
    v43[1] = v15;
    uint64_t v17 = v15 + v16;
    uint64_t v44 = *(void *)(v5 + 72);
    do
    {
      uint64_t v18 = OUTLINED_FUNCTION_194_1();
      _s15ConversationKit11ParticipantVWOcTm_19(v18, v19);
      uint64_t v20 = *(void **)&v12[*(int *)(v3 + 28)];
      if (v20)
      {
        id v21 = objc_msgSend(v20, sel_value);
        if (!v21)
        {
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v21 = (id)MEMORY[0x1C87730B0](v22);
          swift_bridgeObjectRelease();
        }
        unsigned __int8 v23 = objc_msgSend(v21, sel_destinationIdIsTemporary);

        _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v12, (uint64_t)v10);
        if (v23)
        {
LABEL_15:
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
          _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v12, v1);
          uint64_t v37 = OUTLINED_FUNCTION_45_9();
          _s15ConversationKit11ParticipantVWOhTm_13(v37, v38);
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v12, (void (*)(void))type metadata accessor for Participant);
          goto LABEL_16;
        }
      }
      else
      {
        _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v12, (uint64_t)v10);
      }
      uint64_t v24 = OUTLINED_FUNCTION_209_3();
      _s15ConversationKit11ParticipantVWOcTm_19(v24, v25);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          type metadata accessor for Date();
          OUTLINED_FUNCTION_0();
          uint64_t v35 = OUTLINED_FUNCTION_334_0();
          v36(v35);
          goto LABEL_15;
        case 4u:
          uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v40 = v0 + *(int *)(v39 + 48);
          OUTLINED_FUNCTION_8_2((uint64_t *)(v0 + *(int *)(v39 + 64)));
          outlined destroy of Participant.MediaInfo(v40);
          goto LABEL_10;
        case 6u:
          goto LABEL_11;
        default:
LABEL_10:
          type metadata accessor for Date();
          OUTLINED_FUNCTION_0();
          uint64_t v26 = OUTLINED_FUNCTION_334_0();
          v27(v26);
LABEL_11:
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
          _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v12, v1);
          uint64_t v28 = *(void **)(v1 + *(int *)(v3 + 28));
          if (!v28)
          {
            _s15ConversationKit11ParticipantVWOhTm_13(v1, (void (*)(void))type metadata accessor for Participant);
            uint64_t v41 = OUTLINED_FUNCTION_446();
            _s15ConversationKit11ParticipantVWOhTm_13(v41, v42);
            goto LABEL_21;
          }
          id v29 = objc_msgSend(v28, sel_value);
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v30 = OUTLINED_FUNCTION_388();
          uint64_t v31 = (void *)MEMORY[0x1C87730B0](v30);
          swift_bridgeObjectRelease();
          unsigned __int8 v32 = objc_msgSend(v31, sel_destinationIdIsPseudonym);

          _s15ConversationKit11ParticipantVWOhTm_13(v1, (void (*)(void))type metadata accessor for Participant);
          uint64_t v33 = OUTLINED_FUNCTION_449();
          _s15ConversationKit11ParticipantVWOhTm_13(v33, v34);
          if ((v32 & 1) == 0) {
            goto LABEL_21;
          }
          break;
      }
LABEL_16:
      v17 += v44;
      --v14;
    }
    while (v14);
  }
LABEL_21:
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.audioRoute.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2_1();
  v5();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
  OUTLINED_FUNCTION_15_5();
  v7();
  return v6;
}

Swift::Void __swiftcall ConversationController.update()()
{
  ConversationController.lookupActiveConversation()();
  ConversationController.update(with:)((uint64_t)v0);
  outlined destroy of SystemUpdateNotice?((uint64_t)v0, &demangling cache variable for type metadata for Conversation?);
}

void ConversationController.updateCallForAVModeChange(_:)()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  OUTLINED_FUNCTION_11_0();
  void *v3 = v2;
  v3[1] = v0;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
  OUTLINED_FUNCTION_2();
  outlined init with copy of Conversation(v4, (uint64_t)v9);
  uint64_t v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
  OUTLINED_FUNCTION_2();
  uint64_t v6 = *v5;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = swift_unknownObjectRetain();
  specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v8, v9, v6, 0, ObjectType, v0);
  ConversationController.broadcastingState.setter();
}

Swift::Void __swiftcall ConversationController.joinConversation()()
{
  OUTLINED_FUNCTION_14();
  uint64_t v3 = v0;
  uint64_t v4 = type metadata accessor for Participant(0);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = OUTLINED_FUNCTION_475();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_64();
  char v9 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v10();
  _dispatchPreconditionTest(_:)();
  uint64_t v11 = OUTLINED_FUNCTION_21_2();
  v12(v11);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v13 = (void *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
  OUTLINED_FUNCTION_2();
  if (*v13 == 1)
  {
    uint64_t v7 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    OUTLINED_FUNCTION_2();
    uint64_t v14 = _s15ConversationKit11ParticipantVWOcTm_19(v7, v1);
    Participant.asRequestedApproval()(v14);
    _s15ConversationKit11ParticipantVWOhTm_13(v1, (void (*)(void))type metadata accessor for Participant);
    OUTLINED_FUNCTION_6_1();
    uint64_t v15 = OUTLINED_FUNCTION_69_0();
    outlined assign with take of Participant(v15, v16);
    swift_endAccess();
  }
  if (one-time initialization token for conversationKit != -1) {
    goto LABEL_7;
  }
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v17 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v17 + 16) = xmmword_1C3769620;
  uint64_t v18 = (long long *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  OUTLINED_FUNCTION_2();
  long long v22 = *v18;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
  String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_40_20();
  *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v17 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v17 + 32) = v7;
  *(void *)(v17 + 40) = v2;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_95_7();
  swift_bridgeObjectRelease();
  uint64_t v19 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
  OUTLINED_FUNCTION_2();
  outlined init with copy of Conversation(v19, (uint64_t)&v22);
  uint64_t v20 = v24;
  __swift_project_boxed_opaque_existential_1(&v22, v23);
  id v21 = *(void (**)(void))(v20 + 96);
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_296_0();
  v21();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  OUTLINED_FUNCTION_15_0();
}

Swift::Void __swiftcall ConversationController.downgradeToAVLess()()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  char v3 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v4();
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = OUTLINED_FUNCTION_1_18();
  v6(v5);
  if (v3)
  {
    if (one-time initialization token for shared == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  OUTLINED_FUNCTION_50();
  if ((*(uint64_t (**)(void))(v7 + 856))())
  {
    uint64_t v8 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    OUTLINED_FUNCTION_2();
    outlined init with copy of Conversation(v8, (uint64_t)v11);
    uint64_t v9 = v11[4];
    OUTLINED_FUNCTION_69_10(v11, v11[3]);
    OUTLINED_FUNCTION_2();
    uint64_t v10 = *(void (**)(void))(v9 + 128);
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_460();
    v10();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  OUTLINED_FUNCTION_15_0();
}

void ConversationController.leaveConversation(reason:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v9();
  char v10 = _dispatchPreconditionTest(_:)();
  uint64_t v11 = v7 + 8;
  OUTLINED_FUNCTION_50_1();
  v12();
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (one-time initialization token for conversationKit != -1) {
LABEL_5:
  }
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v13 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v13 + 16) = xmmword_1C3769620;
  uint64_t v14 = (long long *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  OUTLINED_FUNCTION_2();
  long long v20 = *v14;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
  OUTLINED_FUNCTION_253_0();
  OUTLINED_FUNCTION_281();
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v13 + 32) = v11;
  *(void *)(v13 + 40) = v2;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_120_6();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_199_1();
  uint64_t v15 = v21;
  uint64_t v16 = v22;
  __swift_project_boxed_opaque_existential_1(&v20, v21);
  uint64_t v17 = *((void *)v14 + 1);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 88);
  uint64_t v19 = swift_unknownObjectRetain();
  v18(v19, v17, v5, v15, v16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  OUTLINED_FUNCTION_15_0();
}

void ConversationController.openMessagesConversation(completion:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  v158[5] = *MEMORY[0x1E4F143B8];
  uint64_t v151 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = OUTLINED_FUNCTION_25_7();
  type metadata accessor for Participant(v10);
  OUTLINED_FUNCTION_5_3();
  uint64_t v154 = v12;
  v155 = v11;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_175_4();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_8_4();
  v152 = (uint64_t *)v14;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_16_6();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_11_8();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v141 - v18;
  ConversationController.lookupActiveConversation()();
  if (v157)
  {
    uint64_t v153 = v1;
    uint64_t v149 = v3;
    *(void *)&long long v150 = v4;
    uint64_t v146 = v6;
    v147 = v8;
    outlined init with take of Notice(&v156, (uint64_t)v158);
    uint64_t v20 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_459((uint64_t)&v141);
    OUTLINED_FUNCTION_5_3();
    uint64_t v145 = v21;
    MEMORY[0x1F4188790](v22);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_69_10(v158, v158[3]);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    int64_t v24 = (int64_t)&v141;
    uint64_t v25 = OUTLINED_FUNCTION_8(v23);
    MEMORY[0x1F4188790](v25);
    OUTLINED_FUNCTION_278_0();
    uint64_t v26 = OUTLINED_FUNCTION_210_2();
    v27(v26);
    uint64_t v28 = v20;
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 1, v20);
    uint64_t v30 = MEMORY[0x1E4FBC860];
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of SystemUpdateNotice?(v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v148 = (char *)MEMORY[0x1E4FBC860];
    }
    else
    {
      OUTLINED_FUNCTION_393();
      uint64_t v144 = v28;
      OUTLINED_FUNCTION_63_0();
      v31();
      int64_t v24 = (int64_t)&v141;
      uint64_t v142 = type metadata accessor for URLQueryItem();
      OUTLINED_FUNCTION_5_3();
      uint64_t v33 = v32;
      MEMORY[0x1F4188790](v34);
      OUTLINED_FUNCTION_61();
      v143 = v8;
      UUID.uuidString.getter();
      URLQueryItem.init(name:value:)();
      swift_bridgeObjectRelease();
      uint64_t v35 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v37 = *(void *)(v35 + 16);
      unint64_t v36 = *(void *)(v35 + 24);
      v148 = (char *)v35;
      if (v37 >= v36 >> 1)
      {
        char v140 = OUTLINED_FUNCTION_57_5(v36);
        v148 = (char *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v140, v37 + 1, 1, (uint64_t)v148);
      }
      uint64_t v38 = (uint64_t)v148;
      *((void *)v148 + 2) = v37 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v33 + 32))(v38+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v37, v4, v142);
      OUTLINED_FUNCTION_50_1();
      v39();
      uint64_t v30 = MEMORY[0x1E4FBC860];
    }
    ConversationController.remoteAndAssociatedParticipants.getter();
    uint64_t v41 = v40;
    *(void *)&long long v156 = v30;
    uint64_t v153 = *(void *)(v40 + 16);
    if (v153)
    {
      unint64_t v42 = 0;
      while (1)
      {
        if (v42 >= *(void *)(v41 + 16))
        {
          __break(1u);
          goto LABEL_74;
        }
        unint64_t v43 = (*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
        uint64_t v44 = *(void *)(v154 + 72);
        _s15ConversationKit11ParticipantVWOcTm_19(v41 + v43 + v44 * v42, (uint64_t)v19);
        uint64_t v45 = *(void **)&v19[*((int *)v155 + 7)];
        if (!v45) {
          break;
        }
        id v46 = objc_msgSend(v45, sel_value);
        if (!v46)
        {
          uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v46 = (id)MEMORY[0x1C87730B0](v47);
          swift_bridgeObjectRelease();
        }
        unsigned __int8 v48 = objc_msgSend(v46, sel_destinationIdIsTemporary);

        _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v19, v0);
        if ((v48 & 1) == 0) {
          goto LABEL_20;
        }
LABEL_22:
        _s15ConversationKit11ParticipantVWOhTm_13(v0, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v19, v2);
        uint64_t v50 = OUTLINED_FUNCTION_4_18();
        _s15ConversationKit11ParticipantVWOhTm_13(v50, v51);
LABEL_27:
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v19, (void (*)(void))type metadata accessor for Participant);
LABEL_34:
        if (v153 == ++v42)
        {
          uint64_t v30 = v156;
          goto LABEL_36;
        }
      }
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v19, v0);
LABEL_20:
      int64_t v24 = v150;
      _s15ConversationKit11ParticipantVWOcTm_19(v0, v150);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          type metadata accessor for Date();
          OUTLINED_FUNCTION_0();
          (*(void (**)(int64_t))(v49 + 8))(v24);
          goto LABEL_22;
        case 4u:
          uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v53 = v24 + *(int *)(v52 + 48);
          OUTLINED_FUNCTION_8_2((uint64_t *)(v24 + *(int *)(v52 + 64)));
          outlined destroy of Participant.MediaInfo(v53);
          goto LABEL_24;
        case 6u:
          goto LABEL_25;
        default:
LABEL_24:
          type metadata accessor for Date();
          OUTLINED_FUNCTION_0();
          (*(void (**)(int64_t))(v54 + 8))(v24);
LABEL_25:
          _s15ConversationKit11ParticipantVWOhTm_13(v0, (void (*)(void))type metadata accessor for Participant);
          _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v19, v2);
          unint64_t v55 = *(void **)(v2 + *((int *)v155 + 7));
          if (v55)
          {
            id v56 = objc_msgSend(v55, sel_value);
            uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v59 = v58;

            unint64_t v60 = (void *)MEMORY[0x1C87730B0](v57, v59);
            swift_bridgeObjectRelease();
            int64_t v24 = (int64_t)objc_msgSend(v60, sel_destinationIdIsPseudonym);

            _s15ConversationKit11ParticipantVWOhTm_13(v2, (void (*)(void))type metadata accessor for Participant);
            if (v24) {
              goto LABEL_27;
            }
          }
          else
          {
            _s15ConversationKit11ParticipantVWOhTm_13(v2, (void (*)(void))type metadata accessor for Participant);
          }
          _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v19, (uint64_t)v152);
          uint64_t v61 = v156;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            char v62 = OUTLINED_FUNCTION_299_0();
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62, v63, v64);
            uint64_t v61 = v156;
          }
          int64_t v24 = *(void *)(v61 + 16);
          unint64_t v65 = *(void *)(v61 + 24);
          if (v24 >= v65 >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v24 + 1, 1);
            uint64_t v61 = v156;
          }
          *(void *)(v61 + 16) = v24 + 1;
          _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v152, v61 + v43 + v24 * v44);
          break;
      }
      goto LABEL_34;
    }
LABEL_36:
    swift_bridgeObjectRelease();
    unint64_t v42 = *(void *)(v30 + 16);
    if (v42)
    {
      OUTLINED_FUNCTION_12_19();
      uint64_t v67 = v30 + v66;
      uint64_t v69 = *(void *)(v68 + 72);
      swift_retain();
      uint64_t v70 = MEMORY[0x1E4FBC860];
      uint64_t v71 = v149;
      do
      {
        uint64_t v72 = OUTLINED_FUNCTION_259_1();
        _s15ConversationKit11ParticipantVWOcTm_19(v72, v73);
        v74 = *(void **)(v71 + *((int *)v155 + 7));
        if (v74)
        {
          id v75 = objc_msgSend(v74, sel_value);
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          OUTLINED_FUNCTION_183_2();

          _s15ConversationKit11ParticipantVWOhTm_13(v71, (void (*)(void))type metadata accessor for Participant);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_343();
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v70 = v79;
          }
          unint64_t v77 = *(void *)(v70 + 16);
          unint64_t v76 = *(void *)(v70 + 24);
          if (v77 >= v76 >> 1)
          {
            OUTLINED_FUNCTION_57_5(v76);
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v70 = v80;
          }
          *(void *)(v70 + 16) = v77 + 1;
          uint64_t v78 = v70 + 16 * v77;
          *(void *)(v78 + 32) = v2;
          *(void *)(v78 + 40) = v19;
          uint64_t v71 = v149;
        }
        else
        {
          _s15ConversationKit11ParticipantVWOhTm_13(v71, (void (*)(void))type metadata accessor for Participant);
        }
        v67 += v69;
        --v42;
      }
      while (v42);
      swift_release_n();
    }
    else
    {
      swift_release();
      uint64_t v70 = MEMORY[0x1E4FBC860];
    }
    uint64_t v2 = type metadata accessor for URLQueryItem();
    OUTLINED_FUNCTION_5_3();
    int64_t v24 = (int64_t)v81;
    MEMORY[0x1F4188790](v82);
    OUTLINED_FUNCTION_62();
    *(void *)&long long v156 = v70;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance [A]);
    BidirectionalCollection<>.joined(separator:)();
    OUTLINED_FUNCTION_46_6();
    swift_bridgeObjectRelease();
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    uint64_t v19 = v148;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
LABEL_74:
      char v136 = OUTLINED_FUNCTION_343();
      uint64_t v19 = (char *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v136, v137, v138, (uint64_t)v19);
    }
    unint64_t v84 = *((void *)v19 + 2);
    unint64_t v83 = *((void *)v19 + 3);
    if (v84 >= v83 >> 1)
    {
      char v139 = OUTLINED_FUNCTION_57_5(v83);
      uint64_t v19 = (char *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v139, v84 + 1, 1, (uint64_t)v19);
    }
    *((void *)v19 + 2) = v84 + 1;
    (*(void (**)(char *, unint64_t, uint64_t))(v24 + 32))(&v19[((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v84], v42, v2);
    uint64_t v85 = type metadata accessor for URLComponents();
    v155 = &v141;
    OUTLINED_FUNCTION_5_3();
    uint64_t v154 = v86;
    MEMORY[0x1F4188790](v87);
    OUTLINED_FUNCTION_1_20();
    URLComponents.init()();
    URLComponents.scheme.setter();
    URLComponents.path.setter();
    URLComponents.queryItems.setter();
    uint64_t v88 = type metadata accessor for URL();
    OUTLINED_FUNCTION_5_3();
    MEMORY[0x1F4188790](v89);
    OUTLINED_FUNCTION_62();
    uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    uint64_t v91 = OUTLINED_FUNCTION_8(v90);
    uint64_t v93 = *(void *)(v92 + 64);
    MEMORY[0x1F4188790](v91);
    URLComponents.url.getter();
    OUTLINED_FUNCTION_33_0((uint64_t)&v141 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v88);
    if (v94)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v141 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for URL?);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      uint64_t v153 = static OS_os_log.conversationKit;
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v95 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v95 + 16) = xmmword_1C3769620;
      uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URLComponents?);
      uint64_t v97 = OUTLINED_FUNCTION_8(v96);
      MEMORY[0x1F4188790](v97);
      OUTLINED_FUNCTION_5_1();
      OUTLINED_FUNCTION_209_3();
      OUTLINED_FUNCTION_2_1();
      v98();
      uint64_t v99 = OUTLINED_FUNCTION_208_1();
      __swift_storeEnumTagSinglePayload(v99, v100, v101, v85);
      uint64_t v102 = specialized >> prefix<A>(_:)(v93);
      uint64_t v104 = v103;
      outlined destroy of SystemUpdateNotice?(v93, (uint64_t *)&demangling cache variable for type metadata for URLComponents?);
      *(void *)(v95 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v95 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v95 + 32) = v102;
      *(void *)(v95 + 40) = v104;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      if (v147)
      {
        uint64_t v105 = OUTLINED_FUNCTION_455();
        v106(v105);
      }
      OUTLINED_FUNCTION_87_1();
      OUTLINED_FUNCTION_3_8();
      v107();
      OUTLINED_FUNCTION_256_0();
    }
    else
    {
      v152 = &v141;
      uint64_t v153 = v85;
      OUTLINED_FUNCTION_63_0();
      v108();
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v109 = OUTLINED_FUNCTION_25_15();
      long long v150 = xmmword_1C3769620;
      *(_OWORD *)(v109 + 16) = xmmword_1C3769620;
      MEMORY[0x1F4188790](v109);
      v110 = (char *)&v141 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
      OUTLINED_FUNCTION_2_1();
      v111();
      uint64_t v112 = OUTLINED_FUNCTION_208_1();
      uint64_t v151 = v88;
      __swift_storeEnumTagSinglePayload(v112, v113, v114, v88);
      uint64_t v115 = specialized >> prefix<A>(_:)((uint64_t)v110);
      uint64_t v117 = v116;
      outlined destroy of SystemUpdateNotice?((uint64_t)v110, &demangling cache variable for type metadata for URL?);
      *(void *)(v109 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v118 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v109 + 64) = v118;
      *(void *)(v109 + 32) = v115;
      *(void *)(v109 + 40) = v117;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_315_0();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      URL._bridgeToObjectiveC()(v119);
      v121 = v120;
      *(void *)&long long v156 = 0;
      OUTLINED_FUNCTION_31_13();
      LODWORD(v109) = TUOpenURLWithError();

      v122 = (void *)v156;
      if (v109)
      {
        v123 = v147;
        if (v147)
        {
          id v124 = (id)v156;
          v123(1);
        }
        else
        {
          id v129 = (id)v156;
        }
        OUTLINED_FUNCTION_1_19();
        v130();
        OUTLINED_FUNCTION_12_1();
        v131();
      }
      else
      {
        uint64_t v125 = OUTLINED_FUNCTION_25_15();
        *(_OWORD *)(v125 + 16) = v150;
        if (v122)
        {
          *(void *)&long long v156 = v122;
          type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSError);
          id v126 = v122;
          uint64_t v127 = String.init<A>(reflecting:)();
        }
        else
        {
          unint64_t v128 = 0xE300000000000000;
          uint64_t v127 = 7104878;
        }
        *(void *)(v125 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v125 + 64) = v118;
        *(void *)(v125 + 32) = v127;
        *(void *)(v125 + 40) = v128;
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_315_0();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        if (v147)
        {
          uint64_t v132 = OUTLINED_FUNCTION_455();
          v133(v132);
        }
        OUTLINED_FUNCTION_4_1();
        v134();
        OUTLINED_FUNCTION_139();
        v135();
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v156, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_31_26();
    if (v8) {
      v8(0);
    }
  }
  OUTLINED_FUNCTION_28();
}

void ConversationController.setLocalAudio(muted:bluetoothAudioFormat:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v8();
  char v9 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_4_1();
  v10();
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = (unint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
  OUTLINED_FUNCTION_2();
  unint64_t v12 = *v11;
  char v30 = v4;
  if (((char)v11[2] & 0x80000000) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_4:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v13 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v13 + 16) = xmmword_1C3769620;
      uint64_t v14 = String.init<A>(reflecting:)();
      uint64_t v16 = v15;
      *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v13 + 32) = v14;
      *(void *)(v13 + 40) = v16;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_315_0();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      ConversationController.broadcastingState.setter();
      OUTLINED_FUNCTION_2();
      swift_getObjectType();
      OUTLINED_FUNCTION_394();
      uint64_t v17 = OUTLINED_FUNCTION_321();
      ((void (*)(uint64_t))v4)(v17);
      goto LABEL_8;
    }
LABEL_12:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v29 = v6;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  unint64_t v4 = v12 >> 8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v18 = OUTLINED_FUNCTION_11_7();
  *(_OWORD *)(v18 + 16) = xmmword_1C37696D0;
  uint64_t v19 = String.init<A>(reflecting:)();
  uint64_t v21 = v20;
  uint64_t v22 = MEMORY[0x1E4FBB1A0];
  *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v23 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v18 + 64) = v23;
  *(void *)(v18 + 32) = v19;
  *(void *)(v18 + 40) = v21;
  uint64_t v24 = String.init<A>(reflecting:)();
  *(void *)(v18 + 96) = v22;
  *(void *)(v18 + 104) = v23;
  *(void *)(v18 + 72) = v24;
  *(void *)(v18 + 80) = v25;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();
  ConversationController.broadcastingState.setter();
  OUTLINED_FUNCTION_2();
  swift_getObjectType();
  OUTLINED_FUNCTION_394();
  uint64_t v26 = OUTLINED_FUNCTION_321();
  ((void (*)(uint64_t))(v12 >> 8))(v26);
  uint64_t v6 = v29;
LABEL_8:
  swift_unknownObjectRelease();
  if ((v30 & 1) == 0)
  {
    OUTLINED_FUNCTION_2();
    uint64_t v27 = OUTLINED_FUNCTION_246_1();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, unint64_t))(v4 + 280);
    swift_unknownObjectRetain();
    v28(v6, v27, v4);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationController.toggleLocalAudio()()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_5_3();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  char v7 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v8();
  _dispatchPreconditionTest(_:)();
  uint64_t v9 = OUTLINED_FUNCTION_1_18();
  v10(v9);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = *v11;
  if (((char)v11[2] & 0x80000000) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_4:
      BOOL v12 = (v3 & 1) == 0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v13 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v13 + 16) = xmmword_1C3769620;
      String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_40_20();
      *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v13 + 32) = v5;
      *(void *)(v13 + 40) = v2;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_157_6();
      swift_bridgeObjectRelease();
      ConversationController.broadcastingState.setter();
      uint64_t v14 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
      goto LABEL_8;
    }
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  BOOL v12 = (v3 & 1) == 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v15 = OUTLINED_FUNCTION_11_7();
  *(_OWORD *)(v15 + 16) = xmmword_1C37696D0;
  String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_40_20();
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v17 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v15 + 64) = v17;
  *(void *)(v15 + 32) = v5;
  *(void *)(v15 + 40) = v2;
  uint64_t v18 = String.init<A>(reflecting:)();
  *(void *)(v15 + 96) = v16;
  *(void *)(v15 + 104) = v17;
  *(void *)(v15 + 72) = v18;
  *(void *)(v15 + 80) = v19;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_157_6();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();
  ConversationController.broadcastingState.setter();
  uint64_t v14 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
LABEL_8:
  OUTLINED_FUNCTION_2();
  uint64_t v20 = OUTLINED_FUNCTION_220_0();
  uint64_t v21 = *(void (**)(BOOL, uint64_t, uint64_t))(v14 + 360);
  swift_unknownObjectRetain();
  v21(v12, v20, v14);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationController.toggleLocalVideo(shouldPauseIfStopped:)(Swift::Bool shouldPauseIfStopped)
{
  uint64_t v3 = v1;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v6();
  char v7 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_50_1();
  v8();
  if (v7)
  {
    uint64_t v9 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    OUTLINED_FUNCTION_2();
    if (*(char *)(v9 + 16) < 0)
    {
      ConversationController.stopLocalVideo()();
    }
    else if (shouldPauseIfStopped)
    {
      ConversationController.pauseLocalVideoIfStopped()();
    }
    else
    {
      ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ConversationController.startScreenSharingSession()()
{
  OUTLINED_FUNCTION_31();
  swift_getObjectType();
  uint64_t v3 = OUTLINED_FUNCTION_27_3();
  uint64_t v4 = type metadata accessor for ScreenSharingSessionConfiguration(v3);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_17_0();
  if (one-time initialization token for screenSharing != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  char v7 = OUTLINED_FUNCTION_30(v6, (uint64_t)static Log.screenSharing);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_8_0();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1C2F90000, v7, v8, "Starting screen sharing session", v9, 2u);
    OUTLINED_FUNCTION_3();
  }

  uint64_t v10 = (uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession];
  OUTLINED_FUNCTION_2();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v10, (uint64_t)&v52, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
  if (v53)
  {
    uint64_t v51 = v0;
    outlined init with take of Notice(&v52, (uint64_t)v54);
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_425();
    uint64_t v50 = v11;
    OUTLINED_FUNCTION_5_3();
    uint64_t v48 = v12;
    MEMORY[0x1F4188790](v13);
    OUTLINED_FUNCTION_2_3();
    uint64_t v47 = v14;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v49 = &v47;
    uint64_t v16 = OUTLINED_FUNCTION_8(v15);
    uint64_t v18 = *(void *)(v17 + 64);
    MEMORY[0x1F4188790](v16);
    unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v20 = &v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    OUTLINED_FUNCTION_2();
    uint64_t v21 = *(void **)v20;
    uint64_t v22 = *((void *)v20 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 176);
    swift_unknownObjectRetain();
    uint64_t v25 = v21;
    v24(ObjectType, v22);
    OUTLINED_FUNCTION_198();
    swift_unknownObjectRelease();
    if (v21)
    {
      id v26 = objc_msgSend(v21, sel_windowUUID);

      MEMORY[0x1F4188790](v27);
      if (v26)
      {
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();
      }
      uint64_t v35 = v51;
      uint64_t v36 = OUTLINED_FUNCTION_430();
      __swift_storeEnumTagSinglePayload(v36, v37, v38, v2);
      uint64_t v39 = OUTLINED_FUNCTION_248();
      outlined init with take of AspectRatio?(v39, v40, v41);
      OUTLINED_FUNCTION_33_0((uint64_t)&v47 - v19, 1, v2);
      if (!v42)
      {
        uint64_t v43 = v47;
        uint64_t v44 = *(void (**)(uint64_t))(v48 + 32);
        uint64_t v45 = OUTLINED_FUNCTION_194_1();
        v44(v45);
        ((void (*)(uint64_t, uint64_t))v44)(v35, v43);
        __swift_storeEnumTagSinglePayload(v35, 0, 1, v2);
LABEL_16:
        __swift_project_boxed_opaque_existential_1(v54, v54[3]);
        OUTLINED_FUNCTION_332_0();
        v46();
        _s15ConversationKit11ParticipantVWOhTm_13(v35, (void (*)(void))type metadata accessor for ScreenSharingSessionConfiguration);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
        goto LABEL_17;
      }
    }
    else
    {
      OUTLINED_FUNCTION_10_2((uint64_t)&v47 - v19);
      uint64_t v35 = v51;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)&v47 - v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_10_2(v35);
    goto LABEL_16;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)&v52, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
  uint64_t v28 = v1;
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (_DWORD *)OUTLINED_FUNCTION_37();
    v54[0] = OUTLINED_FUNCTION_9_0();
    *uint64_t v31 = 136315138;
    *(void *)&long long v52 = v28;
    uint64_t v32 = v28;
    uint64_t v33 = String.init<A>(reflecting:)();
    *(void *)&long long v52 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_22(&dword_1C2F90000, v29, v30, "Not able to make screen sharing session due to screenSharingSession being nil. %s");
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
LABEL_17:
  OUTLINED_FUNCTION_28();
}

void ConversationController.requestScreenSharingPicker(with:)(uint64_t a1)
{
  ConversationController.lookupActiveConversation()();
  if (v23)
  {
    OUTLINED_FUNCTION_398(v3, v4, v5, v6);
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    os_log_type_t v8 = OUTLINED_FUNCTION_30(v7, (uint64_t)static Log.screenSharing);
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_105(v9))
    {
      uint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_37();
      *(_DWORD *)uint64_t v10 = 134217984;
      v22[0] = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1C2F90000, v8, v1, "Requesting screen sharing picker with contentStyle: %ld", v10, 0xCu);
      OUTLINED_FUNCTION_3();
    }

    uint64_t v11 = OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_311_1(v11, v12, v13, v14);
    OUTLINED_FUNCTION_399(v22, v23);
    OUTLINED_FUNCTION_97_7();
    v15();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v22, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for screenSharing != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    uint64_t v17 = (void *)OUTLINED_FUNCTION_30(v16, (uint64_t)static Log.screenSharing);
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_12(v18))
    {
      unint64_t v19 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v19);
      OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v20, v21, "Failed to request screen sharing picker because there is no active conversation");
      OUTLINED_FUNCTION_3();
    }
  }
}

void ConversationController.requestScreenSharingSession(for:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = v1;
  ConversationController.lookupActiveConversation()();
  if (v18[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    if (OUTLINED_FUNCTION_165_3())
    {
      id v3 = v17;
      id v4 = objc_msgSend(v17, sel_activeRemoteParticipants);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
      uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      MEMORY[0x1F4188790](v6);
      v16[2] = v2;
      specialized Sequence.first(where:)((uint64_t (*)(id *))partial apply for closure #1 in ConversationController.requestScreenSharingSession(for:), (uint64_t)v16, v5);
      os_log_type_t v8 = v7;
      swift_bridgeObjectRelease();
      if (v8)
      {
        os_log_type_t v9 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
        OUTLINED_FUNCTION_2();
        __swift_project_boxed_opaque_existential_1(v9, v9[3]);
        OUTLINED_FUNCTION_5_3();
        OUTLINED_FUNCTION_50_0();
        MEMORY[0x1F4188790](v10);
        OUTLINED_FUNCTION_129_6(v11, v16[4]);
        OUTLINED_FUNCTION_2_1();
        v12();
        OUTLINED_FUNCTION_319_0();
        uint64_t v14 = (void *)v13();
        OUTLINED_FUNCTION_45_4();
        OUTLINED_FUNCTION_336();
        v15();
        objc_msgSend(v14, sel_requestParticipantToShareScreen_forConversation_, v8, v3);
      }
      else
      {
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        static os_log_type_t.error.getter();
        OUTLINED_FUNCTION_118_5();
      }
      goto LABEL_9;
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v18, &demangling cache variable for type metadata for Conversation?);
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_31_26();
LABEL_9:
  OUTLINED_FUNCTION_15_0();
}

Swift::Void __swiftcall ConversationController.stopScreenSharingSession()()
{
  swift_getObjectType();
  if (one-time initialization token for screenSharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = OUTLINED_FUNCTION_30(v1, (uint64_t)static Log.screenSharing);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)OUTLINED_FUNCTION_8_0();
    *(_WORD *)id v4 = 0;
    _os_log_impl(&dword_1C2F90000, v2, v3, "Stopping screen sharing session", v4, 2u);
    OUTLINED_FUNCTION_3();
  }

  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession;
  OUTLINED_FUNCTION_2();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v5, (uint64_t)&v17, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
  if (v18)
  {
    outlined init with take of Notice(&v17, (uint64_t)v19);
    OUTLINED_FUNCTION_67_12(v19);
    uint64_t v6 = OUTLINED_FUNCTION_92_0();
    v7(v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v17, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    id v8 = v0;
    os_log_type_t v9 = (void *)Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_105(v10))
    {
      uint64_t v11 = (_DWORD *)OUTLINED_FUNCTION_37();
      v19[0] = OUTLINED_FUNCTION_9_0();
      _DWORD *v11 = 136315138;
      *(void *)&long long v17 = v8;
      id v12 = v8;
      uint64_t v13 = String.init<A>(reflecting:)();
      *(void *)&long long v17 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_34_6(&dword_1C2F90000, v15, v16, "Not able to stop screen sharing session due to screenSharingSession being nil. %s");
      OUTLINED_FUNCTION_52_2();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
    }
  }
}

void ConversationController.declineOrCancelScreenShareRequest(for:)()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = v0;
  os_log_type_t v3 = v2;
  ConversationController.lookupActiveConversation()();
  if (v18[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    if (OUTLINED_FUNCTION_165_3())
    {
      id v4 = v17;
      specialized Conversation.currentScreenSharingRequest(ignoring:)();
      uint64_t v6 = v5;

      if (v6)
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUScreenSharingRequest);
        id v7 = v3;
        id v8 = v6;
        char v9 = static NSObject.== infix(_:_:)();

        if (v9)
        {
          os_log_type_t v10 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
          OUTLINED_FUNCTION_2();
          __swift_project_boxed_opaque_existential_1(v10, v10[3]);
          OUTLINED_FUNCTION_5_3();
          OUTLINED_FUNCTION_50_0();
          MEMORY[0x1F4188790](v11);
          OUTLINED_FUNCTION_129_6(v12, (uint64_t)v17);
          OUTLINED_FUNCTION_2_1();
          v13();
          OUTLINED_FUNCTION_69_0();
          OUTLINED_FUNCTION_319_0();
          uint64_t v15 = (void *)v14();
          OUTLINED_FUNCTION_41_0();
          OUTLINED_FUNCTION_336();
          v16();
          objc_msgSend(v15, sel_cancelOrDenyScreenShareRequest_forConversation_, v7, v4);

          goto LABEL_11;
        }
      }
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v18, &demangling cache variable for type metadata for Conversation?);
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_31_26();
LABEL_11:
  OUTLINED_FUNCTION_15_0();
}

void ConversationController.approve(_:)()
{
  OUTLINED_FUNCTION_31();
  swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_39_30();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_282_0();
  if (v25)
  {
    outlined init with take of Notice(&v24, (uint64_t)v26);
    ConversationController.participant(with:)();
    OUTLINED_FUNCTION_33_0(v1, 1, v4);
    if (v6)
    {
      outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v7 = OUTLINED_FUNCTION_11_7();
      *(_OWORD *)(v7 + 16) = xmmword_1C37696D0;
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v9 = OUTLINED_FUNCTION_8(v8);
      MEMORY[0x1F4188790](v9);
      OUTLINED_FUNCTION_23_45();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_124();
      v10();
      OUTLINED_FUNCTION_463();
      OUTLINED_FUNCTION_472();
      uint64_t v11 = MEMORY[0x1E4FBB1A0];
      *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v12 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_395(v12);
      uint64_t v13 = String.init<A>(reflecting:)();
      *(void *)(v7 + 96) = v11;
      *(void *)(v7 + 104) = &demangling cache variable for type metadata for UUID?;
      *(void *)(v7 + 72) = v13;
      *(void *)(v7 + 80) = v14;
      OUTLINED_FUNCTION_305_1();
      swift_bridgeObjectRelease();
      uint64_t v23 = (long long *)v26;
    }
    else
    {
      _s15ConversationKit11ParticipantVWObTm_6(v1, v0);
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_198_4();
      __swift_project_boxed_opaque_existential_1(&v24, v25);
      uint64_t v21 = OUTLINED_FUNCTION_291_1();
      v22(v21);
      _s15ConversationKit11ParticipantVWOhTm_13(v0, (void (*)(void))type metadata accessor for Participant);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      uint64_t v23 = &v24;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v24, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v15 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v15 + 16) = xmmword_1C3769620;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v17 = OUTLINED_FUNCTION_8(v16);
    MEMORY[0x1F4188790](v17);
    uint64_t v18 = OUTLINED_FUNCTION_46_19();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_124();
    v19();
    uint64_t v20 = OUTLINED_FUNCTION_86_11();
    OUTLINED_FUNCTION_314_1();
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v15 + 32) = v20;
    *(void *)(v15 + 40) = v18;
    OUTLINED_FUNCTION_13_51();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28();
}

void ConversationController.dismiss(_:)()
{
  OUTLINED_FUNCTION_31();
  swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = OUTLINED_FUNCTION_39_30();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_282_0();
  if (v25)
  {
    outlined init with take of Notice(&v24, (uint64_t)v26);
    ConversationController.participant(with:)();
    OUTLINED_FUNCTION_33_0(v1, 1, v4);
    if (v6)
    {
      outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v7 = OUTLINED_FUNCTION_11_7();
      *(_OWORD *)(v7 + 16) = xmmword_1C37696D0;
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v9 = OUTLINED_FUNCTION_8(v8);
      MEMORY[0x1F4188790](v9);
      OUTLINED_FUNCTION_23_45();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_124();
      v10();
      OUTLINED_FUNCTION_463();
      OUTLINED_FUNCTION_472();
      uint64_t v11 = MEMORY[0x1E4FBB1A0];
      *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v12 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_395(v12);
      uint64_t v13 = String.init<A>(reflecting:)();
      *(void *)(v7 + 96) = v11;
      *(void *)(v7 + 104) = &demangling cache variable for type metadata for UUID?;
      *(void *)(v7 + 72) = v13;
      *(void *)(v7 + 80) = v14;
      OUTLINED_FUNCTION_305_1();
      swift_bridgeObjectRelease();
      uint64_t v23 = (long long *)v26;
    }
    else
    {
      _s15ConversationKit11ParticipantVWObTm_6(v1, v0);
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_198_4();
      __swift_project_boxed_opaque_existential_1(&v24, v25);
      uint64_t v21 = OUTLINED_FUNCTION_291_1();
      v22(v21);
      _s15ConversationKit11ParticipantVWOhTm_13(v0, (void (*)(void))type metadata accessor for Participant);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      uint64_t v23 = &v24;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v24, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v15 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v15 + 16) = xmmword_1C3769620;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v17 = OUTLINED_FUNCTION_8(v16);
    MEMORY[0x1F4188790](v17);
    uint64_t v18 = OUTLINED_FUNCTION_46_19();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_124();
    v19();
    uint64_t v20 = OUTLINED_FUNCTION_86_11();
    OUTLINED_FUNCTION_314_1();
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v15 + 32) = v20;
    *(void *)(v15 + 40) = v18;
    OUTLINED_FUNCTION_13_51();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationController.pttLeaveChannel()()
{
  OUTLINED_FUNCTION_293();
  uint64_t v19 = v1;
  uint64_t v20 = v2;
  uint64_t v3 = v0;
  uint64_t v4 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  uint64_t v5 = *(void *)(v4 + 8);
  swift_getObjectType();
  char v6 = *(void (**)(uint64_t))(v5 + 216);
  swift_unknownObjectRetain();
  uint64_t v7 = OUTLINED_FUNCTION_160_4();
  v6(v7);
  OUTLINED_FUNCTION_304_1();
  if (v5)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    uint64_t v9 = (void *)OUTLINED_FUNCTION_30(v8, (uint64_t)static Logger.conversationControls);
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_105(v10))
    {
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_35_1(&dword_1C2F90000, v11, v12, "Leaving PTT Channel");
      OUTLINED_FUNCTION_3();
    }

    uint64_t v13 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    OUTLINED_FUNCTION_2();
    outlined init with copy of Conversation(v13, (uint64_t)v16);
    uint64_t v14 = v18;
    OUTLINED_FUNCTION_69_10(v16, v17);
    uint64_t v15 = *(void (**)(void))(v14 + 264);
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_460();
    v15();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  OUTLINED_FUNCTION_352_0();
}

Swift::Void __swiftcall ConversationController.pttStopTransmit()()
{
  OUTLINED_FUNCTION_293();
  uint64_t v23 = v2;
  uint64_t v24 = v3;
  uint64_t v4 = v0;
  uint64_t v5 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  uint64_t v6 = *(void *)(v5 + 8);
  swift_getObjectType();
  OUTLINED_FUNCTION_440();
  uint64_t v7 = OUTLINED_FUNCTION_419();
  v1(v7);
  OUTLINED_FUNCTION_304_1();
  if (v6 == 1)
  {
    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    uint64_t v9 = (void *)OUTLINED_FUNCTION_30(v8, (uint64_t)static Logger.conversationControls);
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_105(v10))
    {
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_35_1(&dword_1C2F90000, v11, v12, "Holding PTT Call");
      OUTLINED_FUNCTION_3();
    }

    uint64_t v13 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    OUTLINED_FUNCTION_2();
    outlined init with copy of Conversation(v13, (uint64_t)v20);
    uint64_t v14 = v21;
    uint64_t v15 = v22;
    OUTLINED_FUNCTION_69_10(v20, v21);
    uint64_t v16 = *(void *)(v5 + 8);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 256);
    uint64_t v18 = swift_unknownObjectRetain();
    v17(v18, v16, v14, v15);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    char v19 = 0;
  }
  else
  {
    char v19 = 1;
  }
  *(unsigned char *)(v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit) = v19;
  OUTLINED_FUNCTION_352_0();
}

Swift::Void __swiftcall ConversationController.pttStartTransmit()()
{
  OUTLINED_FUNCTION_293();
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  uint64_t v4 = v0;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = OUTLINED_FUNCTION_30(v5, (uint64_t)static Logger.conversationControls);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_2_12(v7))
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_8_0();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1C2F90000, v6, v1, "Unholding PTT Call", v8, 2u);
    OUTLINED_FUNCTION_3();
  }

  uint64_t v9 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_311_1(v9, v10, v11, v12);
  uint64_t v13 = v20;
  uint64_t v14 = v21;
  OUTLINED_FUNCTION_69_10(v19, v20);
  uint64_t v15 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  uint64_t v16 = *(void *)(v15 + 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 248);
  uint64_t v18 = swift_unknownObjectRetain();
  v17(v18, v16, v13, v14);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit) = 0;
  OUTLINED_FUNCTION_352_0();
}

Swift::Void __swiftcall ConversationController.callBack()()
{
  OUTLINED_FUNCTION_293();
  uint64_t v18 = v1;
  uint64_t v19 = v2;
  uint64_t v3 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = *(void *)(v3 + 8);
  swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t))(v4 + 496);
  swift_unknownObjectRetain();
  uint64_t v6 = OUTLINED_FUNCTION_160_4();
  v5(v6);
  OUTLINED_FUNCTION_304_1();
  if (v4)
  {
    uint64_t v7 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 504);
    swift_unknownObjectRetain();
    uint64_t v10 = (void *)v9(ObjectType, v7);
    swift_unknownObjectRelease();
    if (v10)
    {
      uint64_t v11 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
      OUTLINED_FUNCTION_2();
      outlined init with copy of Conversation(v11, (uint64_t)v15);
      uint64_t v12 = v16;
      uint64_t v13 = v17;
      OUTLINED_FUNCTION_399(v15, v16);
      (*(void (**)(void *, void, void, uint64_t, uint64_t))(v14 + 232))(v10, 0, 0, v12, v13);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    }
  }
  OUTLINED_FUNCTION_352_0();
}

void ConversationController.buzz(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_89_2();
  OUTLINED_FUNCTION_5_3();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_17_0();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_118();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v3 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v11();
  char v12 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_139();
  v13();
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    swift_once();
    goto LABEL_11;
  }
  ConversationController.lookupActiveConversation()();
  if (v39)
  {
    OUTLINED_FUNCTION_200_2();
    ConversationController.indexOfRemoteParticipant(with:)();
    if (v15)
    {
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_13:
        static os_log_type_t.error.getter();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v25 = OUTLINED_FUNCTION_25_15();
        *(_OWORD *)(v25 + 16) = xmmword_1C3769620;
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v27 = OUTLINED_FUNCTION_8(v26);
        MEMORY[0x1F4188790](v27);
        OUTLINED_FUNCTION_46_19();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_102();
        OUTLINED_FUNCTION_124();
        v28();
        uint64_t v29 = OUTLINED_FUNCTION_86_11();
        uint64_t v31 = v30;
        uint64_t v32 = OUTLINED_FUNCTION_266_1();
        outlined destroy of SystemUpdateNotice?(v32, v33);
        *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v25 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v25 + 32) = v29;
        *(void *)(v25 + 40) = v31;
        OUTLINED_FUNCTION_94_6();
        swift_bridgeObjectRelease();
LABEL_18:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
        goto LABEL_19;
      }
    }
    else
    {
      unint64_t v16 = v14;
      uint64_t v17 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
      OUTLINED_FUNCTION_2();
      if ((v16 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v16 < *(void *)(*(void *)v17 + 16))
      {
        _s15ConversationKit11ParticipantVWOcTm_19(*(void *)v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v16, v0);
        Participant.isBuzzable.getter();
        if (v18)
        {
          uint64_t v19 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
          OUTLINED_FUNCTION_2();
          outlined init with copy of Conversation(v19, (uint64_t)v38);
          OUTLINED_FUNCTION_69_10(v38, v39);
          OUTLINED_FUNCTION_397();
          v20();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
          if (one-time initialization token for conversationKit != -1) {
            swift_once();
          }
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          uint64_t v21 = OUTLINED_FUNCTION_25_15();
          *(_OWORD *)(v21 + 16) = xmmword_1C3769620;
          OUTLINED_FUNCTION_439();
          uint64_t v22 = OUTLINED_FUNCTION_445();
          uint64_t v24 = v23;
          outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
          *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v21 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(void *)(v21 + 32) = v22;
          *(void *)(v21 + 40) = v24;
          static os_log_type_t.default.getter();
          OUTLINED_FUNCTION_38_20();
        }
        else
        {
          if (one-time initialization token for conversationKit != -1) {
            swift_once();
          }
          static os_log_type_t.error.getter();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          uint64_t v34 = OUTLINED_FUNCTION_25_15();
          *(_OWORD *)(v34 + 16) = xmmword_1C3769620;
          OUTLINED_FUNCTION_439();
          uint64_t v35 = OUTLINED_FUNCTION_445();
          uint64_t v37 = v36;
          outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
          *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v34 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(void *)(v34 + 32) = v35;
          *(void *)(v34 + 40) = v37;
          OUTLINED_FUNCTION_315_0();
          os_log(_:dso:log:type:_:)();
        }
        swift_bridgeObjectRelease();
        _s15ConversationKit11ParticipantVWOhTm_13(v0, (void (*)(void))type metadata accessor for Participant);
        goto LABEL_18;
      }
      __break(1u);
    }
    swift_once();
    goto LABEL_13;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v38, &demangling cache variable for type metadata for Conversation?);
  if (one-time initialization token for conversationKit != -1) {
    goto LABEL_21;
  }
LABEL_11:
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_31_26();
LABEL_19:
  OUTLINED_FUNCTION_28();
}

void ConversationController.canKick(_:)()
{
  OUTLINED_FUNCTION_35_14();
  uint64_t v2 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_5_3();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_16_6();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v45 - v7;
  ConversationController.indexOfRemoteParticipant(with:)();
  if (v10)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_7:
      uint64_t v14 = type metadata accessor for Logger();
      __swift_project_value_buffer(v14, (uint64_t)static Logger.conversationKit);
      uint64_t v15 = OUTLINED_FUNCTION_297();
      OUTLINED_FUNCTION_5_3();
      uint64_t v17 = v16;
      MEMORY[0x1F4188790](v18);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_2_1();
      v19();
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_37();
        uint64_t v23 = OUTLINED_FUNCTION_9_0();
        v45[1] = v45;
        uint64_t v48 = v23;
        *(_DWORD *)uint64_t v22 = 136315138;
        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
        uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
        v46[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_139();
        v26();
        _os_log_impl(&dword_1C2F90000, v20, v21, "Could not find participant with identifier %s", v22, 0xCu);
        OUTLINED_FUNCTION_12_23();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v2, v15);
      }

      goto LABEL_20;
    }
LABEL_23:
    swift_once();
    goto LABEL_7;
  }
  unint64_t v11 = v9;
  uint64_t v12 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  OUTLINED_FUNCTION_2();
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v11 >= *(void *)(*(void *)v12 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  _s15ConversationKit11ParticipantVWOcTm_19(*(void *)v12+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v11, (uint64_t)v8);
  Participant.isKickingAvailableWithLeeway.getter();
  if ((v13 & 1) == 0)
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    uint64_t v28 = OUTLINED_FUNCTION_8(v27);
    MEMORY[0x1F4188790](v28);
    uint64_t v30 = (char *)v45 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    Participant.broadcastStartDate.getter((uint64_t)v30);
    uint64_t v31 = type metadata accessor for Date();
    OUTLINED_FUNCTION_33_0((uint64_t)v30, 1, v31);
    if (v32)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for Date?);
    }
    else
    {
      Date.timeIntervalSinceNow.getter();
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_26_2();
      v33();
      v46[0] = 0;
      v46[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(21);
      Double.write<A>(to:)();
      v34._object = (void *)0x80000001C37B7BA0;
      v34._countAndFlagsBits = 0xD000000000000013;
      String.append(_:)(v34);
    }
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    OUTLINED_FUNCTION_98_0(v35, (uint64_t)static Logger.conversationKit);
    OUTLINED_FUNCTION_439();
    swift_bridgeObjectRetain();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = OUTLINED_FUNCTION_15_1();
      v46[0] = OUTLINED_FUNCTION_14_3();
      *(_DWORD *)uint64_t v38 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v39 = OUTLINED_FUNCTION_210_2();
      uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v38 + 12) = 2080;
      type metadata accessor for UUID();
      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
      uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit11ParticipantVWOhTm_13(v1, (void (*)(void))type metadata accessor for Participant);
      OUTLINED_FUNCTION_205(&dword_1C2F90000, v36, v44, "Requested to kick out a participant that cannot be kicked out %s: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {

      _s15ConversationKit11ParticipantVWOhTm_13(v1, (void (*)(void))type metadata accessor for Participant);
      swift_bridgeObjectRelease_n();
    }
  }
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
LABEL_20:
  OUTLINED_FUNCTION_33_2();
}

uint64_t ConversationController.kick(_:)()
{
  ConversationController.lookupActiveConversation()();
  if (!v11) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for Conversation?);
  }
  OUTLINED_FUNCTION_398(v0, v1, v2, v3);
  uint64_t v4 = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_311_1(v4, v5, v6, v7);
  __swift_project_boxed_opaque_existential_1(v10, v11);
  OUTLINED_FUNCTION_97_7();
  v8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t *ConversationController.DidChangeIsWaitingOnFirstFrameNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for DidChangeIsWaitingOnFirstFrameNotification != -1) {
    swift_once();
  }
  return &static ConversationController.DidChangeIsWaitingOnFirstFrameNotification;
}

void *ConversationController.DidChangeIsWaitingOnFirstFrameUUIDKey.unsafeMutableAddressor()
{
  return &static ConversationController.DidChangeIsWaitingOnFirstFrameUUIDKey;
}

void *ConversationController.DidChangeIsWaitingOnFirstFrameKey.unsafeMutableAddressor()
{
  return &static ConversationController.DidChangeIsWaitingOnFirstFrameKey;
}

uint64_t ConversationController.visibleParticipants.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v3 = *v2;
  OUTLINED_FUNCTION_2();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  uint64_t v4 = v3;
  if (*(unsigned char *)(v1
                + OBJC_IVAR____TtC15ConversationKit22ConversationController_includeLocalParticipantInVisibleParticipants) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
    uint64_t v5 = OUTLINED_FUNCTION_89();
    uint64_t v6 = type metadata accessor for Participant(v5);
    OUTLINED_FUNCTION_1(v6);
    unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C3769620;
    uint64_t v10 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    OUTLINED_FUNCTION_2();
    _s15ConversationKit11ParticipantVWOcTm_19(v10, v9 + v8);
    specialized Array.append<A>(contentsOf:)();
    return v9;
  }
  return v4;
}

uint64_t ConversationController.shareableLink(completionHandler:)(void (*a1)(uint64_t, void), uint64_t a2)
{
  ConversationController.lookupActiveConversation()();
  if (v18)
  {
    outlined init with take of Notice(&v17, (uint64_t)v20);
    OUTLINED_FUNCTION_109_5(v20);
    uint64_t v5 = OUTLINED_FUNCTION_1_11();
    uint64_t v7 = v6(v5);
    if (v7)
    {
      unint64_t v8 = (void *)v7;
      if (a1) {
        a1(v7, 0);
      }
    }
    else
    {
      uint64_t v10 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
      OUTLINED_FUNCTION_2();
      outlined init with copy of Conversation(v10, (uint64_t)&v17);
      uint64_t v11 = v18;
      uint64_t v12 = v19;
      OUTLINED_FUNCTION_69_10(&v17, v18);
      outlined init with copy of Conversation((uint64_t)v20, (uint64_t)v16);
      uint64_t v13 = OUTLINED_FUNCTION_25_15();
      *(void *)(v13 + 16) = a1;
      *(void *)(v13 + 24) = a2;
      outlined init with take of Notice(v16, v13 + 32);
      uint64_t v14 = *(void (**)(void *, void (*)(void *, void *), uint64_t, uint64_t, uint64_t))(v12 + 184);
      uint64_t v15 = OUTLINED_FUNCTION_34_9();
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v15);
      v14(v20, partial apply for closure #1 in ConversationController.shareableLink(completionHandler:), v13, v11, v12);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v17, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    uint64_t result = OUTLINED_FUNCTION_118_5();
    if (a1) {
      return ((uint64_t (*)(void, void))a1)(0, 0);
    }
  }
  return result;
}

BOOL ConversationController.joinedConversation.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
  OUTLINED_FUNCTION_2();
  return (*v1 & 0xFFFFFFFFFFFFFFFELL) == 2;
}

void ConversationController.cameraStartPolicy.getter()
{
  OUTLINED_FUNCTION_9_83();
  char v2 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_220_0();
  OUTLINED_FUNCTION_426();
  uint64_t v3 = OUTLINED_FUNCTION_443();
  v1(v3);
  OUTLINED_FUNCTION_338();
  if (v2) {
    objc_msgSend(self, sel_allowsScreenSharingWithVideo);
  }
  OUTLINED_FUNCTION_10_73();
}

uint64_t thunk for @escaping @callee_guaranteed () -> (@unowned Bool)@<X0>(uint64_t (*a1)(void)@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result & 1;
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed () -> (@out Bool)(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v2);
  return v2;
}

uint64_t ConversationController.hasAvailableDeskViewCameras.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  if ((*(uint64_t (**)(void))(v1 + 304))())
  {
    uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_2();
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_50_0();
    MEMORY[0x1F4188790](v3);
    OUTLINED_FUNCTION_2_1();
    v4();
    OUTLINED_FUNCTION_57_11();
    v5();
    OUTLINED_FUNCTION_4_1();
    v6();
    OUTLINED_FUNCTION_67_12(&v10);
    uint64_t v7 = OUTLINED_FUNCTION_92_0();
    v8(v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  }
  return OUTLINED_FUNCTION_370_0();
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> ()(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> (@out ())(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void ConversationController.participants(with:)()
{
  id v1 = v0;
  specialized Sequence.compactMap<A>(_:)();
}

Swift::Void __swiftcall ConversationController.updateLayoutStyle(_:)(ConversationKit::MultiwayViewController::LayoutStyle a1)
{
  OUTLINED_FUNCTION_31();
  char v2 = *v1;
  uint64_t v3 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_72_9();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(unsigned char *)(v4 + 24) = v2;
  v10[4] = partial apply for closure #1 in ConversationController.updateLayoutStyle(_:);
  v10[5] = v4;
  v10[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v10[2] = thunk for @escaping @callee_guaranteed () -> ();
  void v10[3] = &block_descriptor_104;
  uint64_t v5 = _Block_copy(v10);
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_1();
  v10[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_172();
  _Block_release(v5);

  OUTLINED_FUNCTION_4_1();
  v8();
  OUTLINED_FUNCTION_139();
  v9();
  OUTLINED_FUNCTION_28();
}

void ConversationController.activeCallHasPreviouslyReceivedFirstRemoteFrame.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsThatHaveReceivedFirstVideoFrame);
  OUTLINED_FUNCTION_2();
  uint64_t v4 = *v3;
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_246_1();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_195_3();
  swift_unknownObjectRetain();
  uint64_t v6 = OUTLINED_FUNCTION_252_1();
  v2(v6);
  swift_unknownObjectRelease();
  specialized Set.contains(_:)(v1, v4);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_12_1();
  v7();
  OUTLINED_FUNCTION_28();
}

BOOL ConversationController.hasRingingCalls.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs;
  OUTLINED_FUNCTION_2();
  if (*(void *)(*(void *)v1 + 16)) {
    return 1;
  }
  uint64_t v3 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_220_0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 184);
  swift_unknownObjectRetain();
  v5(v4, v3);
  OUTLINED_FUNCTION_338();
  return v3 == 4;
}

uint64_t ConversationController.isTrackingActiveConversation.getter()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v1 = OUTLINED_FUNCTION_8(v0);
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_16_0();
  uint64_t v2 = OUTLINED_FUNCTION_34_9();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v2, v3, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  type metadata accessor for UUID();
  uint64_t v4 = OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_33_0(v4, v5, v6);
  if (v7) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = 1;
  }
  uint64_t v9 = OUTLINED_FUNCTION_4_18();
  outlined destroy of SystemUpdateNotice?(v9, v10);
  return v8;
}

void ConversationController.isWaitingOnFirstRemoteFrame.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_246_1();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_195_3();
  swift_unknownObjectRetain();
  uint64_t v5 = OUTLINED_FUNCTION_252_1();
  v2(v5);
  swift_unknownObjectRelease();
  specialized Set.contains(_:)(v1, v3);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_12_1();
  v6();
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.isLocallyCreated.getter()
{
  ConversationController.lookupActiveConversation()();
  if (v5)
  {
    outlined init with take of Notice(&v4, (uint64_t)v6);
    OUTLINED_FUNCTION_67_12(v6);
    uint64_t v0 = OUTLINED_FUNCTION_92_0();
    char v2 = v1(v0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v4, &demangling cache variable for type metadata for Conversation?);
    char v2 = 1;
  }
  return v2 & 1;
}

uint64_t ConversationController.shouldShowLastFrameUI.getter()
{
  ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff);
}

uint64_t ConversationController.deviceOrientation.setter(uint64_t a1)
{
  return ConversationController.deviceOrientation.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation, ConversationController.deviceOrientation.didset);
}

uint64_t ConversationController.isCarPlayConnected.getter()
{
  id v0 = objc_msgSend(self, sel_sharedApplication);
  id v1 = objc_msgSend(v0, sel_openSessions);

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UISceneSession);
  lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type UISceneSession and conformance NSObject);
  OUTLINED_FUNCTION_45_4();
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.contains(where:)(v2);
  OUTLINED_FUNCTION_11();
  return v1 & 1;
}

uint64_t ConversationController.supportsCameraBlur.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  if ((*(uint64_t (**)(void))(v1 + 152))())
  {
    uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_2();
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_50_0();
    MEMORY[0x1F4188790](v3);
    OUTLINED_FUNCTION_2_1();
    v4();
    OUTLINED_FUNCTION_57_11();
    v5();
    OUTLINED_FUNCTION_4_1();
    v6();
    OUTLINED_FUNCTION_67_12(&v10);
    uint64_t v7 = OUTLINED_FUNCTION_92_0();
    v8(v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  }
  return OUTLINED_FUNCTION_370_0();
}

uint64_t ConversationController.supportsReactionGestures.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static Features.shared) + 0x78))() & 1) != 0
    || static Platform.current.getter() == 2)
  {
    uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_2();
    __swift_project_boxed_opaque_existential_1(v1, v1[3]);
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_50_0();
    MEMORY[0x1F4188790](v2);
    OUTLINED_FUNCTION_2_1();
    v3();
    OUTLINED_FUNCTION_57_11();
    v4();
    OUTLINED_FUNCTION_4_1();
    v5();
    OUTLINED_FUNCTION_67_12(&v9);
    uint64_t v6 = OUTLINED_FUNCTION_92_0();
    v7(v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  }
  return OUTLINED_FUNCTION_370_0();
}

uint64_t ConversationController.supportsStudioLight.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)static Features.shared) + 0x78))() & 1) != 0
    || static Platform.current.getter() == 2)
  {
    uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_2();
    __swift_project_boxed_opaque_existential_1(v1, v1[3]);
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_50_0();
    MEMORY[0x1F4188790](v2);
    OUTLINED_FUNCTION_2_1();
    v3();
    OUTLINED_FUNCTION_57_11();
    v4();
    OUTLINED_FUNCTION_4_1();
    v5();
    OUTLINED_FUNCTION_67_12(&v9);
    uint64_t v6 = OUTLINED_FUNCTION_92_0();
    v7(v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  }
  return OUTLINED_FUNCTION_370_0();
}

void ConversationController.remoteOneToOneParticipant.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_10_5();
  uint64_t v73 = v7;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_141_2();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v10 = OUTLINED_FUNCTION_8(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_10_5();
  uint64_t v70 = v11;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_8_4();
  uint64_t v71 = v13;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_42();
  uint64_t v72 = v15;
  uint64_t v16 = OUTLINED_FUNCTION_128_5();
  OUTLINED_FUNCTION_5_3();
  uint64_t v74 = v17;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_8_4();
  uint64_t v67 = v20;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_8_4();
  uint64_t v69 = v22;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_8_4();
  uint64_t v76 = v24;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v65 - v26;
  uint64_t v28 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v68 = v28;
  uint64_t v29 = *v28;
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v80 = MEMORY[0x1E4FBC860];
  uint64_t v31 = *(void *)(v29 + 16);
  swift_bridgeObjectRetain();
  uint64_t v75 = v5;
  uint64_t v77 = v31;
  uint64_t v78 = v2;
  if (v31)
  {
    uint64_t v65 = v16;
    uint64_t v66 = v4;
    unint64_t v32 = 0;
    uint64_t v33 = v74;
    while (1)
    {
      if (v32 >= *(void *)(v29 + 16))
      {
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x1C3614840);
      }
      unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v35 = *(void *)(v33 + 72);
      _s15ConversationKit11ParticipantVWOcTm_19(v29 + v34 + v35 * v32, (uint64_t)v27);
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v27, v1);
      OUTLINED_FUNCTION_351();
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        os_log_type_t v37 = (const void *)(v1 + *(int *)(v36 + 48));
        OUTLINED_FUNCTION_8_2((uint64_t *)(v1 + *(int *)(v36 + 64)));
        memcpy(v79, v37, sizeof(v79));
        type metadata accessor for Date();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_26_2();
        v38();
        LOBYTE(v37) = v79[0];
        outlined destroy of Participant.MediaInfo((uint64_t)v79);
        if ((v37 & 1) == 0)
        {
          _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v27, v76);
          uint64_t v39 = v80;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v39 + 16) + 1, 1);
            uint64_t v39 = v80;
          }
          unint64_t v41 = *(void *)(v39 + 16);
          unint64_t v40 = *(void *)(v39 + 24);
          if (v41 >= v40 >> 1)
          {
            char v42 = OUTLINED_FUNCTION_57_5(v40);
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42, v41 + 1, 1);
            uint64_t v39 = v80;
          }
          *(void *)(v39 + 16) = v41 + 1;
          _s15ConversationKit11ParticipantVWObTm_6(v76, v39 + v34 + v41 * v35);
          uint64_t v33 = v74;
          goto LABEL_13;
        }
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_13(v1, (void (*)(void))type metadata accessor for Participant.State);
      }
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v27, (void (*)(void))type metadata accessor for Participant);
LABEL_13:
      ++v32;
      uint64_t v2 = v78;
      if (v77 == v32)
      {
        uint64_t v30 = v80;
        uint64_t v16 = v65;
        uint64_t v4 = v66;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  v79[0] = v30;
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)(v79);
  uint64_t v43 = v73;
  swift_release();
  uint64_t v44 = v72;
  specialized Collection.first.getter(v79[0], v72);
  swift_release();
  uint64_t v45 = v71;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v44, v71, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v45, 1, v16) != 1)
  {
    outlined destroy of SystemUpdateNotice?(v44, &demangling cache variable for type metadata for Participant?);
    uint64_t v58 = v45;
    uint64_t v59 = v69;
LABEL_29:
    _s15ConversationKit11ParticipantVWObTm_6(v58, v59);
    _s15ConversationKit11ParticipantVWObTm_6(v59, v4);
    uint64_t v64 = 0;
    goto LABEL_30;
  }
  outlined destroy of SystemUpdateNotice?(v45, &demangling cache variable for type metadata for Participant?);
  uint64_t v46 = *v68;
  uint64_t v47 = *(void *)(*v68 + 16);
  if (v47)
  {
    OUTLINED_FUNCTION_12_19();
    uint64_t v49 = v46 + v48;
    uint64_t v51 = *(void *)(v50 + 72);
    swift_bridgeObjectRetain();
    while (2)
    {
      uint64_t v52 = OUTLINED_FUNCTION_24_2();
      _s15ConversationKit11ParticipantVWOcTm_19(v52, v53);
      _s15ConversationKit11ParticipantVWOcTm_19(v2, v43);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v55 = v73 + *(int *)(v54 + 48);
          OUTLINED_FUNCTION_8_2((uint64_t *)(v73 + *(int *)(v54 + 64)));
          uint64_t v56 = v55;
          uint64_t v43 = v73;
          outlined destroy of Participant.MediaInfo(v56);
          type metadata accessor for Date();
          OUTLINED_FUNCTION_0();
          OUTLINED_FUNCTION_26_2();
          v57();
          uint64_t v2 = v78;
          _s15ConversationKit11ParticipantVWOhTm_13(v78, (void (*)(void))type metadata accessor for Participant);
          v49 += v51;
          if (!--v47) {
            goto LABEL_25;
          }
          continue;
        case 6u:
          goto LABEL_23;
        default:
          type metadata accessor for Date();
          OUTLINED_FUNCTION_0();
          (*(void (**)(uint64_t))(v60 + 8))(v43);
          break;
      }
      break;
    }
LABEL_23:
    uint64_t v61 = v70;
    _s15ConversationKit11ParticipantVWObTm_6(v78, v70);
    uint64_t v62 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_25:
    uint64_t v62 = 1;
    uint64_t v61 = v70;
  }
  __swift_storeEnumTagSinglePayload(v61, v62, 1, v16);
  swift_bridgeObjectRelease();
  outlined destroy of SystemUpdateNotice?(v44, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_33_0(v61, 1, v16);
  if (!v63)
  {
    uint64_t v58 = v61;
    uint64_t v59 = v67;
    goto LABEL_29;
  }
  outlined destroy of SystemUpdateNotice?(v61, &demangling cache variable for type metadata for Participant?);
  uint64_t v64 = 1;
LABEL_30:
  __swift_storeEnumTagSinglePayload(v4, v64, 1, v16);
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.shouldPlayToneForAVModeChange(for:)(uint64_t a1)
{
  ConversationController.lookupActiveConversation()();
  if (v17)
  {
    OUTLINED_FUNCTION_309_1(v2, v3, v4, v5, v6, v7, v8, v9, v15, v16, v17, v18, v19[0]);
    uint64_t v10 = (void *)ConversationController.lookupActiveParticipant(correspondingTo:)(a1);
    if (v10)
    {
      uint64_t v11 = v10;
      ConversationController.identityClaimingAssociationRelationship(for:in:)(v10, v19);
      int v13 = ~v12;

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      if (v13) {
        return 0;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v15, &demangling cache variable for type metadata for Conversation?);
  }
  return 1;
}

uint64_t ConversationController.conversationDisplayName.getter()
{
  ConversationController.lookupActiveConversation()();
  if (v5)
  {
    outlined init with take of Notice(&v4, (uint64_t)v6);
    OUTLINED_FUNCTION_67_12(v6);
    uint64_t v0 = OUTLINED_FUNCTION_92_0();
    uint64_t v2 = v1(v0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v4, &demangling cache variable for type metadata for Conversation?);
    return 0;
  }
  return v2;
}

uint64_t ConversationController.isLinkSharingSupported.getter()
{
  ConversationController.lookupActiveConversation()();
  uint64_t v0 = v4;
  if (v4)
  {
    uint64_t v1 = v5;
    __swift_project_boxed_opaque_existential_1(v3, v4);
    LOBYTE(v0) = Conversation.isLinkSharingSupported.getter(v0, v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v3, &demangling cache variable for type metadata for Conversation?);
  }
  return v0 & 1;
}

uint64_t ConversationController.messagesGroupName.getter()
{
  ConversationController.lookupActiveConversation()();
  uint64_t v0 = v5;
  if (v5)
  {
    OUTLINED_FUNCTION_67_12(v4);
    uint64_t v1 = OUTLINED_FUNCTION_92_0();
    uint64_t v0 = v2(v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v4, &demangling cache variable for type metadata for Conversation?);
  }
  return v0;
}

void ConversationController.broadcastingState.setter()
{
  OUTLINED_FUNCTION_9_83();
  char v4 = v3;
  OUTLINED_FUNCTION_3_74();
  uint64_t v5 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_11_0();
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v1;
  unsigned __int8 v8 = *(unsigned char *)(v5 + 16);
  *(unsigned char *)(v5 + 16) = v4;
  ConversationController.broadcastingState.didset(v6, v7, v8);
  OUTLINED_FUNCTION_10_73();
}

void ConversationController.participant(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_31();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  uint64_t v94 = v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v28 = OUTLINED_FUNCTION_8(v27);
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_10_5();
  uint64_t v93 = v29;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_42();
  OUTLINED_FUNCTION_459(v31);
  uint64_t v32 = OUTLINED_FUNCTION_128_5();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v33);
  OUTLINED_FUNCTION_10_5();
  uint64_t v96 = v34;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v35);
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_147_5();
  MEMORY[0x1F4188790](v37);
  OUTLINED_FUNCTION_42();
  uint64_t v38 = *(void **)v25;
  uint64_t v98 = *(void *)(v25 + 8);
  char v103 = *(unsigned char *)(v25 + 16);
  uint64_t v95 = v20;
  uint64_t v39 = v20 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_2();
  uint64_t v104 = v32;
  uint64_t v40 = v39 + *(int *)(v32 + 28);
  unint64_t v41 = *(void **)v40;
  uint64_t v42 = *(void *)(v40 + 8);
  uint64_t v43 = *(void *)(v40 + 16);
  uint64_t v97 = v21;
  if (*(void *)v40)
  {
    uint64_t v100 = v39;
    char v44 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    OUTLINED_FUNCTION_337_0();
    OUTLINED_FUNCTION_337_0();
    swift_bridgeObjectRetain();
    id v45 = v38;
    OUTLINED_FUNCTION_351();
    static NSObject.== infix(_:_:)();
    OUTLINED_FUNCTION_11();

    if (v44)
    {
      if (v43)
      {
        if (v103)
        {

          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_145_6(v41);
          goto LABEL_10;
        }
      }
      else if ((v103 & 1) == 0)
      {

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_145_6(v41);
        if (v42 != v98) {
          goto LABEL_12;
        }
LABEL_10:
        uint64_t v47 = v94;
        _s15ConversationKit11ParticipantVWOcTm_19(v100, v94);
        goto LABEL_51;
      }
    }

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_145_6(v41);
  }
  else
  {
    swift_bridgeObjectRetain();
    id v46 = v38;
    OUTLINED_FUNCTION_145_6(0);
    outlined consume of Participant.RemoteIdentifiers?(v38);
  }
LABEL_12:
  uint64_t v48 = (uint64_t *)(v95 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v49 = *v48;
  uint64_t v50 = *(void *)(*v48 + 16);
  uint64_t v99 = v38;
  if (!v50)
  {
    swift_bridgeObjectRetain();
LABEL_26:
    uint64_t v62 = v93;
    uint64_t v47 = v94;
    uint64_t v63 = v92;
    goto LABEL_27;
  }
  OUTLINED_FUNCTION_12_19();
  uint64_t v52 = v49 + v51;
  uint64_t v101 = *(void *)(v53 + 72);
  swift_bridgeObjectRetain_n();
  while (1)
  {
    _s15ConversationKit11ParticipantVWOcTm_19(v52, v21);
    uint64_t v54 = v21 + *(int *)(v104 + 28);
    uint64_t v55 = *(void **)v54;
    uint64_t v56 = *(void *)(v54 + 8);
    uint64_t v57 = *(void *)(v54 + 16);
    if (!*(void *)v54)
    {
      id v60 = v38;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_144_6(0);
      uint64_t v61 = (void *)OUTLINED_FUNCTION_385();
      outlined consume of Participant.RemoteIdentifiers?(v61);
      goto LABEL_23;
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    OUTLINED_FUNCTION_339();
    id v58 = v38;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_339();
    char v59 = static NSObject.== infix(_:_:)();
    swift_bridgeObjectRelease();

    if ((v59 & 1) == 0) {
      goto LABEL_22;
    }
    if (v57) {
      break;
    }
    if (v103) {
      goto LABEL_22;
    }

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_144_6(v55);
    uint64_t v38 = v99;
    uint64_t v21 = v97;
    if (v56 == v98) {
      goto LABEL_44;
    }
LABEL_23:
    _s15ConversationKit11ParticipantVWOhTm_13(v21, (void (*)(void))type metadata accessor for Participant);
    v52 += v101;
    if (!--v50)
    {
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
  }
  if ((v103 & 1) == 0)
  {
LABEL_22:

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_144_6(v55);
    uint64_t v38 = v99;
    uint64_t v21 = v97;
    goto LABEL_23;
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_144_6(v55);
  uint64_t v38 = v99;
  uint64_t v21 = v97;
LABEL_44:
  swift_bridgeObjectRelease();
  uint64_t v63 = v92;
  _s15ConversationKit11ParticipantVWObTm_6(v21, v92);
  uint64_t v62 = v93;
  uint64_t v47 = v94;
LABEL_27:
  uint64_t v64 = OUTLINED_FUNCTION_430();
  __swift_storeEnumTagSinglePayload(v64, v65, v66, v104);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_0(v63, 1, v104);
  if (!v67)
  {
    uint64_t v86 = v63;
    uint64_t v87 = &a16;
    goto LABEL_50;
  }
  outlined destroy of SystemUpdateNotice?(v63, &demangling cache variable for type metadata for Participant?);
  uint64_t v68 = (uint64_t *)(v95 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v69 = *v68;
  uint64_t v70 = *(void *)(*v68 + 16);
  if (!v70)
  {
    swift_bridgeObjectRetain();
    uint64_t v85 = 1;
    goto LABEL_47;
  }
  OUTLINED_FUNCTION_12_19();
  uint64_t v72 = v69 + v71;
  uint64_t v102 = *(void *)(v73 + 72);
  swift_bridgeObjectRetain_n();
  uint64_t v74 = v96;
  while (2)
  {
    uint64_t v75 = OUTLINED_FUNCTION_45_9();
    _s15ConversationKit11ParticipantVWOcTm_19(v75, v76);
    uint64_t v77 = v74 + *(int *)(v104 + 28);
    uint64_t v78 = *(void **)v77;
    uint64_t v79 = *(void *)(v77 + 8);
    uint64_t v80 = *(void *)(v77 + 16);
    if (!*(void *)v77)
    {
      id v83 = v38;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_146_5(0);
      unint64_t v84 = (void *)OUTLINED_FUNCTION_385();
      outlined consume of Participant.RemoteIdentifiers?(v84);
      goto LABEL_40;
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    OUTLINED_FUNCTION_340_0();
    id v81 = v38;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_340_0();
    char v82 = static NSObject.== infix(_:_:)();
    swift_bridgeObjectRelease();

    if ((v82 & 1) == 0) {
      goto LABEL_39;
    }
    if ((v80 & 1) == 0)
    {
      if ((v103 & 1) == 0)
      {

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_146_5(v78);
        uint64_t v38 = v99;
        uint64_t v74 = v96;
        if (v79 == v98) {
          goto LABEL_46;
        }
        goto LABEL_40;
      }
LABEL_39:

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_146_5(v78);
      uint64_t v74 = v96;
      uint64_t v38 = v99;
LABEL_40:
      _s15ConversationKit11ParticipantVWOhTm_13(v74, (void (*)(void))type metadata accessor for Participant);
      v72 += v102;
      if (!--v70)
      {
        swift_bridgeObjectRelease();
        uint64_t v85 = 1;
        uint64_t v62 = v93;
        uint64_t v47 = v94;
        goto LABEL_47;
      }
      continue;
    }
    break;
  }
  if ((v103 & 1) == 0) {
    goto LABEL_39;
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_146_5(v78);
  uint64_t v74 = v96;
LABEL_46:
  swift_bridgeObjectRelease();
  uint64_t v62 = v93;
  _s15ConversationKit11ParticipantVWObTm_6(v74, v93);
  uint64_t v85 = 0;
  uint64_t v47 = v94;
LABEL_47:
  __swift_storeEnumTagSinglePayload(v62, v85, 1, v104);
  swift_bridgeObjectRelease();
  uint64_t v88 = OUTLINED_FUNCTION_85_2();
  OUTLINED_FUNCTION_33_0(v88, v89, v104);
  if (v67)
  {
    outlined destroy of SystemUpdateNotice?(v62, &demangling cache variable for type metadata for Participant?);
    uint64_t v90 = 1;
  }
  else
  {
    uint64_t v86 = v62;
    uint64_t v87 = &a15;
LABEL_50:
    uint64_t v91 = *(v87 - 32);
    _s15ConversationKit11ParticipantVWObTm_6(v86, v91);
    _s15ConversationKit11ParticipantVWObTm_6(v91, v47);
LABEL_51:
    uint64_t v90 = 0;
  }
  __swift_storeEnumTagSinglePayload(v47, v90, 1, v104);
  OUTLINED_FUNCTION_28();
}

BOOL static ConversationController.OneToOneModeChangeSource.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

Swift::Void __swiftcall ConversationController.startLocalVideo(allowVideoUpgrade:)(Swift::Bool allowVideoUpgrade)
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v1;
  char v5 = v4;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_64();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v8();
  char v9 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_266_1();
  OUTLINED_FUNCTION_1_19();
  v10();
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v11 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_2();
  if (*(char *)(v11 + 16) < 0) {
    goto LABEL_25;
  }
  uint64_t v6 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  uint64_t v12 = *(void *)(v6 + 8);
  swift_getObjectType();
  int v13 = *(uint64_t (**)(uint64_t))(v12 + 128);
  swift_unknownObjectRetain();
  uint64_t v14 = OUTLINED_FUNCTION_48_3();
  LOBYTE(v12) = v13(v14);
  swift_unknownObjectRelease();
  if ((v12 & 1) != 0
    || (long long v15 = (void *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState),
        OUTLINED_FUNCTION_2(),
        *v15 == 3))
  {
    uint64_t v16 = (void *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
    OUTLINED_FUNCTION_2();
    if (*v16 == 3)
    {
      OUTLINED_FUNCTION_2();
      uint64_t v17 = (void *)OUTLINED_FUNCTION_248();
      __swift_project_boxed_opaque_existential_1(v17, v18);
      OUTLINED_FUNCTION_5_3();
      OUTLINED_FUNCTION_50_0();
      MEMORY[0x1F4188790](v19);
      OUTLINED_FUNCTION_2_1();
      v20();
      OUTLINED_FUNCTION_57_11();
      v21();
      OUTLINED_FUNCTION_248();
      OUTLINED_FUNCTION_12_1();
      v22();
      __swift_project_boxed_opaque_existential_1(v71, v72);
      uint64_t v23 = OUTLINED_FUNCTION_7_3();
      uint64_t v2 = (uint64_t *)v24(v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    }
    else
    {
      uint64_t v2 = 0;
    }
    uint64_t v25 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
    OUTLINED_FUNCTION_2();
    uint64_t v26 = *v25;
    ConversationController.cameraStartPolicy.getter();
    if (v27)
    {
      uint64_t v70 = v26;
      char v69 = v5;
      uint64_t v28 = (unsigned char *)(v3
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable);
      OUTLINED_FUNCTION_11_0();
      *uint64_t v28 = 0;
      uint64_t v29 = (unsigned char *)(v3
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable);
      OUTLINED_FUNCTION_11_0();
      *uint64_t v29 = 0;
      uint64_t v30 = (unsigned char *)(v3
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable);
      OUTLINED_FUNCTION_11_0();
      *uint64_t v30 = 0;
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_10:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v31 = OUTLINED_FUNCTION_25_15();
        *(_OWORD *)(v31 + 16) = xmmword_1C3769620;
        LOBYTE(v71[0]) = (_BYTE)v2;
        uint64_t v32 = String.init<A>(reflecting:)();
        uint64_t v34 = v33;
        *(void *)(v31 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v31 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v31 + 32) = v32;
        *(void *)(v31 + 40) = v34;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        ConversationController.broadcastingState.setter();
        if (ConversationController.shouldDeferStartCameraAction.getter())
        {
          ConversationController.didDeferStartCameraAction.setter(1);
        }
        else
        {
          OUTLINED_FUNCTION_2();
          OUTLINED_FUNCTION_433();
          OUTLINED_FUNCTION_5_3();
          OUTLINED_FUNCTION_50_0();
          MEMORY[0x1F4188790](v49);
          OUTLINED_FUNCTION_2_1();
          v50();
          OUTLINED_FUNCTION_57_11();
          v51();
          OUTLINED_FUNCTION_200_1();
          OUTLINED_FUNCTION_139();
          v52();
          uint64_t v53 = v72;
          uint64_t v54 = v73;
          OUTLINED_FUNCTION_69_10(v71, v72);
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 32))(v2, v70, 1, v53, v54);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
        }
        if (v69)
        {
          uint64_t v55 = *(void *)(v6 + 8);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 480);
          swift_unknownObjectRetain();
          LOBYTE(v55) = v57(ObjectType, v55);
          swift_unknownObjectRelease();
          if (v55)
          {
            uint64_t v58 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
            OUTLINED_FUNCTION_2();
            outlined init with copy of Conversation(v58, (uint64_t)v71);
            uint64_t v59 = v73;
            OUTLINED_FUNCTION_69_10(v71, v72);
            id v60 = *(void (**)(void))(v59 + 216);
            swift_unknownObjectRetain();
            OUTLINED_FUNCTION_397();
            v60();
            swift_unknownObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
            uint64_t v61 = (void (**)(uint64_t, uint64_t))(v3
                                                         + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
            OUTLINED_FUNCTION_2();
            uint64_t v62 = *v61;
            if (*v61)
            {
              uint64_t v63 = *(void *)(v6 + 8);
              uint64_t v64 = OUTLINED_FUNCTION_4_18();
              _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v64);
              uint64_t v65 = swift_unknownObjectRetain();
              v62(v65, v63);
              OUTLINED_FUNCTION_124_5();
              swift_unknownObjectRelease();
            }
          }
        }
        uint64_t v66 = *(void *)(v6 + 8);
        uint64_t v67 = swift_getObjectType();
        uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 312);
        swift_unknownObjectRetain();
        v68(1, v67, v66);
        swift_unknownObjectRelease();
        goto LABEL_25;
      }
LABEL_27:
      swift_once();
      goto LABEL_10;
    }
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v35 = OUTLINED_FUNCTION_11_7();
    *(_OWORD *)(v35 + 16) = xmmword_1C37696D0;
    uint64_t v36 = *(void *)(v6 + 8);
    swift_getObjectType();
    uint64_t v37 = *(void (**)(uint64_t))(v36 + 328);
    swift_unknownObjectRetain();
    uint64_t v38 = OUTLINED_FUNCTION_462();
    v37(v38);
    OUTLINED_FUNCTION_304_1();
    LOBYTE(v71[0]) = v36 & 1;
    uint64_t v39 = String.init<A>(reflecting:)();
    uint64_t v41 = v40;
    uint64_t v42 = MEMORY[0x1E4FBB1A0];
    *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v43 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v35 + 64) = v43;
    *(void *)(v35 + 32) = v39;
    *(void *)(v35 + 40) = v41;
    LOBYTE(v71[0]) = objc_msgSend(self, sel_allowsScreenSharingWithVideo);
    uint64_t v44 = String.init<A>(reflecting:)();
    *(void *)(v35 + 96) = v42;
    *(void *)(v35 + 104) = v43;
    *(void *)(v35 + 72) = v44;
    *(void *)(v35 + 80) = v45;
    OUTLINED_FUNCTION_401();
    swift_bridgeObjectRelease();
    id v46 = (void (**)(uint64_t))(v3
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
    OUTLINED_FUNCTION_2();
    uint64_t v47 = *v46;
    if (*v46)
    {
      uint64_t v48 = OUTLINED_FUNCTION_101_7();
      v47(v48);
      OUTLINED_FUNCTION_124_5();
    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_118_5();
  }
LABEL_25:
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.allowsVideoCroppedByAspectRatio.getter()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter);
}

uint64_t ConversationController.isCameraBlurEnabled.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_2_1();
  v3();
  OUTLINED_FUNCTION_57_11();
  v4();
  OUTLINED_FUNCTION_4_1();
  v5();
  OUTLINED_FUNCTION_67_12(v9);
  uint64_t v6 = OUTLINED_FUNCTION_92_0();
  LOBYTE(v1) = v7(v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v1 & 1;
}

Swift::Void __swiftcall ConversationController.update(presentationContexts:forceUpdate:)(Swift::OpaquePointer presentationContexts, Swift::Bool forceUpdate)
{
  OUTLINED_FUNCTION_31();
  char v4 = v3;
  uint64_t v6 = v5;
  id v7 = v2;
  OUTLINED_FUNCTION_8_11();
  uint64_t v8 = swift_bridgeObjectRetain();
  specialized _ArrayProtocol.filter(_:)(v8, (char *)v2);
  uint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRelease();
  if (v10 || (v4 & 1) != 0)
  {
    ConversationController.lookupActiveConversation()();
    if (v24)
    {
      uint64_t v11 = OUTLINED_FUNCTION_152_3();
      MEMORY[0x1F4188790](v11);
      v21[2] = v25;
      v21[3] = v2;
      unint64_t v12 = specialized Sequence.compactMap<A>(_:)((void *(*)(uint64_t *__return_ptr, _OWORD *))partial apply for closure #2 in ConversationController.update(presentationContexts:forceUpdate:), (uint64_t)v21, v6);
      unint64_t v13 = v12;
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_6;
        }
      }
      else if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v14 = OUTLINED_FUNCTION_25_15();
        *(_OWORD *)(v14 + 16) = xmmword_1C3769620;
        *(void *)(v14 + 56) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [TUConversationParticipantPresentationContext]);
        *(void *)(v14 + 64) = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [TUConversationParticipantPresentationContext] and conformance [A]);
        *(void *)(v14 + 32) = v13;
        swift_bridgeObjectRetain();
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_95_7();
        swift_bridgeObjectRelease();
        uint64_t v15 = (uint64_t)v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
        OUTLINED_FUNCTION_2();
        outlined init with copy of Conversation(v15, (uint64_t)v23);
        __swift_project_boxed_opaque_existential_1(v23, v24);
        OUTLINED_FUNCTION_9_85(v25, v25[3]);
        v22[1] = v22;
        OUTLINED_FUNCTION_5_3();
        MEMORY[0x1F4188790](v16);
        OUTLINED_FUNCTION_118();
        OUTLINED_FUNCTION_15_77();
        v17();
        OUTLINED_FUNCTION_97_7();
        v18();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_139();
        v19();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      goto LABEL_13;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v23, &demangling cache variable for type metadata for Conversation?);
  }
LABEL_13:
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationController.toggleCameraBlur()()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  char v3 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v4();
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = OUTLINED_FUNCTION_1_18();
  v6(v5);
  if (v3)
  {
    id v7 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_2();
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_50_0();
    MEMORY[0x1F4188790](v8);
    OUTLINED_FUNCTION_2_1();
    v9();
    OUTLINED_FUNCTION_57_11();
    v10();
    OUTLINED_FUNCTION_3_8();
    v11();
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_50_0();
    MEMORY[0x1F4188790](v12);
    OUTLINED_FUNCTION_2_1();
    v13();
    OUTLINED_FUNCTION_57_11();
    v14();
    OUTLINED_FUNCTION_1_19();
    v15();
    OUTLINED_FUNCTION_143_5();
    uint64_t v16 = OUTLINED_FUNCTION_1_11();
    v17(v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
    BOOL v18 = OUTLINED_FUNCTION_75_9();
    v19(v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ConversationController.toggleCinematicFraming()()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  char v3 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v4();
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = OUTLINED_FUNCTION_1_18();
  v6(v5);
  if (v3)
  {
    id v7 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_2();
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_50_0();
    MEMORY[0x1F4188790](v8);
    OUTLINED_FUNCTION_2_1();
    v9();
    OUTLINED_FUNCTION_57_11();
    v10();
    OUTLINED_FUNCTION_3_8();
    v11();
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_50_0();
    MEMORY[0x1F4188790](v12);
    OUTLINED_FUNCTION_2_1();
    v13();
    OUTLINED_FUNCTION_57_11();
    v14();
    OUTLINED_FUNCTION_1_19();
    v15();
    OUTLINED_FUNCTION_143_5();
    uint64_t v16 = OUTLINED_FUNCTION_1_11();
    v17(v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
    BOOL v18 = OUTLINED_FUNCTION_75_9();
    v19(v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    OUTLINED_FUNCTION_15_0();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ConversationController.stopLocalVideoForMiniWindow()()
{
  id v1 = objc_msgSend(self, sel_sharedInstance);
  if (v1)
  {
    uint64_t v2 = v1;
    unsigned __int8 v3 = objc_msgSend(v1, sel_isGreenTea);

    char v4 = (unsigned __int8 *)(v0
                           + OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable);
    OUTLINED_FUNCTION_11_0();
    *char v4 = v3;
    ConversationController.stopLocalVideo()();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ConversationController.openMessagesConversation()()
{
}

Swift::Void __swiftcall ConversationController.effectsEnabledForLocalParticipant(with:)(Swift::Bool with)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_11_0();
  *(unsigned char *)(v3 + *(int *)(type metadata accessor for Participant(0) + 40)) = with;
}

Swift::Void __swiftcall ConversationController.updateVideoStateForExternalFactors(isShowingInMiniWindow:)(Swift::Bool isShowingInMiniWindow)
{
  BOOL v3 = 1;
  if ((ConversationController.isCarPlayConnected.getter() & 1) == 0 && !isShowingInMiniWindow)
  {
    ConversationController.cameraStartPolicy.getter();
    BOOL v3 = v4 == 0;
  }
  if (((ConversationController.isCarPlayConnected.getter() & 1) != 0
     || (uint64_t v5 = (unsigned char *)(v1
                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable),
         OUTLINED_FUNCTION_2(),
         (*v5 & 1) == 0))
    && ((ConversationController.isLocallySharingScreen.getter(), (v6 & 1) != 0)
     || (id v7 = (unsigned char *)(v1
                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable),
         OUTLINED_FUNCTION_2(),
         (*v7 & 1) == 0))
    && (isShowingInMiniWindow
     || (uint64_t v8 = (unsigned char *)(v1
                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable),
         OUTLINED_FUNCTION_2(),
         *v8 != 1)))
  {
    if (!v3) {
      return;
    }
  }
  else if (!v3)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C376BA10;
    char v10 = ConversationController.isCarPlayConnected.getter();
    uint64_t v11 = MEMORY[0x1E4FBB3C8];
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB390];
    *(void *)(v9 + 64) = v11;
    *(unsigned char *)(v9 + 32) = v10 & 1;
    ConversationController.isLocallySharingScreen.getter();
    OUTLINED_FUNCTION_261_1(v12);
    OUTLINED_FUNCTION_95_7();
    swift_bridgeObjectRelease();
    ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
    return;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C376BA10;
  char v14 = ConversationController.isCarPlayConnected.getter();
  uint64_t v15 = MEMORY[0x1E4FBB3C8];
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB390];
  *(void *)(v13 + 64) = v15;
  *(unsigned char *)(v13 + 32) = v14 & 1;
  ConversationController.isLocallySharingScreen.getter();
  OUTLINED_FUNCTION_261_1(v16);
  OUTLINED_FUNCTION_95_7();
  swift_bridgeObjectRelease();
  ConversationController.stopLocalVideo()();
}

BOOL ConversationController.conversationHasActiveRemoteParticipants.getter()
{
  ConversationController.lookupActiveConversation()();
  if (v13)
  {
    OUTLINED_FUNCTION_309_1(v0, v1, v2, v3, v4, v5, v6, v7, v11, v12, v13, v14, v15[0]);
    uint64_t v8 = v15[4];
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    OUTLINED_FUNCTION_436();
    specialized Set.count.getter();
    OUTLINED_FUNCTION_8_11();
    swift_bridgeObjectRelease();
    BOOL v9 = v8 > 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v11, &demangling cache variable for type metadata for Conversation?);
    return 0;
  }
  return v9;
}

uint64_t ConversationController.shouldDeferStartCameraAction.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults + 8);
  uint64_t ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 624))(ObjectType, v1) & 1) == 0) {
    return 0;
  }
  id v3 = objc_msgSend(self, sel_currentDevice);
  id v4 = objc_msgSend(v3, sel_userInterfaceIdiom);

  if (v4 != (id)1) {
    return 0;
  }
  id v5 = objc_msgSend(self, sel_systemPreferredCamera);
  if (v5)
  {

    return 0;
  }
  return 1;
}

uint64_t ConversationController.didDeferStartCameraAction.setter(char a1)
{
  return ConversationController.didDeferStartCameraAction.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction, (uint64_t (*)(uint64_t))ConversationController.didDeferStartCameraAction.didset);
}

uint64_t ConversationController.captionsRecognizerShouldBeRunning.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning);
  OUTLINED_FUNCTION_2();
  return *v1;
}

void ConversationController.captionsRecognizerShouldBeRunning.setter()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  char v45 = v4;
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_118();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2_3();
  uint64_t v44 = v8;
  uint64_t v46 = OUTLINED_FUNCTION_128_5();
  OUTLINED_FUNCTION_5_3();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_36();
  uint64_t v14 = v12 - v13;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_42();
  uint64_t v47 = v16;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_62();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v18();
  char v19 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_50_1();
  v20();
  if (v19)
  {
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
    {
      uint64_t v21 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
      OUTLINED_FUNCTION_2();
      uint64_t v22 = *v21;
      uint64_t v23 = *(void *)(*v21 + 16);
      if (v23)
      {
        uint64_t v43 = v3;
        OUTLINED_FUNCTION_22_0();
        uint64_t v25 = v22 + v24;
        uint64_t v26 = *(void *)(v10 + 72);
        swift_bridgeObjectRetain_n();
        do
        {
          uint64_t v27 = OUTLINED_FUNCTION_87_1();
          _s15ConversationKit11ParticipantVWOcTm_19(v27, v28);
          _s15ConversationKit11ParticipantVWOcTm_19(v14, v2);
          OUTLINED_FUNCTION_273_1();
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
            uint64_t v30 = (const void *)(v2 + *(int *)(v29 + 48));
            OUTLINED_FUNCTION_8_2((uint64_t *)(v2 + *(int *)(v29 + 64)));
            memcpy(v48, v30, 0x150uLL);
            type metadata accessor for Date();
            OUTLINED_FUNCTION_0();
            OUTLINED_FUNCTION_26_2();
            v31();
            uint64_t v32 = v48[39];
            outlined copy of Participant.CaptionInfo?(v48[39]);
            outlined destroy of Participant.MediaInfo((uint64_t)v48);
            if (v32)
            {
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v33 = v44;
              _s15ConversationKit11ParticipantVWObTm_6(v14, v44);
              char v34 = v45;
              uint64_t v3 = v43;
              goto LABEL_12;
            }
          }
          else
          {
            _s15ConversationKit11ParticipantVWOhTm_13(v2, (void (*)(void))type metadata accessor for Participant.State);
          }
          _s15ConversationKit11ParticipantVWOhTm_13(v14, (void (*)(void))type metadata accessor for Participant);
          v25 += v26;
          --v23;
        }
        while (v23);
        swift_bridgeObjectRelease();
        char v34 = v45;
        uint64_t v3 = v43;
        uint64_t v33 = v44;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = v44;
        char v34 = v45;
      }
LABEL_12:
      uint64_t v35 = OUTLINED_FUNCTION_430();
      __swift_storeEnumTagSinglePayload(v35, v36, v37, v46);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_33_0(v33, 1, v46);
      if (v38)
      {
        outlined destroy of SystemUpdateNotice?(v33, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        uint64_t v39 = OUTLINED_FUNCTION_200_1();
        _s15ConversationKit11ParticipantVWObTm_6(v39, v40);
        uint64_t v41 = (unsigned char *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning);
        OUTLINED_FUNCTION_11_0();
        if (*v41 == (v34 & 1))
        {
          _s15ConversationKit11ParticipantVWOhTm_13(v47, (void (*)(void))type metadata accessor for Participant);
        }
        else
        {
          if (Participant.captionsProvider.getter())
          {
            OUTLINED_FUNCTION_238_0();
            swift_getObjectType();
            OUTLINED_FUNCTION_332_0();
            v42();
            swift_unknownObjectRelease();
          }
          _s15ConversationKit11ParticipantVWOhTm_13(v47, (void (*)(void))type metadata accessor for Participant);
          *uint64_t v41 = v34 & 1;
        }
      }
    }
    OUTLINED_FUNCTION_28();
  }
  else
  {
    __break(1u);
  }
}

uint64_t ConversationController.isRemoteParticipantEligibleForVideoMessaging.getter()
{
  uint64_t v1 = (uint64_t (**)(uint64_t))(v0
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock);
  OUTLINED_FUNCTION_2();
  uint64_t v2 = *v1;
  if (*v1)
  {
    uint64_t v3 = swift_retain();
    char v4 = v2(v3);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v2);
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

id ConversationController.momentsController.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_sharedInstance);
    objc_msgSend(v4, sel_addDelegate_, v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t ConversationController.addScreenSharingType(_:)()
{
  ConversationController.lookupActiveConversation()();
  if (v11)
  {
    OUTLINED_FUNCTION_398(v0, v1, v2, v3);
    uint64_t v4 = OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_311_1(v4, v5, v6, v7);
    OUTLINED_FUNCTION_399(v10, v11);
    OUTLINED_FUNCTION_97_7();
    v8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    return OUTLINED_FUNCTION_31_26();
  }
}

void ConversationController.resetAssociatedDateForInactiveParticipant(with:)()
{
  OUTLINED_FUNCTION_31();
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_5_3();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_15();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = OUTLINED_FUNCTION_185_1();
  type metadata accessor for Participant.State(v7);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_10_5();
  uint64_t v46 = v9;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_8_4();
  uint64_t v48 = v11;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_482(v13, v14, v15, v16, v17, v18, v19, v20, v43);
  uint64_t v21 = (uint64_t *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v22 = (uint64_t)v21;
  uint64_t v23 = *(void *)(*v21 + 16);
  if (v23)
  {
    uint64_t v45 = v2;
    uint64_t v44 = v1;
    unint64_t v24 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v25 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    unint64_t v26 = 0;
    while ((static UUID.== infix(_:_:)() & 1) == 0)
    {
      ++v26;
      v24 += v25;
      if (v23 == v26)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    if (v26 >= *(void *)(*v21 + 16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v0 = v21;
      uint64_t v23 = v47;
      _s15ConversationKit11ParticipantVWOcTm_19(*v21 + v24, v47);
      OUTLINED_FUNCTION_318_0();
      _s15ConversationKit11ParticipantVWOcTm_19(v27, v28);
      uint64_t v22 = v48;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
          goto LABEL_9;
        case 4u:
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v30 = v46 + *(int *)(v29 + 48);
          OUTLINED_FUNCTION_8_2((uint64_t *)(v46 + *(int *)(v29 + 64)));
          outlined destroy of Participant.MediaInfo(v30);
LABEL_9:
          type metadata accessor for Date();
          OUTLINED_FUNCTION_0();
          uint64_t v31 = OUTLINED_FUNCTION_334_0();
          v32(v31);
          goto LABEL_10;
        case 6u:
LABEL_10:
          uint64_t v33 = OUTLINED_FUNCTION_48_3();
          _s15ConversationKit11ParticipantVWOcTm_19(v33, v34);
          break;
        default:
          Date.init()();
          OUTLINED_FUNCTION_191_3();
          swift_storeEnumTagMultiPayload();
          type metadata accessor for Date();
          OUTLINED_FUNCTION_0();
          uint64_t v35 = OUTLINED_FUNCTION_334_0();
          v36(v35);
          break;
      }
      static Participant.State.== infix(_:_:)();
      if (v37) {
        goto LABEL_18;
      }
      if (v26 < *(void *)(*v21 + 16))
      {
        _s15ConversationKit11ParticipantVWOcTm_19(*v21 + v24, v45);
        OUTLINED_FUNCTION_6_1();
        uint64_t v38 = *v21;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v21 = v38;
        if (isUniquelyReferenced_nonNull_native) {
          goto LABEL_15;
        }
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_22:
    uint64_t v38 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *uint64_t v0 = v38;
LABEL_15:
    if (v26 >= *(void *)(v38 + 16))
    {
      __break(1u);
    }
    else
    {
      outlined assign with copy of Participant.State(v22, v38 + v24);
      uint64_t v40 = *v0;
      swift_endAccess();
      if (v26 < *(void *)(v40 + 16))
      {
        _s15ConversationKit11ParticipantVWOcTm_19(v40 + v24, v44);
        ConversationController.postParticipantStateChangeCallbacks(for:updatedFrom:)(v44, v45);
        _s15ConversationKit11ParticipantVWOhTm_13(v44, (void (*)(void))type metadata accessor for Participant);
        uint64_t v41 = OUTLINED_FUNCTION_74();
        _s15ConversationKit11ParticipantVWOhTm_13(v41, v42);
LABEL_18:
        _s15ConversationKit11ParticipantVWOhTm_13(v22, (void (*)(void))type metadata accessor for Participant.State);
        _s15ConversationKit11ParticipantVWOhTm_13(v23, (void (*)(void))type metadata accessor for Participant.State);
        goto LABEL_19;
      }
    }
    __break(1u);
    JUMPOUT(0x1C36173A8);
  }
LABEL_19:
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationController.toggleReactionEffectGesture()()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_2_1();
  v3();
  OUTLINED_FUNCTION_57_11();
  v4();
  OUTLINED_FUNCTION_3_8();
  v5();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_1();
  v7();
  OUTLINED_FUNCTION_57_11();
  v8();
  OUTLINED_FUNCTION_1_19();
  v9();
  OUTLINED_FUNCTION_109_5(v14);
  uint64_t v10 = OUTLINED_FUNCTION_1_11();
  v11(v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  BOOL v12 = OUTLINED_FUNCTION_75_9();
  v13(v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  OUTLINED_FUNCTION_15_0();
}

Swift::Void __swiftcall ConversationController.toggleStudioLight()()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_2_1();
  v3();
  OUTLINED_FUNCTION_57_11();
  v4();
  OUTLINED_FUNCTION_3_8();
  v5();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_1();
  v7();
  OUTLINED_FUNCTION_57_11();
  v8();
  OUTLINED_FUNCTION_1_19();
  v9();
  OUTLINED_FUNCTION_143_5();
  uint64_t v10 = OUTLINED_FUNCTION_1_11();
  v11(v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  BOOL v12 = OUTLINED_FUNCTION_75_9();
  v13(v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  OUTLINED_FUNCTION_15_0();
}

Swift::Void __swiftcall ConversationController.startRecordingLocalVideo()()
{
  OUTLINED_FUNCTION_49_11();
  if (!v0)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_317_0();
    os_log(_:dso:log:type:_:)();
    return;
  }
  ConversationController.lookupActiveConversation()();
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    if (OUTLINED_FUNCTION_237_0())
    {
      id v1 = v11;
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      OUTLINED_FUNCTION_50();
      if ((*(uint64_t (**)(void))(v2 + 568))())
      {
        id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADC18]), sel_initWithConversation_, v11);
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_118_5();
        id v4 = ConversationController.momentsController.getter();
        uint64_t v5 = OUTLINED_FUNCTION_20();
        swift_unknownObjectWeakInit();
        uint64_t v9 = partial apply for closure #1 in ConversationController.startRecordingLocalVideo();
        uint64_t v10 = v5;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed String?, @guaranteed Error?) -> ();
        uint64_t v8 = &block_descriptor_10_2;
        uint64_t v6 = _Block_copy(aBlock);
        swift_release();
        objc_msgSend(v4, sel_startRequestWithMediaType_forProvider_requesteeID_completion_, 2, v3, 0, v6);
        _Block_release(v6);

        return;
      }
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)aBlock, &demangling cache variable for type metadata for Conversation?);
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_31_26();
}

Swift::Void __swiftcall ConversationController.stopRecordingLocalVideo()()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID);
  OUTLINED_FUNCTION_11_0();
  uint64_t v2 = (void *)v1[1];
  if (v2)
  {
    uint64_t v3 = *v1;
    swift_bridgeObjectRetain();
    v4._countAndFlagsBits = v3;
    v4._object = v2;
    ConversationController.endRequest(for:)(v4);
    swift_bridgeObjectRelease();
    *id v1 = 0;
    v1[1] = 0;
    swift_bridgeObjectRelease();
    uint64_t v5 = (void (**)(void))(v0
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo);
    OUTLINED_FUNCTION_2();
    uint64_t v6 = *v5;
    if (*v5)
    {
      OUTLINED_FUNCTION_101_7();
      v6(0);
      OUTLINED_FUNCTION_186_4();
    }
  }
}

void ConversationController.captureMoment(for:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_80_7();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = OUTLINED_FUNCTION_185_1();
  uint64_t v8 = type metadata accessor for Participant(v7);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_49_11();
  if (v10)
  {
    ConversationController.participant(with:)();
    OUTLINED_FUNCTION_33_0(v2, 1, v8);
    if (v10)
    {
      outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      uint64_t v12 = OUTLINED_FUNCTION_34_30();
      _s15ConversationKit11ParticipantVWObTm_6(v12, v13);
      uint64_t v14 = (void *)(v0 + *(int *)(v8 + 28));
      if (*v14)
      {
        uint64_t v15 = v14[4];
        if (v15)
        {
          uint64_t v16 = v14[3];
          swift_bridgeObjectRetain();
          ConversationController.lookupActiveConversation()();
          if (v39)
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
            if (swift_dynamicCast())
            {
              uint64_t v35 = v16;
              char v37 = v42;
              id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADC18]), sel_initWithConversation_, v42);
              if (one-time initialization token for conversationKit != -1) {
                swift_once();
              }
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
              uint64_t v17 = OUTLINED_FUNCTION_25_15();
              *(_OWORD *)(v17 + 16) = xmmword_1C3769620;
              _s15ConversationKit11ParticipantVWOcTm_19(v0, v3);
              __swift_storeEnumTagSinglePayload(v3, 0, 1, v8);
              uint64_t v18 = specialized >> prefix<A>(_:)();
              uint64_t v20 = v19;
              outlined destroy of SystemUpdateNotice?(v3, &demangling cache variable for type metadata for Participant?);
              *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
              *(void *)(v17 + 64) = lazy protocol witness table accessor for type String and conformance String();
              *(void *)(v17 + 32) = v18;
              *(void *)(v17 + 40) = v20;
              static os_log_type_t.default.getter();
              OUTLINED_FUNCTION_315_0();
              os_log(_:dso:log:type:_:)();
              swift_bridgeObjectRelease();
              id v21 = ConversationController.momentsController.getter();
              uint64_t v22 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
              OUTLINED_FUNCTION_2();
              uint64_t v23 = *(void *)(v22 + 8);
              swift_getObjectType();
              unint64_t v24 = *(uint64_t (**)(uint64_t))(v23 + 112);
              swift_unknownObjectRetain();
              uint64_t v25 = OUTLINED_FUNCTION_210_2();
              LOBYTE(v18) = v24(v25);
              swift_unknownObjectRelease();
              unint64_t v26 = 0;
              if (v18) {
                unint64_t v26 = (void *)MEMORY[0x1C87730B0](v35, v15);
              }
              swift_bridgeObjectRelease();
              uint64_t v27 = OUTLINED_FUNCTION_20();
              swift_unknownObjectWeakInit();
              uint64_t v40 = partial apply for closure #1 in ConversationController.captureMoment(for:);
              uint64_t v41 = v27;
              v38[0] = MEMORY[0x1E4F143A8];
              v38[1] = 1107296256;
              v38[2] = thunk for @escaping @callee_guaranteed (@guaranteed String?, @guaranteed Error?) -> ();
              uint64_t v39 = &block_descriptor_14_0;
              uint64_t v28 = _Block_copy(v38);
              swift_release();
              objc_msgSend(v21, sel_startRequestWithMediaType_forProvider_requesteeID_completion_, 3, v36, v26, v28);
              _Block_release(v28);

LABEL_29:
              _s15ConversationKit11ParticipantVWOhTm_13(v0, (void (*)(void))type metadata accessor for Participant);
LABEL_30:
              OUTLINED_FUNCTION_28();
              return;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            outlined destroy of SystemUpdateNotice?((uint64_t)v38, &demangling cache variable for type metadata for Conversation?);
          }
          if (one-time initialization token for conversationKit != -1) {
            swift_once();
          }
          static os_log_type_t.error.getter();
          OUTLINED_FUNCTION_118_5();
          goto LABEL_29;
        }
      }
      _s15ConversationKit11ParticipantVWOhTm_13(v0, (void (*)(void))type metadata accessor for Participant);
    }
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v29 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v29 + 16) = xmmword_1C3769620;
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v31 = OUTLINED_FUNCTION_8(v30);
    MEMORY[0x1F4188790](v31);
    uint64_t v32 = OUTLINED_FUNCTION_46_19();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_266_1();
    OUTLINED_FUNCTION_124();
    v33();
    uint64_t v34 = OUTLINED_FUNCTION_86_11();
    OUTLINED_FUNCTION_314_1();
    *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v29 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v29 + 32) = v34;
    *(void *)(v29 + 40) = v32;
    OUTLINED_FUNCTION_94_6();
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_28();
  os_log(_:dso:log:type:_:)();
}

Swift::Void __swiftcall ConversationController.addContactToCurrentConversation(_:)(CNContact a1)
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = v1;
  ConversationController.lookupActiveConversation()();
  if (v11[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    if (OUTLINED_FUNCTION_165_3())
    {
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_433();
      OUTLINED_FUNCTION_5_3();
      OUTLINED_FUNCTION_50_0();
      MEMORY[0x1F4188790](v3);
      OUTLINED_FUNCTION_2_1();
      v4();
      OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_319_0();
      uint64_t v6 = (void *)v5();
      OUTLINED_FUNCTION_50_1();
      v7();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      int64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C3769830;
      *(void *)(inited + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADB80]), sel_initWithContact_, v2);
      specialized Array._endMutation()();
      if ((unint64_t)inited >> 62)
      {
        if (inited < 0) {
          uint64_t v9 = inited;
        }
        else {
          uint64_t v9 = inited & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        _CocoaArrayWrapper.endIndex.getter();
        OUTLINED_FUNCTION_5_2();
      }
      else
      {
        uint64_t v9 = *(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v9) {
        specialized Set.init(_nonEmptyArrayLiteral:)(inited);
      }
      else {
        swift_bridgeObjectRelease();
      }
      OUTLINED_FUNCTION_1_132();
      lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
      OUTLINED_FUNCTION_248();
      Set._bridgeToObjectiveC()();
      OUTLINED_FUNCTION_5_2();
      objc_msgSend(v6, sel_addRemoteMembers_toConversation_, &lazy cache variable for type metadata for TUConversationMember, v10);

      goto LABEL_13;
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for Conversation?);
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_31_26();
LABEL_13:
  OUTLINED_FUNCTION_15_0();
}

void ConversationController.resetRecordingVideoMessage(completion:)()
{
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_4_15();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_62();
  if (v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] == 1)
  {
    type metadata accessor for TaskPriority();
    uint64_t v5 = OUTLINED_FUNCTION_454();
    OUTLINED_FUNCTION_25_1(v5, v6, v7, v8);
    uint64_t v9 = OUTLINED_FUNCTION_20();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v10 = OUTLINED_FUNCTION_30_15();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v10);
    uint64_t v11 = static MainActor.shared.getter();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = MEMORY[0x1E4FBCFD8];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v9;
    v12[5] = v2;
    v12[6] = v0;
    swift_release();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
LABEL_7:
    OUTLINED_FUNCTION_15_0();
    return;
  }
  if (one-time initialization token for videoMessaging != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static Logger.videoMessaging);
  uint64_t v22 = v1;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v23 = OUTLINED_FUNCTION_9_0();
    *uint64_t v17 = 136315138;
    uint64_t v18 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_22(&dword_1C2F90000, v15, v16, "Invalid request to stop video message recording for mode %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();

    goto LABEL_7;
  }

  OUTLINED_FUNCTION_15_0();
}

Swift::Void __swiftcall ConversationController.saveRecordedVideoMessage()()
{
}

Swift::Void __swiftcall ConversationController.discardRecordedVideoMessage()()
{
}

Swift::Void __swiftcall ConversationController.pauseRecordingVideoMessage()()
{
}

void ConversationController.discardRecordedVideoMessage()()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_3_74();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_63();
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
  {
    uint64_t v4 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v4);
    type metadata accessor for MainActor();
    id v5 = v0;
    uint64_t v6 = static MainActor.shared.getter();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_3_0();
    uint64_t v8 = MEMORY[0x1E4FBCFD8];
    v7[2] = v6;
    v7[3] = v8;
    v7[4] = v5;
    OUTLINED_FUNCTION_43();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
LABEL_7:
    OUTLINED_FUNCTION_28();
    return;
  }
  if (one-time initialization token for videoMessaging != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.videoMessaging);
  id v17 = v0;
  uint64_t v10 = (void *)Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.fault.getter();
  if (OUTLINED_FUNCTION_105(v11))
  {
    OUTLINED_FUNCTION_37();
    uint64_t v18 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_376(4.8149e-34);
    uint64_t v12 = String.init<A>(reflecting:)();
    uint64_t v14 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v18);
    OUTLINED_FUNCTION_290_1(v14);

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_297_1(&dword_1C2F90000);
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();

    goto LABEL_7;
  }

  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationController.startRecordingVideoMessage()()
{
}

void ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v13 = OUTLINED_FUNCTION_8(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_5_1();
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
  {
    uint64_t v14 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v14);
    type metadata accessor for MainActor();
    id v15 = v0;
    swift_retain();
    swift_retain();
    uint64_t v16 = static MainActor.shared.getter();
    id v17 = (void *)swift_allocObject();
    uint64_t v18 = MEMORY[0x1E4FBCFD8];
    v17[2] = v16;
    v17[3] = v18;
    v17[4] = v15;
    v17[5] = v11;
    v17[6] = v9;
    v17[7] = v7;
    v17[8] = v5;
    v17[9] = v3;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
LABEL_7:
    OUTLINED_FUNCTION_28();
    return;
  }
  if (one-time initialization token for videoMessaging != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.videoMessaging);
  id v27 = v0;
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v28 = OUTLINED_FUNCTION_9_0();
    *uint64_t v22 = 136315138;
    uint64_t v23 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_22(&dword_1C2F90000, v20, v21, "Invalid request to prep for video message recording for mode %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();

    goto LABEL_7;
  }

  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationController.stopRecordingVideoMessage()()
{
}

void ConversationController.saveRecordedVideoMessage()()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_3_74();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v3 = OUTLINED_FUNCTION_8(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_63();
  if (v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] == 1)
  {
    uint64_t v4 = type metadata accessor for TaskPriority();
    OUTLINED_FUNCTION_25_1(v1, v5, v6, v4);
    uint64_t v7 = OUTLINED_FUNCTION_20();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    OUTLINED_FUNCTION_8_11();
    swift_retain();
    static MainActor.shared.getter();
    OUTLINED_FUNCTION_198();
    uint64_t v8 = (void *)OUTLINED_FUNCTION_3_0();
    uint64_t v9 = MEMORY[0x1E4FBCFD8];
    v8[2] = v0;
    v8[3] = v9;
    v8[4] = v7;
    swift_release();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
LABEL_7:
    OUTLINED_FUNCTION_28();
    return;
  }
  if (one-time initialization token for videoMessaging != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.videoMessaging);
  uint64_t v18 = v0;
  uint64_t v11 = (void *)Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.fault.getter();
  if (OUTLINED_FUNCTION_105(v12))
  {
    OUTLINED_FUNCTION_37();
    uint64_t v19 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_376(4.8149e-34);
    uint64_t v13 = String.init<A>(reflecting:)();
    uint64_t v15 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v19);
    OUTLINED_FUNCTION_290_1(v15);

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_297_1(&dword_1C2F90000);
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();

    goto LABEL_7;
  }

  OUTLINED_FUNCTION_28();
}

uint64_t one-time initialization function for DidChangeIsWaitingOnFirstFrameNotification()
{
  uint64_t result = MEMORY[0x1C87730B0](0xD00000000000002ALL, 0x80000001C37BCC90);
  static ConversationController.DidChangeIsWaitingOnFirstFrameNotification = result;
  return result;
}

id static ConversationController.DidChangeIsWaitingOnFirstFrameNotification.getter()
{
  if (one-time initialization token for DidChangeIsWaitingOnFirstFrameNotification != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static ConversationController.DidChangeIsWaitingOnFirstFrameNotification;
  return v0;
}

unint64_t static ConversationController.DidChangeIsWaitingOnFirstFrameKey.getter()
{
  return 0xD000000000000021;
}

unint64_t static ConversationController.DidChangeIsWaitingOnFirstFrameUUIDKey.getter()
{
  return 0xD000000000000025;
}

BOOL ConversationController.ControlsMode.isScreenSharing.getter()
{
  return OUTLINED_FUNCTION_373();
}

BOOL static ConversationController.ControlsMode.== infix(_:_:)()
{
  return OUTLINED_FUNCTION_373();
}

BOOL ConversationController.ControlsMode.isAudioVideo.getter()
{
  return OUTLINED_FUNCTION_373();
}

uint64_t ConversationController.ControlsMode.debugDescription.getter(char a1)
{
  if (!a1) {
    return 0x6C6F72746E6F632ELL;
  }
  if (a1 == 1) {
    return 0x69566F696475612ELL;
  }
  return 0x536E65657263732ELL;
}

void ConversationController.ControlsMode.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int ConversationController.ControlsMode.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ConversationController.ControlsMode()
{
  return static ConversationController.ControlsMode.== infix(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ConversationController.ControlsMode()
{
  return ConversationController.ControlsMode.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ConversationController.ControlsMode(uint64_t a1)
{
  ConversationController.ControlsMode.hash(into:)(a1, *v1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConversationController.ControlsMode()
{
  return ConversationController.ControlsMode.debugDescription.getter(*v0);
}

uint64_t ConversationController.localParticipant.getter()
{
  return ConversationController.videoMessageConversationUUID.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant, (uint64_t)type metadata accessor for Participant, (uint64_t (*)(uint64_t))_s15ConversationKit11ParticipantVWOcTm_19);
}

uint64_t ConversationController.videoMessageConversationUUID.getter(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  OUTLINED_FUNCTION_2();
  uint64_t v4 = OUTLINED_FUNCTION_45_4();
  return a3(v4);
}

uint64_t ConversationController.otherInvitedParticipants.getter()
{
  return ParticipantsCollectionViewDataSource.onlineParticipants.getter();
}

uint64_t ConversationController.carPlayDisconnectRequiresLocalVideoEnable.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t ConversationController.screenSharingEndingRequiresLocalVideoEnable.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t ConversationController.showingInMiniWindowRequiresLocalVideoEnable.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable);
  OUTLINED_FUNCTION_2();
  return *v1;
}

void key path setter for ConversationController.momentsController : ConversationController(id *a1)
{
}

void ConversationController.momentsController.setter(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController) = a1;
}

void (*ConversationController.momentsController.modify(id *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = ConversationController.momentsController.getter();
  return ConversationController.momentsController.modify;
}

void ConversationController.momentsController.modify(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    ConversationController.momentsController.setter((uint64_t)v3);
  }
  else
  {
    ConversationController.momentsController.setter((uint64_t)v2);
  }
}

void ConversationController.remoteAndAssociatedParticipants.getter()
{
  OUTLINED_FUNCTION_31();
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_5_3();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16_0();
  uint64_t v5 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  OUTLINED_FUNCTION_2();
  uint64_t v6 = *(void *)(*(void *)v5 + 16);
  if (v6)
  {
    unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v8 = *(void *)v5 + v7;
    uint64_t v9 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = MEMORY[0x1E4FBC860];
    while (1)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v8, v1);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C3769620;
      _s15ConversationKit11ParticipantVWOcTm_19(v1, v11 + v7);
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      uint64_t v12 = v11;
      _s15ConversationKit11ParticipantVWOhTm_13(v1, (void (*)(void))type metadata accessor for Participant);
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = *(void *)(v10 + 16);
      uint64_t v15 = v14 + v13;
      if (__OFADD__(v14, v13)) {
        break;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v15 > *(void *)(v10 + 24) >> 1)
      {
        if (v14 <= v15) {
          uint64_t v17 = v14 + v13;
        }
        else {
          uint64_t v17 = v14;
        }
        uint64_t v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v17, 1, v10);
      }
      if (*(void *)(v12 + 16))
      {
        uint64_t v18 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v18 < v13) {
          goto LABEL_26;
        }
        unint64_t v19 = v10 + v7 + v18 * v9;
        if (v12 + v7 < v19 + v13 * v9 && v19 < v12 + v7 + v13 * v9) {
          goto LABEL_28;
        }
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v21 = *(void *)(v10 + 16);
          BOOL v22 = __OFADD__(v21, v13);
          uint64_t v23 = v21 + v13;
          if (v22) {
            goto LABEL_27;
          }
          *(void *)(v10 + 16) = v23;
        }
      }
      else if (v13)
      {
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      v8 += v9;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_1_7();
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
LABEL_23:
    OUTLINED_FUNCTION_28();
  }
}

uint64_t ConversationController.conversationState.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

uint64_t key path getter for ConversationController.conversationState : ConversationController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t ConversationController.conversationState.setter(uint64_t a1)
{
  return ConversationController.deviceOrientation.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState, ConversationController.conversationState.didset);
}

uint64_t ConversationController.conversationState.didset(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *v3;
  if (v5 != a1)
  {
    uint64_t v6 = (void (**)(uint64_t, uint64_t))(v1
                                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
    uint64_t result = swift_beginAccess();
    unint64_t v7 = *v6;
    if (*v6)
    {
      swift_retain();
      v7(a1, v5);
      return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v7);
    }
  }
  return result;
}

void (*ConversationController.conversationState.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_13_72((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_16_56();
  return ConversationController.conversationState.modify;
}

void ConversationController.conversationState.modify(uint64_t a1, uint64_t a2)
{
}

uint64_t ConversationController.conversationLetMeInRequestState.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

uint64_t key path getter for ConversationController.conversationLetMeInRequestState : ConversationController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t ConversationController.conversationLetMeInRequestState.setter(uint64_t a1)
{
  return ConversationController.deviceOrientation.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState, ConversationController.conversationLetMeInRequestState.didset);
}

uint64_t ConversationController.conversationLetMeInRequestState.didset(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Participant(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  unint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *v10;
  if (*v10 != a1)
  {
    if (a1 == 1 && v12 == 2)
    {
      uint64_t v15 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      swift_beginAccess();
      uint64_t v17 = _s15ConversationKit11ParticipantVWOcTm_19(v15, (uint64_t)v7);
      Participant.asRequestedApproval()(v17);
    }
    else
    {
      if (a1 != 2 || v12 != 3) {
        goto LABEL_14;
      }
      uint64_t v15 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      swift_beginAccess();
      uint64_t v16 = _s15ConversationKit11ParticipantVWOcTm_19(v15, (uint64_t)v7);
      Participant.asReceivedApproval()(v16);
    }
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
    swift_beginAccess();
    outlined assign with take of Participant((uint64_t)v9, v15);
    swift_endAccess();
LABEL_14:
    uint64_t v18 = (void (**)(uint64_t))(v2
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
    uint64_t result = swift_beginAccess();
    unint64_t v19 = *v18;
    if (*v18)
    {
      uint64_t v20 = *v10;
      swift_retain();
      v19(v20);
      return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v19);
    }
  }
  return result;
}

void (*ConversationController.conversationLetMeInRequestState.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_13_72((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_16_56();
  return ConversationController.conversationLetMeInRequestState.modify;
}

void ConversationController.conversationLetMeInRequestState.modify(uint64_t a1, uint64_t a2)
{
}

void ConversationController.conversationState.modify(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3 = *(void **)a1;
  a3(*(void *)(*(void *)a1 + 24));
  free(v3);
}

uint64_t ConversationController.ignoreLetMeInRequests.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for ConversationController.ignoreLetMeInRequests : ConversationController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t ConversationController.ignoreLetMeInRequests.setter(char a1)
{
  return ConversationController.didDeferStartCameraAction.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests, (uint64_t (*)(uint64_t))ConversationController.ignoreLetMeInRequests.didset);
}

uint64_t ConversationController.ignoreLetMeInRequests.didset(char a1)
{
  int v2 = a1 & 1;
  uint64_t v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests);
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *v3;
  if (v5 != v2)
  {
    uint64_t v6 = (void (**)(uint64_t))(v1
                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
    uint64_t result = swift_beginAccess();
    unint64_t v7 = *v6;
    if (*v6)
    {
      swift_retain();
      v7(v5);
      return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v7);
    }
  }
  return result;
}

void (*ConversationController.ignoreLetMeInRequests.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return ConversationController.ignoreLetMeInRequests.modify;
}

void ConversationController.ignoreLetMeInRequests.modify(uint64_t a1, uint64_t a2)
{
}

void ConversationController.shouldShowRTTUpgrade.getter()
{
  OUTLINED_FUNCTION_11_49();
  int v2 = self;
  if (objc_msgSend(v2, sel_isRTTSupported))
  {
    id v3 = objc_msgSend(v2, sel_sharedUtilityProvider);
    if (!v3)
    {
      __break(1u);
      return;
    }
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_currentPreferredTransportMethod);
  }
  uint64_t v5 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  uint64_t v6 = *(void *)(v5 + 8);
  swift_getObjectType();
  OUTLINED_FUNCTION_440();
  uint64_t v7 = OUTLINED_FUNCTION_419();
  v1(v7);
  OUTLINED_FUNCTION_304_1();
  if (v6 == 1)
  {
    uint64_t v8 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 152);
    swift_unknownObjectRetain();
    v10(ObjectType, v8);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_10_27();
}

uint64_t ConversationController.rejectedParticipantsCount.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

uint64_t key path getter for ConversationController.rejectedParticipantsCount : ConversationController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (void *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t ConversationController.rejectedParticipantsCount.setter(uint64_t a1)
{
  return ConversationController.deviceOrientation.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount, ConversationController.rejectedParticipantsCount.didset);
}

uint64_t ConversationController.deviceOrientation.setter(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = (uint64_t *)(v3 + *a2);
  OUTLINED_FUNCTION_11_0();
  uint64_t v7 = *v6;
  *uint64_t v6 = a1;
  return a3(v7);
}

uint64_t ConversationController.rejectedParticipantsCount.didset(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount);
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *v3;
  if (v5 != a1)
  {
    uint64_t v6 = (void (**)(uint64_t))(v1
                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange);
    uint64_t result = swift_beginAccess();
    uint64_t v7 = *v6;
    if (*v6)
    {
      swift_retain();
      v7(v5);
      return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v7);
    }
  }
  return result;
}

void (*ConversationController.rejectedParticipantsCount.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_13_72((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_16_56();
  return ConversationController.rejectedParticipantsCount.modify;
}

void ConversationController.rejectedParticipantsCount.modify(uint64_t a1, uint64_t a2)
{
}

uint64_t ConversationController.deviceOrientation.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

uint64_t key path getter for ConversationController.deviceOrientation : ConversationController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t ConversationController.deviceOrientation.didset(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
  uint64_t result = swift_beginAccess();
  if (*v3 != a1)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C37696D0;
    v25[0] = a1;
    type metadata accessor for CNKDeviceOrientation(0);
    uint64_t v6 = String.init<A>(reflecting:)();
    uint64_t v8 = v7;
    uint64_t v9 = MEMORY[0x1E4FBB1A0];
    *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v10 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v5 + 64) = v10;
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 40) = v8;
    v25[0] = *v3;
    uint64_t v11 = String.init<A>(reflecting:)();
    *(void *)(v5 + 96) = v9;
    *(void *)(v5 + 104) = v10;
    *(void *)(v5 + 72) = v11;
    *(void *)(v5 + 80) = v12;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    uint64_t v13 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    swift_beginAccess();
    if (*(char *)(v13 + 16) < 0) {
      ConversationController.broadcastingState.setter();
    }
    uint64_t v14 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    swift_beginAccess();
    uint64_t v15 = v14[3];
    uint64_t v16 = v14[4];
    uint64_t v17 = __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v18 = *(void *)(v15 - 8);
    __n128 v19 = MEMORY[0x1F4188790](v17);
    uint64_t v21 = (char *)&v25[-1] - v20;
    (*(void (**)(char *, __n128))(v18 + 16))((char *)&v25[-1] - v20, v19);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 32))(v25, v15, v16);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v15);
    uint64_t v22 = v26;
    uint64_t v23 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    (*(void (**)(void, uint64_t, uint64_t))(v23 + 48))(*v3, v22, v23);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  return result;
}

void (*ConversationController.deviceOrientation.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_13_72((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_16_56();
  return ConversationController.deviceOrientation.modify;
}

void ConversationController.deviceOrientation.modify(uint64_t a1, uint64_t a2)
{
}

uint64_t ConversationController.didDeferStartCameraAction.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for ConversationController.didDeferStartCameraAction : ConversationController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ConversationController.didDeferStartCameraAction.didset(char a1)
{
  int v2 = a1 & 1;
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction);
  swift_beginAccess();
  if (*v3 != v2)
  {
    if (*v3)
    {
      if (one-time initialization token for conversationController != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      __swift_project_value_buffer(v4, (uint64_t)static Logger.conversationController);
      uint64_t v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v5, v6)) {
        goto LABEL_12;
      }
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      uint64_t v8 = "Deferring start camera action until systemPreferredCamera is initialized";
    }
    else
    {
      if (one-time initialization token for conversationController != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      __swift_project_value_buffer(v9, (uint64_t)static Logger.conversationController);
      uint64_t v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v5, v6)) {
        goto LABEL_12;
      }
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      uint64_t v8 = "Start camera action no longer deferred for systemPreferredCamera initialization";
    }
    _os_log_impl(&dword_1C2F90000, v5, v6, v8, v7, 2u);
    MEMORY[0x1C87760E0](v7, -1, -1);
LABEL_12:
  }
}

void (*ConversationController.didDeferStartCameraAction.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return ConversationController.didDeferStartCameraAction.modify;
}

void ConversationController.didDeferStartCameraAction.modify(uint64_t a1, uint64_t a2)
{
}

void ConversationController.ignoreLetMeInRequests.modify(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3 = *(void **)a1;
  a3(*(unsigned __int8 *)(*(void *)a1 + 32));
  free(v3);
}

uint64_t ConversationController.isUsingIPadExternalCamera.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for ConversationController.isUsingIPadExternalCamera : ConversationController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t ConversationController.isUsingIPadExternalCamera.setter(char a1)
{
  return ConversationController.didDeferStartCameraAction.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera, (uint64_t (*)(uint64_t))ConversationController.isUsingIPadExternalCamera.didset);
}

void ConversationController.isUsingIPadExternalCamera.didset(char a1)
{
  int v2 = a1 & 1;
  uint64_t v3 = &v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera];
  swift_beginAccess();
  if (*v3 != v2)
  {
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)static Logger.conversationController);
    uint64_t v5 = v1;
    os_log_type_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 67109376;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v8 + 8) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl(&dword_1C2F90000, v6, v7, "isUsingIPadExternalCamera changed from %{BOOL}d to %{BOOL}d", (uint8_t *)v8, 0xEu);
      MEMORY[0x1C87760E0](v8, -1, -1);
    }
    else
    {

      os_log_type_t v6 = v5;
    }

    ConversationController.selectFrontLocalParticipantCamera()();
    swift_beginAccess();
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
  }
}

Swift::Void __swiftcall ConversationController.selectFrontLocalParticipantCamera()()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = v0;
  uint64_t v3 = (long long *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
  OUTLINED_FUNCTION_2();
  if ((char)v3[1] < 0)
  {
    os_log_type_t v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
    OUTLINED_FUNCTION_2();
    ConversationController.broadcastingState.setter();
    os_log_type_t v7 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_2();
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_50_0();
    MEMORY[0x1F4188790](v8);
    OUTLINED_FUNCTION_275_1(v9, v17);
    OUTLINED_FUNCTION_2_1();
    v10();
    OUTLINED_FUNCTION_57_11();
    v11();
    OUTLINED_FUNCTION_50_1();
    v12();
    uint64_t v13 = v19;
    uint64_t v14 = v20;
    __swift_project_boxed_opaque_existential_1(&v17, v19);
    uint64_t v15 = *v6;
    char v16 = ConversationController.isOneToOneModeEnabled.getter();
    (*(void (**)(void, uint64_t, BOOL, uint64_t, uint64_t))(v14 + 32))(0, v15, (v16 & 1) == 0, v13, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v4 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v4 + 16) = xmmword_1C3769620;
    char v5 = *((unsigned char *)v3 + 16);
    long long v17 = *v3;
    char v18 = v5;
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_46_6();
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v4 + 32) = v3;
    *(void *)(v4 + 40) = v1;
    OUTLINED_FUNCTION_402();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15_0();
}

void ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)()
{
  OUTLINED_FUNCTION_35_14();
  uint64_t v4 = v0;
  int v6 = v5;
  int v8 = v7;
  uint64_t v219 = v9;
  unint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for Participant.State(0);
  uint64_t v13 = OUTLINED_FUNCTION_8(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_2_3();
  uint64_t v227 = v14;
  uint64_t v228 = OUTLINED_FUNCTION_128_5();
  OUTLINED_FUNCTION_5_3();
  v226 = v15;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_287_1();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_54_2();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_16_6();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_147_5();
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = &v196[-v21];
  int v220 = v8;
  if ((v8 & 0x80) == 0)
  {
    uint64_t v24 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
    OUTLINED_FUNCTION_2();
    _s15ConversationKit11ParticipantVWOcTm_19(v24, v1);
    ConversationController.conversationIsAVLess.getter();
    long long v245 = 0u;
    long long v246 = 0u;
    long long v247 = 0u;
    memset(v248, 0, 26);
    long long v230 = 0uLL;
    *(void *)&long long v231 = 0;
    *((void *)&v231 + 1) = 1;
    bzero(&v232, 0xB1uLL);
    Participant.copresenceInfo.getter();
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?((uint64_t *)v241);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v230, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    _s15ConversationKit11ParticipantVWOhTm_13(v1, (void (*)(void))type metadata accessor for Participant);
    uint64_t v25 = OUTLINED_FUNCTION_278();
    _s15ConversationKit11ParticipantVWObTm_6(v25, v26);
    BOOL v27 = 0;
    uint64_t v28 = v3;
    goto LABEL_69;
  }
  LODWORD(v229) = v6;
  uint64_t v202 = v22;
  uint64_t v200 = v1;
  v222 = &v196[-v21];
  uint64_t v223 = v3;
  uint64_t v29 = (char *)(v11 >> 8);
  uint64_t v30 = &v4[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
  OUTLINED_FUNCTION_2();
  uint64_t v31 = *((void *)v30 + 4);
  OUTLINED_FUNCTION_433();
  v224 = v4;
  OUTLINED_FUNCTION_5_3();
  unint64_t v32 = v11;
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v33);
  OUTLINED_FUNCTION_2_1();
  v34();
  OUTLINED_FUNCTION_57_11();
  v35();
  OUTLINED_FUNCTION_10_6();
  v36();
  char v37 = v224;
  uint64_t v38 = (uint64_t)&v224[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  OUTLINED_FUNCTION_2();
  uint64_t v39 = OUTLINED_FUNCTION_465();
  _s15ConversationKit11ParticipantVWOcTm_19(v39, v40);
  Participant.videoInfo.getter();
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v2, (void (*)(void))type metadata accessor for Participant);
  outlined init with take of AspectRatio?((uint64_t)&v237, (uint64_t)v241, &demangling cache variable for type metadata for Participant.VideoInfo?);
  uint64_t v218 = v38;
  unint64_t v221 = v32;
  if (*(void *)&v241[0])
  {
    long long v230 = v241[0];
    long long v231 = v241[1];
    *(_OWORD *)v233 = v243;
    *(_OWORD *)&v233[16] = *(_OWORD *)v244;
    *(_OWORD *)&v233[25] = *(_OWORD *)&v244[9];
    unsigned __int8 v232 = v242;
    if (v242 == BYTE1(v32))
    {
      char v41 = 1;
    }
    else
    {
      if (one-time initialization token for conversationController != -1) {
        swift_once();
      }
      uint64_t v76 = type metadata accessor for Logger();
      __swift_project_value_buffer(v76, (uint64_t)static Logger.conversationController);
      uint64_t v2 = v37;
      uint64_t v77 = Logger.logObject.getter();
      os_log_type_t v78 = static os_log_type_t.default.getter();
      unsigned __int8 v79 = v29;
      if (OUTLINED_FUNCTION_12_4(v78))
      {
        uint64_t v80 = OUTLINED_FUNCTION_9_0();
        uint64_t v225 = OUTLINED_FUNCTION_83();
        *(void *)&long long v245 = v225;
        *(_DWORD *)uint64_t v80 = 136315650;
        LOBYTE(v240[0]) = v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
        uint64_t v81 = String.init<A>(reflecting:)();
        v240[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v81, v82, (uint64_t *)&v245);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v80 + 12) = 2080;
        LOBYTE(v240[0]) = (_BYTE)v29;
        uint64_t v83 = String.init<A>(reflecting:)();
        v240[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v83, v84, (uint64_t *)&v245);
        unsigned __int8 v79 = v29;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v80 + 22) = 2080;
        OUTLINED_FUNCTION_2();
        LOBYTE(v240[0]) = v232;
        uint64_t v85 = String.init<A>(reflecting:)();
        v240[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v85, v86, (uint64_t *)&v245);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        char v37 = v224;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v77, (os_log_type_t)v31, "[%s] Updating local participant videoInfo to use cameraPosition: %s (from: %s", (uint8_t *)v80, 0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
      }
      char v41 = 1;
      OUTLINED_FUNCTION_11_0();
      unsigned __int8 v232 = v79;
      if (static Platform.current.getter() != 3)
      {
        char v41 = 1;
        if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0)
        {
          HIBYTE(v230) = 1;
          char v41 = 0;
        }
      }
    }
    OUTLINED_FUNCTION_11_0();
    char v87 = BYTE8(v230);
    outlined init with copy of RecentCallProviding & RecentsControllable((uint64_t)v234, (uint64_t)&v245);
    if (v87)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v245);
    }
    else
    {
      LOBYTE(v2) = BYTE8(v246);
      OUTLINED_FUNCTION_250_2(&v245);
      uint64_t v88 = OUTLINED_FUNCTION_3_24();
      char v90 = v89(v88);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v245);
      v41 &= v90 ^ 1;
    }
    int v91 = v229;
    if (v231 == 1)
    {
      uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v93 = OUTLINED_FUNCTION_8(v92);
      MEMORY[0x1F4188790](v93);
      OUTLINED_FUNCTION_62();
      uint64_t v94 = &v37[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
      OUTLINED_FUNCTION_2();
      uint64_t v95 = *((void *)v94 + 1);
      swift_getObjectType();
      uint64_t v96 = *(void (**)(uint64_t))(v95 + 200);
      swift_unknownObjectRetain();
      uint64_t v97 = OUTLINED_FUNCTION_228_0();
      v96(v97);
      char v37 = v224;
      swift_unknownObjectRelease();
      type metadata accessor for UUID();
      uint64_t v98 = OUTLINED_FUNCTION_454();
      __swift_storeEnumTagSinglePayload(v98, 0, 1, v99);
      OUTLINED_FUNCTION_6_1();
      uint64_t v100 = OUTLINED_FUNCTION_189_2();
      outlined assign with take of Participant?(v100, v101, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      swift_endAccess();
      char v41 = 0;
    }
    uint64_t v102 = v223;
    char v103 = &unk_1C376A000;
    if (v91 == 2 || (int v104 = v91 & 1, v104 == BYTE1(v231)))
    {
      if (v41) {
        goto LABEL_31;
      }
    }
    else
    {
      if (one-time initialization token for conversationController != -1) {
        swift_once();
      }
      uint64_t v105 = type metadata accessor for Logger();
      __swift_project_value_buffer(v105, (uint64_t)static Logger.conversationController);
      v106 = v37;
      v107 = Logger.logObject.getter();
      os_log_type_t v108 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_105(v108))
      {
        uint64_t v109 = swift_slowAlloc();
        v240[0] = OUTLINED_FUNCTION_9_0();
        *(_DWORD *)uint64_t v109 = 136315394;
        LOBYTE(v239[0]) = v106[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
        uint64_t v110 = String.init<A>(reflecting:)();
        v239[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v110, v111, v240);
        uint64_t v102 = v223;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        char v37 = v224;
        swift_bridgeObjectRelease();
        *(_WORD *)(v109 + 12) = 1024;
        LODWORD(v239[0]) = v104;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_1C2F90000, v107, (os_log_type_t)v2, "[%s] Updating local participant videoInfo with isChangingExternalCameraUsageOnIPad: %{BOOL}d", (uint8_t *)v109, 0x12u);
        OUTLINED_FUNCTION_12_23();
        char v103 = (void *)&unk_1C376A000;
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();
      }
      else
      {
      }
      BYTE1(v231) = v104;
    }
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_5_3();
    MEMORY[0x1F4188790](v112);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_189_2();
    OUTLINED_FUNCTION_2_1();
    v113();
    ConversationController.scheduleResetVideoInfo(for:after:)();
    OUTLINED_FUNCTION_50_1();
    v114();
LABEL_31:
    uint64_t v115 = (uint64_t *)&v37[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
    OUTLINED_FUNCTION_2();
    uint64_t v116 = *v115;
    BOOL v117 = *v115 == *((void *)&v231 + 1);
    BOOL v203 = *v115 != *((void *)&v231 + 1);
    if (!v117) {
      *((void *)&v231 + 1) = v116;
    }
    char v118 = ConversationController.isCameraMixedWithScreen.getter();
    unint64_t v64 = 0x1EA345000uLL;
    if ((v118 & 1) != v233[40])
    {
      char v119 = v118;
      v120 = v103;
      if (one-time initialization token for conversationController != -1) {
        swift_once();
      }
      uint64_t v121 = type metadata accessor for Logger();
      __swift_project_value_buffer(v121, (uint64_t)static Logger.conversationController);
      v122 = v37;
      v123 = Logger.logObject.getter();
      os_log_type_t v124 = static os_log_type_t.default.getter();
      int v125 = v124;
      if (os_log_type_enabled(v123, v124))
      {
        uint64_t v126 = OUTLINED_FUNCTION_15_1();
        uint64_t v229 = OUTLINED_FUNCTION_14_3();
        v240[0] = v229;
        *(_DWORD *)uint64_t v126 = v120[385];
        LODWORD(v225) = v125;
        LOBYTE(v239[0]) = v122[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
        uint64_t v127 = String.init<A>(reflecting:)();
        v239[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v127, v128, v240);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v126 + 12) = 2080;
        LOBYTE(v239[0]) = ConversationController.isCameraMixedWithScreen.getter() & 1;
        uint64_t v129 = String.init<A>(reflecting:)();
        v239[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v129, v130, v240);
        char v37 = v224;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v123, (os_log_type_t)v225, "[%s] Updating local participant videoInfo with isMixedWithScreen: %s", (uint8_t *)v126, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        uint64_t v102 = v223;
        OUTLINED_FUNCTION_3();
      }
      else
      {
      }
      v233[40] = v119 & 1;
      BOOL v203 = 1;
    }
    if (ConversationController.isOneToOneModeEnabled.getter())
    {
      ConversationController.videoProviderForResizingLocal.getter(v240);
      v131 = &v37[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera];
      OUTLINED_FUNCTION_2();
      char v132 = *v131;
      uint64_t v133 = *v115;
      uint64_t v134 = OUTLINED_FUNCTION_273_1();
      _s15ConversationKit11ParticipantVWOcTm_19(v134, v135);
      Participant.aspectRatio.getter();
      _s15ConversationKit11ParticipantVWOhTm_13(v102, (void (*)(void))type metadata accessor for Participant);
      AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)(v240, 1, 1, v132, v133, (uint64_t)v239, (uint64_t)v238, 1.0, 1.0);
      outlined init with take of AspectRatio((uint64_t)&v233[7], (uint64_t)v249);
      if (!static AspectRatio.== infix(_:_:)((uint64_t)v238, (uint64_t)v249))
      {
        outlined init with take of AspectRatio((uint64_t)v238, (uint64_t)&v233[7]);
        BOOL v203 = 1;
      }
    }
    uint64_t v50 = v230;
    uint64_t v66 = BYTE8(v230);
    int v67 = BYTE9(v230);
    int v68 = BYTE10(v230);
    unsigned int v69 = BYTE11(v230);
    int v70 = BYTE12(v230);
    int v65 = BYTE13(v230);
    int v71 = BYTE14(v230);
    int v72 = HIBYTE(v230);
    unsigned int v73 = v231;
    int v74 = BYTE1(v231);
    uint64_t v52 = *((void *)&v231 + 1);
    unint64_t v75 = v232;
    uint64_t v58 = *(char **)&v233[7];
    uint64_t v59 = *(void *)&v233[15];
    uint64_t v60 = *(void *)&v233[23];
    uint64_t v61 = *(void *)&v233[31];
    int v63 = v233[39];
    int v62 = v233[40];
    goto LABEL_44;
  }
  __swift_project_boxed_opaque_existential_1(v234, v235);
  uint64_t v42 = OUTLINED_FUNCTION_48_1();
  uint64_t v225 = v43(v42);
  __swift_project_boxed_opaque_existential_1(v234, v235);
  uint64_t v44 = OUTLINED_FUNCTION_48_1();
  LODWORD(v229) = v45(v44);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Participant.VideoProviderType, ParticipantVideoProvider)>);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1C3769620;
  *(unsigned char *)(v46 + 32) = 2;
  uint64_t v47 = v235;
  v217 = v29;
  uint64_t v48 = v236;
  __swift_project_boxed_opaque_existential_1(v234, v235);
  *(void *)(v46 + 64) = v47;
  *(void *)(v46 + 72) = v48;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v46 + 40));
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_124();
  v49();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  lazy protocol witness table accessor for type Participant.VideoProviderType and conformance Participant.VideoProviderType();
  uint64_t v50 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v51 = (uint64_t *)&v37[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
  OUTLINED_FUNCTION_2();
  uint64_t v52 = *v51;
  ConversationController.videoProviderForResizingLocal.getter((uint64_t *)&v230);
  char v53 = ConversationController.isOneToOneModeEnabled.getter();
  uint64_t v54 = &v37[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera];
  OUTLINED_FUNCTION_2();
  char v55 = *v54;
  uint64_t v56 = *v51;
  uint64_t v57 = v223;
  _s15ConversationKit11ParticipantVWOcTm_19(v38, v223);
  Participant.aspectRatio.getter();
  _s15ConversationKit11ParticipantVWOhTm_13(v57, (void (*)(void))type metadata accessor for Participant);
  BOOL v203 = 1;
  AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)(&v230, v53 & 1, 1, v55, v56, (uint64_t)v239, (uint64_t)v249, 1.0, 1.0);
  uint64_t v58 = (char *)v249[0];
  uint64_t v59 = v249[1];
  uint64_t v60 = v249[2];
  uint64_t v61 = v249[3];
  LODWORD(v48) = v250;
  int v62 = ConversationController.isCameraMixedWithScreen.getter();
  int v63 = v48;
  unint64_t v64 = 0x1EA345000;
  int v65 = v229;
  uint64_t v66 = v225;
  int v67 = 0;
  int v68 = 0;
  unsigned int v69 = 0;
  int v70 = 0;
  int v71 = 0;
  int v72 = 0;
  unsigned int v73 = 0;
  int v74 = 0;
  unint64_t v75 = (unint64_t)v217;
LABEL_44:
  int v199 = v67;
  int v204 = v68;
  int v205 = v70;
  unsigned int v206 = v69;
  int v207 = v71;
  int v208 = v72;
  unint64_t v209 = v75;
  int v210 = v74;
  unsigned int v211 = v73;
  int v212 = v62;
  int v213 = v63;
  uint64_t v216 = v59;
  v217 = v58;
  uint64_t v225 = v66;
  LODWORD(v229) = v65;
  if (*(void *)(v64 + 2264) != -1) {
    swift_once();
  }
  uint64_t v214 = v61;
  uint64_t v215 = v60;
  uint64_t v136 = v52;
  uint64_t v137 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_98_0(v137, (uint64_t)static Logger.conversationController);
  outlined init with copy of RecentCallProviding & RecentsControllable((uint64_t)v234, (uint64_t)&v245);
  char v138 = v37;
  swift_bridgeObjectRetain_n();
  char v139 = v138;
  char v140 = Logger.logObject.getter();
  os_log_type_t v141 = static os_log_type_t.default.getter();
  int v142 = v141;
  BOOL v143 = os_log_type_enabled(v140, v141);
  uint64_t v201 = v52;
  if (v143)
  {
    uint64_t v144 = OUTLINED_FUNCTION_9_0();
    uint64_t v198 = OUTLINED_FUNCTION_83();
    v240[0] = v198;
    *(_DWORD *)uint64_t v144 = 136315650;
    int v197 = v142;
    LOBYTE(v230) = v139[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    uint64_t v145 = String.init<A>(reflecting:)();
    *(void *)&long long v230 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v145, v146, v240);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v144 + 12) = 2080;
    *(void *)&long long v230 = v50;
    BYTE8(v230) = v225 & 1;
    int v147 = v199;
    BYTE9(v230) = v199;
    BYTE10(v230) = v204;
    BYTE11(v230) = v206;
    BYTE12(v230) = v205;
    BYTE13(v230) = v229 & 1;
    BYTE14(v230) = v207;
    HIBYTE(v230) = v208;
    LOBYTE(v231) = v211;
    BYTE1(v231) = v210;
    *((void *)&v231 + 1) = v136;
    unsigned __int8 v232 = v209;
    *(void *)&v233[7] = v217;
    *(void *)&v233[15] = v216;
    *(void *)&v233[23] = v215;
    *(void *)&v233[31] = v214;
    v233[39] = v213;
    v233[40] = v212 & 1;
    swift_bridgeObjectRetain();
    uint64_t v148 = String.init<A>(reflecting:)();
    *(void *)&long long v230 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v148, v149, v240);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v150 = v50;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v144 + 22) = 2080;
    uint64_t v152 = *((void *)&v246 + 1);
    uint64_t v151 = v247;
    __swift_project_boxed_opaque_existential_1(&v245, *((uint64_t *)&v246 + 1));
    LOBYTE(v230) = (*(uint64_t (**)(uint64_t, uint64_t))(v151 + 24))(v152, v151) & 1;
    uint64_t v153 = String.init<A>(reflecting:)();
    *(void *)&long long v230 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v153, v154, v240);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v245);
    _os_log_impl(&dword_1C2F90000, v140, (os_log_type_t)v197, "[%s] Updating local participant to use videoInfo: %s, isPreviewRunning: %s", (uint8_t *)v144, 0x20u);
    OUTLINED_FUNCTION_328();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();

    unint64_t v11 = v221;
    uint64_t v155 = v200;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v245);
    unint64_t v11 = v221;
    uint64_t v150 = v50;
    uint64_t v155 = v200;
    int v147 = v199;
  }
  uint64_t v156 = v218;
  _s15ConversationKit11ParticipantVWOcTm_19(v218, v155);
  ConversationController.conversationIsAVLess.getter();
  if (v147) {
    uint64_t v157 = 256;
  }
  else {
    uint64_t v157 = 0;
  }
  unint64_t v158 = v157 & 0xFFFFFFFFFFFFFFFELL | v225 & 1;
  uint64_t v159 = 0x10000;
  if (!v204) {
    uint64_t v159 = 0;
  }
  unint64_t v160 = v158 | v159 | ((unint64_t)v206 << 24);
  uint64_t v161 = 0x100000000;
  if (!v205) {
    uint64_t v161 = 0;
  }
  uint64_t v162 = 0x10000000000;
  if ((v229 & 1) == 0) {
    uint64_t v162 = 0;
  }
  uint64_t v163 = v161 | v162;
  uint64_t v164 = 0x1000000000000;
  if (!v207) {
    uint64_t v164 = 0;
  }
  unint64_t v165 = v160 | v163 | v164;
  uint64_t v166 = 0x100000000000000;
  if (!v208) {
    uint64_t v166 = 0;
  }
  *(void *)&long long v245 = v150;
  *((void *)&v245 + 1) = v165 | v166;
  if (v210) {
    uint64_t v167 = 256;
  }
  else {
    uint64_t v167 = 0;
  }
  *(void *)&long long v246 = v167 | v211;
  *((void *)&v246 + 1) = v201;
  *(void *)&long long v247 = v209;
  *((void *)&v247 + 1) = v217;
  v248[0] = v216;
  v248[1] = v215;
  v248[2] = v214;
  if (v212) {
    __int16 v168 = 256;
  }
  else {
    __int16 v168 = 0;
  }
  LOWORD(v248[3]) = v168 | v213;
  long long v230 = 0uLL;
  *(void *)&long long v231 = 0;
  *((void *)&v231 + 1) = 1;
  bzero(&v232, 0xB1uLL);
  uint64_t v169 = v202;
  _s15ConversationKit11ParticipantVWOcTm_19(v156, v202);
  Participant.captionInfo.getter();
  OUTLINED_FUNCTION_183_2();
  _s15ConversationKit11ParticipantVWOhTm_13(v169, (void (*)(void))type metadata accessor for Participant);
  Participant.copresenceInfo.getter();
  uint64_t v28 = v223;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v240);
  uint64_t v170 = OUTLINED_FUNCTION_69_0();
  outlined consume of Participant.CaptionInfo?(v170);
  swift_bridgeObjectRelease();
  outlined destroy of SystemUpdateNotice?((uint64_t)&v230, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  uint64_t v171 = OUTLINED_FUNCTION_432();
  _s15ConversationKit11ParticipantVWOhTm_13(v171, v172);
  uint64_t v23 = v222;
  _s15ConversationKit11ParticipantVWObTm_6(v28, (uint64_t)v222);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v234);
  BOOL v27 = v203;
  uint64_t v4 = v224;
LABEL_69:
  uint64_t v173 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  OUTLINED_FUNCTION_2();
  uint64_t v229 = v173;
  uint64_t v174 = v227;
  _s15ConversationKit11ParticipantVWOcTm_19(v173, v227);
  OUTLINED_FUNCTION_209_3();
  static Participant.State.== infix(_:_:)();
  char v176 = v175;
  _s15ConversationKit11ParticipantVWOhTm_13(v174, (void (*)(void))type metadata accessor for Participant.State);
  if (v27 || (v176 & 1) == 0)
  {
    uint64_t v178 = v229;
    OUTLINED_FUNCTION_6_1();
    outlined assign with copy of Participant.State((uint64_t)v23, v178);
    swift_endAccess();
    uint64_t v227 = *(void *)(ConversationController.visibleParticipants.getter() + 16);
    if (v227)
    {
      v222 = v23;
      uint64_t v223 = v28;
      unint64_t v221 = v11;
      OUTLINED_FUNCTION_12_19();
      uint64_t v218 = v179;
      uint64_t v181 = v179 + v180;
      uint64_t v225 = *(void *)(v182 + 72);
      type metadata accessor for UUID();
      OUTLINED_FUNCTION_0();
      v226 = *(void (**)(unint64_t))(v183 + 16);
      v224 = v4;
      v184 = v4;
      v217 = v184;
      uint64_t v185 = 0;
      while (1)
      {
        MEMORY[0x1F4188790](v184);
        OUTLINED_FUNCTION_355();
        v226(v11);
        OUTLINED_FUNCTION_449();
        char v186 = static UUID.== infix(_:_:)();
        OUTLINED_FUNCTION_139();
        v184 = (char *)v187();
        if (v186) {
          break;
        }
        ++v185;
        v181 += v225;
        if (v227 == v185)
        {
          swift_bridgeObjectRelease();

          uint64_t v23 = v222;
          uint64_t v28 = v223;
          uint64_t v4 = v224;
          goto LABEL_80;
        }
      }
      swift_bridgeObjectRelease();
      v188 = v217;

      v189 = &v188[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant];
      OUTLINED_FUNCTION_2();
      v190 = *(void (**)(uint64_t))v189;
      uint64_t v23 = v222;
      uint64_t v28 = v223;
      uint64_t v4 = v224;
      if (*(void *)v189)
      {
        _s15ConversationKit11ParticipantVWOcTm_19(v229, v223);
        swift_retain();
        uint64_t v191 = OUTLINED_FUNCTION_462();
        v190(v191);
        uint64_t v192 = OUTLINED_FUNCTION_45_9();
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v192);
        _s15ConversationKit11ParticipantVWOhTm_13(v28, (void (*)(void))type metadata accessor for Participant);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_80:
    v193 = &v4[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant];
    OUTLINED_FUNCTION_123_4();
    v194 = *(void (**)(uint64_t))v193;
    if (!*(void *)v193)
    {
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v23, (void (*)(void))type metadata accessor for Participant);
      swift_endAccess();
      goto LABEL_83;
    }
    swift_endAccess();
    _s15ConversationKit11ParticipantVWOcTm_19(v229, v28);
    swift_retain();
    uint64_t v195 = OUTLINED_FUNCTION_69_3();
    v194(v195);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v194);
    _s15ConversationKit11ParticipantVWOhTm_13(v28, (void (*)(void))type metadata accessor for Participant);
    uint64_t v177 = (uint64_t)v23;
  }
  else
  {
    uint64_t v177 = (uint64_t)v23;
  }
  _s15ConversationKit11ParticipantVWOhTm_13(v177, (void (*)(void))type metadata accessor for Participant);
LABEL_83:
  OUTLINED_FUNCTION_33_2();
}

void (*ConversationController.isUsingIPadExternalCamera.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return ConversationController.isUsingIPadExternalCamera.modify;
}

void ConversationController.isUsingIPadExternalCamera.modify(uint64_t a1, uint64_t a2)
{
}

Swift::Bool __swiftcall ConversationController.updateIsUsingIPadExternalCamera()()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for Participant(0);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16_0();
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults + 8);
  uint64_t ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 624))(ObjectType, v5) & 1) == 0) {
    return 0;
  }
  id v7 = objc_msgSend(self, sel_currentDevice);
  id v8 = objc_msgSend(v7, sel_userInterfaceIdiom);

  if (v8 != (id)1) {
    return 0;
  }
  uint64_t v9 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_2();
  _s15ConversationKit11ParticipantVWOcTm_19(v9, v1);
  Participant.videoInfo.getter();
  _s15ConversationKit11ParticipantVWOhTm_13(v1, (void (*)(void))type metadata accessor for Participant);
  outlined init with take of AspectRatio?((uint64_t)v12, (uint64_t)v13, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v13[0]) {
    return 0;
  }
  memcpy(__dst, v13, sizeof(__dst));
  int v10 = Participant.VideoInfo.cameraType.getter();
  outlined release of LinearGradient((uint64_t)v12);
  return v10 == 1;
}

uint64_t ConversationController._captionsRecognizerShouldBeRunning.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning);
  uint64_t result = OUTLINED_FUNCTION_11_0();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*ConversationController._captionsRecognizerShouldBeRunning.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

void (*ConversationController.captionsRecognizerShouldBeRunning.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return ConversationController.captionsRecognizerShouldBeRunning.modify;
}

void ConversationController.captionsRecognizerShouldBeRunning.modify(uint64_t a1, uint64_t a2)
{
}

void ConversationController.isLocallySharingScreen.getter()
{
  OUTLINED_FUNCTION_9_83();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_220_0();
  OUTLINED_FUNCTION_426();
  uint64_t v1 = OUTLINED_FUNCTION_443();
  v0(v1);
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_10_73();
}

void ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.didset(char a1)
{
  if (*((unsigned char *)v1
       + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo) != (a1 & 1))
  {
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationController);
    id v11 = v1;
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v12 = v6;
      *(_DWORD *)uint64_t v5 = 136315394;
      uint64_t v7 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2080;
      uint64_t v9 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v3, v4, "[%s] set isOneToOneCallCenterUpdateWaitingForNonSquareVideo = %s", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v6, -1, -1);
      MEMORY[0x1C87760E0](v5, -1, -1);
    }
    else
    {
    }
  }
}

void ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.setter(char a1)
{
  char v2 = *(unsigned char *)(v1
                + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo) = a1;
  ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.didset(v2);
}

void ConversationController.isOneToOneModeEnabledByCallCenter.didset()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter) & 1) == 0) {
    ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.setter(0);
  }
}

Swift::Void __swiftcall ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  if (objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags], sel_uPlusOneFullBleedHandoffEnabled))
  {
    if (v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] == 1
      && (ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
    {
      uint64_t v2 = OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff;
      if ((v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff] & 1) == 0
        && ((ConversationController.conversationHandoffInProgress.getter() & 1) != 0
         || ConversationController.conversationMergedRemoteMembersCount.getter() == 1
         && ConversationController.conversationActiveRemoteParticipantsCount.getter() == 2))
      {
        if (one-time initialization token for conversationController != -1) {
          swift_once();
        }
        uint64_t v3 = type metadata accessor for Logger();
        OUTLINED_FUNCTION_98_0(v3, (uint64_t)static Logger.conversationController);
        os_log_type_t v4 = v0;
        uint64_t v5 = Logger.logObject.getter();
        os_log_type_t v6 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v5, v6))
        {
          uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_37();
          v29[0] = OUTLINED_FUNCTION_9_0();
          *(_DWORD *)uint64_t v7 = 136315138;
          uint64_t v8 = String.init<A>(reflecting:)();
          uint64_t v28 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v29);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v5, v6, "[%s] U+1 Handoff detected, enabling show last/paused frame", v7, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_3();
          OUTLINED_FUNCTION_3();
        }
        else
        {
        }
        v1[v2] = 1;
        uint64_t v10 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        uint64_t v26 = static OS_dispatch_queue.main.getter();
        BOOL v27 = v25;
        v25[5] = type metadata accessor for DispatchTime();
        OUTLINED_FUNCTION_5_3();
        uint64_t v12 = v11;
        MEMORY[0x1F4188790](v13);
        OUTLINED_FUNCTION_132_2();
        MEMORY[0x1F4188790](v14);
        OUTLINED_FUNCTION_478();
        MEMORY[0x1C8772E20](v10, 10.0);
        uint64_t v15 = *(void *)(v12 + 8);
        v25[4] = v12 + 8;
        void v25[6] = v15;
        OUTLINED_FUNCTION_50_1();
        v16();
        OUTLINED_FUNCTION_20();
        OUTLINED_FUNCTION_72_9();
        v29[4] = (uint64_t)partial apply for closure #1 in ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff();
        v29[5] = v10;
        v29[0] = MEMORY[0x1E4F143A8];
        OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
        v29[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
        v29[3] = (uint64_t)&block_descriptor_54_0;
        uint64_t v17 = _Block_copy(v29);
        swift_release();
        void v25[2] = type metadata accessor for DispatchQoS();
        void v25[3] = v25;
        OUTLINED_FUNCTION_5_3();
        MEMORY[0x1F4188790](v18);
        OUTLINED_FUNCTION_133_6();
        type metadata accessor for DispatchWorkItemFlags();
        v25[1] = v25;
        OUTLINED_FUNCTION_5_3();
        MEMORY[0x1F4188790](v19);
        OUTLINED_FUNCTION_118();
        v29[0] = MEMORY[0x1E4FBC860];
        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        OUTLINED_FUNCTION_226_0();
        uint64_t v20 = OUTLINED_FUNCTION_278();
        uint64_t v21 = (void *)v26;
        MEMORY[0x1C8773B10](v20);
        _Block_release(v17);

        OUTLINED_FUNCTION_29_4();
        v22();
        OUTLINED_FUNCTION_4_1();
        v23();
        OUTLINED_FUNCTION_26_2();
        v24();
        OUTLINED_FUNCTION_256_0();
      }
    }
  }
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.isOneToOneModeInferred.getter()
{
  BOOL v1 = ConversationController.conversationMergedRemoteMembersCount.getter() == 1
    && !ConversationController.isLinkCall.getter();
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags), sel_uPlusOneFullBleedHandoffEnabled) & v1;
}

uint64_t ConversationController.conversationMergedRemoteMembersCount.getter()
{
  ConversationController.lookupActiveConversation()();
  if (v5)
  {
    outlined init with take of Notice(&v4, (uint64_t)v6);
    uint64_t v0 = v7;
    uint64_t v1 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v1 + 96))(v0, v1);
    uint64_t v2 = specialized Set.count.getter();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v4, &demangling cache variable for type metadata for Conversation?);
    return 0;
  }
  return v2;
}

BOOL ConversationController.isLinkCall.getter()
{
  ConversationController.lookupActiveConversation()();
  if (v6)
  {
    outlined init with take of Notice(&v5, (uint64_t)v7);
    uint64_t v0 = v8;
    uint64_t v1 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v2 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 216))(v0, v1);
    BOOL v3 = v2 != 0;
    if (v2) {

    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v5, &demangling cache variable for type metadata for Conversation?);
    return 0;
  }
  return v3;
}

void ConversationController.isConnecting.getter()
{
  OUTLINED_FUNCTION_11_49();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_246_1();
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 96);
  swift_unknownObjectRetain();
  uint64_t v3 = OUTLINED_FUNCTION_160_4();
  v2(v3);
  OUTLINED_FUNCTION_407();
  if (v0) {
    ConversationController.isWaitingOnFirstRemoteFrame.getter();
  }
  OUTLINED_FUNCTION_10_27();
}

BOOL ConversationController.momentsLocallyAvailable.getter()
{
  OUTLINED_FUNCTION_49_11();
  if (!v0) {
    return 0;
  }
  ConversationController.lookupActiveConversation()();
  if (!v10)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for Conversation?);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  if ((OUTLINED_FUNCTION_237_0() & 1) == 0)
  {
LABEL_9:
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_31_26();
    return 0;
  }
  if (objc_msgSend(v8, sel_state) == (id)3)
  {
    id v1 = objc_msgSend(v8, sel_mergedActiveRemoteParticipants);
    OUTLINED_FUNCTION_1_132();
    lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
    OUTLINED_FUNCTION_351();
    uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v3 = specialized Set.count.getter(v2);
    swift_bridgeObjectRelease();
    if (v3 >= 1)
    {
      id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADC18]), sel_initWithConversation_, v8);
      id v5 = ConversationController.momentsController.getter();
      id v6 = objc_msgSend(v5, sel_capabilitiesForProvider_, v4);

      LODWORD(v5) = objc_msgSend(v6, sel_availability);
      return v5 == 3;
    }
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_118_5();

  return 0;
}

uint64_t ConversationController.shouldShowDeskViewCameras.getter()
{
  ConversationController.lookupActiveConversation()();
  if (!v10)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for Conversation?);
    goto LABEL_6;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  if ((OUTLINED_FUNCTION_237_0() & 1) == 0)
  {
LABEL_6:
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    char v0 = (void *)OUTLINED_FUNCTION_30(v2, (uint64_t)static Logger.conversationKit);
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_12(v3))
    {
      id v4 = (_WORD *)OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1(v4);
      OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v5, v6, "Could not find conversation to check desk view cameras");
      OUTLINED_FUNCTION_3();
    }
    goto LABEL_10;
  }
  char v0 = v8;
  if (objc_msgSend(v8, sel_state) != (id)3)
  {
LABEL_10:
    char v1 = 0;
    goto LABEL_11;
  }
  char v1 = ConversationController.hasAvailableDeskViewCameras.getter();
LABEL_11:

  return v1 & 1;
}

uint64_t ConversationController.broadcastingState.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_2();
  return *(void *)v1;
}

__n128 key path getter for ConversationController.broadcastingState : ConversationController@<Q0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  os_log_type_t v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
  swift_beginAccess();
  unsigned __int8 v4 = v3[1].n128_u8[0];
  __n128 result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

void key path setter for ConversationController.broadcastingState : ConversationController()
{
}

uint64_t ConversationController.broadcastingState.didset(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v7 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v36 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (unint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
  uint64_t result = swift_beginAccess();
  unint64_t v11 = *v9;
  int v12 = *((unsigned __int8 *)v9 + 16);
  if ((a3 & 0x80) != 0)
  {
    if ((v12 & 0x80) != 0)
    {
      int v30 = v11 & 1;
      uint64_t v31 = (unsigned __int16)(v11 ^ a1) & 0xFF00;
      BOOL v32 = ((a1 & 1) == 0) != v30 && v31 == 0;
      BOOL v33 = v32 && v9[1] == a2;
      if (v33 && ((((a3 & 1) == 0) ^ v12) & 1) != 0) {
        return result;
      }
    }
  }
  else if ((v12 & 0x80) == 0 {
         && ((((a1 & 1) == 0) ^ v11) & 1) != 0
  }
         && ((a1 & 0x100) == 0) != ((v11 >> 8) & 1))
  {
    return result;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C37696D0;
  *(void *)&long long v37 = a1;
  *((void *)&v37 + 1) = a2;
  unsigned __int8 v38 = a3;
  uint64_t v14 = String.init<A>(reflecting:)();
  uint64_t v16 = v15;
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v18 = lazy protocol witness table accessor for type String and conformance String();
  uint64_t v35 = a1;
  unint64_t v19 = v18;
  *(void *)(v13 + 64) = v18;
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  unsigned __int8 v20 = *((unsigned char *)v9 + 16);
  long long v37 = *(_OWORD *)v9;
  unsigned __int8 v38 = v20;
  uint64_t v21 = String.init<A>(reflecting:)();
  *(void *)(v13 + 96) = v17;
  *(void *)(v13 + 104) = v19;
  *(void *)(v13 + 72) = v21;
  *(void *)(v13 + 80) = v22;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (((_BYTE)v9[2] & a3 & 0x80) != 0 && (((unsigned __int16)*v9 ^ (unsigned __int16)v35) & 0xFF00) != 0) {
    *(unsigned char *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame) = 1;
  }
  ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
  uint64_t v23 = (void (**)(uint64_t, unint64_t, unint64_t, uint64_t))(v3
                                                                                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  uint64_t result = swift_beginAccess();
  uint64_t v24 = *v23;
  if (*v23)
  {
    uint64_t v25 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    swift_beginAccess();
    uint64_t v26 = v36;
    _s15ConversationKit11ParticipantVWOcTm_19(v25, v36);
    unint64_t v27 = *v9;
    unint64_t v28 = v9[1];
    uint64_t v29 = *((unsigned __int8 *)v9 + 16);
    swift_retain();
    v24(v26, v27, v28, v29);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v24);
    return _s15ConversationKit11ParticipantVWOhTm_13(v26, (void (*)(void))type metadata accessor for Participant);
  }
  return result;
}

void (*ConversationController.broadcastingState.modify(void *a1))(void **a1)
{
  uint64_t v3 = (char *)malloc(0x38uLL);
  *a1 = v3;
  *((void *)v3 + 6) = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_2();
  *(_OWORD *)(v3 + 24) = *(_OWORD *)v4;
  v3[40] = *(unsigned char *)(v4 + 16);
  return ConversationController.broadcastingState.modify;
}

void ConversationController.broadcastingState.modify(void **a1)
{
  uint64_t v1 = *a1;
  ConversationController.broadcastingState.setter();
  free(v1);
}

id ConversationController.videoMessageController.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
}

uint64_t ConversationController.isCameraMixedWithScreen.getter()
{
  ConversationController.lookupActiveConversation()();
  uint64_t v0 = v4;
  if (v4)
  {
    uint64_t v1 = v5;
    __swift_project_boxed_opaque_existential_1(v3, v4);
    LOBYTE(v0) = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 328))(v0, v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v3, &demangling cache variable for type metadata for Conversation?);
  }
  return v0 & 1;
}

void ConversationController.OneToOneModeChangeSource.hash(into:)(uint64_t a1, char a2)
{
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ConversationController.OneToOneModeChangeSource(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ConversationController.OneToOneModeChangeSource.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance ConversationController.OneToOneModeChangeSource()
{
  return ConversationController.OneToOneModeChangeSource.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ConversationController.OneToOneModeChangeSource(uint64_t a1)
{
  ConversationController.OneToOneModeChangeSource.hash(into:)(a1, *v1);
}

uint64_t key path getter for ConversationController.didAddVisibleParticipant : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didAddVisibleParticipant : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didAddVisibleParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.didAddVisibleParticipant.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didAddVisibleParticipant.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didRemoveVisibleParticipant : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didRemoveVisibleParticipant : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didRemoveVisibleParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.didRemoveVisibleParticipant.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didRemoveVisibleParticipant.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didRemoveAllVisibleParticipants : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didRemoveAllVisibleParticipants : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed () -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didRemoveAllVisibleParticipants.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didRemoveAllVisibleParticipants.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didRemoveAllVisibleParticipants.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didFinishMigratingConversations : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didFinishMigratingConversations : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed () -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didFinishMigratingConversations.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didFinishMigratingConversations.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didFinishMigratingConversations.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didUpdateVisibleParticipant : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateVisibleParticipant : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateVisibleParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.didUpdateVisibleParticipant.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didUpdateVisibleParticipant.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.visibleParticipantDidBecomeActive : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.visibleParticipantDidBecomeActive : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.visibleParticipantDidBecomeActive.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.visibleParticipantDidBecomeActive.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.visibleParticipantDidBecomeActive.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.visibleParticipantDidBecomeInactive : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.visibleParticipantDidBecomeInactive : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.visibleParticipantDidBecomeInactive.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.visibleParticipantDidBecomeInactive.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.visibleParticipantDidBecomeInactive.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.visibleParticipantKickableStatusDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.visibleParticipantKickableStatusDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.visibleParticipantKickableStatusDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.visibleParticipantKickableStatusDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.visibleParticipantKickableStatusDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didStartVideoForVisibleParticipant : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didStartVideoForVisibleParticipant : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didStartVideoForVisibleParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.didStartVideoForVisibleParticipant.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didStartVideoForVisibleParticipant.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didUpdateVisibleParticipantScreenInfo : ConversationController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateVisibleParticipantScreenInfo : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t key path getter for ConversationController.participantsMediaPrioritiesDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [ParticipantMediaPriorities]) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.participantsMediaPrioritiesDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.participantsMediaPrioritiesDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.participantsMediaPrioritiesDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.participantsMediaPrioritiesDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.participantDidReact : ConversationController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @guaranteed String) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.participantDidReact : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Data?) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.participantDidReact.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.participantDidReact.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.participantDidReact.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.participantDidStopReacting : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed ScreenShareAttributes?) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.participantDidStopReacting : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed ScreenShareAttributes?) -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.participantDidStopReacting.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.participantDidStopReacting.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.participantDidStopReacting.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.participantAudioPowerDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1, float *a2)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Float) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t, float *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.participantAudioPowerDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Float) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.participantAudioPowerDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.participantAudioPowerDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.participantAudioPowerDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.mutedTalkerDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.mutedTalkerDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.mutedTalkerDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.mutedTalkerDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.mutedTalkerDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.audioRouteDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TURoute?) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.audioRouteDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.audioRouteDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.audioRouteDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.audioRouteDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.cameraBlurEnabledDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraBlurEnabledDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraBlurEnabledDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.cameraBlurEnabledDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.cameraBlurEnabledDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.cameraZoomAvailabiltyDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraZoomAvailabiltyDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraZoomAvailabiltyDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.cameraZoomAvailabiltyDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.cameraZoomAvailabiltyDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.localCameraUIDDidChange : ConversationController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = _sSSIegg_SSytIegnr_TRTA_0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.localCameraUIDDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Call) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.localCameraUIDDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.localCameraUIDDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.localCameraUIDDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.cameraListDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraListDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed () -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraListDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.cameraListDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.cameraListDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.cameraOrientationUpdateDidGetSnapshot : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraOrientationUpdateDidGetSnapshot : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed () -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraOrientationUpdateDidGetSnapshot.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.cameraOrientationUpdateDidGetSnapshot.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.cameraOrientationUpdateDidGetSnapshot.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.cameraCinematicFramingAvailabilityDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraCinematicFramingAvailabilityDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraCinematicFramingAvailabilityDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.cameraCinematicFramingAvailabilityDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.cameraCinematicFramingAvailabilityDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.cameraCinematicFramingEnabledDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraCinematicFramingEnabledDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraCinematicFramingEnabledDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.cameraCinematicFramingEnabledDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.cameraCinematicFramingEnabledDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.cameraReactionEffectsEnabledDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraReactionEffectsEnabledDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraReactionEffectsEnabledDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.cameraReactionEffectsEnabledDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.cameraReactionEffectsEnabledDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.cameraStudioLightEnabledDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraStudioLightEnabledDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraStudioLightEnabledDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.cameraStudioLightEnabledDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.cameraStudioLightEnabledDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.carPlayConnectedDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.carPlayConnectedDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.carPlayConnectedDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.carPlayConnectedDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.carPlayConnectedDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.oneToOneModeDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool, @unowned ConversationController.OneToOneModeChangeSource) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.oneToOneModeDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Bool, @in_guaranteed ConversationController.OneToOneModeChangeSource) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed Bool, @in_guaranteed ConversationController.OneToOneModeChangeSource) -> (@out ())(char a1, char a2, uint64_t (*a3)(char *, char *))
{
  char v5 = a1;
  char v4 = a2 & 1;
  return a3(&v5, &v4);
}

uint64_t ConversationController.oneToOneModeDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.oneToOneModeDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.oneToOneModeDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.isTrackingActiveConversationDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.isTrackingActiveConversationDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.isTrackingActiveConversationDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.isTrackingActiveConversationDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.isTrackingActiveConversationDidChange.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path getter for ConversationController.avModeDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned TUConversationAVMode) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.avModeDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.avModeDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.avModeDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.avModeDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.resolvedAudioVideoModeDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned TUConversationAVMode) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.resolvedAudioVideoModeDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [UUID : IDSCapabilitiesChecker.Capabilities]) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.resolvedAudioVideoModeDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.resolvedAudioVideoModeDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.resolvedAudioVideoModeDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.isWaitingOnFirstRemoteFrameDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.isWaitingOnFirstRemoteFrameDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.isWaitingOnFirstRemoteFrameDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.isWaitingOnFirstRemoteFrameDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.isWaitingOnFirstRemoteFrameDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.activitiesDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [TUConversationActivitySession]?) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.activitiesDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [UUID : IDSCapabilitiesChecker.Capabilities]) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.activitiesDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.activitiesDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.activitiesDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.collaborationNoticePosted : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TUCollaborationNotice, @in_guaranteed Participant, @in_guaranteed Conversation) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.collaborationNoticePosted : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed TUCollaborationNotice, @in_guaranteed Participant, @in_guaranteed Conversation) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.collaborationNoticePosted.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.collaborationNoticePosted.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.collaborationNoticePosted.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.screenSharingRequestsChanged : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed Set<TUScreenSharingRequest>?) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.screenSharingRequestsChanged : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.screenSharingRequestsChanged.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.screenSharingRequestsChanged.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.screenSharingRequestsChanged.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.audioPausedDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1, unsigned __int8 *a2)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Bool) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t, unsigned __int8 *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.audioPausedDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed CameraPosition) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.audioPausedDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.audioPausedDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.audioPausedDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.bluetoothAudioFormatChanged : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned TUCallBluetoothAudioFormat) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.bluetoothAudioFormatChanged : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.bluetoothAudioFormatChanged.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.bluetoothAudioFormatChanged.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.bluetoothAudioFormatChanged.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didUpdateLocalParticipant : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned BroadcastingState) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateLocalParticipant : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed BroadcastingState) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateLocalParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.didUpdateLocalParticipant.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.didUpdateLocalParticipant.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didUpdateLocalMemberAuthorizedToChangeGroupMembership : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateLocalMemberAuthorizedToChangeGroupMembership : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateLocalMemberAuthorizedToChangeGroupMembership.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didUpdateLocalMemberAuthorizedToChangeGroupMembership.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didUpdateLocalMemberAuthorizedToChangeGroupMembership.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didUpdateLocalParticipantCameraPosition : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned CameraPosition) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateLocalParticipantCameraPosition : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CameraPosition) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateLocalParticipantCameraPosition.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.didUpdateLocalParticipantCameraPosition.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.didUpdateLocalParticipantCameraPosition.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didUpdateRecordingLocalVideo : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateRecordingLocalVideo : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateRecordingLocalVideo.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didUpdateRecordingLocalVideo.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didUpdateRecordingLocalVideo.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didFinishWindowResize : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didFinishWindowResize : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed () -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didFinishWindowResize.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didFinishWindowResize.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didFinishWindowResize.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didUpdateLocalScreenSharing : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateLocalScreenSharing : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateLocalScreenSharing.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didUpdateLocalScreenSharing.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didUpdateLocalScreenSharing.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didUpdateHasRingingCalls : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateHasRingingCalls : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateHasRingingCalls.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didUpdateHasRingingCalls.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didUpdateHasRingingCalls.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didUpdateWantsHoldMusic : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateWantsHoldMusic : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateWantsHoldMusic.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didUpdateWantsHoldMusic.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didUpdateWantsHoldMusic.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didStartVideoForLocalParticipant : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned BroadcastingState) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didStartVideoForLocalParticipant : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed BroadcastingState) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didStartVideoForLocalParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.didStartVideoForLocalParticipant.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.didStartVideoForLocalParticipant.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.conversationStateDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned TUConversationState, @unowned TUConversationState) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.conversationStateDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed TUConversationState, @in_guaranteed TUConversationState) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.conversationStateDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.conversationStateDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.conversationStateDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.conversationLetMeInRequestStateDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned TUConversationLetMeInRequestState) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.conversationLetMeInRequestStateDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.conversationLetMeInRequestStateDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.conversationLetMeInRequestStateDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.conversationLetMeInRequestStateDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.conversationIgnoreLetMeInRequestsDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.conversationIgnoreLetMeInRequestsDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.conversationIgnoreLetMeInRequestsDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.conversationIgnoreLetMeInRequestsDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.conversationIgnoreLetMeInRequestsDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.conversationRejectedParticipantsCountDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned Int) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.conversationRejectedParticipantsCountDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [UUID : IDSCapabilitiesChecker.Capabilities]) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.conversationRejectedParticipantsCountDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.conversationRejectedParticipantsCountDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.conversationRejectedParticipantsCountDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didAddPendingParticipant : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed ScreenShareAttributes?) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didAddPendingParticipant : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed ScreenShareAttributes?) -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didAddPendingParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didAddPendingParticipant.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didAddPendingParticipant.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didRemovePendingParticipant : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed ScreenShareAttributes?) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didRemovePendingParticipant : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed ScreenShareAttributes?) -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didRemovePendingParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didRemovePendingParticipant.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didRemovePendingParticipant.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didApprovePendingParticipant : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed ScreenShareAttributes?) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didApprovePendingParticipant : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed ScreenShareAttributes?) -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didApprovePendingParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didApprovePendingParticipant.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didApprovePendingParticipant.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didUpdateParticipantAVMode : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed ScreenShareAttributes?) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateParticipantAVMode : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed ScreenShareAttributes?) -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateParticipantAVMode.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didUpdateParticipantAVMode.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didUpdateParticipantAVMode.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didInviteOtherParticipants : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant]) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didInviteOtherParticipants : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didInviteOtherParticipants.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.didInviteOtherParticipants.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.didInviteOtherParticipants.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.cameraPositionDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1, unsigned __int8 *a2)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned CameraPosition) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t, unsigned __int8 *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraPositionDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed CameraPosition) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraPositionDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.cameraPositionDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.cameraPositionDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.groupNameAndPhotoDidChange : ConversationController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @guaranteed Data?) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.groupNameAndPhotoDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Data?) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.groupNameAndPhotoDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.groupNameAndPhotoDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.groupNameAndPhotoDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.sessionActionNoticePosted : ConversationController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Participant, @guaranteed TUConversationNotice, @unowned TUScreenShareDeviceFamily?) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.sessionActionNoticePosted : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Participant, @in_guaranteed TUConversationNotice, @in_guaranteed TUScreenShareDeviceFamily?) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Participant, @in_guaranteed TUConversationNotice, @in_guaranteed TUScreenShareDeviceFamily?) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t *, uint64_t *))
{
  uint64_t v9 = a3;
  uint64_t v7 = a4;
  char v8 = a5 & 1;
  return a6(a1, a2, &v9, &v7);
}

uint64_t ConversationController.sessionActionNoticePosted.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.sessionActionNoticePosted.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.sessionActionNoticePosted.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.appLaunchStateChanged : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Activity, @unowned TUConversationActivitySessionApplicationState) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.appLaunchStateChanged : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Activity, @in_guaranteed TUConversationActivitySessionApplicationState) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.appLaunchStateChanged.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.appLaunchStateChanged.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.appLaunchStateChanged.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.willTakeMoment : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.willTakeMoment : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed () -> (@out ())partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.willTakeMoment.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.willTakeMoment.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.willTakeMoment.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.shouldPauseOnFirstLocalVideoFrame : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed () -> (@unowned Bool)partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.shouldPauseOnFirstLocalVideoFrame : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = thunk for @escaping @callee_guaranteed () -> (@out Bool)partial apply;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.shouldPauseOnFirstLocalVideoFrame.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.shouldPauseOnFirstLocalVideoFrame.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.shouldPauseOnFirstLocalVideoFrame.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.conversationLinkDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed URL) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.conversationLinkDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed URL) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.conversationLinkDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.conversationLinkDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.conversationLinkDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didFailToStartCamera : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didFailToStartCamera : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didFailToStartCamera.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didFailToStartCamera.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didFailToStartCamera.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.callStatusDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@guaranteed Call) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.callStatusDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Call) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.callStatusDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.callStatusDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.callStatusDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.greenTea3PCallStatusChanged : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@guaranteed Call) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.greenTea3PCallStatusChanged : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Call) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.greenTea3PCallStatusChanged.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.greenTea3PCallStatusChanged.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.greenTea3PCallStatusChanged.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.pttCallStatusDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@guaranteed Call) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.pttCallStatusDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Call) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.pttCallStatusDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.pttCallStatusDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.pttCallStatusDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.localParticipantRequestedVideoUpgrade : ConversationController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed Call) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.localParticipantRequestedVideoUpgrade : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Call) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.localParticipantRequestedVideoUpgrade.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.localParticipantRequestedVideoUpgrade.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.localParticipantRequestedVideoUpgrade.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didUpdateCaptions : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed URL) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateCaptions : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed URL) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateCaptions.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didUpdateCaptions.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didUpdateCaptions.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didToggleCaptions : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didToggleCaptions : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didToggleCaptions.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.didToggleCaptions.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.didToggleCaptions.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.didUpdateIDSCapabilities : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [UUID : IDSCapabilitiesChecker.Capabilities]) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateIDSCapabilities : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [UUID : IDSCapabilitiesChecker.Capabilities]) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateIDSCapabilities.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.didUpdateIDSCapabilities.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.didUpdateIDSCapabilities.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.videoMessageErrorOccured : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned VideoMessageController.UnrecoverableErrors) -> ();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.videoMessageErrorOccured : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.videoMessageErrorOccured.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.videoMessageErrorOccured.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t (*ConversationController.videoMessageErrorOccured.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.screenSharingAvailabilityDidChange : ConversationController@<X0>(void *a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = _sSbIegy_SbytIegnr_TRTA_0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.screenSharingAvailabilityDidChange : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.screenSharingAvailabilityDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

uint64_t ConversationController.screenSharingAvailabilityDidChange.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

uint64_t (*ConversationController.screenSharingAvailabilityDidChange.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t key path getter for ConversationController.isRemoteParticipantEligibleForVideoMessagingBlock : ConversationController@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = _sSbIegd_SbIegr_TRTA_0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.isRemoteParticipantEligibleForVideoMessagingBlock : ConversationController(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = _sSbIegr_SbIegd_TRTA_0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.isRemoteParticipantEligibleForVideoMessagingBlock.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.didUpdateVisibleParticipantScreenInfo.getter(uint64_t a1, void (*a2)(uint64_t))
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = OUTLINED_FUNCTION_4_18();
  a2(v3);
  return OUTLINED_FUNCTION_4_18();
}

uint64_t ConversationController.isRemoteParticipantEligibleForVideoMessagingBlock.setter(uint64_t a1, uint64_t a2)
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock, _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

uint64_t ConversationController.didUpdateVisibleParticipantScreenInfo.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  OUTLINED_FUNCTION_3_74();
  uint64_t v9 = (uint64_t *)(v4 + *v8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t *v9 = v6;
  v9[1] = v5;
  return a4(v10, v11);
}

uint64_t (*ConversationController.isRemoteParticipantEligibleForVideoMessagingBlock.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t closure #1 in ConversationController.updateLayoutStyle(_:)(uint64_t a1, char a2)
{
  void (*v11)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void v22[2];
  uint64_t v23;
  long long v24;
  uint64_t v25;
  void v26[3];
  uint64_t v27;
  uint64_t v28;
  void v29[3];
  uint64_t v30;
  uint64_t v31;

  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v3);
  if (result)
  {
    uint64_t v5 = (char *)result;
    uint64_t v6 = result + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    swift_beginAccess();
    outlined init with copy of Conversation(v6, (uint64_t)v26);
    uint64_t v7 = v27;
    uint64_t v8 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    uint64_t v9 = &v5[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    swift_beginAccess();
    uint64_t v10 = *((void *)v9 + 1);
    uint64_t v11 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 104);
    int v12 = swift_unknownObjectRetain();
    v11(&v24, v12, v10, v7, v8);
    swift_unknownObjectRelease();
    if (v25)
    {
      uint64_t v23 = a2 & 1;
      outlined init with take of Notice(&v24, (uint64_t)v29);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      outlined init with copy of Conversation(v6, (uint64_t)v26);
      uint64_t v13 = v27;
      uint64_t v14 = v28;
      __swift_project_boxed_opaque_existential_1(v26, v27);
      uint64_t v15 = v30;
      uint64_t v16 = v31;
      __swift_project_boxed_opaque_existential_1(v29, v30);
      uint64_t v17 = type metadata accessor for UUID();
      v22[1] = v22;
      unint64_t v18 = *(void *)(v17 - 8);
      MEMORY[0x1F4188790](v17);
      unsigned __int8 v20 = (char *)v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v14 + 136))(v23, v20, v13, v14);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      uint64_t v21 = v29;
    }
    else
    {

      outlined destroy of SystemUpdateNotice?((uint64_t)&v24, &demangling cache variable for type metadata for Conversation?);
      uint64_t v21 = v26;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  return result;
}

uint64_t ConversationController.callCenter.getter()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_23_0();
  return outlined init with copy of Conversation(v0, v1);
}

uint64_t ConversationController.call.setter()
{
  OUTLINED_FUNCTION_4_15();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  OUTLINED_FUNCTION_11_0();
  void *v3 = v2;
  v3[1] = v0;
  return swift_unknownObjectRelease();
}

uint64_t (*ConversationController.call.modify())()
{
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t ConversationController.mode.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode);
}

uint64_t ConversationController.defaults.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ConversationController.isSplitView.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView);
  OUTLINED_FUNCTION_2();
  return *v1;
}

uint64_t key path getter for ConversationController.isSplitView : ConversationController@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t ConversationController.isSplitView.setter(char a1)
{
  return ConversationController.didDeferStartCameraAction.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView, (uint64_t (*)(uint64_t))ConversationController.isSplitView.didset);
}

uint64_t ConversationController.didDeferStartCameraAction.setter(char a1, void *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = (unsigned char *)(v3 + *a2);
  OUTLINED_FUNCTION_11_0();
  uint64_t v7 = *v6;
  *uint64_t v6 = a1;
  return a3(v7);
}

uint64_t ConversationController.isSplitView.didset(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView);
  uint64_t result = swift_beginAccess();
  if (*v3 == 1 && (a1 & 1) == 0) {
    return ConversationController.updateWaitingParticipantsAsDoneWaiting()();
  }
  return result;
}

uint64_t ConversationController.updateWaitingParticipantsAsDoneWaiting()()
{
  uint64_t v1 = v0;
  uint64_t v28 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v28);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Participant(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBE8], v11);
  char v15 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v17 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *(void *)(*v17 + 16);
  if (v18)
  {
    unint64_t v19 = 0;
    while (v19 < *(void *)(*v17 + 16))
    {
      unint64_t v20 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v21 = *(void *)(v5 + 72) * v19;
      _s15ConversationKit11ParticipantVWOcTm_19(*v17 + v20 + v21, (uint64_t)v10);
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v10, (uint64_t)v3);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v22 = type metadata accessor for Date();
        uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v3, v22);
        Participant.asFullyWaited()(v23);
        swift_beginAccess();
        uint64_t v24 = *v17;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v17 = v24;
        if ((result & 1) == 0)
        {
          uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
          uint64_t v24 = result;
          *uint64_t v17 = result;
        }
        if (v19 >= *(void *)(v24 + 16)) {
          goto LABEL_14;
        }
        outlined assign with copy of Participant.State((uint64_t)v7, v24 + v20 + v21);
        swift_endAccess();
        uint64_t v25 = type metadata accessor for Participant;
        uint64_t v26 = (uint64_t)v7;
      }
      else
      {
        uint64_t v25 = type metadata accessor for Participant.State;
        uint64_t v26 = (uint64_t)v3;
      }
      _s15ConversationKit11ParticipantVWOhTm_13(v26, (void (*)(void))v25);
      ++v19;
      uint64_t result = _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
      if (v18 == v19) {
        return result;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  return result;
}

void (*ConversationController.isSplitView.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_16_2((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_32_2();
  return ConversationController.isSplitView.modify;
}

void ConversationController.isSplitView.modify(uint64_t a1, uint64_t a2)
{
}

uint64_t ConversationController.conversationUUID.didset(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID;
  swift_beginAccess();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v3, (uint64_t)&v20[-v6], (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v7 = type metadata accessor for UUID();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&v20[-v6], 1, v7);
  uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)&v20[-v6], (uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](updated);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(a1, (uint64_t)&v20[-v6], (uint64_t *)&demangling cache variable for type metadata for UUID?);
  BOOL v10 = EnumTagSinglePayload == 1 && __swift_getEnumTagSinglePayload((uint64_t)&v20[-v6], 1, v7) != 1;
  uint64_t v11 = outlined destroy of SystemUpdateNotice?((uint64_t)&v20[-v6], (uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = outlined init with copy of RecentCallDetailControllerFactoryProtocol?(a1, (uint64_t)&v20[-v6], (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (v10)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v20[-v6], (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  else
  {
    MEMORY[0x1F4188790](v12);
    unint64_t v13 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v3, (uint64_t)&v20[-v13], (uint64_t *)&demangling cache variable for type metadata for UUID?);
    int v14 = __swift_getEnumTagSinglePayload((uint64_t)&v20[-v13], 1, v7);
    uint64_t v15 = outlined destroy of SystemUpdateNotice?((uint64_t)&v20[-v13], (uint64_t *)&demangling cache variable for type metadata for UUID?);
    MEMORY[0x1F4188790](v15);
    outlined init with take of AspectRatio?((uint64_t)&v20[-v6], (uint64_t)&v20[-v13], (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (v14 == 1 || __swift_getEnumTagSinglePayload((uint64_t)&v20[-v13], 1, v7) != 1) {
      return outlined destroy of SystemUpdateNotice?((uint64_t)&v20[-v13], (uint64_t *)&demangling cache variable for type metadata for UUID?);
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)&v20[-v13], (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  uint64_t v16 = (void (**)(void))(v1
                                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *v16;
  if (*v16)
  {
    swift_retain();
    char active = ConversationController.isTrackingActiveConversation.getter();
    v18(active & 1);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v18);
  }
  return result;
}

uint64_t ConversationController.conversationUUID.setter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID;
  swift_beginAccess();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v6, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  swift_beginAccess();
  outlined assign with copy of UUID?(a1, v6);
  swift_endAccess();
  ConversationController.conversationUUID.didset((uint64_t)v5);
  outlined destroy of SystemUpdateNotice?(a1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  return outlined destroy of SystemUpdateNotice?((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
}

uint64_t ConversationController.videoMessageConversationUUID.getter()
{
  return ConversationController.videoMessageConversationUUID.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageConversationUUID, (uint64_t)&demangling cache variable for type metadata for UUID?, (uint64_t (*)(uint64_t))outlined init with copy of RecentCallDetailControllerFactoryProtocol?);
}

uint64_t ConversationController.callWaitingUUIDs.getter()
{
  return ParticipantsCollectionViewDataSource.onlineParticipants.getter();
}

uint64_t key path setter for ConversationController.mostRecentActiveConversation : ConversationController(uint64_t a1)
{
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(a1, (uint64_t)v2, &demangling cache variable for type metadata for Conversation?);
  return ConversationController.mostRecentActiveConversation.setter((uint64_t)v2);
}

uint64_t ConversationController.mostRecentActiveConversation.setter(uint64_t a1)
{
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(a1, (uint64_t)v5, &demangling cache variable for type metadata for Conversation?);
  OUTLINED_FUNCTION_0_3();
  (*(void (**)(unsigned char *))(v1 + 296))(v5);
  uint64_t v2 = OUTLINED_FUNCTION_34_9();
  return outlined destroy of SystemUpdateNotice?(v2, v3);
}

uint64_t ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame];
  swift_bridgeObjectRetain();
  uint64_t v5 = specialized Set.subtracting(_:)(a1, v4);
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = specialized Set.subtracting(_:)(v6, a1);
  swift_bridgeObjectRelease();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C3769620;
  uint64_t v31 = v5;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<UUID>);
  uint64_t v9 = String.init<A>(reflecting:)();
  uint64_t v11 = v10;
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v12 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v8 + 64) = v12;
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.error.getter();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C3769620;
  swift_bridgeObjectRetain();
  uint64_t v14 = String.init<A>(reflecting:)();
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = v12;
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v15;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void (**)(void))&v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange];
  swift_beginAccess();
  uint64_t v17 = *v16;
  if (*v16)
  {
    swift_retain();
    ConversationController.isWaitingOnFirstRemoteFrame.getter();
    v17(v18 & 1);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v17);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C37696D0;
  *(void *)(inited + 32) = 0xD000000000000025;
  *(void *)(inited + 40) = 0x80000001C37A4930;
  unint64_t v20 = &v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  uint64_t v21 = *((void *)v20 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v21 + 200);
  *(void *)(inited + 72) = type metadata accessor for UUID();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
  swift_unknownObjectRetain();
  v23(ObjectType, v21);
  swift_unknownObjectRelease();
  *(void *)(inited + 80) = 0xD000000000000021;
  *(void *)(inited + 88) = 0x80000001C37A4960;
  ConversationController.isWaitingOnFirstRemoteFrame.getter();
  *(void *)(inited + 120) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 96) = v24 & 1;
  Dictionary.init(dictionaryLiteral:)();
  if (v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] == 1)
  {
    id v25 = objc_msgSend(self, sel_defaultCenter);
    if (one-time initialization token for DidChangeIsWaitingOnFirstFrameNotification != -1) {
      swift_once();
    }
    uint64_t v26 = static ConversationController.DidChangeIsWaitingOnFirstFrameNotification;
    specialized _dictionaryUpCast<A, B, C, D>(_:)();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    outlined bridged method (mnnbnn) of @objc NSNotificationCenter.post(name:object:userInfo:)(v26, 0, v28, v25);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = v2;
  specialized Sequence.forEach(_:)(v7, v29);
  swift_bridgeObjectRelease();
  specialized Sequence.forEach(_:)(v31, v29);
  return swift_bridgeObjectRelease();
}

uint64_t specialized Set.subtracting(_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) <= *(void *)(a2 + 16) >> 3)
  {
    specialized Set._subtract<A>(_:)(a1);
    return a2;
  }
  else
  {
    return specialized _NativeSet.subtracting<A>(_:)(a1, a2);
  }
}

uint64_t closure #2 in ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v36 = (void *)static OS_os_log.conversationKit;
  int v35 = static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C3769620;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v32[1] = v32;
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v8 = v33;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  v34(v6, a1, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  uint64_t v9 = specialized >> prefix<A>(_:)((uint64_t)v6);
  uint64_t v11 = v10;
  outlined destroy of SystemUpdateNotice?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v3 + 32) = v9;
  *(void *)(v3 + 40) = v11;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = swift_unknownObjectWeakInit();
  uint64_t v36 = v32;
  uint64_t v14 = *(void *)(v33 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34(v15, a1, v7);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v16, v15, v7);
  *(void *)(v18 + v17) = v12;
  aBlock[4] = partial apply for closure #1 in closure #2 in ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  void aBlock[3] = &block_descriptor_1012;
  _Block_copy(aBlock);
  uint64_t v19 = type metadata accessor for DispatchWorkItemFlags();
  MEMORY[0x1F4188790](v19);
  aBlock[7] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  uint64_t v20 = DispatchWorkItem.init(flags:block:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  uint64_t v21 = swift_retain();
  specialized Dictionary._Variant.setValue(_:forKey:)(v21, a1);
  swift_endAccess();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v22 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v23 = type metadata accessor for DispatchTime();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)v32 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)v32 - v28;
  static DispatchTime.now()();
  MEMORY[0x1C8772E20](v29, 3.0);
  int v30 = *(void (**)(char *, uint64_t))(v24 + 8);
  v30(v29, v23);
  MEMORY[0x1C8773B20](v27, v20);
  swift_release();

  return ((uint64_t (*)(char *, uint64_t))v30)(v27, v23);
}

void closure #1 in closure #2 in ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v18 = static OS_os_log.conversationKit;
  int v17 = static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C3769620;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))((char *)v16 - v7, a1, v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v16 - v7, 0, 1, v8);
  uint64_t v9 = specialized >> prefix<A>(_:)((uint64_t)v16 - v7);
  v16[1] = a1;
  uint64_t v11 = v10;
  outlined destroy of SystemUpdateNotice?((uint64_t)v16 - v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v4 + 32) = v9;
  *(void *)(v4 + 40) = v11;
  os_log(_:dso:log:type:_:)();
  uint64_t v12 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = (char *)v16 - v7;
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x1C8776240](v3);
  if (v14)
  {
    uint64_t v15 = (void *)v14;
    uint64_t v19 = *(void *)(v14
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame);
    swift_bridgeObjectRetain();
    specialized Set._Variant.remove(_:)();
    outlined destroy of SystemUpdateNotice?((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.setter(v19);
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v8);
    outlined destroy of SystemUpdateNotice?((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
}

uint64_t ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame) = a1;
  ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset(v2);
  return swift_bridgeObjectRelease();
}

uint64_t ConversationController.localVideoRecordingTransactionID.getter()
{
  return OUTLINED_FUNCTION_23_0();
}

void ConversationController.description.getter()
{
  OUTLINED_FUNCTION_31();
  uint64_t ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(name: String, value: Any?)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3775280;
  *(void *)(inited + 32) = 1701080941;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(unsigned char *)(inited + 48) = v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
  *(void *)(inited + 72) = &type metadata for ConversationController.ControlsMode;
  *(void *)(inited + 80) = 0xD000000000000011;
  OUTLINED_FUNCTION_383_0();
  *(void *)(v3 + 88) = v4;
  uint64_t v5 = (uint64_t *)&v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
  OUTLINED_FUNCTION_2();
  uint64_t v6 = *v5;
  type metadata accessor for TUConversationState(0);
  *(void *)(inited + 96) = v6;
  *(void *)(inited + 120) = v7;
  *(void *)(inited + 128) = 0xD000000000000010;
  OUTLINED_FUNCTION_383_0();
  *(void *)(inited + 136) = v8;
  uint64_t v9 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  OUTLINED_FUNCTION_2();
  *(void *)(inited + 168) = type metadata accessor for Participant(0);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 144));
  _s15ConversationKit11ParticipantVWOcTm_19(v9, (uint64_t)boxed_opaque_existential_1);
  *(void *)(inited + 176) = 0xD000000000000012;
  *(void *)(inited + 184) = 0x80000001C37B4AB0;
  uint64_t v11 = (uint64_t *)&v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  OUTLINED_FUNCTION_2();
  uint64_t v12 = *v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  *(void *)(inited + 192) = v12;
  *(void *)(inited + 216) = v13;
  *(void *)(inited + 224) = 0xD000000000000011;
  OUTLINED_FUNCTION_383_0();
  *(void *)(inited + 232) = v14;
  uint64_t v15 = &v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
  OUTLINED_FUNCTION_2();
  char v16 = v15[16];
  *(_OWORD *)(inited + 240) = *(_OWORD *)v15;
  *(unsigned char *)(inited + 256) = v16;
  *(void *)(inited + 264) = &type metadata for BroadcastingState;
  *(void *)(inited + 272) = 1819042147;
  *(void *)(inited + 280) = 0xE400000000000000;
  int v17 = (uint64_t *)&v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  OUTLINED_FUNCTION_2();
  uint64_t v18 = *v17;
  uint64_t v19 = swift_getObjectType();
  *(void *)(inited + 288) = v18;
  *(void *)(inited + 312) = v19;
  *(void *)(inited + 320) = 0xD000000000000010;
  OUTLINED_FUNCTION_383_0();
  *(void *)(inited + 328) = v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v22 = OUTLINED_FUNCTION_8(v21);
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_2();
  uint64_t v23 = OUTLINED_FUNCTION_303_1();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v23, v24, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v25 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_33_0(0xD000000000000010, 1, v25);
  if (v26)
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    outlined destroy of SystemUpdateNotice?(0xD000000000000010, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(_OWORD *)(inited + 336) = 0u;
    *(_OWORD *)(inited + 352) = 0u;
  }
  else
  {
    *(void *)(inited + 360) = v25;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 336));
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_46();
    v27();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  v29[3] = ObjectType;
  v29[0] = v0;
  uint64_t v28 = v0;
  String.init(namedPropertyValues:for:)(inited, v29);
  OUTLINED_FUNCTION_28();
}

void ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_31();
  uint64_t v51 = v25;
  uint64_t v52 = v23;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v49 = v30;
  uint64_t v50 = v31;
  uint64_t v32 = *(void *)(v28 + 24);
  uint64_t v33 = *(void *)(v28 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v28, v32);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v34);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_458();
  v35();
  uint64_t v37 = *(void *)(v27 + 24);
  uint64_t v36 = *(void *)(v27 + 32);
  uint64_t v38 = OUTLINED_FUNCTION_102();
  __swift_mutable_project_boxed_opaque_existential_1(v38, v39);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v40);
  OUTLINED_FUNCTION_243_1(v41, a21);
  OUTLINED_FUNCTION_458();
  v42();
  uint64_t ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_405(v49, v50, v51, v24, v44, v45, v46, v47, v48, a22, v52, v32, ObjectType, v37, v33, a23, v36);
  __swift_destroy_boxed_opaque_existential_1(v27);
  __swift_destroy_boxed_opaque_existential_1(v29);
  OUTLINED_FUNCTION_28();
}

void closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
  OUTLINED_FUNCTION_15_17();
  OUTLINED_FUNCTION_268_1(v1, v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_284_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_241_1();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_124();
  v6();
  OUTLINED_FUNCTION_269_1();
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_286_0();
  uint64_t v27 = (uint64_t)v0;
  long long v28 = xmmword_1C376E330;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t v21 = static Colors.ParticipantGradients.gradient(for:)(v0);
  uint64_t v9 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v10 = OUTLINED_FUNCTION_65_13(v9);
  v11(v10);
  if (v25)
  {
    OUTLINED_FUNCTION_229_2();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v24, &demangling cache variable for type metadata for Conversation?);
  }
  type metadata accessor for ParticipantContactDetailsCache();
  swift_getObjectType();
  OUTLINED_FUNCTION_434();
  uint64_t v12 = OUTLINED_FUNCTION_164_4();
  OUTLINED_FUNCTION_450(v12, v14, v13 | 0x10000u, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24[0], v24[1], v24[2], v25, v26, v27, v28,
    *((uint64_t *)&v28 + 1),
    v29,
    v30);
  OUTLINED_FUNCTION_14_17();
}

void closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
  OUTLINED_FUNCTION_15_17();
  OUTLINED_FUNCTION_268_1(v1, v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_284_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_241_1();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_124();
  v6();
  OUTLINED_FUNCTION_269_1();
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_286_0();
  uint64_t v27 = (uint64_t)v0;
  long long v28 = xmmword_1C376E330;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t v21 = static Colors.ParticipantGradients.gradient(for:)(v0);
  uint64_t v9 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v10 = OUTLINED_FUNCTION_65_13(v9);
  v11(v10);
  if (v25)
  {
    OUTLINED_FUNCTION_229_2();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v24, &demangling cache variable for type metadata for Conversation?);
  }
  type metadata accessor for ParticipantContactDetailsCache();
  swift_getObjectType();
  OUTLINED_FUNCTION_434();
  uint64_t v12 = OUTLINED_FUNCTION_164_4();
  OUTLINED_FUNCTION_450(v12, v14, v13 | 0x1010000u, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24[0], v24[1], v24[2], v25, v26, v27, v28,
    *((uint64_t *)&v28 + 1),
    v29,
    v30);
  OUTLINED_FUNCTION_14_17();
}

void ConversationController.updateIdentityClaimingAssociations(in:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  uint64_t v6 = OUTLINED_FUNCTION_8(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v72 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.State?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2_3();
  uint64_t v75 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v12 = OUTLINED_FUNCTION_8(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_2_3();
  uint64_t v77 = v13;
  uint64_t v78 = OUTLINED_FUNCTION_128_5();
  OUTLINED_FUNCTION_5_3();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_10_5();
  uint64_t v74 = v17;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_147_5();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v64 - v20;
  uint64_t v22 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v23 = *v22;
  if (!*(void *)(*v22 + 16))
  {
LABEL_35:
    OUTLINED_FUNCTION_28();
    return;
  }
  unint64_t v24 = 0;
  uint64_t v25 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v26 = *(void *)(v15 + 72);
  uint64_t v79 = (v25 + 32) & ~v25;
  uint64_t v67 = v25 | 7;
  uint64_t v68 = v79 + v26;
  uint64_t v66 = &v81;
  long long v64 = xmmword_1C3769620;
  uint64_t v76 = v1;
  while (1)
  {
    _s15ConversationKit11ParticipantVWOcTm_19(v23 + v79 + v26 * v24, (uint64_t)v21);
    uint64_t v27 = (void *)ConversationController.activeParticipant(correspondingTo:in:)((uint64_t)v21, v4);
    if (!v27)
    {
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
LABEL_12:
      ++v24;
      goto LABEL_34;
    }
    long long v28 = v27;
    id v29 = ConversationController.identityClaimingAssociationRelationship(for:in:)(v27, v4);
    if (v30 == 255 || v30 == 1)
    {
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);

      goto LABEL_12;
    }
    if (!v30)
    {
      uint64_t v31 = v77;
      ConversationController.remoteParticipant(with:)((uint64_t)v29, v77);
      OUTLINED_FUNCTION_33_0(v31, 1, v78);
      if (v32)
      {
        outlined destroy of SystemUpdateNotice?(v31, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        uint64_t v33 = v76;
        _s15ConversationKit11ParticipantVWObTm_6(v31, v76);
        ConversationController.indexOfRemoteParticipant(with:)();
        if (v35)
        {
          uint64_t v54 = v33;
        }
        else
        {
          unint64_t v71 = v34;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
          uint64_t v36 = swift_allocObject();
          *(_OWORD *)(v36 + 16) = v64;
          _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v21, v36 + v79);
          specialized Set.init(_nonEmptyArrayLiteral:)();
          uint64_t v73 = v37;
          uint64_t v38 = type metadata accessor for Participant.State(0);
          OUTLINED_FUNCTION_25_1(v75, v39, v40, v38);
          uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          int v70 = &v64;
          uint64_t v42 = OUTLINED_FUNCTION_8(v41);
          MEMORY[0x1F4188790](v42);
          OUTLINED_FUNCTION_60();
          uint64_t v43 = type metadata accessor for UUID();
          uint64_t v69 = v36;
          OUTLINED_FUNCTION_25_1(v36, v44, v45, v43);
          uint64_t v80 = 1;
          uint64_t v46 = (uint64_t)v66;
          *(_OWORD *)uint64_t v66 = 0u;
          *(_OWORD *)(v46 + 16) = 0u;
          uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
          uint64_t v48 = v72;
          OUTLINED_FUNCTION_25_1(v72, v49, v50, v47);
          LOBYTE(v62) = 2;
          Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v75, v36, 2, (uint64_t)&v80, 0, 0, 1, v48, v62, 0, v73, v63, v64, *((uint64_t *)&v64 + 1), v65, (uint64_t)v66, v67, v68, v69,
            (uint64_t)v70,
            v71,
            v72,
            v73);
          outlined destroy of SystemUpdateNotice?(v48, &demangling cache variable for type metadata for Participant.CountdownInfo??);
          outlined destroy of SystemUpdateNotice?(v69, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          outlined destroy of SystemUpdateNotice?(v75, (uint64_t *)&demangling cache variable for type metadata for Participant.State?);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_6_1();
          uint64_t v51 = *v22;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v22 = v51;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v51 = specialized _ArrayBuffer._consumeAndCreateNew()();
            *uint64_t v22 = v51;
          }
          if ((v71 & 0x8000000000000000) != 0) {
            goto LABEL_37;
          }
          if (v71 >= *(void *)(v51 + 16)) {
            goto LABEL_38;
          }
          uint64_t v53 = v74;
          outlined assign with copy of Participant.State(v74, v51 + v79 + v71 * v26);
          swift_endAccess();
          _s15ConversationKit11ParticipantVWOhTm_13(v53, (void (*)(void))type metadata accessor for Participant);
          uint64_t v54 = v76;
        }
        _s15ConversationKit11ParticipantVWOhTm_13(v54, (void (*)(void))type metadata accessor for Participant);
      }
    }
    OUTLINED_FUNCTION_6_1();
    uint64_t v55 = *v22;
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v22 = v55;
    if ((v56 & 1) == 0)
    {
      uint64_t v55 = specialized _ArrayBuffer._consumeAndCreateNew()();
      *uint64_t v22 = v55;
    }
    unint64_t v57 = *(void *)(v55 + 16);
    if (v24 >= v57) {
      break;
    }
    uint64_t v58 = v4;
    unint64_t v59 = v57 - 1;
    unint64_t v60 = v55 + v79 + v26 * v24;
    _s15ConversationKit11ParticipantVWOhTm_13(v60, (void (*)(void))type metadata accessor for Participant);
    if ((uint64_t)(v59 - v24) < 0) {
      goto LABEL_39;
    }
    if (v26 > 0 || v60 >= v60 + v26 + (v59 - v24) * v26)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v26)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(v55 + 16) = v59;
    *uint64_t v22 = v55;
    swift_endAccess();

    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
    uint64_t v4 = v58;
LABEL_34:
    uint64_t v23 = *v22;
    if (v24 >= *(void *)(*v22 + 16)) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  OUTLINED_FUNCTION_1_7();
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t closure #4 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_2();
  unint64_t result = MEMORY[0x1C8776240](a1 + 16);
  if (result)
  {
    uint64_t v6 = (char *)result;
    uint64_t v7 = (uint64_t *)(result + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    OUTLINED_FUNCTION_2();
    if (*(void *)(*v7 + 16) == 1)
    {
      specialized Collection.first.getter(*v7, v1);
      uint64_t v8 = type metadata accessor for Participant(0);
      OUTLINED_FUNCTION_33_0(v1, 1, v8);
      if (v9)
      {

        outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
        return 0;
      }
      uint64_t v10 = *(void **)(v1 + *(int *)(v8 + 28));
      if (v10)
      {
        id v11 = v10;
        _s15ConversationKit11ParticipantVWOhTm_13(v1, (void (*)(void))type metadata accessor for Participant);
        uint64_t v12 = *(uint64_t (**)(id))(**(void **)&v6[OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker]
                                           + 224);
        swift_retain();
        uint64_t v13 = v12(v11);

        swift_release();
        if ((v13 & 0xFE) != 2) {
          return ((v13 & 0xFFFFFFFFFFFFuLL) >> 40) & 1;
        }
        return 0;
      }
      _s15ConversationKit11ParticipantVWOhTm_13(v1, (void (*)(void))type metadata accessor for Participant);
    }

    return 0;
  }
  return result;
}

Swift::Void __swiftcall ConversationController.updateIDSStatusForVideoMessaging()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = OUTLINED_FUNCTION_89_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  uint64_t v7 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  uint64_t v8 = *(void *)(v7 + 8);
  swift_getObjectType();
  char v9 = *(uint64_t (**)(uint64_t))(v8 + 184);
  swift_unknownObjectRetain();
  uint64_t v10 = OUTLINED_FUNCTION_228_0();
  LODWORD(v8) = v9(v10);
  swift_unknownObjectRelease();
  if (v8 == 3)
  {
    uint64_t v11 = *(void *)(v7 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 120);
    swift_unknownObjectRetain();
    LOBYTE(v11) = v13(ObjectType, v11);
    swift_unknownObjectRelease();
    if (v11)
    {
      uint64_t v14 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
      OUTLINED_FUNCTION_2();
      if (*(void *)(*v14 + 16) == 1)
      {
        specialized Collection.first.getter(*v14, v1);
        uint64_t v15 = OUTLINED_FUNCTION_70_3();
        OUTLINED_FUNCTION_33_0(v15, v16, v5);
        if (v17)
        {
          outlined destroy of SystemUpdateNotice?(v1, &demangling cache variable for type metadata for Participant?);
        }
        else
        {
          uint64_t v18 = OUTLINED_FUNCTION_24_2();
          _s15ConversationKit11ParticipantVWObTm_6(v18, v19);
          ConversationController.updateVideoMessagingIDSStatusForParticipant(_:)();
          _s15ConversationKit11ParticipantVWOhTm_13(v2, (void (*)(void))type metadata accessor for Participant);
        }
      }
    }
  }
  OUTLINED_FUNCTION_28();
}

Swift::Void __swiftcall ConversationController.setupScreenSharingSessionCallbacks()()
{
  OUTLINED_FUNCTION_9_83();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession;
  OUTLINED_FUNCTION_6_1();
  if (*(void *)(v1 + 24))
  {
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_72_9();
    OUTLINED_FUNCTION_161_4();
    OUTLINED_FUNCTION_60_4();
    OUTLINED_FUNCTION_68_12();
    v2();
    if (*(void *)(v1 + 24))
    {
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_72_9();
      OUTLINED_FUNCTION_161_4();
      OUTLINED_FUNCTION_60_4();
      OUTLINED_FUNCTION_68_12();
      v3();
      if (*(void *)(v1 + 24))
      {
        OUTLINED_FUNCTION_20();
        OUTLINED_FUNCTION_72_9();
        OUTLINED_FUNCTION_161_4();
        OUTLINED_FUNCTION_60_4();
        OUTLINED_FUNCTION_68_12();
        v4();
        if (*(void *)(v1 + 24))
        {
          OUTLINED_FUNCTION_20();
          OUTLINED_FUNCTION_72_9();
          OUTLINED_FUNCTION_161_4();
          OUTLINED_FUNCTION_60_4();
          OUTLINED_FUNCTION_68_12();
          v5();
          if (*(void *)(v1 + 24))
          {
            OUTLINED_FUNCTION_20();
            OUTLINED_FUNCTION_72_9();
            OUTLINED_FUNCTION_161_4();
            OUTLINED_FUNCTION_60_4();
            OUTLINED_FUNCTION_68_12();
            v6();
            if (*(void *)(v1 + 24))
            {
              OUTLINED_FUNCTION_20();
              OUTLINED_FUNCTION_72_9();
              uint64_t v7 = OUTLINED_FUNCTION_34_9();
              __swift_mutable_project_boxed_opaque_existential_1(v7, v8);
              OUTLINED_FUNCTION_97_7();
              v9();
            }
          }
        }
      }
    }
  }
  swift_endAccess();
  OUTLINED_FUNCTION_10_73();
}

uint64_t ConversationController.updateScreenSharingSession(with:)(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession;
  OUTLINED_FUNCTION_2();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v3, (uint64_t)&v23, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
  if (!v24) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)&v23, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
  }
  outlined init with take of Notice(&v23, (uint64_t)v25);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_481();
  unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = v8 - (v6 & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v10 = objc_msgSend(a1, sel_windowUUID);
    uint64_t v11 = (char *)&v22 - v7;
    if (MEMORY[0x1F4188790](v10))
    {
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v12 = 1;
    }
    uint64_t v17 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload((uint64_t)v11, v12, 1, v17);
    uint64_t v18 = OUTLINED_FUNCTION_23_0();
    outlined init with take of AspectRatio?(v18, v19, v20);
  }
  else
  {
    uint64_t v14 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_25_1(v9, v15, v16, v14);
  }
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  OUTLINED_FUNCTION_34_9();
  OUTLINED_FUNCTION_332_0();
  v21();
  outlined destroy of SystemUpdateNotice?(v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

void ConversationController.fetchExistingScreenSharingAttributes()()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_257_1();
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_2_1();
  v1();
  OUTLINED_FUNCTION_319_0();
  uint64_t v3 = (void *)v2();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_50_1();
  v4();
  uint64_t v5 = OUTLINED_FUNCTION_20();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in ConversationController.fetchExistingScreenSharingAttributes();
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
  void aBlock[3] = &block_descriptor_1061;
  uint64_t v6 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v3, sel_getLatestRemoteScreenShareAttributesWithCompletionHandler_, v6);
  _Block_release(v6);
}

id ConversationController.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  OUTLINED_FUNCTION_49_11();
  if (v2)
  {
    uint64_t v3 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    OUTLINED_FUNCTION_2();
    outlined init with copy of Conversation(v3, (uint64_t)v8);
    uint64_t v4 = swift_allocObject();
    outlined init with take of Notice(v8, v4 + 16);
    v7[4] = partial apply for closure #1 in ConversationController.deinit;
    v7[5] = v4;
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 1107296256;
    v7[2] = thunk for @escaping @callee_guaranteed () -> ();
    void v7[3] = &block_descriptor_108_0;
    uint64_t v5 = _Block_copy(v7);
    swift_release();
    TUDispatchMainIfNecessary();
    _Block_release(v5);
  }
  ConversationController.unregisterForMoments()();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v9.receiver = v0;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_dealloc);
}

void closure #1 in ConversationController.deinit(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  id v3 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
  objc_msgSend(v3, sel_stopPreview);
}

Swift::Void __swiftcall ConversationController.unregisterForMoments()()
{
  OUTLINED_FUNCTION_31();
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider);
  if (v3)
  {
    *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider) = 0;
    id v4 = ConversationController.momentsController.getter();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v5 = OUTLINED_FUNCTION_26();
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v3;
    _OWORD v14[4] = partial apply for closure #1 in ConversationController.unregisterForMoments();
    v14[5] = v5;
    v14[0] = MEMORY[0x1E4F143A8];
    OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
    v14[2] = thunk for @escaping @callee_guaranteed () -> ();
    void v14[3] = &block_descriptor_114;
    uint64_t v6 = _Block_copy(v14);
    id v12 = v3;
    id v11 = v4;
    swift_release();
    type metadata accessor for DispatchQoS();
    OUTLINED_FUNCTION_425();
    OUTLINED_FUNCTION_5_3();
    MEMORY[0x1F4188790](v7);
    OUTLINED_FUNCTION_133_6();
    type metadata accessor for DispatchWorkItemFlags();
    OUTLINED_FUNCTION_423();
    OUTLINED_FUNCTION_5_3();
    MEMORY[0x1F4188790](v8);
    OUTLINED_FUNCTION_118();
    v14[0] = MEMORY[0x1E4FBC860];
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    OUTLINED_FUNCTION_226_0();
    MEMORY[0x1C8773BA0](0, v1, v2, v6);
    _Block_release(v6);

    OUTLINED_FUNCTION_4_1();
    v9();
    OUTLINED_FUNCTION_209_3();
    OUTLINED_FUNCTION_50_1();
    v10();
    OUTLINED_FUNCTION_10_80();
  }
  OUTLINED_FUNCTION_28();
}

void ConversationController.indexOfRemoteParticipant(with:)()
{
  OUTLINED_FUNCTION_11_49();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    type metadata accessor for Participant(0);
    OUTLINED_FUNCTION_5_7();
    uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v7 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v3; ++i)
    {
      if (static UUID.== infix(_:_:)()) {
        break;
      }
      v5 += v7;
    }
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_10_27();
}

Swift::Int_optional __swiftcall ConversationController.indexOfRemoteIDSParticipant(with:)(Swift::UInt64 with)
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_5_3();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_62();
  objc_super v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v10 = *v9;
  uint64_t v11 = *(void *)(*v9 + 16);
  if (v11)
  {
    OUTLINED_FUNCTION_22_0();
    uint64_t v13 = v10 + v12;
    uint64_t v14 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v11; ++i)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v13, v2);
      uint64_t v16 = v2 + *(int *)(v5 + 28);
      if (!*(void *)v16 || (*(unsigned char *)(v16 + 16) & 1) != 0)
      {
        _s15ConversationKit11ParticipantVWOhTm_13(v2, (void (*)(void))type metadata accessor for Participant);
      }
      else
      {
        uint64_t v17 = *(void *)(v16 + 8);
        _s15ConversationKit11ParticipantVWOhTm_13(v2, (void (*)(void))type metadata accessor for Participant);
        if (v17 == v4) {
          break;
        }
      }
      v13 += v14;
    }
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28();
  result.value = v18;
  result.is_nil = v19;
  return result;
}

uint64_t ConversationController.participant(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Participant(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = *(void *)(*v9 + 16);
  if (v11)
  {
    uint64_t v20 = a2;
    uint64_t v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v13 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v12, (uint64_t)v8);
      uint64_t v14 = &v8[*(int *)(v5 + 28)];
      if (*(void *)v14)
      {
        id v15 = (id)*((void *)v14 + 1);
        char v16 = v14[16] & 1;
      }
      else
      {
        id v15 = 0;
        char v16 = 1;
      }
      id v17 = objc_msgSend(a1, sel_identifier);
      if ((v16 & 1) == 0 && v15 == v17) {
        break;
      }
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
      v12 += v13;
      if (!--v11)
      {
        uint64_t v18 = 1;
        a2 = v20;
        goto LABEL_12;
      }
    }
    a2 = v20;
    _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v8, v20);
    uint64_t v18 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = 1;
  }
LABEL_12:
  __swift_storeEnumTagSinglePayload(a2, v18, 1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t ConversationController.participant(fromMemberAssociation:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Participant(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    v22[1] = v10;
    uint64_t v23 = a2;
    uint64_t v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v13 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v12, (uint64_t)v8);
      uint64_t v14 = *(void **)&v8[*(int *)(v5 + 28)];
      if (v14) {
        id v15 = v14;
      }
      id v16 = objc_msgSend(a1, sel_handle);
      id v17 = v16;
      if (!v14) {
        break;
      }
      if (!v16)
      {
        id v17 = v14;
LABEL_12:

        goto LABEL_13;
      }
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      id v18 = v14;
      char v19 = static NSObject.== infix(_:_:)();

      if (v19) {
        goto LABEL_16;
      }
LABEL_13:
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
      v12 += v13;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        a2 = v23;
        goto LABEL_17;
      }
    }
    if (!v16)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      a2 = v23;
      _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v8, v23);
      uint64_t v20 = 0;
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = 1;
LABEL_17:
  __swift_storeEnumTagSinglePayload(a2, v20, 1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t ConversationController.remoteParticipant(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Participant(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = *(void *)(*v9 + 16);
  if (v11)
  {
    uint64_t v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v13 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v12, (uint64_t)v8);
      uint64_t v14 = &v8[*(int *)(v5 + 28)];
      if (*(void *)v14)
      {
        if ((v14[16] & 1) == 0 && *((void *)v14 + 1) == a1) {
          break;
        }
      }
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
      v12 += v13;
      if (!--v11) {
        goto LABEL_9;
      }
    }
    _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v8, a2);
    uint64_t v15 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v15 = 1;
  }
  __swift_storeEnumTagSinglePayload(a2, v15, 1, v5);
  return swift_bridgeObjectRelease();
}

id ConversationController.identityClaimingAssociationRelationship(for:in:)(void *a1, void *a2)
{
  swift_getObjectType();
  id v4 = objc_msgSend(a1, sel_handle);
  uint64_t v5 = static ConversationController.member(correspondingTo:in:)(v4, a2);

  if (v5)
  {
    id v6 = objc_msgSend(v5, sel_association);
    if (!v6)
    {
      id v18 = 0;
      uint64_t v7 = v5;
LABEL_31:

      return v18;
    }
    uint64_t v7 = v6;
    if (objc_msgSend(v6, sel_type) == (id)2)
    {
      if ((objc_msgSend(v7, sel_isPrimary) & 1) == 0)
      {
        id v19 = objc_msgSend(v7, sel_identifier);
        uint64_t v20 = a2[3];
        uint64_t v21 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v20);
        if (v19 == (id)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 232))(v20, v21)) {
          id v18 = 0;
        }
        else {
          id v18 = objc_msgSend(v7, sel_identifier);
        }
        goto LABEL_30;
      }
      id v8 = objc_msgSend(v7, sel_handle);
      objc_super v9 = static ConversationController.member(correspondingTo:in:)(v8, a2);

      if (v9)
      {
        id v10 = objc_msgSend(v9, sel_association);
        if (!v10)
        {
          uint64_t v11 = v5;

          id v18 = 0;
          uint64_t v5 = v7;
LABEL_29:
          uint64_t v7 = v11;
          goto LABEL_30;
        }
        uint64_t v11 = v10;
        uint64_t v12 = a2[3];
        uint64_t v13 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v12);
        uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 168))(v12, v13);
        if (v14)
        {
          uint64_t v15 = (void *)v14;
          if (objc_msgSend(v9, sel_isEqualToMember_, v14))
          {
            id v16 = objc_msgSend(a1, sel_identifier);
            id v17 = objc_msgSend(v11, sel_identifier);

            if (v16 == v17) {
              goto LABEL_21;
            }
          }
          else
          {
          }
        }
        id v23 = objc_msgSend(v11, sel_identifier);
        uint64_t v24 = a2[3];
        uint64_t v25 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v24);
        if ((id)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 232))(v24, v25) == v23)
        {
LABEL_21:

          id v18 = 0;
LABEL_28:
          uint64_t v5 = v9;
          goto LABEL_29;
        }
        if (objc_msgSend(a1, sel_identifier) == v23)
        {
          uint64_t v26 = a2[3];
          uint64_t v27 = a2[4];
          __swift_project_boxed_opaque_existential_1(a2, v26);
          uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 104))(v26, v27);
          id v29 = v7;
          specialized Sequence.first(where:)(v28, v29, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant, 0x1E4FADB90, (uint64_t)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
          uint64_t v7 = v30;
          swift_bridgeObjectRelease();
          if (v7)
          {
            id v18 = objc_msgSend(v7, sel_identifier);

            uint64_t v5 = v11;
            goto LABEL_30;
          }
        }
        else
        {
        }
        id v18 = 0;
        goto LABEL_28;
      }
      id v18 = 0;
      uint64_t v22 = v5;
      uint64_t v5 = v7;
      uint64_t v7 = v22;
    }
    else
    {
      id v18 = 0;
    }
LABEL_30:

    goto LABEL_31;
  }
  return 0;
}

void *static ConversationController.member(correspondingTo:in:)(void *a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  id v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 168))(v4, v5);
  if (!v6) {
    goto LABEL_4;
  }
  uint64_t v7 = v6;
  id v8 = objc_msgSend(v6, sel_handle);
  unsigned __int8 v9 = objc_msgSend(v8, sel_isEqualToHandle_, a1);

  if ((v9 & 1) == 0)
  {

LABEL_4:
    uint64_t v10 = a2[3];
    uint64_t v11 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v10);
    uint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 88))(v10, v11);
    uint64_t v13 = a2[3];
    uint64_t v14 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v13);
    unint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 128))(v13, v14);
    specialized Set.union<A>(_:)(v15, v12);
    id v17 = v16;
    uint64_t v18 = a2[3];
    uint64_t v19 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v18);
    unint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 144))(v18, v19);
    specialized Set.union<A>(_:)(v20, v17);
    specialized Sequence.first(where:)(v21, a1, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    uint64_t v7 = v22;
    swift_bridgeObjectRelease();
  }
  return v7;
}

void closure #2 in ConversationController.update(presentationContexts:forceUpdate:)(void *__src@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  memcpy(__dst, __src, 0x41uLL);
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  Conversation.displayableActiveParticipants.getter(v5, v6);
  specialized Sequence.first(where:)(v7, __dst);
  unsigned __int8 v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    swift_beginAccess();
    specialized Dictionary._Variant.setValue(_:forKey:)();
    swift_endAccess();
    __dst[10] = (id)type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationParticipantPresentationContext);
    id v10 = objc_msgSend(v9, sel_identifier);
    id v11 = __dst[1];
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EC8]), sel_initWithInteger_, __dst[2]);
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EC8]), sel_initWithInteger_, __dst[3]);
    id v14 = TUConversationParticipantPresentationContext.__allocating_init(participantIdentifier:videoQuality:visibility:prominence:spatialPosition:isInCanvas:)((uint64_t)v10, (uint64_t)v11, v12, v13, (char)__dst[8], *(double *)&__dst[4], *(double *)&__dst[5], *(double *)&__dst[6], *(double *)&__dst[7]);
  }
  else
  {
    id v14 = 0;
  }
  *a3 = v14;
}

id TUConversationParticipantPresentationContext.__allocating_init(participantIdentifier:videoQuality:visibility:prominence:spatialPosition:isInCanvas:)(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, double a6, double a7, double a8, double a9)
{
  id v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithParticipantIdentifier_videoQuality_visibility_prominence_spatialPosition_isInCanvas_, a1, a2, a3, a4, a5 & 1, a6, a7, a8, a9);

  return v11;
}

uint64_t ConversationController.postParticipantStateChangeCallbacks(for:updatedFrom:)(uint64_t a1, uint64_t a2)
{
  uint64_t v139 = a2;
  uint64_t v4 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v126 = (uint64_t)v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for Participant(0);
  uint64_t v6 = MEMORY[0x1F4188790](v140);
  id v8 = (char *)v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v131 = (uint64_t)v125 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v135 = (char *)v125 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v130 = (uint64_t)v125 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v129 = (uint64_t)v125 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v128 = (uint64_t)v125 - v18;
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = (char *)v125 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v138 = (uint64_t)v125 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = v2;
  uint64_t v23 = ConversationController.visibleParticipants.getter();
  v142[2] = a1;
  uint64_t v141 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for closure #1 in ParticipantGridViewController.update(participant:broadcastingState:), (uint64_t)v142, v23);
  char v25 = v24;
  swift_bridgeObjectRelease();
  if (v25)
  {
    _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v8);
    v145[0] = 0;
    v145[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(55);
    v124._object = (void *)0x80000001C37BC9E0;
    v124._countAndFlagsBits = 0xD000000000000035;
    String.append(_:)(v124);
    _print_unlocked<A, B>(_:_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v125[0] = 0;
  v125[1] = v4;
  uint64_t v133 = a1;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v127 = static OS_os_log.conversationKit;
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v26 = swift_allocObject();
  long long v134 = xmmword_1C37696D0;
  *(_OWORD *)(v26 + 16) = xmmword_1C37696D0;
  v145[0] = v141;
  uint64_t v27 = String.init<A>(reflecting:)();
  uint64_t v29 = v28;
  uint64_t v30 = MEMORY[0x1E4FBB1A0];
  *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v31 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v26 + 64) = v31;
  *(void *)(v26 + 32) = v27;
  *(void *)(v26 + 40) = v29;
  uint64_t v32 = v133;
  uint64_t v33 = v138;
  _s15ConversationKit11ParticipantVWOcTm_19(v133, v138);
  __swift_storeEnumTagSinglePayload(v33, 0, 1, v140);
  uint64_t v34 = specialized >> prefix<A>(_:)();
  uint64_t v36 = v35;
  outlined destroy of SystemUpdateNotice?(v33, &demangling cache variable for type metadata for Participant?);
  *(void *)(v26 + 96) = v30;
  *(void *)(v26 + 104) = v31;
  unint64_t v137 = v31;
  *(void *)(v26 + 72) = v34;
  *(void *)(v26 + 80) = v36;
  uint64_t v37 = v32;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v38 = v139;
  LOBYTE(v30) = Participant.isActive.getter();
  _s15ConversationKit11ParticipantVWOcTm_19(v32, (uint64_t)v20);
  if (v30)
  {
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v20, (void (*)(void))type metadata accessor for Participant);
    uint64_t v39 = (char *)v132;
    uint64_t v40 = v141;
    uint64_t v41 = (uint64_t)v135;
  }
  else
  {
    char v42 = Participant.isActive.getter();
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v20, (void (*)(void))type metadata accessor for Participant);
    uint64_t v39 = (char *)v132;
    uint64_t v40 = v141;
    uint64_t v41 = (uint64_t)v135;
    if (v42)
    {
      if (Participant.isDestinationTemporary.getter())
      {
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        uint64_t v43 = &v39[OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants];
        swift_beginAccess();
        specialized Sequence.forEach(_:)(0, *(void *)(*(void *)v43 + 16), v39);
        ConversationController.scheduleKickabilityUpdate(for:)(v32);
      }
      uint64_t v127 = static OS_os_log.conversationKit;
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = v134;
      v145[0] = v40;
      uint64_t v45 = String.init<A>(reflecting:)();
      uint64_t v46 = MEMORY[0x1E4FBB1A0];
      unint64_t v48 = v137;
      uint64_t v47 = v138;
      *(void *)(v44 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v44 + 64) = v48;
      *(void *)(v44 + 32) = v45;
      *(void *)(v44 + 40) = v49;
      _s15ConversationKit11ParticipantVWOcTm_19(v37, v47);
      __swift_storeEnumTagSinglePayload(v47, 0, 1, v140);
      uint64_t v50 = specialized >> prefix<A>(_:)();
      uint64_t v52 = v51;
      outlined destroy of SystemUpdateNotice?(v47, &demangling cache variable for type metadata for Participant?);
      *(void *)(v44 + 96) = v46;
      *(void *)(v44 + 104) = v48;
      *(void *)(v44 + 72) = v50;
      *(void *)(v44 + 80) = v52;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      uint64_t v53 = &v39[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive];
      swift_beginAccess();
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))v53;
      uint64_t v38 = v139;
      uint64_t v41 = (uint64_t)v135;
      if (*(void *)v53)
      {
        swift_retain();
        v54(v37, v40);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v54);
      }
    }
  }
  char v55 = Participant.isActive.getter();
  uint64_t v56 = v128;
  _s15ConversationKit11ParticipantVWOcTm_19(v37, v128);
  if (v55)
  {
    char v57 = Participant.isActive.getter();
    _s15ConversationKit11ParticipantVWOhTm_13(v56, (void (*)(void))type metadata accessor for Participant);
    if ((v57 & 1) == 0)
    {
      uint64_t v132 = static OS_os_log.conversationKit;
      uint64_t v58 = swift_allocObject();
      *(_OWORD *)(v58 + 16) = v134;
      v145[0] = v40;
      uint64_t v59 = String.init<A>(reflecting:)();
      uint64_t v60 = MEMORY[0x1E4FBB1A0];
      unint64_t v61 = v137;
      uint64_t v62 = v138;
      *(void *)(v58 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v58 + 64) = v61;
      *(void *)(v58 + 32) = v59;
      *(void *)(v58 + 40) = v63;
      _s15ConversationKit11ParticipantVWOcTm_19(v37, v62);
      __swift_storeEnumTagSinglePayload(v62, 0, 1, v140);
      uint64_t v64 = specialized >> prefix<A>(_:)();
      uint64_t v66 = v65;
      uint64_t v67 = v62;
      uint64_t v40 = v141;
      outlined destroy of SystemUpdateNotice?(v67, &demangling cache variable for type metadata for Participant?);
      *(void *)(v58 + 96) = v60;
      *(void *)(v58 + 104) = v61;
      *(void *)(v58 + 72) = v64;
      *(void *)(v58 + 80) = v66;
      uint64_t v38 = v139;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      uint64_t v68 = &v39[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive];
      swift_beginAccess();
      uint64_t v69 = *(void (**)(uint64_t, uint64_t))v68;
      if (*(void *)v68)
      {
        swift_retain();
        v69(v37, v40);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v69);
      }
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_13(v56, (void (*)(void))type metadata accessor for Participant);
  }
  Participant.screenInfo.getter(v148);
  Participant.screenInfo.getter(v147);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v148, (uint64_t)v145, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v147, (uint64_t)v146, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  if (v145[3] == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v147, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v148, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (v146[3] == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v145, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      goto LABEL_25;
    }
  }
  else
  {
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v145, (uint64_t)v144, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (v146[3] != 1)
    {
      memcpy(v143, v146, 0xD1uLL);
      static Participant.ScreenInfo.== infix(_:_:)();
      char v83 = v82;
      outlined destroy of Participant.ScreenInfo((uint64_t)v143);
      outlined destroy of SystemUpdateNotice?((uint64_t)v147, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v148, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of Participant.ScreenInfo((uint64_t)v144);
      outlined destroy of SystemUpdateNotice?((uint64_t)v145, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      if (v83) {
        goto LABEL_25;
      }
      goto LABEL_22;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v147, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v148, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of Participant.ScreenInfo((uint64_t)v144);
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v145, &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?));
LABEL_22:
  uint64_t v132 = static OS_os_log.conversationKit;
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = v134;
  v145[0] = v40;
  uint64_t v71 = String.init<A>(reflecting:)();
  uint64_t v72 = MEMORY[0x1E4FBB1A0];
  unint64_t v73 = v137;
  uint64_t v74 = v138;
  *(void *)(v70 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v70 + 64) = v73;
  *(void *)(v70 + 32) = v71;
  *(void *)(v70 + 40) = v75;
  _s15ConversationKit11ParticipantVWOcTm_19(v37, v74);
  __swift_storeEnumTagSinglePayload(v74, 0, 1, v140);
  uint64_t v76 = specialized >> prefix<A>(_:)();
  uint64_t v78 = v77;
  uint64_t v79 = v74;
  uint64_t v40 = v141;
  outlined destroy of SystemUpdateNotice?(v79, &demangling cache variable for type metadata for Participant?);
  *(void *)(v70 + 96) = v72;
  *(void *)(v70 + 104) = v73;
  *(void *)(v70 + 72) = v76;
  *(void *)(v70 + 80) = v78;
  uint64_t v38 = v139;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v80 = &v39[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo];
  swift_beginAccess();
  uint64_t v81 = *(void (**)(uint64_t, uint64_t))v80;
  if (*(void *)v80)
  {
    swift_retain();
    v81(v37, v40);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v81);
  }
LABEL_25:
  char v84 = Participant.isPendingAuthorization.getter();
  uint64_t v85 = v129;
  _s15ConversationKit11ParticipantVWOcTm_19(v37, v129);
  if (v84)
  {
    _s15ConversationKit11ParticipantVWOhTm_13(v85, (void (*)(void))type metadata accessor for Participant);
  }
  else
  {
    char v86 = Participant.isPendingAuthorization.getter();
    _s15ConversationKit11ParticipantVWOhTm_13(v85, (void (*)(void))type metadata accessor for Participant);
    if (v86)
    {
      uint64_t v87 = swift_allocObject();
      *(_OWORD *)(v87 + 16) = xmmword_1C3769620;
      uint64_t v88 = v138;
      _s15ConversationKit11ParticipantVWOcTm_19(v37, v138);
      __swift_storeEnumTagSinglePayload(v88, 0, 1, v140);
      uint64_t v89 = specialized >> prefix<A>(_:)();
      uint64_t v91 = v90;
      uint64_t v92 = v88;
      uint64_t v40 = v141;
      outlined destroy of SystemUpdateNotice?(v92, &demangling cache variable for type metadata for Participant?);
      unint64_t v93 = v137;
      *(void *)(v87 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v87 + 64) = v93;
      *(void *)(v87 + 32) = v89;
      *(void *)(v87 + 40) = v91;
      uint64_t v38 = v139;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      uint64_t v94 = &v39[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant];
      swift_beginAccess();
      uint64_t v95 = *(void (**)(uint64_t))v94;
      if (*(void *)v94)
      {
        swift_retain();
        v95(v37);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v95);
      }
    }
  }
  if (Participant.isPendingAuthorization.getter())
  {
    uint64_t v96 = v126;
    _s15ConversationKit11ParticipantVWOcTm_19(v37, v126);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v97 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v97 - 8) + 8))(v96, v97);
      uint64_t v98 = &v39[OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant];
      swift_beginAccess();
      uint64_t v99 = *(void (**)(uint64_t))v98;
      if (*(void *)v98)
      {
        swift_retain();
        v99(v37);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v99);
      }
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_13(v96, (void (*)(void))type metadata accessor for Participant.State);
    }
  }
  char v100 = Participant.isActive.getter();
  uint64_t v101 = v130;
  _s15ConversationKit11ParticipantVWOcTm_19(v37, v130);
  if (v100)
  {
    char v102 = Participant.isActive.getter();
    _s15ConversationKit11ParticipantVWOhTm_13(v101, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOcTm_19(v38, v41);
    uint64_t v103 = v131;
    _s15ConversationKit11ParticipantVWOcTm_19(v37, v131);
    if (v102)
    {
      int v104 = Participant.isActiveWithAV.getter();
      int v105 = Participant.isActiveWithAV.getter();
      _s15ConversationKit11ParticipantVWOhTm_13(v103, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOhTm_13(v41, (void (*)(void))type metadata accessor for Participant);
      if ((v104 ^ v105))
      {
        uint64_t v135 = (char *)static OS_os_log.conversationKit;
        uint64_t v106 = swift_allocObject();
        *(_OWORD *)(v106 + 16) = v134;
        uint64_t v107 = v138;
        _s15ConversationKit11ParticipantVWOcTm_19(v37, v138);
        os_log_type_t v108 = v39;
        uint64_t v109 = v140;
        __swift_storeEnumTagSinglePayload(v107, 0, 1, v140);
        uint64_t v110 = specialized >> prefix<A>(_:)();
        uint64_t v112 = v111;
        outlined destroy of SystemUpdateNotice?(v107, &demangling cache variable for type metadata for Participant?);
        unint64_t v113 = v137;
        *(void *)(v106 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v106 + 64) = v113;
        *(void *)(v106 + 32) = v110;
        *(void *)(v106 + 40) = v112;
        _s15ConversationKit11ParticipantVWOcTm_19(v139, v107);
        uint64_t v114 = v109;
        uint64_t v39 = v108;
        __swift_storeEnumTagSinglePayload(v107, 0, 1, v114);
        uint64_t v115 = specialized >> prefix<A>(_:)();
        uint64_t v117 = v116;
        uint64_t v118 = v107;
        uint64_t v40 = v141;
        uint64_t v37 = v133;
        outlined destroy of SystemUpdateNotice?(v118, &demangling cache variable for type metadata for Participant?);
        *(void *)(v106 + 96) = MEMORY[0x1E4FBB1A0];
        *(void *)(v106 + 104) = v113;
        *(void *)(v106 + 72) = v115;
        *(void *)(v106 + 80) = v117;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        char v119 = &v39[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode];
        swift_beginAccess();
        v120 = *(void (**)(uint64_t))v119;
        if (*(void *)v119)
        {
          swift_retain();
          v120(v37);
          outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v120);
        }
      }
      goto LABEL_42;
    }
  }
  else
  {
    _s15ConversationKit11ParticipantVWOhTm_13(v101, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOcTm_19(v38, v41);
    uint64_t v103 = v131;
    _s15ConversationKit11ParticipantVWOcTm_19(v37, v131);
  }
  _s15ConversationKit11ParticipantVWOhTm_13(v103, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWOhTm_13(v41, (void (*)(void))type metadata accessor for Participant);
LABEL_42:
  uint64_t v121 = &v39[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant];
  uint64_t result = swift_beginAccess();
  v123 = *(void (**)(uint64_t, uint64_t))v121;
  if (*(void *)v121)
  {
    swift_retain();
    v123(v37, v40);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v123);
  }
  return result;
}

double ConversationController.updateScreenShare(attributes:shouldUpdateCall:)(uint64_t a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScreenShareAttributes?);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v55 - v8;
  uint64_t v10 = type metadata accessor for ScreenShareAttributes(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBE8], v13);
  char v17 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(a1, (uint64_t)v9, &demangling cache variable for type metadata for ScreenShareAttributes?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v9, &demangling cache variable for type metadata for ScreenShareAttributes?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_4:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1C37696D0;
      uint64_t v19 = specialized >> prefix<A>(_:)();
      uint64_t v21 = v20;
      uint64_t v22 = MEMORY[0x1E4FBB1A0];
      *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v23 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v18 + 64) = v23;
      *(void *)(v18 + 32) = v19;
      *(void *)(v18 + 40) = v21;
      uint64_t v24 = v59 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
      swift_beginAccess();
      uint64_t v25 = *(void *)(v24 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 328);
      swift_unknownObjectRetain();
      LOBYTE(v25) = v27(ObjectType, v25);
      swift_unknownObjectRelease();
      char v60 = v25 & 1;
      uint64_t v28 = String.init<A>(reflecting:)();
      *(void *)(v18 + 96) = v22;
      *(void *)(v18 + 104) = v23;
      *(void *)(v18 + 72) = v28;
      *(void *)(v18 + 80) = v29;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      return result;
    }
LABEL_18:
    swift_once();
    goto LABEL_4;
  }
  _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v9, (uint64_t)v12);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C3769620;
  _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v12, (uint64_t)v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
  uint64_t v32 = specialized >> prefix<A>(_:)();
  uint64_t v34 = v33;
  outlined destroy of SystemUpdateNotice?((uint64_t)v7, &demangling cache variable for type metadata for ScreenShareAttributes?);
  *(void *)(v31 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v31 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v31 + 32) = v32;
  *(void *)(v31 + 40) = v34;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0 || (id v35 = ScreenShareAttributes.tuCallScreenShareAttributes.getter()) == 0)
  {
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v12, (void (*)(void))type metadata accessor for ScreenShareAttributes);
    return result;
  }
  uint64_t v36 = v35;
  uint64_t v37 = v59 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  uint64_t v38 = *(void *)(v37 + 8);
  uint64_t v39 = swift_getObjectType();
  uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 328);
  swift_unknownObjectRetain();
  LOBYTE(v40) = v40(v39, v38);
  swift_unknownObjectRelease();
  uint64_t v41 = *(void *)(v37 + 8);
  uint64_t v42 = swift_getObjectType();
  if (v40)
  {
    uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 176);
    swift_unknownObjectRetain();
    uint64_t v44 = (void *)v43(v42, v41);
    swift_unknownObjectRelease();
    if (v44)
    {
      unsigned int v45 = objc_msgSend(v44, sel_isSignificantChangeFromAttributes_, v36);

      if (!v45) {
        goto LABEL_16;
      }
    }
    uint64_t v46 = *(void *)(v37 + 8);
    uint64_t v47 = swift_getObjectType();
    unint64_t v48 = *(void (**)(void *, uint64_t, uint64_t))(v46 + 32);
    swift_unknownObjectRetain();
    v48(v36, v47, v46);
  }
  else
  {
    uint64_t v49 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v41 + 40);
    swift_unknownObjectRetain();
    v49(1, v36, v42, v41);
  }
  swift_unknownObjectRelease();
LABEL_16:
  specialized Participant.ScreenShareAttributes.init(_:)(v36, (uint64_t)v61);
  uint64_t v50 = v61[0];
  uint64_t v51 = v61[1];
  uint64_t v52 = v62;
  long long v57 = v64;
  long long v58 = v63;
  long long v56 = v65;
  long long v55 = v66;
  uint64_t v53 = v67;
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v12, (void (*)(void))type metadata accessor for ScreenShareAttributes);
  uint64_t v54 = v59 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes;
  *(void *)uint64_t v54 = v50;
  *(void *)(v54 + 8) = v51;
  *(void *)(v54 + 16) = v52;
  *(_OWORD *)(v54 + 24) = v58;
  *(_OWORD *)(v54 + 40) = v57;
  *(_OWORD *)(v54 + 56) = v56;
  double result = *(double *)&v55;
  *(_OWORD *)(v54 + 72) = v55;
  *(void *)(v54 + 88) = v53;
  *(unsigned char *)(v54 + 96) = 0;
  return result;
}

void closure #2 in ConversationController.setupScreenSharingSessionCallbacks()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    ConversationController.startScreenShare(attributes:)(a1);
  }
}

void ConversationController.startScreenShare(attributes:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScreenShareAttributes?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBE8], v7);
  char v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(a1, (uint64_t)v6, &demangling cache variable for type metadata for ScreenShareAttributes?);
  uint64_t v12 = type metadata accessor for ScreenShareAttributes(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v12) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for ScreenShareAttributes?);
    goto LABEL_8;
  }
  id v13 = ScreenShareAttributes.tuCallScreenShareAttributes.getter();
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v6, (void (*)(void))type metadata accessor for ScreenShareAttributes);
  if (!v13)
  {
LABEL_8:
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_9:
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      uint64_t v25 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
      swift_beginAccess();
      uint64_t v26 = *(void *)(v25 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 336);
      swift_unknownObjectRetain();
      v28(1, ObjectType, v26);
      swift_unknownObjectRelease();
      return;
    }
LABEL_11:
    swift_once();
    goto LABEL_9;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C3769620;
  uint64_t v15 = specialized >> prefix<A>(_:)();
  uint64_t v17 = v16;
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v14 + 32) = v15;
  *(void *)(v14 + 40) = v17;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v18 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  uint64_t v19 = *(void *)(v18 + 8);
  uint64_t v20 = swift_getObjectType();
  uint64_t v21 = *(void (**)(uint64_t, id, uint64_t, uint64_t))(v19 + 40);
  swift_unknownObjectRetain();
  v21(1, v13, v20, v19);
  swift_unknownObjectRelease();
  specialized Participant.ScreenShareAttributes.init(_:)(v13, (uint64_t)&v30);
  uint64_t v22 = v31;
  uint64_t v23 = v36;
  uint64_t v24 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes;
  *(_OWORD *)uint64_t v24 = v30;
  *(void *)(v24 + 16) = v22;
  *(_OWORD *)(v24 + 24) = v32;
  *(_OWORD *)(v24 + 40) = v33;
  *(_OWORD *)(v24 + 56) = v34;
  *(_OWORD *)(v24 + 72) = v35;
  *(void *)(v24 + 88) = v23;
  *(unsigned char *)(v24 + 96) = 0;
}

uint64_t ConversationController.stopScreenShare()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (one-time initialization token for conversationKit != -1) {
LABEL_5:
  }
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v7 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void (**)(void, uint64_t, uint64_t))(v8 + 336);
  swift_unknownObjectRetain();
  v10(0, ObjectType, v8);
  return swift_unknownObjectRelease();
}

void closure #1 in ConversationController.setupScreenSharingSessionCallbacks()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(a2 + 16);
  OUTLINED_FUNCTION_2();
  if (MEMORY[0x1C8776240](v2))
  {
    uint64_t v3 = OUTLINED_FUNCTION_8_11();
    ConversationController.updateScreenShare(attributes:shouldUpdateCall:)(v3, 1);
  }
}

void closure #3 in ConversationController.setupScreenSharingSessionCallbacks()(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    ConversationController.stopScreenShare()();
  }
}

void ConversationController.updateBuzzedMember(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v101 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_10_5();
  uint64_t v94 = v6;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_42();
  char v100 = (void *)v8;
  uint64_t v9 = OUTLINED_FUNCTION_128_5();
  OUTLINED_FUNCTION_5_3();
  uint64_t v99 = v10;
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_479();
  uint64_t v95 = v15 - (v14 & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_42();
  uint64_t v96 = v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v91 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v91 - v22;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_64();
  uint64_t v93 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v25();
  char v26 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_29_4();
  v27();
  if ((v26 & 1) == 0)
  {
    __break(1u);
LABEL_30:
    swift_once();
    goto LABEL_14;
  }
  v91[1] = v12;
  uint64_t v28 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v98 = v28;
  uint64_t v29 = *v28;
  uint64_t v30 = *(void *)(*v28 + 16);
  if (v30)
  {
    unint64_t v92 = v2;
    uint64_t v97 = v23;
    OUTLINED_FUNCTION_12_19();
    uint64_t v32 = v29 + v31;
    uint64_t v34 = *(void *)(v33 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v32, (uint64_t)v20);
      long long v35 = *(void **)&v20[*(int *)(v9 + 28)];
      if (v35)
      {
        id v36 = v35;
        id v37 = objc_msgSend(v101, sel_handle);
        unsigned int v38 = objc_msgSend(v36, sel_isEquivalentToHandle_, v37);

        if (v38) {
          break;
        }
      }
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v20, (void (*)(void))type metadata accessor for Participant);
      v32 += v34;
      if (!--v30)
      {
        swift_bridgeObjectRelease();
        uint64_t v39 = 1;
        uint64_t v23 = v97;
        uint64_t v2 = v92;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v40 = (uint64_t)v100;
    _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v20, (uint64_t)v100);
    uint64_t v39 = 0;
    uint64_t v23 = v97;
    uint64_t v2 = v92;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = 1;
LABEL_9:
    uint64_t v40 = (uint64_t)v100;
  }
  OUTLINED_FUNCTION_348_0(v40, v39);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_0(v40, 1, v9);
  if (!v41)
  {
    uint64_t v47 = OUTLINED_FUNCTION_438();
    _s15ConversationKit11ParticipantVWObTm_6(v47, v48);
    unint64_t v49 = (unint64_t)&v23[*(int *)(v9 + 20)];
    ConversationController.indexOfRemoteParticipant(with:)();
    if (v51)
    {
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_25:
        static os_log_type_t.error.getter();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v86 = OUTLINED_FUNCTION_25_15();
        *(_OWORD *)(v86 + 16) = xmmword_1C3769620;
        uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v88 = OUTLINED_FUNCTION_8(v87);
        MEMORY[0x1F4188790](v88);
        OUTLINED_FUNCTION_221();
        uint64_t v89 = type metadata accessor for UUID();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_124();
        v90();
        OUTLINED_FUNCTION_420();
        OUTLINED_FUNCTION_452();
        *(void *)(v86 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v86 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v86 + 32) = v89;
        *(void *)(v86 + 40) = v9;
        OUTLINED_FUNCTION_94_6();
        swift_bridgeObjectRelease();
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v23, (void (*)(void))type metadata accessor for Participant);
        goto LABEL_28;
      }
LABEL_37:
      swift_once();
      goto LABEL_25;
    }
    unint64_t v52 = v50;
    Participant.asRung()();
    uint64_t v53 = v98;
    OUTLINED_FUNCTION_6_1();
    uint64_t v54 = *v53;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v53 = v54;
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v52 & 0x8000000000000000) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v54 = specialized _ArrayBuffer._consumeAndCreateNew()();
      *uint64_t v98 = v54;
      if ((v52 & 0x8000000000000000) == 0)
      {
LABEL_19:
        if (v52 < *(void *)(v54 + 16))
        {
          unint64_t v49 = *(unsigned __int8 *)(v99 + 80);
          uint64_t v53 = (uint64_t *)((v49 + 32) & ~v49);
          uint64_t v2 = *(void *)(v99 + 72) * v52;
          outlined assign with take of Participant(v96, (uint64_t)v53 + v54 + v2);
          uint64_t v56 = *v98;
          swift_endAccess();
          if (v52 < *(void *)(v56 + 16))
          {
            uint64_t v57 = v95;
            _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v53 + v56 + v2, v95);
            uint64_t v58 = OUTLINED_FUNCTION_87_1();
            ConversationController.postParticipantStateChangeCallbacks(for:updatedFrom:)(v58, v59);
            _s15ConversationKit11ParticipantVWOhTm_13(v57, (void (*)(void))type metadata accessor for Participant);
            if (one-time initialization token for conversationKit == -1)
            {
LABEL_22:
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
              uint64_t v60 = OUTLINED_FUNCTION_25_15();
              *(_OWORD *)(v60 + 16) = xmmword_1C3769620;
              uint64_t v61 = *v98;
              if (v52 < *(void *)(*v98 + 16))
              {
                unsigned __int8 v62 = (void *)v60;
                uint64_t v63 = (uint64_t)v23;
                uint64_t v97 = v23;
                unint64_t v92 = ~v49;
                uint64_t v64 = v94;
                _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v53 + v61 + v2, v94);
                OUTLINED_FUNCTION_348_0(v64, 0);
                specialized >> prefix<A>(_:)();
                OUTLINED_FUNCTION_274_0();
                outlined destroy of SystemUpdateNotice?(v64, &demangling cache variable for type metadata for Participant?);
                v62[7] = MEMORY[0x1E4FBB1A0];
                v62[8] = lazy protocol witness table accessor for type String and conformance String();
                v62[4] = v53;
                v62[5] = v2;
                static os_log_type_t.default.getter();
                OUTLINED_FUNCTION_156_5();
                swift_bridgeObjectRelease();
                uint64_t v65 = v93;
                char v100 = (void *)static OS_dispatch_queue.main.getter();
                uint64_t v66 = type metadata accessor for DispatchTime();
                uint64_t v101 = v91;
                uint64_t v98 = (uint64_t *)v66;
                OUTLINED_FUNCTION_5_3();
                uint64_t v68 = v67;
                MEMORY[0x1F4188790](v69);
                OUTLINED_FUNCTION_175_4();
                uint64_t v94 = v9;
                MEMORY[0x1F4188790](v70);
                OUTLINED_FUNCTION_478();
                MEMORY[0x1C8772E20](v65, 10.0);
                uint64_t v71 = *(void *)(v68 + 8);
                uint64_t v96 = v68 + 8;
                uint64_t v99 = v71;
                OUTLINED_FUNCTION_15_5();
                v72();
                uint64_t v73 = OUTLINED_FUNCTION_20();
                swift_unknownObjectWeakInit();
                uint64_t v74 = v95;
                _s15ConversationKit11ParticipantVWOcTm_19(v63, v95);
                uint64_t v75 = (v49 + 24) & v92;
                uint64_t v76 = swift_allocObject();
                *(void *)(v76 + 16) = v73;
                _s15ConversationKit11ParticipantVWObTm_6(v74, v76 + v75);
                v102[4] = partial apply for closure #2 in ConversationController.updateBuzzedMember(_:);
                v102[5] = v76;
                v102[0] = MEMORY[0x1E4F143A8];
                v102[1] = 1107296256;
                v102[2] = thunk for @escaping @callee_guaranteed () -> ();
                v102[3] = &block_descriptor_121;
                uint64_t v77 = _Block_copy(v102);
                swift_release();
                type metadata accessor for DispatchQoS();
                OUTLINED_FUNCTION_362_0();
                uint64_t v95 = v78;
                OUTLINED_FUNCTION_5_3();
                MEMORY[0x1F4188790](v79);
                OUTLINED_FUNCTION_133_6();
                type metadata accessor for DispatchWorkItemFlags();
                OUTLINED_FUNCTION_423();
                uint64_t v93 = v80;
                OUTLINED_FUNCTION_5_3();
                MEMORY[0x1F4188790](v81);
                OUTLINED_FUNCTION_118();
                v102[0] = MEMORY[0x1E4FBC860];
                _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
                __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
                lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
                dispatch thunk of SetAlgebra.init<A>(_:)();
                char v82 = v100;
                MEMORY[0x1C8773B10](v94, v9, v63, v77);
                _Block_release(v77);

                OUTLINED_FUNCTION_273_1();
                OUTLINED_FUNCTION_50_1();
                v83();
                OUTLINED_FUNCTION_4_1();
                v84();
                OUTLINED_FUNCTION_26_2();
                v85();
                _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v97, (void (*)(void))type metadata accessor for Participant);
                OUTLINED_FUNCTION_10_80();
                goto LABEL_28;
              }
              __break(1u);
              goto LABEL_37;
            }
LABEL_35:
            swift_once();
            goto LABEL_22;
          }
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
  outlined destroy of SystemUpdateNotice?(v40, &demangling cache variable for type metadata for Participant?);
  if (one-time initialization token for conversationKit != -1) {
    goto LABEL_30;
  }
LABEL_14:
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v42 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v42 + 16) = xmmword_1C3769620;
  id v43 = objc_msgSend(v101, sel_handle);
  if (v43)
  {
    v102[0] = v43;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    uint64_t v44 = OUTLINED_FUNCTION_253_0();
    unint64_t v46 = v45;
  }
  else
  {
    unint64_t v46 = 0xE300000000000000;
    uint64_t v44 = 7104878;
  }
  *(void *)(v42 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v42 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v42 + 32) = v44;
  *(void *)(v42 + 40) = v46;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
LABEL_28:
  OUTLINED_FUNCTION_28();
}

void closure #2 in ConversationController.updateBuzzedMember(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v5);
  unint64_t v49 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Participant(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v46 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v17 = a1 + 16;
  swift_beginAccess();
  uint64_t v18 = MEMORY[0x1C8776240](a1 + 16);
  if (!v18) {
    return;
  }
  uint64_t v19 = (char *)v18;
  swift_beginAccess();
  uint64_t v20 = MEMORY[0x1C8776240](v17);
  if (!v20
    || (uint64_t v21 = (void *)v20,
        uint64_t v48 = v4,
        ConversationController.indexOfRemoteParticipant(with:)(),
        uint64_t v23 = v22,
        char v25 = v24,
        v21,
        (v25 & 1) != 0))
  {
LABEL_17:

    return;
  }
  char v26 = (uint64_t *)&v19[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  swift_beginAccess();
  if (((unint64_t)v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v27 = *v26;
  uint64_t v28 = (uint64_t)v49;
  if ((unint64_t)v23 >= *(void *)(*v26 + 16))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    uint64_t v31 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *uint64_t v23 = v31;
LABEL_9:
    uint64_t v33 = v46;
    if ((unint64_t)v46 >= *(void *)(v31 + 16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v5 = v47;
      outlined assign with take of Participant((uint64_t)v13, v31 + v47 + v8);
      uint64_t v34 = *v23;
      swift_endAccess();
      if ((unint64_t)v33 < *(void *)(v34 + 16))
      {
        _s15ConversationKit11ParticipantVWOcTm_19(v34 + v5 + v8, (uint64_t)v10);
        ConversationController.postParticipantStateChangeCallbacks(for:updatedFrom:)((uint64_t)v10, (uint64_t)v16);
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
        if (one-time initialization token for conversationKit == -1)
        {
LABEL_12:
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          uint64_t v35 = swift_allocObject();
          *(_OWORD *)(v35 + 16) = xmmword_1C3769620;
          if ((unint64_t)v46 >= *(void *)(*v23 + 16))
          {
            __break(1u);
            JUMPOUT(0x1C362E378);
          }
          id v36 = (void *)v35;
          uint64_t v37 = *v23 + v5 + v8;
          uint64_t v38 = (uint64_t)v48;
          _s15ConversationKit11ParticipantVWOcTm_19(v37, (uint64_t)v48);
          __swift_storeEnumTagSinglePayload(v38, 0, 1, v7);
          uint64_t v39 = specialized >> prefix<A>(_:)();
          uint64_t v41 = v40;
          outlined destroy of SystemUpdateNotice?(v38, &demangling cache variable for type metadata for Participant?);
          v36[7] = MEMORY[0x1E4FBB1A0];
          v36[8] = lazy protocol witness table accessor for type String and conformance String();
          v36[4] = v39;
          v36[5] = v41;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
          uint64_t v42 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v49, v42);
          return;
        }
LABEL_24:
        swift_once();
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v47 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v8 = *(void *)(v8 + 72) * (void)v23;
  _s15ConversationKit11ParticipantVWOcTm_19(v27 + v47 + v8, (uint64_t)v16);
  _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v16, v28);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 3:
      unint64_t v46 = v23;
      Participant.asWaiting()(EnumCaseMultiPayload);
      swift_beginAccess();
      uint64_t v30 = v26;
      uint64_t v31 = *v26;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = v30;
      *uint64_t v30 = v31;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_9;
      }
      goto LABEL_21;
    case 4:
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);

      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v44 = v28 + *(int *)(v43 + 48);
      outlined consume of Participant.CopresenceInfo?(*(void *)(v28 + *(int *)(v43 + 64)), *(void *)(v28 + *(int *)(v43 + 64) + 8));
      outlined destroy of Participant.MediaInfo(v44);
      break;
    case 6:
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
      goto LABEL_17;
    default:
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);

      break;
  }
  uint64_t v45 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v28, v45);
}

Swift::Void __swiftcall ConversationController.setDownlinkMuted(_:)(Swift::Bool a1)
{
  uint64_t v3 = v1;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v5();
  char v6 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_50_1();
  v7();
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_5;
  }
  ConversationController.lookupActiveConversation()();
  if (v11)
  {
    outlined init with take of Notice(&v10, (uint64_t)v12);
    uint64_t v8 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    OUTLINED_FUNCTION_2();
    outlined init with copy of Conversation(v8, (uint64_t)&v10);
    __swift_project_boxed_opaque_existential_1(&v10, v11);
    OUTLINED_FUNCTION_97_7();
    v9();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
    return;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)&v10, &demangling cache variable for type metadata for Conversation?);
  if (one-time initialization token for conversationKit != -1) {
    goto LABEL_7;
  }
LABEL_5:
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_31_26();
}

Swift::Void __swiftcall ConversationController.setIgnoreLetMeInRequests(_:)(Swift::Bool a1)
{
  ConversationController.lookupActiveConversation()();
  if (v11)
  {
    OUTLINED_FUNCTION_398(v1, v2, v3, v4);
    uint64_t v5 = OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_311_1(v5, v6, v7, v8);
    OUTLINED_FUNCTION_399(v10, v11);
    OUTLINED_FUNCTION_97_7();
    v9();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_31_26();
  }
}

void closure #1 in ConversationController.shareableLink(completionHandler:)(void *a1, void *a2, void (*a3)(void *, void *), uint64_t a4, void *a5)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C3769620;
    id v38 = a2;
    id v8 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v9 = String.init<A>(reflecting:)();
    uint64_t v11 = v10;
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v7 + 32) = v9;
    *(void *)(v7 + 40) = v11;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_os_log);
    uint64_t v12 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    if (!a3) {
      return;
    }
    uint64_t v13 = a2;
    goto LABEL_4;
  }
  if (a1)
  {
    uint64_t v35 = a4;
    uint64_t v16 = one-time initialization token for conversationKit;
    id v17 = a1;
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v37 = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C37696D0;
    id v38 = v17;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
    id v36 = v17;
    uint64_t v19 = String.init<A>(reflecting:)();
    uint64_t v21 = v20;
    *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v22 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v18 + 64) = v22;
    *(void *)(v18 + 32) = v19;
    *(void *)(v18 + 40) = v21;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    MEMORY[0x1F4188790](v23 - 8);
    char v25 = (char *)&v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v26 = a5[3];
    uint64_t v27 = a5[4];
    __swift_project_boxed_opaque_existential_1(a5, v26);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
    uint64_t v28 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v28);
    uint64_t v29 = specialized >> prefix<A>(_:)((uint64_t)v25);
    uint64_t v31 = v30;
    outlined destroy of SystemUpdateNotice?((uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(void *)(v18 + 96) = MEMORY[0x1E4FBB1A0];
    *(void *)(v18 + 104) = v22;
    *(void *)(v18 + 72) = v29;
    *(void *)(v18 + 80) = v31;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    if (a3)
    {
      id v32 = v36;
      a3(a1, 0);
    }
    else
    {
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C3769620;
    *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v33 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v33 + 32) = 7104878;
    *(void *)(v33 + 40) = 0xE300000000000000;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_os_log);
    uint64_t v34 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    if (a3)
    {
      uint64_t v13 = 0;
LABEL_4:
      a3(0, v13);
    }
  }
}

Swift::Void __swiftcall ConversationController.pauseLocalVideoIfStopped()()
{
  OUTLINED_FUNCTION_11_49();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_246_1();
  uint64_t v3 = *(void (**)(uint64_t))(v2 + 304);
  swift_unknownObjectRetain();
  uint64_t v4 = OUTLINED_FUNCTION_160_4();
  v3(v4);
  OUTLINED_FUNCTION_407();
  if ((v1 & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame) = 1;
    ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
  }
  OUTLINED_FUNCTION_10_27();
}

Swift::Void __swiftcall ConversationController.stopLocalVideo()()
{
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  char v3 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *char v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v4();
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = OUTLINED_FUNCTION_1_18();
  v6(v5);
  if ((v3 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v7 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_2();
  if ((*(char *)(v7 + 16) & 0x80000000) == 0) {
    return;
  }
  if (ConversationController.isCarPlayConnected.getter())
  {
    id v8 = (unsigned char *)(v0
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable);
    OUTLINED_FUNCTION_11_0();
    *id v8 = 1;
  }
  if (one-time initialization token for conversationKit != -1) {
    goto LABEL_9;
  }
LABEL_6:
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_118_5();
  ConversationController.broadcastingState.setter();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_257_1();
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_275_1(v10, v18);
  OUTLINED_FUNCTION_2_1();
  v11();
  OUTLINED_FUNCTION_57_11();
  v12();
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_50_1();
  v13();
  __swift_project_boxed_opaque_existential_1(v19, v19[3]);
  uint64_t v14 = OUTLINED_FUNCTION_48_1();
  v15(v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  uint64_t v16 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_220_0();
  id v17 = *(void (**)(void))(v16 + 312);
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_318_0();
  v17();
  swift_unknownObjectRelease();
}

Swift::Void __swiftcall ConversationController.registerForMoments()()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_11();
  if (!v3) {
    goto LABEL_18;
  }
  uint64_t v4 = v0;
  ConversationController.lookupActiveConversation()();
  if (v29)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    if (OUTLINED_FUNCTION_237_0())
    {
      id v5 = v32;
      if (objc_msgSend(v32, sel_state) != (id)3) {
        goto LABEL_14;
      }
      uint64_t v6 = (uint64_t)objc_msgSend(v32, sel_mergedActiveRemoteParticipants);
      OUTLINED_FUNCTION_1_132();
      lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
      OUTLINED_FUNCTION_248();
      uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      specialized Set.count.getter(v7);
      OUTLINED_FUNCTION_198();
      swift_bridgeObjectRelease();
      if (v6 >= 1)
      {
        id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADC18]), sel_initWithConversation_, v32);
        uint64_t v9 = OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider;
        uint64_t v10 = *(void **)&v4[OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider];
        if (v10 && (objc_msgSend(v10, sel_isEqualToProvider_, v8) & 1) != 0)
        {
        }
        else
        {
          ConversationController.unregisterForMoments()();
          uint64_t v11 = *(void **)&v4[v9];
          *(void *)&v4[v9] = v8;
          id v12 = v8;

          id v13 = ConversationController.momentsController.getter();
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
          uint64_t v27 = static OS_dispatch_queue.main.getter();
          uint64_t v14 = (void *)OUTLINED_FUNCTION_3_0();
          v14[2] = v13;
          void v14[3] = v12;
          _OWORD v14[4] = v4;
          uint64_t v30 = partial apply for closure #1 in ConversationController.registerForMoments();
          uint64_t v31 = v14;
          v28[0] = MEMORY[0x1E4F143A8];
          v28[1] = 1107296256;
          v28[2] = thunk for @escaping @callee_guaranteed () -> ();
          uint64_t v29 = &block_descriptor_127;
          uint64_t v15 = _Block_copy(v28);
          id v24 = v12;
          id v23 = v13;
          uint64_t v16 = v4;
          swift_release();
          uint64_t v25 = type metadata accessor for DispatchQoS();
          uint64_t v26 = v22;
          OUTLINED_FUNCTION_5_3();
          MEMORY[0x1F4188790](v17);
          OUTLINED_FUNCTION_61();
          static DispatchQoS.unspecified.getter();
          type metadata accessor for DispatchWorkItemFlags();
          v22[1] = v22;
          OUTLINED_FUNCTION_5_3();
          OUTLINED_FUNCTION_483();
          MEMORY[0x1F4188790](v18);
          OUTLINED_FUNCTION_36_4();
          v28[0] = MEMORY[0x1E4FBC860];
          _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
          lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
          OUTLINED_FUNCTION_387();
          dispatch thunk of SetAlgebra.init<A>(_:)();
          uint64_t v19 = (void *)v27;
          MEMORY[0x1C8773BA0](0, v1, v2, v15);
          _Block_release(v15);

          OUTLINED_FUNCTION_29_4();
          v20();
          OUTLINED_FUNCTION_3_8();
          v21();
          OUTLINED_FUNCTION_256_0();
        }
      }
      else
      {
LABEL_14:
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_118_5();
      }
      goto LABEL_18;
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v28, &demangling cache variable for type metadata for Conversation?);
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_31_26();
LABEL_18:
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConversationController.registerForMoments()(void *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6[4] = partial apply for closure #1 in closure #1 in ConversationController.registerForMoments();
  v6[5] = v4;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  void v6[3] = &block_descriptor_1044;
  id v5 = _Block_copy(v6);
  swift_release();
  objc_msgSend(a1, sel_registerProvider_completion_, a2, v5);
  _Block_release(v5);
}

uint64_t closure #1 in closure #1 in ConversationController.registerForMoments()(void *a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v3);
  if (result)
  {
    id v5 = (void *)result;
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C3769620;
    if (a1)
    {
      v19[0] = a1;
      id v7 = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      uint64_t v8 = String.init<A>(reflecting:)();
      unint64_t v10 = v9;
    }
    else
    {
      unint64_t v10 = 0xE300000000000000;
      uint64_t v8 = 7104878;
    }
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v10;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.lookupActiveConversation()();
    if (v18)
    {
      outlined init with take of Notice(&v17, (uint64_t)v19);
      uint64_t v11 = v20;
      uint64_t v12 = v21;
      __swift_project_boxed_opaque_existential_1(v19, v20);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 56))(v11, v12) == 3)
      {
        uint64_t v13 = v20;
        uint64_t v14 = v21;
        __swift_project_boxed_opaque_existential_1(v19, v20);
        uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 120))(v13, v14);
        uint64_t v16 = specialized Set.count.getter(v15);
        swift_bridgeObjectRelease();
        if (v16 >= 1) {
          ConversationController.updateParticipants(with:)(v19);
        }
      }

      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    }
    else
    {

      return outlined destroy of SystemUpdateNotice?((uint64_t)&v17, &demangling cache variable for type metadata for Conversation?);
    }
  }
  return result;
}

uint64_t ConversationController.updateParticipants(with:)(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (void *)((char *)&v34[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBE8], v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56))(v7, v8) == 4)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C3769620;
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v10);
    v34[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 56))(v10, v11);
    type metadata accessor for TUConversationState(0);
    uint64_t v12 = String.init<A>(reflecting:)();
    uint64_t v14 = v13;
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v9 + 32) = v12;
    *(void *)(v9 + 40) = v14;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C3769620;
    outlined init with copy of Conversation((uint64_t)a1, (uint64_t)v34);
    uint64_t v16 = specialized >> prefix<A>(_:)((uint64_t)v34);
    uint64_t v18 = v17;
    outlined destroy of SystemUpdateNotice?((uint64_t)v34, &demangling cache variable for type metadata for Conversation?);
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v18;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.removeParticipants(notIn:)(a1);
    ConversationController.createNewParticipants(with:)(a1);
    ConversationController.updateRemoteParticipantsStates(with:)(a1);
    ConversationController.updateRemoteParticipantsNames(with:)(a1);
    ConversationController.updateLocalMemberAuthorizedToChangeGroupMembership(with:)(a1);
    ConversationController.updateParticipantsForcedToShowAsNeedingAuthorization()();
    ConversationController.updateOtherInvitedParticipants()();
    ConversationController.updateIdentityClaimingAssociations(in:)();
  }
  if (one-time initialization token for screenSharing != -1) {
    goto LABEL_17;
  }
LABEL_10:
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Log.screenSharing);
  outlined init with copy of Conversation((uint64_t)a1, (uint64_t)v34);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v22 = 134217984;
    uint64_t v23 = v35;
    uint64_t v24 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 120))(v23, v24);
    uint64_t v26 = specialized Set.count.getter(v25);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    v34[0] = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1C2F90000, v20, v21, "mergedActiveRemoteParticipants.count = %ld", v22, 0xCu);
    MEMORY[0x1C87760E0](v22, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }

  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v27 = static ScreenSharingInteractionController.shared;
  uint64_t v28 = a1[3];
  uint64_t v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 120))(v28, v29);
  uint64_t v31 = specialized Set.count.getter(v30);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(BOOL))((*MEMORY[0x1E4FBC8C8] & *v27) + 0x150))(v31 == 1);
}

void closure #1 in ConversationController.unregisterForMoments()(void *a1, uint64_t a2)
{
  v5[4] = closure #1 in closure #1 in ConversationController.unregisterForMoments();
  v5[5] = 0;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 1107296256;
  v5[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  v5[3] = &block_descriptor_1047;
  uint64_t v4 = _Block_copy(v5);
  objc_msgSend(a1, sel_unregisterProvider_completion_, a2, v4);
  _Block_release(v4);
}

uint64_t closure #1 in closure #1 in ConversationController.unregisterForMoments()(void *a1)
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C3769620;
  if (a1)
  {
    id v3 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v4 = String.init<A>(reflecting:)();
    unint64_t v6 = v5;
  }
  else
  {
    unint64_t v6 = 0xE300000000000000;
    uint64_t v4 = 7104878;
  }
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v6;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  return swift_bridgeObjectRelease();
}

void closure #1 in ConversationController.captureMoment(for:)(uint64_t a1, void *a2, id a3, uint64_t a4)
{
  if (a3)
  {
    id v5 = a3;
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C3769620;
    id v7 = a3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v8 = String.init<A>(reflecting:)();
    uint64_t v10 = v9;
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v10;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  else if (a2)
  {
    uint64_t v13 = a4 + 16;
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C3769620;
    swift_bridgeObjectRetain();
    uint64_t v15 = MEMORY[0x1E4FBB1A0];
    uint64_t v16 = String.init<A>(reflecting:)();
    uint64_t v18 = v17;
    *(void *)(v14 + 56) = v15;
    *(void *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v18;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v19 = MEMORY[0x1C8776240](v13);
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      v21._countAndFlagsBits = a1;
      v21._object = a2;
      ConversationController.endRequest(for:)(v21);
    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
}

Swift::Void __swiftcall ConversationController.endRequest(for:)(Swift::String a1)
{
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_49_11();
  if (v4)
  {
    id v5 = ConversationController.momentsController.getter();
    uint64_t v6 = OUTLINED_FUNCTION_30_15();
    id v7 = (void *)MEMORY[0x1C87730B0](v6);
    uint64_t v8 = OUTLINED_FUNCTION_26();
    *(void *)(v8 + 16) = v2;
    *(void *)(v8 + 24) = v1;
    v12[4] = partial apply for closure #1 in ConversationController.endRequest(for:);
    v12[5] = v8;
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 1107296256;
    v12[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
    v12[3] = &block_descriptor_133;
    uint64_t v9 = _Block_copy(v12);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v5, sel_endRequestWithTransactionID_completion_, v7, v9);
    _Block_release(v9);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v10 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v10 + 16) = xmmword_1C3769620;
    swift_bridgeObjectRetain();
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_183_2();
    *(void *)(v10 + 56) = v11;
    *(void *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v10 + 32) = v2;
    *(void *)(v10 + 40) = v3;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_157_6();
    swift_bridgeObjectRelease();
  }
}

void closure #1 in ConversationController.startRecordingLocalVideo()(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = a4 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C8776240](v7);
  if (!v8) {
    return;
  }
  uint64_t v9 = (char *)v8;
  if (a3)
  {
    id v10 = a3;
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C3769620;
    v28[0] = a3;
    id v12 = a3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v13 = String.init<A>(reflecting:)();
    uint64_t v15 = v14;
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v15;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    return;
  }
  if (!a2)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    goto LABEL_20;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C3769620;
  v28[0] = a1;
  v28[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  uint64_t v18 = String.init<A>(reflecting:)();
  uint64_t v20 = v19;
  *(void *)(v16 + 56) = v17;
  *(void *)(v16 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v16 + 32) = v18;
  *(void *)(v16 + 40) = v20;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  Swift::String v21 = &v9[OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID];
  swift_beginAccess();
  *(void *)Swift::String v21 = a1;
  *((void *)v21 + 1) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  ConversationController.lookupActiveConversation()();
  if (!v27)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v26, &demangling cache variable for type metadata for Conversation?);
LABEL_19:
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    ConversationController.stopRecordingLocalVideo()();
LABEL_20:

    return;
  }
  outlined init with take of Notice(&v26, (uint64_t)v28);
  uint64_t v22 = v29;
  uint64_t v23 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23) != 3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    goto LABEL_19;
  }
  uint64_t v24 = &v9[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo];
  swift_beginAccess();
  uint64_t v25 = *(void (**)(uint64_t))v24;
  if (*(void *)v24)
  {
    swift_retain();
    v25(1);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v25);
  }

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

void closure #1 in ConversationController.endRequest(for:)(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1C3769620;
    id v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v5 = String.init<A>(reflecting:)();
    uint64_t v7 = v6;
    *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v3 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v3 + 32) = v5;
    *(void *)(v3 + 40) = v7;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C3769620;
    swift_bridgeObjectRetain();
    uint64_t v9 = MEMORY[0x1E4FBB1A0];
    uint64_t v10 = String.init<A>(reflecting:)();
    uint64_t v12 = v11;
    *(void *)(v8 + 56) = v9;
    *(void *)(v8 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v8 + 32) = v10;
    *(void *)(v8 + 40) = v12;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
}

uint64_t closure #1 in ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v13;
  v8[4] = a6;
  v8[5] = a7;
  long long v8[2] = a4;
  v8[3] = a5;
  type metadata accessor for MainActor();
  v8[8] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return MEMORY[0x1F4188298](closure #1 in ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:), v10, v9);
}

uint64_t closure #1 in ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:)()
{
  swift_release();
  OUTLINED_FUNCTION_102();
  VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)();
  OUTLINED_FUNCTION_6();
  return v0();
}

uint64_t closure #1 in ConversationController.startRecordingVideoMessage()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a4;
  type metadata accessor for MainActor();
  v4[13] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[14] = v6;
  v4[15] = v5;
  return MEMORY[0x1F4188298](closure #1 in ConversationController.startRecordingVideoMessage(), v6, v5);
}

uint64_t closure #1 in ConversationController.startRecordingVideoMessage()()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = v0[12] + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    v0[16] = v4;
    id v5 = v4;

    uint64_t v6 = (void *)swift_task_alloc();
    v0[17] = v6;
    *uint64_t v6 = v0;
    v6[1] = closure #1 in ConversationController.startRecordingVideoMessage();
    OUTLINED_FUNCTION_487();
    return VideoMessageController.start()();
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_6();
    return v8();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v11;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_13_1();
  *id v4 = v3;
  id v5 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 112);
    uint64_t v8 = *(void *)(v3 + 120);
    uint64_t v9 = closure #1 in ConversationController.startRecordingVideoMessage();
  }
  else
  {

    uint64_t v7 = *(void *)(v3 + 112);
    uint64_t v8 = *(void *)(v3 + 120);
    uint64_t v9 = closure #1 in ConversationController.startRecordingVideoMessage();
  }
  return MEMORY[0x1F4188298](v9, v7, v8);
}

uint64_t closure #1 in ConversationController.pauseRecordingVideoMessage()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[2] = a4;
  type metadata accessor for MainActor();
  void v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return MEMORY[0x1F4188298](closure #1 in ConversationController.pauseRecordingVideoMessage(), v6, v5);
}

uint64_t closure #1 in ConversationController.pauseRecordingVideoMessage()()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #1 in ConversationController.pauseRecordingVideoMessage();
  return VideoMessageController.pause()();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_2_5();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_2_2();
  void *v3 = v2;
  swift_task_dealloc();
  id v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 32);
  return MEMORY[0x1F4188298](closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary(), v5, v4);
}

uint64_t closure #1 in ConversationController.stopRecordingVideoMessage()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a4;
  type metadata accessor for MainActor();
  v4[13] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[14] = v6;
  v4[15] = v5;
  return MEMORY[0x1F4188298](closure #1 in ConversationController.stopRecordingVideoMessage(), v6, v5);
}

uint64_t closure #1 in ConversationController.stopRecordingVideoMessage()()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = v0[12] + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    v0[16] = v4;
    id v5 = v4;

    uint64_t v6 = (void *)swift_task_alloc();
    v0[17] = v6;
    *uint64_t v6 = v0;
    v6[1] = closure #1 in ConversationController.startRecordingVideoMessage();
    OUTLINED_FUNCTION_487();
    return VideoMessageController.stop()();
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_6();
    return v8();
  }
}

uint64_t closure #1 in ConversationController.saveRecordedVideoMessage()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a4;
  type metadata accessor for MainActor();
  v4[13] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[14] = v6;
  v4[15] = v5;
  return MEMORY[0x1F4188298](closure #1 in ConversationController.saveRecordedVideoMessage(), v6, v5);
}

uint64_t closure #1 in ConversationController.saveRecordedVideoMessage()()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = v0[12] + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    v0[16] = v4;
    id v5 = v4;

    uint64_t v6 = (void *)swift_task_alloc();
    v0[17] = v6;
    *uint64_t v6 = v0;
    v6[1] = closure #1 in ConversationController.saveRecordedVideoMessage();
    OUTLINED_FUNCTION_487();
    return VideoMessageController.save()();
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_6();
    return v8();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v11;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_13_1();
  *id v4 = v3;
  id v5 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 112);
    uint64_t v8 = *(void *)(v3 + 120);
    uint64_t v9 = closure #1 in ConversationController.saveRecordedVideoMessage();
  }
  else
  {

    uint64_t v7 = *(void *)(v3 + 112);
    uint64_t v8 = *(void *)(v3 + 120);
    uint64_t v9 = closure #1 in ConversationController.saveRecordedVideoMessage();
  }
  return MEMORY[0x1F4188298](v9, v7, v8);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  OUTLINED_FUNCTION_6();
  return v0();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (**v8)(uint64_t);
  void (*v9)(uint64_t);
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;

  uint64_t v1 = *(void **)(v0 + 144);
  uint64_t v2 = *(void **)(v0 + 128);
  swift_release();

  *(void *)(v0 + 88) = v1;
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  if ((swift_dynamicCast() & 1) != 0
    && (id v4 = *(void *)(v0 + 96) + 16,
        id v5 = *(unsigned __int8 *)(v0 + 152),
        OUTLINED_FUNCTION_2(),
        (uint64_t v6 = MEMORY[0x1C8776240](v4)) != 0))
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = (void (**)(uint64_t))(v6
                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
    OUTLINED_FUNCTION_2();
    uint64_t v9 = *v8;
    uint64_t v10 = *(void **)(v0 + 144);
    if (*v8)
    {
      uint64_t v11 = OUTLINED_FUNCTION_12_13();
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v11);

      v9(v5);
      uint64_t v12 = OUTLINED_FUNCTION_12_13();
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v12);
    }
    else
    {
    }
  }
  else
  {
  }
  OUTLINED_FUNCTION_6();
  return v13();
}

uint64_t closure #1 in ConversationController.resetRecordingVideoMessage(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  type metadata accessor for MainActor();
  v6[15] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[16] = v8;
  v6[17] = v7;
  return MEMORY[0x1F4188298](closure #1 in ConversationController.resetRecordingVideoMessage(completion:), v8, v7);
}

uint64_t closure #1 in ConversationController.resetRecordingVideoMessage(completion:)()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = v0[12] + 16;
  OUTLINED_FUNCTION_2();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    v0[18] = v4;
    id v5 = v4;

    uint64_t v6 = (void *)swift_task_alloc();
    v0[19] = v6;
    *uint64_t v6 = v0;
    v6[1] = closure #1 in ConversationController.resetRecordingVideoMessage(completion:);
    OUTLINED_FUNCTION_487();
    return VideoMessageController.reset()();
  }
  else
  {
    swift_release();
    uint64_t v8 = (void (*)(uint64_t))v0[13];
    if (v8) {
      v8(1);
    }
    OUTLINED_FUNCTION_6();
    return v9();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v11;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_13_1();
  *id v4 = v3;
  id v5 = *v1;
  OUTLINED_FUNCTION_2_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 128);
    uint64_t v8 = *(void *)(v3 + 136);
    uint64_t v9 = closure #1 in ConversationController.resetRecordingVideoMessage(completion:);
  }
  else
  {

    uint64_t v7 = *(void *)(v3 + 128);
    uint64_t v8 = *(void *)(v3 + 136);
    uint64_t v9 = closure #1 in ConversationController.resetRecordingVideoMessage(completion:);
  }
  return MEMORY[0x1F4188298](v9, v7, v8);
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_17_2();
  swift_release();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 104);
  if (v1) {
    v1(1);
  }
  OUTLINED_FUNCTION_6();
  return v2();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (**v8)(uint64_t);
  void (*v9)(uint64_t);
  void (*v10)(void);
  void *v11;
  uint64_t (*v12)(void);
  uint64_t v14;

  OUTLINED_FUNCTION_28_0();
  uint64_t v1 = *(void **)(v0 + 160);
  uint64_t v2 = *(void **)(v0 + 144);
  swift_release();

  *(void *)(v0 + 88) = v1;
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  if (swift_dynamicCast())
  {
    id v4 = *(void *)(v0 + 96) + 16;
    id v5 = *(unsigned __int8 *)(v0 + 168);
    OUTLINED_FUNCTION_2();
    uint64_t v6 = MEMORY[0x1C8776240](v4);
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      uint64_t v8 = (void (**)(uint64_t))(v6
                                         + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
      OUTLINED_FUNCTION_2();
      uint64_t v9 = *v8;
      if (*v8)
      {
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v9);

        v9(v5);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v9);
      }
      else
      {
      }
    }
  }
  uint64_t v10 = *(void (**)(void))(v0 + 104);
  uint64_t v11 = *(void **)(v0 + 160);
  if (v10) {
    v10(0);
  }

  OUTLINED_FUNCTION_6();
  return v12();
}

uint64_t closure #1 in ConversationController.discardRecordedVideoMessage()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[2] = a4;
  type metadata accessor for MainActor();
  void v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return MEMORY[0x1F4188298](closure #1 in ConversationController.discardRecordedVideoMessage(), v6, v5);
}

uint64_t closure #1 in ConversationController.discardRecordedVideoMessage()()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #1 in ConversationController.discardRecordedVideoMessage();
  return VideoMessageController.discardRecording()();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_2_5();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_2_2();
  void *v3 = v2;
  swift_task_dealloc();
  id v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 32);
  return MEMORY[0x1F4188298](closure #3 in ScreeningService.startScreening(callUUID:endCall:), v5, v4);
}

void ConversationController.checkScreenTimeRestricts(_:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 160))(v2, v3))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C3769620;
    uint64_t v5 = a1[3];
    uint64_t v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 120))(v5, v6);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Set<TUConversationParticipant>);
    uint64_t v7 = String.init<A>(reflecting:)();
    uint64_t v9 = v8;
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v4 + 32) = v7;
    *(void *)(v4 + 40) = v9;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.leaveConversation(reason:)();
  }
}

uint64_t closure #1 in ConversationController.fetchExistingScreenSharingAttributes()(uint64_t a1, uint64_t a2)
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v17 = static OS_dispatch_queue.main.getter();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  aBlock[4] = partial apply for closure #1 in closure #1 in ConversationController.fetchExistingScreenSharingAttributes();
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  void aBlock[3] = &block_descriptor_1067;
  uint64_t v5 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v14 = (void *)v17;
  MEMORY[0x1C8773BA0](0, v9, v13, v5);
  _Block_release(v5);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void closure #1 in closure #1 in ConversationController.fetchExistingScreenSharingAttributes()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1C8776240](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    if (a2)
    {
      uint64_t v6 = swift_unknownObjectRetain();
      ConversationController.updateRemoteScreenShareAttributesChanged(remoteAttributes:isLocallySharing:)(v6, 0);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void ConversationController.updateRemoteScreenShareAttributesChanged(remoteAttributes:isLocallySharing:)(uint64_t a1, int a2)
{
  LODWORD(v227) = a2;
  uint64_t v230 = type metadata accessor for Participant.State(0);
  uint64_t v3 = MEMORY[0x1F4188790](v230);
  uint64_t v218 = (char *)v190 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  v217 = (char *)v190 - v5;
  uint64_t v201 = type metadata accessor for Participant(0);
  uint64_t v195 = *(void *)(v201 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v201);
  uint64_t v8 = (char *)v190 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)v190 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)v190 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v231 = (uint64_t)v190 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v200 = (uint64_t)v190 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v216 = (uint64_t)v190 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  unint64_t v221 = (long long *)((char *)v190 - v21);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  int v199 = (long long *)((char *)v190 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v220 = (uint64_t)v190 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v215 = (uint64_t)v190 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v214 = (objc_class *)((char *)v190 - v30);
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v33 = (char *)v190 - v32;
  uint64_t v34 = MEMORY[0x1F4188790](v31);
  uint64_t v36 = (char *)v190 - v35;
  uint64_t v37 = MEMORY[0x1F4188790](v34);
  uint64_t v213 = (uint64_t)v190 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v222 = (uint64_t)v190 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v223 = (uint64_t)v190 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  os_log_t v211 = (os_log_t)((char *)v190 - v44);
  MEMORY[0x1F4188790](v43);
  v226 = (void *)((char *)v190 - v45);
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v229 = v22;
  uint64_t v46 = type metadata accessor for Logger();
  uint64_t v47 = __swift_project_value_buffer(v46, (uint64_t)static Logger.conversationController);
  uint64_t v48 = v2;
  uint64_t v212 = v47;
  unint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.default.getter();
  BOOL v51 = os_log_type_enabled(v49, v50);
  v193 = v8;
  v194 = (uint64_t *)v11;
  uint64_t v228 = v14;
  v224 = (uint64_t *)v33;
  uint64_t v225 = v36;
  if (v51)
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    *(void *)&v234[0] = v53;
    *(_DWORD *)uint64_t v52 = 136315394;
    v237[0] = (uint64_t)v48;
    uint64_t v54 = String.init<A>(reflecting:)();
    v237[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, (uint64_t *)v234);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2080;
    v237[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000004CLL, 0x80000001C37BB5E0, (uint64_t *)v234);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1C2F90000, v49, v50, "ConversationController(%s recieved callback %s", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v53, -1, -1);
    MEMORY[0x1C87760E0](v52, -1, -1);
  }
  else
  {
  }
  uint64_t v56 = type metadata accessor for DispatchPredicate();
  uint64_t v57 = v190;
  uint64_t v58 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v60 = (void *)((char *)v190 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v60 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v58 + 104))(v60, *MEMORY[0x1E4FBCBE8], v56);
  char v61 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v58 + 8))(v60, v56);
  if ((v61 & 1) == 0)
  {
    __break(1u);
LABEL_91:
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v57, (void (*)(void))type metadata accessor for Participant);
    outlined destroy of Participant.ScreenInfo((uint64_t)v237);
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v60, (void (*)(void))type metadata accessor for Participant);
    swift_endAccess();
    goto LABEL_53;
  }
  swift_getObjectType();
  unsigned __int8 v62 = (void *)swift_unknownObjectRetain();
  specialized Participant.ScreenShareAttributes.init(_:)(v62, (uint64_t)v241);
  uint64_t v63 = v241[0];
  uint64_t v64 = v242;
  uint64_t v209 = v243;
  uint64_t v210 = v241[1];
  uint64_t v207 = v244;
  uint64_t v208 = *((void *)&v243 + 1);
  uint64_t v205 = v245;
  uint64_t v206 = *((void *)&v244 + 1);
  uint64_t v219 = v246;
  uint64_t v203 = v247;
  uint64_t v204 = *((void *)&v245 + 1);
  uint64_t v65 = (uint64_t)&v48[OBJC_IVAR____TtC15ConversationKit22ConversationController_pendingNoticeWaitingForRemoteScreenShareAttributes];
  uint64_t v202 = v248;
  swift_beginAccess();
  uint64_t v66 = v221;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v65, (uint64_t)v221, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
  uint64_t v67 = v229;
  if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v229) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v66, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
    if (v227) {
      return;
    }
  }
  else
  {
    uint64_t v192 = v65;
    v196 = v48;
    uint64_t v197 = v63;
    uint64_t v198 = v64;
    uint64_t v68 = *(int *)(v67 + 48);
    uint64_t v69 = v226;
    uint64_t v70 = (long long *)((char *)v226 + v68);
    uint64_t v71 = *(int *)(v67 + 64);
    uint64_t v72 = (uint64_t)v66 + v68;
    outlined init with take of Notice(v66, (uint64_t)v226);
    _s15ConversationKit11ParticipantVWObTm_6(v72, (uint64_t)v70);
    uint64_t v73 = *(objc_class **)((char *)v66 + v71);
    *(uint64_t *)((char *)v69 + v71) = (uint64_t)v73;
    os_log_t v74 = v211;
    uint64_t v75 = (char *)v211 + *(int *)(v67 + 48);
    uint64_t v76 = *(int *)(v67 + 64);
    outlined init with copy of Conversation((uint64_t)v69, (uint64_t)v211);
    _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v70, (uint64_t)v75);
    *(Class *)((char *)&v74->isa + v76) = v73;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v74, v223, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    outlined init with take of AspectRatio?((uint64_t)v74, v222, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    uint64_t v77 = v213;
    uint64_t v78 = v213 + *(int *)(v67 + 48);
    uint64_t v79 = *(int *)(v67 + 64);
    outlined init with copy of Conversation((uint64_t)v69, v213);
    _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v70, v78);
    *(void *)(v77 + v79) = v73;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v77, (uint64_t)v225, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    outlined init with take of AspectRatio?(v77, (uint64_t)v224, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    uint64_t v80 = (uint64_t)v214;
    uint64_t v81 = (uint64_t)v214 + *(int *)(v67 + 48);
    uint64_t v82 = *(int *)(v67 + 64);
    outlined init with copy of Conversation((uint64_t)v69, (uint64_t)v214);
    unint64_t v221 = v70;
    _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v70, v81);
    *(void *)(v80 + v82) = v73;
    uint64_t v83 = v215;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v80, v215, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    uint64_t v84 = v220;
    outlined init with take of AspectRatio?(v80, v220, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    uint64_t v85 = v73;
    uint64_t v86 = Logger.logObject.getter();
    os_log_type_t v87 = static os_log_type_t.default.getter();
    int v88 = v87;
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v89 = swift_slowAlloc();
      LODWORD(v213) = v88;
      uint64_t v90 = v89;
      uint64_t v212 = swift_slowAlloc();
      v237[0] = v212;
      *(_DWORD *)uint64_t v90 = 136315650;
      v190[1] = v90 + 4;
      uint64_t v91 = *(int *)(v229 + 48);
      os_log_t v211 = v86;
      unint64_t v92 = v199;
      uint64_t v93 = (uint64_t)v199 + v91;
      uint64_t v94 = *(int *)(v229 + 64);
      uint64_t v95 = v223;
      uint64_t v96 = v223 + v91;
      outlined init with copy of Conversation(v223, (uint64_t)v199);
      v190[2] = type metadata accessor for Participant;
      _s15ConversationKit11ParticipantVWOcTm_19(v96, v93);
      *(void *)((char *)v92 + v94) = *(void *)(v95 + v94);
      outlined init with take of Notice(v92, (uint64_t)v234);
      uint64_t v97 = specialized >> prefix<A>(_:)((uint64_t)v234);
      uint64_t v214 = v85;
      unint64_t v99 = v98;
      outlined destroy of SystemUpdateNotice?((uint64_t)v234, &demangling cache variable for type metadata for Conversation?);
      uint64_t v191 = type metadata accessor for Participant;
      _s15ConversationKit11ParticipantVWOhTm_13(v93, (void (*)(void))type metadata accessor for Participant);
      *(void *)&v234[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v97, v99, v237);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of SystemUpdateNotice?(v222, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of SystemUpdateNotice?(v95, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      *(_WORD *)(v90 + 12) = 2080;
      uint64_t v223 = v90 + 14;
      uint64_t v100 = *(int *)(v229 + 48);
      uint64_t v101 = (uint64_t)v92 + v100;
      uint64_t v102 = *(int *)(v229 + 64);
      uint64_t v103 = v225;
      int v104 = &v225[v100];
      outlined init with copy of Conversation((uint64_t)v225, (uint64_t)v92);
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v104, v101);
      *(void *)((char *)v92 + v102) = *(void *)&v103[v102];
      uint64_t v105 = v200;
      _s15ConversationKit11ParticipantVWObTm_6(v101, v200);
      __swift_storeEnumTagSinglePayload(v105, 0, 1, v201);
      uint64_t v106 = specialized >> prefix<A>(_:)();
      unint64_t v108 = v107;
      outlined destroy of SystemUpdateNotice?(v105, &demangling cache variable for type metadata for Participant?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
      *(void *)&v234[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v106, v108, v237);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of SystemUpdateNotice?((uint64_t)v224, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of SystemUpdateNotice?((uint64_t)v103, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      *(_WORD *)(v90 + 22) = 2080;
      uint64_t v109 = *(int *)(v229 + 48);
      uint64_t v110 = (uint64_t)v92 + v109;
      uint64_t v111 = *(int *)(v229 + 64);
      uint64_t v112 = v83 + v109;
      outlined init with copy of Conversation(v83, (uint64_t)v92);
      uint64_t v48 = v196;
      _s15ConversationKit11ParticipantVWOcTm_19(v112, v110);
      unint64_t v113 = *(void **)(v83 + v111);
      *(void *)((char *)v92 + v111) = v113;
      *(void *)&v234[0] = v113;
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationNotice);
      id v114 = v113;
      uint64_t v115 = String.init<A>(reflecting:)();
      unint64_t v117 = v116;
      _s15ConversationKit11ParticipantVWOhTm_13(v110, (void (*)(void))v191);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
      *(void *)&v234[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v115, v117, v237);
      uint64_t v85 = v214;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v67 = v229;
      swift_bridgeObjectRelease();
      outlined destroy of SystemUpdateNotice?(v220, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of SystemUpdateNotice?(v83, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      os_log_t v118 = v211;
      _os_log_impl(&dword_1C2F90000, v211, (os_log_type_t)v213, "Calling sessionActionNoticePosted for %s, %s, %s", (uint8_t *)v90, 0x20u);
      uint64_t v119 = v212;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v119, -1, -1);
      MEMORY[0x1C87760E0](v90, -1, -1);

      uint64_t v120 = v246;
    }
    else
    {
      outlined destroy of SystemUpdateNotice?(v222, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of SystemUpdateNotice?(v223, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of SystemUpdateNotice?((uint64_t)v224, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of SystemUpdateNotice?((uint64_t)v225, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of SystemUpdateNotice?(v84, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of SystemUpdateNotice?(v83, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));

      uint64_t v120 = v219;
      uint64_t v48 = v196;
    }
    uint64_t v121 = v216;
    __swift_storeEnumTagSinglePayload(v216, 1, 1, v67);
    uint64_t v122 = v192;
    swift_beginAccess();
    outlined assign with take of Participant?(v121, v122, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
    swift_endAccess();
    v123 = &v48[OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted];
    swift_beginAccess();
    Swift::String v124 = *(void (**)(uint64_t *, long long *, objc_class *, uint64_t, void))v123;
    uint64_t v63 = v197;
    uint64_t v64 = v198;
    if (*(void *)v123)
    {
      swift_endAccess();
      swift_retain();
      int v125 = v226;
      v124(v226, v221, v85, v120, 0);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v124);

      outlined destroy of SystemUpdateNotice?((uint64_t)v125, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v226, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      swift_endAccess();
    }
    if (v227) {
      return;
    }
  }
  uint64_t v126 = &v48[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes];
  if ((v48[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96] & 1) == 0)
  {
    uint64_t v127 = *((void *)v126 + 11);
    char v128 = *((_DWORD *)v126 + 4);
    uint64_t v129 = *((void *)v126 + 1);
    v255[0] = *(void *)v126;
    v255[1] = v129;
    char v256 = v128 & 1;
    long long v257 = *(_OWORD *)(v126 + 24);
    long long v258 = *(_OWORD *)(v126 + 40);
    long long v259 = *(_OWORD *)(v126 + 56);
    long long v260 = *(_OWORD *)(v126 + 72);
    uint64_t v261 = v127;
    if (static Participant.ScreenShareAttributes.== infix(_:_:)((uint64_t)v255, (uint64_t)v241)) {
      return;
    }
  }
  if (v48[OBJC_IVAR____TtC15ConversationKit22ConversationController_didReceiveLatestRemoteAttributes])
  {
    if (v126[96])
    {
      int v130 = 1;
    }
    else
    {
      uint64_t v132 = *((void *)v126 + 10);
      uint64_t v131 = *((void *)v126 + 11);
      uint64_t v133 = *((void *)v126 + 9);
      long long v134 = *(_OWORD *)(v126 + 40);
      long long v252 = *(_OWORD *)(v126 + 24);
      long long v253 = v134;
      long long v254 = *(_OWORD *)(v126 + 56);
      long long v249 = v243;
      long long v250 = v244;
      long long v251 = v245;
      char v135 = static CGAffineTransform.== infix(_:_:)();
      BOOL v136 = 0;
      if ((v135 & 1) != 0 && v133 == v246 && v132 == v247) {
        BOOL v136 = v131 == v248;
      }
      int v130 = !v136;
    }
  }
  else
  {
    int v130 = 1;
    v48[OBJC_IVAR____TtC15ConversationKit22ConversationController_didReceiveLatestRemoteAttributes] = 1;
  }
  uint64_t v138 = v210;
  *(void *)uint64_t v126 = v63;
  *((void *)v126 + 1) = v138;
  uint64_t v139 = v209;
  *((void *)v126 + 2) = v64;
  *((void *)v126 + 3) = v139;
  uint64_t v140 = v207;
  *((void *)v126 + 4) = v208;
  *((void *)v126 + 5) = v140;
  uint64_t v141 = v205;
  *((void *)v126 + 6) = v206;
  *((void *)v126 + 7) = v141;
  uint64_t v142 = v219;
  *((void *)v126 + 8) = v204;
  *((void *)v126 + 9) = v142;
  uint64_t v143 = v202;
  *((void *)v126 + 10) = v203;
  *((void *)v126 + 11) = v143;
  v126[96] = 0;
  ConversationController.lookupActiveConversation()();
  if (!*((void *)&v234[1] + 1))
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v234, &demangling cache variable for type metadata for Conversation?);
LABEL_56:
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    return;
  }
  outlined init with take of Notice(v234, (uint64_t)v238);
  uint64_t v144 = v239;
  uint64_t v145 = v240;
  __swift_project_boxed_opaque_existential_1(v238, v239);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v145 + 56))(v144, v145) != 3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v238);
    goto LABEL_56;
  }
  uint64_t v146 = (uint64_t)&v48[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  swift_beginAccess();
  uint64_t v147 = *(void *)v146;
  uint64_t v148 = *(void *)(*(void *)v146 + 16);
  if (!v148)
  {
LABEL_50:
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    goto LABEL_53;
  }
  LODWORD(v223) = v130;
  uint64_t v197 = v63;
  uint64_t v198 = v64;
  v196 = v48;
  unint64_t v149 = (*(unsigned __int8 *)(v195 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v195 + 80);
  uint64_t v229 = *(void *)(v195 + 72);
  v226 = &v237[4];
  uint64_t v227 = (uint64_t)&v234[6];
  v224 = (uint64_t *)v146;
  uint64_t v225 = (char *)&v236[4];
  swift_bridgeObjectRetain();
  unint64_t v150 = 0;
  uint64_t v152 = (uint64_t)v217;
  uint64_t v151 = (uint64_t)v218;
  while (1)
  {
    uint64_t v153 = v231;
    _s15ConversationKit11ParticipantVWOcTm_19(v147 + v149, v231);
    _s15ConversationKit11ParticipantVWOcTm_19(v153, v152);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v155 = (const void *)(v152 + *(int *)(v154 + 48));
      outlined consume of Participant.CopresenceInfo?(*(void *)(v152 + *(int *)(v154 + 64)), *(void *)(v152 + *(int *)(v154 + 64) + 8));
      memcpy(v234, v155, 0x150uLL);
      uint64_t v156 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v156 - 8) + 8))(v152, v156);
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v227, (uint64_t)v237, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of Participant.MediaInfo((uint64_t)v234);
      uint64_t v157 = (uint64_t)v228;
      if (v237[3] != 1)
      {
        memcpy(v234, v237, 0xD1uLL);
        char v158 = BYTE8(v234[2]);
        outlined destroy of Participant.ScreenInfo((uint64_t)v234);
        uint64_t v157 = (uint64_t)v228;
        uint64_t v152 = (uint64_t)v217;
        uint64_t v151 = (uint64_t)v218;
        goto LABEL_40;
      }
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_13(v152, (void (*)(void))type metadata accessor for Participant.State);
      memset(v237, 0, 24);
      v237[3] = 1;
      bzero(v226, 0xB1uLL);
      uint64_t v157 = (uint64_t)v228;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v237, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    char v158 = 2;
LABEL_40:
    _s15ConversationKit11ParticipantVWOcTm_19(v231, v157);
    if (v158 == 2) {
      goto LABEL_47;
    }
    _s15ConversationKit11ParticipantVWOcTm_19(v157, v151);
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      _s15ConversationKit11ParticipantVWOhTm_13(v151, (void (*)(void))type metadata accessor for Participant.State);
      memset(v236, 0, 24);
      v236[3] = 1;
      bzero(v225, 0xB1uLL);
LABEL_46:
      outlined destroy of SystemUpdateNotice?((uint64_t)v236, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
LABEL_47:
      _s15ConversationKit11ParticipantVWOhTm_13(v157, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOhTm_13(v231, (void (*)(void))type metadata accessor for Participant);
      goto LABEL_48;
    }
    uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    unint64_t v160 = (const void *)(v151 + *(int *)(v159 + 48));
    outlined consume of Participant.CopresenceInfo?(*(void *)(v151 + *(int *)(v159 + 64)), *(void *)(v151 + *(int *)(v159 + 64) + 8));
    memcpy(v234, v160, 0x150uLL);
    uint64_t v161 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v161 - 8) + 8))(v151, v161);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v227, (uint64_t)v236, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of Participant.MediaInfo((uint64_t)v234);
    if (v236[3] == 1) {
      goto LABEL_46;
    }
    memcpy(v237, v236, 0xD1uLL);
    char v162 = v237[5];
    outlined destroy of Participant.ScreenInfo((uint64_t)v237);
    _s15ConversationKit11ParticipantVWOhTm_13(v157, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_13(v231, (void (*)(void))type metadata accessor for Participant);
    if (v162) {
      break;
    }
LABEL_48:
    ++v150;
    v149 += v229;
    if (v148 == v150)
    {
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
  }
  swift_bridgeObjectRelease();
  if (v150 >= *(void *)(*v224 + 16))
  {
    __break(1u);
    goto LABEL_93;
  }
  uint64_t v147 = (uint64_t)v194;
  _s15ConversationKit11ParticipantVWOcTm_19(*v224 + v149, (uint64_t)v194);
  if (Participant.avInfo.getter() == 2)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_66:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v163 = swift_allocObject();
      *(_OWORD *)(v163 + 16) = xmmword_1C3769620;
      uint64_t v164 = v200;
      _s15ConversationKit11ParticipantVWOcTm_19(v147, v200);
      __swift_storeEnumTagSinglePayload(v164, 0, 1, v201);
      uint64_t v165 = specialized >> prefix<A>(_:)();
      uint64_t v167 = v166;
      outlined destroy of SystemUpdateNotice?(v164, &demangling cache variable for type metadata for Participant?);
      *(void *)(v163 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v163 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v163 + 32) = v165;
      *(void *)(v163 + 40) = v167;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      uint64_t v168 = v147;
      goto LABEL_89;
    }
LABEL_93:
    swift_once();
    goto LABEL_66;
  }
  Participant.screenInfo.getter(v234);
  if (*((void *)&v234[1] + 1) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v234, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (one-time initialization token for conversationKit == -1) {
      goto LABEL_66;
    }
    goto LABEL_93;
  }
  memcpy(v237, v234, 0x70uLL);
  v237[14] = v197;
  v237[15] = v210;
  v237[16] = v198;
  v237[17] = v209;
  v237[18] = v208;
  v237[19] = v207;
  v237[20] = v206;
  v237[21] = v205;
  v237[22] = v204;
  v237[23] = v219;
  v237[24] = v203;
  v237[25] = v202;
  LOBYTE(v237[26]) = 0;
  outlined init with copy of Participant.ScreenInfo((uint64_t)v237, (uint64_t)v236);
  Participant.screenInfo.getter(v235);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v236, (uint64_t)v234, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v235, (uint64_t)&v234[13] + 8, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  if (*((void *)&v234[1] + 1) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v235, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of SystemUpdateNotice?((uint64_t)v236, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (*(void *)&v234[15] == 1) {
      uint64_t v169 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
    }
    else {
      uint64_t v169 = &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?);
    }
    if (*(void *)&v234[15] == 1) {
      int v170 = -1;
    }
    else {
      int v170 = 0;
    }
    LODWORD(v231) = v170;
  }
  else
  {
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v234, (uint64_t)v233, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (*(void *)&v234[15] == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v235, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v236, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of Participant.ScreenInfo((uint64_t)v233);
      LODWORD(v231) = 0;
      uint64_t v169 = &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?);
    }
    else
    {
      memcpy(v232, (char *)&v234[13] + 8, 0xD1uLL);
      static Participant.ScreenInfo.== infix(_:_:)();
      LODWORD(v231) = v171;
      outlined destroy of Participant.ScreenInfo((uint64_t)v232);
      uint64_t v169 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
      outlined destroy of SystemUpdateNotice?((uint64_t)v235, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v236, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of Participant.ScreenInfo((uint64_t)v233);
    }
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v234, v169);
  Participant.videoInfo.getter();
  outlined init with copy of Participant.ScreenInfo((uint64_t)v237, (uint64_t)v234);
  uint64_t v172 = Participant.captionInfo.getter();
  Participant.copresenceInfo.getter();
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v235);
  outlined consume of Participant.CaptionInfo?(v172);
  outlined release of LinearGradient((uint64_t)v236);
  outlined destroy of SystemUpdateNotice?((uint64_t)v234, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  uint64_t v173 = v224;
  swift_beginAccess();
  uint64_t v174 = *v173;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v173 = v174;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v174 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *uint64_t v173 = v174;
  }
  uint64_t v176 = (uint64_t)v193;
  if (v150 >= *(void *)(v174 + 16))
  {
    __break(1u);
  }
  else
  {
    outlined assign with copy of Participant.State((uint64_t)v193, v174 + v149);
    swift_endAccess();
    if (one-time initialization token for conversationKit == -1) {
      goto LABEL_82;
    }
  }
  swift_once();
LABEL_82:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v177 = swift_allocObject();
  *(_OWORD *)(v177 + 16) = xmmword_1C37696D0;
  outlined init with copy of Participant.ScreenInfo((uint64_t)v237, (uint64_t)v234);
  uint64_t v178 = specialized >> prefix<A>(_:)((uint64_t)v234);
  uint64_t v180 = v179;
  outlined destroy of SystemUpdateNotice?((uint64_t)v234, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  uint64_t v181 = MEMORY[0x1E4FBB1A0];
  *(void *)(v177 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v182 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v177 + 64) = v182;
  *(void *)(v177 + 32) = v178;
  *(void *)(v177 + 40) = v180;
  uint64_t v183 = v200;
  _s15ConversationKit11ParticipantVWOcTm_19(v176, v200);
  __swift_storeEnumTagSinglePayload(v183, 0, 1, v201);
  uint64_t v184 = specialized >> prefix<A>(_:)();
  uint64_t v186 = v185;
  outlined destroy of SystemUpdateNotice?(v183, &demangling cache variable for type metadata for Participant?);
  *(void *)(v177 + 96) = v181;
  *(void *)(v177 + 104) = v182;
  *(void *)(v177 + 72) = v184;
  *(void *)(v177 + 80) = v186;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (v231)
  {
    _s15ConversationKit11ParticipantVWOhTm_13(v176, (void (*)(void))type metadata accessor for Participant);
    outlined destroy of Participant.ScreenInfo((uint64_t)v237);
    uint64_t v168 = (uint64_t)v194;
    goto LABEL_89;
  }
  uint64_t v60 = v194;
  if (!v223)
  {
    uint64_t v189 = (uint64_t)v193;
    goto LABEL_88;
  }
  v187 = &v196[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo];
  swift_beginAccess();
  v188 = *(void (**)(void *, unint64_t))v187;
  uint64_t v57 = v193;
  if (!*(void *)v187) {
    goto LABEL_91;
  }
  swift_endAccess();
  swift_retain();
  v188(v57, v150);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v188);
  uint64_t v189 = (uint64_t)v57;
LABEL_88:
  _s15ConversationKit11ParticipantVWOhTm_13(v189, (void (*)(void))type metadata accessor for Participant);
  outlined destroy of Participant.ScreenInfo((uint64_t)v237);
  uint64_t v168 = (uint64_t)v60;
LABEL_89:
  _s15ConversationKit11ParticipantVWOhTm_13(v168, (void (*)(void))type metadata accessor for Participant);
LABEL_53:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v238);
}

BOOL closure #1 in ConversationController.requestScreenSharingSession(for:)(id *a1, uint64_t a2)
{
  id v3 = objc_msgSend(*a1, sel_identifier);
  uint64_t v4 = a2 + *(int *)(type metadata accessor for Participant(0) + 28);
  if (!*(void *)v4) {
    return 0;
  }
  return (*(unsigned char *)(v4 + 16) & 1) == 0 && v3 == *(id *)(v4 + 8);
}

void ConversationController.pauseLocalVideoAndClearState()()
{
  uint64_t v1 = v0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame) = 0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 24);
  swift_unknownObjectRetain();
  v5(2, ObjectType, v3);
  swift_unknownObjectRelease();
  uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  swift_beginAccess();
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(v6, v7);
  uint64_t v10 = *(void *)(v7 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = &v15[-v12];
  (*(void (**)(unsigned char *, __n128))(v10 + 16))(&v15[-v12], v11);
  uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 80))(v7, v8);
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v7);
  objc_msgSend(v14, sel_pausePreview);
}

uint64_t ConversationController.update(with:)(uint64_t a1)
{
  uint64_t v2 = v1;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(a1, (uint64_t)v43, &demangling cache variable for type metadata for Conversation?);
  if (v44)
  {
    uint64_t v4 = OUTLINED_FUNCTION_84_8(v43);
    uint64_t v6 = v5(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v43, &demangling cache variable for type metadata for Conversation?);
    uint64_t v6 = 0;
  }
  ConversationController.conversationState.setter(v6);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(a1, (uint64_t)v43, &demangling cache variable for type metadata for Conversation?);
  if (v44)
  {
    __swift_project_boxed_opaque_existential_1(v43, v44);
    uint64_t v7 = OUTLINED_FUNCTION_219_2();
    uint64_t v9 = v8(v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v43, &demangling cache variable for type metadata for Conversation?);
    uint64_t v9 = 0;
  }
  ConversationController.conversationLetMeInRequestState.setter(v9);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(a1, (uint64_t)&v41, &demangling cache variable for type metadata for Conversation?);
  if (!v42) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)&v41, &demangling cache variable for type metadata for Conversation?);
  }
  outlined init with take of Notice(&v41, (uint64_t)v43);
  int v10 = ConversationController.isOneToOneModeEnabled.getter() & 1;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  OUTLINED_FUNCTION_181_3();
  if (v10 != (v11() & 1))
  {
    uint64_t v12 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    OUTLINED_FUNCTION_2();
    outlined init with copy of Conversation(v12, (uint64_t)&v41);
    ConversationController.callCenter(_:oneToOneModeChangedFor:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) != 1)
  {
    outlined init with copy of Conversation((uint64_t)v43, (uint64_t)&v41);
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController);
  outlined init with copy of Conversation((uint64_t)v43, (uint64_t)&v41);
  if (v13)
  {
LABEL_20:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
    outlined init with copy of Conversation((uint64_t)v43, (uint64_t)v40);
    goto LABEL_21;
  }
  __swift_project_boxed_opaque_existential_1(&v41, v42);
  OUTLINED_FUNCTION_159_3();
  unint64_t v15 = v14();
  uint64_t HaveAudioFrequency = TUConversationState.shouldHaveAudioFrequencyController.getter(v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
  outlined init with copy of Conversation((uint64_t)v43, (uint64_t)v40);
  if ((HaveAudioFrequency & 1) == 0)
  {
LABEL_21:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    goto LABEL_22;
  }
  __swift_project_boxed_opaque_existential_1(v40, v40[3]);
  uint64_t v17 = OUTLINED_FUNCTION_48_1();
  uint64_t v19 = v18(v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  if (v19 != -1)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v20 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v20 + 16) = xmmword_1C3769620;
    uint64_t v21 = v44;
    OUTLINED_FUNCTION_109_5(v43);
    uint64_t v22 = OUTLINED_FUNCTION_1_11();
    v23(v22);
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_46_6();
    *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v20 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v20 + 32) = v19;
    *(void *)(v20 + 40) = v21;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_95_7();
    swift_bridgeObjectRelease();
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADA78]), sel_initWithDelegate_queue_, v2, *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioCallbackQueue));
    uint64_t v25 = OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController;
    uint64_t v26 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController);
    *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController) = v24;

    uint64_t v27 = *(void **)(v2 + v25);
    if (v27)
    {
      uint64_t v28 = v45;
      OUTLINED_FUNCTION_69_10(v43, v44);
      uint64_t v29 = *(uint64_t (**)(uint64_t))(v28 + 72);
      id v30 = v27;
      uint64_t v31 = OUTLINED_FUNCTION_24_2();
      objc_msgSend(v30, sel_registerParticipantPowerSpectrum_, v29(v31));
    }
  }
LABEL_22:
  __swift_project_boxed_opaque_existential_1(v43, v44);
  OUTLINED_FUNCTION_159_3();
  unint64_t v34 = v33();
  if (v34 < 3)
  {
LABEL_29:
    ConversationController.updateParticipants(with:)(v43);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  if (v34 == 4)
  {
    ConversationController.stopRecordingLocalVideo()();
    ConversationController.unregisterForMoments()();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    OUTLINED_FUNCTION_50();
    (*(void (**)(void))(v35 + 152))();
    goto LABEL_29;
  }
  if (v34 == 3)
  {
    ConversationController.registerForMoments()();
    goto LABEL_29;
  }
  _StringGuts.grow(_:)(61);
  v36._object = (void *)0x80000001C37BCCC0;
  v36._countAndFlagsBits = 0xD00000000000003BLL;
  String.append(_:)(v36);
  OUTLINED_FUNCTION_67_12(v43);
  uint64_t v37 = OUTLINED_FUNCTION_92_0();
  v38(v37);
  v39._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v39);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void ConversationController.callCenter(_:oneToOneModeChangedFor:)()
{
  OUTLINED_FUNCTION_35_14();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_63();
  uint64_t v6 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v7();
  char v8 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_4_1();
  v9();
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_38:
    swift_once();
    goto LABEL_10;
  }
  ConversationController.lookupActiveConversation()();
  if (v119)
  {
    uint64_t v112 = v6;
    outlined init with take of Notice(&v117, (uint64_t)v124);
    id v114 = v2;
    OUTLINED_FUNCTION_9_85(v124, v124[3]);
    OUTLINED_FUNCTION_362_0();
    uint64_t v113 = v10;
    OUTLINED_FUNCTION_5_3();
    uint64_t v12 = v11;
    MEMORY[0x1F4188790](v13);
    OUTLINED_FUNCTION_194_3();
    OUTLINED_FUNCTION_15_77();
    v14();
    unint64_t v15 = (void *)OUTLINED_FUNCTION_102();
    uint64_t v17 = __swift_project_boxed_opaque_existential_1(v15, v16);
    MEMORY[0x1F4188790](v17);
    OUTLINED_FUNCTION_203_1();
    OUTLINED_FUNCTION_278();
    OUTLINED_FUNCTION_15_77();
    v18();
    char v19 = static UUID.== infix(_:_:)();
    uint64_t v20 = *(void (**)(void))(v12 + 8);
    OUTLINED_FUNCTION_462();
    OUTLINED_FUNCTION_4_1();
    v20();
    OUTLINED_FUNCTION_465();
    OUTLINED_FUNCTION_4_1();
    v20();
    OUTLINED_FUNCTION_52_0();
    if ((v19 & 1) == 0) {
      goto LABEL_31;
    }
    int v21 = v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter];
    OUTLINED_FUNCTION_250_2(v4);
    uint64_t v22 = OUTLINED_FUNCTION_3_24();
    if (v21 == (v23(v22) & 1)) {
      goto LABEL_31;
    }
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)static Logger.conversationController);
    outlined init with copy of Conversation((uint64_t)v4, (uint64_t)&v117);
    uint64_t v26 = v2;
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    uint64_t v113 = v25;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = OUTLINED_FUNCTION_15_1();
      id v114 = (id)OUTLINED_FUNCTION_14_3();
      *(void *)&v123[0] = v114;
      *(_DWORD *)uint64_t v29 = 136315394;
      LOBYTE(v122[0]) = v26[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
      uint64_t v30 = String.init<A>(reflecting:)();
      v122[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, (uint64_t *)v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      __swift_project_boxed_opaque_existential_1(&v117, (uint64_t)v119);
      OUTLINED_FUNCTION_181_3();
      LOBYTE(v122[0]) = v32() & 1;
      uint64_t v33 = String.init<A>(reflecting:)();
      v122[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, (uint64_t *)v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
      _os_log_impl(&dword_1C2F90000, v27, v28, "[%s] Received CallCenter callback that one-to-one mode changed to %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    uint64_t v42 = swift_allocBox();
    uint64_t v44 = v43;
    uint64_t v45 = type metadata accessor for Participant(0);
    OUTLINED_FUNCTION_25_1(v44, v46, v47, v45);
    uint64_t v48 = OUTLINED_FUNCTION_20();
    *(void *)(v48 + 16) = 0;
    unint64_t v49 = (void *)OUTLINED_FUNCTION_3_0();
    v49[2] = v42;
    v49[3] = v26;
    v49[4] = v48;
    os_log_type_t v50 = v26;
    swift_retain_n();
    swift_retain_n();
    BOOL v51 = v50;
    closure #1 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(v42, (uint64_t)v51, v48);
    ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
    if (v51[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff] == 1)
    {
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      OUTLINED_FUNCTION_181_3();
      v51[OBJC_IVAR____TtC15ConversationKit22ConversationController_waitForModeSwitchDuringUPlusOneHandoff] = (v52() & 1) == 0;
    }
    outlined init with copy of Conversation((uint64_t)v4, (uint64_t)v123);
    outlined init with copy of Conversation((uint64_t)v123, (uint64_t)v122);
    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = v51;
    outlined init with take of Notice(v123, (uint64_t)(v53 + 3));
    v53[8] = partial apply for closure #1 in ConversationController.callCenter(_:oneToOneModeChangedFor:);
    v53[9] = v49;
    v53[10] = v42;
    v53[11] = v48;
    OUTLINED_FUNCTION_2();
    uint64_t v54 = *(void **)(v48 + 16);
    if (v54)
    {
      unint64_t v55 = v51;
      swift_retain();
      swift_retain();
      swift_retain();
      id v56 = v54;
      id v57 = objc_msgSend(v56, sel_remoteVideoAttributes);
      if (v57)
      {
        uint64_t v58 = v57;
        objc_msgSend(v57, sel_ratio);
        double v60 = v59;
        objc_msgSend(v58, sel_ratio);
        if (v60 == v61)
        {
          id v114 = v56;
          id v111 = v58;
          unsigned __int8 v62 = (void *)OUTLINED_FUNCTION_191_3();
          __swift_project_boxed_opaque_existential_1(v62, v63);
          OUTLINED_FUNCTION_269_1();
          OUTLINED_FUNCTION_181_3();
          if (v64())
          {
            if (one-time initialization token for shared != -1) {
              swift_once();
            }
            OUTLINED_FUNCTION_50();
            if ((*(uint64_t (**)(void))(v65 + 608))())
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v122);
              if ((v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo] & 1) == 0)
              {
                outlined init with copy of Conversation((uint64_t)v4, (uint64_t)&v117);
                uint64_t v68 = v55;
                uint64_t v69 = OUTLINED_FUNCTION_300_1();
                os_log_type_t v70 = static os_log_type_t.default.getter();
                int v71 = v70;
                if (os_log_type_enabled(v69, v70))
                {
                  uint64_t v72 = swift_slowAlloc();
                  uint64_t v113 = OUTLINED_FUNCTION_9_0();
                  uint64_t v116 = v113;
                  *(_DWORD *)uint64_t v72 = 136315394;
                  LODWORD(v110) = v71;
                  uint64_t v73 = String.init<A>(reflecting:)();
                  uint64_t v115 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v74, &v116);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v72 + 12) = 1024;
                  __swift_project_boxed_opaque_existential_1(&v117, (uint64_t)v119);
                  OUTLINED_FUNCTION_194_1();
                  OUTLINED_FUNCTION_181_3();
                  uint64_t v76 = v68;
                  int v77 = v75() & 1;
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
                  LODWORD(v115) = v77;
                  uint64_t v68 = v76;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  _os_log_impl(&dword_1C2F90000, v69, (os_log_type_t)v110, "[%s] One-to-one mode changed to %{BOOL}d, but we still havent received non-square remote video frames, delaying updating UI", (uint8_t *)v72, 0x12u);
                  swift_arrayDestroy();
                  OUTLINED_FUNCTION_3();
                  OUTLINED_FUNCTION_3();
                }
                else
                {
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
                }
                ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.setter(1);
                uint64_t v108 = static OS_dispatch_queue.main.getter();
                type metadata accessor for DispatchTime();
                OUTLINED_FUNCTION_267_1();
                uint64_t v113 = v78;
                uint64_t v110 = v79;
                OUTLINED_FUNCTION_5_3();
                uint64_t v81 = v80;
                MEMORY[0x1F4188790](v82);
                OUTLINED_FUNCTION_36();
                unint64_t v107 = &v100;
                MEMORY[0x1F4188790](v83);
                uint64_t v106 = v68;
                uint64_t v85 = (char *)&v100 - v84;
                static DispatchTime.now()();
                MEMORY[0x1C8772E20](v85, 5.0);
                uint64_t v86 = *(void *)(v81 + 8);
                uint64_t v109 = v81 + 8;
                uint64_t v112 = v86;
                OUTLINED_FUNCTION_12_13();
                OUTLINED_FUNCTION_12_1();
                v87();
                uint64_t v88 = OUTLINED_FUNCTION_20();
                swift_unknownObjectWeakInit();
                uint64_t v89 = (void *)OUTLINED_FUNCTION_3_0();
                v89[2] = v88;
                v89[3] = partial apply for closure #2 in ConversationController.callCenter(_:oneToOneModeChangedFor:);
                v89[4] = v53;
                uint64_t v120 = partial apply for closure #3 in ConversationController.callCenter(_:oneToOneModeChangedFor:);
                uint64_t v121 = v89;
                *(void *)&long long v117 = MEMORY[0x1E4F143A8];
                *((void *)&v117 + 1) = 1107296256;
                os_log_t v118 = thunk for @escaping @callee_guaranteed () -> ();
                uint64_t v119 = &block_descriptor_149;
                uint64_t v101 = _Block_copy(&v117);
                swift_retain();
                swift_release();
                uint64_t v104 = type metadata accessor for DispatchQoS();
                uint64_t v105 = &v100;
                OUTLINED_FUNCTION_5_3();
                uint64_t v103 = v90;
                MEMORY[0x1F4188790](v91);
                OUTLINED_FUNCTION_17_0();
                static DispatchQoS.unspecified.getter();
                type metadata accessor for DispatchWorkItemFlags();
                uint64_t v102 = &v100;
                OUTLINED_FUNCTION_5_3();
                uint64_t v100 = v92;
                MEMORY[0x1F4188790](v93);
                OUTLINED_FUNCTION_36_4();
                *(void *)&long long v117 = MEMORY[0x1E4FBC860];
                _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
                __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
                lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
                OUTLINED_FUNCTION_387();
                dispatch thunk of SetAlgebra.init<A>(_:)();
                uint64_t v94 = OUTLINED_FUNCTION_446();
                uint64_t v95 = v101;
                uint64_t v96 = (void *)v108;
                MEMORY[0x1C8773B10](v94);

                _Block_release(v95);
                swift_release();

                swift_release();
                swift_release();
                swift_release();

                OUTLINED_FUNCTION_26_2();
                v97();
                OUTLINED_FUNCTION_26_2();
                v98();
                OUTLINED_FUNCTION_26_2();
                v99();
                swift_release();
                swift_release();
                OUTLINED_FUNCTION_52_0();
                OUTLINED_FUNCTION_52_0();
                OUTLINED_FUNCTION_52_0();
                goto LABEL_31;
              }
              swift_release();

              swift_release_n();
              swift_release_n();
              goto LABEL_30;
            }
          }
        }
        else
        {
        }
      }
      else
      {
      }
    }
    else
    {
      uint64_t v66 = v51;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    uint64_t v67 = v51;
    swift_retain();
    swift_retain();
    specialized closure #2 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(v67, v122, v42, v48, v42, v67, v48);
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v122);
    swift_release();
LABEL_30:
    swift_release();
LABEL_31:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);
    goto LABEL_32;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)&v117, &demangling cache variable for type metadata for Conversation?);
  if (one-time initialization token for conversationController != -1) {
    goto LABEL_38;
  }
LABEL_10:
  uint64_t v35 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_98_0(v35, (uint64_t)static Logger.conversationController);
  Swift::String v36 = v2;
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v37, v38))
  {
    Swift::String v39 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v40 = (void *)swift_slowAlloc();
    *Swift::String v39 = 138412290;
    *(void *)&long long v117 = v36;
    long long v41 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v40 = v36;

    OUTLINED_FUNCTION_39_22(&dword_1C2F90000, v37, v38, "Unable to lookup active conversation in CallCenterProviderDelegate oneToOneModeChangedFor: callback - %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
LABEL_32:
  OUTLINED_FUNCTION_33_2();
}

uint64_t TUConversationState.shouldHaveAudioFrequencyController.getter(unint64_t a1)
{
  if (a1 < 5) {
    return (a1 & 0x1F) == 3;
  }
  _StringGuts.grow(_:)(72);
  v2._object = (void *)0x80000001C37BBA50;
  v2._countAndFlagsBits = 0xD000000000000046;
  String.append(_:)(v2);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t ConversationController.removeParticipants(notIn:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v153 = (uint64_t)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v157 = (uint64_t)&v132 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v144 = (uint64_t)&v132 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v152 = (uint64_t)&v132 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v156 = (uint64_t)&v132 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v139 = (uint64_t)&v132 - v15;
  uint64_t v163 = type metadata accessor for Participant(0);
  uint64_t v16 = *(void *)(v163 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v163);
  uint64_t v146 = (uint64_t)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v149 = (uint64_t)&v132 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v138 = (uint64_t)&v132 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v155 = (uint64_t)&v132 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v147 = (uint64_t)&v132 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v142 = (uint64_t)&v132 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v143 = (uint64_t)&v132 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v145 = (uint64_t)&v132 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v154 = (uint64_t)&v132 - v34;
  MEMORY[0x1F4188790](v33);
  Swift::String v36 = (char *)&v132 - v35;
  uint64_t v37 = type metadata accessor for DispatchPredicate();
  uint64_t v38 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v40 = (uint64_t *)((char *)&v132 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v40 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v38 + 104))(v40, *MEMORY[0x1E4FBCBE8], v37);
  char v41 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v38 + 8))(v40, v37);
  if ((v41 & 1) == 0) {
    goto LABEL_70;
  }
  uint64_t v43 = a1[3];
  uint64_t v44 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v43);
  char v45 = default argument 0 of Conversation.allHandles(excludeOtherInvitedHandles:)(v43, v44);
  Conversation.allHandles(excludeOtherInvitedHandles:)(v45 & 1, v43, v44);
  uint64_t v158 = v46;
  uint64_t v47 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  uint64_t result = swift_beginAccess();
  uint64_t v161 = v47;
  uint64_t v49 = *v47;
  uint64_t v50 = v163;
  if (!*(void *)(*v47 + 16)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v51 = 0;
  unint64_t v160 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v162 = *(void *)(v16 + 72);
  unint64_t v137 = &v165;
  *(void *)&long long v48 = 136315138;
  long long v136 = v48;
  uint64_t v135 = MEMORY[0x1E4FBC840] + 8;
  long long v151 = xmmword_1C37696D0;
  long long v141 = xmmword_1C3769620;
  uint64_t v159 = v2;
  while ((v51 & 0x8000000000000000) == 0)
  {
    uint64_t v52 = v162 * v51;
    _s15ConversationKit11ParticipantVWOcTm_19(v49 + v160 + v162 * v51, (uint64_t)v36);
    uint64_t v53 = *(void **)&v36[*(int *)(v50 + 28)];
    if (!v53) {
      goto LABEL_39;
    }
    id v54 = v53;
    uint64_t result = ConversationController.activeParticipant(correspondingTo:in:)((uint64_t)v36, a1);
    unint64_t v55 = (void *)result;
    if (!result)
    {
      uint64_t v61 = *(void *)&v36[*(int *)(v163 + 44)];
      char v62 = *(unsigned char *)(v61 + 32);
      uint64_t v63 = 1 << v62;
      unint64_t v64 = *(void *)(v61 + 56);
      if (v64)
      {
        uint64_t v65 = 0;
        goto LABEL_12;
      }
      unsigned int v96 = v62 & 0x3F;
      if (v96 >= 7)
      {
        unint64_t v64 = *(void *)(v61 + 64);
        if (v64)
        {
          uint64_t v65 = 1;
          goto LABEL_12;
        }
        if (v96 >= 8)
        {
          unint64_t v64 = *(void *)(v61 + 72);
          if (v64)
          {
            uint64_t v65 = 2;
LABEL_12:
            unint64_t v66 = __clz(__rbit64(v64));
            uint64_t v67 = v66 + (v65 << 6);
            if (v67 != v63)
            {
              if (v67 < 0 || v67 >= v63) {
                goto LABEL_68;
              }
              if (((*(void *)(v61 + 56 + (((unint64_t)v67 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v66) & 1) == 0) {
                goto LABEL_69;
              }
              uint64_t v68 = v145;
              _s15ConversationKit11ParticipantVWOcTm_19(*(void *)(v61 + 48) + v67 * v162, v145);
              uint64_t v69 = v68;
              uint64_t v70 = v154;
              _s15ConversationKit11ParticipantVWObTm_6(v69, v154);
              unint64_t v150 = (void *)ConversationController.activeParticipant(correspondingTo:in:)(v70, a1);
              if (v150)
              {
                if (one-time initialization token for conversationController != -1) {
                  swift_once();
                }
                id v140 = v54;
                uint64_t v71 = type metadata accessor for Logger();
                uint64_t v148 = __swift_project_value_buffer(v71, (uint64_t)static Logger.conversationController);
                uint64_t v72 = Logger.logObject.getter();
                os_log_type_t v73 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v72, v73))
                {
                  unint64_t v74 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)unint64_t v74 = 0;
                  _os_log_impl(&dword_1C2F90000, v72, v73, "Active participant left but associate is still in the call.", v74, 2u);
                  MEMORY[0x1C87760E0](v74, -1, -1);
                }

                uint64_t v75 = v143;
                _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v36, v143);
                uint64_t v76 = Logger.logObject.getter();
                os_log_type_t v77 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v76, v77))
                {
                  uint64_t v78 = (uint8_t *)swift_slowAlloc();
                  os_log_t v134 = (os_log_t)swift_slowAlloc();
                  os_log_t v165 = v134;
                  uint64_t v133 = v78;
                  *(_DWORD *)uint64_t v78 = v136;
                  uint64_t v132 = v78 + 4;
                  uint64_t v79 = v139;
                  _s15ConversationKit11ParticipantVWOcTm_19(v75, v139);
                  __swift_storeEnumTagSinglePayload(v79, 0, 1, v163);
                  uint64_t v80 = specialized >> prefix<A>(_:)();
                  unint64_t v82 = v81;
                  outlined destroy of SystemUpdateNotice?(v79, &demangling cache variable for type metadata for Participant?);
                  uint64_t v164 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v80, v82, (uint64_t *)&v165);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  _s15ConversationKit11ParticipantVWOhTm_13(v143, (void (*)(void))type metadata accessor for Participant);
                  uint64_t v83 = v133;
                  _os_log_impl(&dword_1C2F90000, v76, v77, "Replacing old participant %s with...", v133, 0xCu);
                  os_log_t v84 = v134;
                  swift_arrayDestroy();
                  MEMORY[0x1C87760E0](v84, -1, -1);
                  MEMORY[0x1C87760E0](v83, -1, -1);
                }
                else
                {
                  _s15ConversationKit11ParticipantVWOhTm_13(v75, (void (*)(void))type metadata accessor for Participant);
                }

                uint64_t v116 = v142;
                _s15ConversationKit11ParticipantVWOcTm_19(v154, v142);
                long long v117 = Logger.logObject.getter();
                os_log_type_t v118 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v117, v118))
                {
                  uint64_t v119 = swift_slowAlloc();
                  uint64_t v148 = swift_slowAlloc();
                  os_log_t v165 = (os_log_t)v148;
                  os_log_t v134 = v117;
                  uint64_t v120 = (uint8_t *)v119;
                  *(_DWORD *)uint64_t v119 = v136;
                  uint64_t v133 = (uint8_t *)(v119 + 4);
                  uint64_t v121 = v139;
                  _s15ConversationKit11ParticipantVWOcTm_19(v116, v139);
                  __swift_storeEnumTagSinglePayload(v121, 0, 1, v163);
                  uint64_t v122 = specialized >> prefix<A>(_:)();
                  unint64_t v124 = v123;
                  outlined destroy of SystemUpdateNotice?(v121, &demangling cache variable for type metadata for Participant?);
                  uint64_t v164 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v122, v124, (uint64_t *)&v165);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  _s15ConversationKit11ParticipantVWOhTm_13(v142, (void (*)(void))type metadata accessor for Participant);
                  os_log_t v125 = v134;
                  _os_log_impl(&dword_1C2F90000, v134, v118, "... associated participant %s", v120, 0xCu);
                  uint64_t v126 = v148;
                  swift_arrayDestroy();
                  MEMORY[0x1C87760E0](v126, -1, -1);
                  MEMORY[0x1C87760E0](v120, -1, -1);
                }
                else
                {
                  _s15ConversationKit11ParticipantVWOhTm_13(v116, (void (*)(void))type metadata accessor for Participant);
                }
                uint64_t v127 = v154;
                ConversationController.updateActiveParticipant(_:with:in:)(v150, v154, a1, v147);
                char v128 = v161;
                swift_beginAccess();
                uint64_t v129 = *v128;
                uint64_t result = swift_isUniquelyReferenced_nonNull_native();
                *char v128 = v129;
                if ((result & 1) == 0)
                {
                  uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
                  uint64_t v129 = result;
                  *uint64_t v161 = result;
                }
                if (v51 >= *(void *)(v129 + 16)) {
                  goto LABEL_71;
                }
                uint64_t v130 = v147;
                outlined assign with copy of Participant.State(v147, v129 + v160 + v52);
                swift_endAccess();
                ConversationController.postParticipantStateChangeCallbacks(for:updatedFrom:)(v130, (uint64_t)v36);

                _s15ConversationKit11ParticipantVWOhTm_13(v130, (void (*)(void))type metadata accessor for Participant);
                _s15ConversationKit11ParticipantVWOhTm_13(v127, (void (*)(void))type metadata accessor for Participant);
                uint64_t result = _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v36, (void (*)(void))type metadata accessor for Participant);
                ++v51;
                goto LABEL_56;
              }
              _s15ConversationKit11ParticipantVWOhTm_13(v70, (void (*)(void))type metadata accessor for Participant);
            }
            goto LABEL_7;
          }
          uint64_t v131 = 10;
          while (v131 - 7 < (unint64_t)(v63 + 63) >> 6)
          {
            unint64_t v64 = *(void *)(v61 + 8 * v131++);
            if (v64)
            {
              uint64_t v65 = v131 - 8;
              goto LABEL_12;
            }
          }
        }
      }
    }
LABEL_7:
    uint64_t v56 = a1[3];
    uint64_t v57 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v56);
    uint64_t v58 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 176))(v56, v57);
    if (v58)
    {
      double v59 = v58;
      uint64_t v60 = v156;
      ConversationController.participant(from:)(v58, v156);
      if (__swift_getEnumTagSinglePayload(v60, 1, v163) == 1)
      {

        outlined destroy of SystemUpdateNotice?(v60, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        uint64_t v85 = v60;
        uint64_t v86 = v155;
        _s15ConversationKit11ParticipantVWObTm_6(v85, v155);
        ConversationController.indexOfRemoteParticipant(with:)();
        if (v87)
        {
          _s15ConversationKit11ParticipantVWOhTm_13(v86, (void (*)(void))type metadata accessor for Participant);
        }
        else
        {
          ConversationController.removeParticipant(_:at:)(v86);
          if (one-time initialization token for conversationKit != -1) {
            swift_once();
          }
          unint64_t v150 = (void *)static OS_os_log.conversationKit;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          uint64_t v88 = swift_allocObject();
          *(_OWORD *)(v88 + 16) = v141;
          uint64_t v89 = v86;
          uint64_t v90 = v152;
          _s15ConversationKit11ParticipantVWOcTm_19(v89, v152);
          uint64_t v91 = v163;
          __swift_storeEnumTagSinglePayload(v90, 0, 1, v163);
          uint64_t v92 = v90;
          uint64_t v93 = v144;
          outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v92, v144, &demangling cache variable for type metadata for Participant?);
          if (__swift_getEnumTagSinglePayload(v93, 1, v91) == 1)
          {
            outlined destroy of SystemUpdateNotice?(v93, &demangling cache variable for type metadata for Participant?);
            unint64_t v94 = 0xE300000000000000;
            uint64_t v95 = 7104878;
          }
          else
          {
            uint64_t v97 = v138;
            _s15ConversationKit11ParticipantVWObTm_6(v93, v138);
            _s15ConversationKit11ParticipantVWOcTm_19(v97, v149);
            uint64_t v95 = String.init<A>(reflecting:)();
            unint64_t v94 = v98;
            _s15ConversationKit11ParticipantVWOhTm_13(v97, (void (*)(void))type metadata accessor for Participant);
          }
          outlined destroy of SystemUpdateNotice?(v152, &demangling cache variable for type metadata for Participant?);
          *(void *)(v88 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v88 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(void *)(v88 + 32) = v95;
          *(void *)(v88 + 40) = v94;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();
          swift_bridgeObjectRelease();

          _s15ConversationKit11ParticipantVWOhTm_13(v155, (void (*)(void))type metadata accessor for Participant);
        }
      }
    }
    char v99 = specialized Set.contains(_:)(v54, v158);
    outlined init with copy of Conversation((uint64_t)a1, (uint64_t)&v165);
    if (v99)
    {

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v165);
      uint64_t v50 = v163;
    }
    else
    {
      uint64_t v100 = v166;
      uint64_t v101 = v167;
      __swift_project_boxed_opaque_existential_1(&v165, v166);
      uint64_t v102 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v101 + 168))(v100, v101);
      if (!v102)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v165);
        uint64_t v50 = v163;
LABEL_41:
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v105 = swift_allocObject();
        *(_OWORD *)(v105 + 16) = v151;
        uint64_t v106 = v157;
        _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v36, v157);
        __swift_storeEnumTagSinglePayload(v106, 0, 1, v50);
        uint64_t v107 = v106;
        uint64_t v108 = v153;
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v107, v153, &demangling cache variable for type metadata for Participant?);
        if (__swift_getEnumTagSinglePayload(v108, 1, v50) == 1)
        {
          outlined destroy of SystemUpdateNotice?(v108, &demangling cache variable for type metadata for Participant?);
          unint64_t v109 = 0xE300000000000000;
          uint64_t v110 = 7104878;
        }
        else
        {
          uint64_t v111 = v146;
          _s15ConversationKit11ParticipantVWObTm_6(v108, v146);
          _s15ConversationKit11ParticipantVWOcTm_19(v111, v149);
          uint64_t v110 = String.init<A>(reflecting:)();
          unint64_t v109 = v112;
          _s15ConversationKit11ParticipantVWOhTm_13(v111, (void (*)(void))type metadata accessor for Participant);
        }
        outlined destroy of SystemUpdateNotice?(v157, &demangling cache variable for type metadata for Participant?);
        *(void *)(v105 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v105 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v105 + 32) = v110;
        *(void *)(v105 + 40) = v109;
        uint64_t v113 = a1[3];
        uint64_t v114 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v113);
        uint64_t v115 = (*(uint64_t (**)(uint64_t, uint64_t))(v114 + 88))(v113, v114);
        *(void *)(v105 + 96) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>);
        *(void *)(v105 + 104) = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Set<TUConversationMember> and conformance Set<A>);
        *(void *)(v105 + 72) = v115;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        ConversationController.removeParticipant(_:at:)((uint64_t)v36);

        uint64_t result = _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v36, (void (*)(void))type metadata accessor for Participant);
LABEL_56:
        uint64_t v50 = v163;
        goto LABEL_57;
      }
      uint64_t v103 = v102;
      id v104 = objc_msgSend(v102, sel_handle);

      LOBYTE(v103) = objc_msgSend(v104, sel_isEqualToHandle_, v54);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v165);
      uint64_t v50 = v163;
      if ((v103 & 1) == 0) {
        goto LABEL_41;
      }
    }
LABEL_39:
    uint64_t result = _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v36, (void (*)(void))type metadata accessor for Participant);
    ++v51;
LABEL_57:
    uint64_t v49 = *v161;
    if (v51 >= *(void *)(*v161 + 16)) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

void ConversationController.createNewParticipants(with:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  v399 = (char *)&v369 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v373 = (uint64_t)&v369 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v372 = (uint64_t)&v369 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v394 = (uint64_t)&v369 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v385 = (uint64_t)&v369 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v382 = (uint64_t)&v369 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v388 = (uint64_t)&v369 - v17;
  uint64_t v18 = type metadata accessor for Participant(0);
  uint64_t v400 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v380 = (uint64_t)&v369 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v370 = (uint64_t)&v369 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v371 = (uint64_t)&v369 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v403 = (uint64_t)&v369 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v378 = (uint64_t)&v369 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v384 = (uint64_t)&v369 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v377 = (uint64_t)&v369 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v381 = (uint64_t)&v369 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v379 = (uint64_t)&v369 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v386 = (uint64_t)&v369 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  char v41 = (char *)&v369 - v40;
  uint64_t v42 = MEMORY[0x1F4188790](v39);
  uint64_t v387 = (uint64_t)&v369 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  v414 = (char *)&v369 - v45;
  MEMORY[0x1F4188790](v44);
  unint64_t v409 = (unint64_t)&v369 - v46;
  uint64_t v47 = type metadata accessor for DispatchPredicate();
  uint64_t v48 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v50 = (uint64_t *)((char *)&v369 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v383 = 0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v50 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v48 + 104))(v50, *MEMORY[0x1E4FBCBE8], v47);
  char v51 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v48 + 8))(v50, v47);
  if ((v51 & 1) == 0) {
    goto LABEL_242;
  }
  uint64_t v52 = a1[3];
  uint64_t v53 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v52);
  uint64_t v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 88))(v52, v53);
  uint64_t v418 = v54;
  uint64_t v55 = a1[3];
  uint64_t v56 = a1[4];
  v397 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v55);
  uint64_t v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 168))(v55, v56);
  if (v57)
  {
    specialized Set._Variant.insert(_:)((int)v424, v57, v58, v59, v60, v61, v62, v63, v369, v370, v371, v372, v373, v374, v375, *((uint64_t *)&v375 + 1), v376, *((uint64_t *)&v376 + 1), v377,
      v378,
      v379,
      v380);

    uint64_t v54 = v418;
  }
  uint64_t v405 = v2;
  unint64_t v64 = v397;
  uint64_t v413 = v18;
  if ((v54 & 0xC000000000000001) == 0)
  {
    uint64_t v82 = swift_bridgeObjectRetain();
    uint64_t v83 = v383;
    id v65 = (id)specialized _NativeSet.filter(_:)(v82);
    uint64_t v383 = v83;
    unint64_t v64 = v397;
    goto LABEL_25;
  }
  id v65 = (id)MEMORY[0x1E4FBC870];
  v424[0] = (id)MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain();
  __CocoaSet.makeIterator()();
  uint64_t v66 = __CocoaSet.Iterator.next()();
  if (!v66) {
    goto LABEL_23;
  }
  uint64_t v67 = v66;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  do
  {
    uint64_t v417 = v67;
    swift_dynamicCast();
    unsigned __int8 v68 = objc_msgSend(v419, sel_isOtherInvitedHandle);
    id v69 = v419;
    if (v68)
    {

      goto LABEL_21;
    }
    uint64_t v70 = v424[0];
    unint64_t v71 = *((void *)v424[0] + 2);
    if (*((void *)v424[0] + 3) <= v71)
    {
      specialized _NativeSet.resize(capacity:)(v71 + 1);
      uint64_t v70 = v424[0];
    }
    Swift::Int v72 = NSObject._rawHashValue(seed:)(v70[5]);
    os_log_type_t v73 = (char *)(v70 + 7);
    uint64_t v74 = -1 << *((unsigned char *)v70 + 32);
    unint64_t v75 = v72 & ~v74;
    unint64_t v76 = v75 >> 6;
    if (((-1 << v75) & ~v70[(v75 >> 6) + 7]) != 0)
    {
      unint64_t v77 = __clz(__rbit64((-1 << v75) & ~v70[(v75 >> 6) + 7])) | v75 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_20;
    }
    char v78 = 0;
    unint64_t v79 = (unint64_t)(63 - v74) >> 6;
    do
    {
      if (++v76 == v79 && (v78 & 1) != 0)
      {
        __break(1u);
LABEL_238:
        __break(1u);
LABEL_239:
        __break(1u);
        goto LABEL_240;
      }
      BOOL v80 = v76 == v79;
      if (v76 == v79) {
        unint64_t v76 = 0;
      }
      v78 |= v80;
      uint64_t v81 = *(void *)&v73[8 * v76];
    }
    while (v81 == -1);
    unint64_t v77 = __clz(__rbit64(~v81)) + (v76 << 6);
LABEL_20:
    *(void *)&v73[(v77 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v77;
    *(void *)(v70[6] + 8 * v77) = v69;
    ++v70[2];
LABEL_21:
    uint64_t v67 = __CocoaSet.Iterator.next()();
  }
  while (v67);
  id v65 = v424[0];
  uint64_t v2 = v405;
  unint64_t v64 = v397;
  uint64_t v18 = v413;
LABEL_23:
  swift_release();
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t v418 = (uint64_t)v65;
  uint64_t v84 = v64[3];
  uint64_t v85 = v64[4];
  __swift_project_boxed_opaque_existential_1(v64, v84);
  Conversation.displayableActiveParticipants.getter(v84, v85);
  if ((v86 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
    Set.Iterator.init(_cocoa:)();
    unint64_t v86 = (unint64_t)v419;
    v393 = v420;
    uint64_t v87 = v421;
    int64_t v88 = v422;
    unint64_t v89 = v423;
  }
  else
  {
    int64_t v88 = 0;
    uint64_t v90 = -1 << *(unsigned char *)(v86 + 32);
    uint64_t v91 = *(void *)(v86 + 56);
    v393 = (char *)(v86 + 56);
    uint64_t v92 = ~v90;
    uint64_t v93 = -v90;
    if (v93 < 64) {
      uint64_t v94 = ~(-1 << v93);
    }
    else {
      uint64_t v94 = -1;
    }
    unint64_t v89 = v94 & v91;
    uint64_t v87 = v92;
  }
  uint64_t v391 = v86 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v374 = v87;
  int64_t v392 = (unint64_t)(v87 + 64) >> 6;
  long long v376 = xmmword_1C37696D0;
  long long v389 = xmmword_1C3769620;
  long long v375 = xmmword_1C376BA10;
  uint64_t v390 = MEMORY[0x1E4FBC838] + 8;
  unint64_t v396 = v86;
  v395 = v41;
  if ((v86 & 0x8000000000000000) != 0) {
    goto LABEL_34;
  }
  while (2)
  {
    if (v89)
    {
      uint64_t v401 = (v89 - 1) & v89;
      unint64_t v95 = __clz(__rbit64(v89)) | (v88 << 6);
      int64_t v402 = v88;
      goto LABEL_46;
    }
    int64_t v98 = v88 + 1;
    if (__OFADD__(v88, 1)) {
      goto LABEL_238;
    }
    if (v98 >= v392) {
      goto LABEL_140;
    }
    unint64_t v99 = *(void *)&v393[8 * v98];
    if (!v99)
    {
      int64_t v100 = v88 + 2;
      if (v88 + 2 >= v392) {
        goto LABEL_140;
      }
      unint64_t v99 = *(void *)&v393[8 * v100];
      if (v99) {
        goto LABEL_44;
      }
      int64_t v100 = v88 + 3;
      if (v88 + 3 >= v392) {
        goto LABEL_140;
      }
      unint64_t v99 = *(void *)&v393[8 * v100];
      if (v99)
      {
LABEL_44:
        int64_t v98 = v100;
      }
      else
      {
        int64_t v98 = v88 + 4;
        if (v88 + 4 >= v392) {
          goto LABEL_140;
        }
        unint64_t v99 = *(void *)&v393[8 * v98];
        if (!v99)
        {
          int64_t v257 = v88 + 5;
          do
          {
            if (v257 >= v392) {
              goto LABEL_140;
            }
            unint64_t v99 = *(void *)&v393[8 * v257++];
          }
          while (!v99);
          int64_t v98 = v257 - 1;
        }
      }
    }
    uint64_t v401 = (v99 - 1) & v99;
    int64_t v402 = v98;
    unint64_t v95 = __clz(__rbit64(v99)) + (v98 << 6);
LABEL_46:
    id v97 = *(id *)(*(void *)(v86 + 48) + 8 * v95);
    if (!v97) {
      goto LABEL_140;
    }
LABEL_47:
    id v101 = objc_msgSend(v97, sel_handle);
    id v407 = (id)TUNormalizedHandleForTUHandle();

    id v102 = v97;
    uint64_t v103 = (char *)objc_msgSend(v102, sel_handle);
    id v408 = objc_msgSend(v102, sel_identifier);
    id v104 = objc_msgSend(v102, sel_avcIdentifier);
    id v406 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v412 = v105;
    v411 = v103;

    uint64_t v106 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
    swift_beginAccess();
    uint64_t v107 = *(char **)v106;
    uint64_t v108 = *(void *)(*(void *)v106 + 16);
    id v404 = v102;
    if (!v108) {
      goto LABEL_59;
    }
    uint64_t v109 = v400;
    uint64_t v110 = (uint64_t)&v107[(*(unsigned __int8 *)(v400 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v400 + 80)];
    v398 = v107;
    swift_bridgeObjectRetain_n();
    uint64_t v410 = *(void *)(v109 + 72);
    uint64_t v111 = v409;
    while (2)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v110, v111);
      uint64_t v112 = v111 + *(int *)(v18 + 28);
      uint64_t v113 = *(void **)v112;
      id v114 = *(id *)(v112 + 8);
      uint64_t v115 = *(void *)(v112 + 16);
      if (!*(void *)v112)
      {
        os_log_type_t v118 = v411;
        uint64_t v119 = v411;
        swift_bridgeObjectRetain();
        outlined consume of Participant.RemoteIdentifiers?(0);
        outlined consume of Participant.RemoteIdentifiers?(v118);
LABEL_56:
        _s15ConversationKit11ParticipantVWOhTm_13(v111, (void (*)(void))type metadata accessor for Participant);
        goto LABEL_57;
      }
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
      outlined copy of Participant.RemoteIdentifiers?(v113);
      outlined copy of Participant.RemoteIdentifiers?(v113);
      uint64_t v116 = v411;
      swift_bridgeObjectRetain();
      char v117 = static NSObject.== infix(_:_:)();
      swift_bridgeObjectRelease();

      if ((v117 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        outlined consume of Participant.RemoteIdentifiers?(v113);
        uint64_t v111 = v409;
        goto LABEL_56;
      }
      swift_bridgeObjectRelease();
      outlined consume of Participant.RemoteIdentifiers?(v113);
      uint64_t v111 = v409;
      _s15ConversationKit11ParticipantVWOhTm_13(v409, (void (*)(void))type metadata accessor for Participant);
      if ((v115 & 1) == 0 && v114 == v408)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        int64_t v88 = v402;
        unint64_t v89 = v401;
        uint64_t v2 = v405;
        uint64_t v18 = v413;
        goto LABEL_123;
      }
LABEL_57:
      v110 += v410;
      --v108;
      uint64_t v18 = v413;
      if (v108) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease_n();
    uint64_t v2 = v405;
    id v102 = v404;
LABEL_59:
    uint64_t v120 = *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    uint64_t v121 = *(void *)(v120 + 16);
    if (!v121) {
      goto LABEL_73;
    }
    unint64_t v122 = (*(unsigned __int8 *)(v400 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v400 + 80);
    uint64_t v123 = *(void *)(v400 + 72);
    swift_bridgeObjectRetain();
    unint64_t v124 = 0;
    while (2)
    {
      os_log_t v125 = v414;
      _s15ConversationKit11ParticipantVWOcTm_19(v120 + v122, (uint64_t)v414);
      uint64_t v126 = &v125[*(int *)(v18 + 28)];
      if (!*(void *)v126 || (v126[16] & 1) == 0) {
        goto LABEL_70;
      }
      id v127 = *(id *)v126;
      id v128 = (id)TUNormalizedHandleForTUHandle();
      uint64_t v129 = v128;
      if (!v407)
      {
        id v133 = v128;

        if (v133)
        {

          id v127 = v133;
LABEL_69:

LABEL_70:
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v414, (void (*)(void))type metadata accessor for Participant);
          goto LABEL_71;
        }
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v414, (void (*)(void))type metadata accessor for Participant);
LABEL_112:
        swift_bridgeObjectRelease();
        unint64_t v221 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
        uint64_t v222 = *(void *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
        if (v124 < *(void *)(v222 + 16))
        {
          uint64_t v223 = v387;
          _s15ConversationKit11ParticipantVWOcTm_19(v222 + v122, v387);
          uint64_t v224 = v223 + *(int *)(v18 + 28);
          uint64_t v225 = *(void **)v224;
          uint64_t v410 = *(void *)(v224 + 32);
          v226 = v411;
          v398 = v411;
          id v227 = v412;
          swift_bridgeObjectRetain();
          outlined consume of Participant.RemoteIdentifiers?(v225);
          id v228 = v408;
          *(void *)uint64_t v224 = v226;
          *(void *)(v224 + 8) = v228;
          id v229 = v406;
          *(void *)(v224 + 16) = 0;
          *(void *)(v224 + 24) = v229;
          *(void *)(v224 + 32) = v227;
          swift_beginAccess();
          uint64_t v230 = *v221;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *unint64_t v221 = v230;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v230 = specialized _ArrayBuffer._consumeAndCreateNew()();
            *unint64_t v221 = v230;
          }
          int64_t v232 = v402;
          uint64_t v2 = v405;
          uint64_t v18 = v413;
          if (v124 < *(void *)(v230 + 16))
          {
            uint64_t v233 = v387;
            outlined assign with copy of Participant.State(v387, v230 + v122);
            swift_endAccess();

            swift_bridgeObjectRelease();
            _s15ConversationKit11ParticipantVWOhTm_13(v233, (void (*)(void))type metadata accessor for Participant);
            int64_t v88 = v232;
            goto LABEL_122;
          }
          goto LABEL_241;
        }
LABEL_240:
        __break(1u);
LABEL_241:
        __break(1u);
LABEL_242:
        __break(1u);
        goto LABEL_243;
      }
      if (!v128) {
        goto LABEL_69;
      }
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      id v130 = v129;
      id v131 = v407;
      char v132 = static NSObject.== infix(_:_:)();

      uint64_t v18 = v413;
      uint64_t v2 = v405;

      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v414, (void (*)(void))type metadata accessor for Participant);
      if (v132) {
        goto LABEL_112;
      }
LABEL_71:
      ++v124;
      v122 += v123;
      if (v121 != v124) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
    id v102 = v404;
LABEL_73:
    uint64_t v134 = (uint64_t)v395;
    uint64_t v135 = v397;
    ConversationController.createParticipant(for:conversation:)(v102, v397, (uint64_t)v395);
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    if (((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 584))() & 1) == 0) {
      goto LABEL_85;
    }
    id v136 = objc_msgSend(v102, sel_association);
    if (!v136) {
      goto LABEL_85;
    }
    unint64_t v137 = v136;
    uint64_t v138 = v388;
    ConversationController.participant(from:)(v136, v388);
    if (__swift_getEnumTagSinglePayload(v138, 1, v18) == 1)
    {

      outlined destroy of SystemUpdateNotice?(v138, &demangling cache variable for type metadata for Participant?);
      goto LABEL_85;
    }
    uint64_t v139 = v138;
    uint64_t v140 = v386;
    _s15ConversationKit11ParticipantVWObTm_6(v139, v386);
    ConversationController.indexOfRemoteParticipant(with:)();
    if ((v142 & 1) == 0)
    {
      unint64_t v143 = v141;
      uint64_t v410 = (uint64_t)v137;
      uint64_t v144 = *(int *)(v18 + 44);
      MEMORY[0x1F4188790](v141);
      uint64_t v145 = v140;
      *(&v369 - 2) = v134;
      swift_bridgeObjectRetain();
      uint64_t v146 = v383;
      specialized Sequence.contains(where:)((uint64_t)partial apply for closure #5 in ConversationController.createNewParticipants(with:));
      char v148 = v147;
      swift_bridgeObjectRelease();
      uint64_t v383 = v146;
      if (v148)
      {
        id v149 = v404;
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v150 = swift_allocObject();
        *(_OWORD *)(v150 + 16) = v376;
        v424[0] = v149;
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
        id v151 = v149;
        uint64_t v152 = String.init<A>(reflecting:)();
        uint64_t v154 = v153;
        uint64_t v155 = MEMORY[0x1E4FBB1A0];
        *(void *)(v150 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v156 = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v150 + 64) = v156;
        *(void *)(v150 + 32) = v152;
        *(void *)(v150 + 40) = v154;
        uint64_t v157 = v386;
        uint64_t v158 = v382;
        _s15ConversationKit11ParticipantVWOcTm_19(v386, v382);
        __swift_storeEnumTagSinglePayload(v158, 0, 1, v18);
        uint64_t v159 = specialized >> prefix<A>(_:)();
        uint64_t v161 = v160;
        outlined destroy of SystemUpdateNotice?(v158, &demangling cache variable for type metadata for Participant?);
        *(void *)(v150 + 96) = v155;
        *(void *)(v150 + 104) = v156;
        *(void *)(v150 + 72) = v159;
        *(void *)(v150 + 80) = v161;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v162 = v157;
LABEL_110:
        _s15ConversationKit11ParticipantVWOhTm_13(v162, (void (*)(void))type metadata accessor for Participant);
        uint64_t v220 = (uint64_t)v395;
LABEL_133:
        _s15ConversationKit11ParticipantVWOhTm_13(v220, (void (*)(void))type metadata accessor for Participant);
        int64_t v88 = v402;
        unint64_t v89 = v401;
        uint64_t v2 = v405;
LABEL_123:
        unint64_t v86 = v396;
        if ((v396 & 0x8000000000000000) == 0) {
          continue;
        }
LABEL_34:
        uint64_t v96 = __CocoaSet.Iterator.next()();
        if (v96)
        {
          uint64_t v417 = v96;
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v97 = v424[0];
          swift_unknownObjectRelease();
          int64_t v402 = v88;
          uint64_t v401 = v89;
          if (v97) {
            goto LABEL_47;
          }
        }
LABEL_140:
        outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
        long long v258 = v397;
        uint64_t v259 = v397[3];
        uint64_t v260 = v397[4];
        __swift_project_boxed_opaque_existential_1(v397, v259);
        uint64_t v261 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v260 + 88))(v259, v260);
        uint64_t v262 = v258[3];
        uint64_t v263 = v258[4];
        __swift_project_boxed_opaque_existential_1(v258, v262);
        unint64_t v264 = (*(uint64_t (**)(uint64_t, uint64_t))(v263 + 128))(v262, v263);
        specialized Set.union<A>(_:)(v264, v261);
        unint64_t v266 = v265;
        if ((v265 & 0xC000000000000001) != 0)
        {
          __CocoaSet.makeIterator()();
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
          lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
          Set.Iterator.init(_cocoa:)();
          unint64_t v266 = (unint64_t)v424[0];
          id v404 = v424[1];
          v267 = (char *)v424[2];
          id v268 = v424[3];
          unint64_t v269 = (unint64_t)v424[4];
        }
        else
        {
          id v268 = 0;
          uint64_t v270 = -1 << *(unsigned char *)(v265 + 32);
          uint64_t v271 = *(void *)(v265 + 56);
          id v404 = (id)(v265 + 56);
          uint64_t v272 = ~v270;
          uint64_t v273 = -v270;
          if (v273 < 64) {
            uint64_t v274 = ~(-1 << v273);
          }
          else {
            uint64_t v274 = -1;
          }
          unint64_t v269 = v274 & v271;
          v267 = (char *)v272;
        }
        uint64_t v401 = v266 & 0x7FFFFFFFFFFFFFFFLL;
        v395 = v267;
        int64_t v402 = (unint64_t)(v267 + 64) >> 6;
        v398 = (char *)(MEMORY[0x1E4FBC838] + 8);
        unint64_t v396 = v266;
        while (2)
        {
          while (2)
          {
            while (2)
            {
              if ((v266 & 0x8000000000000000) != 0)
              {
                uint64_t v277 = __CocoaSet.Iterator.next()();
                if (!v277) {
                  goto LABEL_236;
                }
                uint64_t v415 = v277;
                type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
                swift_unknownObjectRetain();
                swift_dynamicCast();
                id v278 = v416;
                swift_unknownObjectRelease();
                int64_t v276 = (int64_t)v268;
                unint64_t v409 = v269;
                if (!v278) {
                  goto LABEL_236;
                }
              }
              else
              {
                if (v269)
                {
                  unint64_t v409 = (v269 - 1) & v269;
                  unint64_t v275 = __clz(__rbit64(v269)) | ((void)v268 << 6);
                  int64_t v276 = (int64_t)v268;
                }
                else
                {
                  int64_t v276 = (int64_t)v268 + 1;
                  if (__OFADD__(v268, 1)) {
                    goto LABEL_239;
                  }
                  if (v276 >= v402)
                  {
LABEL_236:
                    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
                    swift_bridgeObjectRelease();
                    return;
                  }
                  unint64_t v279 = *((void *)v404 + v276);
                  if (!v279)
                  {
                    v280 = (char *)v268 + 2;
                    if ((uint64_t)v268 + 2 >= v402) {
                      goto LABEL_236;
                    }
                    unint64_t v279 = *((void *)v404 + (void)v280);
                    if (v279) {
                      goto LABEL_160;
                    }
                    v280 = (char *)v268 + 3;
                    if ((uint64_t)v268 + 3 >= v402) {
                      goto LABEL_236;
                    }
                    unint64_t v279 = *((void *)v404 + (void)v280);
                    if (v279)
                    {
LABEL_160:
                      int64_t v276 = (int64_t)v280;
                    }
                    else
                    {
                      int64_t v276 = (int64_t)v268 + 4;
                      if ((uint64_t)v268 + 4 >= v402) {
                        goto LABEL_236;
                      }
                      unint64_t v279 = *((void *)v404 + v276);
                      if (!v279)
                      {
                        v354 = (char *)v268 + 5;
                        do
                        {
                          if ((uint64_t)v354 >= v402) {
                            goto LABEL_236;
                          }
                          unint64_t v279 = *((void *)v404 + (void)v354++);
                        }
                        while (!v279);
                        int64_t v276 = (int64_t)(v354 - 1);
                      }
                    }
                  }
                  unint64_t v409 = (v279 - 1) & v279;
                  unint64_t v275 = __clz(__rbit64(v279)) + (v276 << 6);
                }
                id v278 = *(id *)(*(void *)(v266 + 48) + 8 * v275);
                if (!v278) {
                  goto LABEL_236;
                }
              }
              id v408 = (id)v276;
              id v281 = objc_msgSend(v278, sel_handles);
              v282 = (char *)type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
              unint64_t v283 = lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
              v414 = v282;
              uint64_t v410 = v283;
              uint64_t v284 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

              unint64_t v285 = v284 & 0xC000000000000001;
              id v412 = v278;
              if ((v284 & 0xC000000000000001) != 0)
              {
                uint64_t v286 = __CocoaSet.startIndex.getter();
                uint64_t v288 = v287;
                uint64_t v289 = __CocoaSet.endIndex.getter();
                uint64_t v291 = v290;
                char v292 = MEMORY[0x1C8774330](v286, v288, v289, v290);
                uint64_t v293 = v289;
                uint64_t v2 = v405;
                outlined consume of Set<TUHandle>.Index._Variant(v293, v291, 1);
                uint64_t v294 = v286;
                uint64_t v295 = v403;
                if (v292) {
                  goto LABEL_232;
                }
              }
              else
              {
                char v296 = *(unsigned char *)(v284 + 32);
                uint64_t v286 = 1 << v296;
                unint64_t v297 = *(void *)(v284 + 56);
                uint64_t v295 = v403;
                if (v297)
                {
                  uint64_t v298 = 0;
                }
                else
                {
                  unsigned int v340 = v296 & 0x3F;
                  if (v340 < 7) {
                    goto LABEL_231;
                  }
                  unint64_t v297 = *(void *)(v284 + 64);
                  if (v297)
                  {
                    uint64_t v298 = 1;
                  }
                  else
                  {
                    if (v340 < 8)
                    {
LABEL_231:
                      uint64_t v288 = *(unsigned int *)(v284 + 36);
LABEL_232:
                      outlined consume of Set<TUHandle>.Index._Variant(v286, v288, v285 != 0);

                      swift_bridgeObjectRelease();
LABEL_233:
                      id v268 = v408;
                      unint64_t v269 = v409;
                      continue;
                    }
                    unint64_t v297 = *(void *)(v284 + 72);
                    if (v297)
                    {
                      uint64_t v298 = 2;
                    }
                    else
                    {
                      uint64_t v366 = 10;
                      do
                      {
                        if (v366 - 7 >= (unint64_t)(v286 + 63) >> 6) {
                          goto LABEL_231;
                        }
                        unint64_t v297 = *(void *)(v284 + 8 * v366++);
                      }
                      while (!v297);
                      uint64_t v298 = v366 - 8;
                    }
                  }
                }
                uint64_t v294 = __clz(__rbit64(v297)) + (v298 << 6);
                uint64_t v288 = *(unsigned int *)(v284 + 36);
                if (v294 == v286) {
                  goto LABEL_232;
                }
              }
              break;
            }
            specialized Set.subscript.getter(v294, v288, v285 != 0, v284);
            id v300 = v299;
            outlined consume of Set<TUHandle>.Index._Variant(v294, v288, v285 != 0);
            swift_bridgeObjectRelease();
            uint64_t v301 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
            swift_beginAccess();
            v302 = *(char **)v301;
            uint64_t v303 = *(void *)(*(void *)v301 + 16);
            if (!v303)
            {
              uint64_t v307 = (uint64_t)v399;
LABEL_187:
              id v323 = v412;
              unsigned __int8 v324 = objc_msgSend(v412, sel_isOtherInvitedHandle);
              uint64_t v2 = v405;
              if (v324)
              {

                goto LABEL_233;
              }
              id v325 = objc_msgSend(v323, sel_association);
              if (v325)
              {
                v326 = v325;
                if (objc_msgSend(v325, sel_type) == (id)2)
                {
                  uint64_t v327 = v397[3];
                  uint64_t v328 = v397[4];
                  __swift_project_boxed_opaque_existential_1(v397, v327);
                  v329 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v328 + 168))(v327, v328);
                  if (v329)
                  {
                    v330 = v329;
                    id v331 = objc_msgSend(v329, sel_handle);
                    id v332 = objc_msgSend(v326, sel_handle);
                    int v333 = TUHandlesAreCanonicallyEqual();

                    if (v333)
                    {
                      unint64_t v334 = v266;
                      if (one-time initialization token for conversationKit != -1) {
                        swift_once();
                      }
                      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                      uint64_t v335 = swift_allocObject();
                      *(_OWORD *)(v335 + 16) = v389;
                      id v416 = v323;
                      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
                      id v336 = v323;
                      uint64_t v337 = String.init<A>(reflecting:)();
                      uint64_t v339 = v338;
                      *(void *)(v335 + 56) = MEMORY[0x1E4FBB1A0];
                      *(void *)(v335 + 64) = lazy protocol witness table accessor for type String and conformance String();
                      *(void *)(v335 + 32) = v337;
                      *(void *)(v335 + 40) = v339;
                      static os_log_type_t.default.getter();
                      os_log(_:dso:log:type:_:)();

LABEL_216:
                      swift_bridgeObjectRelease();
                      id v268 = v408;
                      unint64_t v269 = v409;
                      unint64_t v266 = v334;
                      continue;
                    }
                  }
                  if ((objc_msgSend(v326, sel_isPrimary) & 1) == 0)
                  {
                    unint64_t v334 = v266;
                    if (one-time initialization token for conversationKit != -1) {
                      swift_once();
                    }
                    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                    uint64_t v349 = swift_allocObject();
                    *(_OWORD *)(v349 + 16) = v389;
                    id v416 = v323;
                    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
                    id v350 = v323;
                    uint64_t v351 = String.init<A>(reflecting:)();
                    uint64_t v353 = v352;
                    *(void *)(v349 + 56) = MEMORY[0x1E4FBB1A0];
                    *(void *)(v349 + 64) = lazy protocol witness table accessor for type String and conformance String();
                    *(void *)(v349 + 32) = v351;
                    *(void *)(v349 + 40) = v353;
                    static os_log_type_t.default.getter();
                    os_log(_:dso:log:type:_:)();

                    goto LABEL_216;
                  }
                  uint64_t v342 = v372;
                  ConversationController.participant(fromMemberAssociation:)(v326, v372);
                  if (__swift_getEnumTagSinglePayload(v342, 1, v413) != 1)
                  {
                    uint64_t v355 = v371;
                    _s15ConversationKit11ParticipantVWObTm_6(v342, v371);
                    if (one-time initialization token for conversationKit != -1) {
                      swift_once();
                    }
                    v356 = (void *)static OS_os_log.conversationKit;
                    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                    uint64_t v357 = swift_allocObject();
                    *(_OWORD *)(v357 + 16) = v376;
                    id v416 = v323;
                    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
                    v414 = (char *)v323;
                    uint64_t v358 = String.init<A>(reflecting:)();
                    uint64_t v360 = v359;
                    *(void *)(v357 + 56) = MEMORY[0x1E4FBB1A0];
                    unint64_t v361 = lazy protocol witness table accessor for type String and conformance String();
                    *(void *)(v357 + 64) = v361;
                    *(void *)(v357 + 32) = v358;
                    *(void *)(v357 + 40) = v360;
                    uint64_t v362 = v373;
                    _s15ConversationKit11ParticipantVWOcTm_19(v355, v373);
                    uint64_t v363 = v413;
                    __swift_storeEnumTagSinglePayload(v362, 0, 1, v413);
                    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v362, v307, &demangling cache variable for type metadata for Participant?);
                    if (__swift_getEnumTagSinglePayload(v307, 1, v363) == 1)
                    {
                      outlined destroy of SystemUpdateNotice?(v307, &demangling cache variable for type metadata for Participant?);
                      unint64_t v364 = 0xE300000000000000;
                      uint64_t v365 = 7104878;
                    }
                    else
                    {
                      id v412 = v356;
                      uint64_t v367 = v370;
                      _s15ConversationKit11ParticipantVWObTm_6(v307, v370);
                      _s15ConversationKit11ParticipantVWOcTm_19(v367, v380);
                      uint64_t v365 = String.init<A>(reflecting:)();
                      unint64_t v364 = v368;
                      _s15ConversationKit11ParticipantVWOhTm_13(v367, (void (*)(void))type metadata accessor for Participant);
                    }
                    outlined destroy of SystemUpdateNotice?(v373, &demangling cache variable for type metadata for Participant?);
                    *(void *)(v357 + 96) = MEMORY[0x1E4FBB1A0];
                    *(void *)(v357 + 104) = v361;
                    *(void *)(v357 + 72) = v365;
                    *(void *)(v357 + 80) = v364;
                    static os_log_type_t.default.getter();
                    os_log(_:dso:log:type:_:)();

                    swift_bridgeObjectRelease();
                    _s15ConversationKit11ParticipantVWOhTm_13(v371, (void (*)(void))type metadata accessor for Participant);
                    id v268 = v408;
                    unint64_t v269 = v409;
                    goto LABEL_201;
                  }
                  outlined destroy of SystemUpdateNotice?(v342, &demangling cache variable for type metadata for Participant?);
                  if (one-time initialization token for conversationKit != -1) {
                    swift_once();
                  }
                  static os_log_type_t.error.getter();
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                  uint64_t v343 = swift_allocObject();
                  *(_OWORD *)(v343 + 16) = v389;
                  id v416 = v323;
                  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
                  id v344 = v323;
                  uint64_t v345 = String.init<A>(reflecting:)();
                  id v346 = v323;
                  uint64_t v348 = v347;
                  *(void *)(v343 + 56) = MEMORY[0x1E4FBB1A0];
                  *(void *)(v343 + 64) = lazy protocol witness table accessor for type String and conformance String();
                  *(void *)(v343 + 32) = v345;
                  *(void *)(v343 + 40) = v348;
                  id v323 = v346;
                  os_log(_:dso:log:type:_:)();

                  swift_bridgeObjectRelease();
                }
                else
                {
                }
              }
              uint64_t v341 = v380;
              ConversationController.createParticipant(for:conversation:)(v300, v397, v380);
              closure #1 in ConversationController.createNewParticipants(with:)(v341, v2);

              _s15ConversationKit11ParticipantVWOhTm_13(v341, (void (*)(void))type metadata accessor for Participant);
              goto LABEL_233;
            }
            break;
          }
          id v407 = v300;
          uint64_t v304 = v400;
          v411 = &v302[(*(unsigned __int8 *)(v304 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v304 + 80)];
          id v406 = v302;
          swift_bridgeObjectRetain();
          uint64_t v305 = 0;
          uint64_t v306 = *(void *)(v304 + 72);
          uint64_t v307 = (uint64_t)v399;
          uint64_t v308 = v413;
LABEL_171:
          _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)&v411[v306 * v305], v295);
          v309 = *(void **)(v295 + *(int *)(v308 + 28));
          if (v309)
          {
            id v310 = v309;
            id v311 = objc_msgSend(v412, sel_handles);
            uint64_t v312 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

            if ((v312 & 0xC000000000000001) != 0)
            {
              id v313 = v310;
              char v314 = __CocoaSet.contains(_:)();
              swift_bridgeObjectRelease();

              uint64_t v308 = v413;
              _s15ConversationKit11ParticipantVWOhTm_13(v295, (void (*)(void))type metadata accessor for Participant);
              if (v314) {
                goto LABEL_200;
              }
              goto LABEL_184;
            }
            if (*(void *)(v312 + 16))
            {
              Swift::Int v315 = NSObject._rawHashValue(seed:)(*(void *)(v312 + 40));
              uint64_t v316 = -1 << *(unsigned char *)(v312 + 32);
              unint64_t v317 = v315 & ~v316;
              if ((*(void *)(v312 + 56 + ((v317 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v317))
              {
                id v318 = *(id *)(*(void *)(v312 + 48) + 8 * v317);
                char v319 = static NSObject.== infix(_:_:)();

                if (v319)
                {
LABEL_199:

                  swift_bridgeObjectRelease();
                  _s15ConversationKit11ParticipantVWOhTm_13(v403, (void (*)(void))type metadata accessor for Participant);
LABEL_200:

                  swift_bridgeObjectRelease();
                  id v268 = v408;
                  unint64_t v269 = v409;
                  uint64_t v2 = v405;
LABEL_201:
                  unint64_t v266 = v396;
                  continue;
                }
                uint64_t v320 = ~v316;
                while (1)
                {
                  unint64_t v317 = (v317 + 1) & v320;
                  if (((*(void *)(v312 + 56 + ((v317 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v317) & 1) == 0) {
                    break;
                  }
                  id v321 = *(id *)(*(void *)(v312 + 48) + 8 * v317);
                  char v322 = static NSObject.== infix(_:_:)();

                  if (v322) {
                    goto LABEL_199;
                  }
                }
              }
            }

            swift_bridgeObjectRelease();
            uint64_t v307 = (uint64_t)v399;
            uint64_t v308 = v413;
            uint64_t v295 = v403;
          }
          break;
        }
        _s15ConversationKit11ParticipantVWOhTm_13(v295, (void (*)(void))type metadata accessor for Participant);
LABEL_184:
        if (++v305 == v303)
        {
          swift_bridgeObjectRelease();
          unint64_t v266 = v396;
          id v300 = v407;
          goto LABEL_187;
        }
        goto LABEL_171;
      }
      uint64_t v235 = *(void *)(v145 + v144);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      uint64_t v236 = *(void *)(v400 + 72);
      unint64_t v237 = (*(unsigned __int8 *)(v400 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v400 + 80);
      uint64_t v238 = swift_allocObject();
      *(_OWORD *)(v238 + 16) = v389;
      _s15ConversationKit11ParticipantVWOcTm_19(v134, v238 + v237);
      swift_bridgeObjectRetain();
      specialized Set.union<A>(_:)(v238, v235);
      Participant.withAssociatedParticipants(_:)();
      swift_bridgeObjectRelease();
      uint64_t v239 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
      swift_beginAccess();
      uint64_t v240 = *v239;
      char v241 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v239 = v240;
      id v242 = v404;
      if ((v241 & 1) == 0)
      {
        uint64_t v240 = specialized _ArrayBuffer._consumeAndCreateNew()();
        *uint64_t v239 = v240;
      }
      if ((v143 & 0x8000000000000000) != 0) {
        goto LABEL_247;
      }
      if (v143 >= *(void *)(v240 + 16)) {
        goto LABEL_248;
      }
      outlined assign with copy of Participant.State(v379, v240 + v237 + v236 * v143);
      swift_endAccess();
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      id v408 = (id)static OS_os_log.conversationKit;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v243 = swift_allocObject();
      *(_OWORD *)(v243 + 16) = v375;
      v424[0] = v242;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      id v406 = v242;
      uint64_t v244 = String.init<A>(reflecting:)();
      uint64_t v246 = v245;
      uint64_t v247 = MEMORY[0x1E4FBB1A0];
      *(void *)(v243 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v248 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v243 + 64) = v248;
      *(void *)(v243 + 32) = v244;
      *(void *)(v243 + 40) = v246;
      uint64_t v190 = (uint64_t)v395;
      uint64_t v249 = v382;
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v395, v382);
      __swift_storeEnumTagSinglePayload(v249, 0, 1, v18);
      uint64_t v250 = specialized >> prefix<A>(_:)();
      uint64_t v252 = v251;
      outlined destroy of SystemUpdateNotice?(v249, &demangling cache variable for type metadata for Participant?);
      *(void *)(v243 + 96) = v247;
      *(void *)(v243 + 104) = v248;
      *(void *)(v243 + 72) = v250;
      *(void *)(v243 + 80) = v252;
      uint64_t v18 = v413;
      uint64_t v253 = v386;
      _s15ConversationKit11ParticipantVWOcTm_19(v386, v249);
      __swift_storeEnumTagSinglePayload(v249, 0, 1, v18);
      uint64_t v254 = specialized >> prefix<A>(_:)();
      uint64_t v256 = v255;
      outlined destroy of SystemUpdateNotice?(v249, &demangling cache variable for type metadata for Participant?);
      *(void *)(v243 + 136) = v247;
      *(void *)(v243 + 144) = v248;
      *(void *)(v243 + 112) = v254;
      *(void *)(v243 + 120) = v256;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      _s15ConversationKit11ParticipantVWOhTm_13(v379, (void (*)(void))type metadata accessor for Participant);
      uint64_t v198 = v253;
LABEL_132:
      _s15ConversationKit11ParticipantVWOhTm_13(v198, (void (*)(void))type metadata accessor for Participant);
      uint64_t v220 = v190;
      goto LABEL_133;
    }
    break;
  }
  _s15ConversationKit11ParticipantVWOhTm_13(v140, (void (*)(void))type metadata accessor for Participant);

LABEL_85:
  id v163 = ConversationController.identityClaimingAssociationRelationship(for:in:)(v102, v135);
  if (!v164)
  {
    uint64_t v165 = v385;
    ConversationController.remoteParticipant(with:)((uint64_t)v163, v385);
    if (__swift_getEnumTagSinglePayload(v165, 1, v18) == 1) {
      goto LABEL_101;
    }
    uint64_t v171 = v165;
    uint64_t v172 = v381;
    _s15ConversationKit11ParticipantVWObTm_6(v171, v381);
    ConversationController.indexOfRemoteParticipant(with:)();
    if (v174)
    {
      uint64_t v234 = v172;
LABEL_119:
      _s15ConversationKit11ParticipantVWOhTm_13(v234, (void (*)(void))type metadata accessor for Participant);
      goto LABEL_120;
    }
    unint64_t v175 = v173;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
    uint64_t v176 = *(void *)(v400 + 72);
    unint64_t v177 = (*(unsigned __int8 *)(v400 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v400 + 80);
    uint64_t v178 = swift_allocObject();
    *(_OWORD *)(v178 + 16) = v389;
    _s15ConversationKit11ParticipantVWOcTm_19(v134, v178 + v177);
    specialized Set.init(_nonEmptyArrayLiteral:)();
    Participant.withAssociatedParticipants(_:)();
    swift_bridgeObjectRelease();
    uint64_t v179 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    swift_beginAccess();
    uint64_t v180 = *v179;
    char v181 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v179 = v180;
    if ((v181 & 1) == 0)
    {
      uint64_t v180 = specialized _ArrayBuffer._consumeAndCreateNew()();
      *uint64_t v179 = v180;
    }
    if ((v175 & 0x8000000000000000) == 0)
    {
      if (v175 < *(void *)(v180 + 16))
      {
        uint64_t v182 = v180 + v177 + v176 * v175;
        uint64_t v183 = v377;
        outlined assign with copy of Participant.State(v377, v182);
        swift_endAccess();
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        uint64_t v410 = static OS_os_log.conversationKit;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v184 = swift_allocObject();
        *(_OWORD *)(v184 + 16) = v375;
        v424[0] = v102;
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
        id v408 = v102;
        uint64_t v185 = String.init<A>(reflecting:)();
        uint64_t v187 = v186;
        uint64_t v188 = MEMORY[0x1E4FBB1A0];
        *(void *)(v184 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v189 = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v184 + 64) = v189;
        *(void *)(v184 + 32) = v185;
        *(void *)(v184 + 40) = v187;
        uint64_t v190 = (uint64_t)v395;
        uint64_t v191 = v382;
        _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v395, v382);
        __swift_storeEnumTagSinglePayload(v191, 0, 1, v18);
        uint64_t v192 = specialized >> prefix<A>(_:)();
        uint64_t v194 = v193;
        outlined destroy of SystemUpdateNotice?(v191, &demangling cache variable for type metadata for Participant?);
        *(void *)(v184 + 96) = v188;
        *(void *)(v184 + 104) = v189;
        *(void *)(v184 + 72) = v192;
        *(void *)(v184 + 80) = v194;
        uint64_t v18 = v413;
        _s15ConversationKit11ParticipantVWOcTm_19(v183, v191);
        __swift_storeEnumTagSinglePayload(v191, 0, 1, v18);
        uint64_t v195 = specialized >> prefix<A>(_:)();
        uint64_t v197 = v196;
        outlined destroy of SystemUpdateNotice?(v191, &demangling cache variable for type metadata for Participant?);
        *(void *)(v184 + 136) = v188;
        *(void *)(v184 + 144) = v189;
        *(void *)(v184 + 112) = v195;
        *(void *)(v184 + 120) = v197;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        _s15ConversationKit11ParticipantVWOhTm_13(v183, (void (*)(void))type metadata accessor for Participant);
        uint64_t v198 = v381;
        goto LABEL_132;
      }
      goto LABEL_244;
    }
LABEL_243:
    __break(1u);
LABEL_244:
    __break(1u);
LABEL_245:
    __break(1u);
    goto LABEL_246;
  }
  uint64_t v165 = v394;
  if (v164 != 1)
  {
    if (v164 == 2)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v166 = swift_allocObject();
      *(_OWORD *)(v166 + 16) = v389;
      v424[0] = v102;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      id v167 = v102;
      uint64_t v168 = String.init<A>(reflecting:)();
      uint64_t v170 = v169;
      *(void *)(v166 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v166 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v166 + 32) = v168;
      *(void *)(v166 + 40) = v170;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_121:
      _s15ConversationKit11ParticipantVWOhTm_13(v134, (void (*)(void))type metadata accessor for Participant);
      int64_t v88 = v402;
LABEL_122:
      unint64_t v89 = v401;
      goto LABEL_123;
    }
LABEL_120:
    closure #1 in ConversationController.createNewParticipants(with:)(v134, v2);

    swift_bridgeObjectRelease();
    goto LABEL_121;
  }
  ConversationController.remoteParticipant(with:)((uint64_t)v163, v394);
  if (__swift_getEnumTagSinglePayload(v165, 1, v18) == 1)
  {
LABEL_101:
    outlined destroy of SystemUpdateNotice?(v165, &demangling cache variable for type metadata for Participant?);
    goto LABEL_120;
  }
  uint64_t v199 = v384;
  _s15ConversationKit11ParticipantVWObTm_6(v165, v384);
  ConversationController.indexOfRemoteParticipant(with:)();
  if (v201)
  {
    uint64_t v234 = v199;
    goto LABEL_119;
  }
  unint64_t v202 = v200;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  uint64_t v203 = *(void *)(v400 + 72);
  unint64_t v204 = (*(unsigned __int8 *)(v400 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v400 + 80);
  uint64_t v205 = swift_allocObject();
  *(_OWORD *)(v205 + 16) = v389;
  _s15ConversationKit11ParticipantVWOcTm_19(v199, v205 + v204);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  Participant.withAssociatedParticipants(_:)();
  swift_bridgeObjectRelease();
  uint64_t v206 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  uint64_t v207 = *v206;
  char v208 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v206 = v207;
  if ((v208 & 1) == 0)
  {
    uint64_t v207 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *uint64_t v206 = v207;
  }
  uint64_t v209 = v378;
  if ((v202 & 0x8000000000000000) != 0) {
    goto LABEL_245;
  }
  if (v202 < *(void *)(v207 + 16))
  {
    outlined assign with copy of Participant.State(v378, v207 + v204 + v203 * v202);
    swift_endAccess();
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v410 = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v210 = swift_allocObject();
    *(_OWORD *)(v210 + 16) = v376;
    uint64_t v211 = v382;
    _s15ConversationKit11ParticipantVWOcTm_19(v384, v382);
    __swift_storeEnumTagSinglePayload(v211, 0, 1, v18);
    uint64_t v212 = specialized >> prefix<A>(_:)();
    uint64_t v214 = v213;
    outlined destroy of SystemUpdateNotice?(v211, &demangling cache variable for type metadata for Participant?);
    uint64_t v215 = MEMORY[0x1E4FBB1A0];
    *(void *)(v210 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v216 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v210 + 64) = v216;
    *(void *)(v210 + 32) = v212;
    *(void *)(v210 + 40) = v214;
    _s15ConversationKit11ParticipantVWOcTm_19(v209, v211);
    __swift_storeEnumTagSinglePayload(v211, 0, 1, v18);
    uint64_t v217 = specialized >> prefix<A>(_:)();
    uint64_t v219 = v218;
    outlined destroy of SystemUpdateNotice?(v211, &demangling cache variable for type metadata for Participant?);
    *(void *)(v210 + 96) = v215;
    *(void *)(v210 + 104) = v216;
    *(void *)(v210 + 72) = v217;
    *(void *)(v210 + 80) = v219;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    _s15ConversationKit11ParticipantVWOhTm_13(v209, (void (*)(void))type metadata accessor for Participant);
    uint64_t v162 = v384;
    goto LABEL_110;
  }
LABEL_246:
  __break(1u);
LABEL_247:
  __break(1u);
LABEL_248:
  __break(1u);
}

uint64_t ConversationController.updateRemoteParticipantsStates(with:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v185 = (uint64_t)&v179 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.State?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v184 = (uint64_t)&v179 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Participant.State(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v179 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v195 = (uint64_t)&v179 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v194 = (uint64_t)&v179 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v186 = (uint64_t)&v179 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v179 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v206 = (uint64_t)&v179 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v210 = (uint64_t)&v179 - v21;
  uint64_t v218 = type metadata accessor for Participant(0);
  uint64_t v211 = *(void *)(v218 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v218);
  uint64_t v182 = (uint64_t)&v179 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v204 = (uint64_t)&v179 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v201 = (uint64_t)&v179 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  char v208 = (char *)&v179 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v217 = (uint64_t)&v179 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v179 - v32;
  uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant));
  MEMORY[0x1F4188790](v221);
  uint64_t v205 = (char *)&v179 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant)?);
  uint64_t v36 = MEMORY[0x1F4188790](v35 - 8);
  uint64_t v213 = (unint64_t *)((char *)&v179 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v36);
  uint64_t v214 = (unint64_t *)((char *)&v179 - v38);
  uint64_t v39 = type metadata accessor for DispatchPredicate();
  uint64_t v40 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v42 = (uint64_t *)((char *)&v179 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v42 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v40 + 104))(v42, *MEMORY[0x1E4FBCBE8], v39);
  char v43 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v40 + 8))(v42, v39);
  if ((v43 & 1) == 0) {
    goto LABEL_89;
  }
  uint64_t v44 = v219;
  uint64_t v45 = (uint64_t *)(v219 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  unint64_t v200 = v45;
  uint64_t v46 = *v45;
  unint64_t v215 = *(void *)(*v45 + 16);
  uint64_t v47 = v44 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  uint64_t v191 = OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame;
  uint64_t v207 = v46;
  swift_bridgeObjectRetain();
  uint64_t v192 = v47;
  swift_beginAccess();
  unint64_t v48 = 0;
  uint64_t v183 = &v226[1];
  uint64_t v187 = (void *)0x80000001C37BB630;
  uint64_t v179 = (void *)0x80000001C37BB680;
  uint64_t v180 = (void *)0x80000001C37BB6D0;
  long long v199 = xmmword_1C3769620;
  unint64_t v202 = (void *)0x80000001C37BB740;
  uint64_t v203 = v33;
  uint64_t v193 = a1;
  uint64_t v197 = v9;
  uint64_t v198 = v6;
  char v181 = v18;
  uint64_t v49 = (uint64_t)v208;
  uint64_t v50 = v217;
  uint64_t v51 = v221;
  while (1)
  {
    if (v48 == v215)
    {
      uint64_t v52 = v6;
      uint64_t v53 = 1;
      unint64_t v220 = v215;
      uint64_t v54 = (uint64_t)v213;
      goto LABEL_7;
    }
    if (v48 >= *(void *)(v207 + 16))
    {
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
      JUMPOUT(0x1C363B2A8);
    }
    uint64_t v52 = v6;
    uint64_t v55 = (uint64_t)&v205[*(int *)(v51 + 48)];
    _s15ConversationKit11ParticipantVWOcTm_19(v207+ ((*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80))+ *(void *)(v211 + 72) * v48, v55);
    uint64_t v54 = (uint64_t)v213;
    uint64_t v56 = (uint64_t)v213 + *(int *)(v221 + 48);
    *uint64_t v213 = v48;
    uint64_t v57 = v55;
    uint64_t v51 = v221;
    _s15ConversationKit11ParticipantVWObTm_6(v57, v56);
    uint64_t v53 = 0;
    unint64_t v220 = v48 + 1;
    uint64_t v50 = v217;
LABEL_7:
    __swift_storeEnumTagSinglePayload(v54, v53, 1, v51);
    uint64_t v58 = v54;
    int v59 = v214;
    outlined init with take of AspectRatio?(v58, (uint64_t)v214, &demangling cache variable for type metadata for (offset: Int, element: Participant)?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v51) == 1) {
      return swift_bridgeObjectRelease();
    }
    unint64_t v60 = *v59;
    _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v59 + *(int *)(v51 + 48), (uint64_t)v33);
    uint64_t v6 = v52;
    if (!*(void *)&v33[*(int *)(v218 + 28)]) {
      goto LABEL_80;
    }
    id v222 = (id)ConversationController.activeParticipant(correspondingTo:in:)((uint64_t)v33, a1);
    int v61 = (void **)ConversationController.pendingMember(correspondingTo:in:)((uint64_t)v33, a1);
    _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v33, v49);
    if (v61)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v49, v210);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v66 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v210, v66);
          goto LABEL_14;
        case 4u:
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v82 = v210 + *(int *)(v81 + 48);
          outlined consume of Participant.CopresenceInfo?(*(void *)(v210 + *(int *)(v81 + 64)), *(void *)(v210 + *(int *)(v81 + 64) + 8));
          outlined destroy of Participant.MediaInfo(v82);
          goto LABEL_11;
        case 6u:
          goto LABEL_12;
        default:
LABEL_11:
          uint64_t v62 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v210, v62);
LABEL_12:
          uint64_t v63 = _s15ConversationKit11ParticipantVWOhTm_13(v49, (void (*)(void))type metadata accessor for Participant);
          Participant.asPendingAuthorization()(v63);
          v226[0] = 0;
          v226[1] = 0xE000000000000000;
          _StringGuts.grow(_:)(95);
          v64._countAndFlagsBits = 0xD00000000000005DLL;
          v64._object = v202;
          String.append(_:)(v64);
          _print_unlocked<A, B>(_:_:)();
          uint64_t v212 = v226[0];
          unint64_t v65 = v226[1];
          break;
      }
    }
    else
    {
LABEL_14:
      _s15ConversationKit11ParticipantVWOhTm_13(v49, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v33, v206);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v84 = *(int *)(v83 + 48);
          unint64_t v209 = v60;
          uint64_t v85 = v206;
          uint64_t v86 = v206 + v84;
          outlined consume of Participant.CopresenceInfo?(*(void *)(v206 + *(int *)(v83 + 64)), *(void *)(v206 + *(int *)(v83 + 64) + 8));
          outlined destroy of Participant.MediaInfo(v86);
          uint64_t v87 = type metadata accessor for Date();
          int64_t v88 = *(void (**)(uint64_t, uint64_t))(*(void *)(v87 - 8) + 8);
          uint64_t v89 = v85;
          unint64_t v60 = v209;
          v88(v89, v87);
          if (v222) {
            goto LABEL_16;
          }
          uint64_t v90 = (uint64_t)v181;
          _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v33, (uint64_t)v181);
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v88(v90, v87);
            uint64_t v50 = v217;
            _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v33, v217);
          }
          else
          {
            _s15ConversationKit11ParticipantVWOhTm_13(v90, (void (*)(void))type metadata accessor for Participant.State);
            uint64_t v158 = v184;
            Date.init()();
            swift_storeEnumTagMultiPayload();
            __swift_storeEnumTagSinglePayload(v158, 0, 1, v6);
            uint64_t v196 = v61;
            uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
            unint64_t v216 = &v179;
            MEMORY[0x1F4188790](v159 - 8);
            uint64_t v161 = (char *)&v179 - ((v160 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v162 = type metadata accessor for UUID();
            __swift_storeEnumTagSinglePayload((uint64_t)v161, 1, 1, v162);
            v226[0] = 1;
            id v163 = v183;
            *uint64_t v183 = 0u;
            v163[1] = 0u;
            uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
            uint64_t v165 = v185;
            __swift_storeEnumTagSinglePayload(v185, 1, 1, v164);
            LOBYTE(v177) = 2;
            uint64_t v50 = v217;
            Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v158, (uint64_t)v161, 2, (uint64_t)v226, 0, 0, 1, v165, v177, 0, 0, v178, (uint64_t)v179, (uint64_t)v180, (uint64_t)v181, v182, (uint64_t)v183, v184, v185,
              v186,
              (char)v187,
              (uint64_t)ObjectType,
              v189);
            outlined destroy of SystemUpdateNotice?(v165, &demangling cache variable for type metadata for Participant.CountdownInfo??);
            int v61 = v196;
            outlined destroy of SystemUpdateNotice?((uint64_t)v161, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            uint64_t v166 = v158;
            uint64_t v33 = v203;
            outlined destroy of SystemUpdateNotice?(v166, (uint64_t *)&demangling cache variable for type metadata for Participant.State?);
          }
          v226[0] = 0;
          v226[1] = 0xE000000000000000;
          _StringGuts.grow(_:)(103);
          v167._countAndFlagsBits = 0xD000000000000065;
          v167._object = v180;
          String.append(_:)(v167);
          _print_unlocked<A, B>(_:_:)();
          uint64_t v212 = v226[0];
          unint64_t v216 = (void **)v226[1];
          uint64_t v49 = (uint64_t)v208;
          unint64_t v60 = v209;
          goto LABEL_56;
        case 6u:
          goto LABEL_16;
        default:
          uint64_t v67 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v206, v67);
LABEL_16:
          if (v61)
          {
            uint64_t v68 = v201;
            _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v33, v201);
          }
          else
          {
            uint64_t v68 = v201;
            _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v33, v201);
            if (!v222)
            {
              _s15ConversationKit11ParticipantVWOcTm_19(v68, v186);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              uint64_t v68 = v201;
              switch(EnumCaseMultiPayload)
              {
                case 2:
                  uint64_t v168 = type metadata accessor for Date();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v168 - 8) + 8))(v186, v168);
                  uint64_t v169 = _s15ConversationKit11ParticipantVWOhTm_13(v68, (void (*)(void))type metadata accessor for Participant);
                  uint64_t v50 = v217;
                  Participant.asWaiting()(v169);
                  v226[0] = 0;
                  v226[1] = 0xE000000000000000;
                  _StringGuts.grow(_:)(76);
                  v170._countAndFlagsBits = 0xD00000000000004ALL;
                  v170._object = v179;
                  String.append(_:)(v170);
                  _print_unlocked<A, B>(_:_:)();
                  uint64_t v212 = v226[0];
                  unint64_t v216 = (void **)v226[1];
                  uint64_t v49 = (uint64_t)v208;
                  break;
                case 4:
                  uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
                  uint64_t v172 = v186;
                  uint64_t v173 = v186 + *(int *)(v171 + 48);
                  outlined consume of Participant.CopresenceInfo?(*(void *)(v186 + *(int *)(v171 + 64)), *(void *)(v186 + *(int *)(v171 + 64) + 8));
                  uint64_t v174 = v173;
                  uint64_t v68 = v201;
                  outlined destroy of Participant.MediaInfo(v174);
                  uint64_t v175 = type metadata accessor for Date();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v175 - 8) + 8))(v172, v175);
                  goto LABEL_21;
                case 6:
                  goto LABEL_21;
                default:
                  uint64_t v70 = type metadata accessor for Date();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v70 - 8) + 8))(v186, v70);
                  goto LABEL_21;
              }
              goto LABEL_56;
            }
          }
LABEL_21:
          _s15ConversationKit11ParticipantVWOhTm_13(v68, (void (*)(void))type metadata accessor for Participant);
          uint64_t v71 = a1[3];
          uint64_t v72 = a1[4];
          __swift_project_boxed_opaque_existential_1(a1, v71);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v72 + 56))(v71, v72) != 3)
          {
            _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v33, v194);
            uint64_t v78 = swift_getEnumCaseMultiPayload();
            uint64_t v49 = (uint64_t)v208;
            unint64_t v209 = v60;
            switch((int)v78)
            {
              case 2:
                uint64_t v79 = type metadata accessor for Date();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v194, v79);
                uint64_t v80 = v204;
                _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v33, v204);
                goto LABEL_37;
              case 4:
                uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
                uint64_t v92 = v194 + *(int *)(v91 + 48);
                outlined consume of Participant.CopresenceInfo?(*(void *)(v194 + *(int *)(v91 + 64)), *(void *)(v194 + *(int *)(v91 + 64) + 8));
                outlined destroy of Participant.MediaInfo(v92);
                goto LABEL_35;
              case 6:
                goto LABEL_36;
              default:
LABEL_35:
                uint64_t v93 = type metadata accessor for Date();
                uint64_t v78 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v93 - 8) + 8))(v194, v93);
LABEL_36:
                uint64_t v80 = v204;
                Participant.asWaiting()(v78);
LABEL_37:
                _s15ConversationKit11ParticipantVWOcTm_19(v80, v195);
                int v94 = swift_getEnumCaseMultiPayload();
                uint64_t v95 = v218;
                switch(v94)
                {
                  case 2:
                    uint64_t v96 = type metadata accessor for Date();
                    (*(void (**)(uint64_t, uint64_t))(*(void *)(v96 - 8) + 8))(v195, v96);
                    goto LABEL_54;
                  case 4:
                    uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
                    uint64_t v98 = v195 + *(int *)(v97 + 48);
                    outlined consume of Participant.CopresenceInfo?(*(void *)(v195 + *(int *)(v97 + 64)), *(void *)(v195 + *(int *)(v97 + 64) + 8));
                    outlined destroy of Participant.MediaInfo(v98);
                    goto LABEL_40;
                  case 6:
                    goto LABEL_41;
                  default:
LABEL_40:
                    uint64_t v99 = type metadata accessor for Date();
                    (*(void (**)(uint64_t, uint64_t))(*(void *)(v99 - 8) + 8))(v195, v99);
LABEL_41:
                    uint64_t v100 = v204;
                    id v101 = *(void **)(v204 + *(int *)(v95 + 28));
                    if (v101)
                    {
                      id v102 = objc_msgSend(v101, sel_value);
                      if (!v102)
                      {
                        uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                        id v102 = (id)MEMORY[0x1C87730B0](v103);
                        swift_bridgeObjectRelease();
                      }
                      unsigned int v104 = objc_msgSend(v102, sel_destinationIdIsTemporary, v179);

                      uint64_t v100 = v204;
                      if (v104)
                      {
                        uint64_t v105 = v184;
                        __swift_storeEnumTagSinglePayload(v184, 1, 1, v6);
                        uint64_t v196 = v61;
                        uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
                        unint64_t v216 = &v179;
                        MEMORY[0x1F4188790](v106 - 8);
                        uint64_t v108 = (char *)&v179 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
                        uint64_t v109 = type metadata accessor for UUID();
                        __swift_storeEnumTagSinglePayload((uint64_t)v108, 1, 1, v109);
                        uint64_t v110 = (unsigned __int8 *)(v204 + *(int *)(v218 + 24));
                        uint64_t v111 = *v110;
                        int v112 = v110[1];
                        int v113 = v110[2];
                        int v114 = v110[4];
                        BOOL v115 = v112 == 0;
                        uint64_t v116 = 256;
                        if (v115) {
                          uint64_t v116 = 0;
                        }
                        uint64_t v117 = v116 | v111;
                        uint64_t v118 = 0x10000;
                        if (!v113) {
                          uint64_t v118 = 0;
                        }
                        BOOL v115 = v114 == 0;
                        uint64_t v119 = 0x100000000;
                        if (v115) {
                          uint64_t v119 = 0;
                        }
                        uint64_t v120 = v117 | v118 | v119;
                        v226[0] = 1;
                        uint64_t v121 = v183;
                        *uint64_t v183 = 0u;
                        v121[1] = 0u;
                        uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
                        uint64_t v123 = v185;
                        __swift_storeEnumTagSinglePayload(v185, 1, 1, v122);
                        LOBYTE(v177) = 2;
                        uint64_t v124 = v182;
                        Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v105, (uint64_t)v108, v120, (uint64_t)v226, 0, 0, 1, v123, v177, 0, 0, v178, (uint64_t)v179, (uint64_t)v180, (uint64_t)v181, v182, (uint64_t)v183, v184, v185,
                          v186,
                          (char)v187,
                          (uint64_t)ObjectType,
                          v189);
                        outlined destroy of SystemUpdateNotice?(v123, &demangling cache variable for type metadata for Participant.CountdownInfo??);
                        int v61 = v196;
                        outlined destroy of SystemUpdateNotice?((uint64_t)v108, (uint64_t *)&demangling cache variable for type metadata for UUID?);
                        outlined destroy of SystemUpdateNotice?(v105, (uint64_t *)&demangling cache variable for type metadata for Participant.State?);
                        uint64_t v125 = v124;
                        uint64_t v49 = (uint64_t)v208;
                        outlined assign with take of Participant(v125, v204);
LABEL_54:
                        uint64_t v100 = v204;
                      }
                    }
                    uint64_t v50 = v217;
                    _s15ConversationKit11ParticipantVWOcTm_19(v100, v217);
                    v226[0] = 0;
                    v226[1] = 0xE000000000000000;
                    _StringGuts.grow(_:)(68);
                    v126._countAndFlagsBits = 0xD000000000000042;
                    v126._object = v187;
                    String.append(_:)(v126);
                    _print_unlocked<A, B>(_:_:)();
                    uint64_t v212 = v226[0];
                    unint64_t v216 = (void **)v226[1];
                    _s15ConversationKit11ParticipantVWOhTm_13(v100, (void (*)(void))type metadata accessor for Participant);
                    uint64_t v33 = v203;
                    unint64_t v60 = v209;
                    break;
                }
                break;
            }
            goto LABEL_56;
          }
          uint64_t v49 = (uint64_t)v208;
          if (v222)
          {
            uint64_t v73 = a1[3];
            uint64_t v74 = a1[4];
            __swift_project_boxed_opaque_existential_1(a1, v73);
            unint64_t v75 = *(uint64_t (**)(uint64_t, uint64_t))(v74 + 56);
            id v76 = v222;
            if (v75(v73, v74) == 3)
            {
              uint64_t v77 = v217;
              uint64_t v33 = v203;
              ConversationController.updateActiveParticipant(_:with:in:)(v76, (uint64_t)v203, a1, v217);

              uint64_t v50 = v77;
              uint64_t v212 = 0;
              unint64_t v216 = (void **)0xE000000000000000;
              uint64_t v49 = (uint64_t)v208;
              uint64_t v9 = v197;
              uint64_t v6 = v198;
              goto LABEL_56;
            }

            uint64_t v49 = (uint64_t)v208;
            uint64_t v33 = v203;
            uint64_t v9 = v197;
            uint64_t v6 = v198;
          }
          uint64_t v50 = v217;
          _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v33, v217);
          uint64_t v212 = 0;
          unint64_t v65 = 0xE000000000000000;
          break;
      }
    }
    unint64_t v216 = (void **)v65;
LABEL_56:
    ConversationController.updateAudioFrequencyController(with:from:)(v50);
    _s15ConversationKit11ParticipantVWOcTm_19(v50, (uint64_t)v9);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      id v128 = &v9[*(int *)(v127 + 48)];
      outlined consume of Participant.CopresenceInfo?(*(void *)&v9[*(int *)(v127 + 64)], *(void *)&v9[*(int *)(v127 + 64) + 8]);
      memcpy(v226, v128, sizeof(v226));
      uint64_t v129 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t))(*(void *)(v129 - 8) + 8))(v9, v129);
      if (v222)
      {
        id v130 = v222;
        if ((objc_msgSend(v130, sel_isVideoEnabled) & 1) == 0)
        {
          uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          uint64_t v196 = &v179;
          MEMORY[0x1F4188790](v133 - 8);
          uint64_t v135 = (char *)&v179 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v136 = *(void *)(v192 + 8);
          uint64_t ObjectType = (void **)swift_getObjectType();
          uint64_t v189 = type metadata accessor for UUID();
          uint64_t v190 = &v179;
          uint64_t v137 = *(void *)(v189 - 8);
          MEMORY[0x1F4188790](v189);
          uint64_t v139 = (char *)&v179 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0);
          unint64_t v209 = v60;
          uint64_t v140 = *(void (**)(void **, uint64_t))(v136 + 200);
          swift_unknownObjectRetain();
          uint64_t v141 = v136;
          a1 = v193;
          v140(ObjectType, v141);
          uint64_t v6 = v198;
          swift_unknownObjectRelease();
          v224[0] = *(void *)(v219 + v191);
          swift_bridgeObjectRetain();
          specialized Set._Variant.remove(_:)();
          char v142 = v139;
          uint64_t v33 = v203;
          (*(void (**)(char *, uint64_t))(v137 + 8))(v142, v189);
          uint64_t v49 = (uint64_t)v208;
          uint64_t v143 = (uint64_t)v135;
          uint64_t v9 = v197;
          outlined destroy of SystemUpdateNotice?(v143, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          unint64_t v60 = v209;
          ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.setter(v224[0]);

          outlined destroy of Participant.MediaInfo((uint64_t)v226);
          uint64_t v50 = v217;
          goto LABEL_70;
        }

        uint64_t v50 = v217;
      }
      uint64_t v131 = v226[2];
      outlined init with copy of Participant.MediaInfo((uint64_t)v226, (uint64_t)v224);
      if (v131)
      {
        if (!v224[2])
        {
          outlined destroy of Participant.MediaInfo((uint64_t)v224);
LABEL_69:
          outlined destroy of Participant.MediaInfo((uint64_t)v226);
          goto LABEL_70;
        }
        char v132 = v225;
        outlined destroy of Participant.MediaInfo((uint64_t)v224);
        if (v132) {
          goto LABEL_69;
        }
      }
      else
      {
        outlined destroy of Participant.MediaInfo((uint64_t)v224);
      }
      uint64_t v189 = type metadata accessor for UUID();
      uint64_t v190 = &v179;
      uint64_t v144 = *(void *)(v189 - 8);
      uint64_t v145 = *(void *)(v144 + 64);
      MEMORY[0x1F4188790](v189);
      unint64_t v209 = v60;
      uint64_t v196 = v61;
      uint64_t v146 = *(void *)(v192 + 8);
      uint64_t v147 = swift_getObjectType();
      uint64_t ObjectType = &v179;
      MEMORY[0x1F4188790](v147);
      char v148 = *(void (**)(uint64_t, uint64_t))(v146 + 200);
      swift_unknownObjectRetain();
      uint64_t v149 = v147;
      uint64_t v9 = v197;
      uint64_t v150 = v146;
      uint64_t v151 = v219;
      v148(v149, v150);
      uint64_t v50 = v217;
      a1 = v193;
      uint64_t v33 = v203;
      swift_unknownObjectRelease();
      uint64_t v223 = *(void *)(v151 + v191);
      swift_bridgeObjectRetain();
      uint64_t v6 = v198;
      specialized Set._Variant.insert(_:)();
      unint64_t v60 = v209;
      (*(void (**)(char *, uint64_t))(v144 + 8))((char *)&v179 - ((v145 + 15) & 0xFFFFFFFFFFFFFFF0), v189);
      uint64_t v49 = (uint64_t)v208;
      int v61 = v196;
      ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.setter(v223);
      outlined destroy of Participant.MediaInfo((uint64_t)v226);
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v9, (void (*)(void))type metadata accessor for Participant.State);
    }
LABEL_70:
    uint64_t v51 = v221;
    static Participant.== infix(_:_:)();
    if (v152)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v153 = swift_allocObject();
      *(_OWORD *)(v153 + 16) = v199;
      *(void *)(v153 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v153 + 64) = lazy protocol witness table accessor for type String and conformance String();
      uint64_t v154 = v216;
      *(void *)(v153 + 32) = v212;
      *(void *)(v153 + 40) = v154;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      uint64_t v155 = v200;
      swift_beginAccess();
      uint64_t v156 = *v155;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v155 = v156;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v156 = specialized _ArrayBuffer._consumeAndCreateNew()();
        *unint64_t v200 = v156;
      }
      uint64_t v50 = v217;
      if ((v60 & 0x8000000000000000) != 0) {
        goto LABEL_87;
      }
      if (v60 >= *(void *)(v156 + 16)) {
        goto LABEL_88;
      }
      outlined assign with copy of Participant.State(v217, v156+ ((*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80))+ *(void *)(v211 + 72) * v60);
      swift_endAccess();
      ConversationController.postParticipantStateChangeCallbacks(for:updatedFrom:)(v50, (uint64_t)v33);
      uint64_t v51 = v221;
    }

    _s15ConversationKit11ParticipantVWOhTm_13(v50, (void (*)(void))type metadata accessor for Participant);
LABEL_80:
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v33, (void (*)(void))type metadata accessor for Participant);
    unint64_t v48 = v220;
  }
}

uint64_t ConversationController.updateRemoteParticipantsNames(with:)(void *a1)
{
  uint64_t v2 = v1;
  int v113 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v121 = (uint64_t)&v96 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v108 = (uint64_t)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.State?);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v107 = (uint64_t)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Participant(0);
  uint64_t v116 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v98 = (uint64_t)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v97 = (uint64_t)&v96 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v120 = (uint64_t)&v96 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v96 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v96 - v22;
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant));
  MEMORY[0x1F4188790](v110);
  uint64_t v99 = (uint64_t)&v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant)?);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  uint64_t v28 = (unint64_t *)((char *)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v26);
  BOOL v115 = (unint64_t *)((char *)&v96 - v29);
  uint64_t v30 = type metadata accessor for DispatchPredicate();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (uint64_t *)((char *)&v96 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v33 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v31 + 104))(v33, *MEMORY[0x1E4FBCBE8], v30);
  char v34 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v31 + 8))(v33, v30);
  if ((v34 & 1) == 0) {
    goto LABEL_57;
  }
  uint64_t v36 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  uint64_t v109 = v36;
  uint64_t v37 = *v36;
  unint64_t v114 = *(void *)(*v36 + 16);
  uint64_t v96 = v23 + 8;
  uint64_t v105 = &v125;
  uint64_t v100 = v37;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v122 = 0;
  long long v102 = xmmword_1C376A6F0;
  uint64_t v106 = v6;
  uint64_t v38 = v110;
  uint64_t v39 = v115;
  uint64_t v103 = v23;
  id v101 = v21;
  uint64_t v111 = v28;
  uint64_t v104 = v2;
  while (1)
  {
    while (1)
    {
      unint64_t v40 = v122;
      if (v122 == v114)
      {
        uint64_t v41 = 1;
        unint64_t v42 = v114;
      }
      else
      {
        if (v122 >= *(void *)(v100 + 16)) {
          goto LABEL_56;
        }
        unint64_t v42 = v122 + 1;
        uint64_t v43 = v99 + *(int *)(v38 + 48);
        _s15ConversationKit11ParticipantVWOcTm_19(v100+ ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(void *)(v116 + 72) * v122, v43);
        uint64_t v44 = (uint64_t)v28 + *(int *)(v38 + 48);
        *uint64_t v28 = v40;
        _s15ConversationKit11ParticipantVWObTm_6(v43, v44);
        uint64_t v41 = 0;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v28, v41, 1, v38);
      outlined init with take of AspectRatio?((uint64_t)v28, (uint64_t)v39, &demangling cache variable for type metadata for (offset: Int, element: Participant)?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v38) == 1) {
        return swift_bridgeObjectRelease();
      }
      unint64_t v122 = v42;
      unint64_t v45 = *v39;
      _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v39 + *(int *)(v38 + 48), (uint64_t)v23);
      uint64_t v46 = static ConversationController.member(correspondingTo:in:)((uint64_t)v23, v113);
      uint64_t v47 = v46;
      if (!v46)
      {
        uint64_t v51 = 0;
        uint64_t v53 = 0;
        uint64_t v123 = 0;
        uint64_t v55 = *(void *)&v96[*(int *)(v12 + 36)];
LABEL_17:
        uint64_t v50 = 0;
        char v57 = v55 == 0;
        goto LABEL_18;
      }
      id v48 = v46;
      uint64_t v123 = outlined bridged method (ob) of @objc TUConversationMember.nickname.getter(v48, (SEL *)&selRef_nickname);
      uint64_t v50 = v49;
      uint64_t v51 = outlined bridged method (ob) of @objc TUConversationMember.nickname.getter(objc_msgSend(v48, sel_handle), (SEL *)&selRef_siriDisplayName);
      uint64_t v53 = v52;
      uint64_t v54 = &v23[*(int *)(v12 + 36)];
      uint64_t v55 = *((void *)v54 + 1);
      if (!v50) {
        goto LABEL_17;
      }
      if (v55)
      {
        BOOL v56 = v123 == *(void *)v54 && v50 == v55;
        char v57 = v56 ? 1 : _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      else
      {
        char v57 = 0;
      }
LABEL_18:
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v23, (uint64_t)v21);
      if ((v57 & 1) == 0) {
        goto LABEL_29;
      }
      uint64_t v58 = *(void **)&v21[*(int *)(v12 + 28)];
      if (!v58)
      {
        if (v53)
        {
LABEL_29:
          uint64_t v117 = v51;
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
          break;
        }
        uint64_t v61 = 0;
LABEL_49:
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
        if (!v61) {
          goto LABEL_52;
        }
        uint64_t v117 = v51;
        swift_bridgeObjectRelease();
        break;
      }
      uint64_t v59 = outlined bridged method (ob) of @objc TUConversationMember.nickname.getter(v58, (SEL *)&selRef_siriDisplayName);
      uint64_t v61 = v60;
      if (!v53) {
        goto LABEL_49;
      }
      if (!v60) {
        goto LABEL_29;
      }
      if (v51 == v59 && v53 == v60)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
        swift_bridgeObjectRelease_n();
        goto LABEL_52;
      }
      uint64_t v117 = v51;
      char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
      swift_bridgeObjectRelease_n();
      if ((v63 & 1) == 0) {
        break;
      }
LABEL_52:
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v23, (void (*)(void))type metadata accessor for Participant);
      swift_bridgeObjectRelease();

      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v28 = v111;
      uint64_t v39 = v115;
    }
    id v118 = v47;
    uint64_t v119 = v53;
    uint64_t v64 = v12;
    uint64_t v65 = type metadata accessor for Participant.State(0);
    uint64_t v66 = v107;
    __swift_storeEnumTagSinglePayload(v107, 1, 1, v65);
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    MEMORY[0x1F4188790](v67 - 8);
    id v69 = (char *)&v96 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v70 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload((uint64_t)v69, 1, 1, v70);
    uint64_t v124 = 1;
    uint64_t v71 = (uint64_t)v105;
    *(_OWORD *)uint64_t v105 = 0u;
    *(_OWORD *)(v71 + 16) = 0u;
    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
    uint64_t v73 = v108;
    __swift_storeEnumTagSinglePayload(v108, 1, 1, v72);
    LOBYTE(v94) = 2;
    Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v66, (uint64_t)v69, 2, (uint64_t)&v124, 0, v123, v50, v73, v94, 0, 0, v95, (uint64_t)v96, v97, v98, v99, v100, (uint64_t)v101, v102,
      *((uint64_t *)&v102 + 1),
      (char)v103,
      v104,
      (uint64_t)v105);
    outlined destroy of SystemUpdateNotice?(v73, &demangling cache variable for type metadata for Participant.CountdownInfo??);
    outlined destroy of SystemUpdateNotice?((uint64_t)v69, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?(v66, (uint64_t *)&demangling cache variable for type metadata for Participant.State?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = v102;
    uint64_t v75 = v121;
    _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v23, v121);
    __swift_storeEnumTagSinglePayload(v75, 0, 1, v64);
    uint64_t v76 = v75;
    uint64_t v77 = (uint64_t)v106;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v76, (uint64_t)v106, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v77, 1, v64) == 1)
    {
      outlined destroy of SystemUpdateNotice?(v77, &demangling cache variable for type metadata for Participant?);
      unint64_t v78 = 0xE300000000000000;
      uint64_t v79 = 7104878;
    }
    else
    {
      uint64_t v80 = v97;
      _s15ConversationKit11ParticipantVWObTm_6(v77, v97);
      _s15ConversationKit11ParticipantVWOcTm_19(v80, v98);
      uint64_t v79 = String.init<A>(reflecting:)();
      unint64_t v78 = v81;
      _s15ConversationKit11ParticipantVWOhTm_13(v80, (void (*)(void))type metadata accessor for Participant);
    }
    outlined destroy of SystemUpdateNotice?(v121, &demangling cache variable for type metadata for Participant?);
    uint64_t v82 = MEMORY[0x1E4FBB1A0];
    *(void *)(v74 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v83 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v74 + 64) = v83;
    *(void *)(v74 + 32) = v79;
    *(void *)(v74 + 40) = v78;
    uint64_t v124 = v45;
    uint64_t v84 = String.init<A>(reflecting:)();
    uint64_t v85 = v82;
    *(void *)(v74 + 96) = v82;
    *(void *)(v74 + 104) = v83;
    *(void *)(v74 + 72) = v84;
    *(void *)(v74 + 80) = v86;
    if (v50)
    {
      uint64_t v124 = v123;
      uint64_t v125 = v50;
      uint64_t v87 = String.init<A>(reflecting:)();
      uint64_t v85 = MEMORY[0x1E4FBB1A0];
    }
    else
    {
      unint64_t v88 = 0xE300000000000000;
      uint64_t v87 = 7104878;
    }
    uint64_t v12 = v64;
    uint64_t v39 = v115;
    *(void *)(v74 + 136) = v85;
    *(void *)(v74 + 144) = v83;
    *(void *)(v74 + 112) = v87;
    *(void *)(v74 + 120) = v88;
    uint64_t v38 = v110;
    uint64_t v23 = v103;
    if (v119)
    {
      uint64_t v124 = v117;
      uint64_t v125 = v119;
      uint64_t v89 = String.init<A>(reflecting:)();
      uint64_t v85 = MEMORY[0x1E4FBB1A0];
    }
    else
    {
      unint64_t v90 = 0xE300000000000000;
      uint64_t v89 = 7104878;
    }
    *(void *)(v74 + 176) = v85;
    *(void *)(v74 + 184) = v83;
    *(void *)(v74 + 152) = v89;
    *(void *)(v74 + 160) = v90;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    uint64_t v91 = v109;
    swift_beginAccess();
    uint64_t v92 = *v91;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v91 = v92;
    if ((result & 1) == 0)
    {
      uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
      uint64_t v92 = result;
      *uint64_t v109 = result;
    }
    uint64_t v21 = v101;
    if ((v45 & 0x8000000000000000) != 0) {
      break;
    }
    if (v45 >= *(void *)(v92 + 16)) {
      goto LABEL_55;
    }
    uint64_t v93 = v120;
    outlined assign with copy of Participant.State(v120, v92+ ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(void *)(v116 + 72) * v45);
    swift_endAccess();
    ConversationController.didUpdateVisibleParticipant(_:)(v93);

    _s15ConversationKit11ParticipantVWOhTm_13(v93, (void (*)(void))type metadata accessor for Participant);
    uint64_t result = _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v23, (void (*)(void))type metadata accessor for Participant);
    uint64_t v28 = v111;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

uint64_t ConversationController.updateLocalMemberAuthorizedToChangeGroupMembership(with:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Participant(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v19[-v8];
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)&v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBE8], v10);
  char v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    swift_once();
    goto LABEL_4;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  char v14 = Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();
  a1 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant);
  uint64_t result = swift_beginAccess();
  if ((v14 & 1) == *((unsigned char *)a1 + *(int *)(v4 + 60))) {
    return result;
  }
  if (one-time initialization token for conversationKit != -1) {
    goto LABEL_8;
  }
LABEL_4:
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)a1, (uint64_t)v7);
  uint64_t v16 = v14 & 1;
  Participant.asAuthorizedToChangeGroupMembership(_:)(v16);
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
  swift_beginAccess();
  outlined assign with take of Participant((uint64_t)v9, (uint64_t)a1);
  swift_endAccess();
  uint64_t v17 = (void (**)(uint64_t))(v2
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *v17;
  if (*v17)
  {
    swift_retain();
    v18(v16);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v18);
  }
  return result;
}

uint64_t ConversationController.updateParticipantsForcedToShowAsNeedingAuthorization()()
{
  uint64_t v1 = v0;
  uint64_t v39 = type metadata accessor for Participant(0);
  uint64_t v35 = *(void *)(v39 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v39);
  uint64_t v31 = (uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (uint64_t)&v30 - v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v30 - v7;
  if (one-time initialization token for shared != -1) {
    goto LABEL_27;
  }
  while (1)
  {
    uint64_t v9 = (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 688))();
    uint64_t v10 = v9;
    uint64_t v36 = *(void *)(v9 + 16);
    if (!v36) {
      break;
    }
    uint64_t v30 = v6;
    uint64_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    uint64_t v33 = v9 + 32;
    swift_beginAccess();
    unint64_t v12 = 0;
    uint64_t v32 = v10;
    char v34 = v11;
    while (1)
    {
      if (v12 >= *(void *)(v10 + 16))
      {
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v13 = *v11;
      uint64_t v14 = *(void *)(*v11 + 16);
      if (v14) {
        break;
      }
LABEL_19:
      if (++v12 == v36) {
        return swift_bridgeObjectRelease();
      }
    }
    unint64_t v37 = v12;
    uint64_t v15 = (uint64_t *)(v33 + 16 * v12);
    uint64_t v1 = v15[1];
    uint64_t v38 = *v15;
    uint64_t v16 = v35;
    unint64_t v17 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v18 = 0;
    uint64_t v6 = *(void *)(v16 + 72);
    while (1)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v13 + v17, (uint64_t)v8);
      uint64_t v19 = *(void **)&v8[*(int *)(v39 + 28)];
      if (!v19)
      {
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
        goto LABEL_11;
      }
      id v20 = objc_msgSend(v19, sel_value);
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;

      uint64_t v40 = v21;
      uint64_t v41 = v23;
      uint64_t v42 = v38;
      uint64_t v43 = v1;
      lazy protocol witness table accessor for type String and conformance String();
      uint64_t v24 = StringProtocol.caseInsensitiveCompare<A>(_:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
      if (!v24) {
        break;
      }
LABEL_11:
      ++v18;
      v17 += v6;
      if (v14 == v18)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v32;
        uint64_t v11 = v34;
LABEL_18:
        unint64_t v12 = v37;
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v34;
    if (v18 >= *(void *)(*v34 + 16)) {
      goto LABEL_25;
    }
    uint64_t v25 = v31;
    uint64_t v26 = _s15ConversationKit11ParticipantVWOcTm_19(*v34 + v17, v31);
    uint64_t v6 = v30;
    Participant.asPendingAuthorization()(v26);
    _s15ConversationKit11ParticipantVWOhTm_13(v25, (void (*)(void))type metadata accessor for Participant);
    swift_beginAccess();
    uint64_t v27 = *v11;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v11 = v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v27 = specialized _ArrayBuffer._consumeAndCreateNew()();
      uint64_t *v11 = v27;
    }
    if (v18 < *(void *)(v27 + 16))
    {
      outlined assign with take of Participant(v6, v27 + v17);
      swift_endAccess();
      uint64_t v10 = v32;
      goto LABEL_18;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_once();
  }
  return swift_bridgeObjectRelease();
}

uint64_t ConversationController.updateOtherInvitedParticipants()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Participant(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    ConversationController.lookupActiveConversation()();
    if (v32)
    {
      outlined init with take of Notice(&v31, (uint64_t)v33);
      unint64_t v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants);
      swift_beginAccess();
      uint64_t v13 = *v12;
      uint64_t v14 = *(void *)(*v12 + 16);
      uint64_t v15 = MEMORY[0x1E4FBC860];
      if (v14)
      {
        uint64_t v29 = v1;
        uint64_t v30 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v16 = v13 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
        uint64_t v17 = *(void *)(v3 + 72);
        do
        {
          _s15ConversationKit11ParticipantVWOcTm_19(v16, (uint64_t)v5);
          unint64_t v18 = *(void **)&v5[*(int *)(v2 + 28)];
          if (v18) {
            id v19 = v18;
          }
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v16 += v17;
          --v14;
        }
        while (v14);
        uint64_t v15 = v30;
        swift_bridgeObjectRelease();
        uint64_t v1 = v29;
      }
      uint64_t v20 = v34;
      uint64_t v21 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 152))(v20, v21);
      Swift::Int v23 = specialized Set._Variant.filter(_:)(v22, v15);
      uint64_t v24 = specialized Set.isEmpty.getter();
      if (v24)
      {
        swift_release();
      }
      else
      {
        MEMORY[0x1F4188790](v24);
        *(&v29 - 2) = (uint64_t)v33;
        _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFShySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5(partial apply for closure #3 in ConversationController.updateOtherInvitedParticipants(), (uint64_t)(&v29 - 4), v23);
        uint64_t v26 = v25;
        swift_release();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        specialized Array.append<A>(contentsOf:)();
        swift_endAccess();
        uint64_t v27 = (void (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
        swift_beginAccess();
        uint64_t v28 = *v27;
        if (*v27)
        {
          swift_retain();
          v28(v26);
          outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v28);
        }
        swift_bridgeObjectRelease();
      }
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    }
    else
    {
      return outlined destroy of SystemUpdateNotice?((uint64_t)&v31, &demangling cache variable for type metadata for Conversation?);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ConversationController.videoProviderForResizingLocal.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (long long *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  ConversationController.remoteOneToOneParticipant.getter();
  uint64_t v7 = type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    uint64_t v8 = &demangling cache variable for type metadata for Participant?;
    uint64_t v9 = v6;
LABEL_3:
    outlined destroy of SystemUpdateNotice?((uint64_t)v9, v8);
    goto LABEL_11;
  }
  Participant.videoInfo.getter();
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v6, (void (*)(void))type metadata accessor for Participant);
  outlined init with take of AspectRatio?((uint64_t)v30, (uint64_t)&v31, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v31) {
    goto LABEL_11;
  }
  char v10 = v32;
  specialized Dictionary.subscript.getter();
  if (!v26)
  {
    outlined release of LinearGradient((uint64_t)v30);
    uint64_t v8 = (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?;
    uint64_t v9 = &v25;
    goto LABEL_3;
  }
  outlined init with take of Notice(&v25, (uint64_t)&v27);
  char v11 = ConversationController.isOneToOneModeEnabled.getter();
  outlined release of LinearGradient((uint64_t)v30);
  if ((v11 & 1) != 0 && (v10 & 1) == 0) {
    return outlined init with take of Notice(&v27, (uint64_t)a1);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
LABEL_11:
  uint64_t v13 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  swift_beginAccess();
  uint64_t v14 = v13[3];
  uint64_t v15 = v13[4];
  uint64_t v16 = __swift_project_boxed_opaque_existential_1(v13, v14);
  uint64_t v17 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v24 - v18;
  (*(void (**)(char *))(v17 + 16))((char *)&v24 - v18);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v15 + 32))(&v27, v14, v15);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v14);
  uint64_t v20 = v28;
  uint64_t v21 = v29;
  uint64_t v22 = __swift_project_boxed_opaque_existential_1(&v27, v28);
  a1[3] = v20;
  a1[4] = v21;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(boxed_opaque_existential_1, v22, v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
}

uint64_t ConversationController.activeParticipant(correspondingTo:in:)(uint64_t a1, void *a2)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for Participant(0) + 28);
  uint64_t v4 = *(void **)v3;
  if (!*(void *)v3) {
    return 0;
  }
  if (*(unsigned char *)(v3 + 16))
  {
    uint64_t v11 = a2[3];
    uint64_t v12 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v11);
    id v13 = v4;
    Conversation.displayableActiveParticipants.getter(v11, v12);
    uint64_t v15 = v14;
    id v16 = v13;
    specialized Sequence.first(where:)(v15, v16, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    uint64_t v10 = v17;
  }
  else
  {
    uint64_t v5 = *(void **)(v3 + 8);
    uint64_t v6 = a2[3];
    uint64_t v7 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v6);
    Conversation.displayableActiveParticipants.getter(v6, v7);
    specialized Sequence.first(where:)(v8, v5);
    uint64_t v10 = v9;
  }
  swift_bridgeObjectRelease();
  return v10;
}

void ConversationController.scheduleResetVideoInfo(for:after:)()
{
  OUTLINED_FUNCTION_35_14();
  double v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for Date();
  OUTLINED_FUNCTION_5_3();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_481();
  uint64_t v11 = v10 - (v9 & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  Date.init()();
  Date.addingTimeInterval(_:)();
  id v13 = *(uint64_t (**)(void))(v7 + 8);
  OUTLINED_FUNCTION_336();
  uint64_t v14 = v13();
  MEMORY[0x1F4188790](v14);
  uint64_t v91 = v0;
  uint64_t v15 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_scheduledVideoInfoResetDates;
  swift_beginAccess();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v17 = OUTLINED_FUNCTION_8(v16);
  MEMORY[0x1F4188790](v17);
  uint64_t v95 = v18;
  OUTLINED_FUNCTION_378_0();
  uint64_t v21 = v19 - v20;
  specialized Dictionary.subscript.getter();
  OUTLINED_FUNCTION_33_0(v21, 1, v5);
  if (v22)
  {
    outlined destroy of SystemUpdateNotice?(v21, (uint64_t *)&demangling cache variable for type metadata for Date?);
    swift_endAccess();
  }
  else
  {
    OUTLINED_FUNCTION_41_0();
    OUTLINED_FUNCTION_63_0();
    v23();
    swift_endAccess();
    OUTLINED_FUNCTION_248();
    char v24 = static Date.> infix(_:_:)();
    OUTLINED_FUNCTION_336();
    v13();
    if (v24)
    {
      OUTLINED_FUNCTION_336();
      v13();
      goto LABEL_9;
    }
  }
  uint64_t v89 = v13;
  uint64_t v90 = v7 + 8;
  uint64_t v25 = type metadata accessor for UUID();
  uint64_t v84 = v5;
  uint64_t v93 = v4;
  uint64_t v94 = v25;
  OUTLINED_FUNCTION_5_3();
  uint64_t v27 = v26;
  uint64_t v78 = v26;
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_481();
  unint64_t v77 = v29 & 0xFFFFFFFFFFFFFFF0;
  uint64_t v92 = *(uint64_t (**)(unint64_t))(v27 + 16);
  uint64_t v31 = v92(v30 - (v29 & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_378_0();
  uint64_t v86 = v32;
  uint64_t v34 = v33 - v32;
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  uint64_t v88 = v11;
  v35(v34, v11, v5);
  OUTLINED_FUNCTION_236_0(v34);
  OUTLINED_FUNCTION_6_1();
  uint64_t v36 = OUTLINED_FUNCTION_189_2();
  uint64_t v87 = v15;
  specialized Dictionary.subscript.setter(v36, v37);
  swift_endAccess();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v83 = static OS_dispatch_queue.main.getter();
  type metadata accessor for DispatchTime();
  OUTLINED_FUNCTION_423();
  uint64_t v85 = v38;
  OUTLINED_FUNCTION_5_3();
  uint64_t v40 = v39;
  MEMORY[0x1F4188790](v41);
  OUTLINED_FUNCTION_175_4();
  uint64_t v79 = &v77;
  uint64_t v43 = MEMORY[0x1F4188790](v42);
  unint64_t v45 = (char *)&v77 - v44;
  MEMORY[0x1F4188790](v43);
  uint64_t v47 = (char *)&v77 - v46;
  static DispatchTime.now()();
  MEMORY[0x1C8772E20](v47, v2);
  id v48 = *(void (**)(void))(v40 + 8);
  uint64_t v80 = v40 + 8;
  uint64_t v81 = v15;
  OUTLINED_FUNCTION_1_19();
  v48();
  uint64_t v82 = v48;
  MEMORY[0x1C8772E20](&v77, v45, 0.01);
  OUTLINED_FUNCTION_259_1();
  OUTLINED_FUNCTION_1_19();
  v48();
  uint64_t v49 = OUTLINED_FUNCTION_20();
  uint64_t v50 = swift_unknownObjectWeakInit();
  MEMORY[0x1F4188790](v50);
  uint64_t v91 = v27 + 16;
  ((void (*)(char *, uint64_t, uint64_t))v92)((char *)&v77 - v77, v93, v94);
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v49;
  OUTLINED_FUNCTION_46();
  v52();
  v96[4] = partial apply for closure #1 in ConversationController.scheduleResetVideoInfo(for:after:);
  v96[5] = v51;
  v96[0] = MEMORY[0x1E4F143A8];
  v96[1] = 1107296256;
  v96[2] = thunk for @escaping @callee_guaranteed () -> ();
  v96[3] = &block_descriptor_156_0;
  uint64_t v53 = _Block_copy(v96);
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_425();
  uint64_t v78 = v54;
  OUTLINED_FUNCTION_5_3();
  uint64_t v56 = v55;
  MEMORY[0x1F4188790](v57);
  OUTLINED_FUNCTION_36_4();
  static DispatchQoS.unspecified.getter();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_267_1();
  unint64_t v77 = v58;
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v59);
  OUTLINED_FUNCTION_5_1();
  v96[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v61 = OUTLINED_FUNCTION_438();
  uint64_t v62 = (void *)v83;
  MEMORY[0x1C8773B10](v61);
  _Block_release(v53);

  OUTLINED_FUNCTION_10_6();
  v63();
  uint64_t v64 = v56 + 8;
  OUTLINED_FUNCTION_390();
  OUTLINED_FUNCTION_3_8();
  v65();
  OUTLINED_FUNCTION_26_2();
  v66();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_52_0();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v67 = OUTLINED_FUNCTION_11_7();
  *(_OWORD *)(v67 + 16) = xmmword_1C37696D0;
  uint64_t v68 = swift_beginAccess();
  MEMORY[0x1F4188790](v68);
  id v69 = (char *)&v77 - v86;
  uint64_t v70 = v93;
  specialized Dictionary.subscript.getter();
  swift_endAccess();
  specialized >> prefix<A>(_:)((uint64_t)v69);
  OUTLINED_FUNCTION_289();
  outlined destroy of SystemUpdateNotice?((uint64_t)v69, (uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v71 = MEMORY[0x1E4FBB1A0];
  *(void *)(v67 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v72 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v67 + 64) = v72;
  *(void *)(v67 + 32) = v64;
  *(void *)(v67 + 40) = v60;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v74 = OUTLINED_FUNCTION_8(v73);
  MEMORY[0x1F4188790](v74);
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_278();
  uint64_t v75 = v94;
  OUTLINED_FUNCTION_2_1();
  v76();
  OUTLINED_FUNCTION_420();
  OUTLINED_FUNCTION_452();
  *(void *)(v67 + 96) = v71;
  *(void *)(v67 + 104) = v72;
  *(void *)(v67 + 72) = v75;
  *(void *)(v67 + 80) = v70;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_156_5();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t))v89)(v88, v84);
LABEL_9:
  OUTLINED_FUNCTION_33_2();
}

uint64_t ConversationController.updateActiveParticipant(_:with:in:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v174 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v174 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v14 = objc_msgSend(a1, sel_isVideoEnabled);
  uint64_t v191 = a4;
  if (v14 && objc_msgSend(a1, sel_streamToken))
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    LODWORD(v188) = (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 152))();
  }
  else
  {
    LODWORD(v188) = 0;
  }
  unsigned int v15 = objc_msgSend(a1, sel_isScreenEnabled);
  uint64_t v190 = v10;
  if (v15) {
    BOOL v16 = objc_msgSend(a1, sel_screenToken) != 0;
  }
  else {
    BOOL v16 = 0;
  }
  uint64_t v17 = a3;
  uint64_t v18 = v196;
  ConversationController.copresenceInfo(for:in:)(a1, v17, v232);
  int v19 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode);
  if (v19 == 1)
  {
    uint64_t v20 = ConversationController.captionsProvider(for:token:)(a2, (uint64_t)objc_msgSend(a1, sel_captionsToken));
    uint64_t v22 = MEMORY[0x1E4FBC860];
    if (v20) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 0;
    }
    if (v20) {
      uint64_t v24 = v21;
    }
    else {
      uint64_t v24 = 0;
    }
    uint64_t v194 = v24;
    uint64_t v195 = v23;
    if (!v20) {
      uint64_t v22 = 0;
    }
    uint64_t v193 = v22;
  }
  else
  {
    uint64_t v194 = 0;
    uint64_t v195 = 0;
    uint64_t v193 = 0;
  }
  id v25 = a1;
  LODWORD(v189) = Participant.AVInfo.init(for:)(v25);
  uint64_t v27 = v26;
  uint64_t v192 = a2;
  if (v16)
  {
    uint64_t v187 = v26;
    if (v19 == 2)
    {
      ConversationController.remoteVideoClient(for:ofType:token:)(a2, 3, (uint64_t)objc_msgSend(v25, sel_screenToken), (uint64_t)&v212);
      unsigned int v28 = Participant.screenState.getter();
      if (v28 == 2)
      {
        uint64_t v29 = v214;
        uint64_t v30 = v215;
        __swift_project_boxed_opaque_existential_1(&v212, v214);
        LODWORD(v181) = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
        LODWORD(v182) = 0;
        v184.i32[0] = 0;
        LODWORD(v183) = 0;
      }
      else
      {
        LODWORD(v183) = (v28 >> 8) & 1;
        v184.i32[0] = HIWORD(v28) & 1;
        uint64_t v33 = v214;
        uint64_t v34 = v215;
        LODWORD(v182) = HIBYTE(v28) & 1;
        __swift_project_boxed_opaque_existential_1(&v212, v214);
        LODWORD(v181) = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
      }
      uint64_t v35 = v214;
      uint64_t v36 = v215;
      __swift_project_boxed_opaque_existential_1(&v212, v214);
      uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 40))(v35, v36);
      if ((v37 & 0x100000000) != 0) {
        LODWORD(v37) = 0;
      }
      unint64_t v38 = VideoAttributeOrientation.deviceOrientation.getter(v37);
      uint64_t v39 = (long long *)(v196 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes);
      char v40 = *(unsigned char *)(v196 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96);
      uint64_t v185 = v11;
      uint64_t v186 = v13;
      if (v40) {
        uint64_t v41 = 0;
      }
      else {
        uint64_t v41 = *((void *)v39 + 9);
      }
      uint64_t v47 = v214;
      uint64_t v48 = v215;
      __swift_project_boxed_opaque_existential_1(&v212, v214);
      double v49 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v48 + 80))(v47, v48));
      if (v51) {
        double v52 = 0.0;
      }
      else {
        double v52 = v50;
      }
      if (v51) {
        double v53 = 0.0;
      }
      else {
        double v53 = v49;
      }
      *(void *)&long long v180 = v38;
      *(void *)&long long v179 = ConversationController.remoteOrientationFor(aspectRatio:videoRotation:deviceFamily:)(v38, v41, v53, v52);
      uint64_t v54 = v214;
      uint64_t v55 = v215;
      __swift_project_boxed_opaque_existential_1(&v212, v214);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v55 + 64))(v233, v54, v55);
      double v56 = *(double *)&v233[2];
      double v57 = *(double *)&v233[3];
      outlined init with take of AspectRatio?((uint64_t)v233, (uint64_t)v234, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
      if (v235) {
        double v58 = 0.0;
      }
      else {
        double v58 = v57;
      }
      if (v235) {
        double v59 = 0.0;
      }
      else {
        double v59 = v56;
      }
      if (v52 >= v53) {
        double v60 = v53;
      }
      else {
        double v60 = v52;
      }
      if (v53 > v52) {
        double v61 = v53;
      }
      else {
        double v61 = v52;
      }
      double v62 = ceil(v60 * v59);
      double v63 = ceil(v61 * v58);
      double v64 = ceil(v61 * v59);
      double v65 = ceil(v60 * v58);
      outlined init with copy of Conversation((uint64_t)&v212, (uint64_t)&v216);
      long long v66 = *v39;
      long long v177 = v39[1];
      long long v178 = v66;
      long long v67 = v39[2];
      long long v175 = v39[3];
      long long v176 = v67;
      long long v174 = v39[4];
      uint64_t v68 = *((void *)v39 + 10);
      uint64_t v69 = *((void *)v39 + 11);
      char v70 = *((unsigned char *)v39 + 96);
      uint64_t v71 = v214;
      uint64_t v72 = v215;
      __swift_project_boxed_opaque_existential_1(&v212, v214);
      double v73 = (*(double (**)(uint64_t, uint64_t))(v72 + 72))(v71, v72);
      long long v197 = 0u;
      memset(v198, 0, 24);
      long long v201 = 0u;
      long long v202 = 0u;
      long long v203 = 0u;
      long long v204 = 0u;
      long long v205 = 0u;
      long long v206 = 0u;
      char v207 = 1;
      outlined assign with take of Participant?((uint64_t)&v216, (uint64_t)&v197, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      LOBYTE(v198[3]) = v181 & 1;
      BYTE1(v198[3]) = v183;
      BYTE2(v198[3]) = v184.i8[0];
      BYTE3(v198[3]) = v182;
      long long v201 = v178;
      long long v202 = v177;
      long long v203 = v176;
      long long v204 = v175;
      long long v205 = v174;
      *(void *)&long long v206 = v68;
      *((void *)&v206 + 1) = v69;
      char v207 = v70;
      v198[4] = v179;
      v198[5] = v180;
      *(double *)&v198[6] = v62;
      *(double *)&v198[7] = v63;
      *(double *)&v198[8] = v64;
      *(double *)&v198[9] = v65;
      char v199 = 0;
      double v200 = v73;
      outlined init with take of AspectRatio?((uint64_t)&v197, (uint64_t)&v216, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v212);
      uint64_t v11 = v185;
      id v13 = v186;
    }
    else
    {
      unsigned int v31 = Participant.screenState.getter();
      if (v31 == 2)
      {
        v32.i64[0] = 1;
      }
      else
      {
        int32x4_t v32 = vtstq_s32(vdupq_n_s32(v31), (int32x4_t)xmmword_1C378A3C0);
        *(int8x8_t *)v32.i8 = vand_s8((int8x8_t)vmovn_s32(v32), (int8x8_t)0x1000100010001);
      }
      int16x8_t v184 = (int16x8_t)v32;
      long long v197 = 0u;
      memset(v198, 0, 24);
      long long v42 = *(_OWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes);
      long long v182 = *(_OWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 16);
      long long v183 = v42;
      long long v43 = *(_OWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 32);
      long long v180 = *(_OWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 48);
      long long v181 = v43;
      long long v179 = *(_OWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 64);
      uint64_t v44 = *(void *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 80);
      uint64_t v45 = *(void *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 88);
      char v46 = *(unsigned char *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96);
      long long v216 = 0u;
      long long v217 = 0u;
      uint64_t v218 = 0;
      long long v225 = 0u;
      long long v226 = 0u;
      long long v227 = 0u;
      long long v228 = 0u;
      long long v229 = 0u;
      long long v230 = 0u;
      char v231 = 1;
      outlined assign with take of Participant?((uint64_t)&v197, (uint64_t)&v216, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      unsigned __int32 v219 = vmovn_s16(v184).u32[0];
      long long v225 = v183;
      long long v226 = v182;
      long long v227 = v181;
      long long v228 = v180;
      long long v229 = v179;
      *(void *)&long long v230 = v44;
      *((void *)&v230 + 1) = v45;
      char v231 = v46;
      int64x2_t v220 = vdupq_n_s64(1uLL);
      long long v221 = 0u;
      long long v222 = 0u;
      char v223 = 1;
      uint64_t v224 = 0x3FF0000000000000;
    }
    a2 = v192;
    uint64_t v27 = v187;
  }
  else
  {
    long long v216 = 0uLL;
    *(void *)&long long v217 = 0;
    *((void *)&v217 + 1) = 1;
    bzero(&v218, 0xB1uLL);
  }
  if ((v188 & 1) == 0) {
    goto LABEL_61;
  }
  if (v19 != 1)
  {
    if (!v19)
    {
      uint64_t v186 = v13;
      uint64_t v187 = v27;
      uint64_t v185 = v11;
      uint64_t v127 = Participant.videoState.getter();
      if (v127 == 2)
      {
        v184.i64[0] = 0;
        *(void *)&long long v182 = 0;
        uint64_t v129 = 0;
        uint64_t v130 = 0;
        uint64_t v131 = 0;
        uint64_t v132 = 0;
        uint64_t v133 = 0;
        unint64_t v188 = 0;
        uint64_t v134 = 0;
        *(void *)&long long v183 = 1;
      }
      else
      {
        *(void *)&long long v183 = v127 & 1;
        unint64_t v188 = v128 & 1;
        v184.i64[0] = v127 & 0x100;
        *(void *)&long long v182 = v127 & 0x10000;
        uint64_t v129 = v127 & 0xFF000000;
        uint64_t v130 = v127 & 0x100000000;
        uint64_t v131 = v127 & 0x10000000000;
        uint64_t v132 = v127 & 0x1000000000000;
        uint64_t v133 = v127 & 0x100000000000000;
        uint64_t v134 = v128 & 0x100;
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
      lazy protocol witness table accessor for type Participant.VideoProviderType and conformance Participant.VideoProviderType();
      uint64_t v135 = Dictionary.init(dictionaryLiteral:)();
      unsigned int v136 = objc_msgSend(v25, sel_isCameraMixedWithScreen);
      *(void *)&long long v197 = v135;
      *((void *)&v197 + 1) = v184.i64[0] | v129 | v130 | v183 | v182 | v131 | v132 | v133;
      v198[0] = v134 | v188;
      *(_OWORD *)&v198[1] = xmmword_1C3769620;
      *(_OWORD *)&v198[3] = 0u;
      if (v136) {
        __int16 v137 = 257;
      }
      else {
        __int16 v137 = 1;
      }
      *(_OWORD *)&v198[5] = 0uLL;
      LOWORD(v198[7]) = v137;
      id v13 = v186;
      Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
      outlined release of Participant.CopresenceInfo?(v232);
      swift_bridgeObjectRelease();
      uint64_t v212 = 0;
      unint64_t v213 = 0xE000000000000000;
      _StringGuts.grow(_:)(132);
      v138._object = (void *)0x80000001C37BB7A0;
      v138._countAndFlagsBits = 0xD000000000000031;
      String.append(_:)(v138);
      unsigned int v139 = objc_msgSend(v25, sel_isVideoEnabled);
      BOOL v140 = v139 == 0;
      if (v139) {
        uint64_t v141 = 1702195828;
      }
      else {
        uint64_t v141 = 0x65736C6166;
      }
      if (v140) {
        unint64_t v142 = 0xE500000000000000;
      }
      else {
        unint64_t v142 = 0xE400000000000000;
      }
      unint64_t v143 = v142;
      String.append(_:)(*(Swift::String *)&v141);
      swift_bridgeObjectRelease();
      v144._countAndFlagsBits = 0x6D6165727473202CLL;
      v144._object = (void *)0xEE003D6E656B6F54;
      String.append(_:)(v144);
      v211[0] = objc_msgSend(v25, sel_streamToken);
      v145._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v145);
      swift_bridgeObjectRelease();
      v146._countAndFlagsBits = 0xD00000000000003FLL;
      v146._object = (void *)0x80000001C37BB890;
      String.append(_:)(v146);
      uint64_t v11 = v185;
      _print_unlocked<A, B>(_:_:)();
      unint64_t v188 = v213;
      uint64_t v189 = v212;
      goto LABEL_110;
    }
LABEL_61:
    long long v197 = 0u;
    memset(v198, 0, 58);
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?(v232);
    uint64_t v212 = 0;
    unint64_t v213 = 0xE000000000000000;
    _StringGuts.grow(_:)(131);
    v83._object = (void *)0x80000001C37BB7A0;
    v83._countAndFlagsBits = 0xD000000000000031;
    String.append(_:)(v83);
    unsigned int v84 = objc_msgSend(v25, sel_isVideoEnabled);
    BOOL v85 = v84 == 0;
    if (v84) {
      uint64_t v86 = 1702195828;
    }
    else {
      uint64_t v86 = 0x65736C6166;
    }
    if (v85) {
      unint64_t v87 = 0xE500000000000000;
    }
    else {
      unint64_t v87 = 0xE400000000000000;
    }
    unint64_t v88 = v87;
    String.append(_:)(*(Swift::String *)&v86);
    swift_bridgeObjectRelease();
    v89._countAndFlagsBits = 0x6D6165727473202CLL;
    v89._object = (void *)0xEE003D6E656B6F54;
    String.append(_:)(v89);
    v211[0] = objc_msgSend(v25, sel_streamToken);
    v90._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v90);
    swift_bridgeObjectRelease();
    v91._countAndFlagsBits = 0xD00000000000003ELL;
    v91._object = (void *)0x80000001C37BB7E0;
    String.append(_:)(v91);
    _print_unlocked<A, B>(_:_:)();
    unint64_t v188 = v213;
    uint64_t v189 = v212;
    goto LABEL_110;
  }
  uint64_t v187 = v27;
  ConversationController.remoteVideoClient(for:ofType:token:)(a2, 0, (uint64_t)objc_msgSend(v25, sel_streamToken), (uint64_t)&v212);
  ConversationController.remoteVideoClient(for:ofType:token:)(a2, 1, (uint64_t)objc_msgSend(v25, sel_streamToken), (uint64_t)v211);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Participant.VideoProviderType, ParticipantVideoProvider)>);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_1C37696D0;
  *(unsigned char *)(v74 + 32) = 0;
  outlined init with copy of Conversation((uint64_t)&v212, v74 + 40);
  *(unsigned char *)(v74 + 80) = 1;
  outlined init with copy of Conversation((uint64_t)v211, v74 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  lazy protocol witness table accessor for type Participant.VideoProviderType and conformance Participant.VideoProviderType();
  uint64_t v75 = Dictionary.init(dictionaryLiteral:)();
  unint64_t v76 = Participant.videoState.getter();
  uint64_t v185 = v11;
  if (v76 == 2)
  {
    uint64_t v78 = v214;
    uint64_t v79 = v215;
    __swift_project_boxed_opaque_existential_1(&v212, v214);
    uint64_t v80 = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 16))(v78, v79);
    uint64_t v81 = v214;
    uint64_t v82 = v215;
    __swift_project_boxed_opaque_existential_1(&v212, v214);
    v184.i64[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 24))(v81, v82);
    *(void *)&long long v183 = 0;
    *(void *)&long long v181 = 0;
    *(void *)&long long v180 = 0;
    *(void *)&long long v177 = 0;
    *(void *)&long long v179 = 0;
    *(void *)&long long v178 = 0;
    unint64_t v188 = 0;
    *(void *)&long long v182 = 0;
  }
  else
  {
    uint64_t v80 = v76 & 1;
    v184.i64[0] = (v76 >> 40) & 1;
    unint64_t v188 = v77 & 1;
    *(void *)&long long v183 = v76 & 0x100;
    *(void *)&long long v181 = v76 & 0x10000;
    *(void *)&long long v180 = v76 & 0xFF000000;
    *(void *)&long long v177 = v76 & 0x100000000;
    *(void *)&long long v179 = v76 & 0x1000000000000;
    *(void *)&long long v178 = v76 & 0x100000000000000;
    *(void *)&long long v182 = v77 & 0x100;
  }
  uint64_t v186 = v13;
  uint64_t v92 = v214;
  uint64_t v93 = v215;
  __swift_project_boxed_opaque_existential_1(&v212, v214);
  uint64_t v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 40))(v92, v93);
  if ((v94 & 0x100000000) != 0) {
    LODWORD(v94) = 0;
  }
  *(void *)&long long v176 = VideoAttributeOrientation.deviceOrientation.getter(v94);
  uint64_t v95 = v214;
  uint64_t v96 = v215;
  __swift_project_boxed_opaque_existential_1(&v212, v214);
  uint64_t v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 56))(v95, v96);
  if ((v97 & 0x100000000) != 0) {
    LODWORD(v97) = 0;
  }
  unsigned __int8 v98 = VideoAttributeCamera.cameraPosition.getter(v97);
  outlined init with copy of Conversation((uint64_t)&v212, (uint64_t)&v209);
  if (ConversationController.isOneToOneModeEnabled.getter())
  {
    *(void *)&long long v175 = v80;
    uint64_t v80 = v75;
    static AspectRatio.remoteAspectRatios(with:contentsRect:)(&v209, (uint64_t)&v197, 1.0, 1.0);
    double v100 = *((double *)&v197 + 1);
    double v99 = *(double *)&v197;
    char v101 = v198[0];
    double v102 = *(double *)&v198[1];
    double v103 = *(double *)&v198[2];
    int v104 = LOBYTE(v198[3]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v209);
    if ((v101 & 1) != 0 || v99 == v100)
    {
      double v99 = 0.0;
      double v100 = 0.0;
      double v102 = 0.0;
      double v103 = 0.0;
      __int16 v105 = 1;
    }
    else
    {
      __int16 v105 = 0;
      if (v104)
      {
        double v103 = v99;
        double v102 = v100;
      }
    }
    uint64_t v75 = v80;
    LOBYTE(v80) = v175;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v209);
    double v99 = 0.0;
    double v100 = 0.0;
    double v102 = 0.0;
    double v103 = 0.0;
    __int16 v105 = 1;
  }
  unsigned int v106 = objc_msgSend(v25, sel_isCameraMixedWithScreen);
  uint64_t v107 = 0x10000000000;
  if ((v184.i8[0] & 1) == 0) {
    uint64_t v107 = 0;
  }
  *(void *)&long long v197 = v75;
  *((void *)&v197 + 1) = v183 | v181 | v80 & 1 | v180 | v177 | v107 | v179 | v178;
  v198[0] = v182 | v188;
  v198[1] = v176;
  v198[2] = v98;
  *(double *)&v198[3] = v99;
  *(double *)&v198[4] = v100;
  if (v106) {
    __int16 v108 = 256;
  }
  else {
    __int16 v108 = 0;
  }
  *(double *)&v198[5] = v102;
  *(double *)&v198[6] = v103;
  LOWORD(v198[7]) = v108 | v105;
  uint64_t v109 = v186;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v232);
  swift_bridgeObjectRelease();
  uint64_t v209 = 0;
  unint64_t v210 = 0xE000000000000000;
  _StringGuts.grow(_:)(142);
  v110._object = (void *)0x80000001C37BB7A0;
  v110._countAndFlagsBits = 0xD000000000000031;
  String.append(_:)(v110);
  unsigned int v111 = objc_msgSend(v25, sel_isVideoEnabled);
  BOOL v112 = v111 == 0;
  if (v111) {
    uint64_t v113 = 1702195828;
  }
  else {
    uint64_t v113 = 0x65736C6166;
  }
  if (v112) {
    unint64_t v114 = 0xE500000000000000;
  }
  else {
    unint64_t v114 = 0xE400000000000000;
  }
  unint64_t v115 = v114;
  String.append(_:)(*(Swift::String *)&v113);
  swift_bridgeObjectRelease();
  v116._countAndFlagsBits = 0xD00000000000001ALL;
  v116._object = (void *)0x80000001C37BB8D0;
  String.append(_:)(v116);
  uint64_t v117 = v214;
  uint64_t v118 = v215;
  __swift_project_boxed_opaque_existential_1(&v212, v214);
  char v119 = (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 16))(v117, v118);
  BOOL v120 = (v119 & 1) == 0;
  if (v119) {
    uint64_t v121 = 1702195828;
  }
  else {
    uint64_t v121 = 0x65736C6166;
  }
  if (v120) {
    unint64_t v122 = 0xE500000000000000;
  }
  else {
    unint64_t v122 = 0xE400000000000000;
  }
  id v13 = v109;
  unint64_t v123 = v122;
  String.append(_:)(*(Swift::String *)&v121);
  swift_bridgeObjectRelease();
  v124._countAndFlagsBits = 0x6D61657274730A2CLL;
  v124._object = (void *)0xEE003D6E656B6F54;
  String.append(_:)(v124);
  id v208 = objc_msgSend(v25, sel_streamToken);
  v125._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v125);
  swift_bridgeObjectRelease();
  v126._countAndFlagsBits = 0xD00000000000002DLL;
  v126._object = (void *)0x80000001C37BB8F0;
  String.append(_:)(v126);
  uint64_t v11 = v185;
  _print_unlocked<A, B>(_:_:)();
  unint64_t v188 = v210;
  uint64_t v189 = v209;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v211);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v212);
LABEL_110:
  id v147 = objc_msgSend(v25, sel_capabilities);
  unsigned int v148 = objc_msgSend(v147, sel_isMomentsAvailable);

  if (v148) {
    uint64_t v196 = ConversationController.momentsLocallyAvailable.getter();
  }
  else {
    uint64_t v196 = 0;
  }
  id v149 = objc_msgSend(v25, sel_capabilities);
  LODWORD(v187) = objc_msgSend(v149, sel_isScreenSharingAvailable);

  id v150 = objc_msgSend(v25, sel_capabilities);
  unsigned int v151 = objc_msgSend(v150, sel_isGondolaCallingAvailable);

  int v152 = v13[*(int *)(v11 + 24) + 3];
  id v153 = objc_msgSend(v25, sel_capabilities);
  unsigned int v154 = objc_msgSend(v153, sel_supportsRequestToScreenShare);

  id v155 = objc_msgSend(v25, sel_identifier);
  uint64_t v156 = (uint64_t)v13;
  id v157 = objc_msgSend(v25, sel_avcIdentifier);
  uint64_t v158 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v159 = v11;
  uint64_t v161 = v160;

  uint64_t v162 = (uint64_t *)(v192 + *(int *)(v159 + 36));
  uint64_t v163 = *v162;
  uint64_t v164 = v162[1];
  uint64_t v165 = 0x100000000;
  if (!v154) {
    uint64_t v165 = 0;
  }
  uint64_t v166 = 0x1000000;
  if (!v152) {
    uint64_t v166 = 0;
  }
  uint64_t v167 = 0x10000;
  if (!v151) {
    uint64_t v167 = 0;
  }
  uint64_t v168 = 256;
  if (!v187) {
    uint64_t v168 = 0;
  }
  uint64_t v169 = (uint64_t)v190;
  Participant.with(idsIdentifier:avcIdentifier:capabilities:nickname:)(v155, v158, v161, v168 | v196 | v167 | v165 | v166, v163, v164);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v169, 1, v159) == 1)
  {
    outlined consume of Participant.CaptionInfo?(v195);
    outlined destroy of SystemUpdateNotice?(v169, &demangling cache variable for type metadata for Participant?);
    uint64_t v212 = 0;
    unint64_t v213 = 0xE000000000000000;
    _StringGuts.grow(_:)(54);
    v173._countAndFlagsBits = 0xD000000000000034;
    v173._object = (void *)0x80000001C37BB850;
    String.append(_:)(v173);
    _print_unlocked<A, B>(_:_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    _s15ConversationKit11ParticipantVWObTm_6(v169, v191);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v170 = swift_allocObject();
    *(_OWORD *)(v170 + 16) = xmmword_1C3769620;
    *(void *)(v170 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v170 + 64) = lazy protocol witness table accessor for type String and conformance String();
    unint64_t v171 = v188;
    *(void *)(v170 + 32) = v189;
    *(void *)(v170 + 40) = v171;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    outlined consume of Participant.CaptionInfo?(v195);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v216, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    return _s15ConversationKit11ParticipantVWOhTm_13(v156, (void (*)(void))type metadata accessor for Participant);
  }
  return result;
}

uint64_t ConversationController.removeParticipant(_:at:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = ConversationController.visibleParticipants.getter();
  swift_beginAccess();
  specialized Array.remove(at:)();
  swift_endAccess();
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v9, (void (*)(void))type metadata accessor for Participant);
  uint64_t v36 = a1;
  uint64_t v11 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:), (uint64_t)v35, v10);
  char v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = MEMORY[0x1E4FBB1A0];
  if ((v13 & 1) == 0)
  {
    uint64_t v34 = v11;
    uint64_t v15 = MEMORY[0x1E4FBB1A0];
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v33 = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C37696D0;
    _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
    uint64_t v17 = specialized >> prefix<A>(_:)();
    uint64_t v19 = v18;
    outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    *(void *)(v16 + 56) = v15;
    unint64_t v20 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v16 + 64) = v20;
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v19;
    uint64_t v14 = v15;
    uint64_t v21 = v34;
    uint64_t v37 = v34;
    uint64_t v22 = String.init<A>(reflecting:)();
    *(void *)(v16 + 96) = v15;
    *(void *)(v16 + 104) = v20;
    *(void *)(v16 + 72) = v22;
    *(void *)(v16 + 80) = v23;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    uint64_t v24 = (void (**)(uint64_t, uint64_t))(v2
                                                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
    swift_beginAccess();
    id v25 = *v24;
    if (*v24)
    {
      swift_retain();
      v25(a1, v21);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v25);
    }
  }
  uint64_t result = Participant.isPendingAuthorization.getter();
  if (result)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1C3769620;
    _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
    uint64_t v28 = specialized >> prefix<A>(_:)();
    uint64_t v30 = v29;
    outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    *(void *)(v27 + 56) = v14;
    *(void *)(v27 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v27 + 32) = v28;
    *(void *)(v27 + 40) = v30;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    unsigned int v31 = (void (**)(uint64_t))(v2
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
    uint64_t result = swift_beginAccess();
    int32x4_t v32 = *v31;
    if (*v31)
    {
      swift_retain();
      v32(a1);
      return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v32);
    }
  }
  return result;
}

uint64_t ConversationController.removeAllParticipants()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Participant(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)&v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBE8], v6);
  char v10 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    char v12 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants);
    swift_beginAccess();
    *char v12 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    char v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    uint64_t result = swift_beginAccess();
    uint64_t v14 = *v13;
    if (*(void *)(*v13 + 16))
    {
      unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      do
      {
        _s15ConversationKit11ParticipantVWOcTm_19(v14 + v15, (uint64_t)v5);
        ConversationController.removeParticipant(_:at:)((uint64_t)v5);
        uint64_t result = _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
        uint64_t v14 = *v13;
      }
      while (*(void *)(*v13 + 16));
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in ConversationController.createNewParticipants(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Participant(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v12 = *(void *)(*v11 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
  uint64_t v13 = *v11;
  *(void *)(v13 + 16) = v12 + 1;
  _s15ConversationKit11ParticipantVWOcTm_19(a1, v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v12);
  swift_endAccess();
  ConversationController.visibleParticipants.getter();
  specialized Collection<>.firstIndex(of:)();
  uint64_t v15 = v14;
  char v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v7);
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    _StringGuts.grow(_:)(56);
    v36._object = (void *)0x80000001C37BC070;
    v36._countAndFlagsBits = 0xD000000000000036;
    String.append(_:)(v36);
    _print_unlocked<A, B>(_:_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v18 = v4;
  uint64_t v39 = a2;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C37696D0;
  uint64_t v38 = v15;
  uint64_t v40 = v15;
  uint64_t v20 = String.init<A>(reflecting:)();
  uint64_t v22 = v21;
  uint64_t v23 = MEMORY[0x1E4FBB1A0];
  *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v24 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v19 + 64) = v24;
  *(void *)(v19 + 32) = v20;
  *(void *)(v19 + 40) = v22;
  _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v18);
  uint64_t v25 = specialized >> prefix<A>(_:)();
  uint64_t v27 = v26;
  outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
  *(void *)(v19 + 96) = v23;
  *(void *)(v19 + 104) = v24;
  *(void *)(v19 + 72) = v25;
  *(void *)(v19 + 80) = v27;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (Participant.isPendingAuthorization.getter())
  {
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1C3769620;
    _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v18);
    uint64_t v29 = specialized >> prefix<A>(_:)();
    uint64_t v31 = v30;
    outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
    *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v28 + 64) = v24;
    *(void *)(v28 + 32) = v29;
    *(void *)(v28 + 40) = v31;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    int32x4_t v32 = (void (**)(uint64_t))(v39
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
    uint64_t result = swift_beginAccess();
    uint64_t v34 = *v32;
    if (!*v32) {
      return result;
    }
    swift_retain();
    v34(a1);
  }
  else
  {
    uint64_t v35 = (void (**)(uint64_t))(v39
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
    uint64_t result = swift_beginAccess();
    uint64_t v34 = *v35;
    if (!*v35) {
      return result;
    }
    swift_retain();
    ((void (*)(uint64_t, uint64_t))v34)(a1, v38);
  }
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v34);
}

void ConversationController.createParticipant(for:conversation:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v189 = a3;
  *(void *)&long long v182 = swift_getObjectType();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v184 = (uint64_t)&v165 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v187);
  long long v179 = (char *)&v165 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v9 = swift_allocObject();
  long long v185 = xmmword_1C37696D0;
  *(_OWORD *)(v9 + 16) = xmmword_1C37696D0;
  *(void *)&long long v219 = a1;
  uint64_t v10 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  id v11 = a1;
  *(void *)&long long v181 = v10;
  uint64_t v12 = String.init<A>(reflecting:)();
  uint64_t v14 = v13;
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v16 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v9 + 64) = v16;
  *(void *)(v9 + 32) = v12;
  *(void *)(v9 + 40) = v14;
  outlined init with copy of Conversation((uint64_t)a2, (uint64_t)&v219);
  uint64_t v17 = specialized >> prefix<A>(_:)((uint64_t)&v219);
  uint64_t v19 = v18;
  outlined destroy of SystemUpdateNotice?((uint64_t)&v219, &demangling cache variable for type metadata for Conversation?);
  *(void *)(v9 + 96) = v15;
  *(void *)(v9 + 104) = v16;
  unint64_t v193 = v16;
  *(void *)(v9 + 72) = v17;
  *(void *)(v9 + 80) = v19;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  id v20 = v11;
  id v21 = objc_msgSend(v20, sel_handle);
  uint64_t v186 = objc_msgSend(v20, sel_identifier);
  id v22 = objc_msgSend(v20, sel_avcIdentifier);
  id v183 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
  double v190 = v23;
  id v191 = v21;

  id v24 = objc_msgSend(v20, sel_capabilities);
  LODWORD(v17) = objc_msgSend(v24, sel_isMomentsAvailable);

  uint64_t v188 = v3;
  if (v17) {
    *(void *)&long long v180 = ConversationController.momentsLocallyAvailable.getter();
  }
  else {
    *(void *)&long long v180 = 0;
  }
  id v25 = objc_msgSend(v20, sel_capabilities);
  unsigned int v26 = objc_msgSend(v25, sel_isScreenSharingAvailable);

  id v27 = objc_msgSend(v20, sel_capabilities);
  unsigned int v28 = objc_msgSend(v27, sel_isGondolaCallingAvailable);

  uint64_t v29 = a2[3];
  uint64_t v30 = a2[4];
  uint64_t v31 = a2;
  __swift_project_boxed_opaque_existential_1(a2, v29);
  id v32 = objc_msgSend(v20, sel_handle);
  char v33 = Conversation.containsKickable(participantWithHandle:)(v32, v29, v30);

  id v34 = objc_msgSend(v20, sel_capabilities);
  unsigned int v35 = objc_msgSend(v34, sel_supportsRequestToScreenShare);

  *(void *)&long long v219 = v191;
  *((void *)&v219 + 1) = v186;
  LOBYTE(v220) = 0;
  *((void *)&v220 + 1) = v183;
  double v221 = v190;
  uint64_t v36 = 0x100000000;
  if (!v35) {
    uint64_t v36 = 0;
  }
  uint64_t v37 = 0x1000000;
  if ((v33 & 1) == 0) {
    uint64_t v37 = 0;
  }
  uint64_t v38 = 0x10000;
  if (!v28) {
    uint64_t v38 = 0;
  }
  uint64_t v39 = 256;
  if (!v26) {
    uint64_t v39 = 0;
  }
  uint64_t v41 = v188;
  uint64_t v40 = v189;
  ConversationController.createParticipant(for:conversation:capabilities:)((uint64_t)&v219, v31, v39 & 0xFFFFFFFFFFFFFFFELL | v180 & 1 | v38 | v37 | v36, v189);
  uint64_t v42 = v31[3];
  uint64_t v43 = v31[4];
  uint64_t v186 = v31;
  __swift_project_boxed_opaque_existential_1(v31, v42);
  uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 88))(v42, v43);
  id v45 = v20;
  specialized Sequence.first(where:)(v44, v45, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember, 0x1E4FADB80, (uint64_t)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
  uint64_t v47 = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = v185;
  *(void *)&long long v219 = v45;
  id v49 = v45;
  uint64_t v50 = String.init<A>(reflecting:)();
  uint64_t v51 = MEMORY[0x1E4FBB1A0];
  unint64_t v52 = v193;
  *(void *)(v48 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v48 + 64) = v52;
  *(void *)(v48 + 32) = v50;
  *(void *)(v48 + 40) = v53;
  id v183 = v47;
  if (v47)
  {
    *(void *)&long long v219 = v47;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    id v54 = v47;
    uint64_t v55 = String.init<A>(reflecting:)();
  }
  else
  {
    unint64_t v56 = 0xE300000000000000;
    uint64_t v55 = 7104878;
  }
  uint64_t v57 = v187;
  unint64_t v58 = v193;
  *(void *)(v48 + 96) = v51;
  *(void *)(v48 + 104) = v58;
  *(void *)(v48 + 72) = v55;
  *(void *)(v48 + 80) = v56;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  id v59 = objc_msgSend(v49, sel_handle);
  double v60 = v186;
  double v61 = static ConversationController.member(correspondingTo:in:)(v59, v186);

  id v62 = objc_msgSend(v61, sel_lightweightPrimary);
  uint64_t v63 = *(int *)(v57 + 48);

  *(void *)(v40 + v63) = v62;
  uint64_t v64 = v60[3];
  uint64_t v65 = v60[4];
  __swift_project_boxed_opaque_existential_1(v60, v64);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v65 + 56))(v64, v65) == 3)
  {
    id v66 = objc_msgSend(v49, sel_streamToken);
    id v67 = objc_msgSend(v49, sel_screenToken);
    unsigned int v68 = objc_msgSend(v49, sel_isVideoEnabled);
    *(void *)&long long v182 = v67;
    if (v68 && *(unsigned char *)(v41 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
    {
      uint64_t v69 = v41 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator;
      swift_beginAccess();
      outlined init with copy of Conversation(v69, (uint64_t)&v219);
      uint64_t v70 = *((void *)&v220 + 1);
      double v71 = v221;
      __swift_project_boxed_opaque_existential_1(&v219, *((uint64_t *)&v220 + 1));
      (*(void (**)(long long *__return_ptr, id, uint64_t, char **, uint64_t, double))(*(void *)&v71 + 8))(&v195, v66, v41, &protocol witness table for ConversationController, v70, COERCE_DOUBLE(*(void *)&v71));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v219);
      outlined init with copy of Conversation(v69, (uint64_t)&v219);
      uint64_t v72 = *((void *)&v220 + 1);
      double v73 = v221;
      __swift_project_boxed_opaque_existential_1(&v219, *((uint64_t *)&v220 + 1));
      (*(void (**)(void *__return_ptr, id, uint64_t, char **, uint64_t, double))(*(void *)&v73 + 8))(v237, v66, v41, &protocol witness table for ConversationController, v72, COERCE_DOUBLE(*(void *)&v73));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v219);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Participant.VideoProviderType, ParticipantVideoProvider)>);
      uint64_t v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v185;
      *(unsigned char *)(v74 + 32) = 0;
      outlined init with copy of Conversation((uint64_t)&v195, v74 + 40);
      *(unsigned char *)(v74 + 80) = 1;
      outlined init with copy of Conversation((uint64_t)v237, v74 + 88);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
      lazy protocol witness table accessor for type Participant.VideoProviderType and conformance Participant.VideoProviderType();
      *(void *)&long long v185 = Dictionary.init(dictionaryLiteral:)();
      uint64_t v75 = *((void *)&v196 + 1);
      uint64_t v76 = v197;
      __swift_project_boxed_opaque_existential_1(&v195, *((uint64_t *)&v196 + 1));
      uint64_t v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 16))(v75, v76);
      uint64_t v78 = *((void *)&v196 + 1);
      uint64_t v79 = v197;
      __swift_project_boxed_opaque_existential_1(&v195, *((uint64_t *)&v196 + 1));
      LODWORD(v178) = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 32))(v78, v79);
      uint64_t v80 = *((void *)&v196 + 1);
      uint64_t v81 = v197;
      __swift_project_boxed_opaque_existential_1(&v195, *((uint64_t *)&v196 + 1));
      LODWORD(v181) = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 24))(v80, v81);
      uint64_t v82 = *((void *)&v196 + 1);
      uint64_t v83 = v197;
      __swift_project_boxed_opaque_existential_1(&v195, *((uint64_t *)&v196 + 1));
      uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 40))(v82, v83);
      if ((v84 & 0x100000000) != 0) {
        int v85 = 0;
      }
      else {
        int v85 = v84;
      }
      uint64_t v86 = *((void *)&v196 + 1);
      uint64_t v87 = v197;
      __swift_project_boxed_opaque_existential_1(&v195, *((uint64_t *)&v196 + 1));
      uint64_t v88 = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 56))(v86, v87);
      if ((v88 & 0x100000000) != 0) {
        unsigned int v89 = 0;
      }
      else {
        unsigned int v89 = v88;
      }
      uint64_t v90 = VideoAttributeOrientation.deviceOrientation.getter(v85);
      *(void *)&long long v180 = VideoAttributeCamera.cameraPosition.getter(v89);
      outlined init with copy of Conversation((uint64_t)&v195, (uint64_t)v216);
      if (ConversationController.isOneToOneModeEnabled.getter())
      {
        uint64_t v176 = v77;
        static AspectRatio.remoteAspectRatios(with:contentsRect:)(v216, (uint64_t)&v219, 1.0, 1.0);
        double v92 = *((double *)&v219 + 1);
        double v91 = *(double *)&v219;
        char v93 = v220;
        double v94 = *((double *)&v220 + 1);
        double v95 = v221;
        int v96 = v222;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
        if ((v93 & 1) != 0 || v91 == v92)
        {
          double v91 = 0.0;
          double v92 = 0.0;
          double v97 = 0.0;
          double v98 = 0.0;
          LODWORD(v177) = 1;
        }
        else
        {
          LODWORD(v177) = 0;
          BOOL v164 = v96 == 0;
          if (v96) {
            double v98 = v91;
          }
          else {
            double v98 = v95;
          }
          if (v164) {
            double v97 = v94;
          }
          else {
            double v97 = v92;
          }
        }
        LOBYTE(v77) = v176;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
        double v91 = 0.0;
        double v92 = 0.0;
        double v97 = 0.0;
        double v98 = 0.0;
        LODWORD(v177) = 1;
      }
      char v105 = v178;
      unsigned int v106 = objc_msgSend(v49, sel_isCameraMixedWithScreen);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v237);
      uint64_t v107 = 0x10000000000;
      if ((v181 & 1) == 0) {
        uint64_t v107 = 0;
      }
      uint64_t v108 = 0x1000000000000;
      if ((v105 & 1) == 0) {
        uint64_t v108 = 0;
      }
      unint64_t v100 = v108 & 0xFFFFFFFFFFFFFFFELL | v77 & 1 | v107;
      uint64_t v101 = v180;
      if (v106) {
        __int16 v109 = 256;
      }
      else {
        __int16 v109 = 0;
      }
      __int16 v102 = v109 | v177;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v195);
      uint64_t v99 = v185;
    }
    else if (objc_msgSend(v49, sel_isVideoEnabled) {
           && !*(unsigned char *)(v41 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode))
    }
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
      lazy protocol witness table accessor for type Participant.VideoProviderType and conformance Participant.VideoProviderType();
      uint64_t v103 = Dictionary.init(dictionaryLiteral:)();
      unsigned int v104 = objc_msgSend(v49, sel_isCameraMixedWithScreen);
      double v91 = 0.0;
      double v92 = 0.0;
      double v97 = 0.0;
      double v98 = 0.0;
      uint64_t v99 = v103;
      if (v104) {
        __int16 v102 = 257;
      }
      else {
        __int16 v102 = 1;
      }
      uint64_t v101 = 2;
      unint64_t v100 = 1;
      uint64_t v90 = 1;
    }
    else
    {
      uint64_t v99 = 0;
      unint64_t v100 = 0;
      uint64_t v90 = 0;
      uint64_t v101 = 0;
      double v91 = 0.0;
      double v92 = 0.0;
      double v97 = 0.0;
      double v98 = 0.0;
      __int16 v102 = 0;
    }
    *(void *)&long long v185 = v99;
    v237[0] = v99;
    v237[1] = v100;
    v237[2] = 0;
    v237[3] = v90;
    v237[4] = v101;
    *(double *)&v237[5] = v91;
    *(double *)&v237[6] = v92;
    *(double *)&v237[7] = v97;
    *(double *)&v237[8] = v98;
    __int16 v238 = v102;
    if (objc_msgSend(v49, sel_isScreenEnabled))
    {
      uint64_t v110 = v188;
      uint64_t v40 = v189;
      uint64_t v51 = MEMORY[0x1E4FBB1A0];
      if (*(unsigned char *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) != 2)
      {
        uint64_t v197 = 0;
        long long v195 = 0u;
        long long v196 = 0u;
        long long v121 = *(_OWORD *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes);
        long long v181 = *(_OWORD *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 16);
        long long v182 = v121;
        long long v180 = *(_OWORD *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 32);
        long long v122 = *(_OWORD *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 48);
        long long v177 = *(_OWORD *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 64);
        long long v178 = v122;
        uint64_t v123 = *(void *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 80);
        uint64_t v124 = *(void *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 88);
        char v125 = *(unsigned char *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96);
        long long v219 = 0u;
        long long v220 = 0u;
        double v221 = 0.0;
        long long v228 = 0u;
        long long v229 = 0u;
        long long v230 = 0u;
        long long v231 = 0u;
        long long v232 = 0u;
        long long v233 = 0u;
        char v234 = 1;
        outlined assign with take of Participant?((uint64_t)&v195, (uint64_t)&v219, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        int v222 = 1;
        long long v228 = v182;
        long long v229 = v181;
        long long v230 = v180;
        long long v231 = v178;
        long long v232 = v177;
        *(void *)&long long v233 = v123;
        *((void *)&v233 + 1) = v124;
        char v234 = v125;
        int64x2_t v223 = vdupq_n_s64(1uLL);
        long long v224 = 0u;
        long long v225 = 0u;
        char v226 = 1;
        uint64_t v227 = 0x3FF0000000000000;
LABEL_64:
        if (*(unsigned char *)(v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
        {
          uint64_t v152 = v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator;
          swift_beginAccess();
          outlined init with copy of Conversation(v152, (uint64_t)&v195);
          uint64_t v153 = *((void *)&v196 + 1);
          uint64_t v154 = v197;
          __swift_project_boxed_opaque_existential_1(&v195, *((uint64_t *)&v196 + 1));
          uint64_t v155 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v154 + 8))(objc_msgSend(v49, sel_captionsToken), v153, v154);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v195);
        }
        else
        {
          uint64_t v155 = 0;
        }
        ConversationController.copresenceInfo(for:in:)(v49, v186, (uint64_t *)&v195);
        Participant.AVInfo.init(for:)(v49);
        uint64_t v156 = (uint64_t)v179;
        Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
        outlined release of Participant.CopresenceInfo?((uint64_t *)&v195);
        swift_bridgeObjectRelease();
        outlined consume of Participant.CaptionInfo?(v155);
        outlined destroy of SystemUpdateNotice?((uint64_t)&v219, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        outlined assign with take of Participant(v156, v40);
        uint64_t v57 = v187;
        goto LABEL_68;
      }
      uint64_t v111 = v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator;
      swift_beginAccess();
      outlined init with copy of Conversation(v111, (uint64_t)&v219);
      uint64_t v112 = *((void *)&v220 + 1);
      double v113 = v221;
      __swift_project_boxed_opaque_existential_1(&v219, *((uint64_t *)&v220 + 1));
      (*(void (**)(void *__return_ptr, void, uint64_t, char **, uint64_t, double))(*(void *)&v113 + 8))(v216, v182, v110, &protocol witness table for ConversationController, v112, COERCE_DOUBLE(*(void *)&v113));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v219);
      uint64_t v114 = v217;
      uint64_t v115 = v218;
      __swift_project_boxed_opaque_existential_1(v216, v217);
      uint64_t v116 = (*(uint64_t (**)(uint64_t, uint64_t))(v115 + 40))(v114, v115);
      if ((v116 & 0x100000000) != 0) {
        int v117 = 0;
      }
      else {
        int v117 = v116;
      }
      uint64_t v118 = v217;
      uint64_t v119 = v218;
      __swift_project_boxed_opaque_existential_1(v216, v217);
      uint64_t v120 = (*(uint64_t (**)(uint64_t, uint64_t))(v119 + 40))(v118, v119);
      if ((v120 & 0x100000000) != 0) {
        uint64_t v166 = 1;
      }
      else {
        uint64_t v166 = VideoAttributeOrientation.deviceOrientation.getter(v120);
      }
      uint64_t v126 = v217;
      uint64_t v127 = v218;
      __swift_project_boxed_opaque_existential_1(v216, v217);
      int v128 = (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 16))(v126, v127);
      outlined init with copy of Conversation((uint64_t)v216, (uint64_t)v194);
      uint64_t v129 = *(void *)(v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes);
      uint64_t v130 = *(void *)(v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 8);
      *(void *)&long long v178 = *(void *)(v110
                                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes
                                   + 16);
      uint64_t v131 = *(void *)(v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 24);
      uint64_t v176 = *(void *)(v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 32);
      *(void *)&long long v177 = v131;
      uint64_t v132 = *(void *)(v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 40);
      uint64_t v174 = *(void *)(v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 48);
      uint64_t v175 = v132;
      uint64_t v133 = *(void *)(v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 56);
      uint64_t v172 = *(void *)(v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 64);
      uint64_t v173 = v133;
      uint64_t v134 = *(void *)(v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 72);
      uint64_t v170 = *(void *)(v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 80);
      uint64_t v171 = v134;
      uint64_t v169 = *(void *)(v110 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 88);
      int v168 = *(unsigned __int8 *)(v110
                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes
                                + 96);
      uint64_t v135 = VideoAttributeOrientation.deviceOrientation.getter(v117);
      outlined init with copy of Conversation((uint64_t)v216, (uint64_t)&v195);
      uint64_t v136 = v217;
      uint64_t v137 = v218;
      __swift_project_boxed_opaque_existential_1(v216, v217);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v137 + 64))(v235, v136, v137);
      double v138 = *(double *)&v235[2];
      double v139 = *(double *)&v235[3];
      outlined init with take of AspectRatio?((uint64_t)v235, (uint64_t)v236, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
      LODWORD(v182) = v128;
      *(void *)&long long v181 = v129;
      *(void *)&long long v180 = v130;
      uint64_t v167 = v135;
      if (v236[32])
      {
        double v138 = 1.0;
        double v139 = 1.0;
      }
      static AspectRatio.remoteAspectRatios(with:contentsRect:)(&v195, (uint64_t)&v219, v138, v139);
      double v141 = *((double *)&v219 + 1);
      double v140 = *(double *)&v219;
      char v142 = v220;
      double v143 = *((double *)&v220 + 1);
      double v144 = v221;
      int v145 = v222;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v195);
      if ((v142 & 1) != 0 || v140 == v141)
      {
        double v140 = 0.0;
        double v141 = 0.0;
        double v146 = 0.0;
        double v147 = 0.0;
        char v148 = 1;
      }
      else
      {
        BOOL v163 = v145 == 0;
        if (v145) {
          double v147 = v140;
        }
        else {
          double v147 = v144;
        }
        char v148 = 0;
        if (v163) {
          double v146 = v143;
        }
        else {
          double v146 = v141;
        }
      }
      uint64_t v149 = v217;
      uint64_t v150 = v218;
      __swift_project_boxed_opaque_existential_1(v216, v217);
      double v151 = (*(double (**)(uint64_t, uint64_t))(v150 + 72))(v149, v150);
      long long v195 = 0u;
      long long v196 = 0u;
      uint64_t v197 = 0;
      long long v209 = 0u;
      long long v210 = 0u;
      long long v211 = 0u;
      long long v212 = 0u;
      long long v213 = 0u;
      long long v214 = 0u;
      char v215 = 1;
      outlined assign with take of Participant?((uint64_t)v194, (uint64_t)&v195, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      char v198 = v182 & 1;
      __int16 v199 = 0;
      char v200 = 0;
      *(void *)&long long v209 = v181;
      *((void *)&v209 + 1) = v180;
      *(void *)&long long v210 = v178;
      *((void *)&v210 + 1) = v177;
      *(void *)&long long v211 = v176;
      *((void *)&v211 + 1) = v175;
      *(void *)&long long v212 = v174;
      *((void *)&v212 + 1) = v173;
      *(void *)&long long v213 = v172;
      *((void *)&v213 + 1) = v171;
      *(void *)&long long v214 = v170;
      *((void *)&v214 + 1) = v169;
      char v215 = v168;
      uint64_t v201 = v167;
      uint64_t v202 = v166;
      double v203 = v140;
      double v204 = v141;
      double v205 = v146;
      double v206 = v147;
      char v207 = v148;
      double v208 = v151;
      outlined init with take of AspectRatio?((uint64_t)&v195, (uint64_t)&v219, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
    }
    else
    {
      long long v219 = 0uLL;
      *(void *)&long long v220 = 0;
      *((void *)&v220 + 1) = 1;
      bzero(&v221, 0xB1uLL);
    }
    uint64_t v110 = v188;
    uint64_t v40 = v189;
    uint64_t v51 = MEMORY[0x1E4FBB1A0];
    goto LABEL_64;
  }
LABEL_68:
  uint64_t v157 = swift_allocObject();
  *(_OWORD *)(v157 + 16) = xmmword_1C3769620;
  uint64_t v158 = v184;
  _s15ConversationKit11ParticipantVWOcTm_19(v40, v184);
  __swift_storeEnumTagSinglePayload(v158, 0, 1, v57);
  uint64_t v159 = specialized >> prefix<A>(_:)();
  uint64_t v161 = v160;
  outlined destroy of SystemUpdateNotice?(v158, &demangling cache variable for type metadata for Participant?);
  unint64_t v162 = v193;
  *(void *)(v157 + 56) = v51;
  *(void *)(v157 + 64) = v162;
  *(void *)(v157 + 32) = v159;
  *(void *)(v157 + 40) = v161;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void v10[2];
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t vars8;

  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  uint64_t v9 = a1;
  v10[0] = v9;
  v10[1] = 0;
  id v11 = 1;
  if (Conversation.containsKickable(participantWithHandle:)(v9, v6, v7)) {
    uint64_t v8 = 16843008;
  }
  else {
    uint64_t v8 = 65792;
  }
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  ConversationController.createParticipant(for:conversation:capabilities:)((uint64_t)v10, a2, v8, a3);
  swift_bridgeObjectRelease();
}

uint64_t closure #5 in ConversationController.createNewParticipants(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(type metadata accessor for Participant(0) + 28);
  uint64_t v5 = *(void **)(a1 + v4);
  if (v5)
  {
    uint64_t v6 = *(void **)(a2 + v4);
    id v7 = v5;
    if (v6)
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      id v8 = v7;
      id v7 = v6;
      char v9 = static NSObject.== infix(_:_:)();
    }
    else
    {
      char v9 = 0;
    }
  }
  else
  {
    char v9 = *(void *)(a2 + v4) == 0;
  }
  return v9 & 1;
}

uint64_t ConversationController.createParticipant(for:conversation:capabilities:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v71 = a3;
  uint64_t v72 = a4;
  uint64_t ObjectType = (char *)swift_getObjectType();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v73 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v70 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for Participant.State(0);
  uint64_t v10 = MEMORY[0x1F4188790](v59);
  uint64_t v69 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v56 - v12;
  long long v14 = *(_OWORD *)(a1 + 16);
  v77[0] = *(_OWORD *)a1;
  v77[1] = v14;
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v63 = *(void *)(a1 + 24);
  uint64_t v64 = v15;
  uint64_t v78 = v15;
  uint64_t v60 = *(void *)a1;
  uint64_t v61 = *(void *)(a1 + 8);
  uint64_t v62 = *(unsigned __int8 *)(a1 + 16);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C37696D0;
  uint64_t v17 = *(void **)&v77[0];
  v76[0] = *(void *)&v77[0];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  id v18 = v17;
  uint64_t v19 = String.init<A>(reflecting:)();
  uint64_t v21 = v20;
  uint64_t v22 = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v23 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v16 + 64) = v23;
  *(void *)(v16 + 32) = v19;
  *(void *)(v16 + 40) = v21;
  outlined init with copy of Conversation((uint64_t)a2, (uint64_t)v76);
  uint64_t v24 = specialized >> prefix<A>(_:)((uint64_t)v76);
  uint64_t v26 = v25;
  outlined destroy of SystemUpdateNotice?((uint64_t)v76, &demangling cache variable for type metadata for Conversation?);
  *(void *)(v16 + 96) = v22;
  *(void *)(v16 + 104) = v23;
  unint64_t v67 = v23;
  *(void *)(v16 + 72) = v24;
  *(void *)(v16 + 80) = v26;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v27 = type metadata accessor for UUID();
  id v66 = &v56;
  uint64_t v75 = v27;
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 64);
  MEMORY[0x1F4188790](v27);
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v74 = (char *)&v56 - v30;
  UUID.init()();
  uint64_t v58 = static Colors.ParticipantGradients.gradient(for:)(v18);
  uint64_t v31 = a2[3];
  uint64_t v32 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v31);
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 128))(v31, v32);
  outlined retain of ParticipantMediaPriorities((void **)v77);
  specialized Sequence.contains(where:)(v33, (id *)v77);
  swift_bridgeObjectRelease();
  Date.init()();
  swift_storeEnumTagMultiPayload();
  id v34 = static ConversationController.member(correspondingTo:in:)(v18, a2);
  if (v34)
  {
    uint64_t v59 = outlined bridged method (ob) of @objc TUConversationMember.nickname.getter(v34, (SEL *)&selRef_nickname);
    uint64_t v57 = v35;
  }
  else
  {
    uint64_t v59 = 0;
    uint64_t v57 = 0;
  }
  uint64_t v36 = a2[3];
  __swift_project_boxed_opaque_existential_1(a2, v36);
  LOBYTE(v36) = Conversation.containsAuthorizedToChangeGroupMembership(participantWithHandle:)((uint64_t)v18, v36);
  uint64_t v37 = v69;
  uint64_t v38 = _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v13, v69);
  uint64_t ObjectType = v13;
  MEMORY[0x1F4188790](v38);
  uint64_t v39 = (char *)&v56 - v30;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))((char *)&v56 - v30, v74, v75);
  v76[0] = v60;
  v76[1] = v61;
  v76[2] = v62;
  v76[3] = v63;
  v76[4] = v64;
  uint64_t v40 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v41 = v70;
  __swift_storeEnumTagSinglePayload(v70, 1, 1, v40);
  uint64_t v42 = type metadata accessor for ParticipantContactDetailsCache();
  uint64_t v43 = a2[3];
  uint64_t v44 = __swift_project_boxed_opaque_existential_1(a2, v43);
  outlined retain of ParticipantMediaPriorities((void **)v77);
  uint64_t v45 = specialized static ParticipantContactDetailsCache.cache(for:)((uint64_t)v44, v42, v43);
  LOBYTE(v55) = v36 & 1;
  uint64_t v46 = v72;
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(v37, (uint64_t)v39, v71 & 0x101010101, (uint64_t)v76, v58, v59, v57, v41, v55, v45, v56, v57, v58, v59, v60, v61, v62, v63, v64,
    (uint64_t)ObjectType,
    v66,
    v67);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1C3769620;
  uint64_t v48 = v73;
  _s15ConversationKit11ParticipantVWOcTm_19(v46, v73);
  uint64_t v49 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload(v48, 0, 1, v49);
  uint64_t v50 = specialized >> prefix<A>(_:)();
  uint64_t v52 = v51;
  outlined destroy of SystemUpdateNotice?(v48, &demangling cache variable for type metadata for Participant?);
  uint64_t v53 = v67;
  *(void *)(v47 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v47 + 64) = v53;
  *(void *)(v47 + 32) = v50;
  *(void *)(v47 + 40) = v52;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)ObjectType, (void (*)(void))type metadata accessor for Participant.State);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v74, v75);
}

void ConversationController.copresenceInfo(for:in:)(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  uint64_t v7 = (void *)Conversation.currentSharePlayActivity.getter(v5, v6);
  if (!v7)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v12 = 0;
    uint64_t v11 = 0;
LABEL_10:
    uint64_t v23 = 0;
    uint64_t v20 = 0;
    uint64_t v16 = 0;
    uint64_t v15 = 0;
    goto LABEL_14;
  }
  uint64_t v8 = v7;
  uint64_t v9 = outlined bridged method (ob) of @objc TUConversationActivity.localizedApplicationName.getter(objc_msgSend(v7, sel_activity));
  uint64_t v11 = v10;
  if (!v10)
  {

    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v12 = 0;
    goto LABEL_10;
  }
  uint64_t v12 = v9;
  id v13 = TUConversationActivitySession.ongoingDescription.getter();
  uint64_t v15 = v14;
  if (v14)
  {
    uint64_t v16 = (uint64_t)v13;
    char v17 = ConversationController.isParticipant(_:activeIn:)(a1, v8);
    if (v17)
    {
      id v18 = TUConversationActivitySession.preferredBroadcastingAttributes.getter();
      if (v19) {
        uint64_t v20 = 0;
      }
      else {
        uint64_t v20 = (uint64_t)v18;
      }
    }
    else
    {
      uint64_t v20 = 0;
    }
    uint64_t v21 = TUConversationActivitySession.uniqueIdentifier.getter();
    uint64_t v22 = v24;

    uint64_t v23 = v17 & 1;
  }
  else
  {

    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v12 = 0;
    uint64_t v11 = 0;
    uint64_t v23 = 0;
    uint64_t v20 = 0;
    uint64_t v16 = 0;
  }
LABEL_14:
  *a3 = v21;
  a3[1] = v22;
  a3[2] = v12;
  a3[3] = v11;
  a3[4] = v23;
  a3[5] = v20;
  a3[6] = v16;
  a3[7] = v15;
}

uint64_t ConversationController.scheduleKickabilityUpdate(for:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Participant(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v48 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v15 = (char *)&v48 - v12;
  uint64_t v16 = *(void **)(a1 + *(int *)(v11 + 28));
  if (!v16)
  {
    _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)&v48 - v12);
LABEL_8:
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v15, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v10);
    return _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
  }
  uint64_t v55 = v14;
  uint64_t v56 = (uint64_t *)v13;
  uint64_t v57 = v1;
  id v17 = objc_msgSend(v16, sel_value);
  if (!v17)
  {
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v17 = (id)MEMORY[0x1C87730B0](v18);
    swift_bridgeObjectRelease();
  }
  unsigned int v19 = objc_msgSend(v17, sel_destinationIdIsTemporary);

  _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v15);
  if (!v19) {
    goto LABEL_8;
  }
  _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v15, (uint64_t)v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 4u:
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v23 = (uint64_t)&v5[*(int *)(v22 + 48)];
      outlined consume of Participant.CopresenceInfo?(*(void *)&v5[*(int *)(v22 + 64)], *(void *)&v5[*(int *)(v22 + 64) + 8]);
      outlined destroy of Participant.MediaInfo(v23);
      uint64_t v24 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v5, v24);
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v15, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v10);
      char v25 = v10[*(int *)(v6 + 24) + 3];
      uint64_t result = _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
      if (v25)
      {
        if (one-time initialization token for shared != -1) {
          swift_once();
        }
        double v26 = (double)(*(uint64_t (**)(void))(*(void *)static Defaults.shared + 696))() + 0.01;
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        uint64_t v53 = static OS_dispatch_queue.main.getter();
        uint64_t v27 = type metadata accessor for DispatchTime();
        id v54 = &v48;
        uint64_t v51 = v27;
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v29 = MEMORY[0x1F4188790](v27);
        uint64_t v49 = &v48;
        MEMORY[0x1F4188790](v29);
        uint64_t v31 = (char *)&v48 - v30;
        static DispatchTime.now()();
        MEMORY[0x1C8772E20](v31, v26);
        uint64_t v32 = *(uint64_t (**)(uint64_t *, uint64_t))(v28 + 8);
        uint64_t v50 = v28 + 8;
        uint64_t v52 = v32;
        v32((uint64_t *)v31, v27);
        uint64_t v33 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v34 = (uint64_t)v56;
        _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v56);
        unint64_t v35 = (*(unsigned __int8 *)(v55 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
        uint64_t v36 = swift_allocObject();
        *(void *)(v36 + 16) = v33;
        _s15ConversationKit11ParticipantVWObTm_6(v34, v36 + v35);
        aBlock[4] = partial apply for closure #1 in ConversationController.scheduleKickabilityUpdate(for:);
        aBlock[5] = v36;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
        void aBlock[3] = &block_descriptor_1080;
        uint64_t v37 = _Block_copy(aBlock);
        swift_release();
        uint64_t v38 = type metadata accessor for DispatchQoS();
        uint64_t v57 = &v48;
        uint64_t v39 = *(void *)(v38 - 8);
        MEMORY[0x1F4188790](v38);
        uint64_t v41 = (char *)&v48 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
        static DispatchQoS.unspecified.getter();
        uint64_t v42 = type metadata accessor for DispatchWorkItemFlags();
        uint64_t v56 = &v48;
        uint64_t v43 = *(void *)(v42 - 8);
        MEMORY[0x1F4188790](v42);
        uint64_t v45 = (char *)&v48 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
        aBlock[0] = MEMORY[0x1E4FBC860];
        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v46 = v49;
        uint64_t v47 = (void *)v53;
        MEMORY[0x1C8773B10](v49, v41, v45, v37);
        _Block_release(v37);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v42);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
        uint64_t result = v52(v46, v51);
      }
      break;
    case 6u:
      goto LABEL_8;
    default:
      uint64_t v20 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v5, v20);
      goto LABEL_8;
  }
  return result;
}

void closure #1 in ConversationController.scheduleKickabilityUpdate(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C8776240](a1 + 16);
  if (v7)
  {
    uint64_t v8 = (char *)v7;
    uint64_t v9 = ConversationController.visibleParticipants.getter();
    MEMORY[0x1F4188790](v9);
    *(&v20 - 2) = a2;
    uint64_t v10 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for closure #1 in ParticipantGridViewController.update(participant:broadcastingState:), (uint64_t)(&v20 - 4), v9);
    char v12 = v11;
    swift_bridgeObjectRelease();
    if (v12)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C3769620;
      _s15ConversationKit11ParticipantVWOcTm_19(a2, (uint64_t)v6);
      uint64_t v16 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v16);
      uint64_t v17 = specialized >> prefix<A>(_:)();
      uint64_t v19 = v18;
      outlined destroy of SystemUpdateNotice?((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
      *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v15 + 32) = v17;
      *(void *)(v15 + 40) = v19;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = &v8[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange];
      swift_beginAccess();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))v13;
      if (*(void *)v13)
      {
        swift_retain();
        v14(a2, v10);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v14);
      }
    }
  }
}

uint64_t ConversationController.pendingMember(correspondingTo:in:)(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + *(int *)(type metadata accessor for Participant(0) + 28));
  if (!v3) {
    return 0;
  }
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 128);
  id v7 = v3;
  uint64_t v8 = v6(v4, v5);
  id v9 = v7;
  specialized Sequence.first(where:)(v8, v9, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  uint64_t v11 = v10;

  swift_bridgeObjectRelease();
  return v11;
}

void ConversationController.updateAudioFrequencyController(with:from:)(uint64_t a1)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
  {
    id v9 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController);
    if (v9)
    {
      id object = v9;
      uint64_t v11 = Participant.audioToken.getter();
      if ((v12 & 1) == 0 && !v11)
      {
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        static os_log_type_t.error.getter();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_1C3769620;
        _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v8);
        uint64_t v14 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v14);
        uint64_t v15 = specialized >> prefix<A>(_:)();
        uint64_t v17 = v16;
        outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
        *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v13 + 32) = v15;
        *(void *)(v13 + 40) = v17;
        os_log(_:dso:log:type:_:)();

LABEL_8:
        swift_bridgeObjectRelease();
        return;
      }
      uint64_t v3 = Participant.audioToken.getter();
      char v26 = v25;
      Participant.videoInfo.getter();
      uint64_t v2 = Participant.audioToken.getter();
      char v4 = v27;
      Participant.videoInfo.getter();
      if (v26)
      {
        if ((v4 & 1) == 0)
        {
          outlined release of LinearGradient((uint64_t)v66);
          outlined init with take of AspectRatio?((uint64_t)v67, (uint64_t)v69, &demangling cache variable for type metadata for Participant.VideoInfo?);
          if (!v69[0])
          {
LABEL_18:
            if (v2)
            {
              if (one-time initialization token for conversationKit != -1) {
                swift_once();
              }
              uint64_t v64 = static OS_os_log.conversationKit;
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
              uint64_t v29 = swift_allocObject();
              *(_OWORD *)(v29 + 16) = xmmword_1C37696D0;
              uint64_t v65 = v2;
              uint64_t v30 = String.init<A>(reflecting:)();
              uint64_t v32 = v31;
              uint64_t v33 = MEMORY[0x1E4FBB1A0];
              *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
              unint64_t v34 = lazy protocol witness table accessor for type String and conformance String();
              *(void *)(v29 + 64) = v34;
              *(void *)(v29 + 32) = v30;
              *(void *)(v29 + 40) = v32;
              _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v8);
              uint64_t v35 = type metadata accessor for Participant(0);
              __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v35);
              uint64_t v36 = specialized >> prefix<A>(_:)();
              uint64_t v38 = v37;
              outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
              *(void *)(v29 + 96) = v33;
              *(void *)(v29 + 104) = v34;
              *(void *)(v29 + 72) = v36;
              *(void *)(v29 + 80) = v38;
              static os_log_type_t.default.getter();
              os_log(_:dso:log:type:_:)();
              swift_bridgeObjectRelease();
              objc_msgSend(object, sel_unregisterParticipantPowerSpectrum_, v2);
            }
            goto LABEL_37;
          }
          goto LABEL_24;
        }
        outlined init with take of AspectRatio?((uint64_t)v66, (uint64_t)v69, &demangling cache variable for type metadata for Participant.VideoInfo?);
        if (v69[0])
        {
LABEL_26:
          outlined release of LinearGradient((uint64_t)v66);
          outlined init with take of AspectRatio?((uint64_t)v67, (uint64_t)v68, &demangling cache variable for type metadata for Participant.VideoInfo?);
          uint64_t v39 = v68[0];

          if (!v39) {
            return;
          }
LABEL_27:
          outlined release of LinearGradient((uint64_t)v67);
          return;
        }
        outlined release of LinearGradient((uint64_t)v67);
        goto LABEL_37;
      }
      outlined init with take of AspectRatio?((uint64_t)v66, (uint64_t)v69, &demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v69[0])
      {
        if ((v4 & 1) == 0)
        {
          outlined init with take of AspectRatio?((uint64_t)v67, (uint64_t)v68, &demangling cache variable for type metadata for Participant.VideoInfo?);
          uint64_t v28 = v68[0];
          outlined release of LinearGradient((uint64_t)v66);
          if (!v28) {
            goto LABEL_18;
          }
LABEL_24:

          goto LABEL_27;
        }
        goto LABEL_26;
      }
LABEL_30:
      if ((v4 & 1) != 0
        || (outlined init with take of AspectRatio?((uint64_t)v67, (uint64_t)v68, &demangling cache variable for type metadata for Participant.VideoInfo?), v68[0]))
      {
        outlined release of LinearGradient((uint64_t)v67);
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        uint64_t v64 = static OS_os_log.conversationKit;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_1C37696D0;
        uint64_t v65 = v3;
        uint64_t v43 = String.init<A>(reflecting:)();
        uint64_t v45 = v44;
        uint64_t v46 = MEMORY[0x1E4FBB1A0];
        *(void *)(v42 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v47 = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v42 + 64) = v47;
        *(void *)(v42 + 32) = v43;
        *(void *)(v42 + 40) = v45;
        _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v8);
        uint64_t v48 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v48);
        uint64_t v49 = specialized >> prefix<A>(_:)();
        uint64_t v51 = v50;
        outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
        *(void *)(v42 + 96) = v46;
        *(void *)(v42 + 104) = v47;
        *(void *)(v42 + 72) = v49;
        *(void *)(v42 + 80) = v51;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v3 == v2) {
          goto LABEL_37;
        }
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        uint64_t v64 = static OS_os_log.conversationKit;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_1C376BA10;
        uint64_t v65 = v2;
        uint64_t v53 = String.init<A>(reflecting:)();
        uint64_t v55 = v54;
        *(void *)(v52 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v56 = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v52 + 64) = v56;
        *(void *)(v52 + 32) = v53;
        *(void *)(v52 + 40) = v55;
        uint64_t v65 = v3;
        uint64_t v57 = String.init<A>(reflecting:)();
        *(void *)(v52 + 96) = MEMORY[0x1E4FBB1A0];
        *(void *)(v52 + 104) = v56;
        *(void *)(v52 + 72) = v57;
        *(void *)(v52 + 80) = v58;
        _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v8);
        uint64_t v59 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v59);
        uint64_t v60 = specialized >> prefix<A>(_:)();
        uint64_t v62 = v61;
        outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
        *(void *)(v52 + 136) = MEMORY[0x1E4FBB1A0];
        *(void *)(v52 + 144) = v56;
        *(void *)(v52 + 112) = v60;
        *(void *)(v52 + 120) = v62;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        objc_msgSend(object, sel_unregisterParticipantPowerSpectrum_, v2);
      }
      objc_msgSend(object, sel_registerParticipantPowerSpectrum_, v3);
LABEL_37:

      return;
    }
    uint64_t v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
    swift_beginAccess();
    uint64_t v19 = *v18;
    if ((unint64_t)*v18 >= 3)
    {
      if (*v18 == 3)
      {
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        static os_log_type_t.error.getter();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_1C3769620;
        _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v8);
        uint64_t v21 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v21);
        uint64_t v22 = specialized >> prefix<A>(_:)();
        uint64_t v24 = v23;
        outlined destroy of SystemUpdateNotice?((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
        *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v20 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v20 + 32) = v22;
        *(void *)(v20 + 40) = v24;
        os_log(_:dso:log:type:_:)();
        goto LABEL_8;
      }
      if (v19 != 4)
      {
        v68[0] = 0;
        v68[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(72);
        v40._id object = (void *)0x80000001C37BBA50;
        v40._countAndFlagsBits = 0xD000000000000046;
        String.append(_:)(v40);
        v67[0] = v19;
        v41._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        id object = v41._object;
        String.append(_:)(v41);
        swift_bridgeObjectRelease();
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        goto LABEL_30;
      }
    }
  }
}

uint64_t ConversationController.captionsProvider(for:token:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = ConversationController.existingCaptionsProvider(for:token:)(a1, a2);
  if (v8) {
    return v8;
  }
  uint64_t v10 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator;
  swift_beginAccess();
  outlined init with copy of Conversation(v10, (uint64_t)v29);
  uint64_t v11 = v30;
  uint64_t v12 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(a2, v11, v12);
  uint64_t v14 = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  if (v9)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    v28[1] = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C376BA10;
    v29[0] = v9;
    v29[1] = v14;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCaptionsProvider);
    uint64_t v16 = String.init<A>(reflecting:)();
    uint64_t v18 = v17;
    uint64_t v19 = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v20 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v15 + 64) = v20;
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v18;
    v29[0] = a2;
    uint64_t v21 = String.init<A>(reflecting:)();
    *(void *)(v15 + 96) = v19;
    *(void *)(v15 + 104) = v20;
    *(void *)(v15 + 72) = v21;
    *(void *)(v15 + 80) = v22;
    _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v7);
    uint64_t v23 = type metadata accessor for Participant(0);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v23);
    uint64_t v24 = specialized >> prefix<A>(_:)();
    uint64_t v26 = v25;
    outlined destroy of SystemUpdateNotice?((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
    *(void *)(v15 + 136) = v19;
    *(void *)(v15 + 144) = v20;
    *(void *)(v15 + 112) = v24;
    *(void *)(v15 + 120) = v26;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t ConversationController.remoteVideoClient(for:ofType:token:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ConversationController.existingVideoProvider(for:ofType:token:)(a2, a3, (uint64_t)&v31);
  if (v32) {
    return outlined init with take of Notice(&v31, a4);
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)&v31, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  uint64_t v13 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator;
  swift_beginAccess();
  outlined init with copy of Conversation(v13, (uint64_t)&v31);
  uint64_t v14 = v32;
  uint64_t v15 = v33;
  __swift_project_boxed_opaque_existential_1(&v31, v32);
  (*(void (**)(uint64_t, uint64_t, char **, uint64_t, uint64_t))(v15 + 8))(a3, v4, &protocol witness table for ConversationController, v14, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C376A6F0;
  outlined init with copy of Conversation(a4, (uint64_t)&v31);
  uint64_t v17 = specialized >> prefix<A>(_:)((uint64_t)&v31);
  uint64_t v19 = v18;
  outlined destroy of SystemUpdateNotice?((uint64_t)&v31, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  uint64_t v20 = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v21 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v16 + 64) = v21;
  *(void *)(v16 + 32) = v17;
  *(void *)(v16 + 40) = v19;
  *(void *)&long long v31 = a3;
  uint64_t v22 = String.init<A>(reflecting:)();
  *(void *)(v16 + 96) = v20;
  *(void *)(v16 + 104) = v21;
  *(void *)(v16 + 72) = v22;
  *(void *)(v16 + 80) = v23;
  LOBYTE(v31) = a2;
  uint64_t v24 = String.init<A>(reflecting:)();
  *(void *)(v16 + 136) = v20;
  *(void *)(v16 + 144) = v21;
  *(void *)(v16 + 112) = v24;
  *(void *)(v16 + 120) = v25;
  _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v11);
  uint64_t v26 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v26);
  uint64_t v27 = specialized >> prefix<A>(_:)();
  uint64_t v29 = v28;
  outlined destroy of SystemUpdateNotice?((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
  *(void *)(v16 + 176) = v20;
  *(void *)(v16 + 184) = v21;
  *(void *)(v16 + 152) = v27;
  *(void *)(v16 + 160) = v29;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  return swift_bridgeObjectRelease();
}

unint64_t ConversationController.remoteOrientationFor(aspectRatio:videoRotation:deviceFamily:)(unint64_t result, uint64_t a2, double a3, double a4)
{
  if (a4 >= a3)
  {
    if (result <= 3)
    {
      uint64_t v4 = &unk_1C378A718;
      return v4[result];
    }
    return 1;
  }
  if (a2 != 3) {
    return result;
  }
  if (result >= 4) {
    return 1;
  }
  uint64_t v4 = &unk_1C378A6F8;
  return v4[result];
}

void *static ConversationController.member(correspondingTo:in:)(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + *(int *)(type metadata accessor for Participant(0) + 28));
  if (!v3) {
    return 0;
  }
  id v4 = v3;
  uint64_t v5 = static ConversationController.member(correspondingTo:in:)(v4, a2);

  return v5;
}

uint64_t ConversationController.didUpdateVisibleParticipant(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = ConversationController.visibleParticipants.getter();
  uint64_t v19 = a1;
  uint64_t v7 = specialized Collection.firstIndex(where:)((uint64_t (*)(uint64_t))partial apply for closure #1 in ParticipantGridViewController.update(participant:broadcastingState:), (uint64_t)v18, v6);
  char v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C3769620;
    _s15ConversationKit11ParticipantVWOcTm_19(a1, (uint64_t)v5);
    uint64_t v14 = type metadata accessor for Participant(0);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v14);
    uint64_t v15 = specialized >> prefix<A>(_:)();
    uint64_t v17 = v16;
    outlined destroy of SystemUpdateNotice?((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
    *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v13 + 32) = v15;
    *(void *)(v13 + 40) = v17;
    os_log(_:dso:log:type:_:)();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = (void (**)(uint64_t, uint64_t))(v1
                                                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
    uint64_t result = swift_beginAccess();
    uint64_t v12 = *v10;
    if (*v10)
    {
      swift_retain();
      v12(a1, v7);
      return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v12);
    }
  }
  return result;
}

void ConversationController.updateRemoteParticipantsKickableAndAuthorizedToChangeGroupMembership(with:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v115 = (uint64_t)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v126 = (uint64_t)&v112 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v125 = (uint64_t)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.State?);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v124 = (uint64_t)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for Participant(0);
  uint64_t v128 = *((void *)v12 - 1);
  MEMORY[0x1F4188790](v12);
  uint64_t v112 = (uint64_t)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v127 = (uint64_t)&v112 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v112 - v17;
  MEMORY[0x1F4188790](v19);
  unint64_t v21 = (char *)&v112 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant));
  MEMORY[0x1F4188790](v22);
  uint64_t v117 = (uint64_t)&v112 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant)?);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v131 = (char *)&v112 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v133 = (unint64_t *)((char *)&v112 - v27);
  uint64_t v28 = type metadata accessor for DispatchPredicate();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  long long v31 = (uint64_t *)((char *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *long long v31 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v29 + 104))(v31, *MEMORY[0x1E4FBCBE8], v28);
  char v32 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v29 + 8))(v31, v28);
  if (v32)
  {
    uint64_t v33 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    swift_beginAccess();
    uint64_t v116 = v33;
    uint64_t v34 = *v33;
    unint64_t v132 = *(void *)(*v33 + 16);
    double v113 = (void (**)(char *, unint64_t))(v2
                                                          + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
    long long v121 = &v137;
    uint64_t v118 = v34;
    swift_bridgeObjectRetain();
    unint64_t v35 = 0;
    long long v114 = xmmword_1C376A6F0;
    uint64_t v130 = a1;
    uint64_t v123 = v12;
    uint64_t v122 = v22;
    uint64_t v36 = (unint64_t *)v131;
    while (1)
    {
      uint64_t v37 = v133;
      while (1)
      {
        if (v35 == v132)
        {
          uint64_t v38 = 1;
          unint64_t v35 = v132;
        }
        else
        {
          if (v35 >= *(void *)(v118 + 16))
          {
            __break(1u);
            goto LABEL_39;
          }
          uint64_t v39 = v117 + *(int *)(v22 + 48);
          _s15ConversationKit11ParticipantVWOcTm_19(v118+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(void *)(v128 + 72) * v35, v39);
          uint64_t v40 = (uint64_t)v36 + *(int *)(v22 + 48);
          *uint64_t v36 = v35;
          uint64_t v41 = v39;
          uint64_t v37 = v133;
          _s15ConversationKit11ParticipantVWObTm_6(v41, v40);
          uint64_t v38 = 0;
          ++v35;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v36, v38, 1, v22);
        outlined init with take of AspectRatio?((uint64_t)v36, (uint64_t)v37, &demangling cache variable for type metadata for (offset: Int, element: Participant)?);
        if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v22) == 1)
        {
          swift_bridgeObjectRelease();
          return;
        }
        unint64_t v135 = *v37;
        _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v37 + *(int *)(v22 + 48), (uint64_t)v21);
        uint64_t v42 = *(void **)&v21[v12[7]];
        if (v42) {
          break;
        }
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
      }
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v21, (uint64_t)v18);
      uint64_t v43 = a1[3];
      uint64_t v44 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v43);
      id v45 = v42;
      int v134 = Conversation.containsKickable(participantWithHandle:)(v45, v43, v44);
      uint64_t v46 = &v18[v12[6]];
      if ((v134 & 1) != v46[3])
      {
        uint64_t v47 = type metadata accessor for Participant.State(0);
        uint64_t v48 = v124;
        __swift_storeEnumTagSinglePayload(v124, 1, 1, v47);
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v129 = &v112;
        MEMORY[0x1F4188790](v49 - 8);
        uint64_t v51 = (char *)&v112 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v52 = type metadata accessor for UUID();
        __swift_storeEnumTagSinglePayload((uint64_t)v51, 1, 1, v52);
        uint64_t v53 = 256;
        if (!v46[1]) {
          uint64_t v53 = 0;
        }
        uint64_t v54 = 0x10000;
        if (!v46[2]) {
          uint64_t v54 = 0;
        }
        uint64_t v55 = 0x1000000;
        if ((v134 & 1) == 0) {
          uint64_t v55 = 0;
        }
        uint64_t v56 = 0x100000000;
        if (!v46[4]) {
          uint64_t v56 = 0;
        }
        unint64_t v57 = *v46 | (unint64_t)v53 | v54;
        uint64_t v136 = 1;
        uint64_t v58 = v55 | v57 | v56;
        uint64_t v59 = (uint64_t)v121;
        *(_OWORD *)long long v121 = 0u;
        *(_OWORD *)(v59 + 16) = 0u;
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
        unint64_t v61 = v35;
        id v62 = v45;
        uint64_t v63 = v125;
        __swift_storeEnumTagSinglePayload(v125, 1, 1, v60);
        LOBYTE(v110) = 2;
        uint64_t v64 = v127;
        Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v48, (uint64_t)v51, v58, (uint64_t)&v136, 0, 0, 1, v63, v110, 0, 0, v111, v112, (uint64_t)v113, v114, *((uint64_t *)&v114 + 1), v115, (uint64_t)v116, v117,
          v118,
          (char)v119,
          v120,
          (uint64_t)v121);
        uint64_t v65 = v63;
        id v45 = v62;
        unint64_t v35 = v61;
        outlined destroy of SystemUpdateNotice?(v65, &demangling cache variable for type metadata for Participant.CountdownInfo??);
        uint64_t v66 = (uint64_t)v51;
        a1 = v130;
        outlined destroy of SystemUpdateNotice?(v66, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v67 = v48;
        uint64_t v12 = v123;
        outlined destroy of SystemUpdateNotice?(v67, (uint64_t *)&demangling cache variable for type metadata for Participant.State?);
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
        uint64_t v68 = v64;
        uint64_t v22 = v122;
        _s15ConversationKit11ParticipantVWObTm_6(v68, (uint64_t)v18);
      }
      uint64_t v69 = a1[3];
      __swift_project_boxed_opaque_existential_1(a1, v69);
      LODWORD(v129) = Conversation.containsAuthorizedToChangeGroupMembership(participantWithHandle:)((uint64_t)v45, v69);
      char v70 = v129 & 1;
      if ((v129 & 1) != v18[v12[15]])
      {
        uint64_t v71 = type metadata accessor for Participant.State(0);
        uint64_t v72 = v124;
        __swift_storeEnumTagSinglePayload(v124, 1, 1, v71);
        uint64_t v73 = v21;
        uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        MEMORY[0x1F4188790](v74 - 8);
        uint64_t v76 = (char *)&v112 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v77 = type metadata accessor for UUID();
        __swift_storeEnumTagSinglePayload((uint64_t)v76, 1, 1, v77);
        uint64_t v136 = 1;
        uint64_t v78 = (uint64_t)v121;
        *(_OWORD *)long long v121 = 0u;
        *(_OWORD *)(v78 + 16) = 0u;
        uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
        id v80 = v45;
        uint64_t v81 = v125;
        __swift_storeEnumTagSinglePayload(v125, 1, 1, v79);
        LOBYTE(v110) = v70;
        uint64_t v82 = v127;
        Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v72, (uint64_t)v76, 2, (uint64_t)&v136, 0, 0, 1, v81, v110, 0, 0, v111, v112, (uint64_t)v113, v114, *((uint64_t *)&v114 + 1), v115, (uint64_t)v116, v117,
          v118,
          (char)v119,
          v120,
          (uint64_t)v121);
        uint64_t v83 = v81;
        id v45 = v80;
        outlined destroy of SystemUpdateNotice?(v83, &demangling cache variable for type metadata for Participant.CountdownInfo??);
        unint64_t v21 = v73;
        outlined destroy of SystemUpdateNotice?((uint64_t)v76, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        uint64_t v84 = v72;
        uint64_t v12 = v123;
        outlined destroy of SystemUpdateNotice?(v84, (uint64_t *)&demangling cache variable for type metadata for Participant.State?);
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
        uint64_t v85 = v82;
        uint64_t v22 = v122;
        _s15ConversationKit11ParticipantVWObTm_6(v85, (uint64_t)v18);
      }
      static Participant.== infix(_:_:)();
      uint64_t v36 = (unint64_t *)v131;
      if (v86)
      {

        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
        a1 = v130;
        continue;
      }
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      uint64_t v120 = static OS_os_log.conversationKit;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v87 = swift_allocObject();
      *(_OWORD *)(v87 + 16) = v114;
      uint64_t v88 = v126;
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v21, v126);
      __swift_storeEnumTagSinglePayload(v88, 0, 1, (uint64_t)v12);
      uint64_t v89 = v88;
      uint64_t v90 = v115;
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v89, v115, &demangling cache variable for type metadata for Participant?);
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v90, 1, (uint64_t)v12);
      id v119 = v45;
      if (EnumTagSinglePayload == 1)
      {
        outlined destroy of SystemUpdateNotice?(v90, &demangling cache variable for type metadata for Participant?);
        unint64_t v92 = 0xE300000000000000;
        uint64_t v93 = 7104878;
      }
      else
      {
        uint64_t v94 = v112;
        _s15ConversationKit11ParticipantVWObTm_6(v90, v112);
        _s15ConversationKit11ParticipantVWOcTm_19(v94, v127);
        uint64_t v93 = String.init<A>(reflecting:)();
        unint64_t v92 = v95;
        _s15ConversationKit11ParticipantVWOhTm_13(v94, (void (*)(void))type metadata accessor for Participant);
      }
      outlined destroy of SystemUpdateNotice?(v126, &demangling cache variable for type metadata for Participant?);
      uint64_t v96 = MEMORY[0x1E4FBB1A0];
      *(void *)(v87 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v97 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v87 + 64) = v97;
      *(void *)(v87 + 32) = v93;
      *(void *)(v87 + 40) = v92;
      uint64_t v136 = v135;
      uint64_t v98 = String.init<A>(reflecting:)();
      *(void *)(v87 + 96) = v96;
      *(void *)(v87 + 104) = v97;
      *(void *)(v87 + 72) = v98;
      *(void *)(v87 + 80) = v99;
      LOBYTE(v136) = v134 & 1;
      uint64_t v100 = String.init<A>(reflecting:)();
      *(void *)(v87 + 136) = v96;
      *(void *)(v87 + 144) = v97;
      *(void *)(v87 + 112) = v100;
      *(void *)(v87 + 120) = v101;
      LOBYTE(v136) = v129 & 1;
      uint64_t v102 = String.init<A>(reflecting:)();
      *(void *)(v87 + 176) = v96;
      *(void *)(v87 + 184) = v97;
      *(void *)(v87 + 152) = v102;
      *(void *)(v87 + 160) = v103;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      unsigned int v104 = v116;
      swift_beginAccess();
      uint64_t v105 = *v104;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unsigned int v104 = v105;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v105 = specialized _ArrayBuffer._consumeAndCreateNew()();
        *uint64_t v116 = v105;
      }
      a1 = v130;
      uint64_t v36 = (unint64_t *)v131;
      uint64_t v107 = v113;
      unint64_t v108 = v135;
      if ((v135 & 0x8000000000000000) != 0) {
        break;
      }
      if (v135 >= *(void *)(v105 + 16)) {
        goto LABEL_40;
      }
      outlined assign with copy of Participant.State((uint64_t)v18, v105+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(void *)(v128 + 72) * v135);
      swift_endAccess();
      swift_beginAccess();
      __int16 v109 = *v107;
      if (*v107)
      {
        swift_endAccess();
        swift_retain();
        v109(v18, v108);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v109);

        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
        swift_endAccess();
      }
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
  }
  __break(1u);
}

void closure #3 in ConversationController.updateOtherInvitedParticipants()(void **a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  Date.init()();
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = type metadata accessor for UUID();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v22 = (uint64_t)v10;
  long long v23 = xmmword_1C376E330;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v14 = static Colors.ParticipantGradients.gradient(for:)(v10);
  uint64_t v15 = type metadata accessor for Participant.CountdownInfo(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v15);
  uint64_t v16 = type metadata accessor for ParticipantContactDetailsCache();
  uint64_t v17 = a2[3];
  uint64_t v18 = __swift_project_boxed_opaque_existential_1(a2, v17);
  uint64_t v19 = specialized static ParticipantContactDetailsCache.cache(for:)((uint64_t)v18, v16, v17);
  LOBYTE(v20) = 0;
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)((uint64_t)v9, (uint64_t)v13, 16843008, (uint64_t)&v22, v14, 0, 0, (uint64_t)v6, v20, v19, v21, v22, v23, *((uint64_t *)&v23 + 1), v24, v25, v26, v27, v28,
    v29,
    v30,
    v31);
}

uint64_t ConversationController.isParticipant(_:activeIn:)(void *a1, id a2)
{
  id v3 = objc_msgSend(a2, sel_activeRemoteParticipants);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  lazy protocol witness table accessor for type TUConversationMember and conformance NSObject((uint64_t)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
  uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.contains(where:)(v4, a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t ConversationController.activeParticipant(from:in:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Participant(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = *(void *)(*v9 + 16);
  if (v11)
  {
    uint64_t v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v13 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v12, (uint64_t)v8);
      id v14 = objc_msgSend(a1, sel_identifier);
      uint64_t v15 = &v8[*(int *)(v5 + 28)];
      if (*(void *)v15)
      {
        if ((v15[16] & 1) == 0 && v14 == *((id *)v15 + 1)) {
          break;
        }
      }
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
      v12 += v13;
      if (!--v11) {
        goto LABEL_9;
      }
    }
    _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v8, a2);
    uint64_t v16 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v16 = 1;
  }
  __swift_storeEnumTagSinglePayload(a2, v16, 1, v5);
  return swift_bridgeObjectRelease();
}

void ConversationController.updateConversationUUIDIfNeeded()()
{
  void (*v18)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  long long *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  uint64_t v27;
  void *v28;
  os_log_type_t v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(void);
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void (*v59)(void);
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  void *v62;
  uint64_t v63;
  void (*v64)(void);
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70[4];
  long long v71;
  uint64_t v72;
  long long v73;
  uint64_t v74;
  uint64_t v75;
  void v76[3];
  uint64_t v77;

  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_71_4();
  uint64_t v8 = v6 - v7;
  uint64_t v9 = OUTLINED_FUNCTION_432();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v9, v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v11 = type metadata accessor for UUID();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v8, 1, v11);
  outlined destroy of SystemUpdateNotice?(v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (EnumTagSinglePayload == 1)
  {
    uint64_t v69 = v11;
    uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    OUTLINED_FUNCTION_2();
    outlined init with copy of Conversation(v13, (uint64_t)&v73);
    uint64_t v15 = v74;
    uint64_t v14 = v75;
    OUTLINED_FUNCTION_69_10(&v73, v74);
    uint64_t v16 = &v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    OUTLINED_FUNCTION_2();
    uint64_t v17 = *((void *)v16 + 1);
    uint64_t ObjectType = v14 + 104;
    uint64_t v18 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 104);
    uint64_t v20 = swift_unknownObjectRetain();
    v18(&v71, v20, v17, v15, v14);
    swift_unknownObjectRelease();
    if (v72)
    {
      outlined init with take of Notice(&v71, (uint64_t)v76);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
      uint64_t v21 = *((void *)v16 + 1);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 184);
      swift_unknownObjectRetain();
      LODWORD(v21) = v22(ObjectType, v21);
      swift_unknownObjectRelease();
      if (v21 != 6)
      {
        if (one-time initialization token for conversationController != -1) {
          swift_once();
        }
        uint64_t v37 = type metadata accessor for Logger();
        uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)static Logger.conversationController);
        OUTLINED_FUNCTION_416();
        uint64_t v39 = v1;
        uint64_t v40 = Logger.logObject.getter();
        uint64_t v41 = static os_log_type_t.default.getter();
        if (OUTLINED_FUNCTION_12(v41))
        {
          uint64_t ObjectType = OUTLINED_FUNCTION_9_0();
          v70[0] = OUTLINED_FUNCTION_83();
          *(_DWORD *)uint64_t ObjectType = 136315650;
          LOBYTE(v71) = v39[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
          uint64_t v42 = String.init<A>(reflecting:)();
          *(void *)&uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, v70);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          uint64_t v44 = swift_bridgeObjectRelease();
          *(_WORD *)(ObjectType + 12) = 2080;
          MEMORY[0x1F4188790](v44);
          OUTLINED_FUNCTION_71_4();
          uint64_t v47 = v45 - v46;
          __swift_project_boxed_opaque_existential_1(&v73, v74);
          OUTLINED_FUNCTION_374_0();
          OUTLINED_FUNCTION_15_77();
          v48();
          OUTLINED_FUNCTION_31_13();
          uint64_t v49 = (void *)v69;
          __swift_storeEnumTagSinglePayload(v50, v51, v52, v69);
          specialized >> prefix<A>(_:)(v47);
          outlined destroy of SystemUpdateNotice?(v47, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          uint64_t v53 = OUTLINED_FUNCTION_432();
          *(void *)&uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, v55);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
          *(_WORD *)(ObjectType + 22) = 2080;
          uint64_t v71 = *(_OWORD *)v16;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
          uint64_t v56 = String.init<A>(reflecting:)();
          *(void *)&uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v57, v70);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v40, v38, "%s Update conversationUUID from nil to %s for call: %s", (uint8_t *)ObjectType, 0x20u);
          OUTLINED_FUNCTION_328();
          OUTLINED_FUNCTION_3();
          OUTLINED_FUNCTION_3();

          OUTLINED_FUNCTION_365_0();
        }
        else
        {

          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
          OUTLINED_FUNCTION_365_0();
          uint64_t v49 = (void *)v69;
        }
        MEMORY[0x1F4188790](v58);
        __swift_project_boxed_opaque_existential_1(v76, v77);
        OUTLINED_FUNCTION_15_77();
        v59();
        OUTLINED_FUNCTION_350_0();
        OUTLINED_FUNCTION_416();
        ConversationController.mostRecentActiveConversation.setter((uint64_t)&v73);
        uint64_t v60 = OUTLINED_FUNCTION_151_7();
        id v62 = (void *)v61(v60);
        if (v62) {
          goto LABEL_25;
        }
        goto LABEL_26;
      }
      long long v23 = (long long *)v76;
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v71, &demangling cache variable for type metadata for Conversation?);
      long long v23 = &v73;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    OUTLINED_FUNCTION_365_0();
    ConversationController.joinedOrPreparingConversation()((uint64_t)&v73);
    if (v74)
    {
      outlined init with take of Notice(&v73, (uint64_t)v76);
      __swift_project_boxed_opaque_existential_1(v76, v77);
      uint64_t v24 = OUTLINED_FUNCTION_212_3();
      uint64_t v26 = (void *)v25(v24);

      if (v26)
      {
        if (one-time initialization token for conversationController != -1) {
          swift_once();
        }
        uint64_t v27 = type metadata accessor for Logger();
        __swift_project_value_buffer(v27, (uint64_t)static Logger.conversationController);
        OUTLINED_FUNCTION_416();
        uint64_t v28 = (void *)Logger.logObject.getter();
        uint64_t v29 = static os_log_type_t.default.getter();
        if (OUTLINED_FUNCTION_12_4(v29))
        {
          uint64_t v30 = (_DWORD *)OUTLINED_FUNCTION_37();
          v70[0] = OUTLINED_FUNCTION_9_0();
          *uint64_t v30 = 136315138;
          outlined init with copy of Conversation((uint64_t)&v73, (uint64_t)&v71);
          specialized >> prefix<A>(_:)((uint64_t)&v71);
          uint64_t ObjectType = v31;
          outlined destroy of SystemUpdateNotice?((uint64_t)&v71, &demangling cache variable for type metadata for Conversation?);
          char v32 = OUTLINED_FUNCTION_303_1();
          *(void *)&uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, v34);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_365_0();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
          OUTLINED_FUNCTION_59(&dword_1C2F90000, v35, v36, "Update conversationUUID from nil to joinedOrPreparingConversation: %s");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_3();
          OUTLINED_FUNCTION_3();
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
        }

        uint64_t v49 = (void *)v69;
        MEMORY[0x1F4188790](v63);
        __swift_project_boxed_opaque_existential_1(v76, v77);
        OUTLINED_FUNCTION_15_77();
        v64();
        OUTLINED_FUNCTION_350_0();
        OUTLINED_FUNCTION_416();
        ConversationController.mostRecentActiveConversation.setter((uint64_t)&v73);
        uint64_t v65 = OUTLINED_FUNCTION_151_7();
        id v62 = (void *)v66(v65);
        if (v62)
        {
LABEL_25:
          uint64_t v67 = v62;
          uint64_t v68 = objc_msgSend(v62, sel_handle);

LABEL_27:
          (*(void (**)(id))((*MEMORY[0x1E4FBC8C8] & *v49) + 0x140))(v68);
          outlined init with copy of Conversation((uint64_t)v76, ObjectType);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
          goto LABEL_28;
        }
LABEL_26:
        uint64_t v68 = 0;
        goto LABEL_27;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v73, &demangling cache variable for type metadata for Conversation?);
    }
    *(void *)(ObjectType + 32) = 0;
    *(_OWORD *)uint64_t ObjectType = 0u;
    *(_OWORD *)(ObjectType + 16) = 0u;
  }
  else
  {
    *(void *)(v3 + 32) = 0;
    *(_OWORD *)uint64_t v3 = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
  }
LABEL_28:
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.conversationActiveRemoteParticipantsCount.getter()
{
  ConversationController.lookupActiveConversation()();
  if (v5)
  {
    outlined init with take of Notice(&v4, (uint64_t)v6);
    OUTLINED_FUNCTION_67_12(v6);
    uint64_t v0 = OUTLINED_FUNCTION_92_0();
    v1(v0);
    uint64_t v2 = specialized Set.count.getter();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v4, &demangling cache variable for type metadata for Conversation?);
    return 0;
  }
  return v2;
}

uint64_t ConversationController.conversationHandoffInProgress.getter()
{
  ConversationController.lookupActiveConversation()();
  if (v8)
  {
    outlined init with take of Notice(&v7, (uint64_t)v10);
    uint64_t v0 = v11;
    uint64_t v1 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    Conversation.displayableActiveParticipants.getter(v0, v1);
    uint64_t v2 = specialized Set.count.getter();
    swift_bridgeObjectRelease();
    outlined init with copy of Conversation((uint64_t)v10, (uint64_t)&v7);
    if (v2 == 2)
    {
      uint64_t v3 = v8;
      uint64_t v4 = v9;
      __swift_project_boxed_opaque_existential_1(&v7, v8);
      char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 184))(v3, v4);
    }
    else
    {
      char v5 = 0;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v7, &demangling cache variable for type metadata for Conversation?);
    char v5 = 0;
  }
  return v5 & 1;
}

double ConversationController.joinedOrPreparingConversation()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  swift_beginAccess();
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  char v5 = __swift_project_boxed_opaque_existential_1(v2, v3);
  uint64_t v6 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v53 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v53 - v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v3);
  uint64_t v10 = (uint64_t *)MEMORY[0x1E4FBC860];
  unint64_t v61 = (uint64_t *)MEMORY[0x1E4FBC860];
  uint64_t v11 = *(void *)(v9 + 16);
  if (v11)
  {
    unint64_t v12 = 0;
    uint64_t v13 = v9 + 32;
    while (1)
    {
      if (v12 >= *(void *)(v9 + 16))
      {
        __break(1u);
        goto LABEL_36;
      }
      outlined init with copy of Conversation(v13, (uint64_t)&v58);
      uint64_t v14 = v59;
      uint64_t v15 = v60;
      __swift_project_boxed_opaque_existential_1(&v58, v59);
      uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 56))(v14, v15);
      outlined init with copy of Conversation((uint64_t)&v58, (uint64_t)v55);
      if (v16 == 3) {
        break;
      }
      uint64_t v17 = v56;
      uint64_t v18 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 56))(v17, v18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      if (v19 == 2) {
        goto LABEL_7;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
LABEL_13:
      ++v12;
      v13 += 40;
      if (v11 == v12)
      {
        uint64_t v13 = (uint64_t)v61;
        uint64_t v10 = (uint64_t *)MEMORY[0x1E4FBC860];
        goto LABEL_16;
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
LABEL_7:
    outlined init with take of Notice(&v58, (uint64_t)v55);
    uint64_t v20 = (uint64_t)v61;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v20 = (uint64_t)v61;
    }
    unint64_t v21 = *(void *)(v20 + 16);
    if (v21 >= *(void *)(v20 + 24) >> 1) {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v55, v56);
    uint64_t v10 = &v53;
    MEMORY[0x1F4188790](v22);
    uint64_t v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v25 + 16))(v24);
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, (uint64_t)v24, (uint64_t *)&v61);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    goto LABEL_13;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v26 = v2[3];
  uint64_t v27 = v2[4];
  uint64_t v28 = __swift_project_boxed_opaque_existential_1(v2, v26);
  uint64_t v29 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v29 + 16))(v31);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v26);
  unint64_t v61 = v10;
  uint64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    uint64_t v53 = (uint64_t)&v53;
    unint64_t v34 = 0;
    uint64_t v10 = (uint64_t *)(v32 + 32);
    while (v34 < *(void *)(v32 + 16))
    {
      outlined init with copy of Conversation((uint64_t)v10, (uint64_t)&v58);
      uint64_t v35 = v59;
      uint64_t v36 = v60;
      __swift_project_boxed_opaque_existential_1(&v58, v59);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v36 + 56))(v35, v36) == 1)
      {
        outlined init with take of Notice(&v58, (uint64_t)v55);
        uint64_t v37 = (uint64_t)v61;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v37 = (uint64_t)v61;
        }
        unint64_t v38 = *(void *)(v37 + 16);
        if (v38 >= *(void *)(v37 + 24) >> 1) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        uint64_t v39 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v55, v56);
        MEMORY[0x1F4188790](v39);
        uint64_t v41 = (char *)&v53 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v42 + 16))(v41);
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, (uint64_t)v41, (uint64_t *)&v61);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
      }
      ++v34;
      v10 += 5;
      if (v33 == v34)
      {
        uint64_t v10 = v61;
        goto LABEL_28;
      }
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_28:
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16) == 1)
  {
    swift_release();
    specialized Collection.first.getter(v13, v54);
LABEL_32:
    swift_release();
    return result;
  }
  if (v10[2] == 1)
  {
    swift_release();
    specialized Collection.first.getter((uint64_t)v10, v54);
    goto LABEL_32;
  }
  if (one-time initialization token for conversationKit != -1) {
LABEL_37:
  }
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1C37696D0;
  *(void *)&long long v58 = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [Conversation]);
  uint64_t v45 = String.init<A>(reflecting:)();
  uint64_t v47 = v46;
  uint64_t v48 = MEMORY[0x1E4FBB1A0];
  *(void *)(v44 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v49 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v44 + 64) = v49;
  *(void *)(v44 + 32) = v45;
  *(void *)(v44 + 40) = v47;
  *(void *)&long long v58 = v10;
  uint64_t v50 = String.init<A>(reflecting:)();
  *(void *)(v44 + 96) = v48;
  *(void *)(v44 + 104) = v49;
  *(void *)(v44 + 72) = v50;
  *(void *)(v44 + 80) = v51;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v52 = (_OWORD *)v54;
  *(void *)(v54 + 32) = 0;
  double result = 0.0;
  _OWORD *v52 = 0u;
  v52[1] = 0u;
  return result;
}

double ConversationController.existingVideoProvider(for:ofType:token:)@<D0>(char a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (a1 == 3) {
    Participant.screenProvider.getter((uint64_t)v23);
  }
  else {
    Participant.videoProvider(for:)((uint64_t)v23);
  }
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v23, (uint64_t)&v18, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  if (v19)
  {
    outlined init with take of Notice(&v18, (uint64_t)v20);
    uint64_t v5 = v21;
    uint64_t v6 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    if ((v8 & 1) == 0 && v7 == a2)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      outlined init with copy of Conversation((uint64_t)v20, a3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return result;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v18, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C37696D0;
  uint64_t v11 = specialized >> prefix<A>(_:)((uint64_t)v23);
  uint64_t v13 = v12;
  uint64_t v14 = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v15 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v10 + 64) = v15;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v13;
  v20[0] = a2;
  uint64_t v16 = String.init<A>(reflecting:)();
  *(void *)(v10 + 96) = v14;
  *(void *)(v10 + 104) = v15;
  *(void *)(v10 + 72) = v16;
  *(void *)(v10 + 80) = v17;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  outlined destroy of SystemUpdateNotice?((uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(void *)(a3 + 32) = 0;
  return result;
}

uint64_t ConversationController.existingCaptionsProvider(for:token:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = Participant.captionsProvider.getter();
  if (!Participant.captionsProvider.getter()
    || (uint64_t v5 = v4,
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5),
        char v9 = v8,
        swift_unknownObjectRelease(),
        (v9 & 1) != 0)
    || v7 != a2)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C37696D0;
    if (v3)
    {
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCaptionsProvider);
      uint64_t v11 = String.init<A>(reflecting:)();
      unint64_t v13 = v12;
    }
    else
    {
      unint64_t v13 = 0xE300000000000000;
      uint64_t v11 = 7104878;
    }
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v15 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v10 + 64) = v15;
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v13;
    uint64_t v16 = String.init<A>(reflecting:)();
    *(void *)(v10 + 96) = v14;
    *(void *)(v10 + 104) = v15;
    *(void *)(v10 + 72) = v16;
    *(void *)(v10 + 80) = v17;
    os_log(_:dso:log:type:_:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void closure #1 in ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff;
    if (*(unsigned char *)(v2
                  + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff) == 1)
    {
      if (one-time initialization token for conversationController != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationController);
      id v6 = v3;
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        char v9 = (uint8_t *)swift_slowAlloc();
        uint64_t v10 = swift_slowAlloc();
        uint64_t v13 = v10;
        *(_DWORD *)char v9 = 136315138;
        uint64_t v11 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v13);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v7, v8, "[%s] Reset shouldShowLastFrameDuringUPlusOneHandoff flag on timeout", v9, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v10, -1, -1);
        MEMORY[0x1C87760E0](v9, -1, -1);
      }
      else
      {
      }
      *((unsigned char *)v3 + v4) = 0;
    }
  }
}

id ConversationController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ConversationController.init()()
{
}

void ConversationController.callCenter(_:stateChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v0;
  id v6 = v5;
  swift_getObjectType();
  OUTLINED_FUNCTION_288_0();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_64();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v8();
  char v9 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_29_4();
  v10();
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_27:
    swift_once();
    goto LABEL_13;
  }
  ConversationController.lookupActiveConversation()();
  uint64_t v77 = v6;
  if (v81)
  {
    uint64_t v75 = v1;
    uint64_t v76 = v4;
    outlined init with take of Notice(&v80, (uint64_t)v82);
    OUTLINED_FUNCTION_9_85(v82, v83);
    OUTLINED_FUNCTION_5_3();
    uint64_t v12 = v11;
    MEMORY[0x1F4188790](v13);
    OUTLINED_FUNCTION_479();
    OUTLINED_FUNCTION_15_77();
    v15(v14);
    uint64_t ObjectType = v6[4];
    uint64_t v16 = __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    MEMORY[0x1F4188790](v16);
    OUTLINED_FUNCTION_203_1();
    OUTLINED_FUNCTION_15_77();
    v18(v17);
    char v19 = static UUID.== infix(_:_:)();
    uint64_t v20 = *(void (**)(uint64_t))(v12 + 8);
    OUTLINED_FUNCTION_29_4();
    v20(v21);
    OUTLINED_FUNCTION_29_4();
    v20(v22);
    if (v19)
    {
      uint64_t v4 = v76;
      uint64_t v23 = &v76[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
      OUTLINED_FUNCTION_2();
      uint64_t v24 = *((void *)v23 + 1);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v25 = *(uint64_t (**)(uint64_t))(v24 + 88);
      swift_unknownObjectRetain();
      uint64_t v26 = OUTLINED_FUNCTION_461();
      LOBYTE(v23) = v25(v26);
      swift_unknownObjectRelease();
      if (v23)
      {
        if (one-time initialization token for conversationController != -1) {
          swift_once();
        }
        uint64_t v27 = type metadata accessor for Logger();
        OUTLINED_FUNCTION_98_0(v27, (uint64_t)static Logger.conversationController);
        OUTLINED_FUNCTION_198_4();
        uint64_t v28 = v76;
        uint64_t v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = OUTLINED_FUNCTION_9_0();
          uint64_t v79 = (char *)OUTLINED_FUNCTION_83();
          *(_DWORD *)uint64_t v31 = 136315650;
          uint64_t v32 = OUTLINED_FUNCTION_368_0();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, (uint64_t *)&v79);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v31 + 12) = 2080;
          __swift_project_boxed_opaque_existential_1(&v80, v81);
          OUTLINED_FUNCTION_159_3();
          v35(v34);
          type metadata accessor for TUConversationState(0);
          uint64_t v36 = String.init<A>(reflecting:)();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, (uint64_t *)&v79);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
          *(_WORD *)(v31 + 22) = 2080;
          uint64_t v78 = (uint64_t)v28;
          unint64_t v38 = v28;
          uint64_t v39 = String.init<A>(reflecting:)();
          uint64_t v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, (uint64_t *)&v79);
          OUTLINED_FUNCTION_415(v41);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v29, v30, "[%s] Conversation state changed to %s. Updating from current state: %s", (uint8_t *)v31, 0x20u);
          OUTLINED_FUNCTION_328();
          OUTLINED_FUNCTION_3();
          OUTLINED_FUNCTION_3();
        }
        else
        {

          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
        }
        OUTLINED_FUNCTION_198_4();
        ConversationController.update(with:)((uint64_t)&v80);
        outlined destroy of SystemUpdateNotice?((uint64_t)&v80, &demangling cache variable for type metadata for Conversation?);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
        goto LABEL_23;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      id v6 = v77;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      uint64_t v4 = v76;
      id v6 = v77;
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v80, &demangling cache variable for type metadata for Conversation?);
  }
  if (one-time initialization token for conversationController != -1) {
    goto LABEL_27;
  }
LABEL_13:
  uint64_t v42 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_98_0(v42, (uint64_t)static Logger.conversationController);
  outlined init with copy of Conversation((uint64_t)v6, (uint64_t)v82);
  OUTLINED_FUNCTION_198_4();
  uint64_t v43 = v4;
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = OUTLINED_FUNCTION_9_0();
    uint64_t v76 = (char *)OUTLINED_FUNCTION_83();
    uint64_t v79 = v76;
    *(_DWORD *)uint64_t v46 = 136315650;
    LOBYTE(v78) = v43[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    uint64_t v47 = OUTLINED_FUNCTION_368_0();
    uint64_t v78 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v48, (uint64_t *)&v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2080;
    uint64_t v75 = v46 + 14;
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    id v6 = &v75;
    uint64_t v50 = OUTLINED_FUNCTION_8(v49);
    MEMORY[0x1F4188790](v50);
    OUTLINED_FUNCTION_5_1();
    __swift_project_boxed_opaque_existential_1(v82, v83);
    OUTLINED_FUNCTION_15_77();
    v51();
    type metadata accessor for UUID();
    uint64_t v52 = OUTLINED_FUNCTION_208_1();
    __swift_storeEnumTagSinglePayload(v52, v53, v54, v55);
    uint64_t v56 = specialized >> prefix<A>(_:)(ObjectType);
    unint64_t v58 = v57;
    outlined destroy of SystemUpdateNotice?(ObjectType, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v78 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v58, (uint64_t *)&v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    *(_WORD *)(v46 + 22) = 2080;
    __swift_project_boxed_opaque_existential_1(&v80, v81);
    OUTLINED_FUNCTION_69_3();
    OUTLINED_FUNCTION_159_3();
    uint64_t v78 = v59();
    type metadata accessor for TUConversationState(0);
    uint64_t v60 = OUTLINED_FUNCTION_368_0();
    uint64_t v62 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v60, v61, (uint64_t *)&v79);
    OUTLINED_FUNCTION_415(v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
    _os_log_impl(&dword_1C2F90000, v44, v45, "[%s] Untracked conversation %s state changed to %s", (uint8_t *)v46, 0x20u);
    OUTLINED_FUNCTION_328();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
  }

  uint64_t v63 = OUTLINED_FUNCTION_84_8(v6);
  uint64_t v65 = v64(v63);
  outlined init with copy of Conversation((uint64_t)v6, (uint64_t)v82);
  if (v65 == 2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  }
  else
  {
    uint64_t v66 = OUTLINED_FUNCTION_84_8(v82);
    uint64_t v68 = v67(v66);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    if (v68 != 3) {
      goto LABEL_23;
    }
  }
  uint64_t v69 = *(void **)&v43[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController];
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  uint64_t v70 = OUTLINED_FUNCTION_1_11();
  uint64_t v72 = (void *)v71(v70);
  if (v72)
  {
    uint64_t v73 = v72;
    id v74 = objc_msgSend(v72, sel_handle);
  }
  else
  {
    id v74 = 0;
  }
  (*(void (**)(id))((*MEMORY[0x1E4FBC8C8] & *v69) + 0x140))(v74);
  ConversationController.handleRingingCallChangedToActiveIfNecessary()();
LABEL_23:
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.handleRingingCallChangedToActiveIfNecessary()()
{
  void (*v31)(long long *__return_ptr);
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned char *v40;
  unsigned char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t result;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  long long v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  unsigned char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (**v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83[2];
  long long v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs];
  swift_beginAccess();
  uint64_t v68 = v1;
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v59 = v2;
  if (v6)
  {
    uint64_t v67 = v0;
    uint64_t v7 = &v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    uint64_t v63 = OBJC_IVAR____TtC15ConversationKit22ConversationController_mode;
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = v2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v69 = 0;
    uint64_t v73 = *(void *)(v9 + 72);
    uint64_t v11 = v8;
    uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v78 = v9 + 16;
    uint64_t v75 = v9 + 32;
    uint64_t v76 = v9;
    id v74 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v62 = &v82;
    *(void *)&long long v12 = 136315394;
    unint64_t v61 = v12;
    uint64_t v60 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v71 = v5;
    uint64_t v72 = v7;
    uint64_t v70 = v8;
    while (1)
    {
      v77(v5, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v11);
      uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v11);
      if (EnumTagSinglePayload == 1) {
        return swift_bridgeObjectRelease();
      }
      long long v80 = v6;
      uint64_t v79 = &v59;
      __n128 v14 = MEMORY[0x1F4188790](EnumTagSinglePayload);
      uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t, __n128))(v17 + 32))(v16, v5, v11, v14);
      uint64_t v18 = *((void *)v7 + 3);
      uint64_t v19 = *((void *)v7 + 4);
      uint64_t v20 = __swift_project_boxed_opaque_existential_1(v7, v18);
      uint64_t v21 = *(void *)(v18 - 8);
      __n128 v22 = MEMORY[0x1F4188790](v20);
      uint64_t v24 = v11;
      uint64_t v25 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v21 + 16))(v25, v22);
      uint64_t v26 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v18);
      uint64_t v27 = UUID.uuidString.getter();
      uint64_t v28 = (void *)MEMORY[0x1C87730B0](v27);
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v26, sel_callWithUniqueProxyIdentifier_, v28, v59, v60);

      swift_unknownObjectRelease();
      if (v29)
      {
        outlined init with copy of Conversation((uint64_t)v7, (uint64_t)&v86);
        uint64_t v30 = v88;
        __swift_project_boxed_opaque_existential_1(&v86, v87);
        lazy protocol witness table accessor for type TUCall and conformance TUCall();
        uint64_t v31 = *(void (**)(long long *__return_ptr))(v30 + 104);
        uint64_t v32 = v29;
        v31(&v84);

        if (v85)
        {
          outlined init with take of Notice(&v84, (uint64_t)&v89);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
          unint64_t v33 = v90;
          uint64_t v34 = v91;
          __swift_project_boxed_opaque_existential_1(&v89, v90);
          uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 56))(v33, v34);
          outlined init with copy of Conversation((uint64_t)&v89, (uint64_t)&v86);
          if (v35 == 2)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
            uint64_t v5 = v71;
            uint64_t v7 = v72;
            goto LABEL_11;
          }
          uint64_t v36 = v87;
          unint64_t v37 = v88;
          __swift_project_boxed_opaque_existential_1(&v86, v87);
          unint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 56))(v36, v37);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
          uint64_t v5 = v71;
          uint64_t v7 = v72;
          if (v38 == 3)
          {
LABEL_11:
            if (one-time initialization token for conversationController != -1) {
              swift_once();
            }
            uint64_t v39 = type metadata accessor for Logger();
            __swift_project_value_buffer(v39, (uint64_t)static Logger.conversationController);
            outlined init with copy of Conversation((uint64_t)&v89, (uint64_t)&v84);
            unint64_t v40 = v67;
            uint64_t v41 = v67;
            uint64_t v42 = Logger.logObject.getter();
            uint64_t v43 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v42, v43))
            {
              uint64_t v44 = swift_slowAlloc();
              uint64_t v65 = swift_slowAlloc();
              v83[0] = v65;
              *(_DWORD *)uint64_t v44 = v61;
              uint64_t v66 = v32;
              LOBYTE(v81) = v40[v63];
              os_log_type_t v45 = String.init<A>(reflecting:)();
              uint64_t v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, v83);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              *(_WORD *)(v44 + 12) = 2080;
              uint64_t v64 = v44 + 14;
              outlined init with copy of Conversation((uint64_t)&v84, (uint64_t)&v81);
              uint64_t v47 = specialized >> prefix<A>(_:)((uint64_t)&v81);
              uint64_t v49 = v48;
              outlined destroy of SystemUpdateNotice?((uint64_t)&v81, &demangling cache variable for type metadata for Conversation?);
              uint64_t v50 = v47;
              uint64_t v32 = v66;
              uint64_t v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v49, v83);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
              _os_log_impl(&dword_1C2F90000, v42, v43, "[%s] Ringing call has now been answered, transitioning tracked conversation to use %s", (uint8_t *)v44, 0x16u);
              uint64_t v51 = v65;
              swift_arrayDestroy();
              MEMORY[0x1C87760E0](v51, -1, -1);
              uint64_t v52 = v44;
              uint64_t v7 = v72;
              MEMORY[0x1C87760E0](v52, -1, -1);
            }
            else
            {

              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
            }

            MEMORY[0x1F4188790](v53);
            *(&v59 - 2) = (uint64_t)v16;
            uint64_t v54 = v68;
            swift_beginAccess();
            uint64_t v55 = v69;
            double result = specialized MutableCollection._halfStablePartition(isSuffixElement:)();
            if (*(void *)(*(void *)v54 + 16) < result)
            {
              __break(1u);
              return result;
            }
            uint64_t v69 = v55;
            specialized Array.replaceSubrange<A>(_:with:)();
            swift_endAccess();
            unint64_t v57 = v32;
            specialized ConversationController.migrate(to:with:isUpgrade:)(&v89, v57, 0, v41);
          }
          else
          {
          }
          uint64_t v11 = v70;
          (*v74)(v16, v70);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
          goto LABEL_20;
        }

        uint64_t v11 = v70;
        (*v74)(v16, v70);
        outlined destroy of SystemUpdateNotice?((uint64_t)&v84, &demangling cache variable for type metadata for Conversation?);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
        uint64_t v5 = v71;
        uint64_t v7 = v72;
      }
      else
      {
        (*v74)(v16, v24);
        uint64_t v11 = v24;
      }
LABEL_20:
      v10 += v73;
      uint64_t v6 = v80 - 1;
      if (v80 == 1) {
        goto LABEL_23;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_23:
  unint64_t v58 = type metadata accessor for UUID();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v58);
  return swift_bridgeObjectRelease();
}

void ConversationController.callCenter(_:localVideoToggledFor:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  swift_getObjectType();
  OUTLINED_FUNCTION_288_0();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v8();
  char v9 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_29_4();
  v10();
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_10;
  }
  ConversationController.lookupActiveConversation()();
  if (v38[3])
  {
    OUTLINED_FUNCTION_152_3();
    OUTLINED_FUNCTION_9_85(v39, v39[3]);
    OUTLINED_FUNCTION_362_0();
    OUTLINED_FUNCTION_5_3();
    uint64_t v12 = v11;
    MEMORY[0x1F4188790](v13);
    OUTLINED_FUNCTION_479();
    OUTLINED_FUNCTION_15_77();
    v14();
    uint64_t v15 = __swift_project_boxed_opaque_existential_1(v4, v4[3]);
    MEMORY[0x1F4188790](v15);
    OUTLINED_FUNCTION_15_77();
    v16();
    char v17 = static UUID.== infix(_:_:)();
    uint64_t v18 = *(void (**)(void))(v12 + 8);
    OUTLINED_FUNCTION_29_4();
    v18();
    OUTLINED_FUNCTION_29_4();
    v18();
    OUTLINED_FUNCTION_52_0();
    if ((v17 & 1) == 0)
    {
LABEL_17:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
      goto LABEL_18;
    }
    uint64_t v19 = &v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
    OUTLINED_FUNCTION_2();
    if ((v19[16] & 0x80000000) == 0) {
      goto LABEL_5;
    }
    if (ConversationController.isCarPlayConnected.getter()) {
      goto LABEL_15;
    }
    uint64_t v27 = &v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    OUTLINED_FUNCTION_2();
    uint64_t v28 = *((void *)v27 + 1);
    swift_getObjectType();
    id v29 = *(uint64_t (**)(uint64_t))(v28 + 304);
    swift_unknownObjectRetain();
    uint64_t v30 = OUTLINED_FUNCTION_461();
    LOBYTE(v27) = v29(v30);
    swift_unknownObjectRelease();
    if ((v27 & 1) == 0)
    {
LABEL_15:
      ConversationController.stopLocalVideo()();
    }
    else if ((v19[16] & 0x80000000) == 0)
    {
LABEL_5:
      if ((ConversationController.isCarPlayConnected.getter() & 1) == 0)
      {
        uint64_t v20 = &v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
        OUTLINED_FUNCTION_2();
        uint64_t v21 = *((void *)v20 + 1);
        swift_getObjectType();
        __n128 v22 = *(uint64_t (**)(uint64_t))(v21 + 304);
        swift_unknownObjectRetain();
        uint64_t v23 = OUTLINED_FUNCTION_102();
        LOBYTE(v20) = v22(v23);
        swift_unknownObjectRelease();
        if ((v20 & 1) != 0 && v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] == 1) {
          ConversationController.startLocalVideo(allowVideoUpgrade:)(0);
        }
      }
    }
    uint64_t v31 = &v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    OUTLINED_FUNCTION_2();
    uint64_t v32 = *((void *)v31 + 1);
    outlined init with copy of Conversation(v6, (uint64_t)v38);
    unint64_t v33 = (uint64_t *)&v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
    OUTLINED_FUNCTION_2();
    uint64_t v34 = *v33;
    uint64_t v35 = &v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
    OUTLINED_FUNCTION_2();
    LOBYTE(v35) = *v35 == 3;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v37 = swift_unknownObjectRetain();
    specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v37, v38, v34, (char)v35, ObjectType, v32);
    ConversationController.broadcastingState.setter();
    goto LABEL_17;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v38, &demangling cache variable for type metadata for Conversation?);
  if (one-time initialization token for conversationKit != -1) {
    goto LABEL_20;
  }
LABEL_10:
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v24 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v24 + 16) = xmmword_1C3769620;
  v39[0] = v2;
  uint64_t v25 = v2;
  String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_193_3();
  *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v26 = lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_192_2(v26);
  OUTLINED_FUNCTION_93_4();
  swift_bridgeObjectRelease();
LABEL_18:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:remoteMembersChangedFor:)()
{
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  char v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void);
  void *v15;
  void (*v16)(void);
  char v17;
  void (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  void v26[5];
  void *v27;
  long long v28;
  uint64_t v29;
  void v30[5];

  OUTLINED_FUNCTION_31();
  uint64_t v6 = OUTLINED_FUNCTION_197_2(v4, v5);
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_36_4();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  void *v3 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v8();
  char v9 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_4_1();
  v10();
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  ConversationController.lookupActiveConversation()();
  if (!v29)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v28, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_9:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v23 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v23 + 16) = xmmword_1C3769620;
      v30[0] = v0;
      uint64_t v24 = v0;
      OUTLINED_FUNCTION_367_0();
      OUTLINED_FUNCTION_28_33();
      *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
      uint64_t v25 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_347(v25);
      OUTLINED_FUNCTION_227_1();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
LABEL_12:
    swift_once();
    goto LABEL_9;
  }
  v26[1] = v2;
  v26[2] = v1;
  v26[3] = v6;
  outlined init with take of Notice(&v28, (uint64_t)v30);
  OUTLINED_FUNCTION_9_85(v30, v30[3]);
  v26[4] = v26;
  OUTLINED_FUNCTION_5_3();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_15_77();
  v14();
  uint64_t v15 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_15_77();
  v16();
  char v17 = OUTLINED_FUNCTION_418();
  uint64_t v18 = *(void (**)(void))(v12 + 8);
  OUTLINED_FUNCTION_4_1();
  v18();
  OUTLINED_FUNCTION_4_1();
  v18();
  OUTLINED_FUNCTION_177_1();
  if (v17)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v19 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v19 + 16) = xmmword_1C3769620;
    *(void *)&uint64_t v28 = v0;
    v0;
    uint64_t v20 = String.init<A>(reflecting:)();
    __n128 v22 = v21;
    *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v19 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v19 + 32) = v20;
    *(void *)(v19 + 40) = v22;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_38_20();
    swift_bridgeObjectRelease();
    outlined init with copy of Conversation((uint64_t)v27, (uint64_t)&v28);
    ConversationController.update(with:)((uint64_t)&v28);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v28, &demangling cache variable for type metadata for Conversation?);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
LABEL_10:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:activeRemoteParticipantsChangedFor:)()
{
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  char v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void);
  void *v15;
  void (*v16)(void);
  char v17;
  void (*v18)(void);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  void v24[5];
  void *v25;
  long long v26;
  uint64_t v27;
  void v28[5];

  OUTLINED_FUNCTION_31();
  uint64_t v6 = OUTLINED_FUNCTION_197_2(v4, v5);
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_36_4();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  void *v3 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v8();
  char v9 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_4_1();
  v10();
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  ConversationController.lookupActiveConversation()();
  if (!v27)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v26, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_9:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v21 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v21 + 16) = xmmword_1C3769620;
      v28[0] = v0;
      __n128 v22 = v0;
      OUTLINED_FUNCTION_367_0();
      OUTLINED_FUNCTION_28_33();
      *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
      uint64_t v23 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_347(v23);
      OUTLINED_FUNCTION_227_1();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
LABEL_12:
    swift_once();
    goto LABEL_9;
  }
  v24[1] = v2;
  v24[2] = v1;
  uint64_t v24[3] = v6;
  outlined init with take of Notice(&v26, (uint64_t)v28);
  OUTLINED_FUNCTION_9_85(v28, v28[3]);
  v24[4] = v24;
  OUTLINED_FUNCTION_5_3();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_15_77();
  v14();
  uint64_t v15 = __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_15_77();
  v16();
  char v17 = OUTLINED_FUNCTION_418();
  uint64_t v18 = *(void (**)(void))(v12 + 8);
  OUTLINED_FUNCTION_4_1();
  v18();
  OUTLINED_FUNCTION_4_1();
  v18();
  OUTLINED_FUNCTION_177_1();
  if (v17)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v19 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v19 + 16) = xmmword_1C3769620;
    *(void *)&unint64_t v26 = v0;
    v0;
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_28_33();
    *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
    uint64_t v20 = lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_347(v20);
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.checkScreenTimeRestricts(_:)(v25);
    OUTLINED_FUNCTION_198_4();
    ConversationController.update(with:)((uint64_t)&v26);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v26, &demangling cache variable for type metadata for Conversation?);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
LABEL_10:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:pendingMembersChangedFor:)()
{
}

void ConversationController.callCenter(_:otherInvitedHandlesChangedFor:)()
{
}

void closure #1 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v17 - v11;
  uint64_t v13 = swift_projectBox();
  ConversationController.remoteOneToOneParticipant.getter();
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v12, v13, &demangling cache variable for type metadata for Participant?);
  swift_beginAccess();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v13, (uint64_t)v10, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
LABEL_11:
    uint64_t v15 = 0;
    goto LABEL_12;
  }
  _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v10, (uint64_t)v6);
  Participant.videoInfo.getter();
  outlined init with take of AspectRatio?((uint64_t)v22, (uint64_t)v23, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v23[0])
  {
    uint64_t v21 = 0;
    long long v19 = 0u;
    long long v20 = 0u;
    goto LABEL_9;
  }
  specialized Dictionary.subscript.getter();
  outlined release of LinearGradient((uint64_t)v22);
  if (!*((void *)&v20 + 1))
  {
LABEL_9:
    outlined destroy of SystemUpdateNotice?((uint64_t)&v19, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  type metadata accessor for RemoteParticipantVideoProvider();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v6, (void (*)(void))type metadata accessor for Participant);
    goto LABEL_11;
  }
  __n128 v14 = v18;
  uint64_t v15 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v18) + 0x130))();

  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v6, (void (*)(void))type metadata accessor for Participant);
  if (!v15) {
    goto LABEL_11;
  }
LABEL_12:
  swift_beginAccess();
  uint64_t v16 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = v15;
}

void specialized closure #2 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(unsigned char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  id v142 = a6;
  uint64_t v143 = a5;
  uint64_t v129 = a4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v135 = (uint64_t)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for Participant(0);
  uint64_t v12 = MEMORY[0x1F4188790](v134);
  uint64_t v132 = (uint64_t)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v136 = (uint64_t)&v115 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v137 = (uint64_t)&v115 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v141 = (uint64_t)&v115 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v115 - v20;
  uint64_t v133 = swift_projectBox();
  uint64_t v22 = OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter;
  int v23 = a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter];
  uint64_t v24 = a2[3];
  uint64_t v25 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v24);
  char v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 200))(v24, v25);
  uint64_t v139 = v22;
  a1[v22] = v26 & 1;
  ConversationController.isOneToOneModeEnabledByCallCenter.didset();
  outlined init with copy of Conversation((uint64_t)a2, (uint64_t)v153);
  if (v23 != 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v153);
    outlined init with copy of Conversation((uint64_t)a2, (uint64_t)v150);
    goto LABEL_11;
  }
  uint64_t v27 = v154;
  uint64_t v28 = v155;
  __swift_project_boxed_opaque_existential_1(v153, v154);
  char v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 200))(v27, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v153);
  outlined init with copy of Conversation((uint64_t)a2, (uint64_t)v150);
  if (v29)
  {
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v150);
    outlined init with copy of Conversation((uint64_t)a2, (uint64_t)v147);
    goto LABEL_12;
  }
  uint64_t v30 = v151;
  uint64_t v31 = v152;
  __swift_project_boxed_opaque_existential_1(v150, v151);
  Conversation.displayableActiveParticipants.getter(v30, v31);
  uint64_t v33 = specialized Set.count.getter(v32);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v150);
  outlined init with copy of Conversation((uint64_t)a2, (uint64_t)v147);
  if (v33 != 2)
  {
LABEL_12:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v147);
    goto LABEL_13;
  }
  uint64_t v34 = v148;
  uint64_t v35 = v149;
  __swift_project_boxed_opaque_existential_1(v147, v148);
  char v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 184))(v34, v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v147);
  if (v36)
  {
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    __swift_project_value_buffer(v37, (uint64_t)static Logger.conversationController);
    unint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      unint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v40 = 0;
      _os_log_impl(&dword_1C2F90000, v38, v39, "Handoff is ongoing - we shouldn't switch to square tiles until a timeout", v40, 2u);
      MEMORY[0x1C87760E0](v40, -1, -1);
    }
  }
LABEL_13:
  uint64_t v41 = (uint64_t)&a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  swift_beginAccess();
  uint64_t v140 = v41;
  _s15ConversationKit11ParticipantVWOcTm_19(v41, (uint64_t)v21);
  Participant.videoInfo.getter();
  uint64_t v42 = v156[0];
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
  outlined init with take of AspectRatio?((uint64_t)v156, (uint64_t)&v163, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v163)
  {
    uint64_t v131 = a7;
    v162[2] = v165;
    unsigned __int8 v172 = v171;
    uint64_t v128 = v163;
    v162[0] = v163;
    LODWORD(v124) = v164;
    v162[1] = v164;
    int v122 = BYTE2(v164);
    LODWORD(v123) = BYTE1(v164);
    int v127 = BYTE3(v164);
    int v119 = BYTE5(v164);
    int v120 = BYTE4(v164);
    int v117 = HIBYTE(v164);
    int v118 = BYTE6(v164);
    int v121 = BYTE1(v165);
    uint64_t v126 = v166;
    v162[3] = v166;
    int v125 = v167;
    LOBYTE(v162[4]) = v167;
    *(void *)((char *)&v162[8] + 1) = v170;
    *(_OWORD *)((char *)&v162[6] + 1) = v169;
    *(_OWORD *)((char *)&v162[4] + 1) = v168;
    BYTE1(v162[9]) = v171;
    swift_bridgeObjectRetain();
    ConversationController.videoProviderForResizingLocal.getter(v161);
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    __swift_project_value_buffer(v43, (uint64_t)static Logger.conversationController);
    outlined init with copy of Conversation((uint64_t)v161, (uint64_t)v144);
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.default.getter();
    BOOL v46 = os_log_type_enabled(v44, v45);
    double v138 = a1;
    uint64_t v130 = v42;
    if (v46)
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v160[0] = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      outlined init with copy of Conversation((uint64_t)v144, (uint64_t)v174);
      uint64_t v49 = specialized >> prefix<A>(_:)((uint64_t)v174);
      unint64_t v51 = v50;
      outlined destroy of SystemUpdateNotice?((uint64_t)v174, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      v174[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v51, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      a1 = v138;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
      _os_log_impl(&dword_1C2F90000, v44, v45, "Resizing local preview with video provider: %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v48, -1, -1);
      MEMORY[0x1C87760E0](v47, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
    }

    outlined init with copy of Conversation((uint64_t)v161, (uint64_t)v144);
    char v52 = ConversationController.isOneToOneModeEnabled.getter();
    uint64_t v53 = &a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera];
    swift_beginAccess();
    char v54 = *v53;
    uint64_t v55 = (uint64_t *)&a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
    swift_beginAccess();
    uint64_t v56 = *v55;
    uint64_t v57 = v141;
    _s15ConversationKit11ParticipantVWOcTm_19(v140, v141);
    Participant.aspectRatio.getter();
    _s15ConversationKit11ParticipantVWOhTm_13(v57, (void (*)(void))type metadata accessor for Participant);
    AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)(v144, v52 & 1, 1, v54, v56, (uint64_t)&v157, (uint64_t)v158, 1.0, 1.0);
    uint64_t v58 = v158[0];
    uint64_t v59 = v158[1];
    uint64_t v60 = v158[2];
    uint64_t v61 = v158[3];
    char v62 = v159;
    outlined init with take of AspectRatio((uint64_t)v158, (uint64_t)&v162[5]);
    if (ConversationController.isOneToOneModeEnabled.getter())
    {
      int v116 = 0;
      LOBYTE(v162[2]) = 0;
    }
    else
    {
      int v116 = LOBYTE(v162[2]);
    }
    swift_bridgeObjectRetain();
    uint64_t v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v63, v64))
    {
      char v65 = v124 & 1;
      char v66 = v123 & 1;
      uint64_t v123 = v59;
      int v115 = v122 & 1;
      v119 &= 1u;
      v120 &= 1u;
      v117 &= 1u;
      v118 &= 1u;
      v121 &= 1u;
      int v122 = v172;
      char v67 = v62;
      uint64_t v68 = v61;
      uint64_t v69 = (uint8_t *)swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      uint64_t v71 = v60;
      uint64_t v72 = v70;
      v174[0] = v70;
      *(_DWORD *)uint64_t v69 = 136315138;
      uint64_t v124 = v69 + 4;
      v144[0] = v128;
      LOBYTE(v144[1]) = v65;
      BYTE1(v144[1]) = v66;
      BYTE2(v144[1]) = v115;
      BYTE3(v144[1]) = v127;
      BYTE4(v144[1]) = v120;
      BYTE5(v144[1]) = v119;
      BYTE6(v144[1]) = v118;
      HIBYTE(v144[1]) = v117;
      LOBYTE(v144[2]) = v116;
      BYTE1(v144[2]) = v121;
      v144[3] = v126;
      LOBYTE(v144[4]) = v125;
      v144[5] = v58;
      v144[6] = v123;
      v144[7] = v71;
      v144[8] = v68;
      LOBYTE(v144[9]) = v67;
      BYTE1(v144[9]) = v122;
      swift_bridgeObjectRetain();
      uint64_t v73 = String.init<A>(reflecting:)();
      v144[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v74, v174);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined release of LinearGradient((uint64_t)v156);
      outlined release of LinearGradient((uint64_t)v156);
      _os_log_impl(&dword_1C2F90000, v63, v64, "Due to one-to-one change, updated local participant videoInfo to %s", v69, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v72, -1, -1);
      MEMORY[0x1C87760E0](v69, -1, -1);
    }
    else
    {
      outlined release of LinearGradient((uint64_t)v156);
      outlined release of LinearGradient((uint64_t)v156);
    }

    uint64_t v75 = v140;
    uint64_t v76 = v137;
    _s15ConversationKit11ParticipantVWOcTm_19(v140, v137);
    ConversationController.conversationIsAVLess.getter();
    LODWORD(v130) = v77;
    swift_beginAccess();
    if (BYTE1(v162[1])) {
      uint64_t v78 = 256;
    }
    else {
      uint64_t v78 = 0;
    }
    uint64_t v79 = 0x10000;
    if (!BYTE2(v162[1])) {
      uint64_t v79 = 0;
    }
    unint64_t v80 = v78 | LOBYTE(v162[1]) | v79 | ((unint64_t)BYTE3(v162[1]) << 24);
    uint64_t v81 = 0x100000000;
    if (!BYTE4(v162[1])) {
      uint64_t v81 = 0;
    }
    uint64_t v82 = 0x10000000000;
    if (!BYTE5(v162[1])) {
      uint64_t v82 = 0;
    }
    uint64_t v83 = v81 | v82;
    uint64_t v84 = 0x1000000000000;
    if (!BYTE6(v162[1])) {
      uint64_t v84 = 0;
    }
    uint64_t v85 = v83 | v84;
    uint64_t v86 = 0x100000000000000;
    if (!HIBYTE(v162[1])) {
      uint64_t v86 = 0;
    }
    uint64_t v87 = v80 | v85 | v86;
    if (BYTE1(v162[2])) {
      uint64_t v88 = 256;
    }
    else {
      uint64_t v88 = 0;
    }
    uint64_t v89 = v88 | LOBYTE(v162[2]);
    if (BYTE1(v162[9])) {
      __int16 v90 = 256;
    }
    else {
      __int16 v90 = 0;
    }
    v174[0] = v162[0];
    v174[1] = v87;
    v174[2] = v89;
    v174[3] = v162[3];
    v174[4] = LOBYTE(v162[4]);
    long long v175 = *(_OWORD *)&v162[5];
    long long v176 = *(_OWORD *)&v162[7];
    __int16 v177 = v90 | LOBYTE(v162[9]);
    memset(v144, 0, 24);
    v144[3] = 1;
    bzero(&v144[4], 0xB1uLL);
    uint64_t v91 = v136;
    _s15ConversationKit11ParticipantVWOcTm_19(v75, v136);
    uint64_t v92 = Participant.captionInfo.getter();
    _s15ConversationKit11ParticipantVWOhTm_13(v91, (void (*)(void))type metadata accessor for Participant);
    Participant.copresenceInfo.getter();
    uint64_t v93 = v141;
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?(v160);
    outlined consume of Participant.CaptionInfo?(v92);
    swift_bridgeObjectRelease();
    outlined destroy of SystemUpdateNotice?((uint64_t)v144, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    a1 = v138;
    _s15ConversationKit11ParticipantVWOhTm_13(v76, (void (*)(void))type metadata accessor for Participant);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v161);
    swift_beginAccess();
    outlined assign with take of Participant(v93, v75);
    swift_endAccess();
    a7 = v131;
  }
  closure #1 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(v143, (uint64_t)v142, a7);
  if (a1[v139] == 1)
  {
    uint64_t v94 = v133;
    swift_beginAccess();
    uint64_t v95 = v94;
    uint64_t v96 = v135;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v95, v135, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v96, 1, v134) == 1)
    {
      outlined destroy of SystemUpdateNotice?(v96, &demangling cache variable for type metadata for Participant?);
      goto LABEL_65;
    }
    _s15ConversationKit11ParticipantVWObTm_6(v96, v132);
    Participant.videoInfo.getter();
    outlined init with take of AspectRatio?((uint64_t)v161, (uint64_t)v162, &demangling cache variable for type metadata for Participant.VideoInfo?);
    if (!v162[0]) {
      goto LABEL_64;
    }
    memcpy(v144, v162, 0x4AuLL);
    outlined release of LinearGradient((uint64_t)v161);
    outlined init with take of AspectRatio((uint64_t)&v144[5], (uint64_t)v173);
    outlined init with take of AspectRatio((uint64_t)v173, (uint64_t)v182);
    if ((v183 & 1) == 0 && (v182[0] != 1.0 || v182[1] != 1.0)) {
      goto LABEL_64;
    }
    outlined init with take of AspectRatio((uint64_t)v173, (uint64_t)v178);
    if ((v181 & 1) == 0 && (v179 != 1.0 || v180 != 1.0)) {
      goto LABEL_64;
    }
    uint64_t v99 = (id *)(v129 + 16);
    swift_beginAccess();
    if (!*v99) {
      goto LABEL_64;
    }
    id v100 = *v99;
    id v101 = objc_msgSend(v100, sel_remoteVideoAttributes);
    if (v101)
    {
      uint64_t v102 = v101;
      ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)();

LABEL_64:
      _s15ConversationKit11ParticipantVWOhTm_13(v132, (void (*)(void))type metadata accessor for Participant);
      goto LABEL_65;
    }
    _s15ConversationKit11ParticipantVWOhTm_13(v132, (void (*)(void))type metadata accessor for Participant);
  }
LABEL_65:
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v103 = type metadata accessor for Logger();
  __swift_project_value_buffer(v103, (uint64_t)static Logger.conversationController);
  unsigned int v104 = a1;
  uint64_t v105 = Logger.logObject.getter();
  os_log_type_t v106 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v105, v106))
  {
    uint64_t v107 = swift_slowAlloc();
    uint64_t v108 = swift_slowAlloc();
    v146[0] = v108;
    *(_DWORD *)uint64_t v107 = 136315394;
    LOBYTE(v145) = v104[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    uint64_t v109 = String.init<A>(reflecting:)();
    uint64_t v145 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v109, v110, v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v107 + 12) = 1024;
    char v111 = ConversationController.isOneToOneModeEnabled.getter();

    LODWORD(v145) = v111 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl(&dword_1C2F90000, v105, v106, "[%s] Updated one-to-one mode to %{BOOL}d", (uint8_t *)v107, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v108, -1, -1);
    MEMORY[0x1C87760E0](v107, -1, -1);
  }
  else
  {
  }
  uint64_t v112 = &v104[OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange];
  swift_beginAccess();
  double v113 = *(void (**)(void, void))v112;
  if (*(void *)v112)
  {
    swift_retain();
    char v114 = ConversationController.isOneToOneModeEnabled.getter();
    v113(v114 & 1, 0);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v113);
  }
  swift_release();
  swift_release();
}

uint64_t closure #2 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(unsigned char *a1, void *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v133 = a6;
  uint64_t v143 = a4;
  double v144 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v139 = &v117[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v138 = type metadata accessor for Participant(0);
  uint64_t v10 = MEMORY[0x1F4188790](v138);
  uint64_t v136 = &v117[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = &v117[-v13];
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v141 = &v117[-v16];
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v145 = &v117[-v18];
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = &v117[-v19];
  uint64_t v137 = swift_projectBox();
  uint64_t v21 = OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter;
  int v22 = a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter];
  uint64_t v23 = a2[3];
  uint64_t v24 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v23);
  char v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 200))(v23, v24);
  uint64_t v142 = v21;
  a1[v21] = v25 & 1;
  double v146 = a1;
  ConversationController.isOneToOneModeEnabledByCallCenter.didset();
  outlined init with copy of Conversation((uint64_t)a2, (uint64_t)v156);
  if (v22 != 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
    outlined init with copy of Conversation((uint64_t)a2, (uint64_t)v153);
    goto LABEL_11;
  }
  uint64_t v26 = v157;
  uint64_t v27 = v158;
  __swift_project_boxed_opaque_existential_1(v156, v157);
  char v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 200))(v26, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
  outlined init with copy of Conversation((uint64_t)a2, (uint64_t)v153);
  if (v28)
  {
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v153);
    outlined init with copy of Conversation((uint64_t)a2, (uint64_t)v150);
    goto LABEL_12;
  }
  uint64_t v29 = v154;
  uint64_t v30 = v155;
  __swift_project_boxed_opaque_existential_1(v153, v154);
  Conversation.displayableActiveParticipants.getter(v29, v30);
  uint64_t v32 = specialized Set.count.getter(v31);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v153);
  outlined init with copy of Conversation((uint64_t)a2, (uint64_t)v150);
  if (v32 != 2)
  {
LABEL_12:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v150);
    goto LABEL_13;
  }
  uint64_t v33 = v151;
  uint64_t v34 = v152;
  __swift_project_boxed_opaque_existential_1(v150, v151);
  char v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 184))(v33, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v150);
  if (v35)
  {
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    __swift_project_value_buffer(v36, (uint64_t)static Logger.conversationController);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      os_log_type_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v39 = 0;
      _os_log_impl(&dword_1C2F90000, v37, v38, "Handoff is ongoing - we shouldn't switch to square tiles until a timeout", v39, 2u);
      MEMORY[0x1C87760E0](v39, -1, -1);
    }
  }
LABEL_13:
  unint64_t v40 = &v146[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v40, (uint64_t)v20);
  Participant.videoInfo.getter();
  uint64_t v41 = v159[0];
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v20, (void (*)(void))type metadata accessor for Participant);
  uint64_t v42 = outlined init with take of AspectRatio?((uint64_t)v159, (uint64_t)&v166, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v166)
  {
    uint64_t v135 = v14;
    v165[2] = v168;
    unsigned __int8 v175 = v174;
    uint64_t v132 = v166;
    v165[0] = v166;
    LODWORD(v128) = v167;
    v165[1] = v167;
    int v126 = BYTE2(v167);
    LODWORD(v127) = BYTE1(v167);
    int v131 = BYTE3(v167);
    int v123 = BYTE5(v167);
    int v124 = BYTE4(v167);
    int v121 = HIBYTE(v167);
    int v122 = BYTE6(v167);
    int v125 = BYTE1(v168);
    uint64_t v130 = v169;
    v165[3] = v169;
    int v129 = v170;
    LOBYTE(v165[4]) = v170;
    *(void *)((char *)&v165[8] + 1) = v173;
    *(_OWORD *)((char *)&v165[6] + 1) = v172;
    *(_OWORD *)((char *)&v165[4] + 1) = v171;
    BYTE1(v165[9]) = v174;
    swift_bridgeObjectRetain();
    ConversationController.videoProviderForResizingLocal.getter(v164);
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    uint64_t v44 = __swift_project_value_buffer(v43, (uint64_t)static Logger.conversationController);
    outlined init with copy of Conversation((uint64_t)v164, (uint64_t)v147);
    uint64_t v134 = v44;
    os_log_type_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    BOOL v47 = os_log_type_enabled(v45, v46);
    uint64_t v140 = v40;
    if (v47)
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      v163[0] = v49;
      *(_DWORD *)uint64_t v48 = 136315138;
      outlined init with copy of Conversation((uint64_t)v147, (uint64_t)v177);
      uint64_t v50 = specialized >> prefix<A>(_:)((uint64_t)v177);
      unint64_t v52 = v51;
      outlined destroy of SystemUpdateNotice?((uint64_t)v177, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      v177[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v52, v163);
      unint64_t v40 = v140;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v147);
      _os_log_impl(&dword_1C2F90000, v45, v46, "Resizing local preview with video provider: %s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v49, -1, -1);
      MEMORY[0x1C87760E0](v48, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v147);
    }

    outlined init with copy of Conversation((uint64_t)v164, (uint64_t)v147);
    uint64_t v53 = v146;
    char v54 = ConversationController.isOneToOneModeEnabled.getter();
    uint64_t v55 = &v53[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera];
    swift_beginAccess();
    char v56 = *v55;
    uint64_t v57 = (uint64_t *)&v53[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
    swift_beginAccess();
    uint64_t v58 = *v57;
    uint64_t v59 = v145;
    _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v40, (uint64_t)v145);
    Participant.aspectRatio.getter();
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v59, (void (*)(void))type metadata accessor for Participant);
    AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)(v147, v54 & 1, 1, v56, v58, (uint64_t)&v160, (uint64_t)v161, 1.0, 1.0);
    uint64_t v60 = v161[0];
    uint64_t v61 = v161[1];
    uint64_t v62 = v161[2];
    uint64_t v63 = v161[3];
    char v64 = v162;
    outlined init with take of AspectRatio((uint64_t)v161, (uint64_t)&v165[5]);
    if (ConversationController.isOneToOneModeEnabled.getter())
    {
      int v120 = 0;
      LOBYTE(v165[2]) = 0;
    }
    else
    {
      int v120 = LOBYTE(v165[2]);
    }
    swift_bridgeObjectRetain();
    char v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v119 = v62;
      char v67 = v128 & 1;
      uint64_t v134 = v41;
      char v68 = v127 & 1;
      uint64_t v127 = v61;
      int v118 = v126 & 1;
      v123 &= 1u;
      v124 &= 1u;
      v121 &= 1u;
      v122 &= 1u;
      v125 &= 1u;
      int v126 = v175;
      uint64_t v69 = v63;
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      char v72 = v64;
      uint64_t v73 = v71;
      v177[0] = v71;
      *(_DWORD *)uint64_t v70 = 136315138;
      uint64_t v128 = v70 + 4;
      v147[0] = v132;
      LOBYTE(v147[1]) = v67;
      BYTE1(v147[1]) = v68;
      BYTE2(v147[1]) = v118;
      BYTE3(v147[1]) = v131;
      BYTE4(v147[1]) = v124;
      BYTE5(v147[1]) = v123;
      BYTE6(v147[1]) = v122;
      HIBYTE(v147[1]) = v121;
      LOBYTE(v147[2]) = v120;
      BYTE1(v147[2]) = v125;
      void v147[3] = v130;
      LOBYTE(v147[4]) = v129;
      v147[5] = v60;
      v147[6] = v127;
      v147[7] = v119;
      v147[8] = v69;
      LOBYTE(v147[9]) = v72;
      BYTE1(v147[9]) = v126;
      swift_bridgeObjectRetain();
      uint64_t v74 = String.init<A>(reflecting:)();
      v147[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v74, v75, v177);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined release of LinearGradient((uint64_t)v159);
      outlined release of LinearGradient((uint64_t)v159);
      _os_log_impl(&dword_1C2F90000, v65, v66, "Due to one-to-one change, updated local participant videoInfo to %s", v70, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v73, -1, -1);
      MEMORY[0x1C87760E0](v70, -1, -1);
    }
    else
    {
      outlined release of LinearGradient((uint64_t)v159);
      outlined release of LinearGradient((uint64_t)v159);
    }

    uint64_t v77 = (uint64_t)v140;
    uint64_t v76 = v141;
    _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v140, (uint64_t)v141);
    ConversationController.conversationIsAVLess.getter();
    swift_beginAccess();
    if (BYTE1(v165[1])) {
      uint64_t v78 = 256;
    }
    else {
      uint64_t v78 = 0;
    }
    uint64_t v79 = 0x10000;
    if (!BYTE2(v165[1])) {
      uint64_t v79 = 0;
    }
    unint64_t v80 = v78 | LOBYTE(v165[1]) | v79 | ((unint64_t)BYTE3(v165[1]) << 24);
    uint64_t v81 = 0x100000000;
    if (!BYTE4(v165[1])) {
      uint64_t v81 = 0;
    }
    uint64_t v82 = 0x10000000000;
    if (!BYTE5(v165[1])) {
      uint64_t v82 = 0;
    }
    uint64_t v83 = v81 | v82;
    uint64_t v84 = 0x1000000000000;
    if (!BYTE6(v165[1])) {
      uint64_t v84 = 0;
    }
    uint64_t v85 = v83 | v84;
    uint64_t v86 = 0x100000000000000;
    if (!HIBYTE(v165[1])) {
      uint64_t v86 = 0;
    }
    uint64_t v87 = v80 | v85 | v86;
    if (BYTE1(v165[2])) {
      uint64_t v88 = 256;
    }
    else {
      uint64_t v88 = 0;
    }
    uint64_t v89 = v88 | LOBYTE(v165[2]);
    if (BYTE1(v165[9])) {
      __int16 v90 = 256;
    }
    else {
      __int16 v90 = 0;
    }
    v177[0] = v165[0];
    v177[1] = v87;
    v177[2] = v89;
    v177[3] = v165[3];
    v177[4] = LOBYTE(v165[4]);
    long long v178 = *(_OWORD *)&v165[5];
    long long v179 = *(_OWORD *)&v165[7];
    __int16 v180 = v90 | LOBYTE(v165[9]);
    memset(v147, 0, 24);
    void v147[3] = 1;
    bzero(&v147[4], 0xB1uLL);
    uint64_t v91 = (uint64_t)v135;
    _s15ConversationKit11ParticipantVWOcTm_19(v77, (uint64_t)v135);
    uint64_t v92 = Participant.captionInfo.getter();
    _s15ConversationKit11ParticipantVWOhTm_13(v91, (void (*)(void))type metadata accessor for Participant);
    Participant.copresenceInfo.getter();
    uint64_t v93 = v145;
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?(v163);
    outlined consume of Participant.CaptionInfo?(v92);
    swift_bridgeObjectRelease();
    outlined destroy of SystemUpdateNotice?((uint64_t)v147, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v76, (void (*)(void))type metadata accessor for Participant);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v164);
    swift_beginAccess();
    outlined assign with take of Participant((uint64_t)v93, v77);
    uint64_t v42 = swift_endAccess();
  }
  v144(v42);
  if (v146[v142] == 1)
  {
    uint64_t v94 = v137;
    swift_beginAccess();
    uint64_t v95 = v94;
    uint64_t v96 = v139;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v95, (uint64_t)v139, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v96, 1, v138) == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v96, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      unint64_t v97 = v136;
      _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v96, (uint64_t)v136);
      Participant.videoInfo.getter();
      outlined init with take of AspectRatio?((uint64_t)v164, (uint64_t)v165, &demangling cache variable for type metadata for Participant.VideoInfo?);
      if (!v165[0]) {
        goto LABEL_64;
      }
      memcpy(v147, v165, 0x4AuLL);
      outlined release of LinearGradient((uint64_t)v164);
      outlined init with take of AspectRatio((uint64_t)&v147[5], (uint64_t)v176);
      outlined init with take of AspectRatio((uint64_t)v176, (uint64_t)v185);
      if ((v186 & 1) == 0 && (v185[0] != 1.0 || v185[1] != 1.0)) {
        goto LABEL_64;
      }
      if ((outlined init with take of AspectRatio((uint64_t)v176, (uint64_t)v181), (v184)
         || (v182 == 1.0 ? (BOOL v99 = v183 == 1.0) : (BOOL v99 = 0), v99))
        && (id v100 = (id *)(v133 + 16), swift_beginAccess(), *v100))
      {
        id v101 = *v100;
        id v102 = objc_msgSend(v101, sel_remoteVideoAttributes);
        if (v102)
        {
          uint64_t v103 = v102;
          ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)();

          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v97, (void (*)(void))type metadata accessor for Participant);
        }
        else
        {
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v97, (void (*)(void))type metadata accessor for Participant);
        }
      }
      else
      {
LABEL_64:
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v97, (void (*)(void))type metadata accessor for Participant);
      }
    }
  }
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v104 = type metadata accessor for Logger();
  __swift_project_value_buffer(v104, (uint64_t)static Logger.conversationController);
  uint64_t v105 = v146;
  os_log_type_t v106 = Logger.logObject.getter();
  os_log_type_t v107 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v106, v107))
  {
    uint64_t v108 = swift_slowAlloc();
    uint64_t v109 = swift_slowAlloc();
    v149[0] = v109;
    *(_DWORD *)uint64_t v108 = 136315394;
    LOBYTE(v148) = v105[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    uint64_t v110 = String.init<A>(reflecting:)();
    uint64_t v148 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v110, v111, v149);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v108 + 12) = 1024;
    char v112 = ConversationController.isOneToOneModeEnabled.getter();

    LODWORD(v148) = v112 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl(&dword_1C2F90000, v106, v107, "[%s] Updated one-to-one mode to %{BOOL}d", (uint8_t *)v108, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v109, -1, -1);
    MEMORY[0x1C87760E0](v108, -1, -1);
  }
  else
  {
  }
  double v113 = &v105[OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange];
  uint64_t result = swift_beginAccess();
  int v115 = *(void (**)(void, void))v113;
  if (*(void *)v113)
  {
    swift_retain();
    char v116 = ConversationController.isOneToOneModeEnabled.getter();
    v115(v116 & 1, 0);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v115);
  }
  return result;
}

void ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)()
{
  OUTLINED_FUNCTION_31();
  char v4 = v3;
  OUTLINED_FUNCTION_3_74();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_3_0();
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = v0;
  if (v4)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    id v6 = v0;
    id v7 = v1;
    id v8 = v2;
    void v16[3] = static OS_dispatch_queue.main.getter();
    uint64_t v9 = OUTLINED_FUNCTION_26();
    *(void *)(v9 + 16) = partial apply for closure #1 in ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:);
    *(void *)(v9 + 24) = v5;
    v17[4] = partial apply for thunk for @escaping @callee_guaranteed () -> ();
    v17[5] = v9;
    v17[0] = MEMORY[0x1E4F143A8];
    OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
    v17[2] = thunk for @escaping @callee_guaranteed () -> ();
    v17[3] = &block_descriptor_165;
    uint64_t v10 = _Block_copy(v17);
    swift_retain();
    swift_release();
    v16[1] = type metadata accessor for DispatchQoS();
    void v16[2] = v16;
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_483();
    MEMORY[0x1F4188790](v11);
    OUTLINED_FUNCTION_29_36();
    type metadata accessor for DispatchWorkItemFlags();
    v16[0] = v16;
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_483();
    MEMORY[0x1F4188790](v12);
    OUTLINED_FUNCTION_61();
    v17[0] = MEMORY[0x1E4FBC860];
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    OUTLINED_FUNCTION_45_19();
    OUTLINED_FUNCTION_358();
    _Block_release(v10);
    swift_release();

    OUTLINED_FUNCTION_3_8();
    v13();
    OUTLINED_FUNCTION_29_4();
    v14();
    OUTLINED_FUNCTION_173_4();
    OUTLINED_FUNCTION_28();
  }
  else
  {
    closure #1 in ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)(v2, (int *)v1, (char *)v0);
    OUTLINED_FUNCTION_28();
    swift_release();
  }
}

void closure #3 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  id v6 = (void *)MEMORY[0x1C8776240](v5);
  if (v6)
  {
    id v7 = v6;
    if (*((unsigned char *)v6
         + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo) == 1)
    {
      if (one-time initialization token for conversationController != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      __swift_project_value_buffer(v8, (uint64_t)static Logger.conversationController);
      id v9 = v7;
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      uint64_t v36 = a3;
      uint64_t v37 = a2;
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136315138;
        v43[0] = v13;
        uint64_t v14 = String.init<A>(reflecting:)();
        *(void *)&long long v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v10, v11, "[%s] Timed out waiting for first non-square remote video frame", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v13, -1, -1);
        MEMORY[0x1C87760E0](v12, -1, -1);
      }
      else
      {
      }
      ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.setter(0);
      ConversationController.lookupActiveConversation()();
      if (v41)
      {
        outlined init with take of Notice(&v40, (uint64_t)v43);
        uint64_t v16 = v44;
        uint64_t v17 = v45;
        __swift_project_boxed_opaque_existential_1(v43, v44);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 200))(v16, v17))
        {
          outlined init with copy of Conversation((uint64_t)v43, (uint64_t)&v40);
          id v9 = v9;
          uint64_t v18 = Logger.logObject.getter();
          os_log_type_t v19 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v18, v19))
          {
            uint64_t v20 = swift_slowAlloc();
            uint64_t v35 = swift_slowAlloc();
            uint64_t v39 = v35;
            *(_DWORD *)uint64_t v20 = 136315394;
            uint64_t v21 = String.init<A>(reflecting:)();
            uint64_t v38 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v39);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v20 + 12) = 2080;
            uint64_t v34 = v20 + 14;
            uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
            MEMORY[0x1F4188790](v23 - 8);
            char v25 = (char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v27 = v41;
            uint64_t v26 = v42;
            __swift_project_boxed_opaque_existential_1(&v40, v41);
            (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26);
            uint64_t v28 = type metadata accessor for UUID();
            __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v28);
            uint64_t v29 = specialized >> prefix<A>(_:)((uint64_t)v25);
            unint64_t v31 = v30;
            outlined destroy of SystemUpdateNotice?((uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            uint64_t v38 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v31, &v39);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
            _os_log_impl(&dword_1C2F90000, v18, v19, "[%s] Triggering delayed one-to-one update for conversation: %s", (uint8_t *)v20, 0x16u);
            uint64_t v32 = v35;
            swift_arrayDestroy();
            MEMORY[0x1C87760E0](v32, -1, -1);
            MEMORY[0x1C87760E0](v20, -1, -1);
          }
          else
          {

            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
          }

          v37(v33);
        }

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
      }
      else
      {

        outlined destroy of SystemUpdateNotice?((uint64_t)&v40, &demangling cache variable for type metadata for Conversation?);
      }
    }
    else
    {
    }
  }
}

void ConversationController.callCenter(_:avModeChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  OUTLINED_FUNCTION_214_1();
  OUTLINED_FUNCTION_288_0();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_64();
  char v5 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v6();
  _dispatchPreconditionTest(_:)();
  uint64_t v7 = OUTLINED_FUNCTION_21_2();
  v8(v7);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
LABEL_4:
    OUTLINED_FUNCTION_50();
    if ((*(uint64_t (**)(void))(v9 + 856))())
    {
      OUTLINED_FUNCTION_9_85(v35, v35[3]);
      OUTLINED_FUNCTION_362_0();
      OUTLINED_FUNCTION_5_3();
      uint64_t v11 = v10;
      MEMORY[0x1F4188790](v12);
      OUTLINED_FUNCTION_15_77();
      v14(v13);
      unint64_t v15 = v1[4];
      uint64_t v16 = __swift_project_boxed_opaque_existential_1(v1, v1[3]);
      MEMORY[0x1F4188790](v16);
      OUTLINED_FUNCTION_15_77();
      v18(v17);
      uint64_t v19 = OUTLINED_FUNCTION_167_1();
      uint64_t v20 = *(void (**)(uint64_t))(v11 + 8);
      OUTLINED_FUNCTION_27_49();
      v20(v21);
      OUTLINED_FUNCTION_27_49();
      v20(v22);
      if (v19)
      {
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v23 = (__n128 *)OUTLINED_FUNCTION_25_15();
        uint64_t v24 = OUTLINED_FUNCTION_158_5(v23, (__n128)xmmword_1C3769620);
        v34[0] = v25(v24);
        type metadata accessor for TUConversationAVMode(0);
        OUTLINED_FUNCTION_253_0();
        OUTLINED_FUNCTION_188_3();
        v23[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
        v23[4].n128_u64[0] = lazy protocol witness table accessor for type String and conformance String();
        v23[2].n128_u64[0] = v19;
        v23[2].n128_u64[1] = v15;
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_120_6();
        swift_bridgeObjectRelease();
        uint64_t v26 = (void (**)(uint64_t))(v3
                                            + OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
        OUTLINED_FUNCTION_2();
        uint64_t v27 = *v26;
        if (*v26)
        {
          uint64_t v28 = v1[3];
          uint64_t v29 = v1[4];
          OUTLINED_FUNCTION_69_10(v1, v28);
          unint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 264);
          swift_retain();
          uint64_t v31 = v30(v28, v29);
          v27(v31);
          outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v27);
        }
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_201_2();
  if (v34[3])
  {
    OUTLINED_FUNCTION_200_2();
    if (one-time initialization token for shared == -1) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v34, &demangling cache variable for type metadata for Conversation?);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v32 = (__n128 *)OUTLINED_FUNCTION_25_15();
  OUTLINED_FUNCTION_178_3(v32, (__n128)xmmword_1C3769620);
  OUTLINED_FUNCTION_150_7();
  OUTLINED_FUNCTION_193_3();
  v32[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
  unint64_t v33 = lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_192_2(v33);
  OUTLINED_FUNCTION_93_4();
  swift_bridgeObjectRelease();
LABEL_14:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:resolvedAudioVideoModeChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  OUTLINED_FUNCTION_214_1();
  OUTLINED_FUNCTION_288_0();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_64();
  char v5 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v6();
  _dispatchPreconditionTest(_:)();
  uint64_t v7 = OUTLINED_FUNCTION_21_2();
  v8(v7);
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_201_2();
  if (!v30[3])
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v30, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_10:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v27 = (__n128 *)OUTLINED_FUNCTION_25_15();
      OUTLINED_FUNCTION_178_3(v27, (__n128)xmmword_1C3769620);
      OUTLINED_FUNCTION_150_7();
      OUTLINED_FUNCTION_193_3();
      v27[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
      unint64_t v28 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_192_2(v28);
      OUTLINED_FUNCTION_93_4();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
LABEL_13:
    swift_once();
    goto LABEL_10;
  }
  v29[0] = v3;
  OUTLINED_FUNCTION_20_59();
  v29[1] = v29;
  OUTLINED_FUNCTION_5_3();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_15_77();
  v12();
  unint64_t v13 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  OUTLINED_FUNCTION_248_2();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_15_77();
  v15();
  uint64_t v16 = OUTLINED_FUNCTION_167_1();
  uint64_t v17 = *(void (**)(void))(v10 + 8);
  OUTLINED_FUNCTION_27_49();
  v17();
  OUTLINED_FUNCTION_27_49();
  v17();
  OUTLINED_FUNCTION_10_80();
  if (v16)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v18 = (__n128 *)OUTLINED_FUNCTION_25_15();
    uint64_t v19 = OUTLINED_FUNCTION_158_5(v18, (__n128)xmmword_1C3769620);
    v30[0] = v20(v19);
    type metadata accessor for TUConversationAVMode(0);
    OUTLINED_FUNCTION_253_0();
    OUTLINED_FUNCTION_188_3();
    v18[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
    v18[4].n128_u64[0] = lazy protocol witness table accessor for type String and conformance String();
    v18[2].n128_u64[0] = v16;
    v18[2].n128_u64[1] = v13;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_120_6();
    swift_bridgeObjectRelease();
    uint64_t v21 = (void (**)(uint64_t))(v29[0]
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
    OUTLINED_FUNCTION_2();
    uint64_t v22 = *v21;
    if (*v21)
    {
      uint64_t v23 = v1[3];
      uint64_t v24 = v1[4];
      OUTLINED_FUNCTION_69_10(v1, v23);
      char v25 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 280);
      swift_retain();
      uint64_t v26 = v25(v23, v24);
      v22(v26);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v22);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
LABEL_11:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:removedActiveConversation:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v7();
  char v8 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_4_1();
  v9();
  if (v8)
  {
    if (one-time initialization token for conversationController == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)static Logger.conversationController);
  outlined init with copy of Conversation((uint64_t)v4, (uint64_t)v132);
  id v12 = v2;
  unint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  uint64_t v15 = v14;
  uint64_t v127 = (uint64_t *)ObjectType;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t ObjectType = OUTLINED_FUNCTION_15_1();
    int v126 = (unsigned char *)OUTLINED_FUNCTION_14_3();
    v131[0] = (uint64_t)v126;
    *(_DWORD *)uint64_t ObjectType = 136315394;
    uint64_t v16 = OUTLINED_FUNCTION_368_0();
    uint64_t v128 = v11;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, v131);
    int v129 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(ObjectType + 12) = 2080;
    uint64_t v125 = ObjectType + 14;
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v19 = OUTLINED_FUNCTION_8(v18);
    MEMORY[0x1F4188790](v19);
    OUTLINED_FUNCTION_17_0();
    unint64_t v20 = v133;
    uint64_t v21 = __swift_project_boxed_opaque_existential_1(v132, v133);
    OUTLINED_FUNCTION_15_77();
    v22();
    uint64_t v23 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload((uint64_t)&unk_1EBBAE000, 0, 1, v23);
    specialized >> prefix<A>(_:)((uint64_t)&unk_1EBBAE000);
    OUTLINED_FUNCTION_47_6();
    outlined destroy of SystemUpdateNotice?((uint64_t)&unk_1EBBAE000, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v21, v20, v131);
    uint64_t v4 = v129;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v11 = v128;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v132);
    OUTLINED_FUNCTION_205(&dword_1C2F90000, v13, v24, "%s Received removedActiveConversation: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v132);
  }

  ConversationController.lookupActiveConversation()();
  if (v131[3])
  {
    int v126 = v12;
    OUTLINED_FUNCTION_152_3();
    OUTLINED_FUNCTION_9_85(v132, v133);
    OUTLINED_FUNCTION_423();
    uint64_t v128 = v25;
    OUTLINED_FUNCTION_5_3();
    uint64_t v27 = v26;
    uint64_t v29 = *(void *)(v28 + 64);
    MEMORY[0x1F4188790](v30);
    OUTLINED_FUNCTION_392();
    OUTLINED_FUNCTION_15_77();
    v31();
    uint64_t v32 = __swift_project_boxed_opaque_existential_1(v4, v4[3]);
    MEMORY[0x1F4188790](v32);
    OUTLINED_FUNCTION_204_0();
    OUTLINED_FUNCTION_15_77();
    v33();
    char v34 = static UUID.== infix(_:_:)();
    uint64_t v35 = *(void (**)(void))(v27 + 8);
    OUTLINED_FUNCTION_191_3();
    OUTLINED_FUNCTION_10_6();
    v35();
    OUTLINED_FUNCTION_10_6();
    v35();
    if (v34)
    {
      uint64_t v36 = (void *)v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      uint64_t v37 = OUTLINED_FUNCTION_233_1();
      if (v38(v37) == 2)
      {
        uint64_t v36 = v134;
        __swift_project_boxed_opaque_existential_1(v132, v133);
        uint64_t v39 = OUTLINED_FUNCTION_233_1();
        if (v40(v39) == 3)
        {
          uint64_t v36 = (void *)v4[4];
          uint64_t v41 = __swift_project_boxed_opaque_existential_1(v4, v4[3]);
          OUTLINED_FUNCTION_159_3();
          if (v42() == 1)
          {
            uint64_t v36 = (void *)v4[4];
            __swift_project_boxed_opaque_existential_1(v4, v4[3]);
            uint64_t v43 = OUTLINED_FUNCTION_234_1();
            uint64_t v45 = v44(v43);
            if (v45)
            {
              os_log_type_t v46 = (void *)v45;
              uint64_t v36 = v134;
              __swift_project_boxed_opaque_existential_1(v132, v133);
              uint64_t v47 = OUTLINED_FUNCTION_234_1();
              uint64_t v49 = v48(v47);
              if (v49)
              {
                uint64_t v36 = (void *)v49;
                if (objc_msgSend(v46, sel_isEquivalentToConversationLink_, v49))
                {
                  if (one-time initialization token for conversationKit != -1) {
                    swift_once();
                  }
                  uint64_t v128 = static OS_os_log.conversationKit;
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                  uint64_t v50 = OUTLINED_FUNCTION_11_7();
                  *(_OWORD *)(v50 + 16) = xmmword_1C37696D0;
                  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
                  uint64_t v52 = OUTLINED_FUNCTION_8(v51);
                  MEMORY[0x1F4188790](v52);
                  OUTLINED_FUNCTION_61();
                  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
                  OUTLINED_FUNCTION_203_1();
                  OUTLINED_FUNCTION_15_77();
                  v53();
                  __swift_storeEnumTagSinglePayload(v15, 0, 1, v15);
                  specialized >> prefix<A>(_:)(v15);
                  OUTLINED_FUNCTION_47_6();
                  outlined destroy of SystemUpdateNotice?(v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
                  uint64_t v54 = MEMORY[0x1E4FBB1A0];
                  *(void *)(v50 + 56) = MEMORY[0x1E4FBB1A0];
                  unint64_t v55 = lazy protocol witness table accessor for type String and conformance String();
                  *(void *)(v50 + 64) = v55;
                  *(void *)(v50 + 32) = v41;
                  *(void *)(v50 + 40) = v121;
                  v131[0] = (uint64_t)v46;
                  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
                  id v56 = v46;
                  uint64_t v57 = String.init<A>(reflecting:)();
                  *(void *)(v50 + 96) = v54;
                  *(void *)(v50 + 104) = v55;
                  *(void *)(v50 + 72) = v57;
                  *(void *)(v50 + 80) = v58;
                  static os_log_type_t.default.getter();
                  os_log(_:dso:log:type:_:)();

                  swift_bridgeObjectRelease();
                  goto LABEL_39;
                }

                os_log_type_t v46 = v36;
              }
            }
          }
        }
      }
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v120 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v120 + 16) = xmmword_1C3769620;
      v131[0] = (uint64_t)v126;
      v126;
      String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_289();
      *(void *)(v120 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v120 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v120 + 32) = v36;
      *(void *)(v120 + 40) = (v29 + 15) & 0xFFFFFFFFFFFFFFF0;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_317_0();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      outlined init with copy of Conversation((uint64_t)v4, (uint64_t)v131);
      ConversationController.update(with:)((uint64_t)v131);
      outlined destroy of SystemUpdateNotice?((uint64_t)v131, &demangling cache variable for type metadata for Conversation?);
    }
LABEL_39:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v132);
    goto LABEL_40;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v131, &demangling cache variable for type metadata for Conversation?);
  uint64_t v59 = v12;
  uint64_t v60 = Logger.logObject.getter();
  os_log_type_t v61 = static os_log_type_t.error.getter();
  uint64_t v128 = v11;
  int v129 = v4;
  if (OUTLINED_FUNCTION_12_4(v61))
  {
    uint64_t v62 = OUTLINED_FUNCTION_15_1();
    uint64_t v15 = OUTLINED_FUNCTION_14_3();
    v132[0] = v15;
    *(_DWORD *)uint64_t v62 = 136315394;
    LOBYTE(v131[0]) = v59[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    uint64_t v63 = String.init<A>(reflecting:)();
    v131[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v64, v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v62 + 12) = 2080;
    v131[0] = (uint64_t)v59;
    char v65 = v59;
    uint64_t v66 = String.init<A>(reflecting:)();
    v131[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v67, v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v60, (os_log_type_t)ObjectType, "%s Unable to lookup active conversation in CallCenterProviderDelegate removedActiveConversation: callback - %s", (uint8_t *)v62, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v68 = (uint64_t)&v59[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID];
  OUTLINED_FUNCTION_2();
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v127 = (uint64_t *)v121;
  uint64_t v70 = OUTLINED_FUNCTION_8(v69);
  uint64_t v72 = *(void *)(v71 + 64);
  MEMORY[0x1F4188790](v70);
  unint64_t v73 = (v72 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v74 = &v121[-v73];
  uint64_t v125 = v68;
  uint64_t v75 = outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v68, (uint64_t)&v121[-v73], (uint64_t *)&demangling cache variable for type metadata for UUID?);
  int v126 = v121;
  MEMORY[0x1F4188790](v75);
  uint64_t v76 = &v121[-v73];
  __swift_project_boxed_opaque_existential_1(v129, v129[3]);
  OUTLINED_FUNCTION_15_77();
  v77();
  uint64_t v78 = type metadata accessor for UUID();
  uint64_t v79 = OUTLINED_FUNCTION_466();
  __swift_storeEnumTagSinglePayload(v79, v80, v81, v82);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  uint64_t v84 = OUTLINED_FUNCTION_8(v83);
  MEMORY[0x1F4188790](v84);
  OUTLINED_FUNCTION_61();
  uint64_t v86 = v15 + *(int *)(v85 + 56);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)&v121[-v73], v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)&v121[-v73], v86, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v87 = OUTLINED_FUNCTION_33_0(v15, 1, v78);
  if (!v94)
  {
    int v129 = v121;
    MEMORY[0x1F4188790](v87);
    uint64_t v91 = OUTLINED_FUNCTION_269_1();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v91, v92, v93);
    OUTLINED_FUNCTION_33_0(v86, 1, v78);
    if (!v94)
    {
      int v124 = v121;
      OUTLINED_FUNCTION_5_3();
      uint64_t v97 = v96;
      MEMORY[0x1F4188790](v98);
      int v123 = v121;
      OUTLINED_FUNCTION_393();
      OUTLINED_FUNCTION_4_18();
      OUTLINED_FUNCTION_63_0();
      v99();
      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
      int v122 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v100 = *(void (**)(void))(v97 + 8);
      OUTLINED_FUNCTION_30_15();
      OUTLINED_FUNCTION_50_1();
      v100();
      uint64_t v89 = &demangling cache variable for type metadata for UUID?;
      outlined destroy of SystemUpdateNotice?((uint64_t)v76, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v101 = OUTLINED_FUNCTION_209_3();
      outlined destroy of SystemUpdateNotice?(v101, v102);
      OUTLINED_FUNCTION_50_1();
      v100();
      OUTLINED_FUNCTION_256_0();
      outlined destroy of SystemUpdateNotice?(v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_221_2();
      if ((v122 & 1) == 0) {
        goto LABEL_40;
      }
      goto LABEL_30;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)&v121[-v73], (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v121[-v73], (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_26_2();
    v95();
    OUTLINED_FUNCTION_256_0();
LABEL_28:
    outlined destroy of SystemUpdateNotice?(v15, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    OUTLINED_FUNCTION_221_2();
    goto LABEL_40;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v76, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v88 = OUTLINED_FUNCTION_209_3();
  uint64_t v89 = v121;
  outlined destroy of SystemUpdateNotice?(v88, v90);
  OUTLINED_FUNCTION_33_0(v86, 1, v78);
  if (!v94) {
    goto LABEL_28;
  }
  outlined destroy of SystemUpdateNotice?(v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_221_2();
LABEL_30:
  uint64_t v103 = v59;
  uint64_t v104 = Logger.logObject.getter();
  os_log_type_t v105 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_2_12(v105))
  {
    uint64_t v106 = OUTLINED_FUNCTION_15_1();
    LODWORD(v129) = v89;
    uint64_t v107 = v106;
    uint64_t v128 = OUTLINED_FUNCTION_14_3();
    v131[0] = v128;
    *(_DWORD *)uint64_t v107 = 136315394;
    LOBYTE(v130) = v103[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    uint64_t v108 = String.init<A>(reflecting:)();
    uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v108, v109, v131);
    uint64_t v127 = v131;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v110 = swift_bridgeObjectRelease();
    *(_WORD *)(v107 + 12) = 2080;
    int v126 = (unsigned char *)(v107 + 14);
    MEMORY[0x1F4188790](v110);
    OUTLINED_FUNCTION_71_4();
    uint64_t v113 = v111 - v112;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v125, v111 - v112, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    specialized >> prefix<A>(_:)(v113);
    OUTLINED_FUNCTION_281();
    uint64_t v114 = OUTLINED_FUNCTION_303_1();
    outlined destroy of SystemUpdateNotice?(v114, v115);
    uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)&v130, (unint64_t)v74, v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v104, (os_log_type_t)v129, "%s Removed conversation has the same UUID as the conversation we are tracking %s, clearing our UUID", (uint8_t *)v107, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  MEMORY[0x1F4188790](v116);
  OUTLINED_FUNCTION_71_4();
  uint64_t v119 = v117 - v118;
  __swift_storeEnumTagSinglePayload(v117 - v118, 1, 1, v78);
  ConversationController.conversationUUID.setter(v119);
LABEL_40:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:addedActiveConversation:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_4_15();
  swift_getObjectType();
  OUTLINED_FUNCTION_363_0();
  if (v19[3])
  {
    OUTLINED_FUNCTION_200_2();
    OUTLINED_FUNCTION_9_85(v20, v20[3]);
    v18[1] = v18;
    OUTLINED_FUNCTION_5_3();
    uint64_t v5 = v4;
    MEMORY[0x1F4188790](v6);
    OUTLINED_FUNCTION_15_77();
    v7();
    char v8 = __swift_project_boxed_opaque_existential_1(v0, v0[3]);
    MEMORY[0x1F4188790](v8);
    OUTLINED_FUNCTION_15_77();
    v9();
    static UUID.== infix(_:_:)();
    uint64_t v10 = *(void (**)(void))(v5 + 8);
    OUTLINED_FUNCTION_34_9();
    OUTLINED_FUNCTION_10_6();
    v10();
    OUTLINED_FUNCTION_209_3();
    OUTLINED_FUNCTION_10_6();
    v10();
    OUTLINED_FUNCTION_10_80();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v19, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v11 = (__n128 *)OUTLINED_FUNCTION_25_15();
    OUTLINED_FUNCTION_404(v11, (__n128)xmmword_1C3769620);
    OUTLINED_FUNCTION_150_7();
    OUTLINED_FUNCTION_238_0();
    v11[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
    v11[4].n128_u64[0] = lazy protocol witness table accessor for type String and conformance String();
    v11[2].n128_u64[0] = v1;
    v11[2].n128_u64[1] = v3;
    OUTLINED_FUNCTION_401();
    swift_bridgeObjectRelease();
    uint64_t v12 = v2[4];
    OUTLINED_FUNCTION_69_10(v2, v2[3]);
    unint64_t v13 = *(uint64_t (**)(uint64_t))(v12 + 24);
    uint64_t v14 = OUTLINED_FUNCTION_469();
    id v15 = objc_msgSend((id)v13(v14), sel_currentVideoCallCount);
    swift_unknownObjectRelease();
    if (v15 == (id)1)
    {
      uint64_t v16 = OUTLINED_FUNCTION_469();
      id v17 = objc_msgSend((id)v13(v16), sel_currentVideoCall);
      swift_unknownObjectRelease();
      if (v17)
      {
        if (objc_msgSend(v17, sel_isActive))
        {
          static os_log_type_t.default.getter();
          OUTLINED_FUNCTION_118_5();
          ConversationController.processCurrentCall(_:)(v17);
        }
      }
    }
  }
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.processCurrentCall(_:)(void *a1)
{
  void (*v88)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  void *v90;
  uint64_t *v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char v99;
  id v100;
  NSObject *v101;
  NSObject *v102;
  NSObject *v103;
  os_log_type_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t);
  id v119;
  id v120;
  char *v121;
  void (*v122)(char *, uint64_t);
  uint64_t *v123;
  uint64_t v124;
  NSObject *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(void, void);
  uint64_t v130;
  NSObject *v131;
  id v132;
  NSObject *v133;
  id v134;
  NSObject *v135;
  os_log_type_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  __n128 v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  NSObject *v153;
  id v154;
  NSObject *v155;
  NSObject *v156;
  NSObject *v157;
  os_log_type_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  void (**v167)(BOOL);
  void (*v168)(BOOL);
  BOOL v169;
  uint64_t v170;
  id v171;
  int64_t v172;
  uint64_t v173;
  uint64_t v174;
  void v175[2];
  void *v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  void (*v180)(void, void, __n128);
  uint64_t v181;
  os_log_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  NSObject *v186;
  uint64_t v187;
  char *v188;
  void *v189;
  id v190;
  uint64_t v191;
  long long v192;
  uint64_t v193;
  long long v194;
  uint64_t v195;
  uint64_t v196;
  long long v197;
  uint64_t v198;
  uint64_t v199;
  void (*v200)(void, void, __n128);
  uint64_t v201;
  uint64_t v202;

  uint64_t v5 = v1;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (void *)((char *)v175 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v185 = 0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBE8], v7);
  char v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    uint64_t v2 = (uint64_t)v5 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    swift_beginAccess();
    outlined init with copy of Conversation(v2, (uint64_t)&v200);
    uint64_t v12 = v202;
    unint64_t v13 = __swift_project_boxed_opaque_existential_1(&v200, v201);
    __n128 v14 = MEMORY[0x1F4188790](v13);
    v175[-2] = v5;
    id v15 = (void *)(*(uint64_t (**)(BOOL (*)(uint64_t, uint64_t), __n128))(v12 + 208))(partial apply for closure #1 in ConversationController.processCurrentCall(_:), v14);
    if (v15[2])
    {
      unint64_t v3 = (void *)v15[4];
      uint64_t v4 = v15[5];
      swift_unknownObjectRetain();
    }
    else
    {
      unint64_t v3 = 0;
      uint64_t v4 = 0;
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v200);
    if (one-time initialization token for conversationController == -1) {
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_6:
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)static Logger.conversationController);
  swift_unknownObjectRetain_n();
  id v18 = v5;
  id v19 = a1;
  unint64_t v20 = v18;
  id v21 = v19;
  char v184 = v17;
  uint64_t v22 = Logger.logObject.getter();
  int v23 = static os_log_type_t.default.getter();
  BOOL v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
  uint64_t v25 = &selRef_trailingBarAlpha;
  double v190 = v21;
  uint64_t v189 = v3;
  if (v24)
  {
    LODWORD(v181) = v23;
    double v182 = v22;
    double v183 = v2;
    uint64_t v187 = v4;
    uint64_t v26 = swift_slowAlloc();
    __int16 v180 = (void (*)(void, void, __n128))swift_slowAlloc();
    char v200 = v180;
    *(_DWORD *)uint64_t v26 = 136315906;
    LOBYTE(v197) = *((unsigned char *)&v20->isa + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode);
    uint64_t v27 = String.init<A>(reflecting:)();
    *(void *)&uint64_t v197 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, (uint64_t *)&v200);
    uint64_t v188 = (char *)&v197 + 8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    long long v179 = v26 + 14;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    long long v176 = v175;
    uint64_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    *(void *)&double v31 = MEMORY[0x1F4188790](v29 - 8).n128_u64[0];
    __int16 v177 = v30;
    unint64_t v32 = (v30 + 15) & 0xFFFFFFFFFFFFFFF0;
    long long v178 = v32;
    unint64_t v33 = v21;
    id v34 = objc_msgSend(v21, sel_uniqueProxyIdentifierUUID, v31);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v35 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload((uint64_t)v175 - v32, 0, 1, v35);
    uint64_t v36 = specialized >> prefix<A>(_:)((uint64_t)v175 - v32);
    unint64_t v38 = v37;
    outlined destroy of SystemUpdateNotice?((uint64_t)v175 - v32, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(void *)&uint64_t v197 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v38, (uint64_t *)&v200);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v39 = swift_bridgeObjectRelease();
    v175[1] = v175;
    *(_WORD *)(v26 + 22) = 2080;
    long long v176 = (void *)(v26 + 24);
    MEMORY[0x1F4188790](v39);
    long long v40 = (char *)v175 - v32;
    uint64_t v41 = (char *)v20 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    uint64_t v42 = *((void *)v41 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v42 + 200);
    swift_unknownObjectRetain();
    uint64_t v45 = ObjectType;
    unint64_t v3 = v189;
    v44(v45, v42);
    swift_unknownObjectRelease();
    long long v179 = v35;
    __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v35);
    uint64_t v46 = specialized >> prefix<A>(_:)((uint64_t)v40);
    unint64_t v48 = v47;
    outlined destroy of SystemUpdateNotice?((uint64_t)v40, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(void *)&uint64_t v197 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v48, (uint64_t *)&v200);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v49 = swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 32) = 2080;
    MEMORY[0x1F4188790](v49);
    uint64_t v50 = (char *)v175 - v178;
    if (v3)
    {
      uint64_t v51 = swift_getObjectType();
      (*(void (**)(uint64_t))(v187 + 200))(v51);
      uint64_t v52 = 0;
      uint64_t v2 = v183;
      os_log_type_t v53 = v181;
    }
    else
    {
      uint64_t v2 = v183;
      os_log_type_t v53 = v181;
      uint64_t v52 = 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v50, v52, 1, v179);
    uint64_t v54 = specialized >> prefix<A>(_:)((uint64_t)v50);
    unint64_t v56 = v55;
    outlined destroy of SystemUpdateNotice?((uint64_t)v50, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(void *)&uint64_t v197 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v56, (uint64_t *)&v200);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v57 = v182;
    _os_log_impl(&dword_1C2F90000, v182, v53, "[%s] processCurrentCall %s self.call: %s, optionalVideoCall: %s", (uint8_t *)v26, 0x2Au);
    uint64_t v58 = v180;
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v58, -1, -1);
    MEMORY[0x1C87760E0](v26, -1, -1);

    uint64_t v4 = v187;
    id v21 = v190;
    uint64_t v25 = &selRef_trailingBarAlpha;
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  ConversationController.lookupActiveConversation()();
  if (!v198)
  {
    uint64_t result = outlined destroy of SystemUpdateNotice?((uint64_t)&v197, &demangling cache variable for type metadata for Conversation?);
    if (!v3) {
      return result;
    }
    goto LABEL_25;
  }
  outlined init with take of Notice(&v197, (uint64_t)&v200);
  if (v3)
  {
    uint64_t v59 = swift_getObjectType();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 184))(v59, v4) != 4)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v200);
LABEL_25:
      outlined init with copy of Conversation(v2, (uint64_t)&v197);
      uint64_t v86 = v198;
      uint64_t v87 = v199;
      __swift_project_boxed_opaque_existential_1(&v197, v198);
      uint64_t v88 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 104);
      uint64_t v89 = swift_unknownObjectRetain();
      v88(&v194, v89, v4, v86, v87);
      if (v195)
      {
        outlined init with take of Notice(&v194, (uint64_t)&v200);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v197);
        __int16 v90 = (void *)&unk_1EBBAE000;
        if (!ConversationController.hasRingingCalls.getter())
        {
          uint64_t v155 = v20;
          swift_unknownObjectRetain_n();
          uint64_t v156 = v155;
          uint64_t v157 = Logger.logObject.getter();
          uint64_t v158 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v157, v158))
          {
            char v159 = swift_slowAlloc();
            uint64_t v160 = swift_slowAlloc();
            *(void *)&uint64_t v194 = v160;
            *(_DWORD *)char v159 = 136315394;
            LOBYTE(v197) = *((unsigned char *)&v156->isa + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode);
            uint64_t v161 = String.init<A>(reflecting:)();
            *(void *)&uint64_t v197 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v161, v162, (uint64_t *)&v194);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v159 + 12) = 2080;
            uint64_t v163 = swift_getObjectType();
            *(void *)&uint64_t v197 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 192))(v163, v4);
            *((void *)&v197 + 1) = v164;
            uint64_t v165 = String.init<A>(reflecting:)();
            *(void *)&uint64_t v197 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v165, v166, (uint64_t *)&v194);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2F90000, v157, v158, "%s Migrating to track new call with UPI %s", (uint8_t *)v159, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C87760E0](v160, -1, -1);
            MEMORY[0x1C87760E0](v159, -1, -1);
          }
          else
          {

            swift_unknownObjectRelease_n();
          }
          unsigned __int8 v170 = swift_getObjectType();
          specialized ConversationController.migrate(to:with:isUpgrade:)(&v200, v3, 0, (char *)v156, v170, v4);
          swift_unknownObjectRelease_n();
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v200);
        }
        uint64_t v187 = v4;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v200);
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v187 = v4;
        swift_unknownObjectRelease();
        outlined destroy of SystemUpdateNotice?((uint64_t)&v194, &demangling cache variable for type metadata for Conversation?);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v197);
        __int16 v90 = &unk_1EBBAE000;
      }
      uint64_t v111 = v90[313];
      char v186 = v20;
      uint64_t v112 = (char *)v20 + v111;
      swift_beginAccess();
      uint64_t v113 = *((void *)v112 + 1);
      uint64_t v114 = swift_getObjectType();
      int v115 = type metadata accessor for UUID();
      uint64_t v188 = (char *)v175;
      uint64_t v116 = *(void *)(v115 - 8);
      uint64_t v117 = *(void *)(v116 + 64);
      MEMORY[0x1F4188790](v115);
      uint64_t v118 = *(void (**)(uint64_t, uint64_t))(v113 + 200);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v118(v114, v113);
      swift_unknownObjectRelease();
      uint64_t v119 = v190;
      uint64_t v120 = objc_msgSend(v190, sel_uniqueProxyIdentifierUUID);
      MEMORY[0x1F4188790](v120);
      int v121 = (char *)v175 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v120) = static UUID.== infix(_:_:)();
      int v122 = *(void (**)(char *, uint64_t))(v116 + 8);
      v122(v121, v115);
      double v183 = v115;
      v122(v121, v115);
      if ((v120 & 1) != 0
        && (objc_msgSend(v119, sel_status) == 5 || objc_msgSend(v119, sel_status) == 6))
      {
        int v123 = (uint64_t *)((char *)v186 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs);
        swift_beginAccess();
        int v124 = *v123;
        uint64_t v125 = swift_getObjectType();
        uint64_t v188 = (char *)v175;
        MEMORY[0x1F4188790](v125);
        int v126 = (char *)v175 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v127 = v187;
        uint64_t v128 = v187 + 200;
        int v129 = *(uint64_t (**)(void, void))(v187 + 200);
        swift_bridgeObjectRetain();
        double v182 = v125;
        char v181 = v128;
        __int16 v180 = (void (*)(void, void, __n128))v129;
        uint64_t v130 = v129(v125, v127);
        MEMORY[0x1F4188790](v130);
        v175[-2] = v126;
        LOBYTE(v123) = specialized Sequence.contains(where:)((uint64_t)_sSTsSQ7ElementRpzrlE8containsySbABFSbABXEfU_Say10Foundation4UUIDVG_Tg5TA_0, (uint64_t)&v175[-4], v124);
        v122(v126, v183);
        swift_bridgeObjectRelease();
        if (v123)
        {
          int v131 = v186;
          uint64_t v132 = v190;
          swift_unknownObjectRetain_n();
          unint64_t v133 = v131;
          uint64_t v134 = v132;
          uint64_t v135 = Logger.logObject.getter();
          uint64_t v136 = static os_log_type_t.default.getter();
          uint64_t v137 = v136;
          if (os_log_type_enabled(v135, v136))
          {
            uint64_t v138 = swift_slowAlloc();
            double v190 = (id)swift_slowAlloc();
            *(void *)&uint64_t v194 = v190;
            *(_DWORD *)uint64_t v138 = 136315650;
            LODWORD(v188) = v137;
            LOBYTE(v192) = *((unsigned char *)&v133->isa + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode);
            char v186 = v135;
            uint64_t v139 = String.init<A>(reflecting:)();
            *(void *)&uint64_t v192 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v139, v140, (uint64_t *)&v194);
            long long v185 = (char *)&v192 + 8;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v138 + 12) = 2080;
            char v184 = v138 + 14;
            uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
            uint64_t v142 = (*(void *)(*(void *)(v141 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
            uint64_t v143 = objc_msgSend(v134, sel_uniqueProxyIdentifierUUID, MEMORY[0x1F4188790](v141 - 8).n128_f64[0]);
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            double v144 = v183;
            __swift_storeEnumTagSinglePayload((uint64_t)v175 - v142, 0, 1, v183);
            uint64_t v145 = specialized >> prefix<A>(_:)((uint64_t)v175 - v142);
            double v147 = v146;
            outlined destroy of SystemUpdateNotice?((uint64_t)v175 - v142, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            *(void *)&uint64_t v192 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v145, v147, (uint64_t *)&v194);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            uint64_t v148 = swift_bridgeObjectRelease();
            *(_WORD *)(v138 + 22) = 2080;
            uint64_t v149 = MEMORY[0x1F4188790](v148);
            v180(v182, v187, v149);
            __swift_storeEnumTagSinglePayload((uint64_t)v175 - v142, 0, 1, v144);
            uint64_t v150 = specialized >> prefix<A>(_:)((uint64_t)v175 - v142);
            uint64_t v152 = v151;
            outlined destroy of SystemUpdateNotice?((uint64_t)v175 - v142, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            *(void *)&uint64_t v192 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v150, v152, (uint64_t *)&v194);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            uint64_t v153 = v186;
            _os_log_impl(&dword_1C2F90000, v186, (os_log_type_t)v188, "%s The call this ConversationController was tracking is disconnected now %s, and one of the call waiting calls is still active %s. Probably should swap to the call waiting call.", (uint8_t *)v138, 0x20u);
            uint64_t v154 = v190;
            swift_arrayDestroy();
            MEMORY[0x1C87760E0](v154, -1, -1);
            MEMORY[0x1C87760E0](v138, -1, -1);
          }
          else
          {

            swift_unknownObjectRelease_n();
          }
          ConversationController.handleRingingCallChangedToActiveIfNecessary()();
        }
      }
      return swift_unknownObjectRelease_n();
    }
  }
  BOOL v60 = ConversationController.hasRingingCalls.getter();
  outlined init with copy of Conversation(v2, (uint64_t)&v194);
  uint64_t v61 = v195;
  uint64_t v62 = v196;
  __swift_project_boxed_opaque_existential_1(&v194, v195);
  unint64_t v63 = lazy protocol witness table accessor for type TUCall and conformance TUCall();
  (*(void (**)(long long *__return_ptr, id, unint64_t, uint64_t, uint64_t))(v62 + 104))(&v192, v21, v63, v61, v62);
  unint64_t v64 = &unk_1EBBAE000;
  char v186 = v20;
  if (v193)
  {
    LODWORD(v187) = v60;
    outlined init with take of Notice(&v192, (uint64_t)&v197);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v194);
    uint64_t v65 = v198;
    uint64_t v66 = v199;
    __swift_project_boxed_opaque_existential_1(&v197, v198);
    uint64_t v67 = type metadata accessor for UUID();
    uint64_t v188 = (char *)v175;
    uint64_t v68 = *(void *)(v67 - 8);
    uint64_t v69 = *(void *)(v68 + 64);
    __n128 v70 = MEMORY[0x1F4188790](v67);
    (*(void (**)(uint64_t, uint64_t, __n128))(v66 + 8))(v65, v66, v70);
    uint64_t v71 = v201;
    uint64_t v72 = v202;
    unint64_t v73 = __swift_project_boxed_opaque_existential_1(&v200, v201);
    __n128 v74 = MEMORY[0x1F4188790](v73);
    uint64_t v75 = (char *)v175 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(uint64_t, uint64_t, __n128))(v72 + 8))(v71, v72, v74);
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
    char v76 = dispatch thunk of static Equatable.== infix(_:_:)();
    double v183 = v68;
    uint64_t v77 = *(void (**)(char *, uint64_t))(v68 + 8);
    v77(v75, v67);
    v77(v75, v67);
    id v21 = v190;
    if ((v76 & 1) != 0 || objc_msgSend(v190, sel_status) != 4)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v197);
      unint64_t v20 = v186;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v197);
      uint64_t v78 = (char *)v186 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs;
      swift_beginAccess();
      uint64_t v79 = *(void *)v78;
      swift_bridgeObjectRetain();
      id v80 = objc_msgSend(v21, sel_uniqueProxyIdentifierUUID);
      uint64_t v188 = (char *)v175;
      MEMORY[0x1F4188790](v80);
      double v182 = (os_log_t)((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
      int64_t v81 = (char *)v175 - (char *)v182;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      MEMORY[0x1F4188790](v82);
      v175[-2] = v81;
      uint64_t v83 = v185;
      char v84 = specialized Sequence.contains(where:)((uint64_t)closure #1 in Sequence<>.contains(_:)specialized partial apply, (uint64_t)&v175[-4], v79);
      v77((char *)v81, v67);
      swift_bridgeObjectRelease();
      if ((v84 & 1) == 0)
      {
        long long v171 = objc_msgSend(v190, sel_uniqueProxyIdentifierUUID);
        MEMORY[0x1F4188790](v171);
        long long v172 = (char *)v175 - (char *)v182;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        swift_beginAccess();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v173 = *(void *)(*(void *)v78 + 16);
        specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v173);
        unsigned __int8 v174 = *(void *)v78;
        *(void *)(v174 + 16) = v173 + 1;
        (*(void (**)(unint64_t, int64_t, uint64_t))(v183 + 32))(v174+ ((*(unsigned __int8 *)(v183 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v183 + 80))+ *(void *)(v183 + 72) * v173, v172, v67);
        swift_endAccess();
        LOBYTE(v60) = v187;
        goto LABEL_34;
      }
      long long v185 = v83;
      unint64_t v20 = v186;
      id v21 = v190;
    }
    uint64_t v25 = &selRef_trailingBarAlpha;
    LOBYTE(v60) = v187;
    unint64_t v64 = (void *)&unk_1EBBAE000;
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v192, &demangling cache variable for type metadata for Conversation?);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v194);
  }
  uint64_t v91 = (uint64_t *)((char *)v20 + v64[300]);
  swift_beginAccess();
  uint64_t v92 = *v91;
  swift_bridgeObjectRetain();
  uint64_t v93 = [v21 v25[228]];
  char v94 = type metadata accessor for UUID();
  uint64_t v95 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v97 = (char *)v175 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  MEMORY[0x1F4188790](v98);
  v175[-2] = v97;
  BOOL v99 = specialized Sequence.contains(where:)((uint64_t)closure #1 in Sequence<>.contains(_:)specialized partial apply, (uint64_t)&v175[-4], v92);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v97, v94);
  swift_bridgeObjectRelease();
  id v100 = v190;
  if ((v99 & 1) == 0
    || objc_msgSend(v190, sel_status) != 6 && objc_msgSend(v100, sel_status) != 5)
  {
    goto LABEL_34;
  }
  swift_beginAccess();
  uint64_t result = specialized MutableCollection._halfStablePartition(isSuffixElement:)(v91, v100);
  if (*(void *)(*v91 + 16) >= result)
  {
    specialized Array.replaceSubrange<A>(_:with:)();
    swift_endAccess();
LABEL_34:
    uint64_t v101 = v186;
    if (v60 == ConversationController.hasRingingCalls.getter()) {
      goto LABEL_50;
    }
    id v102 = v101;
    uint64_t v103 = Logger.logObject.getter();
    uint64_t v104 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v103, v104))
    {
      os_log_type_t v105 = swift_slowAlloc();
      uint64_t v106 = swift_slowAlloc();
      *(void *)&uint64_t v194 = v106;
      *(_DWORD *)os_log_type_t v105 = 136315394;
      LOBYTE(v191) = *((unsigned char *)&v102->isa + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode);
      uint64_t v107 = String.init<A>(reflecting:)();
      id v191 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v107, v108, (uint64_t *)&v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v105 + 12) = 2080;
      LOBYTE(v191) = ConversationController.hasRingingCalls.getter();
      unint64_t v109 = String.init<A>(reflecting:)();
      id v191 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v109, v110, (uint64_t *)&v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v103, v104, "%s hasRingingCalls changed to %s", (uint8_t *)v105, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v106, -1, -1);
      MEMORY[0x1C87760E0](v105, -1, -1);
    }
    else
    {
    }
    uint64_t v167 = (void (**)(BOOL))((char *)v102
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls);
    swift_beginAccess();
    uint64_t v168 = *v167;
    if (!*v167)
    {
LABEL_50:
      swift_unknownObjectRelease();
    }
    else
    {
      swift_retain();
      uint64_t v169 = ConversationController.hasRingingCalls.getter();
      v168(v169);
      swift_unknownObjectRelease();
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v168);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v200);
  }
  __break(1u);
  return result;
}

void ConversationController.callCenter(_:letMeInRequestStateChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_214_1();
  OUTLINED_FUNCTION_363_0();
  if (v24[3])
  {
    v23[0] = v0;
    OUTLINED_FUNCTION_20_59();
    v23[1] = v23;
    OUTLINED_FUNCTION_5_3();
    uint64_t v3 = v2;
    MEMORY[0x1F4188790](v4);
    OUTLINED_FUNCTION_15_77();
    v5();
    unint64_t v6 = v1[4];
    __swift_project_boxed_opaque_existential_1(v1, v1[3]);
    OUTLINED_FUNCTION_248_2();
    MEMORY[0x1F4188790](v7);
    OUTLINED_FUNCTION_15_77();
    v8();
    uint64_t v9 = OUTLINED_FUNCTION_167_1();
    uint64_t v10 = *(void (**)(void))(v3 + 8);
    OUTLINED_FUNCTION_27_49();
    v10();
    OUTLINED_FUNCTION_27_49();
    v10();
    OUTLINED_FUNCTION_10_80();
    if (v9)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      char v11 = (__n128 *)OUTLINED_FUNCTION_11_7();
      OUTLINED_FUNCTION_179_3(v11, (__n128)xmmword_1C37696D0);
      uint64_t v12 = OUTLINED_FUNCTION_7_3();
      v24[0] = v13(v12);
      type metadata accessor for TUConversationLetMeInRequestState(0);
      OUTLINED_FUNCTION_253_0();
      OUTLINED_FUNCTION_188_3();
      unint64_t v14 = MEMORY[0x1E4FBB1A0];
      v11[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
      unint64_t v15 = lazy protocol witness table accessor for type String and conformance String();
      v11[4].n128_u64[0] = v15;
      v11[2].n128_u64[0] = v9;
      v11[2].n128_u64[1] = v6;
      OUTLINED_FUNCTION_199_1();
      specialized >> prefix<A>(_:)((uint64_t)v24);
      OUTLINED_FUNCTION_188_3();
      outlined destroy of SystemUpdateNotice?((uint64_t)v24, &demangling cache variable for type metadata for Conversation?);
      v11[6].n128_u64[0] = v14;
      v11[6].n128_u64[1] = v15;
      v11[4].n128_u64[1] = v9;
      v11[5].n128_u64[0] = v6;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_120_6();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(v1, v1[3]);
      uint64_t v16 = OUTLINED_FUNCTION_219_2();
      uint64_t v18 = v17(v16);
      ConversationController.conversationLetMeInRequestState.setter(v18);
    }
    else
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v21 = OUTLINED_FUNCTION_11_7();
      *(_OWORD *)(v21 + 16) = xmmword_1C37696D0;
      OUTLINED_FUNCTION_199_1();
      specialized >> prefix<A>(_:)((uint64_t)v24);
      OUTLINED_FUNCTION_183_2();
      OUTLINED_FUNCTION_134_3();
      *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v22 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_91_6(v22);
      specialized >> prefix<A>(_:)((uint64_t)v24);
      OUTLINED_FUNCTION_134_3();
      OUTLINED_FUNCTION_471();
      OUTLINED_FUNCTION_136_2();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v24, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    id v19 = (__n128 *)OUTLINED_FUNCTION_25_15();
    OUTLINED_FUNCTION_404(v19, (__n128)xmmword_1C3769620);
    OUTLINED_FUNCTION_150_7();
    OUTLINED_FUNCTION_193_3();
    v19[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
    unint64_t v20 = lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_192_2(v20);
    OUTLINED_FUNCTION_215_1();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:ignoreLetMeInRequestsChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_214_1();
  OUTLINED_FUNCTION_363_0();
  if (v24[3])
  {
    v23[0] = v0;
    OUTLINED_FUNCTION_20_59();
    v23[1] = v23;
    OUTLINED_FUNCTION_5_3();
    uint64_t v3 = v2;
    MEMORY[0x1F4188790](v4);
    OUTLINED_FUNCTION_15_77();
    v5();
    unint64_t v6 = v1[4];
    __swift_project_boxed_opaque_existential_1(v1, v1[3]);
    OUTLINED_FUNCTION_248_2();
    MEMORY[0x1F4188790](v7);
    OUTLINED_FUNCTION_15_77();
    v8();
    uint64_t v9 = OUTLINED_FUNCTION_167_1();
    uint64_t v10 = *(void (**)(void))(v3 + 8);
    OUTLINED_FUNCTION_27_49();
    v10();
    OUTLINED_FUNCTION_27_49();
    v10();
    OUTLINED_FUNCTION_10_80();
    if (v9)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      char v11 = (__n128 *)OUTLINED_FUNCTION_11_7();
      OUTLINED_FUNCTION_179_3(v11, (__n128)xmmword_1C37696D0);
      uint64_t v12 = OUTLINED_FUNCTION_7_3();
      char v14 = v13(v12);
      unint64_t v15 = MEMORY[0x1E4FBB3C8];
      v11[3].n128_u64[1] = MEMORY[0x1E4FBB390];
      v11[4].n128_u64[0] = v15;
      v11[2].n128_u8[0] = v14 & 1;
      OUTLINED_FUNCTION_199_1();
      specialized >> prefix<A>(_:)((uint64_t)v24);
      OUTLINED_FUNCTION_188_3();
      outlined destroy of SystemUpdateNotice?((uint64_t)v24, &demangling cache variable for type metadata for Conversation?);
      v11[6].n128_u64[0] = MEMORY[0x1E4FBB1A0];
      v11[6].n128_u64[1] = lazy protocol witness table accessor for type String and conformance String();
      v11[4].n128_u64[1] = v9;
      v11[5].n128_u64[0] = v6;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_120_6();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_250_2(v1);
      uint64_t v16 = OUTLINED_FUNCTION_3_24();
      char v18 = v17(v16);
      ConversationController.ignoreLetMeInRequests.setter(v18 & 1);
    }
    else
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v21 = OUTLINED_FUNCTION_11_7();
      *(_OWORD *)(v21 + 16) = xmmword_1C37696D0;
      OUTLINED_FUNCTION_199_1();
      specialized >> prefix<A>(_:)((uint64_t)v24);
      OUTLINED_FUNCTION_183_2();
      OUTLINED_FUNCTION_134_3();
      *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v22 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_91_6(v22);
      specialized >> prefix<A>(_:)((uint64_t)v24);
      OUTLINED_FUNCTION_134_3();
      OUTLINED_FUNCTION_471();
      OUTLINED_FUNCTION_136_2();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v24, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    id v19 = (__n128 *)OUTLINED_FUNCTION_25_15();
    OUTLINED_FUNCTION_404(v19, (__n128)xmmword_1C3769620);
    OUTLINED_FUNCTION_150_7();
    OUTLINED_FUNCTION_193_3();
    v19[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
    unint64_t v20 = lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_192_2(v20);
    OUTLINED_FUNCTION_215_1();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:rejectedMembersChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_214_1();
  OUTLINED_FUNCTION_363_0();
  if (v24[3])
  {
    v23[0] = v0;
    OUTLINED_FUNCTION_20_59();
    v23[1] = v23;
    OUTLINED_FUNCTION_5_3();
    uint64_t v3 = v2;
    MEMORY[0x1F4188790](v4);
    OUTLINED_FUNCTION_15_77();
    v5();
    unint64_t v6 = v1[4];
    __swift_project_boxed_opaque_existential_1(v1, v1[3]);
    OUTLINED_FUNCTION_248_2();
    MEMORY[0x1F4188790](v7);
    OUTLINED_FUNCTION_15_77();
    v8();
    uint64_t v9 = OUTLINED_FUNCTION_167_1();
    uint64_t v10 = *(void (**)(void))(v3 + 8);
    OUTLINED_FUNCTION_27_49();
    v10();
    OUTLINED_FUNCTION_27_49();
    v10();
    OUTLINED_FUNCTION_10_80();
    if (v9)
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      char v11 = (__n128 *)OUTLINED_FUNCTION_11_7();
      OUTLINED_FUNCTION_179_3(v11, (__n128)xmmword_1C37696D0);
      uint64_t v12 = OUTLINED_FUNCTION_7_3();
      v24[0] = v13(v12);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>);
      OUTLINED_FUNCTION_253_0();
      OUTLINED_FUNCTION_188_3();
      unint64_t v14 = MEMORY[0x1E4FBB1A0];
      v11[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
      unint64_t v15 = lazy protocol witness table accessor for type String and conformance String();
      v11[4].n128_u64[0] = v15;
      v11[2].n128_u64[0] = v9;
      v11[2].n128_u64[1] = v6;
      OUTLINED_FUNCTION_199_1();
      specialized >> prefix<A>(_:)((uint64_t)v24);
      OUTLINED_FUNCTION_188_3();
      outlined destroy of SystemUpdateNotice?((uint64_t)v24, &demangling cache variable for type metadata for Conversation?);
      v11[6].n128_u64[0] = v14;
      v11[6].n128_u64[1] = v15;
      v11[4].n128_u64[1] = v9;
      v11[5].n128_u64[0] = v6;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_120_6();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_250_2(v1);
      uint64_t v16 = OUTLINED_FUNCTION_3_24();
      uint64_t v18 = v17(v16);
      specialized Set.count.getter(v18);
      OUTLINED_FUNCTION_23_32();
      ConversationController.rejectedParticipantsCount.setter((uint64_t)v1);
    }
    else
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v21 = OUTLINED_FUNCTION_11_7();
      *(_OWORD *)(v21 + 16) = xmmword_1C37696D0;
      OUTLINED_FUNCTION_199_1();
      specialized >> prefix<A>(_:)((uint64_t)v24);
      OUTLINED_FUNCTION_183_2();
      OUTLINED_FUNCTION_134_3();
      *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v22 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_91_6(v22);
      specialized >> prefix<A>(_:)((uint64_t)v24);
      OUTLINED_FUNCTION_134_3();
      OUTLINED_FUNCTION_471();
      OUTLINED_FUNCTION_136_2();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v24, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    id v19 = (__n128 *)OUTLINED_FUNCTION_25_15();
    OUTLINED_FUNCTION_404(v19, (__n128)xmmword_1C3769620);
    OUTLINED_FUNCTION_150_7();
    OUTLINED_FUNCTION_193_3();
    v19[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
    unint64_t v20 = lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_192_2(v20);
    OUTLINED_FUNCTION_215_1();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:linkChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  swift_getObjectType();
  OUTLINED_FUNCTION_109_5(v2);
  uint64_t v3 = OUTLINED_FUNCTION_1_11();
  if (v4(v3))
  {
    uint64_t v5 = v2[3];
    uint64_t v6 = v2[4];
    OUTLINED_FUNCTION_69_10(v2, v5);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v8 = OUTLINED_FUNCTION_8(v7);
    MEMORY[0x1F4188790](v8);
    OUTLINED_FUNCTION_278_0();
    (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v5, v6);
    OUTLINED_FUNCTION_6_1();
    uint64_t v10 = OUTLINED_FUNCTION_68_9();
    outlined assign with take of Participant?(v10, v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    swift_endAccess();
  }
  ConversationController.lookupActiveConversation()();
  if (v31[3])
  {
    v30[0] = v0;
    OUTLINED_FUNCTION_20_59();
    v30[1] = v30;
    OUTLINED_FUNCTION_5_3();
    uint64_t v13 = v12;
    MEMORY[0x1F4188790](v14);
    OUTLINED_FUNCTION_15_77();
    v15();
    uint64_t v16 = __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    MEMORY[0x1F4188790](v16);
    OUTLINED_FUNCTION_15_77();
    v17();
    char v18 = OUTLINED_FUNCTION_167_1();
    id v19 = *(void (**)(void))(v13 + 8);
    OUTLINED_FUNCTION_27_49();
    v19();
    OUTLINED_FUNCTION_27_49();
    v19();
    OUTLINED_FUNCTION_10_80();
    if (v18)
    {
      unint64_t v20 = (void (**)(void *))(v30[0]
                                           + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange);
      OUTLINED_FUNCTION_2();
      uint64_t v21 = *v20;
      if (*v20)
      {
        OUTLINED_FUNCTION_101_7();
        v21(v2);
        OUTLINED_FUNCTION_124_5();
      }
    }
    else
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v27 = OUTLINED_FUNCTION_11_7();
      *(_OWORD *)(v27 + 16) = xmmword_1C37696D0;
      OUTLINED_FUNCTION_198_4();
      specialized >> prefix<A>(_:)((uint64_t)v31);
      OUTLINED_FUNCTION_274_0();
      OUTLINED_FUNCTION_134_3();
      uint64_t v28 = MEMORY[0x1E4FBB1A0];
      *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v29 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_403(v29);
      outlined init with copy of Conversation((uint64_t)v32, (uint64_t)v31);
      specialized >> prefix<A>(_:)((uint64_t)v31);
      OUTLINED_FUNCTION_274_0();
      OUTLINED_FUNCTION_134_3();
      *(void *)(v27 + 96) = v28;
      *(void *)(v27 + 104) = v29;
      *(void *)(v27 + 72) = v2;
      *(void *)(v27 + 80) = v19;
      OUTLINED_FUNCTION_13_51();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v31, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v22 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v22 + 16) = xmmword_1C3769620;
    v32[0] = v0;
    id v23 = v0;
    uint64_t v24 = OUTLINED_FUNCTION_150_7();
    uint64_t v26 = v25;
    *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v22 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v22 + 32) = v24;
    *(void *)(v22 + 40) = v26;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:linkInvitedMemberHandlesChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_214_1();
  OUTLINED_FUNCTION_363_0();
  if (v15[3])
  {
    OUTLINED_FUNCTION_20_59();
    v14[1] = (uint64_t)v14;
    OUTLINED_FUNCTION_5_3();
    uint64_t v2 = v1;
    MEMORY[0x1F4188790](v3);
    OUTLINED_FUNCTION_15_77();
    v4();
    uint64_t v5 = v0[3];
    v14[0] = (uint64_t)v0;
    uint64_t v6 = __swift_project_boxed_opaque_existential_1(v0, v5);
    MEMORY[0x1F4188790](v6);
    OUTLINED_FUNCTION_15_77();
    v7();
    char v8 = OUTLINED_FUNCTION_167_1();
    uint64_t v9 = *(void (**)(void))(v2 + 8);
    OUTLINED_FUNCTION_27_49();
    v9();
    OUTLINED_FUNCTION_27_49();
    v9();
    OUTLINED_FUNCTION_10_80();
    if (v8)
    {
      ConversationController.updateRemoteParticipantsKickableAndAuthorizedToChangeGroupMembership(with:)(v16);
      ConversationController.updateLocalMemberAuthorizedToChangeGroupMembership(with:)(v16);
    }
    else
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v12 = OUTLINED_FUNCTION_11_7();
      *(_OWORD *)(v12 + 16) = xmmword_1C37696D0;
      outlined init with copy of Conversation(v14[0], (uint64_t)v15);
      specialized >> prefix<A>(_:)((uint64_t)v15);
      OUTLINED_FUNCTION_183_2();
      OUTLINED_FUNCTION_134_3();
      *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v13 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_91_6(v13);
      specialized >> prefix<A>(_:)((uint64_t)v15);
      OUTLINED_FUNCTION_134_3();
      OUTLINED_FUNCTION_471();
      OUTLINED_FUNCTION_136_2();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v15, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v10 = (__n128 *)OUTLINED_FUNCTION_25_15();
    OUTLINED_FUNCTION_178_3(v10, (__n128)xmmword_1C3769620);
    OUTLINED_FUNCTION_150_7();
    OUTLINED_FUNCTION_193_3();
    v10[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_192_2(v11);
    OUTLINED_FUNCTION_93_4();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:participantMediaPrioritiesChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v0;
  OUTLINED_FUNCTION_214_1();
  OUTLINED_FUNCTION_288_0();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v3 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v6();
  char v7 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_34_30();
  OUTLINED_FUNCTION_50_1();
  v8();
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  ConversationController.lookupActiveConversation()();
  if (!v67[3])
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v67, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_8:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v26 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v26 + 16) = xmmword_1C3769620;
      v68[0] = v4;
      id v27 = v4;
      String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_289();
      *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v26 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v26 + 32) = v2;
      *(void *)(v26 + 40) = v3;
      OUTLINED_FUNCTION_94_6();
      swift_bridgeObjectRelease();
LABEL_32:
      OUTLINED_FUNCTION_28();
      return;
    }
LABEL_34:
    swift_once();
    goto LABEL_8;
  }
  v57[0] = v4;
  OUTLINED_FUNCTION_152_3();
  OUTLINED_FUNCTION_9_85(v68, v68[3]);
  uint64_t v62 = v57;
  OUTLINED_FUNCTION_5_3();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_15_77();
  v12();
  unint64_t v13 = __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_204_0();
  OUTLINED_FUNCTION_15_77();
  v14();
  char v15 = static UUID.== infix(_:_:)();
  uint64_t v16 = *(void (**)(void))(v10 + 8);
  OUTLINED_FUNCTION_446();
  OUTLINED_FUNCTION_10_6();
  v16();
  OUTLINED_FUNCTION_10_6();
  v16();
  if ((v15 & 1) == 0)
  {
LABEL_31:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    goto LABEL_32;
  }
  uint64_t v17 = (void *)OUTLINED_FUNCTION_30_15();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  OUTLINED_FUNCTION_436();
  uint64_t v20 = v19;
  uint64_t v21 = specialized Set.count.getter(v19);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x1E4FBC860];
LABEL_28:
    unint64_t v55 = (void (**)(uint64_t))(v57[0]
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
    OUTLINED_FUNCTION_2();
    unint64_t v56 = *v55;
    if (*v55)
    {
      OUTLINED_FUNCTION_101_7();
      v56(v28);
      OUTLINED_FUNCTION_124_5();
    }
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  uint64_t v22 = v21;
  uint64_t v66 = MEMORY[0x1E4FBC860];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  unint64_t v59 = v20 & 0xC000000000000001;
  if ((v20 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_421();
    uint64_t v23 = __CocoaSet.startIndex.getter();
    unsigned __int8 v25 = 1;
  }
  else
  {
    uint64_t v23 = specialized _NativeSet.startIndex.getter(v20);
    unsigned __int8 v25 = v29 & 1;
  }
  uint64_t v63 = v23;
  uint64_t v64 = v24;
  unsigned __int8 v65 = v25;
  if ((v22 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_421();
    if (v31 != v32) {
      uint64_t v30 = v20;
    }
    v57[1] = v30;
    uint64_t v58 = v20;
    do
    {
      uint64_t v33 = v65;
      uint64_t v60 = v63;
      uint64_t v61 = v64;
      specialized Set.subscript.getter(v63, v64, v65, v20);
      uint64_t v35 = v34;
      id v36 = objc_msgSend(v34, sel_handle);
      id v37 = objc_msgSend(v35, sel_identifier);
      id v38 = objc_msgSend(v35, sel_avcIdentifier);
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v62 = v40;

      id v41 = objc_msgSend(v35, sel_audioPriority);
      id v42 = objc_msgSend(v35, sel_videoPriority);

      uint64_t v43 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_299_0();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v43 = v66;
      }
      unint64_t v44 = *(void *)(v43 + 16);
      if (v44 >= *(void *)(v43 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v43 = v66;
      }
      *(void *)(v43 + 16) = v44 + 1;
      uint64_t v45 = v43 + 48 * v44;
      *(void *)(v45 + 32) = v36;
      *(void *)(v45 + 40) = v37;
      *(unsigned char *)(v45 + 48) = 0;
      uint64_t v46 = v62;
      *(void *)(v45 + 56) = v39;
      *(void *)(v45 + 64) = v46;
      *(float *)(v45 + 72) = (float)(uint64_t)v41;
      *(float *)(v45 + 76) = (float)(uint64_t)v42;
      if (v59)
      {
        uint64_t v20 = v58;
        if ((v33 & 1) == 0) {
          goto LABEL_36;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Set<TUConversationParticipant>.Index);
        uint64_t v54 = (void (*)(void *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v54(v67, 0);
      }
      else
      {
        uint64_t v48 = v60;
        uint64_t v47 = v61;
        uint64_t v20 = v58;
        uint64_t v49 = specialized _NativeSet.index(after:)(v60, v61, v33, v58);
        uint64_t v51 = v50;
        char v53 = v52;
        outlined consume of Set<TUHandle>.Index._Variant(v48, v47, v33);
        uint64_t v63 = v49;
        uint64_t v64 = v51;
        unsigned __int8 v65 = v53 & 1;
      }
      --v22;
    }
    while (v22);
    outlined consume of Set<TUHandle>.Index._Variant(v63, v64, v65);
    swift_bridgeObjectRelease();
    uint64_t v28 = v66;
    goto LABEL_28;
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

void ConversationController.callCenter(_:conversation:participant:didReact:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  id v41 = v8;
  swift_getObjectType();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v10 = OUTLINED_FUNCTION_8(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_2_3();
  uint64_t v42 = v11;
  uint64_t v40 = OUTLINED_FUNCTION_128_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_25_7();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_62();
  char v14 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v15();
  _dispatchPreconditionTest(_:)();
  uint64_t v16 = OUTLINED_FUNCTION_1_18();
  v17(v16);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  ConversationController.lookupActiveConversation()();
  if (!v43[3])
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v43, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_8:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v32 = OUTLINED_FUNCTION_25_15();
      *(_OWORD *)(v32 + 16) = xmmword_1C3769620;
      v44[0] = v3;
      uint64_t v33 = v3;
      String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_274_0();
      *(void *)(v32 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v34 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_403(v34);
      OUTLINED_FUNCTION_13_51();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
LABEL_15:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v38 = v5;
  uint64_t v39 = v3;
  OUTLINED_FUNCTION_152_3();
  OUTLINED_FUNCTION_9_85(v44, v44[3]);
  OUTLINED_FUNCTION_5_3();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_457();
  OUTLINED_FUNCTION_15_77();
  v21();
  uint64_t v22 = (void *)OUTLINED_FUNCTION_390();
  uint64_t v24 = __swift_project_boxed_opaque_existential_1(v22, v23);
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_392();
  OUTLINED_FUNCTION_15_77();
  v25();
  OUTLINED_FUNCTION_278();
  char v26 = static UUID.== infix(_:_:)();
  id v27 = *(void (**)(void))(v19 + 8);
  OUTLINED_FUNCTION_50_1();
  v27();
  OUTLINED_FUNCTION_50_1();
  v27();
  if (v26)
  {
    ConversationController.lookupActiveParticipant(from:)(v41, v42);
    uint64_t v28 = OUTLINED_FUNCTION_70_3();
    OUTLINED_FUNCTION_33_0(v28, v29, v40);
    if (v30)
    {
      uint64_t v31 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
      OUTLINED_FUNCTION_2();
      uint64_t v35 = v2;
      _s15ConversationKit11ParticipantVWOcTm_19(v31, v2);
      outlined destroy of SystemUpdateNotice?(v42, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      uint64_t v35 = v2;
      _s15ConversationKit11ParticipantVWObTm_6(v42, v2);
    }
    id v36 = &v39[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact];
    OUTLINED_FUNCTION_123_4();
    id v37 = *(void (**)(uint64_t, uint64_t, uint64_t))v36;
    if (*(void *)v36)
    {
      swift_endAccess();
      swift_retain();
      v37(v35, v7, v38);
      OUTLINED_FUNCTION_186_4();
      _s15ConversationKit11ParticipantVWOhTm_13(v35, (void (*)(void))type metadata accessor for Participant);
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_13(v35, (void (*)(void))type metadata accessor for Participant);
      swift_endAccess();
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
LABEL_13:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:conversation:participantDidStopReacting:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v0;
  uint64_t v6 = v5;
  swift_getObjectType();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v8 = OUTLINED_FUNCTION_8(v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v35 = OUTLINED_FUNCTION_39_30();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_62();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_36_4();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t *v3 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v11();
  char v12 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_29_4();
  v13();
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_201_2();
  if (!v36[3])
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v36, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_8:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v28 = (__n128 *)OUTLINED_FUNCTION_25_15();
      OUTLINED_FUNCTION_178_3(v28, (__n128)xmmword_1C3769620);
      String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_274_0();
      v28[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
      unint64_t v29 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_403(v29);
      OUTLINED_FUNCTION_13_51();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
LABEL_15:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v33 = v1;
  uint64_t v34 = v4;
  OUTLINED_FUNCTION_200_2();
  OUTLINED_FUNCTION_9_85(v37, v37[3]);
  OUTLINED_FUNCTION_5_3();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_15_77();
  v17();
  uint64_t v18 = (void *)OUTLINED_FUNCTION_69_3();
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(v18, v19);
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_231_1();
  OUTLINED_FUNCTION_15_77();
  v21();
  OUTLINED_FUNCTION_69_0();
  char v22 = static UUID.== infix(_:_:)();
  uint64_t v23 = *(void (**)(void))(v15 + 8);
  OUTLINED_FUNCTION_278();
  OUTLINED_FUNCTION_3_8();
  v23();
  OUTLINED_FUNCTION_3_8();
  v23();
  if (v22)
  {
    ConversationController.lookupActiveParticipant(from:)(v6, v2);
    uint64_t v24 = OUTLINED_FUNCTION_85_2();
    OUTLINED_FUNCTION_33_0(v24, v25, v35);
    if (v26)
    {
      uint64_t v27 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      OUTLINED_FUNCTION_2();
      uint64_t v30 = v33;
      _s15ConversationKit11ParticipantVWOcTm_19(v27, v33);
      outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      uint64_t v30 = v33;
      _s15ConversationKit11ParticipantVWObTm_6(v2, v33);
    }
    uint64_t v31 = (void (**)(uint64_t))(v34
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting);
    OUTLINED_FUNCTION_123_4();
    uint64_t v32 = *v31;
    if (*v31)
    {
      swift_endAccess();
      swift_retain();
      v32(v30);
      OUTLINED_FUNCTION_186_4();
      _s15ConversationKit11ParticipantVWOhTm_13(v30, (void (*)(void))type metadata accessor for Participant);
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_13(v30, (void (*)(void))type metadata accessor for Participant);
      swift_endAccess();
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
LABEL_13:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:migratingFrom:to:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v138 = v6;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_62();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v9();
  char v10 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_29_4();
  v11();
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_33:
    swift_once();
    goto LABEL_4;
  }
  char v12 = &v3[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID];
  OUTLINED_FUNCTION_2();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v14 = OUTLINED_FUNCTION_8(v13);
  uint64_t v7 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_354();
  os_log_t v136 = v12;
  uint64_t v16 = OUTLINED_FUNCTION_266_1();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v16, v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  type metadata accessor for UUID();
  uint64_t v18 = OUTLINED_FUNCTION_85_2();
  uint64_t v139 = v19;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v18, v20, v19);
  uint64_t v22 = OUTLINED_FUNCTION_189_2();
  uint64_t updated = outlined destroy of SystemUpdateNotice?(v22, v23);
  uint64_t v137 = v5;
  if (EnumTagSinglePayload != 1) {
    goto LABEL_8;
  }
  if (one-time initialization token for conversationController != -1) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)static Logger.conversationController);
  char v26 = v3;
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v27, v28))
  {
    unint64_t v29 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v30 = OUTLINED_FUNCTION_9_0();
    uint64_t v135 = v3;
    *(_DWORD *)unint64_t v29 = 136315138;
    v144[0] = v30;
    uint64_t v31 = String.init<A>(reflecting:)();
    v142[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, v144);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v27, v28, "%s Migration requested while conversationUUID == nil so attempting to lookup active conversation.", v29, 0xCu);
    swift_arrayDestroy();
    uint64_t v3 = v135;
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v5 = v137;
  ConversationController.updateConversationUUIDIfNeeded()();
  uint64_t updated = outlined destroy of SystemUpdateNotice?((uint64_t)v144, &demangling cache variable for type metadata for Conversation?);
LABEL_8:
  MEMORY[0x1F4188790](updated);
  os_log_t v33 = v136;
  uint64_t v34 = OUTLINED_FUNCTION_68_9();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v34, v35, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  id v36 = (char *)v133 - v2;
  uint64_t v37 = (uint64_t)v139;
  int v38 = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, (uint64_t)v139);
  uint64_t v39 = OUTLINED_FUNCTION_41_0();
  uint64_t v41 = outlined destroy of SystemUpdateNotice?(v39, v40);
  if (v38 == 1)
  {
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    __swift_project_value_buffer(v42, (uint64_t)static Logger.conversationController);
    outlined init with copy of Conversation((uint64_t)v5, (uint64_t)v144);
    outlined init with copy of Conversation((uint64_t)v138, (uint64_t)v142);
    uint64_t v43 = v3;
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_2_12(v45))
    {
      uint64_t v46 = OUTLINED_FUNCTION_9_0();
      uint64_t v138 = OUTLINED_FUNCTION_83();
      uint64_t v141 = v138;
      *(_DWORD *)uint64_t v46 = 136315650;
      os_log_t v136 = (os_log_t)v44;
      LOBYTE(v140) = v43[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
      uint64_t v47 = String.init<A>(reflecting:)();
      LODWORD(v135) = &demangling cache variable for type metadata for UUID?;
      uint64_t v140 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v48, (uint64_t *)&v141);
      uint64_t v134 = &v141;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      OUTLINED_FUNCTION_232(v46 + 14);
      MEMORY[0x1F4188790](v49);
      OUTLINED_FUNCTION_354();
      uint64_t v51 = v50 - (void)&v140;
      __swift_project_boxed_opaque_existential_1(v144, v145);
      OUTLINED_FUNCTION_273_1();
      OUTLINED_FUNCTION_15_77();
      v52();
      OUTLINED_FUNCTION_31_13();
      uint64_t v53 = (uint64_t)v139;
      __swift_storeEnumTagSinglePayload(v54, v55, v56, (uint64_t)v139);
      specialized >> prefix<A>(_:)(v51);
      unint64_t v58 = v57;
      outlined destroy of SystemUpdateNotice?(v51, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v59 = OUTLINED_FUNCTION_429();
      uint64_t v61 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v58, v60);
      OUTLINED_FUNCTION_307_0(v61);
      OUTLINED_FUNCTION_308_0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
      *(_WORD *)(v46 + 22) = 2080;
      OUTLINED_FUNCTION_232(v46 + 24);
      MEMORY[0x1F4188790](v62);
      unint64_t v63 = v143;
      __swift_project_boxed_opaque_existential_1(v142, v143);
      OUTLINED_FUNCTION_198();
      OUTLINED_FUNCTION_15_77();
      v64();
      __swift_storeEnumTagSinglePayload((char *)v133 - (char *)&v140, 0, 1, v53);
      specialized >> prefix<A>(_:)((char *)v133 - (char *)&v140);
      OUTLINED_FUNCTION_238_0();
      outlined destroy of SystemUpdateNotice?((char *)v133 - (char *)&v140, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v5 = v137;
      uint64_t v65 = OUTLINED_FUNCTION_429();
      uint64_t v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v63, v66);
      OUTLINED_FUNCTION_307_0(v67);
      OUTLINED_FUNCTION_308_0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v142);
      os_log_t v68 = v136;
      _os_log_impl(&dword_1C2F90000, v136, (os_log_type_t)v135, "%s Speculatively migrate active conversation UUID to %s since conversationUUID=nil (expected: %s even after an attempted lookup", (uint8_t *)v46, 0x20u);
      uint64_t v44 = (uint64_t)v138;
      OUTLINED_FUNCTION_328();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v142);
    }
    goto LABEL_19;
  }
  uint64_t v134 = (NSObject **)v133;
  uint64_t v135 = v3;
  MEMORY[0x1F4188790](v41);
  unint64_t v69 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v70 = (uint64_t)v33;
  uint64_t v71 = (char *)v133 - v69;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v70, (uint64_t)v133 - v69, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_232((uint64_t)v133);
  MEMORY[0x1F4188790](v72);
  uint64_t v3 = (char *)v133 - v69;
  __swift_project_boxed_opaque_existential_1(v138, (uint64_t)v138[3].isa);
  OUTLINED_FUNCTION_351();
  OUTLINED_FUNCTION_15_77();
  v73();
  __swift_storeEnumTagSinglePayload((uint64_t)v133 - v69, 0, 1, v37);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  uint64_t v75 = v133;
  uint64_t v76 = OUTLINED_FUNCTION_8(v74);
  MEMORY[0x1F4188790](v76);
  OUTLINED_FUNCTION_118();
  uint64_t v44 = (uint64_t)v5 + *(int *)(v77 + 56);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v133 - v69, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v78 = OUTLINED_FUNCTION_388();
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v78, v79, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v80 = OUTLINED_FUNCTION_33_0((uint64_t)v5, 1, v37);
  unint64_t v81 = v37;
  if (v87)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v133 - v69, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v75 = v133;
    outlined destroy of SystemUpdateNotice?((uint64_t)v133 - v69, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_33_0(v44, 1, v37);
    if (v87)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_115_3();
      goto LABEL_19;
    }
  }
  else
  {
    MEMORY[0x1F4188790](v80);
    uint64_t v84 = OUTLINED_FUNCTION_465();
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v84, v85, v86);
    OUTLINED_FUNCTION_33_0(v44, 1, v37);
    if (!v87)
    {
      v133[2] = (uint64_t)v133;
      OUTLINED_FUNCTION_5_3();
      uint64_t v129 = v128;
      MEMORY[0x1F4188790](v130);
      v133[1] = (uint64_t)v133;
      OUTLINED_FUNCTION_4_18();
      OUTLINED_FUNCTION_63_0();
      v131();
      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
      OUTLINED_FUNCTION_454();
      uint64_t v44 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v132 = *(void (**)(void))(v129 + 8);
      OUTLINED_FUNCTION_336();
      v132();
      uint64_t v75 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      outlined destroy of SystemUpdateNotice?((uint64_t)v3, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_336();
      v132();
      unint64_t v81 = (unint64_t)v139;
      OUTLINED_FUNCTION_52_0();
      outlined destroy of SystemUpdateNotice?((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_52_0();
      OUTLINED_FUNCTION_115_3();
      if ((v44 & 1) == 0) {
        goto LABEL_25;
      }
LABEL_19:
      uint64_t v82 = &v3[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
      OUTLINED_FUNCTION_2();
      uint64_t v83 = OUTLINED_FUNCTION_220_0();
      swift_unknownObjectRetain();
      specialized ConversationController.migrate(to:with:isUpgrade:)(v5, (void *)v44, 1, v3, v83, v82);
      swift_unknownObjectRelease();
      goto LABEL_20;
    }
    uint64_t v88 = OUTLINED_FUNCTION_388();
    outlined destroy of SystemUpdateNotice?(v88, v89);
    uint64_t v90 = OUTLINED_FUNCTION_68_9();
    outlined destroy of SystemUpdateNotice?(v90, v91);
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_26_2();
    v92();
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_115_3();
LABEL_25:
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v93 = type metadata accessor for Logger();
  __swift_project_value_buffer(v93, (uint64_t)static Logger.conversationController);
  outlined init with copy of Conversation((uint64_t)v138, (uint64_t)v144);
  outlined init with copy of Conversation((uint64_t)v5, (uint64_t)v142);
  char v94 = v3;
  uint64_t v95 = Logger.logObject.getter();
  os_log_type_t v96 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_2_12(v96))
  {
    uint64_t v97 = swift_slowAlloc();
    uint64_t v139 = swift_slowAlloc();
    uint64_t v141 = v139;
    *(_DWORD *)uint64_t v97 = 136315906;
    uint64_t v138 = v95;
    LOBYTE(v140) = v94[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    LODWORD(v137) = v75;
    uint64_t v98 = String.init<A>(reflecting:)();
    uint64_t v140 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v98, v99, (uint64_t *)&v141);
    uint64_t v134 = &v141;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v100 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_476(v100, v101, v102, v103, v104, v105, v106, v107, v133[0]);
    *(_WORD *)(v97 + 12) = v108;
    OUTLINED_FUNCTION_232(v97 + 14);
    MEMORY[0x1F4188790](v109);
    unint64_t v110 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v135 = (char *)v110;
    unint64_t v111 = v146;
    __swift_project_boxed_opaque_existential_1(v144, v145);
    OUTLINED_FUNCTION_204_0();
    OUTLINED_FUNCTION_15_77();
    v112();
    OUTLINED_FUNCTION_448();
    OUTLINED_FUNCTION_47_6();
    outlined destroy of SystemUpdateNotice?((uint64_t)v133 - v110, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_52_0();
    uint64_t v113 = OUTLINED_FUNCTION_429();
    uint64_t v115 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v113, v111, v114);
    OUTLINED_FUNCTION_307_0(v115);
    OUTLINED_FUNCTION_308_0();
    swift_bridgeObjectRelease();
    uint64_t v116 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
    *(_WORD *)(v97 + 22) = 2080;
    MEMORY[0x1F4188790](v116);
    __swift_project_boxed_opaque_existential_1(v142, v143);
    OUTLINED_FUNCTION_204_0();
    OUTLINED_FUNCTION_15_77();
    v117();
    OUTLINED_FUNCTION_448();
    OUTLINED_FUNCTION_46_6();
    outlined destroy of SystemUpdateNotice?((uint64_t)v133 - v110, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v118 = OUTLINED_FUNCTION_429();
    uint64_t v120 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v118, v81, v119);
    OUTLINED_FUNCTION_307_0(v120);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v121 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v142);
    *(_WORD *)(v97 + 32) = 2080;
    MEMORY[0x1F4188790](v121);
    int v122 = (char *)((char *)v133 - v135);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v136, (char *)v133 - v135, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    specialized >> prefix<A>(_:)((uint64_t)v122);
    OUTLINED_FUNCTION_183_2();
    outlined destroy of SystemUpdateNotice?((uint64_t)v122, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v123 = OUTLINED_FUNCTION_69_0();
    uint64_t v126 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v123, v124, v125);
    OUTLINED_FUNCTION_307_0(v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    uint64_t v127 = v138;
    _os_log_impl(&dword_1C2F90000, v138, (os_log_type_t)v137, "%s Unable to migrate active conversation UUID from %s to %s since currently tracking conversation with UUID %s", (uint8_t *)v97, 0x2Au);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v142);
  }
LABEL_20:
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.callCenter(_:mutedTalkingChanged:)()
{
  uint64_t v1 = (void (**)(uint64_t))(v0
                                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  uint64_t result = OUTLINED_FUNCTION_2();
  uint64_t v3 = *v1;
  if (*v1)
  {
    OUTLINED_FUNCTION_101_7();
    uint64_t v4 = OUTLINED_FUNCTION_371_0();
    v3(v4);
    return OUTLINED_FUNCTION_124_5();
  }
  return result;
}

void ConversationController.callCenterAudioRoutesDidChange(_:)()
{
  OUTLINED_FUNCTION_9_83();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v4 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v4 + 16) = xmmword_1C3769620;
  OUTLINED_FUNCTION_109_5(v3);
  uint64_t v5 = OUTLINED_FUNCTION_1_11();
  if (v6(v5))
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TURoute);
    uint64_t v7 = String.init<A>(reflecting:)();
    unint64_t v9 = v8;
  }
  else
  {
    unint64_t v9 = 0xE300000000000000;
    uint64_t v7 = 7104878;
  }
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v4 + 32) = v7;
  *(void *)(v4 + 40) = v9;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_95_7();
  swift_bridgeObjectRelease();
  char v10 = (void (**)(void))(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  OUTLINED_FUNCTION_2();
  uint64_t v11 = *v10;
  if (*v10)
  {
    swift_retain();
    char v12 = (void *)ConversationController.audioRoute.getter();
    v11();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v11);
  }
  OUTLINED_FUNCTION_10_73();
}

void ConversationController.callCenter(_:activitySessionsChangedFor:fromOldConversation:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  swift_getObjectType();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_36_4();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_118();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v11();
  char v12 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_273_1();
  OUTLINED_FUNCTION_3_8();
  v13();
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_63:
    swift_once();
    goto LABEL_8;
  }
  ConversationController.lookupActiveConversation()();
  if (v122)
  {
    uint64_t v106 = v2;
    uint64_t v107 = v5;
    outlined init with take of Notice(&v121, (uint64_t)v118);
    OUTLINED_FUNCTION_9_85(v118, v119);
    OUTLINED_FUNCTION_267_1();
    OUTLINED_FUNCTION_5_3();
    uint64_t v15 = v14;
    MEMORY[0x1F4188790](v16);
    OUTLINED_FUNCTION_15_77();
    v17();
    uint64_t v18 = __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    __int16 v108 = v7;
    MEMORY[0x1F4188790](v18);
    OUTLINED_FUNCTION_15_77();
    v19();
    int v20 = OUTLINED_FUNCTION_418();
    uint64_t v21 = *(void (**)(void))(v15 + 8);
    OUTLINED_FUNCTION_3_8();
    v21();
    OUTLINED_FUNCTION_3_8();
    v21();
    OUTLINED_FUNCTION_109_5(v118);
    uint64_t v22 = OUTLINED_FUNCTION_1_11();
    LOBYTE(v21) = v23(v22);
    outlined init with copy of Conversation((uint64_t)v118, (uint64_t)v117);
    if (v21)
    {
      uint64_t v24 = OUTLINED_FUNCTION_85_9(v117);
      uint64_t v26 = v25(v24);
      uint64_t v27 = specialized Set.count.getter(v26);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
      outlined init with copy of Conversation((uint64_t)v118, (uint64_t)v116);
      os_log_type_t v28 = v7;
      outlined init with copy of Conversation((uint64_t)v7, (uint64_t)v115);
      if (v27 == 1)
      {
        uint64_t v29 = OUTLINED_FUNCTION_85_9(v116);
        v30(v29);
        __swift_project_boxed_opaque_existential_1(v115, v115[3]);
        uint64_t v31 = OUTLINED_FUNCTION_191_3();
        v32(v31);
        uint64_t v33 = OUTLINED_FUNCTION_45_9();
        int v35 = specialized static Set.== infix(_:_:)(v33, v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v116);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v115);
        id v36 = v107;
        if (((v20 | v35) & 1) == 0) {
          goto LABEL_58;
        }
        goto LABEL_12;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
      outlined init with copy of Conversation((uint64_t)v118, (uint64_t)v116);
      os_log_type_t v28 = v7;
      outlined init with copy of Conversation((uint64_t)v7, (uint64_t)v115);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v116);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v115);
    id v36 = v107;
    if ((v20 & 1) == 0)
    {
LABEL_58:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
      goto LABEL_59;
    }
LABEL_12:
    uint64_t v47 = *(void *)&v3[OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults + 8];
    uint64_t ObjectType = swift_getObjectType();
    int v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 568))(ObjectType, v47);
    __swift_project_boxed_opaque_existential_1(v28, v28[3]);
    uint64_t v50 = OUTLINED_FUNCTION_211_2();
    uint64_t v52 = v51(v50);
    uint64_t v53 = specialized Set.count.getter(v52);
    swift_bridgeObjectRelease();
    outlined init with copy of Conversation((uint64_t)v28, (uint64_t)v114);
    char v105 = v20;
    if (v53 == 1
      && (__swift_project_boxed_opaque_existential_1(v114, v114[3]),
          uint64_t v54 = OUTLINED_FUNCTION_211_2(),
          v55(v54),
          specialized Collection.first.getter(),
          unint64_t v57 = v56,
          swift_bridgeObjectRelease(),
          v57))
    {
      id v58 = objc_msgSend(v57, sel_capabilities);

      unsigned int v59 = objc_msgSend(v58, sel_isUPlusOneScreenShareAvailable);
    }
    else
    {
      unsigned int v59 = 0;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
    char v60 = ConversationController.isOneToOneModeEnabled.getter();
    __swift_project_boxed_opaque_existential_1(v118, v119);
    uint64_t v61 = OUTLINED_FUNCTION_435();
    uint64_t v63 = Conversation.currentSharePlayActivity.getter(v61, v62);
    if (!v63) {
      goto LABEL_24;
    }
    uint64_t v64 = (void *)v63;
    TUConversationActivitySession.generateType.getter((char *)&v121);
    if (v121 == 4)
    {

      if (v49 & v59)
      {
LABEL_24:
        char v65 = 0;
LABEL_25:
        v3[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeDisabledByActivity] = v65;
        if ((v60 & 1) == (ConversationController.isOneToOneModeEnabled.getter() & 1)) {
          goto LABEL_45;
        }
        if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0)
        {
LABEL_38:
          if (one-time initialization token for conversationController != -1) {
            swift_once();
          }
          uint64_t v74 = type metadata accessor for Logger();
          __swift_project_value_buffer(v74, (uint64_t)static Logger.conversationController);
          uint64_t v75 = v3;
          uint64_t v76 = Logger.logObject.getter();
          os_log_type_t v77 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v76, v77))
          {
            uint64_t v78 = (uint8_t *)OUTLINED_FUNCTION_37();
            *(void *)&long long v109 = OUTLINED_FUNCTION_9_0();
            *(_DWORD *)uint64_t v78 = 136315138;
            LOBYTE(v112) = ConversationController.isOneToOneModeEnabled.getter() & 1;
            uint64_t v79 = String.init<A>(reflecting:)();
            uint64_t v112 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v80, (uint64_t *)&v109);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2F90000, v76, v77, "One-to-one mode changed to %s due to activity sessions change", v78, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_3();
            OUTLINED_FUNCTION_3();
          }
          else
          {
          }
          id v36 = v107;
          unint64_t v81 = &v75[OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange];
          OUTLINED_FUNCTION_2();
          uint64_t v82 = *(void (**)(void, uint64_t))v81;
          if (*(void *)v81)
          {
            swift_retain();
            char v83 = ConversationController.isOneToOneModeEnabled.getter();
            v82(v83 & 1, 1);
            uint64_t v84 = OUTLINED_FUNCTION_102();
            outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v84);
          }
LABEL_45:
          unint64_t v113 = MEMORY[0x1E4FBC860];
          uint64_t v85 = v36[4];
          uint64_t v86 = (void *)OUTLINED_FUNCTION_210_2();
          OUTLINED_FUNCTION_69_10(v86, v87);
          uint64_t v88 = *(uint64_t (**)(uint64_t))(v85 + 320);
          uint64_t v89 = OUTLINED_FUNCTION_447();
          uint64_t v90 = v88(v89);
          uint64_t v91 = specialized Set.count.getter(v90);
          swift_bridgeObjectRelease();
          if (v91)
          {
            uint64_t v92 = OUTLINED_FUNCTION_447();
            uint64_t v93 = v88(v92);
            specialized Array.append<A>(contentsOf:)(v93);
          }
          __swift_project_boxed_opaque_existential_1(v36, v36[3]);
          uint64_t v94 = OUTLINED_FUNCTION_1_11();
          os_log_type_t v96 = (void *)v95(v94);
          uint64_t v97 = v108;
          if (v96)
          {
            id v98 = v96;
            MEMORY[0x1C87733A0]();
            unint64_t v99 = *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (*(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v99 >> 1)
            {
              OUTLINED_FUNCTION_57_5(v99);
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            OUTLINED_FUNCTION_102();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          uint64_t v100 = (void (**)(unint64_t))&v3[OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange];
          OUTLINED_FUNCTION_2();
          uint64_t v101 = *v100;
          unint64_t v102 = v113;
          if (!*v100) {
            goto LABEL_56;
          }
          if (v113 >> 62)
          {
            OUTLINED_FUNCTION_421();
            _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v101);
            swift_bridgeObjectRetain();
            uint64_t v104 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v104) {
              goto LABEL_55;
            }
          }
          else
          {
            uint64_t v103 = *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            if (v103)
            {
LABEL_55:
              v101(v102);
              outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v101);
              uint64_t v97 = v108;
LABEL_56:
              swift_bridgeObjectRelease();
              if (v105) {
                ConversationController.updateRemoteParticipantsStates(with:)(v97);
              }
              goto LABEL_58;
            }
          }
          swift_bridgeObjectRelease();
          unint64_t v102 = 0;
          goto LABEL_55;
        }
        ConversationController.remoteOneToOneParticipant.getter();
        type metadata accessor for Participant(0);
        uint64_t v66 = OUTLINED_FUNCTION_85_2();
        OUTLINED_FUNCTION_33_0(v66, v67, v68);
        if (v69)
        {
          outlined destroy of SystemUpdateNotice?(v106, &demangling cache variable for type metadata for Participant?);
        }
        else
        {
          Participant.videoInfo.getter();
          _s15ConversationKit11ParticipantVWOhTm_13(v106, (void (*)(void))type metadata accessor for Participant);
          outlined init with take of AspectRatio?((uint64_t)v120, (uint64_t)&v121, &demangling cache variable for type metadata for Participant.VideoInfo?);
          if ((void)v121)
          {
            specialized Dictionary.subscript.getter();
            outlined release of LinearGradient((uint64_t)v120);
            if (*((void *)&v110 + 1))
            {
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
              OUTLINED_FUNCTION_89();
              type metadata accessor for RemoteParticipantVideoProvider();
              if (swift_dynamicCast())
              {
                uint64_t v70 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v112) + 0x130))();
                if (v70)
                {
                  uint64_t v71 = v70;
                  id v72 = objc_msgSend(v70, sel_remoteVideoAttributes);
                  if (v72)
                  {
                    unint64_t v73 = v72;
                    ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)();
                  }
                  else
                  {
                  }
                }
                else
                {
                }
              }
              goto LABEL_38;
            }
            goto LABEL_37;
          }
        }
        uint64_t v111 = 0;
        long long v109 = 0u;
        long long v110 = 0u;
LABEL_37:
        outlined destroy of SystemUpdateNotice?((uint64_t)&v109, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        goto LABEL_38;
      }
    }
    else
    {
      TUConversationActivitySession.generateType.getter((char *)&v121);

      if (v121 != 5 || (v49 & v59) != 0) {
        goto LABEL_24;
      }
    }
    char v65 = 1;
    goto LABEL_25;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)&v121, &demangling cache variable for type metadata for Conversation?);
  if (one-time initialization token for conversationController != -1) {
    goto LABEL_63;
  }
LABEL_8:
  uint64_t v37 = type metadata accessor for Logger();
  __swift_project_value_buffer(v37, (uint64_t)static Logger.conversationController);
  int v38 = v3;
  uint64_t v39 = (void *)Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_105(v40))
  {
    uint64_t v41 = (_DWORD *)OUTLINED_FUNCTION_37();
    *(void *)&long long v121 = OUTLINED_FUNCTION_9_0();
    *uint64_t v41 = 136315138;
    uint64_t v42 = v38;
    uint64_t v43 = String.init<A>(reflecting:)();
    v120[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, (uint64_t *)&v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34_6(&dword_1C2F90000, v45, v46, "Unable to lookup active conversation in CallCenterProviderDelegate stateChangedFor: callback - %s");
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
LABEL_59:
  OUTLINED_FUNCTION_28();
}

void ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:)()
{
}

void ConversationController.callCenter(_:noticePosted:in:fromParticipant:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v4 = v0;
  uint64_t v152 = v5;
  uint64_t v155 = v6;
  id v148 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_2_3();
  uint64_t v142 = v10;
  uint64_t v11 = OUTLINED_FUNCTION_128_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_10_5();
  uint64_t v150 = v13;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v141 - v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_16_6();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_42();
  uint64_t v147 = v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v21 = OUTLINED_FUNCTION_8(v20);
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_80_7();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_8_4();
  uint64_t v153 = v23;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_8_4();
  uint64_t v151 = v25;
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v26);
  os_log_type_t v28 = (char *)&v141 - v27;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v30();
  uint64_t v31 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_4_1();
  v32();
  if (v31)
  {
    uint64_t v143 = v3;
    if (one-time initialization token for conversationController == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v33 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_98_0(v33, (uint64_t)static Logger.conversationController);
  id v34 = v4;
  uint64_t v154 = v31;
  int v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  BOOL v37 = OUTLINED_FUNCTION_6_0(v36);
  uint64_t v149 = v11;
  uint64_t v141 = v16;
  if (v37)
  {
    uint64_t v38 = OUTLINED_FUNCTION_15_1();
    *(void *)&long long v159 = OUTLINED_FUNCTION_14_3();
    *(_DWORD *)uint64_t v38 = 136315394;
    v158[0] = v34;
    uint64_t v39 = String.init<A>(reflecting:)();
    v158[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, (uint64_t *)&v159);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    v158[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002ELL, 0x80000001C37B9010, (uint64_t *)&v159);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_205(&dword_1C2F90000, v35, v41, "ConversationController(%s recieved callback %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v42 = (void *)v155;
  ConversationController.lookupActiveConversation()();
  if (v160)
  {
    id v145 = v34;
    double v144 = v28;
    uint64_t v146 = v1;
    outlined init with take of Notice(&v159, (uint64_t)v158);
    OUTLINED_FUNCTION_9_85(v158, v158[3]);
    OUTLINED_FUNCTION_5_3();
    uint64_t v44 = v43;
    MEMORY[0x1F4188790](v45);
    OUTLINED_FUNCTION_15_77();
    v46();
    __swift_project_boxed_opaque_existential_1(v42, v42[3]);
    OUTLINED_FUNCTION_248_2();
    MEMORY[0x1F4188790](v47);
    OUTLINED_FUNCTION_8_11();
    OUTLINED_FUNCTION_15_77();
    v48();
    char v49 = OUTLINED_FUNCTION_167_1();
    uint64_t v50 = *(void (**)(void))(v44 + 8);
    OUTLINED_FUNCTION_3_8();
    v50();
    OUTLINED_FUNCTION_3_8();
    v50();
    if (v49)
    {
      uint64_t v51 = (uint64_t)v144;
      uint64_t v52 = v149;
      __swift_storeEnumTagSinglePayload((uint64_t)v144, 1, 1, v149);
      uint64_t v53 = v151;
      id v54 = v145;
      ConversationController.activeParticipant(from:in:)(v152, v151);
      outlined destroy of SystemUpdateNotice?(v51, &demangling cache variable for type metadata for Participant?);
      OUTLINED_FUNCTION_33_0(v53, 1, v52);
      if (v55)
      {
        outlined destroy of SystemUpdateNotice?(v53, &demangling cache variable for type metadata for Participant?);
        uint64_t v56 = (uint64_t)v54 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
        OUTLINED_FUNCTION_2();
        _s15ConversationKit11ParticipantVWOcTm_19(v56, v51);
      }
      else
      {
        _s15ConversationKit11ParticipantVWObTm_6(v53, v147);
        uint64_t v62 = OUTLINED_FUNCTION_45_4();
        _s15ConversationKit11ParticipantVWObTm_6(v62, v63);
      }
      uint64_t v64 = v146;
      uint64_t v65 = v150;
      OUTLINED_FUNCTION_236_0(v51);
      uint64_t v66 = v153;
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v51, v153, &demangling cache variable for type metadata for Participant?);
      OUTLINED_FUNCTION_33_0(v66, 1, v52);
      if (v55)
      {
        outlined destroy of SystemUpdateNotice?(v66, &demangling cache variable for type metadata for Participant?);
        uint64_t v67 = (void *)OUTLINED_FUNCTION_300_1();
        os_log_type_t v68 = static os_log_type_t.default.getter();
        if (OUTLINED_FUNCTION_12(v68))
        {
          char v69 = (_WORD *)OUTLINED_FUNCTION_8_0();
          OUTLINED_FUNCTION_23_1(v69);
          OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v70, v71, "Unable to obtain participant associated with posted notice");
          OUTLINED_FUNCTION_3();
        }

        uint64_t v72 = v51;
      }
      else
      {
        uint64_t v73 = OUTLINED_FUNCTION_34_9();
        _s15ConversationKit11ParticipantVWObTm_6(v73, v74);
        id v75 = v148;
        id v76 = objc_msgSend(v148, sel_session);
        id v77 = objc_msgSend(v76, sel_activity);

        unsigned int v78 = objc_msgSend(v77, sel_isScreenSharingActivity);
        if (v78 && objc_msgSend(v75, sel_sessionEventType) == (id)12)
        {
          outlined init with copy of Conversation((uint64_t)v158, (uint64_t)v157);
          uint64_t v79 = (uint64_t)v141;
          _s15ConversationKit11ParticipantVWOcTm_19(v64, (uint64_t)v141);
          id v80 = v145;
          id v81 = v75;
          uint64_t v82 = v80;
          id v83 = v81;
          uint64_t v84 = OUTLINED_FUNCTION_300_1();
          int v85 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v84, (os_log_type_t)v85))
          {
            LODWORD(v155) = v85;
            uint64_t v86 = swift_slowAlloc();
            uint64_t v154 = swift_slowAlloc();
            uint64_t v156 = v154;
            *(_DWORD *)uint64_t v86 = 136315906;
            outlined init with copy of Conversation((uint64_t)v157, (uint64_t)&v159);
            uint64_t v87 = specialized >> prefix<A>(_:)((uint64_t)&v159);
            unint64_t v89 = v88;
            outlined destroy of SystemUpdateNotice?((uint64_t)&v159, &demangling cache variable for type metadata for Conversation?);
            *(void *)&long long v159 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v87, v89, &v156);
            OUTLINED_FUNCTION_216_3();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v157);
            *(_WORD *)(v86 + 12) = 2080;
            uint64_t v90 = v143;
            _s15ConversationKit11ParticipantVWOcTm_19(v79, v143);
            OUTLINED_FUNCTION_236_0(v90);
            uint64_t v91 = specialized >> prefix<A>(_:)();
            unint64_t v93 = v92;
            outlined destroy of SystemUpdateNotice?(v90, &demangling cache variable for type metadata for Participant?);
            *(void *)&long long v159 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v91, v93, &v156);
            OUTLINED_FUNCTION_216_3();
            swift_bridgeObjectRelease();
            _s15ConversationKit11ParticipantVWOhTm_13(v79, (void (*)(void))type metadata accessor for Participant);
            OUTLINED_FUNCTION_414();
            type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationNotice);
            id v94 = v83;
            uint64_t v95 = String.init<A>(reflecting:)();
            uint64_t v97 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v95, v96, &v156);
            OUTLINED_FUNCTION_292_1(v97);

            swift_bridgeObjectRelease();
            *(_WORD *)(v86 + 32) = v79;
            if (v82[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96])
            {
              uint64_t v98 = 7104878;
              unint64_t v99 = 0xE300000000000000;
            }
            else
            {
              uint64_t v128 = OUTLINED_FUNCTION_63_9((uint64_t)&v82[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes]);
              OUTLINED_FUNCTION_456(v128, v129);
              uint64_t v98 = String.init<A>(reflecting:)();
              unint64_t v99 = v130;
            }
            uint64_t v131 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v98, v99, &v156);
            OUTLINED_FUNCTION_217_2(v131);

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2F90000, v84, (os_log_type_t)v155, "Delaying call to sessionActionNoticePosted for %s, %s, %s, deviceFamily: %s", (uint8_t *)v86, 0x2Au);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_3();
            OUTLINED_FUNCTION_3();
          }
          else
          {

            _s15ConversationKit11ParticipantVWOhTm_13(v79, (void (*)(void))type metadata accessor for Participant);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v157);
          }
          outlined destroy of SystemUpdateNotice?((uint64_t)v144, &demangling cache variable for type metadata for Participant?);
          uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
          uint64_t v133 = v142;
          uint64_t v134 = v142 + *(int *)(v132 + 48);
          uint64_t v135 = *(int *)(v132 + 64);
          outlined init with copy of Conversation((uint64_t)v158, v142);
          _s15ConversationKit11ParticipantVWObTm_6(v146, v134);
          *(void *)(v133 + v135) = v83;
          OUTLINED_FUNCTION_31_13();
          __swift_storeEnumTagSinglePayload(v136, v137, v138, v132);
          uint64_t v139 = (uint64_t)&v82[OBJC_IVAR____TtC15ConversationKit22ConversationController_pendingNoticeWaitingForRemoteScreenShareAttributes];
          OUTLINED_FUNCTION_6_1();
          id v140 = v83;
          outlined assign with take of Participant?(v133, v139, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
          goto LABEL_38;
        }
        outlined init with copy of Conversation((uint64_t)v158, (uint64_t)v157);
        _s15ConversationKit11ParticipantVWOcTm_19(v64, v65);
        id v100 = v145;
        id v101 = v75;
        unint64_t v102 = v100;
        id v103 = v101;
        uint64_t v104 = OUTLINED_FUNCTION_300_1();
        int v105 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v104, (os_log_type_t)v105))
        {
          LODWORD(v154) = v105;
          uint64_t v106 = swift_slowAlloc();
          uint64_t v155 = swift_slowAlloc();
          uint64_t v156 = v155;
          *(_DWORD *)uint64_t v106 = 136315906;
          outlined init with copy of Conversation((uint64_t)v157, (uint64_t)&v159);
          uint64_t v107 = specialized >> prefix<A>(_:)((uint64_t)&v159);
          unint64_t v109 = v108;
          outlined destroy of SystemUpdateNotice?((uint64_t)&v159, &demangling cache variable for type metadata for Conversation?);
          *(void *)&long long v159 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v107, v109, &v156);
          OUTLINED_FUNCTION_216_3();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v157);
          *(_WORD *)(v106 + 12) = 2080;
          uint64_t v110 = v143;
          _s15ConversationKit11ParticipantVWOcTm_19(v65, v143);
          OUTLINED_FUNCTION_236_0(v110);
          specialized >> prefix<A>(_:)();
          outlined destroy of SystemUpdateNotice?(v110, &demangling cache variable for type metadata for Participant?);
          uint64_t v111 = OUTLINED_FUNCTION_269_1();
          *(void *)&long long v159 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v111, v112, v113);
          OUTLINED_FUNCTION_216_3();
          swift_bridgeObjectRelease();
          _s15ConversationKit11ParticipantVWOhTm_13(v65, (void (*)(void))type metadata accessor for Participant);
          OUTLINED_FUNCTION_414();
          type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationNotice);
          id v114 = v103;
          uint64_t v115 = String.init<A>(reflecting:)();
          uint64_t v117 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v115, v116, &v156);
          OUTLINED_FUNCTION_292_1(v117);

          swift_bridgeObjectRelease();
          *(_WORD *)(v106 + 32) = v65;
          if (v102[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96])
          {
            uint64_t v118 = 7104878;
            unint64_t v119 = 0xE300000000000000;
          }
          else
          {
            uint64_t v120 = OUTLINED_FUNCTION_63_9((uint64_t)&v102[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes]);
            OUTLINED_FUNCTION_456(v120, v121);
            uint64_t v118 = String.init<A>(reflecting:)();
            unint64_t v119 = v122;
          }
          os_log_type_t v123 = v154;
          uint64_t v124 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v118, v119, &v156);
          OUTLINED_FUNCTION_217_2(v124);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v104, v123, "Calling sessionActionNoticePosted for %s, %s, %s, deviceFamily: %s", (uint8_t *)v106, 0x2Au);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_3();
          OUTLINED_FUNCTION_3();
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v157);
          _s15ConversationKit11ParticipantVWOhTm_13(v65, (void (*)(void))type metadata accessor for Participant);
        }
        uint64_t v125 = &v102[OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted];
        OUTLINED_FUNCTION_123_4();
        uint64_t v126 = *(void (**)(void *, uint64_t, id, void, uint64_t))v125;
        if (!*(void *)v125)
        {
          _s15ConversationKit11ParticipantVWOhTm_13(v146, (void (*)(void))type metadata accessor for Participant);
          outlined destroy of SystemUpdateNotice?((uint64_t)v144, &demangling cache variable for type metadata for Participant?);
LABEL_38:
          swift_endAccess();
          goto LABEL_39;
        }
        swift_endAccess();
        swift_retain();
        uint64_t v127 = v146;
        v126(v158, v146, v103, 0, 1);
        OUTLINED_FUNCTION_124_5();
        _s15ConversationKit11ParticipantVWOhTm_13(v127, (void (*)(void))type metadata accessor for Participant);
        uint64_t v72 = (uint64_t)v144;
      }
      outlined destroy of SystemUpdateNotice?(v72, &demangling cache variable for type metadata for Participant?);
    }
LABEL_39:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
    goto LABEL_40;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)&v159, &demangling cache variable for type metadata for Conversation?);
  unint64_t v57 = (void *)OUTLINED_FUNCTION_300_1();
  os_log_type_t v58 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_12(v58))
  {
    unsigned int v59 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_23_1(v59);
    OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v60, v61, "Unable to lookup active conversation in CallCenterProviderDelegate noticePosted");
    OUTLINED_FUNCTION_3();
  }

LABEL_40:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:launchStateChanged:activitySession:conversation:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v10();
  uint64_t v11 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_4_1();
  v12();
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_27:
    swift_once();
    goto LABEL_4;
  }
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode)) {
    goto LABEL_25;
  }
  os_log_t v84 = v8;
  if (one-time initialization token for conversationControls != -1) {
    goto LABEL_27;
  }
LABEL_4:
  uint64_t v13 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_98_0(v13, (uint64_t)static Logger.conversationControls);
  id v14 = v6;
  uint64_t v85 = v11;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  uint64_t v86 = v4;
  id v82 = v14;
  if (OUTLINED_FUNCTION_6_0(v16))
  {
    uint64_t v17 = OUTLINED_FUNCTION_15_1();
    v93[0] = OUTLINED_FUNCTION_14_3();
    *(_DWORD *)uint64_t v17 = 136315394;
    type metadata accessor for TUConversationActivitySessionApplicationState(0);
    uint64_t v18 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivitySession);
    id v20 = v14;
    uint64_t v21 = String.init<A>(reflecting:)();
    v90[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_205(&dword_1C2F90000, v15, v23, "Handling launchStateChanged notice with state:%s for session:%s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  ConversationController.lookupActiveConversation()();
  if (v91)
  {
    id v81 = v2;
    OUTLINED_FUNCTION_152_3();
    OUTLINED_FUNCTION_9_85(v93, v93[3]);
    OUTLINED_FUNCTION_267_1();
    unint64_t v83 = v24;
    OUTLINED_FUNCTION_5_3();
    uint64_t v26 = v25;
    uint64_t v28 = *(void *)(v27 + 64);
    MEMORY[0x1F4188790](v29);
    OUTLINED_FUNCTION_15_77();
    v30();
    uint64_t v31 = __swift_project_boxed_opaque_existential_1(v86, v86[3]);
    v80[0] = v28;
    MEMORY[0x1F4188790](v31);
    OUTLINED_FUNCTION_15_77();
    v32();
    char v33 = static UUID.== infix(_:_:)();
    id v34 = *(void (**)(void))(v26 + 8);
    OUTLINED_FUNCTION_210_2();
    OUTLINED_FUNCTION_12_1();
    v34();
    v80[1] = v26 + 8;
    OUTLINED_FUNCTION_12_1();
    v34();
    if (v33)
    {
      int v35 = (char *)v81 + OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged;
      OUTLINED_FUNCTION_2();
      os_log_type_t v36 = *(void (**)(void *, void *, os_log_t))v35;
      if (*(void *)v35)
      {
        uint64_t v91 = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivitySession);
        unint64_t v92 = &protocol witness table for TUConversationActivitySession;
        v90[0] = v82;
        id v37 = v82;
        uint64_t v38 = OUTLINED_FUNCTION_68_9();
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v38);
        v36(v86, v90, v84);
        uint64_t v39 = OUTLINED_FUNCTION_68_9();
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v39);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
LABEL_24:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
        goto LABEL_25;
      }
      uint64_t v71 = v81;
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v72 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v46, v72))
      {

        goto LABEL_24;
      }
      uint64_t v73 = (_DWORD *)OUTLINED_FUNCTION_37();
      unint64_t v88 = (void *)OUTLINED_FUNCTION_9_0();
      *uint64_t v73 = 136315138;
      uint64_t v74 = *(void *)v35;
      if (*(void *)v35)
      {
        uint64_t v75 = *((void *)v35 + 1);
        uint64_t v76 = OUTLINED_FUNCTION_26();
        *(void *)(v76 + 16) = v74;
        *(void *)(v76 + 24) = v75;
        v90[0] = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Activity, @unowned TUConversationActivitySessionApplicationState) -> ();
        v90[1] = v76;
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_:_:_:));
        uint64_t v77 = String.init<A>(reflecting:)();
        unint64_t v79 = v78;
      }
      else
      {
        unint64_t v79 = 0xE300000000000000;
        uint64_t v77 = 7104878;
      }
      v90[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v79, (uint64_t *)&v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_22(&dword_1C2F90000, v46, v72, "Unable to call appLaunchStateChanged handler: %s");
      OUTLINED_FUNCTION_52_2();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
      outlined init with copy of Conversation((uint64_t)v93, (uint64_t)v90);
      outlined init with copy of Conversation((uint64_t)v86, (uint64_t)v89);
      int v45 = v85;
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_12(v47))
      {
        uint64_t v48 = OUTLINED_FUNCTION_15_1();
        uint64_t v86 = (void *)OUTLINED_FUNCTION_14_3();
        id v81 = v80;
        unint64_t v88 = v86;
        *(_DWORD *)uint64_t v48 = 136315394;
        OUTLINED_FUNCTION_459(v48 + 4);
        uint64_t v49 = v80[0];
        MEMORY[0x1F4188790](v50);
        unint64_t v83 = (v49 + 15) & 0xFFFFFFFFFFFFFFF0;
        unint64_t v51 = (unint64_t)v92;
        __swift_project_boxed_opaque_existential_1(v90, v91);
        LODWORD(v85) = v45;
        OUTLINED_FUNCTION_102();
        OUTLINED_FUNCTION_15_77();
        v52();
        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
        os_log_t v84 = v46;
        OUTLINED_FUNCTION_210_2();
        dispatch thunk of CustomStringConvertible.description.getter();
        OUTLINED_FUNCTION_46_6();
        OUTLINED_FUNCTION_336();
        v34();
        uint64_t v53 = OUTLINED_FUNCTION_306_1();
        uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v51, v54);
        OUTLINED_FUNCTION_308_0();
        swift_bridgeObjectRelease();
        uint64_t v55 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
        OUTLINED_FUNCTION_476(v55, v56, v57, v58, v59, v60, v61, v62, v80[0]);
        uint64_t v63 = (uint8_t *)v48;
        *(_WORD *)(v48 + 12) = v64;
        OUTLINED_FUNCTION_459(v48 + 14);
        MEMORY[0x1F4188790](v65);
        unint64_t v66 = v89[4];
        __swift_project_boxed_opaque_existential_1(v89, v89[3]);
        OUTLINED_FUNCTION_203_1();
        OUTLINED_FUNCTION_15_77();
        v67();
        OUTLINED_FUNCTION_12_13();
        dispatch thunk of CustomStringConvertible.description.getter();
        OUTLINED_FUNCTION_238_0();
        OUTLINED_FUNCTION_344();
        OUTLINED_FUNCTION_336();
        v34();
        uint64_t v68 = OUTLINED_FUNCTION_306_1();
        uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v66, v69);
        OUTLINED_FUNCTION_308_0();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
        os_log_t v70 = v84;
        _os_log_impl(&dword_1C2F90000, v84, (os_log_type_t)v85, "activeConversationUUID:%s doesn't match conversationUUID:%s", v63, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
        OUTLINED_FUNCTION_3();

        goto LABEL_24;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
    }

    goto LABEL_24;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v90, &demangling cache variable for type metadata for Conversation?);
  unint64_t v40 = (void *)Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_12(v41))
  {
    uint64_t v42 = (_WORD *)OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_23_1(v42);
    OUTLINED_FUNCTION_1_16(&dword_1C2F90000, v43, v44, "Unable to lookup active conversation in CallCenterProviderDelegate launchStateChanged");
    OUTLINED_FUNCTION_3();
  }

LABEL_25:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:audioPausedChangedFor:remoteParticipantWithIdentifier:updatedAudioPaused:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v51 = v0;
  char v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = OUTLINED_FUNCTION_276_1();
  OUTLINED_FUNCTION_5_3();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_80_7();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_482(v15, v16, v17, v18, v19, v20, v21, v22, v48);
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_62();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v24();
  uint64_t v25 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_1_19();
  v26();
  if (v25)
  {
    uint64_t v25 = v12;
    if (one-time initialization token for conversationKit == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v27 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v27 + 16) = xmmword_1C3769620;
  char v49 = v5;
  uint64_t v28 = String.init<A>(reflecting:)();
  uint64_t v30 = v29;
  *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v31 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v27 + 64) = v31;
  *(void *)(v27 + 32) = v28;
  *(void *)(v27 + 40) = v30;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  unint64_t v32 = (uint64_t *)(v51 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2();
  uint64_t v33 = *v32;
  uint64_t v34 = *(void *)(v33 + 16);
  if (v34)
  {
    OUTLINED_FUNCTION_22_0();
    uint64_t v36 = v33 + v35;
    uint64_t v37 = *(void *)(v25 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v36, v3);
      uint64_t v38 = v3 + *(int *)(v10 + 28);
      if (*(void *)v38)
      {
        if ((*(unsigned char *)(v38 + 16) & 1) == 0 && *(void *)(v38 + 8) == v7) {
          break;
        }
      }
      _s15ConversationKit11ParticipantVWOhTm_13(v3, (void (*)(void))type metadata accessor for Participant);
      v36 += v37;
      if (!--v34) {
        goto LABEL_11;
      }
    }
    uint64_t v40 = OUTLINED_FUNCTION_194_1();
    _s15ConversationKit11ParticipantVWObTm_6(v40, v41);
    uint64_t v39 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v39 = 1;
  }
  __swift_storeEnumTagSinglePayload(v2, v39, 1, v10);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_0(v2, 1, v10);
  if (v42)
  {
    outlined destroy of SystemUpdateNotice?(v2, &demangling cache variable for type metadata for Participant?);
    static os_log_type_t.error.getter();
    uint64_t v43 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v43 + 16) = xmmword_1C3769620;
    uint64_t v44 = String.init<A>(reflecting:)();
    *(void *)(v43 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v43 + 64) = v31;
    *(void *)(v43 + 32) = v44;
    *(void *)(v43 + 40) = v45;
    OUTLINED_FUNCTION_317_0();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s15ConversationKit11ParticipantVWObTm_6(v2, v50);
    uint64_t v46 = (void (**)(uint64_t, void))(v51
                                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
    OUTLINED_FUNCTION_123_4();
    os_log_type_t v47 = *v46;
    if (*v46)
    {
      swift_endAccess();
      swift_retain();
      v47(v50, v49 & 1);
      OUTLINED_FUNCTION_186_4();
      _s15ConversationKit11ParticipantVWOhTm_13(v50, (void (*)(void))type metadata accessor for Participant);
    }
    else
    {
      _s15ConversationKit11ParticipantVWOhTm_13(v50, (void (*)(void))type metadata accessor for Participant);
      swift_endAccess();
    }
  }
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:updatedGroupNameForConversation:withGroupPhotoData:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v27 = v7;
  swift_getObjectType();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_61();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v9();
  char v10 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_228_0();
  OUTLINED_FUNCTION_29_4();
  v11();
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_201_2();
  if (!v28[3])
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v28, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_8:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v22 = (__n128 *)OUTLINED_FUNCTION_25_15();
      OUTLINED_FUNCTION_178_3(v22, (__n128)xmmword_1C3769620);
      OUTLINED_FUNCTION_367_0();
      OUTLINED_FUNCTION_274_0();
      v22[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
      unint64_t v23 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_403(v23);
      OUTLINED_FUNCTION_13_51();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
LABEL_11:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v24 = v6;
  uint64_t v25 = v4;
  OUTLINED_FUNCTION_200_2();
  OUTLINED_FUNCTION_9_85(v29, v29[3]);
  uint64_t v26 = &v24;
  OUTLINED_FUNCTION_5_3();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_15_77();
  v15();
  uint64_t v16 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_374_0();
  OUTLINED_FUNCTION_15_77();
  v17();
  char v18 = static UUID.== infix(_:_:)();
  uint64_t v19 = *(void (**)(void))(v13 + 8);
  OUTLINED_FUNCTION_3_8();
  v19();
  OUTLINED_FUNCTION_3_8();
  v19();
  OUTLINED_FUNCTION_177_1();
  if (v18)
  {
    uint64_t v20 = (void (**)(void *, uint64_t, uint64_t))(v2
                                                           + OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
    OUTLINED_FUNCTION_2();
    uint64_t v21 = *v20;
    if (*v20)
    {
      OUTLINED_FUNCTION_101_7();
      v21(v27, v24, v25);
      OUTLINED_FUNCTION_186_4();
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
LABEL_9:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:remoteScreenShareAttributesChanged:isLocallySharing:)(uint64_t a1, uint64_t a2, int a3)
{
}

void ConversationController.callCenter(_:buzzedMemberFor:member:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  swift_getObjectType();
  OUTLINED_FUNCTION_288_0();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v8();
  char v9 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_29_4();
  v10();
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_201_2();
  if (!v23)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v22, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_7:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v19 = (__n128 *)OUTLINED_FUNCTION_25_15();
      OUTLINED_FUNCTION_178_3(v19, (__n128)xmmword_1C3769620);
      OUTLINED_FUNCTION_150_7();
      OUTLINED_FUNCTION_193_3();
      v19[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
      unint64_t v20 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_192_2(v20);
      OUTLINED_FUNCTION_93_4();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
LABEL_10:
    swift_once();
    goto LABEL_7;
  }
  v21[1] = v4;
  v21[2] = v2;
  outlined init with take of Notice(&v22, (uint64_t)v24);
  OUTLINED_FUNCTION_9_85(v24, v24[3]);
  v21[3] = v21;
  OUTLINED_FUNCTION_5_3();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_194_3();
  OUTLINED_FUNCTION_15_77();
  v14();
  uint64_t v15 = __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_15_77();
  v16();
  char v17 = static UUID.== infix(_:_:)();
  char v18 = *(void (**)(void))(v12 + 8);
  OUTLINED_FUNCTION_29_4();
  v18();
  OUTLINED_FUNCTION_29_4();
  v18();
  OUTLINED_FUNCTION_10_80();
  if (v17) {
    ConversationController.updateBuzzedMember(_:)();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
LABEL_8:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:collaborationsChangedFor:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  swift_getObjectType();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_64();
  char v6 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v7();
  _dispatchPreconditionTest(_:)();
  uint64_t v8 = OUTLINED_FUNCTION_21_2();
  v9(v8);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_201_2();
  if (!v27[3])
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v27, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_10:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v24 = (__n128 *)OUTLINED_FUNCTION_25_15();
      OUTLINED_FUNCTION_178_3(v24, (__n128)xmmword_1C3769620);
      String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_28_33();
      v24[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
      unint64_t v25 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_347(v25);
      OUTLINED_FUNCTION_227_1();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
LABEL_13:
    swift_once();
    goto LABEL_10;
  }
  v26[0] = v2;
  OUTLINED_FUNCTION_20_59();
  v26[1] = v26;
  OUTLINED_FUNCTION_5_3();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_15_77();
  v13();
  uint64_t v14 = __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_15_77();
  v15();
  char v16 = static UUID.== infix(_:_:)();
  char v17 = *(void (**)(void))(v11 + 8);
  OUTLINED_FUNCTION_139();
  v17();
  OUTLINED_FUNCTION_139();
  v17();
  OUTLINED_FUNCTION_10_80();
  if (v16)
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v18 = OUTLINED_FUNCTION_20();
    uint64_t v19 = v26[0];
    swift_unknownObjectWeakInit();
    OUTLINED_FUNCTION_50();
    uint64_t v21 = *(void (**)(unsigned char *, void (*)(), uint64_t))(v20 + 144);
    swift_retain();
    v21(v28, partial apply for closure #1 in ConversationController.callCenter(_:collaborationsChangedFor:), v18);
    swift_release_n();
    long long v22 = (void (**)(void))(v19
                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
    OUTLINED_FUNCTION_2();
    uint64_t v23 = *v22;
    if (*v22)
    {
      OUTLINED_FUNCTION_101_7();
      v23(0);
      OUTLINED_FUNCTION_186_4();
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
LABEL_11:
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConversationController.callCenter(_:collaborationsChangedFor:)(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8776240](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = (void (**)(void))(v2
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
    swift_beginAccess();
    uint64_t v5 = *v4;
    if (*v4)
    {
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v5);

      v5(0);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v5);
    }
    else
    {
    }
  }
}

void ConversationController.callCenter(_:addedCollaborationNotice:forParticipant:in:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v5 = v0;
  uint64_t v7 = v6;
  uint64_t v60 = v8;
  uint64_t v10 = v9;
  uint64_t ObjectType = (uint64_t *)swift_getObjectType();
  uint64_t v62 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_80_7();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_42();
  uint64_t v59 = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v15 = OUTLINED_FUNCTION_8(v14);
  MEMORY[0x1F4188790](v15);
  uint64_t v61 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_1();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_147_5();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_475();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_62();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v2 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v20();
  char v21 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_4_1();
  v22();
  if (v21)
  {
    if (one-time initialization token for shared == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  OUTLINED_FUNCTION_50();
  if ((*(uint64_t (**)(void))(v23 + 272))())
  {
    ConversationController.lookupActiveConversation()();
    if (v64[3])
    {
      uint64_t v55 = v4;
      uint64_t v56 = v10;
      uint64_t v57 = v1;
      uint64_t v58 = v5;
      OUTLINED_FUNCTION_152_3();
      OUTLINED_FUNCTION_9_85(v65, v65[3]);
      uint64_t ObjectType = &v54;
      OUTLINED_FUNCTION_5_3();
      uint64_t v25 = v24;
      MEMORY[0x1F4188790](v26);
      OUTLINED_FUNCTION_481();
      OUTLINED_FUNCTION_15_77();
      v27();
      uint64_t v28 = (void *)OUTLINED_FUNCTION_465();
      uint64_t v30 = __swift_project_boxed_opaque_existential_1(v28, v29);
      uint64_t v54 = v7;
      MEMORY[0x1F4188790](v30);
      OUTLINED_FUNCTION_198();
      OUTLINED_FUNCTION_15_77();
      v31();
      OUTLINED_FUNCTION_34_9();
      char v32 = static UUID.== infix(_:_:)();
      uint64_t v33 = *(void (**)(void))(v25 + 8);
      OUTLINED_FUNCTION_87_1();
      OUTLINED_FUNCTION_12_1();
      v33();
      OUTLINED_FUNCTION_438();
      OUTLINED_FUNCTION_12_1();
      v33();
      if (v32)
      {
        uint64_t v34 = v57;
        uint64_t v35 = OUTLINED_FUNCTION_70_3();
        uint64_t v36 = v62;
        __swift_storeEnumTagSinglePayload(v35, v37, 1, v62);
        uint64_t v38 = v58;
        ConversationController.activeParticipant(from:in:)(v60, v3);
        outlined destroy of SystemUpdateNotice?(v34, &demangling cache variable for type metadata for Participant?);
        OUTLINED_FUNCTION_33_0(v3, 1, v36);
        if (v39)
        {
          outlined destroy of SystemUpdateNotice?(v3, &demangling cache variable for type metadata for Participant?);
          OUTLINED_FUNCTION_2();
          OUTLINED_FUNCTION_439();
        }
        else
        {
          _s15ConversationKit11ParticipantVWObTm_6(v3, v59);
          uint64_t v42 = OUTLINED_FUNCTION_43();
          _s15ConversationKit11ParticipantVWObTm_6(v42, v43);
        }
        uint64_t v44 = v55;
        uint64_t v45 = (uint64_t)v61;
        OUTLINED_FUNCTION_348_0(v34, 0);
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v34, v45, &demangling cache variable for type metadata for Participant?);
        OUTLINED_FUNCTION_33_0(v45, 1, v36);
        if (v39)
        {
          uint64_t v46 = OUTLINED_FUNCTION_344();
          outlined destroy of SystemUpdateNotice?(v46, v47);
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_os_log);
          uint64_t v48 = (void *)static OS_os_log.default.getter();
          static os_log_type_t.default.getter();
          OUTLINED_FUNCTION_118_5();

          uint64_t v49 = OUTLINED_FUNCTION_30_15();
        }
        else
        {
          _s15ConversationKit11ParticipantVWObTm_6(v45, v44);
          uint64_t v51 = &v38[OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted];
          OUTLINED_FUNCTION_123_4();
          uint64_t v52 = *(void (**)(uint64_t))v51;
          if (!*(void *)v51)
          {
            _s15ConversationKit11ParticipantVWOhTm_13(v44, (void (*)(void))type metadata accessor for Participant);
            outlined destroy of SystemUpdateNotice?(v34, &demangling cache variable for type metadata for Participant?);
            swift_endAccess();
            goto LABEL_18;
          }
          swift_endAccess();
          swift_retain();
          uint64_t v53 = OUTLINED_FUNCTION_102();
          v52(v53);
          OUTLINED_FUNCTION_186_4();
          _s15ConversationKit11ParticipantVWOhTm_13(v44, (void (*)(void))type metadata accessor for Participant);
          uint64_t v50 = &demangling cache variable for type metadata for Participant?;
          uint64_t v49 = v34;
        }
        outlined destroy of SystemUpdateNotice?(v49, v50);
      }
LABEL_18:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
      goto LABEL_19;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)v64, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v40 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v40 + 16) = xmmword_1C3769620;
    v65[0] = v5;
    uint64_t v41 = v5;
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_289();
    *(void *)(v40 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v40 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v40 + 32) = v2;
    *(void *)(v40 + 40) = v3;
    OUTLINED_FUNCTION_94_6();
    swift_bridgeObjectRelease();
  }
LABEL_19:
  OUTLINED_FUNCTION_28();
}

void ConversationController.callCenter(_:cameraMixedWithScreenDidChangeFor:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  swift_getObjectType();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_64();
  char v6 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v7();
  _dispatchPreconditionTest(_:)();
  uint64_t v8 = OUTLINED_FUNCTION_21_2();
  v9(v8);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_201_2();
  if (!v21[3])
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v21, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_7:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v18 = (__n128 *)OUTLINED_FUNCTION_25_15();
      OUTLINED_FUNCTION_178_3(v18, (__n128)xmmword_1C3769620);
      String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_28_33();
      v18[3].n128_u64[1] = MEMORY[0x1E4FBB1A0];
      unint64_t v19 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_347(v19);
      OUTLINED_FUNCTION_227_1();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
LABEL_10:
    swift_once();
    goto LABEL_7;
  }
  v20[0] = v2;
  OUTLINED_FUNCTION_20_59();
  v20[1] = v20;
  OUTLINED_FUNCTION_5_3();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_15_77();
  v13();
  uint64_t v14 = __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_15_77();
  v15();
  char v16 = static UUID.== infix(_:_:)();
  uint64_t v17 = *(void (**)(void))(v11 + 8);
  OUTLINED_FUNCTION_139();
  v17();
  OUTLINED_FUNCTION_139();
  v17();
  OUTLINED_FUNCTION_10_80();
  if (v16)
  {
    OUTLINED_FUNCTION_2();
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
LABEL_8:
  OUTLINED_FUNCTION_28();
}

uint64_t ConversationController.callCenter(_:screenSharingAvailablilityChanged:)()
{
  uint64_t v2 = v0;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_63();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v4();
  char v5 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_50_1();
  uint64_t result = v6();
  if (v5)
  {
    uint64_t v8 = (void (**)(uint64_t))(v2
                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
    uint64_t result = OUTLINED_FUNCTION_2();
    uint64_t v9 = *v8;
    if (*v8)
    {
      OUTLINED_FUNCTION_101_7();
      uint64_t v10 = OUTLINED_FUNCTION_371_0();
      v9(v10);
      return OUTLINED_FUNCTION_124_5();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void ConversationController.callCenter(_:screenSharingRequestsChangedFor:fromOldConversation:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  swift_getObjectType();
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_64();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  OUTLINED_FUNCTION_19();
  v6();
  char v7 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_4_1();
  v8();
  if (v7)
  {
    if (one-time initialization token for conversationController == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v9 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_98_0(v9, (uint64_t)static Logger.conversationController);
  uint64_t v10 = v2;
  uint64_t v11 = (void *)Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_12_4(v12))
  {
    uint64_t v13 = (_DWORD *)OUTLINED_FUNCTION_37();
    v45[0] = OUTLINED_FUNCTION_9_0();
    _DWORD *v13 = 136315138;
    uint64_t v14 = v10;
    uint64_t v15 = String.init<A>(reflecting:)();
    v44[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_59(&dword_1C2F90000, v17, v18, "callCenterProviderDelegate screenSharingRequestsChangedFor: callback - %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  ConversationController.lookupActiveConversation()();
  if (!v44[3])
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v44, &demangling cache variable for type metadata for Conversation?);
LABEL_14:
    uint64_t v35 = v10;
    uint64_t v36 = (void *)Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_105(v37))
    {
      uint64_t v38 = (_DWORD *)OUTLINED_FUNCTION_37();
      v45[0] = OUTLINED_FUNCTION_9_0();
      *uint64_t v38 = 136315138;
      char v39 = v35;
      uint64_t v40 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_34_6(&dword_1C2F90000, v42, v43, "screenSharingRequestsChangedFor conversation does not match conversation we are currently tracking- %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
    else
    {
    }
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_200_2();
  OUTLINED_FUNCTION_9_85(v45, v45[3]);
  OUTLINED_FUNCTION_267_1();
  OUTLINED_FUNCTION_5_3();
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_15_77();
  v22();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  OUTLINED_FUNCTION_248_2();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_15_77();
  v24();
  char v25 = OUTLINED_FUNCTION_167_1();
  uint64_t v26 = *(void (**)(void))(v20 + 8);
  OUTLINED_FUNCTION_48_3();
  OUTLINED_FUNCTION_139();
  v26();
  OUTLINED_FUNCTION_194_1();
  OUTLINED_FUNCTION_139();
  v26();
  if ((v25 & 1) == 0
    || (uint64_t v27 = &v10[OBJC_IVAR____TtC15ConversationKit22ConversationController_call],
        OUTLINED_FUNCTION_2(),
        uint64_t v28 = OUTLINED_FUNCTION_220_0(),
        uint64_t v29 = (void (*)(uint64_t, char *))*((void *)v27 + 11),
        swift_unknownObjectRetain(),
        v29(v28, v27),
        OUTLINED_FUNCTION_338(),
        (v27 & 1) == 0))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    goto LABEL_14;
  }
  uint64_t v30 = (void (**)(void))&v10[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged];
  OUTLINED_FUNCTION_2();
  unint64_t v31 = *v30;
  if (*v30)
  {
    uint64_t v32 = v4[3];
    uint64_t v33 = v4[4];
    OUTLINED_FUNCTION_69_10(v4, v32);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v33 + 352);
    swift_retain();
    v34(v32, v33);
    v31();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v31);
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
LABEL_17:
  OUTLINED_FUNCTION_28();
}

void ConversationController.frequencyController(_:audioPowerChanged:forParticipantWithStreamToken:)()
{
  OUTLINED_FUNCTION_35_14();
  uint64_t v2 = v1;
  int v4 = v3;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v0;
  *(void *)(v5 + 24) = v2;
  *(_DWORD *)(v5 + 32) = v4;
  _OWORD v14[4] = partial apply for closure #1 in ConversationController.frequencyController(_:audioPowerChanged:forParticipantWithStreamToken:);
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  uint64_t v14[2] = thunk for @escaping @callee_guaranteed () -> ();
  void v14[3] = &block_descriptor_176;
  char v6 = _Block_copy(v14);
  id v7 = v0;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_5_1();
  v14[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_32_6();
  uint64_t v10 = OUTLINED_FUNCTION_484();
  MEMORY[0x1C8773BA0](v10);
  _Block_release(v6);

  OUTLINED_FUNCTION_4_1();
  v11();
  OUTLINED_FUNCTION_139();
  v12();
  OUTLINED_FUNCTION_33_2();
}

uint64_t closure #1 in ConversationController.frequencyController(_:audioPowerChanged:forParticipantWithStreamToken:)(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v6 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v44 = (uint64_t)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for Participant(0);
  uint64_t v11 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)v39 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v42 = (uint64_t)v39 - v18;
  uint64_t v19 = (uint64_t *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  uint64_t v20 = *v19;
  uint64_t v21 = *(void *)(*v19 + 16);
  if (v21)
  {
    uint64_t v40 = v13;
    uint64_t v41 = a1;
    uint64_t v22 = v20 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v23 = *(void *)(v11 + 72);
    v39[1] = v20;
    swift_bridgeObjectRetain();
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v22, (uint64_t)v16);
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v16, (uint64_t)v8);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        char v25 = &v8[*(int *)(v24 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(void *)&v8[*(int *)(v24 + 64)], *(void *)&v8[*(int *)(v24 + 64) + 8]);
        memcpy(v45, v25, sizeof(v45));
        uint64_t v26 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v8, v26);
        uint64_t v27 = v45[1];
        outlined destroy of Participant.MediaInfo((uint64_t)v45);
        if (v27 == a2)
        {
          uint64_t v29 = v44;
          _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v16, v44);
          uint64_t v30 = 0;
          uint64_t v13 = v40;
          a1 = v41;
          goto LABEL_10;
        }
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v8, (void (*)(void))type metadata accessor for Participant.State);
      }
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
      v22 += v23;
      --v21;
    }
    while (v21);
    uint64_t v30 = 1;
    uint64_t v13 = v40;
    a1 = v41;
    uint64_t v29 = v44;
LABEL_10:
    uint64_t v28 = v43;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = 1;
    uint64_t v28 = v43;
    uint64_t v29 = v44;
  }
  __swift_storeEnumTagSinglePayload(v29, v30, 1, v28);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v29, 1, v28) == 1)
  {
    outlined destroy of SystemUpdateNotice?(v29, &demangling cache variable for type metadata for Participant?);
    unint64_t v31 = (void (**)(char *, float))(a1
                                              + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
    uint64_t result = swift_beginAccess();
    uint64_t v33 = *v31;
    if (!*v31) {
      return result;
    }
    uint64_t v34 = a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    swift_beginAccess();
    _s15ConversationKit11ParticipantVWOcTm_19(v34, (uint64_t)v13);
    swift_retain();
    v33(v13, a3);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v33);
    uint64_t v35 = (uint64_t)v13;
    return _s15ConversationKit11ParticipantVWOhTm_13(v35, (void (*)(void))type metadata accessor for Participant);
  }
  uint64_t v36 = v42;
  _s15ConversationKit11ParticipantVWObTm_6(v29, v42);
  os_log_type_t v37 = (void (**)(uint64_t, float))(a1
                                             + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
  swift_beginAccess();
  uint64_t v38 = *v37;
  if (*v37)
  {
    swift_endAccess();
    swift_retain();
    v38(v36, a3);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v38);
    uint64_t v35 = v36;
    return _s15ConversationKit11ParticipantVWOhTm_13(v35, (void (*)(void))type metadata accessor for Participant);
  }
  _s15ConversationKit11ParticipantVWOhTm_13(v36, (void (*)(void))type metadata accessor for Participant);
  return swift_endAccess();
}

uint64_t ConversationController.momentsController(_:didUpdate:for:)(uint64_t a1, void *a2, void *a3)
{
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v6 = OUTLINED_FUNCTION_11_7();
    *(_OWORD *)(v6 + 16) = xmmword_1C37696D0;
    uint64_t v7 = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUMomentsCapabilities);
    id v8 = a2;
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_40_20();
    uint64_t v9 = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v10 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v6 + 64) = v10;
    *(void *)(v6 + 32) = a2;
    *(void *)(v6 + 40) = v7;
    v15[0] = a3;
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUMomentsProvider);
    id v11 = a3;
    uint64_t v12 = String.init<A>(reflecting:)();
    *(void *)(v6 + 96) = v9;
    *(void *)(v6 + 104) = v10;
    *(void *)(v6 + 72) = v12;
    *(void *)(v6 + 80) = v13;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.lookupActiveConversation()();
    ConversationController.update(with:)((uint64_t)v15);
    return outlined destroy of SystemUpdateNotice?((uint64_t)v15, &demangling cache variable for type metadata for Conversation?);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_317_0();
    return os_log(_:dso:log:type:_:)();
  }
}

uint64_t ConversationController.momentsController(_:willCaptureRemoteRequestFromIdentifier:)()
{
  ConversationController.lookupActiveConversation()();
  if (!v16) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)&v14, &demangling cache variable for type metadata for Conversation?);
  }
  OUTLINED_FUNCTION_309_1(v1, v2, v3, v4, v5, v6, v7, v8, v14, v15, v16, v17, v18[0]);
  __swift_project_boxed_opaque_existential_1(v18, v18[3]);
  OUTLINED_FUNCTION_181_3();
  if (v9())
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_118_5();
    unint64_t v10 = (void (**)(uint64_t))(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment);
    OUTLINED_FUNCTION_2();
    id v11 = *v10;
    if (*v10)
    {
      uint64_t v12 = swift_retain();
      v11(v12);
      OUTLINED_FUNCTION_124_5();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

void ConversationController.remoteVideoClientDidReceiveFirstFrame(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  uint64_t v3 = OUTLINED_FUNCTION_26();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v0;
  v11[4] = partial apply for closure #1 in ConversationController.remoteVideoClientDidReceiveFirstFrame(_:);
  void v11[5] = v3;
  v11[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v11[2] = thunk for @escaping @callee_guaranteed () -> ();
  v11[3] = &block_descriptor_182;
  uint64_t v4 = _Block_copy(v11);
  id v5 = v2;
  id v6 = v0;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_5_1();
  v11[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_300();
  _Block_release(v4);

  OUTLINED_FUNCTION_4_1();
  v9();
  OUTLINED_FUNCTION_27_49();
  v10();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in ConversationController.remoteVideoClientDidReceiveFirstFrame(_:)(void *a1, uint64_t a2)
{
  uint64_t v205 = a2;
  uint64_t v202 = type metadata accessor for Participant(0);
  uint64_t v3 = *(void *)(v202 - 8);
  MEMORY[0x1F4188790](v202);
  id v5 = (char *)&v185 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v6 - 8);
  double v190 = (char *)&v185 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v189 = (uint64_t)&v185 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v188 = (uint64_t)&v185 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v192 = (uint64_t)&v185 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v193 = (uint64_t)&v185 - v15;
  MEMORY[0x1F4188790](v16);
  id v191 = (char *)&v185 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v194 = (uint64_t)&v185 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v201 = (uint64_t *)((char *)&v185 - v21);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (uint64_t *)((char *)&v185 - v23);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  char v25 = (uint64_t *)&v227;
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C37696D0;
  *(void *)&long long v208 = a1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  id v27 = a1;
  uint64_t v28 = String.init<A>(reflecting:)();
  uint64_t v30 = v29;
  *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v203 = lazy protocol witness table accessor for type String and conformance String();
  double v204 = v27;
  *(void *)(v26 + 64) = v203;
  *(void *)(v26 + 32) = v28;
  *(void *)(v26 + 40) = v30;
  id v31 = objc_msgSend(v27, sel_remoteVideoAttributes);
  if (v31)
  {
    *(void *)&long long v208 = v31;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for VideoAttributes);
    uint64_t v32 = String.init<A>(reflecting:)();
  }
  else
  {
    unint64_t v33 = 0xE300000000000000;
    uint64_t v32 = 7104878;
  }
  uint64_t v34 = v205;
  unint64_t v35 = v203;
  *(void *)(v26 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v26 + 104) = v35;
  *(void *)(v26 + 72) = v32;
  *(void *)(v26 + 80) = v33;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  char v200 = v24;
  uint64_t v36 = v202;
  __swift_storeEnumTagSinglePayload((uint64_t)v24, 1, 1, v202);
  long long v229 = 0u;
  memset(v230, 0, 26);
  long long v227 = 0u;
  long long v228 = 0u;
  memset(v214, 0, sizeof(v214));
  uint64_t v215 = 1;
  bzero(v216, 0xB1uLL);
  os_log_type_t v37 = v204;
  uint64_t v38 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v204, 0);
  uint64_t v39 = 0x1EA345000uLL;
  if ((v40 & 1) == 0)
  {
    *(void *)&long long v199 = v38;
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    __swift_project_value_buffer(v41, (uint64_t)static Logger.conversationController);
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.default.getter();
    BOOL v44 = os_log_type_enabled(v42, v43);
    uint64_t v39 = (uint64_t)v200;
    if (v44)
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl(&dword_1C2F90000, v42, v43, "Found participant matching remote video first frame notification", v45, 2u);
      uint64_t v46 = v45;
      uint64_t v34 = v205;
      MEMORY[0x1C87760E0](v46, -1, -1);
    }

    os_log_type_t v47 = (uint64_t *)(v34 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    swift_beginAccess();
    uint64_t v48 = v199;
    if ((v199 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v49 = *v47;
      if ((unint64_t)v199 < *(void *)(*v47 + 16))
      {
        uint64_t v34 = *(unsigned __int8 *)(v3 + 80);
        id v27 = *(id *)(v3 + 72);
        uint64_t v50 = (uint64_t)v201;
        _s15ConversationKit11ParticipantVWOcTm_19(v49 + ((v34 + 32) & ~v34) + (void)v27 * v199, (uint64_t)v201);
        __swift_storeEnumTagSinglePayload(v50, 0, 1, v36);
        outlined assign with take of Participant?(v50, v39, &demangling cache variable for type metadata for Participant?);
        if (__swift_getEnumTagSinglePayload(v39, 1, v36))
        {
          long long v208 = 0uLL;
          *(void *)&long long v209 = 0;
          *((void *)&v209 + 1) = 1;
          bzero(&v210, 0xB1uLL);
        }
        else
        {
          _s15ConversationKit11ParticipantVWOcTm_19(v39, (uint64_t)v5);
          Participant.screenInfo.getter(&v208);
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
        }
        outlined assign with take of Participant?((uint64_t)&v208, (uint64_t)v214, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        if (__swift_getEnumTagSinglePayload(v39, 1, v36))
        {
          uint64_t v195 = 0;
          uint64_t v196 = 0;
          uint64_t v197 = 0;
        }
        else
        {
          _s15ConversationKit11ParticipantVWOcTm_19(v39, (uint64_t)v5);
          uint64_t v195 = Participant.captionInfo.getter();
          uint64_t v196 = v87;
          uint64_t v197 = v88;
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
        }
        if (__swift_getEnumTagSinglePayload(v39, 1, v36))
        {
          swift_bridgeObjectRelease();
          long long v229 = 0u;
          memset(v230, 0, 26);
          long long v227 = 0u;
          long long v228 = 0u;
        }
        else
        {
          _s15ConversationKit11ParticipantVWOcTm_19(v39, (uint64_t)v5);
          Participant.videoInfo.getter();
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
          outlined assign with take of Participant?((uint64_t)v231, (uint64_t)&v227, &demangling cache variable for type metadata for Participant.VideoInfo?);
          outlined init with take of AspectRatio?((uint64_t)v231, (uint64_t)v232, &demangling cache variable for type metadata for Participant.VideoInfo?);
          if (v232[0]) {
            BYTE8(v227) = 1;
          }
        }
        if (!(void)v227) {
          goto LABEL_78;
        }
        id v89 = objc_msgSend(v204, sel_remoteVideoAttributes);
        if (v89)
        {
          uint64_t v90 = v89;
          unsigned __int8 v91 = objc_msgSend(v89, sel_videoMirrored);
        }
        else
        {
          unsigned __int8 v91 = 0;
        }
        BYTE13(v227) = v91;
        if (!(void)v227) {
          goto LABEL_78;
        }
        id v92 = objc_msgSend(v204, sel_remoteVideoAttributes);
        if (v92)
        {
          unint64_t v93 = v92;
          int v94 = objc_msgSend(v92, sel_orientation);
        }
        else
        {
          int v94 = 0;
        }
        *((void *)&v228 + 1) = VideoAttributeOrientation.deviceOrientation.getter(v94);
        if (!(void)v227) {
          goto LABEL_78;
        }
        id v105 = objc_msgSend(v204, sel_remoteVideoAttributes);
        if (v105)
        {
          uint64_t v106 = v105;
          unsigned int v107 = objc_msgSend(v105, sel_camera);
        }
        else
        {
          unsigned int v107 = 0;
        }
        LOBYTE(v229) = VideoAttributeCamera.cameraPosition.getter(v107);
        if ((void)v227)
        {
          specialized Dictionary.subscript.getter();
          if (*((void *)&v209 + 1))
          {
            outlined init with take of Notice(&v208, (uint64_t)v213);
            if ((void)v227)
            {
              id v187 = v27;
              outlined init with copy of Conversation((uint64_t)v213, (uint64_t)v207);
              if (ConversationController.isOneToOneModeEnabled.getter())
              {
                static AspectRatio.remoteAspectRatios(with:contentsRect:)(v207, (uint64_t)&v208, 1.0, 1.0);
                double v112 = *((double *)&v208 + 1);
                double v111 = *(double *)&v208;
                char v113 = v209;
                double v114 = *((double *)&v209 + 1);
                double v115 = v210;
                int v116 = v211;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v207);
                if ((v113 & 1) != 0 || v111 == v112)
                {
                  double v111 = 0.0;
                  double v112 = 0.0;
                  double v114 = 0.0;
                  double v115 = 0.0;
                  char v117 = 1;
                }
                else
                {
                  char v117 = 0;
                  if (v116)
                  {
                    double v115 = v111;
                    double v114 = v112;
                  }
                }
                uint64_t v48 = v199;
              }
              else
              {
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v207);
                double v111 = 0.0;
                double v112 = 0.0;
                double v114 = 0.0;
                double v115 = 0.0;
                char v117 = 1;
              }
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v213);
              *((double *)&v229 + 1) = v111;
              *(double *)long long v230 = v112;
              *(double *)&v230[1] = v114;
              *(double *)&v230[2] = v115;
              LOBYTE(v230[3]) = v117;
              uint64_t v39 = (uint64_t)v200;
              uint64_t v36 = v202;
              id v27 = v187;
            }
            else
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v213);
            }
            goto LABEL_90;
          }
        }
        else
        {
LABEL_78:
          double v210 = 0.0;
          long long v208 = 0u;
          long long v209 = 0u;
        }
        outlined destroy of SystemUpdateNotice?((uint64_t)&v208, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        goto LABEL_90;
      }
    }
    __break(1u);
LABEL_135:
    swift_once();
    goto LABEL_17;
  }
  uint64_t v51 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v37, 1);
  if (v52)
  {
    uint64_t v39 = (uint64_t)v200;
    if (one-time initialization token for conversationController == -1) {
      goto LABEL_24;
    }
    goto LABEL_137;
  }
  *(void *)&long long v199 = v51;
  char v25 = v200;
  if (one-time initialization token for conversationController != -1) {
    goto LABEL_135;
  }
LABEL_17:
  uint64_t v53 = type metadata accessor for Logger();
  __swift_project_value_buffer(v53, (uint64_t)static Logger.conversationController);
  uint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  unint64_t v56 = v55;
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v57 = 0;
    _os_log_impl(&dword_1C2F90000, v54, (os_log_type_t)v56, "Found participant with screen matching remote video first frame notification", v57, 2u);
    uint64_t v58 = v57;
    uint64_t v34 = v205;
    MEMORY[0x1C87760E0](v58, -1, -1);
  }

  uint64_t v59 = v34 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  swift_beginAccess();
  if ((v199 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_137:
    swift_once();
LABEL_24:
    uint64_t v70 = type metadata accessor for Logger();
    __swift_project_value_buffer(v70, (uint64_t)static Logger.conversationController);
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v73 = 0;
      _os_log_impl(&dword_1C2F90000, v71, v72, "Failed to find any participant matching remote video client", v73, 2u);
      uint64_t v74 = v73;
      uint64_t v34 = v205;
      MEMORY[0x1C87760E0](v74, -1, -1);
    }

    uint64_t v75 = (uint64_t *)(v34 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    swift_beginAccess();
    uint64_t v76 = *v75;
    uint64_t v77 = MEMORY[0x1E4FBC860];
    v213[0] = MEMORY[0x1E4FBC860];
    uint64_t v78 = *(void *)(v76 + 16);
    if (v78)
    {
      uint64_t v79 = v76 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      uint64_t v80 = *(void *)(v3 + 72);
      swift_bridgeObjectRetain_n();
      do
      {
        _s15ConversationKit11ParticipantVWOcTm_19(v79, (uint64_t)v5);
        swift_bridgeObjectRetain();
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
        specialized Array.append<A>(contentsOf:)();
        v79 += v80;
        --v78;
      }
      while (v78);
      swift_bridgeObjectRelease_n();
      uint64_t v77 = v213[0];
      uint64_t v39 = (uint64_t)v200;
    }
    if (*(void *)(v77 + 16))
    {
      swift_bridgeObjectRetain();
      id v81 = Logger.logObject.getter();
      os_log_type_t v82 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v81, v82))
      {
        unint64_t v83 = (uint8_t *)swift_slowAlloc();
        uint64_t v84 = swift_slowAlloc();
        v213[0] = v84;
        *(_DWORD *)unint64_t v83 = 136315138;
        unint64_t v203 = (unint64_t)(v83 + 4);
        v207[0] = v77;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
        uint64_t v85 = String.init<A>(reflecting:)();
        v207[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v85, v86, v213);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v81, v82, "Found associated participants that may match remote video client %s", v83, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v84, -1, -1);
        MEMORY[0x1C87760E0](v83, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      ConversationController.updateMatchingAssociatedParticipant(for:)(v204);
      goto LABEL_95;
    }
    goto LABEL_94;
  }
  if ((unint64_t)v199 < *(void *)(*(void *)v59 + 16))
  {
    unint64_t v60 = *(void *)v59 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v61 = *(void **)(v3 + 72);
    uint64_t v186 = *(unsigned __int8 *)(v3 + 80);
    id v187 = v61;
    uint64_t v62 = (uint64_t)v201;
    _s15ConversationKit11ParticipantVWOcTm_19(v60 + (void)v61 * v199, (uint64_t)v201);
    __swift_storeEnumTagSinglePayload(v62, 0, 1, v36);
    outlined assign with take of Participant?(v62, (uint64_t)v25, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v36))
    {
      uint64_t v196 = 0;
      uint64_t v197 = 0;
      uint64_t v195 = 0;
      uint64_t v63 = 0;
      uint64_t v64 = 0;
      uint64_t v65 = 0;
      uint64_t v66 = 0;
      uint64_t v67 = 0;
      uint64_t v68 = 0;
      __int16 v69 = 0;
    }
    else
    {
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v25, (uint64_t)v5);
      Participant.videoInfo.getter();
      uint64_t v196 = v232[1];
      uint64_t v197 = v232[0];
      uint64_t v63 = v232[3];
      uint64_t v195 = v232[2];
      uint64_t v64 = v232[4];
      uint64_t v65 = v232[5];
      uint64_t v66 = v232[6];
      uint64_t v67 = v232[7];
      uint64_t v68 = v232[8];
      __int16 v69 = v233;
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
    }
    swift_bridgeObjectRelease();
    *(void *)&long long v227 = v197;
    *((void *)&v227 + 1) = v196;
    *(void *)&long long v228 = v195;
    *((void *)&v228 + 1) = v63;
    *(void *)&long long v229 = v64;
    *((void *)&v229 + 1) = v65;
    v230[0] = v66;
    v230[1] = v67;
    v230[2] = v68;
    LOWORD(v230[3]) = v69;
    uint64_t v36 = v202;
    uint64_t v39 = (uint64_t)v25;
    if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v202))
    {
      uint64_t v195 = 0;
      uint64_t v196 = 0;
      uint64_t v197 = 0;
    }
    else
    {
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v25, (uint64_t)v5);
      uint64_t v195 = Participant.captionInfo.getter();
      uint64_t v196 = v95;
      uint64_t v197 = v96;
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
    }
    uint64_t v97 = v205;
    uint64_t v48 = v199;
    id v27 = v187;
    if (__swift_getEnumTagSinglePayload(v39, 1, v36))
    {
      long long v208 = 0uLL;
      *(void *)&long long v209 = 0;
      *((void *)&v209 + 1) = 1;
      bzero(&v210, 0xB1uLL);
    }
    else
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v39, (uint64_t)v5);
      Participant.screenInfo.getter(&v208);
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v5, (void (*)(void))type metadata accessor for Participant);
    }
    outlined assign with take of Participant?((uint64_t)&v208, (uint64_t)v214, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (v215 != 1)
    {
      char v98 = *(unsigned char *)(v97 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96);
      long long v99 = *(_OWORD *)(v97 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 16);
      long long v220 = *(_OWORD *)(v97 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes);
      long long v221 = v99;
      long long v100 = *(_OWORD *)(v97 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 48);
      long long v222 = *(_OWORD *)(v97 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 32);
      long long v223 = v100;
      long long v101 = *(_OWORD *)(v97 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 80);
      long long v224 = *(_OWORD *)(v97 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 64);
      long long v225 = v101;
      char v226 = v98;
      v216[8] = 1;
      id v102 = objc_msgSend(v204, sel_remoteVideoAttributes);
      if (v102)
      {
        id v103 = v102;
        int v104 = objc_msgSend(v102, sel_orientation);
      }
      else
      {
        int v104 = 0;
      }
      unint64_t v218 = VideoAttributeOrientation.deviceOrientation.getter(v104);
      if (v215 != 1)
      {
        id v108 = objc_msgSend(v204, sel_remoteVideoAttributes);
        if (v108)
        {
          unint64_t v109 = v108;
          double v110 = VideoAttributes.scaleFactor.getter();
        }
        else
        {
          double v110 = 1.0;
        }
        double v219 = v110;
      }
    }
    id v118 = objc_msgSend(v204, sel_remoteVideoAttributes);
    if (v118)
    {
      unint64_t v119 = v118;
      objc_msgSend(v118, sel_ratio);
      double v121 = v120;
      double v123 = v122;

      if (v215 != 1)
      {
        uint64_t v124 = v226 ? 0 : *((void *)&v224 + 1);
        unint64_t v125 = ConversationController.remoteOrientationFor(aspectRatio:videoRotation:deviceFamily:)(v218, v124, v121, v123);
        if (v215 != 1) {
          unint64_t v217 = v125;
        }
      }
    }
    LODWORD(v34) = v186;
LABEL_90:
    if (__swift_getEnumTagSinglePayload(v39, 1, v36)
      || (_s15ConversationKit11ParticipantVWOcTm_19(v39, (uint64_t)v5),
          char v126 = Participant.avInfo.getter(),
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v5, (void (*)(void))type metadata accessor for Participant), v126 == 2))
    {
      static os_log_type_t.error.getter();
      uint64_t v127 = swift_allocObject();
      *(_OWORD *)(v127 + 16) = xmmword_1C3769620;
      uint64_t v128 = (uint64_t)v201;
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v39, (uint64_t)v201, &demangling cache variable for type metadata for Participant?);
      uint64_t v129 = specialized >> prefix<A>(_:)();
      uint64_t v131 = v130;
      outlined destroy of SystemUpdateNotice?(v128, &demangling cache variable for type metadata for Participant?);
      unint64_t v132 = v203;
      *(void *)(v127 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v127 + 64) = v132;
      *(void *)(v127 + 32) = v129;
      *(void *)(v127 + 40) = v131;
LABEL_93:
      os_log(_:dso:log:type:_:)();
      outlined consume of Participant.CaptionInfo?(v195);
LABEL_94:
      swift_bridgeObjectRelease();
LABEL_95:
      outlined destroy of SystemUpdateNotice?((uint64_t)v214, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      swift_bridgeObjectRelease();
      return outlined destroy of SystemUpdateNotice?(v39, &demangling cache variable for type metadata for Participant?);
    }
    *(void *)&long long v199 = v48;
    uint64_t v134 = v194;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v39, v194, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v134, 1, v36) == 1) {
      goto LABEL_141;
    }
    Participant.screenInfo.getter(v213);
    _s15ConversationKit11ParticipantVWOhTm_13(v134, (void (*)(void))type metadata accessor for Participant);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v213, (uint64_t)&v208, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v214, (uint64_t)v212, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (*((void *)&v209 + 1) == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v213, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      if (v212[3] == 1) {
        uint64_t v135 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
      }
      else {
        uint64_t v135 = &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?);
      }
      if (v212[3] == 1) {
        int v136 = -1;
      }
      else {
        int v136 = 0;
      }
      LODWORD(v204) = v136;
    }
    else
    {
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)&v208, (uint64_t)v207, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      if (v212[3] == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v213, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        outlined destroy of Participant.ScreenInfo((uint64_t)v207);
        LODWORD(v204) = 0;
        uint64_t v135 = &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?);
      }
      else
      {
        memcpy(v206, v212, 0xD1uLL);
        static Participant.ScreenInfo.== infix(_:_:)();
        LODWORD(v204) = v137;
        outlined destroy of Participant.ScreenInfo((uint64_t)v206);
        uint64_t v135 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
        outlined destroy of SystemUpdateNotice?((uint64_t)v213, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        outlined destroy of Participant.ScreenInfo((uint64_t)v207);
      }
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)&v208, v135);
    uint64_t v138 = v193;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v39, v193, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v138, 1, v36) == 1) {
      goto LABEL_142;
    }
    outlined init with take of AspectRatio?((uint64_t)&v227, (uint64_t)v213, &demangling cache variable for type metadata for Participant.VideoInfo?);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v214, (uint64_t)&v208, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined retain of [Participant]((uint64_t)v213);
    Participant.copresenceInfo.getter();
    uint64_t v139 = (uint64_t)v191;
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?(v207);
    outlined release of LinearGradient((uint64_t)v213);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v208, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    _s15ConversationKit11ParticipantVWOhTm_13(v138, (void (*)(void))type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v139, 0, 1, v36);
    outlined assign with take of Participant?(v139, v39, &demangling cache variable for type metadata for Participant?);
    uint64_t v3 = v192;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v39, v192, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v3, 1, v36) == 1)
    {
LABEL_143:
      outlined consume of Participant.CaptionInfo?(v195);
      __break(1u);
      goto LABEL_144;
    }
    char v25 = (uint64_t *)(v205 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    swift_beginAccess();
    uint64_t v140 = *v25;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *char v25 = v140;
    unint64_t v56 = v199;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_111;
    }
    goto LABEL_139;
  }
  __break(1u);
LABEL_139:
  uint64_t v140 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *char v25 = v140;
LABEL_111:
  if (v56 >= *(void *)(v140 + 16))
  {
    __break(1u);
LABEL_141:
    outlined consume of Participant.CaptionInfo?(v195);
    __break(1u);
LABEL_142:
    outlined consume of Participant.CaptionInfo?(v195);
    __break(1u);
    goto LABEL_143;
  }
  outlined assign with take of Participant(v3, v140 + ((v34 + 32) & ~(unint64_t)v34) + (void)v27 * v56);
  swift_endAccess();
  uint64_t v142 = swift_allocObject();
  long long v199 = xmmword_1C3769620;
  *(_OWORD *)(v142 + 16) = xmmword_1C3769620;
  uint64_t v143 = (uint64_t)v201;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v39, (uint64_t)v201, &demangling cache variable for type metadata for Participant?);
  uint64_t v144 = specialized >> prefix<A>(_:)();
  uint64_t v146 = v145;
  outlined destroy of SystemUpdateNotice?(v143, &demangling cache variable for type metadata for Participant?);
  unint64_t v147 = v203;
  *(void *)(v142 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v142 + 64) = v147;
  *(void *)(v142 + 32) = v144;
  *(void *)(v142 + 40) = v146;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v148 = ConversationController.visibleParticipants.getter();
  uint64_t v149 = specialized Collection.firstIndex(where:)(v148, v39);
  char v151 = v150;
  swift_bridgeObjectRelease();
  if (v151)
  {
    static os_log_type_t.error.getter();
    uint64_t v181 = swift_allocObject();
    *(_OWORD *)(v181 + 16) = v199;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v39, v143, &demangling cache variable for type metadata for Participant?);
    uint64_t v182 = specialized >> prefix<A>(_:)();
    uint64_t v184 = v183;
    outlined destroy of SystemUpdateNotice?(v143, &demangling cache variable for type metadata for Participant?);
    *(void *)(v181 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v181 + 64) = v147;
    *(void *)(v181 + 32) = v182;
    *(void *)(v181 + 40) = v184;
    goto LABEL_93;
  }
  uint64_t v152 = (uint64_t)v190;
  if ((void)v227)
  {
    if (BYTE8(v227))
    {
      uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v201 = &v185;
      MEMORY[0x1F4188790](v153 - 8);
      unint64_t v203 = v149;
      uint64_t v155 = (char *)&v185 - ((v154 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v156 = v205 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
      swift_beginAccess();
      uint64_t v157 = *(void *)(v156 + 8);
      uint64_t v193 = v156;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v159 = type metadata accessor for UUID();
      *(void *)&long long v199 = &v185;
      uint64_t v160 = *(void *)(v159 - 8);
      MEMORY[0x1F4188790](v159);
      id v191 = (char *)((v161 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v192 = v161;
      char v162 = (char *)((char *)&v185 - v191);
      uint64_t v163 = *(void (**)(uint64_t, uint64_t))(v157 + 200);
      swift_unknownObjectRetain();
      v163(ObjectType, v157);
      uint64_t v152 = (uint64_t)v190;
      uint64_t v164 = v205;
      uint64_t v39 = (uint64_t)v200;
      swift_unknownObjectRelease();
      *(void *)&long long v208 = *(void *)(v164
                                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame);
      swift_bridgeObjectRetain();
      specialized Set._Variant.remove(_:)();
      uint64_t v165 = *(void (**)(char *, uint64_t))(v160 + 8);
      uint64_t v198 = v159;
      uint64_t v194 = v160 + 8;
      v165(v162, v159);
      uint64_t v166 = (uint64_t)v155;
      uint64_t v149 = v203;
      outlined destroy of SystemUpdateNotice?(v166, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.setter(v208);
      id v167 = objc_msgSend(*(id *)(v164 + OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags), sel_uPlusOneFullBleedHandoffEnabled);
      if (v167)
      {
        uint64_t v201 = &v185;
        MEMORY[0x1F4188790](v167);
        uint64_t v168 = (char *)((char *)&v185 - v191);
        uint64_t v169 = *(void *)(v193 + 8);
        uint64_t v170 = swift_getObjectType();
        MEMORY[0x1F4188790](v170);
        long long v171 = *(void (**)(uint64_t, uint64_t))(v169 + 200);
        swift_unknownObjectRetain();
        v171(v170, v169);
        uint64_t v152 = (uint64_t)v190;
        swift_unknownObjectRelease();
        swift_beginAccess();
        specialized Set._Variant.insert(_:)();
        swift_endAccess();
        long long v172 = v168;
        uint64_t v149 = v203;
        v165(v172, v198);
        uint64_t v39 = (uint64_t)v200;
      }
    }
  }
  uint64_t v173 = v205;
  unsigned __int8 v174 = (void (**)(uint64_t, uint64_t))(v205
                                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  swift_beginAccess();
  unsigned __int8 v175 = *v174;
  uint64_t v176 = v202;
  if (*v174)
  {
    uint64_t v177 = v188;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v39, v188, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v177, 1, v176) == 1)
    {
LABEL_145:
      swift_retain();
      outlined consume of Participant.CaptionInfo?(v195);
      __break(1u);
      goto LABEL_146;
    }
    swift_retain();
    v175(v177, v149);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v175);
    _s15ConversationKit11ParticipantVWOhTm_13(v177, (void (*)(void))type metadata accessor for Participant);
  }
  uint64_t v178 = v189;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v39, v189, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v178, 1, v176) == 1)
  {
LABEL_144:
    outlined consume of Participant.CaptionInfo?(v195);
    __break(1u);
    goto LABEL_145;
  }
  ConversationController.didUpdateVisibleParticipant(_:)(v178);
  _s15ConversationKit11ParticipantVWOhTm_13(v178, (void (*)(void))type metadata accessor for Participant);
  if ((v204 & 1) != 0
    || (long long v179 = (void (**)(uint64_t, uint64_t))(v173
                                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo),
        swift_beginAccess(),
        (__int16 v180 = *v179) == 0))
  {
    outlined consume of Participant.CaptionInfo?(v195);
    goto LABEL_95;
  }
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v39, v152, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v152, 1, v176) != 1)
  {
    swift_retain();
    v180(v152, v149);
    outlined consume of Participant.CaptionInfo?(v195);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v180);
    _s15ConversationKit11ParticipantVWOhTm_13(v152, (void (*)(void))type metadata accessor for Participant);
    goto LABEL_95;
  }
LABEL_146:
  swift_retain();
  uint64_t result = outlined consume of Participant.CaptionInfo?(v195);
  __break(1u);
  return result;
}

uint64_t ConversationController.remoteParticipantIndex(for:useScreenProviders:)(void *a1, uint64_t a2)
{
  uint64_t v41 = a1;
  uint64_t v42 = type metadata accessor for Participant.State(0);
  uint64_t v4 = MEMORY[0x1F4188790](v42);
  uint64_t v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v37 - v7;
  uint64_t v45 = type metadata accessor for Participant(0);
  uint64_t v9 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  uint64_t v13 = *v12;
  uint64_t v44 = *(void *)(*v12 + 16);
  if (!v44) {
    return 0;
  }
  uint64_t v14 = v13 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v43 = *(void *)(v9 + 72);
  uint64_t v38 = &v49[12];
  uint64_t v39 = &v48;
  v37[1] = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  uint64_t v40 = 0;
  uint64_t v16 = v41;
  do
  {
    _s15ConversationKit11ParticipantVWOcTm_19(v14, (uint64_t)v11);
    if (!*(void *)&v11[*(int *)(v45 + 28)]) {
      goto LABEL_20;
    }
    if (a2)
    {
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v11, (uint64_t)v8);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v18 = &v8[*(int *)(v17 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(void *)&v8[*(int *)(v17 + 64)], *(void *)&v8[*(int *)(v17 + 64) + 8]);
        memcpy(v49, v18, sizeof(v49));
        uint64_t v19 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v8, v19);
        outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v38, (uint64_t)v46, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        outlined destroy of Participant.MediaInfo((uint64_t)v49);
        if (v47 != 1)
        {
          outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v46, (uint64_t)v49, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
          outlined destroy of Participant.ScreenInfo((uint64_t)v46);
          uint64_t v20 = v49[3];
          if (v49[3])
          {
            uint64_t v21 = a2;
            uint64_t v22 = v49[4];
            __swift_project_boxed_opaque_existential_1(v49, v49[3]);
            uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
            uint64_t v24 = v22;
            a2 = v21;
            uint64_t v16 = v41;
            uint64_t v25 = v23(v20, v24);
            char v27 = v26 & 1;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
LABEL_15:
            id v35 = objc_msgSend(v16, sel_streamToken);
            if (v27) {
              goto LABEL_20;
            }
            char v34 = v25 == (void)v35;
            goto LABEL_17;
          }
LABEL_14:
          outlined destroy of SystemUpdateNotice?((uint64_t)v49, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
          uint64_t v25 = 0;
          char v27 = 1;
          goto LABEL_15;
        }
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v8, (void (*)(void))type metadata accessor for Participant.State);
        memset(v46, 0, sizeof(v46));
        uint64_t v47 = 1;
        bzero(v39, 0xB1uLL);
      }
      outlined destroy of SystemUpdateNotice?((uint64_t)v46, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      memset(v49, 0, 40);
      goto LABEL_14;
    }
    _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v11, (uint64_t)v6);
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v6, (void (*)(void))type metadata accessor for Participant.State);
LABEL_20:
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v11, (void (*)(void))type metadata accessor for Participant);
      goto LABEL_21;
    }
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    uint64_t v29 = &v6[*(int *)(v28 + 48)];
    outlined consume of Participant.CopresenceInfo?(*(void *)&v6[*(int *)(v28 + 64)], *(void *)&v6[*(int *)(v28 + 64) + 8]);
    memcpy(v49, v29, sizeof(v49));
    uint64_t v30 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v6, v30);
    uint64_t v31 = v49[2];
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v49);
    if (!v31) {
      goto LABEL_20;
    }
    id v32 = v16;
    uint64_t v33 = v40;
    char v34 = specialized Sequence.contains(where:)(v31, v32);
    uint64_t v40 = v33;
    uint64_t v16 = v41;
    swift_bridgeObjectRelease();
LABEL_17:
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v11, (void (*)(void))type metadata accessor for Participant);
    if (v34) {
      goto LABEL_24;
    }
LABEL_21:
    ++v15;
    v14 += v43;
  }
  while (v44 != v15);
  uint64_t v15 = 0;
LABEL_24:
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t ConversationController.updateMatchingAssociatedParticipant(for:)(void *a1)
{
  id v126 = a1;
  uint64_t v1 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v121 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Participant(0);
  double v152 = *(double *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v123 = (uint64_t)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v125 = (uint64_t)&v121 - v7;
  MEMORY[0x1F4188790](v8);
  double v122 = (char *)&v121 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v127 = (char *)&v121 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v130 = (uint64_t)&v121 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v131 = (uint64_t)&v121 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char **)((char *)&v121 - v17);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v121 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant));
  MEMORY[0x1F4188790](v22);
  int v136 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant)?);
  MEMORY[0x1F4188790](v24 - 8);
  char v26 = (uint64_t *)((char *)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v121 - v28;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v124 = (char *)&v121 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v129 = (uint64_t)&v121 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v143 = (uint64_t)&v121 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v121 - v37;
  uint64_t v150 = v4;
  __swift_storeEnumTagSinglePayload((uint64_t)&v121 - v37, 1, 1, v4);
  uint64_t v39 = (uint64_t *)(v132 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  uint64_t v128 = v39;
  uint64_t v40 = *v39;
  uint64_t v148 = *(uint8_t **)(*v39 + 16);
  uint64_t v140 = v40;
  swift_bridgeObjectRetain();
  uint64_t v144 = v38;
  uint64_t v41 = v29;
  swift_beginAccess();
  unint64_t v141 = 0;
  unint64_t v42 = 0;
  uint64_t v134 = &v173;
  *(void *)&long long v43 = 136315138;
  long long v135 = v43;
  uint64_t v133 = MEMORY[0x1E4FBC840] + 8;
  int v142 = 1;
  uint64_t v146 = v26;
  uint64_t v147 = v22;
  uint64_t v145 = v29;
LABEL_2:
  if ((uint8_t *)v42 == v148)
  {
    uint64_t v44 = 1;
    uint64_t v45 = (uint64_t)v148;
    goto LABEL_7;
  }
  if ((v42 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v42 >= *(void *)(v140 + 16))
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  uint64_t v151 = v42 + 1;
  uint64_t v46 = (uint64_t)&v136[*(int *)(v22 + 48)];
  _s15ConversationKit11ParticipantVWOcTm_19(v140+ ((*(unsigned __int8 *)(*(void *)&v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)&v152 + 80))+ *(void *)(*(void *)&v152 + 72) * v42, v46);
  uint64_t v47 = (uint64_t)v26 + *(int *)(v22 + 48);
  *char v26 = v42;
  _s15ConversationKit11ParticipantVWObTm_6(v46, v47);
  uint64_t v44 = 0;
  uint64_t v45 = v151;
LABEL_7:
  __swift_storeEnumTagSinglePayload((uint64_t)v26, v44, 1, v22);
  outlined init with take of AspectRatio?((uint64_t)v26, (uint64_t)v41, &demangling cache variable for type metadata for (offset: Int, element: Participant)?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v22) != 1)
  {
    uint64_t v151 = v45;
    uint64_t v149 = (void *)*v41;
    uint64_t v48 = (uint64_t)v41 + *(int *)(v22 + 48);
    uint64_t v49 = *(void *)(v48 + *(int *)(v150 + 44));
    swift_bridgeObjectRetain();
    _s15ConversationKit11ParticipantVWOhTm_13(v48, (void (*)(void))type metadata accessor for Participant);
    uint64_t v50 = 0;
    uint64_t v51 = v49 + 56;
    uint64_t v52 = 1 << *(unsigned char *)(v49 + 32);
    if (v52 < 64) {
      uint64_t v53 = ~(-1 << v52);
    }
    else {
      uint64_t v53 = -1;
    }
    unint64_t v54 = v53 & *(void *)(v49 + 56);
    char v26 = (void *)((unint64_t)(v52 + 63) >> 6);
    if (v54)
    {
LABEL_12:
      unint64_t v55 = __clz(__rbit64(v54));
      v54 &= v54 - 1;
      unint64_t v56 = v55 | (v50 << 6);
      goto LABEL_27;
    }
    while (1)
    {
      uint64_t v57 = v50 + 1;
      if (__OFADD__(v50, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
      if (v57 >= (uint64_t)v26) {
        goto LABEL_34;
      }
      unint64_t v58 = *(void *)(v51 + 8 * v57);
      ++v50;
      if (!v58)
      {
        uint64_t v50 = v57 + 1;
        if (v57 + 1 >= (uint64_t)v26) {
          goto LABEL_34;
        }
        unint64_t v58 = *(void *)(v51 + 8 * v50);
        if (!v58)
        {
          uint64_t v50 = v57 + 2;
          if (v57 + 2 >= (uint64_t)v26) {
            goto LABEL_34;
          }
          unint64_t v58 = *(void *)(v51 + 8 * v50);
          if (!v58)
          {
            uint64_t v59 = v57 + 3;
            if (v59 >= (uint64_t)v26)
            {
LABEL_34:
              swift_release();
LABEL_37:
              char v26 = v146;
              uint64_t v22 = v147;
              uint64_t v41 = v145;
              unint64_t v42 = v151;
              goto LABEL_2;
            }
            unint64_t v58 = *(void *)(v51 + 8 * v59);
            if (!v58)
            {
              while (1)
              {
                uint64_t v50 = v59 + 1;
                if (__OFADD__(v59, 1)) {
                  break;
                }
                if (v50 >= (uint64_t)v26) {
                  goto LABEL_34;
                }
                unint64_t v58 = *(void *)(v51 + 8 * v50);
                ++v59;
                if (v58) {
                  goto LABEL_26;
                }
              }
              __break(1u);
LABEL_60:
              unsigned __int8 v90 = 0;
              goto LABEL_61;
            }
            uint64_t v50 = v59;
          }
        }
      }
LABEL_26:
      unint64_t v54 = (v58 - 1) & v58;
      unint64_t v56 = __clz(__rbit64(v58)) + (v50 << 6);
LABEL_27:
      _s15ConversationKit11ParticipantVWOcTm_19(*(void *)(v49 + 48) + *(void *)(*(void *)&v152 + 72) * v56, (uint64_t)v21);
      _s15ConversationKit11ParticipantVWObTm_6((uint64_t)v21, (uint64_t)v18);
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v18, (uint64_t)v3);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v61 = (uint64_t)&v3[*(int *)(v60 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(void *)&v3[*(int *)(v60 + 64)], *(void *)&v3[*(int *)(v60 + 64) + 8]);
        outlined destroy of Participant.MediaInfo(v61);
        uint64_t v62 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t))(*(void *)(v62 - 8) + 8))(v3, v62);
        uint64_t v63 = v143;
        _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v18, v143);
        __swift_storeEnumTagSinglePayload(v63, 0, 1, v150);
        outlined assign with take of Participant?(v63, (uint64_t)v144, &demangling cache variable for type metadata for Participant?);
        if (one-time initialization token for conversationController != -1) {
          swift_once();
        }
        uint64_t v64 = type metadata accessor for Logger();
        __swift_project_value_buffer(v64, (uint64_t)static Logger.conversationController);
        uint64_t v65 = Logger.logObject.getter();
        os_log_type_t v66 = static os_log_type_t.default.getter();
        int v67 = v66;
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v68 = swift_slowAlloc();
          int v142 = v67;
          __int16 v69 = (uint8_t *)v68;
          unint64_t v141 = swift_slowAlloc();
          *(void *)&long long v155 = v141;
          *(_DWORD *)__int16 v69 = v135;
          uint64_t v138 = v69 + 4;
          uint64_t v139 = v69;
          uint64_t v70 = v143;
          outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v144, v143, &demangling cache variable for type metadata for Participant?);
          uint64_t v71 = specialized >> prefix<A>(_:)();
          os_log_t v137 = v65;
          uint64_t v72 = v71;
          unint64_t v74 = v73;
          outlined destroy of SystemUpdateNotice?(v70, &demangling cache variable for type metadata for Participant?);
          uint64_t v172 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v74, (uint64_t *)&v155);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          os_log_t v75 = v137;
          uint64_t v76 = v139;
          _os_log_impl(&dword_1C2F90000, v137, (os_log_type_t)v142, "Found associated participant that matches remote video client %s", v139, 0xCu);
          unint64_t v77 = v141;
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v77, -1, -1);
          MEMORY[0x1C87760E0](v76, -1, -1);
        }
        else
        {
        }
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
        swift_release();
        int v142 = 0;
        unint64_t v141 = (unint64_t)v149;
        goto LABEL_37;
      }
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v18, (void (*)(void))type metadata accessor for Participant);
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v3, (void (*)(void))type metadata accessor for Participant.State);
      if (v54) {
        goto LABEL_12;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v144, 1, v150)) {
    goto LABEL_43;
  }
  uint64_t v78 = v131;
  _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v144, v131);
  uint64_t v21 = (char *)Participant.avInfo.getter();
  _s15ConversationKit11ParticipantVWOhTm_13(v78, (void (*)(void))type metadata accessor for Participant);
  if v21 == 2 || (v142) {
    goto LABEL_43;
  }
  uint64_t v51 = v129;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v144, v129, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v51, 1, v150) != 1)
  {
LABEL_50:
    _s15ConversationKit11ParticipantVWObTm_6(v51, v130);
    uint64_t v84 = v128;
    swift_beginAccess();
    uint64_t v85 = *v84;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v84 = v85;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v85 = specialized _ArrayBuffer._consumeAndCreateNew()();
      *uint64_t v128 = v85;
    }
    if ((v141 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v141 < *(void *)(v85 + 16))
    {
      uint64_t v87 = (uint64_t)v124;
      specialized Set._Variant.remove(_:)();
      swift_endAccess();
      outlined destroy of SystemUpdateNotice?(v87, &demangling cache variable for type metadata for Participant?);
      Participant.videoInfo.getter();
      outlined init with take of AspectRatio?((uint64_t)v169, (uint64_t)&v159, &demangling cache variable for type metadata for Participant.VideoInfo?);
      outlined init with take of AspectRatio?((uint64_t)v169, (uint64_t)v171, &demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v171[0]) {
        char v160 = 1;
      }
      if (!v159) {
        goto LABEL_80;
      }
      uint64_t v18 = &selRef_ringButton;
      id v88 = objc_msgSend(v126, sel_remoteVideoAttributes);
      if (!v88) {
        goto LABEL_60;
      }
      id v89 = v88;
      unsigned __int8 v90 = objc_msgSend(v88, sel_videoMirrored);

LABEL_61:
      unsigned __int8 v161 = v90;
      if (!v159) {
        goto LABEL_80;
      }
      id v91 = [v126 v18[466]];
      if (v91)
      {
        id v92 = v91;
        int v93 = objc_msgSend(v91, sel_orientation);

LABEL_67:
        uint64_t v162 = VideoAttributeOrientation.deviceOrientation.getter(v93);
        if (v159)
        {
          id v94 = [v126 v18[466]];
          if (v94)
          {
            uint64_t v95 = v94;
            unsigned int v96 = objc_msgSend(v94, sel_camera);
          }
          else
          {
            unsigned int v96 = 0;
          }
          char v163 = VideoAttributeCamera.cameraPosition.getter(v96);
          if (v159)
          {
            specialized Dictionary.subscript.getter();
            if (*((void *)&v156 + 1))
            {
              outlined init with take of Notice(&v155, (uint64_t)&v172);
              if (!v159)
              {
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v172);
                goto LABEL_82;
              }
              outlined init with copy of Conversation((uint64_t)&v172, (uint64_t)v170);
              if (ConversationController.isOneToOneModeEnabled.getter())
              {
                static AspectRatio.remoteAspectRatios(with:contentsRect:)(v170, (uint64_t)&v155, 1.0, 1.0);
                double v98 = *((double *)&v155 + 1);
                double v97 = *(double *)&v155;
                char v99 = v156;
                double v100 = v157;
                double v152 = *((double *)&v156 + 1);
                int v101 = v158;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v170);
                if ((v99 & 1) == 0 && v97 != v98)
                {
                  char v102 = 0;
                  if (v101)
                  {
                    double v100 = v97;
                    double v103 = v98;
                  }
                  else
                  {
                    double v103 = v152;
                  }
                  goto LABEL_92;
                }
              }
              else
              {
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v170);
              }
              double v97 = 0.0;
              double v98 = 0.0;
              double v103 = 0.0;
              double v100 = 0.0;
              char v102 = 1;
LABEL_92:
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v172);
              double v164 = v97;
              double v165 = v98;
              double v166 = v103;
              double v167 = v100;
              char v168 = v102;
LABEL_82:
              Participant.screenInfo.getter(&v155);
              uint64_t v104 = Participant.captionInfo.getter();
              double v106 = v105;
              char v26 = v107;
              outlined init with take of AspectRatio?((uint64_t)&v159, (uint64_t)&v172, &demangling cache variable for type metadata for Participant.VideoInfo?);
              outlined retain of [Participant]((uint64_t)&v172);
              Participant.copresenceInfo.getter();
              uint64_t v21 = v127;
              uint64_t v151 = v104;
              double v152 = v106;
              Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
              outlined release of Participant.CopresenceInfo?(v170);
              outlined release of LinearGradient((uint64_t)&v172);
              _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v21, v125);
              uint64_t v84 = v128;
              swift_beginAccess();
              uint64_t v108 = *v84;
              char v109 = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v84 = v108;
              if (v109) {
                goto LABEL_83;
              }
              goto LABEL_95;
            }
LABEL_81:
            outlined destroy of SystemUpdateNotice?((uint64_t)&v155, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
            goto LABEL_82;
          }
        }
LABEL_80:
        double v157 = 0.0;
        long long v155 = 0u;
        long long v156 = 0u;
        goto LABEL_81;
      }
LABEL_66:
      int v93 = 0;
      goto LABEL_67;
    }
    __break(1u);
LABEL_95:
    uint64_t v108 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *uint64_t v84 = v108;
LABEL_83:
    if (v141 >= *(void *)(v108 + 16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v110 = (uint64_t)v122;
      specialized Set._Variant.insert(_:)();
      swift_endAccess();
      _s15ConversationKit11ParticipantVWOhTm_13(v110, (void (*)(void))type metadata accessor for Participant);
      if (one-time initialization token for conversationController == -1)
      {
LABEL_85:
        uint64_t v111 = type metadata accessor for Logger();
        __swift_project_value_buffer(v111, (uint64_t)static Logger.conversationController);
        uint64_t v112 = v123;
        _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v21, v123);
        char v113 = Logger.logObject.getter();
        os_log_type_t v114 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v113, v114))
        {
          double v115 = (uint8_t *)swift_slowAlloc();
          uint64_t v116 = swift_slowAlloc();
          v154[0] = v116;
          *(_DWORD *)double v115 = v135;
          uint64_t v148 = v115 + 4;
          uint64_t v149 = v26;
          uint64_t v117 = v143;
          _s15ConversationKit11ParticipantVWOcTm_19(v112, v143);
          __swift_storeEnumTagSinglePayload(v117, 0, 1, v150);
          uint64_t v118 = specialized >> prefix<A>(_:)();
          unint64_t v120 = v119;
          outlined destroy of SystemUpdateNotice?(v117, &demangling cache variable for type metadata for Participant?);
          uint64_t v153 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v118, v120, v154);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s15ConversationKit11ParticipantVWOhTm_13(v112, (void (*)(void))type metadata accessor for Participant);
          _os_log_impl(&dword_1C2F90000, v113, v114, "Updated associate participant's isReceivingVideoFrames property to true. %s", v115, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v116, -1, -1);
          MEMORY[0x1C87760E0](v115, -1, -1);
          outlined consume of Participant.CaptionInfo?(v151);

          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v127, (void (*)(void))type metadata accessor for Participant);
        }
        else
        {
          outlined consume of Participant.CaptionInfo?(v151);

          _s15ConversationKit11ParticipantVWOhTm_13(v112, (void (*)(void))type metadata accessor for Participant);
          _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v21, (void (*)(void))type metadata accessor for Participant);
        }
        outlined destroy of SystemUpdateNotice?((uint64_t)&v155, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        _s15ConversationKit11ParticipantVWOhTm_13(v130, (void (*)(void))type metadata accessor for Participant);
        swift_bridgeObjectRelease();
        return outlined destroy of SystemUpdateNotice?((uint64_t)v144, &demangling cache variable for type metadata for Participant?);
      }
    }
    swift_once();
    goto LABEL_85;
  }
  outlined destroy of SystemUpdateNotice?(v51, &demangling cache variable for type metadata for Participant?);
LABEL_43:
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v79 = type metadata accessor for Logger();
  __swift_project_value_buffer(v79, (uint64_t)static Logger.conversationController);
  uint64_t v80 = Logger.logObject.getter();
  os_log_type_t v81 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v80, v81))
  {
    os_log_type_t v82 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v82 = 0;
    _os_log_impl(&dword_1C2F90000, v80, v81, "No associated participants match remote video client", v82, 2u);
    MEMORY[0x1C87760E0](v82, -1, -1);
  }

  return outlined destroy of SystemUpdateNotice?((uint64_t)v144, &demangling cache variable for type metadata for Participant?);
}

void ConversationController.remoteVideoClient(_:videoDidSuspend:)()
{
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  void (*v16)(void);
  void v17[6];

  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  uint64_t v9 = OUTLINED_FUNCTION_3_0();
  *(void *)(v9 + 16) = v8;
  *(unsigned char *)(v9 + 24) = v6;
  *(void *)(v9 + 32) = v0;
  v17[4] = v4;
  v17[5] = v9;
  v17[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v17[2] = thunk for @escaping @callee_guaranteed () -> ();
  v17[3] = v2;
  uint64_t v10 = _Block_copy(v17);
  uint64_t v11 = v8;
  uint64_t v12 = v0;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_5_1();
  v17[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_300();
  _Block_release(v10);

  OUTLINED_FUNCTION_4_1();
  v15();
  OUTLINED_FUNCTION_27_49();
  v16();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in ConversationController.remoteVideoClient(_:videoDidSuspend:)(void *a1, int a2, uint64_t a3)
{
  LODWORD(v68) = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v64 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for Participant(0);
  uint64_t v65 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v62 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v66 = (uint64_t)&v57 - v9;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v11 = swift_allocObject();
  long long v61 = xmmword_1C37696D0;
  *(_OWORD *)(v11 + 16) = xmmword_1C37696D0;
  v69[0] = a1;
  uint64_t v12 = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  id v13 = a1;
  unint64_t v67 = v12;
  uint64_t v14 = String.init<A>(reflecting:)();
  uint64_t v16 = v15;
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v18 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v11 + 64) = v18;
  *(void *)(v11 + 32) = v14;
  *(void *)(v11 + 40) = v16;
  uint64_t v19 = v17;
  uint64_t v20 = v68 & 1;
  LOBYTE(v69[0]) = v68 & 1;
  uint64_t v21 = String.init<A>(reflecting:)();
  *(void *)(v11 + 96) = v19;
  *(void *)(v11 + 104) = v18;
  *(void *)(v11 + 72) = v21;
  *(void *)(v11 + 80) = v22;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v23 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v13, 0);
  if (v24)
  {
    static os_log_type_t.error.getter();
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1C3769620;
    v69[0] = v13;
    id v41 = v13;
    uint64_t v42 = String.init<A>(reflecting:)();
    *(void *)(v40 + 56) = v19;
    *(void *)(v40 + 64) = v18;
    *(void *)(v40 + 32) = v42;
    *(void *)(v40 + 40) = v43;
    os_log(_:dso:log:type:_:)();
    return swift_bridgeObjectRelease();
  }
  unint64_t v25 = v23;
  unint64_t v67 = v18;
  uint64_t v68 = v10;
  char v26 = (uint64_t *)(a3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v27 = *v26;
  if (v25 >= *(void *)(*v26 + 16))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
    uint64_t v46 = result;
    *char v26 = result;
    goto LABEL_12;
  }
  int v60 = v20;
  uint64_t v20 = v66;
  unint64_t v28 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  unint64_t v29 = *(void *)(v65 + 72) * v25;
  _s15ConversationKit11ParticipantVWOcTm_19(v27 + v28 + v29, v66);
  if (Participant.avInfo.getter() == 2)
  {
    static os_log_type_t.error.getter();
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C3769620;
    uint64_t v32 = v64;
    _s15ConversationKit11ParticipantVWOcTm_19(v20, v64);
    __swift_storeEnumTagSinglePayload(v32, 0, 1, v63);
    uint64_t v33 = specialized >> prefix<A>(_:)();
    uint64_t v34 = v20;
    uint64_t v35 = v19;
    uint64_t v37 = v36;
    outlined destroy of SystemUpdateNotice?(v32, &demangling cache variable for type metadata for Participant?);
    unint64_t v38 = v67;
    *(void *)(v31 + 56) = v35;
    *(void *)(v31 + 64) = v38;
    *(void *)(v31 + 32) = v33;
    *(void *)(v31 + 40) = v37;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    return _s15ConversationKit11ParticipantVWOhTm_13(v34, (void (*)(void))type metadata accessor for Participant);
  }
  unint64_t v58 = v28;
  uint64_t v59 = v30;
  unint64_t v57 = v29;
  uint64_t v65 = a3;
  Participant.videoInfo.getter();
  outlined init with take of AspectRatio?((uint64_t)v71, (uint64_t)v70, &demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined init with take of AspectRatio?((uint64_t)v71, (uint64_t)v73, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v73[0]) {
    v70[9] = v60;
  }
  outlined init with take of AspectRatio?((uint64_t)v70, (uint64_t)v74, &demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined retain of [Participant]((uint64_t)v74);
  Participant.screenInfo.getter(v69);
  uint64_t v44 = Participant.captionInfo.getter();
  Participant.copresenceInfo.getter();
  uint64_t v45 = (uint64_t)v62;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v72);
  outlined consume of Participant.CaptionInfo?(v44);
  outlined release of LinearGradient((uint64_t)v74);
  outlined destroy of SystemUpdateNotice?((uint64_t)v69, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  _s15ConversationKit11ParticipantVWOhTm_13(v20, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWObTm_6(v45, v20);
  swift_beginAccess();
  uint64_t v46 = *v26;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *char v26 = v46;
  if ((result & 1) == 0) {
    goto LABEL_17;
  }
LABEL_12:
  unint64_t v47 = v67;
  if (v25 < *(void *)(v46 + 16))
  {
    outlined assign with copy of Participant.State(v20, v46 + v58 + v57);
    swift_endAccess();
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v61;
    LOBYTE(v69[0]) = v60;
    uint64_t v49 = String.init<A>(reflecting:)();
    uint64_t v50 = v20;
    uint64_t v51 = MEMORY[0x1E4FBB1A0];
    *(void *)(v48 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v48 + 64) = v47;
    *(void *)(v48 + 32) = v49;
    *(void *)(v48 + 40) = v52;
    uint64_t v53 = v64;
    _s15ConversationKit11ParticipantVWOcTm_19(v50, v64);
    __swift_storeEnumTagSinglePayload(v53, 0, 1, v63);
    uint64_t v54 = specialized >> prefix<A>(_:)();
    uint64_t v56 = v55;
    outlined destroy of SystemUpdateNotice?(v53, &demangling cache variable for type metadata for Participant?);
    *(void *)(v48 + 96) = v51;
    *(void *)(v48 + 104) = v47;
    *(void *)(v48 + 72) = v54;
    *(void *)(v48 + 80) = v56;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.didUpdateVisibleParticipant(_:)(v50);
    _s15ConversationKit11ParticipantVWOhTm_13(v50, (void (*)(void))type metadata accessor for Participant);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void ConversationController.remoteVideoClient(_:remoteVideoDidPause:)()
{
}

uint64_t closure #1 in ConversationController.remoteVideoClient(_:remoteVideoDidPause:)(void *a1, int a2, uint64_t a3)
{
  LODWORD(v65) = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v62 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for Participant(0);
  unint64_t v63 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  int v60 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v66 = (char *)&v55 - v9;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v11 = swift_allocObject();
  long long v59 = xmmword_1C37696D0;
  *(_OWORD *)(v11 + 16) = xmmword_1C37696D0;
  v67[0] = a1;
  uint64_t v12 = type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  id v13 = a1;
  unint64_t v64 = v12;
  uint64_t v14 = String.init<A>(reflecting:)();
  uint64_t v16 = v15;
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v18 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v11 + 64) = v18;
  *(void *)(v11 + 32) = v14;
  *(void *)(v11 + 40) = v16;
  uint64_t v19 = v17;
  int v20 = v65 & 1;
  LOBYTE(v67[0]) = v65 & 1;
  uint64_t v21 = String.init<A>(reflecting:)();
  *(void *)(v11 + 96) = v19;
  *(void *)(v11 + 104) = v18;
  *(void *)(v11 + 72) = v21;
  *(void *)(v11 + 80) = v22;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v23 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v13, 0);
  if (v24)
  {
    static os_log_type_t.error.getter();
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1C3769620;
    v67[0] = v13;
    id v40 = v13;
    uint64_t v41 = String.init<A>(reflecting:)();
    *(void *)(v39 + 56) = v19;
    *(void *)(v39 + 64) = v18;
    *(void *)(v39 + 32) = v41;
    *(void *)(v39 + 40) = v42;
    os_log(_:dso:log:type:_:)();
    return swift_bridgeObjectRelease();
  }
  unint64_t v25 = v23;
  uint64_t v26 = a3;
  unint64_t v64 = v18;
  uint64_t v65 = v10;
  uint64_t v27 = (uint64_t *)(a3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v28 = *v27;
  if (v25 >= *(void *)(*v27 + 16))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
    uint64_t v45 = result;
    *uint64_t v27 = result;
    goto LABEL_12;
  }
  unint64_t v29 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  unint64_t v63 = *(void *)(v63 + 72) * v25;
  uint64_t v30 = (uint64_t)v66;
  _s15ConversationKit11ParticipantVWOcTm_19(v28 + v29 + v63, (uint64_t)v66);
  if (Participant.avInfo.getter() == 2)
  {
    static os_log_type_t.error.getter();
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C3769620;
    uint64_t v32 = v62;
    _s15ConversationKit11ParticipantVWOcTm_19(v30, v62);
    __swift_storeEnumTagSinglePayload(v32, 0, 1, v61);
    uint64_t v33 = specialized >> prefix<A>(_:)();
    uint64_t v34 = v19;
    uint64_t v36 = v35;
    outlined destroy of SystemUpdateNotice?(v32, &demangling cache variable for type metadata for Participant?);
    unint64_t v37 = v64;
    *(void *)(v31 + 56) = v34;
    *(void *)(v31 + 64) = v37;
    *(void *)(v31 + 32) = v33;
    *(void *)(v31 + 40) = v36;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    return _s15ConversationKit11ParticipantVWOhTm_13(v30, (void (*)(void))type metadata accessor for Participant);
  }
  unint64_t v56 = v29;
  uint64_t v57 = v26;
  int v58 = v20;
  Participant.videoInfo.getter();
  outlined init with take of AspectRatio?((uint64_t)v69, (uint64_t)v68, &demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined init with take of AspectRatio?((uint64_t)v69, (uint64_t)v71, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v71[0]) {
    void v68[10] = v58;
  }
  outlined init with take of AspectRatio?((uint64_t)v68, (uint64_t)v72, &demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined retain of [Participant]((uint64_t)v72);
  Participant.screenInfo.getter(v67);
  uint64_t v43 = Participant.captionInfo.getter();
  Participant.copresenceInfo.getter();
  uint64_t v44 = (uint64_t)v60;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v70);
  id v13 = v66;
  outlined consume of Participant.CaptionInfo?(v43);
  outlined release of LinearGradient((uint64_t)v72);
  outlined destroy of SystemUpdateNotice?((uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v13, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWObTm_6(v44, (uint64_t)v13);
  swift_beginAccess();
  uint64_t v45 = *v27;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v27 = v45;
  if ((result & 1) == 0) {
    goto LABEL_19;
  }
LABEL_12:
  unint64_t v46 = v64;
  if (v25 < *(void *)(v45 + 16))
  {
    outlined assign with copy of Participant.State((uint64_t)v13, v45 + v56 + v63);
    swift_endAccess();
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = v59;
    LOBYTE(v67[0]) = v58;
    uint64_t v48 = String.init<A>(reflecting:)();
    uint64_t v49 = MEMORY[0x1E4FBB1A0];
    *(void *)(v47 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v47 + 64) = v46;
    *(void *)(v47 + 32) = v48;
    *(void *)(v47 + 40) = v50;
    uint64_t v51 = v62;
    _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v13, v62);
    __swift_storeEnumTagSinglePayload(v51, 0, 1, v61);
    uint64_t v52 = specialized >> prefix<A>(_:)();
    uint64_t v54 = v53;
    outlined destroy of SystemUpdateNotice?(v51, &demangling cache variable for type metadata for Participant?);
    *(void *)(v47 + 96) = v49;
    *(void *)(v47 + 104) = v46;
    *(void *)(v47 + 72) = v52;
    *(void *)(v47 + 80) = v54;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.didUpdateVisibleParticipant(_:)((uint64_t)v13);
    if (ConversationController.isOneToOneModeEnabled.getter())
    {
      swift_beginAccess();
      ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
    }
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v13, (void (*)(void))type metadata accessor for Participant);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void ConversationController.remoteVideoClient(_:networkQualityDidDegrade:info:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v1;
  char v4 = v3;
  uint64_t v6 = v5;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  if ((*(uint64_t (**)(void))(v7 + 120))()) {
    goto LABEL_6;
  }
  if (v2)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v17[3] = static OS_dispatch_queue.main.getter();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v6;
    *(unsigned char *)(v8 + 24) = v4 & 1;
    *(void *)(v8 + 32) = v2;
    *(void *)(v8 + 40) = v0;
    void v18[4] = partial apply for closure #1 in ConversationController.remoteVideoClient(_:networkQualityDidDegrade:info:);
    void v18[5] = v8;
    v18[0] = MEMORY[0x1E4F143A8];
    OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
    void v18[2] = thunk for @escaping @callee_guaranteed () -> ();
    v18[3] = &block_descriptor_200_0;
    uint64_t v9 = _Block_copy(v18);
    swift_bridgeObjectRetain();
    id v10 = v0;
    id v11 = v6;
    swift_release();
    type metadata accessor for DispatchQoS();
    v17[2] = v17;
    OUTLINED_FUNCTION_5_3();
    MEMORY[0x1F4188790](v12);
    OUTLINED_FUNCTION_59_0();
    type metadata accessor for DispatchWorkItemFlags();
    v17[1] = v17;
    OUTLINED_FUNCTION_5_3();
    MEMORY[0x1F4188790](v13);
    OUTLINED_FUNCTION_5_1();
    v18[0] = MEMORY[0x1E4FBC860];
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    OUTLINED_FUNCTION_42_0();
    OUTLINED_FUNCTION_300();
    _Block_release(v9);

    OUTLINED_FUNCTION_4_1();
    v14();
    OUTLINED_FUNCTION_27_49();
    v15();
    OUTLINED_FUNCTION_173_4();
LABEL_6:
    OUTLINED_FUNCTION_28();
    return;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_28();
  os_log(_:dso:log:type:_:)();
}

uint64_t closure #1 in ConversationController.remoteVideoClient(_:networkQualityDidDegrade:info:)(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v81 = a3;
  uint64_t v82 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for Participant(0);
  uint64_t v78 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  os_log_t v75 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v79 = (uint64_t)&v70 - v10;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v11 = swift_allocObject();
  long long v74 = xmmword_1C376BA10;
  *(_OWORD *)(v11 + 16) = xmmword_1C376BA10;
  v83[0] = a1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  id v12 = a1;
  uint64_t v13 = String.init<A>(reflecting:)();
  uint64_t v15 = v14;
  unint64_t v16 = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v17 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v11 + 64) = v17;
  *(void *)(v11 + 32) = v13;
  *(void *)(v11 + 40) = v15;
  unint64_t v18 = v16;
  char v19 = a2;
  int v73 = a2 & 1;
  LOBYTE(v83[0]) = a2 & 1;
  uint64_t v20 = String.init<A>(reflecting:)();
  *(void *)(v11 + 96) = v16;
  *(void *)(v11 + 104) = v17;
  *(void *)(v11 + 72) = v20;
  *(void *)(v11 + 80) = v21;
  if (v81)
  {
    v83[0] = v81;
    uint64_t v22 = v81;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyHashable : Any]);
    uint64_t v23 = String.init<A>(reflecting:)();
  }
  else
  {
    uint64_t v22 = 0;
    unint64_t v24 = 0xE300000000000000;
    uint64_t v23 = 7104878;
  }
  uint64_t v25 = v82;
  *(void *)(v11 + 136) = v18;
  *(void *)(v11 + 144) = v17;
  *(void *)(v11 + 112) = v23;
  *(void *)(v11 + 120) = v24;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v26 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v12, 0);
  if (v27)
  {
    static os_log_type_t.error.getter();
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1C3769620;
    v83[0] = v12;
    id v41 = v12;
    uint64_t v42 = String.init<A>(reflecting:)();
    *(void *)(v40 + 56) = v18;
    *(void *)(v40 + 64) = v17;
    *(void *)(v40 + 32) = v42;
    *(void *)(v40 + 40) = v43;
    os_log(_:dso:log:type:_:)();
    return swift_bridgeObjectRelease();
  }
  unint64_t v28 = v26;
  unint64_t v29 = (uint64_t *)(v25 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  if ((v28 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v28 < *(void *)(*v29 + 16))
  {
    uint64_t v30 = v79;
    unint64_t v31 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    unint64_t v18 = *(void *)(v78 + 72) * v28;
    _s15ConversationKit11ParticipantVWOcTm_19(*v29 + v31 + v18, v79);
    uint64_t v32 = Participant.avInfo.getter();
    if (v32 == 2)
    {
      static os_log_type_t.error.getter();
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1C3769620;
      uint64_t v35 = v77;
      _s15ConversationKit11ParticipantVWOcTm_19(v30, v77);
      __swift_storeEnumTagSinglePayload(v35, 0, 1, v76);
      uint64_t v36 = specialized >> prefix<A>(_:)();
      uint64_t v38 = v37;
      outlined destroy of SystemUpdateNotice?(v35, &demangling cache variable for type metadata for Participant?);
      *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v34 + 64) = v17;
      *(void *)(v34 + 32) = v36;
      *(void *)(v34 + 40) = v38;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      return _s15ConversationKit11ParticipantVWOhTm_13(v30, (void (*)(void))type metadata accessor for Participant);
    }
    uint64_t v78 = v32;
    uint64_t v81 = v33;
    Participant.videoInfo.getter();
    outlined init with take of AspectRatio?((uint64_t)v87, (uint64_t)&v84, &demangling cache variable for type metadata for Participant.VideoInfo?);
    outlined init with take of AspectRatio?((uint64_t)v87, (uint64_t)v89, &demangling cache variable for type metadata for Participant.VideoInfo?);
    if (!v89[0] || v86 != 1)
    {
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      uint64_t v52 = v30;
LABEL_36:
      _s15ConversationKit11ParticipantVWOhTm_13(v52, (void (*)(void))type metadata accessor for Participant);
      return swift_bridgeObjectRelease();
    }
    if (v84) {
      char v85 = 1;
    }
    unint64_t v71 = v31;
    uint64_t v72 = v29;
    if (v19)
    {
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v46 = v45;
      if (v22)
      {
        uint64_t v47 = v44;
        v90[0] = v44;
        v90[1] = v45;
        swift_bridgeObjectRetain();
        AnyHashable.init<A>(_:)();
        if (*(void *)(v22 + 16))
        {
          specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v83);
          char v49 = v48;
          outlined destroy of AnyHashable((uint64_t)v83);
          if (v49)
          {
            v88[0] = v47;
            v88[1] = v46;
            uint64_t v50 = MEMORY[0x1E4FBB1A0];
            AnyHashable.init<A>(_:)();
            specialized Dictionary.subscript.getter();
            outlined destroy of AnyHashable((uint64_t)v83);
            if (v90[3])
            {
              if ((swift_dynamicCast() & 1) != 0 && v84)
              {
                if (LOBYTE(v83[0])) {
                  char v51 = 3;
                }
                else {
                  char v51 = 2;
                }
                char v85 = v51;
              }
            }
            else
            {
              outlined destroy of SystemUpdateNotice?((uint64_t)v90, &demangling cache variable for type metadata for Any?);
            }
            uint64_t v67 = swift_allocObject();
            *(_OWORD *)(v67 + 16) = xmmword_1C3769620;
            if (v84)
            {
              LOBYTE(v83[0]) = v85;
              uint64_t v68 = String.init<A>(reflecting:)();
            }
            else
            {
              unint64_t v69 = 0xE300000000000000;
              uint64_t v68 = 7104878;
            }
            *(void *)(v67 + 56) = v50;
            *(void *)(v67 + 64) = v17;
            *(void *)(v67 + 32) = v68;
            *(void *)(v67 + 40) = v69;
            static os_log_type_t.default.getter();
            os_log(_:dso:log:type:_:)();
            swift_bridgeObjectRelease();
            goto LABEL_30;
          }
        }
        else
        {
          outlined destroy of AnyHashable((uint64_t)v83);
        }
      }
      swift_bridgeObjectRelease();
    }
LABEL_30:
    outlined init with take of AspectRatio?((uint64_t)&v84, (uint64_t)v90, &demangling cache variable for type metadata for Participant.VideoInfo?);
    outlined retain of [Participant]((uint64_t)v90);
    Participant.screenInfo.getter(v83);
    uint64_t v53 = Participant.captionInfo.getter();
    Participant.copresenceInfo.getter();
    uint64_t v54 = (uint64_t)v75;
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?(v88);
    uint64_t v22 = v79;
    outlined consume of Participant.CaptionInfo?(v53);
    outlined release of LinearGradient((uint64_t)v90);
    outlined destroy of SystemUpdateNotice?((uint64_t)v83, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    _s15ConversationKit11ParticipantVWOhTm_13(v22, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWObTm_6(v54, v22);
    unint64_t v29 = v72;
    swift_beginAccess();
    uint64_t v55 = *v29;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v29 = v55;
    if (result) {
      goto LABEL_31;
    }
    goto LABEL_45;
  }
  __break(1u);
LABEL_45:
  uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
  uint64_t v55 = result;
  *unint64_t v29 = result;
LABEL_31:
  if (v28 < *(void *)(v55 + 16))
  {
    outlined assign with copy of Participant.State(v22, v55 + v71 + v18);
    swift_endAccess();
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = v74;
    LOBYTE(v83[0]) = v73;
    uint64_t v57 = String.init<A>(reflecting:)();
    uint64_t v58 = MEMORY[0x1E4FBB1A0];
    *(void *)(v56 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v56 + 64) = v17;
    *(void *)(v56 + 32) = v57;
    *(void *)(v56 + 40) = v59;
    if (v84)
    {
      LOBYTE(v83[0]) = v85;
      uint64_t v60 = String.init<A>(reflecting:)();
    }
    else
    {
      unint64_t v61 = 0xE300000000000000;
      uint64_t v60 = 7104878;
    }
    *(void *)(v56 + 96) = v58;
    *(void *)(v56 + 104) = v17;
    *(void *)(v56 + 72) = v60;
    *(void *)(v56 + 80) = v61;
    uint64_t v62 = v77;
    _s15ConversationKit11ParticipantVWOcTm_19(v22, v77);
    __swift_storeEnumTagSinglePayload(v62, 0, 1, v76);
    uint64_t v63 = v58;
    uint64_t v64 = specialized >> prefix<A>(_:)();
    uint64_t v66 = v65;
    outlined destroy of SystemUpdateNotice?(v62, &demangling cache variable for type metadata for Participant?);
    *(void *)(v56 + 136) = v63;
    *(void *)(v56 + 144) = v17;
    *(void *)(v56 + 112) = v64;
    *(void *)(v56 + 120) = v66;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.didUpdateVisibleParticipant(_:)(v22);
    uint64_t v52 = v22;
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

void ConversationController.remoteVideoClient(_:videoDidDegrade:)()
{
  OUTLINED_FUNCTION_31();
  char v2 = v1;
  char v4 = v3;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  if (((*(uint64_t (**)(void))(v5 + 120))() & 1) == 0)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    void v14[3] = static OS_dispatch_queue.main.getter();
    uint64_t v6 = OUTLINED_FUNCTION_3_0();
    *(void *)(v6 + 16) = v4;
    *(unsigned char *)(v6 + 24) = v2 & 1;
    *(void *)(v6 + 32) = v0;
    v15[4] = partial apply for closure #1 in ConversationController.remoteVideoClient(_:videoDidDegrade:);
    void v15[5] = v6;
    v15[0] = MEMORY[0x1E4F143A8];
    OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
    v15[2] = thunk for @escaping @callee_guaranteed () -> ();
    void v15[3] = &block_descriptor_206_0;
    uint64_t v7 = _Block_copy(v15);
    id v8 = v4;
    id v9 = v0;
    swift_release();
    type metadata accessor for DispatchQoS();
    uint64_t v14[2] = v14;
    OUTLINED_FUNCTION_5_3();
    MEMORY[0x1F4188790](v10);
    OUTLINED_FUNCTION_59_0();
    type metadata accessor for DispatchWorkItemFlags();
    v14[1] = v14;
    OUTLINED_FUNCTION_5_3();
    MEMORY[0x1F4188790](v11);
    OUTLINED_FUNCTION_5_1();
    v15[0] = MEMORY[0x1E4FBC860];
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    OUTLINED_FUNCTION_42_0();
    OUTLINED_FUNCTION_300();
    _Block_release(v7);

    OUTLINED_FUNCTION_4_1();
    v12();
    OUTLINED_FUNCTION_27_49();
    v13();
    OUTLINED_FUNCTION_173_4();
  }
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in ConversationController.remoteVideoClient(_:videoDidDegrade:)(void *a1, int a2, uint64_t a3)
{
  uint64_t v67 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v63 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for Participant(0);
  unint64_t v64 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  unint64_t v61 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v66 = (uint64_t)&v57 - v9;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v65 = static OS_os_log.conversationKit;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v11 = swift_allocObject();
  long long v59 = xmmword_1C37696D0;
  *(_OWORD *)(v11 + 16) = xmmword_1C37696D0;
  v68[0] = a1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  id v12 = a1;
  uint64_t v13 = String.init<A>(reflecting:)();
  uint64_t v15 = v14;
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v17 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v11 + 64) = v17;
  *(void *)(v11 + 32) = v13;
  *(void *)(v11 + 40) = v15;
  LODWORD(v60) = a2;
  char v18 = a2 & 1;
  LOBYTE(v68[0]) = a2 & 1;
  uint64_t v19 = String.init<A>(reflecting:)();
  *(void *)(v11 + 96) = v16;
  *(void *)(v11 + 104) = v17;
  *(void *)(v11 + 72) = v19;
  *(void *)(v11 + 80) = v20;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v21 = v67;
  uint64_t v22 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v12, 0);
  if (v23)
  {
    static os_log_type_t.error.getter();
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C3769620;
    v68[0] = v12;
    id v37 = v12;
    uint64_t v38 = String.init<A>(reflecting:)();
    *(void *)(v36 + 56) = v16;
    *(void *)(v36 + 64) = v17;
    *(void *)(v36 + 32) = v38;
    *(void *)(v36 + 40) = v39;
    os_log(_:dso:log:type:_:)();
    return swift_bridgeObjectRelease();
  }
  unint64_t v24 = v22;
  id v57 = v12;
  unint64_t v58 = v17;
  uint64_t v65 = v10;
  uint64_t v25 = (uint64_t *)(v21 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  if ((v24 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v24 < *(void *)(*v25 + 16))
  {
    unint64_t v26 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    unint64_t v27 = *(void *)(v64 + 72) * v24;
    uint64_t v28 = v66;
    _s15ConversationKit11ParticipantVWOcTm_19(*v25 + v26 + v27, v66);
    if (Participant.avInfo.getter() == 2)
    {
      static os_log_type_t.error.getter();
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1C3769620;
      uint64_t v30 = v63;
      _s15ConversationKit11ParticipantVWOcTm_19(v28, v63);
      __swift_storeEnumTagSinglePayload(v30, 0, 1, v62);
      uint64_t v31 = specialized >> prefix<A>(_:)();
      uint64_t v33 = v32;
      outlined destroy of SystemUpdateNotice?(v30, &demangling cache variable for type metadata for Participant?);
      unint64_t v34 = v58;
      *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v29 + 64) = v34;
      *(void *)(v29 + 32) = v31;
      *(void *)(v29 + 40) = v33;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      return _s15ConversationKit11ParticipantVWOhTm_13(v28, (void (*)(void))type metadata accessor for Participant);
    }
    unint64_t v64 = v26;
    Participant.videoInfo.getter();
    outlined init with take of AspectRatio?((uint64_t)v72, (uint64_t)&v69, &demangling cache variable for type metadata for Participant.VideoInfo?);
    outlined init with take of AspectRatio?((uint64_t)v72, (uint64_t)v74, &demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v74[0]) {
      char v71 = v18;
    }
    if (v60)
    {
      if (v69) {
        char v70 = 1;
      }
      id v40 = v57;
      if (!objc_msgSend(v57, sel_isNetworkDegraded) || !v69)
      {
LABEL_22:
        unint64_t v60 = v27;
        outlined init with take of AspectRatio?((uint64_t)&v69, (uint64_t)v75, &demangling cache variable for type metadata for Participant.VideoInfo?);
        outlined retain of [Participant]((uint64_t)v75);
        Participant.screenInfo.getter(v68);
        uint64_t v42 = Participant.captionInfo.getter();
        Participant.copresenceInfo.getter();
        uint64_t v43 = (uint64_t)v61;
        Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
        outlined release of Participant.CopresenceInfo?(v73);
        uint64_t v44 = v42;
        uint64_t v11 = v66;
        outlined consume of Participant.CaptionInfo?(v44);
        outlined release of LinearGradient((uint64_t)v75);
        outlined destroy of SystemUpdateNotice?((uint64_t)v68, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        _s15ConversationKit11ParticipantVWOhTm_13(v11, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWObTm_6(v43, v11);
        swift_beginAccess();
        uint64_t v45 = *v25;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v25 = v45;
        if (result) {
          goto LABEL_23;
        }
        goto LABEL_31;
      }
      if (objc_msgSend(v40, sel_isNetworkDegradedLocal)) {
        char v41 = 3;
      }
      else {
        char v41 = 2;
      }
    }
    else
    {
      if (!v69) {
        goto LABEL_22;
      }
      char v41 = 0;
    }
    char v70 = v41;
    goto LABEL_22;
  }
  __break(1u);
LABEL_31:
  uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
  uint64_t v45 = result;
  *uint64_t v25 = result;
LABEL_23:
  uint64_t v46 = MEMORY[0x1E4FBB1A0];
  unint64_t v47 = v58;
  if (v24 < *(void *)(v45 + 16))
  {
    outlined assign with copy of Participant.State(v11, v45 + v64 + v60);
    swift_endAccess();
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v59;
    if (v69)
    {
      LOBYTE(v68[0]) = v70;
      uint64_t v49 = String.init<A>(reflecting:)();
    }
    else
    {
      unint64_t v50 = 0xE300000000000000;
      uint64_t v49 = 7104878;
    }
    *(void *)(v48 + 56) = v46;
    *(void *)(v48 + 64) = v47;
    *(void *)(v48 + 32) = v49;
    *(void *)(v48 + 40) = v50;
    uint64_t v51 = v11;
    uint64_t v52 = v11;
    uint64_t v53 = v63;
    _s15ConversationKit11ParticipantVWOcTm_19(v51, v63);
    __swift_storeEnumTagSinglePayload(v53, 0, 1, v62);
    uint64_t v54 = specialized >> prefix<A>(_:)();
    uint64_t v56 = v55;
    outlined destroy of SystemUpdateNotice?(v53, &demangling cache variable for type metadata for Participant?);
    *(void *)(v48 + 96) = v46;
    *(void *)(v48 + 104) = v47;
    *(void *)(v48 + 72) = v54;
    *(void *)(v48 + 80) = v56;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.didUpdateVisibleParticipant(_:)(v52);
    _s15ConversationKit11ParticipantVWOhTm_13(v52, (void (*)(void))type metadata accessor for Participant);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void ConversationController.remoteVideoClient(_:remoteMediaDidStall:)()
{
}

uint64_t closure #1 in ConversationController.remoteVideoClient(_:remoteMediaDidStall:)(void *a1, int a2, uint64_t a3)
{
  uint64_t v63 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v59 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for Participant(0);
  unint64_t v60 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  id v57 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v62 = (char *)&v51 - v9;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v61 = static OS_os_log.conversationKit;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v11 = swift_allocObject();
  long long v56 = xmmword_1C37696D0;
  *(_OWORD *)(v11 + 16) = xmmword_1C37696D0;
  v64[0] = a1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  id v12 = a1;
  uint64_t v13 = String.init<A>(reflecting:)();
  uint64_t v15 = v14;
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v17 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v11 + 64) = v17;
  *(void *)(v11 + 32) = v13;
  *(void *)(v11 + 40) = v15;
  int v54 = a2;
  int v55 = a2 & 1;
  LOBYTE(v64[0]) = a2 & 1;
  uint64_t v18 = String.init<A>(reflecting:)();
  *(void *)(v11 + 96) = v16;
  *(void *)(v11 + 104) = v17;
  *(void *)(v11 + 72) = v18;
  *(void *)(v11 + 80) = v19;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v20 = v63;
  uint64_t v21 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v12, 0);
  if (v22)
  {
    static os_log_type_t.error.getter();
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C3769620;
    v64[0] = v12;
    id v36 = v12;
    uint64_t v37 = String.init<A>(reflecting:)();
    *(void *)(v35 + 56) = v16;
    *(void *)(v35 + 64) = v17;
    *(void *)(v35 + 32) = v37;
    *(void *)(v35 + 40) = v38;
    os_log(_:dso:log:type:_:)();
    return swift_bridgeObjectRelease();
  }
  unint64_t v23 = v21;
  uint64_t v61 = v10;
  unint64_t v53 = v17;
  unint64_t v24 = (uint64_t *)(v20 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v23 >= *(void *)(*v24 + 16))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
    uint64_t v41 = result;
    *unint64_t v24 = result;
    goto LABEL_12;
  }
  unint64_t v25 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  unint64_t v26 = *(void *)(v60 + 72) * v23;
  uint64_t v27 = (uint64_t)v62;
  _s15ConversationKit11ParticipantVWOcTm_19(*v24 + v25 + v26, (uint64_t)v62);
  if (Participant.avInfo.getter() == 2)
  {
    static os_log_type_t.error.getter();
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1C3769620;
    uint64_t v29 = v59;
    _s15ConversationKit11ParticipantVWOcTm_19(v27, v59);
    __swift_storeEnumTagSinglePayload(v29, 0, 1, v58);
    uint64_t v30 = specialized >> prefix<A>(_:)();
    uint64_t v32 = v31;
    outlined destroy of SystemUpdateNotice?(v29, &demangling cache variable for type metadata for Participant?);
    unint64_t v33 = v53;
    *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v28 + 64) = v33;
    *(void *)(v28 + 32) = v30;
    *(void *)(v28 + 40) = v32;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    return _s15ConversationKit11ParticipantVWOhTm_13(v27, (void (*)(void))type metadata accessor for Participant);
  }
  unint64_t v52 = v26;
  unint64_t v60 = v25;
  Participant.videoInfo.getter();
  outlined init with take of AspectRatio?((uint64_t)v66, (uint64_t)v65, &demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined init with take of AspectRatio?((uint64_t)v66, (uint64_t)v68, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v68[0]) {
    v65[14] = ConversationController.isOneToOneModeEnabled.getter() & v54 & 1;
  }
  outlined init with take of AspectRatio?((uint64_t)v65, (uint64_t)v69, &demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined retain of [Participant]((uint64_t)v69);
  Participant.screenInfo.getter(v64);
  uint64_t v39 = Participant.captionInfo.getter();
  Participant.copresenceInfo.getter();
  uint64_t v40 = (uint64_t)v57;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v67);
  id v12 = v62;
  outlined consume of Participant.CaptionInfo?(v39);
  outlined release of LinearGradient((uint64_t)v69);
  outlined destroy of SystemUpdateNotice?((uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v12, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWObTm_6(v40, (uint64_t)v12);
  swift_beginAccess();
  uint64_t v41 = *v24;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v24 = v41;
  if ((result & 1) == 0) {
    goto LABEL_17;
  }
LABEL_12:
  uint64_t v42 = MEMORY[0x1E4FBB1A0];
  unint64_t v43 = v53;
  if (v23 < *(void *)(v41 + 16))
  {
    outlined assign with copy of Participant.State((uint64_t)v12, v41 + v60 + v52);
    swift_endAccess();
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = v56;
    LOBYTE(v64[0]) = v55;
    uint64_t v45 = String.init<A>(reflecting:)();
    *(void *)(v44 + 56) = v42;
    *(void *)(v44 + 64) = v43;
    *(void *)(v44 + 32) = v45;
    *(void *)(v44 + 40) = v46;
    uint64_t v47 = v59;
    _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v12, v59);
    __swift_storeEnumTagSinglePayload(v47, 0, 1, v58);
    uint64_t v48 = specialized >> prefix<A>(_:)();
    uint64_t v50 = v49;
    outlined destroy of SystemUpdateNotice?(v47, &demangling cache variable for type metadata for Participant?);
    *(void *)(v44 + 96) = v42;
    *(void *)(v44 + 104) = v43;
    *(void *)(v44 + 72) = v48;
    *(void *)(v44 + 80) = v50;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.didUpdateVisibleParticipant(_:)((uint64_t)v12);
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v12, (void (*)(void))type metadata accessor for Participant);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t closure #1 in ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)(void *a1, int *a2, char *a3)
{
  uint64_t v243 = a3;
  uint64_t v240 = a2;
  char v4 = (int *)type metadata accessor for Participant(0);
  uint64_t v237 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v234 = (uint64_t)&v220 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  char v226 = (char *)&v220 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v222 = (uint64_t)&v220 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v227 = (uint64_t)&v220 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v230 = (uint64_t)&v220 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v231 = (uint64_t)&v220 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  *(void *)&long long v229 = (char *)&v220 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  long long v232 = (char *)&v220 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v233 = (uint64_t)&v220 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  char v235 = (int *)((char *)&v220 - v24);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v236 = (uint64_t)&v220 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v242 = (uint64_t)&v220 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v220 - v29;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v238 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v31 = swift_allocObject();
  long long v228 = xmmword_1C37696D0;
  *(_OWORD *)(v31 + 16) = xmmword_1C37696D0;
  *(void *)uint64_t v246 = a1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  uint64_t v32 = a1;
  uint64_t v33 = String.init<A>(reflecting:)();
  uint64_t v35 = v34;
  uint64_t v36 = MEMORY[0x1E4FBB1A0];
  *(void *)(v31 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v37 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v31 + 64) = v37;
  *(void *)(v31 + 32) = v33;
  *(void *)(v31 + 40) = v35;
  uint64_t v38 = v240;
  *(void *)uint64_t v246 = v240;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for VideoAttributes);
  uint64_t v240 = v38;
  uint64_t v39 = String.init<A>(reflecting:)();
  *(void *)(v31 + 96) = v36;
  *(void *)(v31 + 104) = v37;
  unint64_t v239 = v37;
  *(void *)(v31 + 72) = v39;
  *(void *)(v31 + 80) = v40;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  __swift_storeEnumTagSinglePayload((uint64_t)v30, 1, 1, (uint64_t)v4);
  memset(v269, 0, 42);
  long long v268 = 0u;
  long long v267 = 0u;
  memset(v250, 0, sizeof(v250));
  unint64_t v251 = 1;
  bzero(v252, 0xB1uLL);
  uint64_t v41 = v243;
  uint64_t v42 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v32, 0);
  uint64_t v43 = (uint64_t)v30;
  char v241 = v4;
  if (v44)
  {
    uint64_t v59 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v32, 1);
    if (v60)
    {
LABEL_145:
      outlined destroy of SystemUpdateNotice?((uint64_t)v250, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      swift_bridgeObjectRelease();
      return outlined destroy of SystemUpdateNotice?(v43, &demangling cache variable for type metadata for Participant?);
    }
    unint64_t v45 = v59;
    uint64_t v61 = &v41[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
    swift_beginAccess();
    if ((v45 & 0x8000000000000000) != 0) {
      goto LABEL_165;
    }
    uint64_t v62 = *(void *)v61;
    if (v45 >= *(void *)(*(void *)v61 + 16))
    {
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
    uint64_t v63 = *(unsigned __int8 *)(v237 + 80);
    uint64_t v64 = *(void *)(v237 + 72);
    unint64_t v225 = v45;
    uint64_t v223 = v63;
    uint64_t v224 = v64;
    uint64_t v65 = v242;
    _s15ConversationKit11ParticipantVWOcTm_19(v62 + ((v63 + 32) & ~v63) + v64 * v45, v242);
    __swift_storeEnumTagSinglePayload(v65, 0, 1, (uint64_t)v4);
    outlined assign with take of Participant?(v65, (uint64_t)v30, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, (uint64_t)v4))
    {
      uint64_t v66 = 0;
      uint64_t v236 = 0;
      uint64_t v237 = 0;
      uint64_t v67 = 0;
      uint64_t v68 = 0;
      uint64_t v69 = 0;
      uint64_t v70 = 0;
      uint64_t v71 = 0;
      uint64_t v72 = 0;
      __int16 v73 = 0;
    }
    else
    {
      uint64_t v97 = v234;
      _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v30, v234);
      Participant.videoInfo.getter();
      uint64_t v236 = v272;
      uint64_t v237 = v271;
      uint64_t v67 = v273;
      uint64_t v68 = v274;
      uint64_t v69 = v275;
      uint64_t v70 = v276;
      uint64_t v71 = v277;
      uint64_t v72 = v278;
      __int16 v73 = v279;
      uint64_t v98 = v97;
      uint64_t v66 = v270;
      _s15ConversationKit11ParticipantVWOhTm_13(v98, (void (*)(void))type metadata accessor for Participant);
    }
    swift_bridgeObjectRelease();
    *(void *)&long long v267 = v66;
    *((void *)&v267 + 1) = v237;
    *(void *)&long long v268 = v236;
    *((void *)&v268 + 1) = v67;
    v269[0] = v68;
    v269[1] = v69;
    v269[2] = v70;
    v269[3] = v71;
    v269[4] = v72;
    LOWORD(v269[5]) = v73;
    uint64_t v38 = v241;
    if (__swift_getEnumTagSinglePayload(v43, 1, (uint64_t)v241))
    {
      uint64_t v236 = 0;
      uint64_t v237 = 0;
      char v4 = 0;
    }
    else
    {
      uint64_t v99 = v234;
      _s15ConversationKit11ParticipantVWOcTm_19(v43, v234);
      uint64_t v236 = Participant.captionInfo.getter();
      uint64_t v237 = v100;
      char v4 = v101;
      _s15ConversationKit11ParticipantVWOhTm_13(v99, (void (*)(void))type metadata accessor for Participant);
    }
    char v102 = v243;
    uint64_t v32 = v240;
    uint64_t v96 = (uint64_t)v235;
    if (__swift_getEnumTagSinglePayload(v43, 1, (uint64_t)v38))
    {
      memset(v246, 0, 24);
      *(void *)&v246[24] = 1;
      bzero(&v246[32], 0xB1uLL);
    }
    else
    {
      uint64_t v103 = v234;
      _s15ConversationKit11ParticipantVWOcTm_19(v43, v234);
      Participant.screenInfo.getter(v246);
      _s15ConversationKit11ParticipantVWOhTm_13(v103, (void (*)(void))type metadata accessor for Participant);
    }
    outlined assign with take of Participant?((uint64_t)v246, (uint64_t)v250, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    double v104 = 1.0;
    if (v251 == 1)
    {
      double v105 = 1.0;
    }
    else
    {
      char v106 = v102[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96];
      long long v107 = *(_OWORD *)&v102[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 16];
      long long v260 = *(_OWORD *)&v102[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes];
      long long v261 = v107;
      long long v108 = *(_OWORD *)&v102[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 48];
      long long v262 = *(_OWORD *)&v102[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 32];
      long long v263 = v108;
      long long v109 = *(_OWORD *)&v102[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 80];
      long long v264 = *(_OWORD *)&v102[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 64];
      long long v265 = v109;
      char v266 = v106;
      uint64_t v253 = VideoAttributeOrientation.deviceOrientation.getter((int)objc_msgSend(v32, sel_orientation));
      double v105 = 1.0;
      if (v251 != 1)
      {
        double v259 = VideoAttributes.scaleFactor.getter();
        unint64_t v110 = v251;
        if (v251 >= 2)
        {
          uint64_t v111 = v252[0];
          uint64_t v112 = __swift_project_boxed_opaque_existential_1(v250, v251);
          uint64_t v113 = *(void *)(v110 - 8);
          MEMORY[0x1F4188790](v112);
          double v115 = (char *)&v220 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v113 + 16))(v115);
          (*(void (**)(void *__return_ptr, unint64_t, uint64_t))(v111 + 64))(v280, v110, v111);
          double v116 = *(double *)&v280[2];
          double v117 = *(double *)&v280[3];
          (*(void (**)(char *, unint64_t))(v113 + 8))(v115, v110);
          uint64_t v38 = v241;
          outlined init with take of AspectRatio?((uint64_t)v280, (uint64_t)v284, (uint64_t *)&demangling cache variable for type metadata for CGRect?);
          if (v285) {
            double v105 = 1.0;
          }
          else {
            double v105 = v117;
          }
          if (v285) {
            double v104 = 1.0;
          }
          else {
            double v104 = v116;
          }
          unint64_t v110 = v251;
        }
        if (v110 != 1)
        {
          unint64_t v118 = v253;
          uint64_t v119 = v266 ? 0 : *((void *)&v264 + 1);
          objc_msgSend(v32, sel_ratio);
          double v121 = v120;
          objc_msgSend(v32, sel_ratio);
          unint64_t v123 = ConversationController.remoteOrientationFor(aspectRatio:videoRotation:deviceFamily:)(v118, v119, v121, v122);
          if (v251 != 1) {
            v252[2] = v123;
          }
        }
        uint64_t v96 = (uint64_t)v235;
      }
    }
    objc_msgSend(v32, sel_ratio);
    if (v251 != 1)
    {
      if (v125 >= v124) {
        double v126 = v124;
      }
      else {
        double v126 = v125;
      }
      if (v124 > v125) {
        double v125 = v124;
      }
      if (v126 == v124) {
        double v127 = v104;
      }
      else {
        double v127 = v105;
      }
      if (v127 == v104) {
        double v128 = v105;
      }
      else {
        double v128 = v104;
      }
      if (v125 == v124) {
        double v129 = v104;
      }
      else {
        double v129 = v105;
      }
      if (v126 == v125) {
        double v129 = v128;
      }
      double v254 = ceil(v126 * v127);
      double v255 = ceil(v125 * v129);
      double v256 = v255;
      double v257 = v254;
      char v258 = 0;
    }
    goto LABEL_84;
  }
  unint64_t v45 = v42;
  uint64_t v46 = &v41[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  swift_beginAccess();
  if ((v45 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v47 = *(void *)v46;
    if (v45 < *(void *)(*(void *)v46 + 16))
    {
      uint64_t v48 = *(unsigned __int8 *)(v237 + 80);
      uint64_t v49 = *(void *)(v237 + 72);
      unint64_t v225 = v45;
      uint64_t v223 = v48;
      uint64_t v224 = v49;
      uint64_t v50 = v242;
      _s15ConversationKit11ParticipantVWOcTm_19(v47 + ((v48 + 32) & ~v48) + v49 * v45, v242);
      __swift_storeEnumTagSinglePayload(v50, 0, 1, (uint64_t)v4);
      outlined assign with take of Participant?(v50, (uint64_t)v30, &demangling cache variable for type metadata for Participant?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, (uint64_t)v4))
      {
        uint64_t v51 = 0;
        uint64_t v237 = 0;
        uint64_t v221 = 0;
        uint64_t v52 = 0;
        uint64_t v53 = 0;
        uint64_t v54 = 0;
        uint64_t v55 = 0;
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        __int16 v58 = 0;
      }
      else
      {
        uint64_t v74 = v234;
        _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v30, v234);
        Participant.videoInfo.getter();
        uint64_t v237 = v271;
        uint64_t v221 = v272;
        uint64_t v52 = v273;
        uint64_t v53 = v274;
        uint64_t v54 = v275;
        uint64_t v55 = v276;
        uint64_t v56 = v277;
        uint64_t v57 = v278;
        __int16 v58 = v279;
        uint64_t v75 = v74;
        uint64_t v51 = v270;
        _s15ConversationKit11ParticipantVWOhTm_13(v75, (void (*)(void))type metadata accessor for Participant);
      }
      swift_bridgeObjectRelease();
      *(void *)&long long v267 = v51;
      *((void *)&v267 + 1) = v237;
      *(void *)&long long v268 = v221;
      *((void *)&v268 + 1) = v52;
      v269[0] = v53;
      v269[1] = v54;
      v269[2] = v55;
      v269[3] = v56;
      v269[4] = v57;
      LOWORD(v269[5]) = v58;
      uint64_t v76 = v236;
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v43, v236, &demangling cache variable for type metadata for Participant?);
      uint64_t v38 = v241;
      if (__swift_getEnumTagSinglePayload(v76, 1, (uint64_t)v241) == 1) {
        goto LABEL_169;
      }
      Participant.screenInfo.getter(v246);
      _s15ConversationKit11ParticipantVWOhTm_13(v76, (void (*)(void))type metadata accessor for Participant);
      outlined assign with take of Participant?((uint64_t)v246, (uint64_t)v250, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v43, 1, (uint64_t)v38);
      uint64_t v32 = v240;
      if (EnumTagSinglePayload)
      {
        uint64_t v236 = 0;
        uint64_t v237 = 0;
        char v4 = 0;
      }
      else
      {
        uint64_t v78 = v234;
        _s15ConversationKit11ParticipantVWOcTm_19(v43, v234);
        uint64_t v236 = Participant.captionInfo.getter();
        uint64_t v237 = v79;
        char v4 = v80;
        _s15ConversationKit11ParticipantVWOhTm_13(v78, (void (*)(void))type metadata accessor for Participant);
      }
      if ((void)v267)
      {
        char v81 = BYTE13(v267);
        char v82 = v81 ^ objc_msgSend(v32, sel_videoMirrored);
        if (v82)
        {
          if (!(void)v267) {
            goto LABEL_34;
          }
          goto LABEL_23;
        }
        if ((void)v267)
        {
LABEL_23:
          BYTE13(v267) = objc_msgSend(v32, sel_videoMirrored);
          if ((void)v267)
          {
            *((void *)&v268 + 1) = VideoAttributeOrientation.deviceOrientation.getter((int)objc_msgSend(v32, sel_orientation));
            if ((void)v267)
            {
              LOBYTE(v269[0]) = VideoAttributeCamera.cameraPosition.getter(objc_msgSend(v32, sel_camera));
              if ((void)v267)
              {
                specialized Dictionary.subscript.getter();
                if (*(void *)&v246[24])
                {
                  outlined init with take of Notice((long long *)v246, (uint64_t)v249);
                  if ((void)v267)
                  {
                    outlined init with copy of Conversation((uint64_t)v249, (uint64_t)v248);
                    if (ConversationController.isOneToOneModeEnabled.getter())
                    {
                      uint64_t v83 = v43;
                      static AspectRatio.remoteAspectRatios(with:contentsRect:)(v248, (uint64_t)v246, 1.0, 1.0);
                      double v84 = *(double *)v246;
                      double v85 = *(double *)&v246[8];
                      char v86 = v246[16];
                      double v87 = *(double *)&v246[24];
                      double v88 = *(double *)&v246[32];
                      int v89 = v246[40];
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)v248);
                      if ((v86 & 1) != 0 || v84 == v85)
                      {
                        double v84 = 0.0;
                        double v85 = 0.0;
                        double v87 = 0.0;
                        double v88 = 0.0;
                        char v90 = 1;
                      }
                      else
                      {
                        char v90 = 0;
                        if (v89)
                        {
                          double v88 = v84;
                          double v87 = v85;
                        }
                      }
                      uint64_t v43 = v83;
                      uint64_t v32 = v240;
                    }
                    else
                    {
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)v248);
                      double v84 = 0.0;
                      double v85 = 0.0;
                      double v87 = 0.0;
                      double v88 = 0.0;
                      char v90 = 1;
                    }
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)v249);
                    *(double *)&v269[1] = v84;
                    *(double *)&v269[2] = v85;
                    *(double *)&v269[3] = v87;
                    *(double *)&v269[4] = v88;
                    LOBYTE(v269[5]) = v90;
                    uint64_t v38 = v241;
                    if (v82) {
                      goto LABEL_36;
                    }
                  }
                  else
                  {
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)v249);
                    if (v82) {
                      goto LABEL_36;
                    }
                  }
                  goto LABEL_40;
                }
LABEL_35:
                outlined destroy of SystemUpdateNotice?((uint64_t)v246, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
                if (v82)
                {
LABEL_36:
                  if ((void)v267) {
                    HIBYTE(v267) = 1;
                  }
                  if (__swift_getEnumTagSinglePayload(v43, 1, (uint64_t)v38) == 1) {
                    goto LABEL_174;
                  }
                  uint64_t v91 = v43 + v38[5];
                  uint64_t v92 = type metadata accessor for UUID();
                  uint64_t v93 = *(void *)(v92 - 8);
                  MEMORY[0x1F4188790](v92);
                  uint64_t v95 = (char *)&v220 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
                  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v95, v91, v92);
                  ConversationController.scheduleResetVideoInfo(for:after:)();
                  (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v92);
                  uint64_t v38 = v241;
                }
LABEL_40:
                uint64_t v96 = (uint64_t)v235;
LABEL_84:
                outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v43, v96, &demangling cache variable for type metadata for Participant?);
                if (__swift_getEnumTagSinglePayload(v96, 1, (uint64_t)v38) != 1)
                {
                  if (Participant.avInfo.getter() == 2)
                  {
                    _s15ConversationKit11ParticipantVWOhTm_13(v96, (void (*)(void))type metadata accessor for Participant);
                    static os_log_type_t.error.getter();
                    uint64_t v130 = swift_allocObject();
                    *(_OWORD *)(v130 + 16) = xmmword_1C3769620;
                    uint64_t v131 = v242;
                    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v43, v242, &demangling cache variable for type metadata for Participant?);
                    uint64_t v132 = specialized >> prefix<A>(_:)();
                    uint64_t v134 = v133;
                    outlined destroy of SystemUpdateNotice?(v131, &demangling cache variable for type metadata for Participant?);
                    unint64_t v135 = v239;
                    *(void *)(v130 + 56) = MEMORY[0x1E4FBB1A0];
                    *(void *)(v130 + 64) = v135;
                    *(void *)(v130 + 32) = v132;
                    *(void *)(v130 + 40) = v134;
                    os_log(_:dso:log:type:_:)();
                    outlined consume of Participant.CaptionInfo?(v236);
                    swift_bridgeObjectRelease();
                    goto LABEL_145;
                  }
                  _s15ConversationKit11ParticipantVWOhTm_13(v96, (void (*)(void))type metadata accessor for Participant);
                  if ((void)v267) {
                    unsigned __int8 v136 = v269[0];
                  }
                  else {
                    unsigned __int8 v136 = 3;
                  }
                  uint64_t v137 = v233;
                  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v43, v233, &demangling cache variable for type metadata for Participant?);
                  if (__swift_getEnumTagSinglePayload(v137, 1, (uint64_t)v38) != 1)
                  {
                    Participant.videoInfo.getter();
                    _s15ConversationKit11ParticipantVWOhTm_13(v137, (void (*)(void))type metadata accessor for Participant);
                    outlined init with take of AspectRatio?((uint64_t)v281, (uint64_t)v282, &demangling cache variable for type metadata for Participant.VideoInfo?);
                    if (v282[0])
                    {
                      int v138 = v283;
                      outlined release of LinearGradient((uint64_t)v281);
                    }
                    else
                    {
                      int v138 = 3;
                    }
                    if (v136 == 3) {
                      BOOL v139 = v138 == 3;
                    }
                    else {
                      BOOL v139 = v138 != 3 && v138 == v136;
                    }
                    int v140 = v139;
                    LODWORD(v234) = v140;
                    uint64_t v141 = (uint64_t)v232;
                    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v250, (uint64_t)v249, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v43, v141, &demangling cache variable for type metadata for Participant?);
                    if (__swift_getEnumTagSinglePayload(v141, 1, (uint64_t)v38) != 1)
                    {
                      Participant.screenInfo.getter(v248);
                      _s15ConversationKit11ParticipantVWOhTm_13(v141, (void (*)(void))type metadata accessor for Participant);
                      outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v249, (uint64_t)v246, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                      outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v248, (uint64_t)v247, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                      if (*(void *)&v246[24] == 1)
                      {
                        int v142 = &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?);
                        outlined destroy of SystemUpdateNotice?((uint64_t)v248, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                        outlined destroy of SystemUpdateNotice?((uint64_t)v249, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                        if (v247[3] == 1)
                        {
                          int v142 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
                          int v143 = -1;
                        }
                        else
                        {
                          int v143 = 0;
                        }
                        LODWORD(v233) = v143;
                      }
                      else
                      {
                        outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v246, (uint64_t)v245, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                        if (v247[3] == 1)
                        {
                          outlined destroy of SystemUpdateNotice?((uint64_t)v248, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                          outlined destroy of SystemUpdateNotice?((uint64_t)v249, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                          outlined destroy of Participant.ScreenInfo((uint64_t)v245);
                          LODWORD(v233) = 0;
                          int v142 = &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?);
                        }
                        else
                        {
                          memcpy(v244, v247, 0xD1uLL);
                          static Participant.ScreenInfo.== infix(_:_:)();
                          LODWORD(v233) = v144;
                          outlined destroy of Participant.ScreenInfo((uint64_t)v244);
                          int v142 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
                          outlined destroy of SystemUpdateNotice?((uint64_t)v248, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                          outlined destroy of SystemUpdateNotice?((uint64_t)v249, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                          outlined destroy of Participant.ScreenInfo((uint64_t)v245);
                        }
                      }
                      outlined destroy of SystemUpdateNotice?((uint64_t)v246, v142);
                      uint64_t v145 = v231;
                      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v43, v231, &demangling cache variable for type metadata for Participant?);
                      if (__swift_getEnumTagSinglePayload(v145, 1, (uint64_t)v38) != 1)
                      {
                        outlined init with take of AspectRatio?((uint64_t)&v267, (uint64_t)v248, &demangling cache variable for type metadata for Participant.VideoInfo?);
                        outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v250, (uint64_t)v246, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                        outlined retain of [Participant]((uint64_t)v248);
                        Participant.copresenceInfo.getter();
                        uint64_t v146 = v229;
                        Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
                        outlined release of Participant.CopresenceInfo?(v245);
                        outlined release of LinearGradient((uint64_t)v248);
                        outlined destroy of SystemUpdateNotice?((uint64_t)v246, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                        _s15ConversationKit11ParticipantVWOhTm_13(v145, (void (*)(void))type metadata accessor for Participant);
                        __swift_storeEnumTagSinglePayload(v146, 0, 1, (uint64_t)v38);
                        outlined assign with take of Participant?(v146, v43, &demangling cache variable for type metadata for Participant?);
                        uint64_t v36 = v230;
                        outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v43, v230, &demangling cache variable for type metadata for Participant?);
                        if (__swift_getEnumTagSinglePayload(v36, 1, (uint64_t)v38) != 1)
                        {
                          uint64_t v30 = &v243[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
                          swift_beginAccess();
                          uint64_t v147 = *(void *)v30;
                          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                          *(void *)uint64_t v30 = v147;
                          unint64_t v45 = v225;
                          if (isUniquelyReferenced_nonNull_native) {
                            goto LABEL_114;
                          }
                          goto LABEL_163;
                        }
                        goto LABEL_173;
                      }
LABEL_172:
                      outlined consume of Participant.CaptionInfo?(v236);
                      __break(1u);
LABEL_173:
                      outlined consume of Participant.CaptionInfo?(v236);
                      __break(1u);
LABEL_174:
                      outlined consume of Participant.CaptionInfo?(v236);
                      __break(1u);
                      goto LABEL_175;
                    }
LABEL_171:
                    outlined consume of Participant.CaptionInfo?(v236);
                    __break(1u);
                    goto LABEL_172;
                  }
LABEL_170:
                  outlined consume of Participant.CaptionInfo?(v236);
                  __break(1u);
                  goto LABEL_171;
                }
                outlined consume of Participant.CaptionInfo?(v236);
                __break(1u);
LABEL_169:
                __break(1u);
                goto LABEL_170;
              }
            }
          }
LABEL_34:
          memset(v246, 0, 40);
          goto LABEL_35;
        }
      }
      char v82 = 0;
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_163:
  uint64_t v147 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *(void *)uint64_t v30 = v147;
LABEL_114:
  if (v45 >= *(void *)(v147 + 16))
  {
    __break(1u);
LABEL_165:
    __break(1u);
    goto LABEL_166;
  }
  outlined assign with take of Participant(v36, v147 + ((v223 + 32) & ~(unint64_t)v223) + v224 * v45);
  swift_endAccess();
  uint64_t v149 = v267;
  char v235 = v4;
  if (!(void)v267) {
    goto LABEL_118;
  }
  __int16 v150 = v269[5];
  uint64_t v230 = v269[4];
  long long v232 = (char *)v43;
  uint64_t v151 = v269[3];
  long long v229 = *(_OWORD *)&v269[1];
  char v152 = v269[0];
  uint64_t v153 = *((void *)&v268 + 1);
  __int16 v154 = v268;
  unint64_t v155 = *((void *)&v267 + 1);
  uint64_t v156 = *((void *)&v267 + 1) >> 24;
  uint64_t v231 = static OS_os_log.conversationKit;
  uint64_t v157 = swift_allocObject();
  *(_OWORD *)(v157 + 16) = v228;
  *(void *)uint64_t v246 = v149;
  *(_WORD *)&v246[8] = v155 & 0x101;
  v246[10] = BYTE2(v155) & 1;
  v246[11] = v156;
  uint64x2_t v158 = (uint64x2_t)vdupq_n_s64(v155);
  int16x8_t v159 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v158, (uint64x2_t)xmmword_1C376F240), (int32x4_t)vshlq_u64(v158, (uint64x2_t)xmmword_1C376F230));
  *(int8x8_t *)v159.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v159), (int8x8_t)0x1000100010001);
  *(_DWORD *)&v246[12] = vmovn_s16(v159).u32[0];
  *(_WORD *)&v246[16] = v154 & 0x101;
  *(void *)&v246[24] = v153;
  v246[32] = v152;
  *(_OWORD *)&v246[40] = v229;
  *(void *)&v246[56] = v151;
  uint64_t v43 = (uint64_t)v232;
  *(void *)&v246[64] = v230;
  *(_WORD *)&v246[72] = v150 & 0x101;
  swift_bridgeObjectRetain();
  uint64_t v160 = String.init<A>(reflecting:)();
  uint64_t v161 = MEMORY[0x1E4FBB1A0];
  unint64_t v162 = v239;
  *(void *)(v157 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v157 + 64) = v162;
  *(void *)(v157 + 32) = v160;
  *(void *)(v157 + 40) = v163;
  uint64_t v164 = v242;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v43, v242, &demangling cache variable for type metadata for Participant?);
  uint64_t v165 = specialized >> prefix<A>(_:)();
  uint64_t v167 = v166;
  outlined destroy of SystemUpdateNotice?(v164, &demangling cache variable for type metadata for Participant?);
  *(void *)(v157 + 96) = v161;
  *(void *)(v157 + 104) = v162;
  *(void *)(v157 + 72) = v165;
  *(void *)(v157 + 80) = v167;
  uint64_t v38 = v241;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v168 = v227;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v43, v227, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v168, 1, (uint64_t)v38) == 1)
  {
LABEL_175:
    outlined consume of Participant.CaptionInfo?(v236);
    __break(1u);
LABEL_176:
    swift_retain();
    outlined consume of Participant.CaptionInfo?(v236);
    __break(1u);
    goto LABEL_177;
  }
  ConversationController.didUpdateVisibleParticipant(_:)(v168);
  _s15ConversationKit11ParticipantVWOhTm_13(v168, (void (*)(void))type metadata accessor for Participant);
  uint64_t v32 = v240;
LABEL_118:
  uint64_t v169 = v243;
  if (v233)
  {
LABEL_126:
    if ((void)v267) {
      char v183 = v234;
    }
    else {
      char v183 = 1;
    }
    if (v183) {
      goto LABEL_133;
    }
    uint64_t v184 = LOBYTE(v269[0]);
    uint64_t v185 = swift_allocObject();
    *(_OWORD *)(v185 + 16) = xmmword_1C3769620;
    v246[0] = v184;
    uint64_t v186 = String.init<A>(reflecting:)();
    unint64_t v187 = v239;
    *(void *)(v185 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v185 + 64) = v187;
    *(void *)(v185 + 32) = v186;
    *(void *)(v185 + 40) = v188;
    static os_log_type_t.default.getter();
    uint64_t v189 = (uint64_t)v226;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    double v190 = &v169[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange];
    swift_beginAccess();
    id v191 = *(void (**)(uint64_t, uint64_t))v190;
    if (!*(void *)v190)
    {
LABEL_133:
      objc_msgSend(v32, sel_ratio);
      double v193 = v192;
      objc_msgSend(v32, sel_ratio);
      char v4 = (_DWORD *)&unk_1C3768000;
      uint64_t v194 = (_DWORD *)&unk_1EBBAE000;
      unint64_t v45 = (unint64_t)v169;
      if (v193 != v195
        && (v169[OBJC_IVAR____TtC15ConversationKit22ConversationController_waitForModeSwitchDuringUPlusOneHandoff] & 1) == 0)
      {
        uint64_t v196 = OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff;
        if (*(unsigned char *)(v45
                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff) == 1)
        {
          if (one-time initialization token for conversationController != -1) {
            swift_once();
          }
          uint64_t v197 = type metadata accessor for Logger();
          __swift_project_value_buffer(v197, (uint64_t)static Logger.conversationController);
          uint64_t v198 = v243;
          long long v199 = Logger.logObject.getter();
          os_log_type_t v200 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v199, v200))
          {
            uint64_t v201 = (uint8_t *)swift_slowAlloc();
            uint64_t v202 = swift_slowAlloc();
            uint64_t v242 = v202;
            *(_DWORD *)uint64_t v201 = 136315138;
            *(void *)uint64_t v246 = v202;
            char v241 = (int *)(v201 + 4);
            LOBYTE(v249[0]) = v198[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
            uint64_t v203 = String.init<A>(reflecting:)();
            *(void *)&v249[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v203, v204, (uint64_t *)v246);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            uint64_t v32 = v240;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2F90000, v199, v200, "[%s] Resetting shouldShowLastFrameDuringUPlusOneHandoff on attributes change to non square", v201, 0xCu);
            uint64_t v205 = v242;
            swift_arrayDestroy();
            MEMORY[0x1C87760E0](v205, -1, -1);
            MEMORY[0x1C87760E0](v201, -1, -1);
          }
          else
          {
          }
          unint64_t v45 = (unint64_t)v243;
          v243[v196] = 0;
          uint64_t v194 = (int *)&unk_1EBBAE000;
          char v4 = (int *)&unk_1C3768000;
        }
      }
      if (*(unsigned char *)(v45
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo) != 1
        || (objc_msgSend(v32, sel_ratio), double v207 = v206, objc_msgSend(v32, sel_ratio), v207 == v208))
      {
        outlined consume of Participant.CaptionInfo?(v236);
        goto LABEL_145;
      }
      uint64_t v32 = v194;
      if (one-time initialization token for conversationController == -1)
      {
LABEL_147:
        uint64_t v210 = type metadata accessor for Logger();
        __swift_project_value_buffer(v210, (uint64_t)static Logger.conversationController);
        unsigned __int8 v211 = (id)v45;
        long long v212 = Logger.logObject.getter();
        os_log_type_t v213 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v212, v213))
        {
          long long v214 = (uint8_t *)swift_slowAlloc();
          uint64_t v215 = swift_slowAlloc();
          *(_DWORD *)long long v214 = *((void *)v4 + 454);
          *(void *)uint64_t v246 = v215;
          LOBYTE(v249[0]) = v211[*((void *)v32 + 258)];
          uint64_t v216 = String.init<A>(reflecting:)();
          *(void *)&v249[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v216, v217, (uint64_t *)v246);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2F90000, v212, v213, "[%s] Got non-square remote video frame, and was waiting before updating UI that oneToOne=1, updating now", v214, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87760E0](v215, -1, -1);
          MEMORY[0x1C87760E0](v214, -1, -1);
        }
        else
        {
        }
        ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.setter(0);
        ConversationController.lookupActiveConversation()();
        if (*((void *)&v249[1] + 1))
        {
          outlined init with take of Notice(v249, (uint64_t)v246);
          uint64_t v218 = (uint64_t)&v211[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
          swift_beginAccess();
          uint64_t v219 = outlined init with copy of Conversation(v218, (uint64_t)v249);
          ConversationController.callCenter(_:oneToOneModeChangedFor:)(v219, v246);
          outlined consume of Participant.CaptionInfo?(v236);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v249);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v246);
        }
        else
        {
          outlined consume of Participant.CaptionInfo?(v236);
          outlined destroy of SystemUpdateNotice?((uint64_t)v249, &demangling cache variable for type metadata for Conversation?);
        }
        goto LABEL_145;
      }
LABEL_167:
      swift_once();
      goto LABEL_147;
    }
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v43, v189, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v189, 1, (uint64_t)v38) != 1)
    {
      swift_retain();
      v191(v189, v184);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v191);
      _s15ConversationKit11ParticipantVWOhTm_13(v189, (void (*)(void))type metadata accessor for Participant);
      goto LABEL_133;
    }
    goto LABEL_176;
  }
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v250, (uint64_t)v249, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  if (*((void *)&v249[1] + 1) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v249, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    goto LABEL_126;
  }
  memcpy(v246, v249, sizeof(v246));
  uint64_t v233 = static OS_os_log.conversationKit;
  uint64_t v170 = swift_allocObject();
  *(_OWORD *)(v170 + 16) = v228;
  outlined init with copy of Participant.ScreenInfo((uint64_t)v246, (uint64_t)v249);
  uint64_t v171 = specialized >> prefix<A>(_:)((uint64_t)v249);
  uint64_t v173 = v172;
  outlined destroy of SystemUpdateNotice?((uint64_t)v249, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  uint64_t v174 = MEMORY[0x1E4FBB1A0];
  unint64_t v175 = v239;
  *(void *)(v170 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v170 + 64) = v175;
  *(void *)(v170 + 32) = v171;
  *(void *)(v170 + 40) = v173;
  uint64_t v176 = v242;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v43, v242, &demangling cache variable for type metadata for Participant?);
  uint64_t v177 = specialized >> prefix<A>(_:)();
  uint64_t v179 = v178;
  outlined destroy of SystemUpdateNotice?(v176, &demangling cache variable for type metadata for Participant?);
  *(void *)(v170 + 96) = v174;
  *(void *)(v170 + 104) = v175;
  *(void *)(v170 + 72) = v177;
  *(void *)(v170 + 80) = v179;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  __int16 v180 = &v169[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo];
  swift_beginAccess();
  uint64_t v181 = *(void (**)(uint64_t, unint64_t))v180;
  if (!*(void *)v180)
  {
    outlined destroy of Participant.ScreenInfo((uint64_t)v246);
    uint64_t v38 = v241;
    goto LABEL_125;
  }
  uint64_t v182 = v222;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v43, v222, &demangling cache variable for type metadata for Participant?);
  uint64_t v38 = v241;
  if (__swift_getEnumTagSinglePayload(v182, 1, (uint64_t)v241) != 1)
  {
    swift_retain();
    v181(v182, v225);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v181);
    outlined destroy of Participant.ScreenInfo((uint64_t)v246);
    _s15ConversationKit11ParticipantVWOhTm_13(v182, (void (*)(void))type metadata accessor for Participant);
LABEL_125:
    uint64_t v32 = v240;
    goto LABEL_126;
  }
LABEL_177:
  swift_retain();
  uint64_t result = outlined consume of Participant.CaptionInfo?(v236);
  __break(1u);
  return result;
}

void ConversationController.remoteVideoClient(_:remoteScreenAttributesDidChange:)()
{
  OUTLINED_FUNCTION_31();
  char v2 = v1;
  char v4 = v3;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v5 = 7104878;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v6 = OUTLINED_FUNCTION_11_7();
  *(_OWORD *)(v6 + 16) = xmmword_1C37696D0;
  if (v4)
  {
    v22[0] = v4;
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
    id v7 = v4;
    uint64_t v8 = String.init<A>(reflecting:)();
    unint64_t v10 = v9;
  }
  else
  {
    unint64_t v10 = 0xE300000000000000;
    uint64_t v8 = 7104878;
  }
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v12 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 32) = v8;
  *(void *)(v6 + 40) = v10;
  if (v2)
  {
    v22[0] = v2;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for VideoAttributes);
    id v13 = v2;
    uint64_t v5 = String.init<A>(reflecting:)();
  }
  else
  {
    unint64_t v14 = 0xE300000000000000;
  }
  *(void *)(v6 + 96) = v11;
  *(void *)(v6 + 104) = v12;
  *(void *)(v6 + 72) = v5;
  *(void *)(v6 + 80) = v14;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_156_5();
  swift_bridgeObjectRelease();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  uint64_t v15 = OUTLINED_FUNCTION_20();
  *(void *)(v15 + 16) = v0;
  v22[4] = partial apply for closure #1 in ConversationController.remoteVideoClient(_:remoteScreenAttributesDidChange:);
  void v22[5] = v15;
  v22[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  void v22[2] = thunk for @escaping @callee_guaranteed () -> ();
  void v22[3] = &block_descriptor_218_0;
  uint64_t v16 = _Block_copy(v22);
  id v17 = v0;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_267_1();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_5_1();
  v22[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_172();
  _Block_release(v16);

  OUTLINED_FUNCTION_29_4();
  v20();
  OUTLINED_FUNCTION_139();
  v21();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in ConversationController.remoteVideoClient(_:remoteScreenAttributesDidChange:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.State?);
  MEMORY[0x1F4188790](v2 - 8);
  char v4 = (char *)v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)v56 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v56 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v56 - v18;
  if (ConversationController.isOneToOneModeEnabled.getter())
  {
    uint64_t v20 = a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    swift_beginAccess();
    uint64_t v62 = v20;
    _s15ConversationKit11ParticipantVWOcTm_19(v20, (uint64_t)v19);
    Participant.videoInfo.getter();
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v19, (void (*)(void))type metadata accessor for Participant);
    outlined init with take of AspectRatio?((uint64_t)&v68, (uint64_t)__src, &demangling cache variable for type metadata for Participant.VideoInfo?);
    if (__src[0])
    {
      memcpy(v67, __src, 0x4AuLL);
      ConversationController.remoteOneToOneParticipant.getter();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
      {
        outlined destroy of SystemUpdateNotice?((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
LABEL_36:
        v65[0] = 0;
        long long v63 = 0u;
        long long v64 = 0u;
        goto LABEL_37;
      }
      Participant.videoInfo.getter();
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v7, (void (*)(void))type metadata accessor for Participant);
      outlined init with take of AspectRatio?((uint64_t)v69, (uint64_t)v76, &demangling cache variable for type metadata for Participant.VideoInfo?);
      if (!v76[0]) {
        goto LABEL_36;
      }
      specialized Dictionary.subscript.getter();
      outlined release of LinearGradient((uint64_t)v69);
      if (!*((void *)&v64 + 1))
      {
LABEL_37:
        swift_bridgeObjectRelease();
        outlined destroy of SystemUpdateNotice?((uint64_t)&v63, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        static os_log_type_t.error.getter();
        return os_log(_:dso:log:type:_:)();
      }
      outlined init with take of Notice(&v63, (uint64_t)v66);
      outlined init with copy of Conversation((uint64_t)v66, (uint64_t)&v63);
      char v27 = ConversationController.isOneToOneModeEnabled.getter();
      uint64_t v28 = (unsigned __int8 *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera);
      swift_beginAccess();
      int v60 = *v28;
      uint64_t v29 = (uint64_t *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
      swift_beginAccess();
      uint64_t v30 = *v29;
      uint64_t v31 = v62;
      _s15ConversationKit11ParticipantVWOcTm_19(v62, (uint64_t)v16);
      Participant.aspectRatio.getter();
      uint64_t v61 = type metadata accessor for Participant;
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
      AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)(&v63, v27 & 1, 1, v60, v30, (uint64_t)&v70, (uint64_t)&v71, 1.0, 1.0);
      long long v59 = v71;
      uint64_t v57 = v73;
      uint64_t v58 = v72;
      __int16 v32 = v74;
      outlined init with take of AspectRatio((uint64_t)&v71, (uint64_t)&v67[5]);
      _s15ConversationKit11ParticipantVWOcTm_19(v31, (uint64_t)v13);
      ConversationController.conversationIsAVLess.getter();
      int v60 = v33;
      v56[1] = v67[0];
      if (BYTE1(v67[1])) {
        uint64_t v34 = 256;
      }
      else {
        uint64_t v34 = 0;
      }
      uint64_t v35 = 0x10000;
      if (!BYTE2(v67[1])) {
        uint64_t v35 = 0;
      }
      unint64_t v36 = v34 | LOBYTE(v67[1]) | v35 | ((unint64_t)BYTE3(v67[1]) << 24);
      uint64_t v37 = 0x100000000;
      if (!BYTE4(v67[1])) {
        uint64_t v37 = 0;
      }
      uint64_t v38 = 0x10000000000;
      if (!BYTE5(v67[1])) {
        uint64_t v38 = 0;
      }
      uint64_t v39 = v37 | v38;
      uint64_t v40 = 0x1000000000000;
      if (!BYTE6(v67[1])) {
        uint64_t v40 = 0;
      }
      uint64_t v41 = v39 | v40;
      uint64_t v42 = 0x100000000000000;
      if (!HIBYTE(v67[1])) {
        uint64_t v42 = 0;
      }
      unint64_t v43 = v36 | v41 | v42;
      if (BYTE1(v67[2])) {
        uint64_t v44 = 256;
      }
      else {
        uint64_t v44 = 0;
      }
      uint64_t v45 = v44 | LOBYTE(v67[2]);
      __src[10] = v67[0];
      __src[11] = v43;
      if (BYTE1(v67[9])) {
        __int16 v46 = 256;
      }
      else {
        __int16 v46 = 0;
      }
      __src[12] = v45;
      __src[13] = v67[3];
      __src[14] = LOBYTE(v67[4]);
      long long v78 = v59;
      uint64_t v79 = v58;
      uint64_t v80 = v57;
      __int16 v81 = v46 | v32;
      long long v63 = 0uLL;
      *(void *)&long long v64 = 0;
      *((void *)&v64 + 1) = 1;
      bzero(v65, 0xB1uLL);
      _s15ConversationKit11ParticipantVWOcTm_19(v31, (uint64_t)v10);
      uint64_t v47 = Participant.captionInfo.getter();
      uint64_t v48 = (uint64_t)v10;
      uint64_t v49 = v61;
      _s15ConversationKit11ParticipantVWOhTm_13(v48, (void (*)(void))v61);
      Participant.copresenceInfo.getter();
      Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
      outlined release of Participant.CopresenceInfo?(v75);
      outlined consume of Participant.CaptionInfo?(v47);
      swift_bridgeObjectRelease();
      outlined destroy of SystemUpdateNotice?((uint64_t)&v63, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v13, (void (*)(void))v49);
      swift_beginAccess();
      outlined assign with take of Participant((uint64_t)v16, v31);
      swift_endAccess();
      uint64_t v50 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(a1
                                                                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
      swift_beginAccess();
      uint64_t v51 = *v50;
      if (*v50)
      {
        swift_endAccess();
        _s15ConversationKit11ParticipantVWOcTm_19(v31, (uint64_t)v16);
        uint64_t v52 = (uint64_t *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
        swift_beginAccess();
        uint64_t v53 = *v52;
        uint64_t v54 = v52[1];
        uint64_t v55 = *((unsigned __int8 *)v52 + 16);
        swift_retain();
        v51(v16, v53, v54, v55);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v51);
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
        return swift_endAccess();
      }
    }
    else
    {
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1C3769620;
      _s15ConversationKit11ParticipantVWOcTm_19(v62, (uint64_t)v4);
      uint64_t v23 = type metadata accessor for Participant.State(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v23);
      uint64_t v24 = specialized >> prefix<A>(_:)();
      uint64_t v26 = v25;
      outlined destroy of SystemUpdateNotice?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for Participant.State?);
      *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v22 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v22 + 32) = v24;
      *(void *)(v22 + 40) = v26;
      os_log(_:dso:log:type:_:)();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    return os_log(_:dso:log:type:_:)();
  }
}

void closure #1 in ConversationController.scheduleResetVideoInfo(for:after:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Participant(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v124 - v12;
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x1C8776240](a1 + 16);
  if (!v14) {
    return;
  }
  uint64_t v15 = (char *)v14;
  uint64_t v156 = v8;
  uint64_t v157 = v7;
  __int16 v154 = v6;
  unint64_t v155 = v11;
  uint64_t v161 = v13;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v164 = &v124;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v16);
  unint64_t v162 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v19 = (char *)&v124 - v162;
  uint64_t v20 = &v15[OBJC_IVAR____TtC15ConversationKit22ConversationController_scheduledVideoInfoResetDates];
  swift_beginAccess();
  uint64x2_t v158 = v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v163 = (char *)&v124;
  uint64_t v22 = *(void *)(*(void *)(v21 - 8) + 64);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v159 = a2;
  specialized Dictionary.subscript.getter();
  if (__swift_getEnumTagSinglePayload((uint64_t)&v124 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v16) == 1)
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v124 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for Date?);
    swift_endAccess();

    return;
  }
  uint64_t v160 = v15;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, (char *)&v124 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  uint64_t v23 = swift_endAccess();
  MEMORY[0x1F4188790](v23);
  uint64_t v24 = (char *)&v124 - v162;
  Date.init()();
  char v25 = static Date.< infix(_:_:)();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v17 + 8);
  unint64_t v27 = v17 + 8;
  uint64_t v26 = v28;
  v28(v24, v16);
  if ((v25 & 1) == 0)
  {
    v26(v19, v16);

    return;
  }
  uint64_t v151 = v26;
  unint64_t v162 = v27;
  uint64_t v163 = v19;
  uint64_t v29 = (uint64_t *)type metadata accessor for UUID();
  char v152 = &v124;
  uint64_t v30 = *(v29 - 1);
  uint64_t v31 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v29);
  __int16 v32 = *(void (**)(void))(v30 + 16);
  unint64_t v149 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
  __int16 v150 = v32;
  uint64_t v33 = ((uint64_t (*)(char *, uint64_t, uint64_t *))v32)((char *)&v124 - v149, v159, v29);
  MEMORY[0x1F4188790](v33);
  uint64_t v34 = (char *)&v124 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = v16;
  __swift_storeEnumTagSinglePayload((uint64_t)v34, 1, 1, v16);
  swift_beginAccess();
  specialized Dictionary.subscript.setter((uint64_t)v34, (uint64_t)&v124 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_endAccess();
  uint64_t v35 = v160;
  ConversationController.indexOfRemoteParticipant(with:)();
  unint64_t v37 = v36;
  uint64_t v39 = v38;
  LODWORD(v158) = v38;
  if ((v38 & 1) == 0)
  {
    uint64_t v40 = &v35[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
    swift_beginAccess();
    if ((v37 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v41 = v163;
      uint64_t v42 = v153;
      if (v37 < *(void *)(*(void *)v40 + 16))
      {
        unint64_t v43 = *(void *)v40
            + ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80))
            + *(void *)(v156 + 72) * v37;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_57:
    uint64_t v83 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *uint64_t v29 = v83;
LABEL_44:
    double v85 = v163;
    uint64_t v86 = v137;
    if ((v145 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v145 < *(void *)(v83 + 16))
    {
      outlined assign with copy of Participant.State(v39, v83+ ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80))+ *(void *)(v156 + 72) * v145);
      swift_endAccess();
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_47:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v87 = swift_allocObject();
        *(_OWORD *)(v87 + 16) = xmmword_1C37696D0;
        uint64_t v165 = v86;
        char v166 = v194;
        char v167 = v193;
        char v168 = v192;
        char v169 = v146;
        char v170 = v191;
        char v171 = v190;
        char v172 = v189;
        char v173 = v188;
        char v174 = v187;
        char v175 = v186;
        uint64_t v176 = v147;
        char v177 = v148;
        unint64_t v178 = v149;
        uint64_t v179 = v150;
        __int16 v180 = v152;
        uint64_t v181 = v159;
        char v182 = v185;
        char v183 = v184;
        uint64_t v88 = String.init<A>(reflecting:)();
        uint64_t v90 = v89;
        uint64_t v91 = MEMORY[0x1E4FBB1A0];
        *(void *)(v87 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v92 = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v87 + 64) = v92;
        *(void *)(v87 + 32) = v88;
        *(void *)(v87 + 40) = v90;
        uint64_t v93 = (uint64_t)v154;
        _s15ConversationKit11ParticipantVWOcTm_19(v39, (uint64_t)v154);
        __swift_storeEnumTagSinglePayload(v93, 0, 1, v157);
        uint64_t v94 = specialized >> prefix<A>(_:)();
        uint64_t v96 = v95;
        outlined destroy of SystemUpdateNotice?(v93, &demangling cache variable for type metadata for Participant?);
        *(void *)(v87 + 96) = v91;
        *(void *)(v87 + 104) = v92;
        *(void *)(v87 + 72) = v94;
        *(void *)(v87 + 80) = v96;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        id v97 = v160;
        ConversationController.didUpdateVisibleParticipant(_:)(v39);

        _s15ConversationKit11ParticipantVWOhTm_13(v39, (void (*)(void))type metadata accessor for Participant);
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v161, (void (*)(void))type metadata accessor for Participant);
        uint64_t v98 = v85;
LABEL_52:
        v151(v98, v153);
        return;
      }
LABEL_60:
      swift_once();
      goto LABEL_47;
    }
    __break(1u);
    goto LABEL_60;
  }
  unint64_t v43 = (unint64_t)&v35[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  uint64_t v44 = swift_beginAccess();
  MEMORY[0x1F4188790](v44);
  uint64_t v45 = (char *)&v124 - v149;
  v150((char *)&v124 - v149);
  char v46 = static UUID.== infix(_:_:)();
  (*(void (**)(char *, uint64_t *))(v30 + 8))(v45, v29);
  uint64_t v41 = v163;
  uint64_t v42 = v153;
  if ((v46 & 1) == 0)
  {
    v151(v163, v153);

    return;
  }
LABEL_12:
  uint64_t v47 = v43;
  uint64_t v48 = (uint64_t)v161;
  _s15ConversationKit11ParticipantVWOcTm_19(v47, (uint64_t)v161);
  Participant.videoInfo.getter();
  outlined init with take of AspectRatio?((uint64_t)v195, (uint64_t)v197, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v197[0])
  {

    goto LABEL_16;
  }
  unint64_t v145 = v37;
  memcpy(__dst, v197, 0x4AuLL);
  uint64_t v49 = __dst[0];
  char v50 = __dst[1];
  char v194 = __dst[1];
  int v143 = BYTE1(__dst[1]);
  char v193 = BYTE1(__dst[1]);
  int v142 = BYTE2(__dst[1]);
  char v192 = BYTE2(__dst[1]);
  int v146 = BYTE3(__dst[1]);
  int v141 = BYTE4(__dst[1]);
  char v191 = BYTE4(__dst[1]);
  int v140 = BYTE5(__dst[1]);
  char v190 = BYTE5(__dst[1]);
  int v139 = BYTE6(__dst[1]);
  char v189 = BYTE6(__dst[1]);
  char v51 = HIBYTE(__dst[1]);
  char v188 = HIBYTE(__dst[1]);
  char v52 = __dst[2];
  char v187 = __dst[2];
  char v53 = BYTE1(__dst[2]);
  char v186 = BYTE1(__dst[2]);
  uint64_t v147 = __dst[3];
  int v148 = LOBYTE(__dst[4]);
  unint64_t v149 = __dst[5];
  __int16 v150 = (void (*)(void))__dst[6];
  char v152 = (uint64_t *)__dst[7];
  uint64_t v159 = __dst[8];
  int v144 = LOBYTE(__dst[9]);
  char v185 = __dst[9];
  int v138 = BYTE1(__dst[9]);
  char v184 = BYTE1(__dst[9]);
  outlined retain of [Participant]((uint64_t)__dst);
  if (Participant.avInfo.getter() == 2)
  {
    outlined release of LinearGradient((uint64_t)v195);

    outlined release of LinearGradient((uint64_t)v195);
    uint64_t v41 = v163;
LABEL_16:
    _s15ConversationKit11ParticipantVWOhTm_13(v48, (void (*)(void))type metadata accessor for Participant);
    v151(v41, v42);
    return;
  }
  uint64_t v137 = v49;
  unsigned int v55 = v50 & 1;
  unsigned int v56 = v52 & 1;
  int v57 = v53 & 1;
  char v58 = __dst[1];
  char v59 = BYTE1(__dst[1]);
  char v60 = BYTE2(__dst[1]);
  uint64_t v61 = BYTE3(__dst[1]);
  char v62 = BYTE4(__dst[1]);
  char v63 = BYTE5(__dst[1]);
  char v64 = BYTE6(__dst[1]);
  uint64_t v134 = v54;
  if ((__dst[1] & 0x100000000000000) != 0)
  {
    int v65 = 0;
    char v188 = 0;
    uint64_t v39 = (uint64_t)v155;
    if ((__dst[2] & 0x100) == 0) {
      goto LABEL_24;
    }
  }
  else
  {
    int v65 = v51 & 1;
    uint64_t v39 = (uint64_t)v155;
    if ((__dst[2] & 0x100) == 0)
    {
      if (*(void *)&v161[*(int *)(v157 + 28)]) {
        goto LABEL_53;
      }
      int v125 = 0;
      int v126 = LOBYTE(__dst[2]);
      uint64_t v127 = BYTE6(__dst[1]);
      uint64_t v128 = BYTE4(__dst[1]);
      uint64_t v129 = BYTE2(__dst[1]);
      uint64_t v130 = BYTE1(__dst[1]);
      uint64_t v131 = BYTE3(__dst[1]);
      int v132 = v65;
      unsigned int v133 = v56;
      int v135 = v50 & 1;
      int v136 = v53 & 1;
LABEL_26:
      uint64_t v66 = &v160[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
      swift_beginAccess();
      uint64_t v67 = *((void *)v66 + 3);
      uint64_t v68 = *((void *)v66 + 4);
      uint64_t v69 = __swift_project_boxed_opaque_existential_1(v66, v67);
      uint64_t v70 = *(void *)(v67 - 8);
      MEMORY[0x1F4188790](v69);
      uint64_t v72 = (char *)&v124 - v71;
      (*(void (**)(char *))(v70 + 16))((char *)&v124 - v71);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v68 + 32))(&v165, v67, v68);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v67);
      outlined init with copy of RecentCallProviding & RecentsControllable((uint64_t)&v165, (uint64_t)v199);
      if (v58)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v199);
        unsigned int v55 = v135;
      }
      else
      {
        uint64_t v73 = v200;
        uint64_t v74 = v201;
        __swift_project_boxed_opaque_existential_1(v199, v200);
        char v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 24))(v73, v74);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v199);
        unsigned int v55 = v135;
        if (v75)
        {
          unsigned int v55 = 1;
          char v194 = 1;
          int v125 = 1;
        }
      }
      BOOL v76 = closure #1 in closure #1 in ConversationController.scheduleResetVideoInfo(for:after:)(&v165);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v165);
      int v65 = v132;
      if ((v126 & 1) != 0 && !v76)
      {
        unsigned int v56 = 0;
        char v187 = 0;
        int v57 = v136;
        char v59 = v130;
        uint64_t v61 = v131;
        char v62 = v128;
        char v60 = v129;
        char v64 = v127;
        goto LABEL_34;
      }
      unsigned int v56 = v133;
      int v57 = v136;
      char v59 = v130;
      uint64_t v61 = v131;
      char v62 = v128;
      char v60 = v129;
      char v64 = v127;
      if (v125) {
        goto LABEL_34;
      }
LABEL_53:
      outlined release of LinearGradient((uint64_t)v195);
      swift_bridgeObjectRelease();

      _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v161, (void (*)(void))type metadata accessor for Participant);
      v151(v163, v153);
      return;
    }
  }
  int v57 = 0;
  char v186 = 0;
LABEL_24:
  if (!*(void *)&v161[*(int *)(v157 + 28)])
  {
    uint64_t v127 = BYTE6(__dst[1]);
    uint64_t v128 = BYTE4(__dst[1]);
    uint64_t v129 = BYTE2(__dst[1]);
    uint64_t v130 = BYTE1(__dst[1]);
    uint64_t v131 = BYTE3(__dst[1]);
    int v132 = v65;
    unsigned int v133 = v56;
    int v135 = v50 & 1;
    int v136 = v57;
    int v125 = 1;
    int v126 = LOBYTE(__dst[2]);
    goto LABEL_26;
  }
LABEL_34:
  int v135 = v55;
  int v136 = v57;
  unint64_t v77 = (v61 << 24) | ((unint64_t)(v59 & 1) << 8) | ((unint64_t)(v60 & 1) << 16) | ((unint64_t)(v62 & 1) << 32) | ((unint64_t)(v63 & 1) << 40) | ((unint64_t)(v64 & 1) << 48);
  uint64_t v78 = 0x100000000000000;
  if (!v65) {
    uint64_t v78 = 0;
  }
  unint64_t v79 = v77 | v55 | (unint64_t)v78;
  unsigned int v133 = v56;
  if (v57) {
    uint64_t v80 = 256;
  }
  else {
    uint64_t v80 = 0;
  }
  if (BYTE1(__dst[9])) {
    __int16 v81 = 256;
  }
  else {
    __int16 v81 = 0;
  }
  v199[0] = __dst[0];
  v199[1] = v79;
  v199[2] = v80 | v56;
  uint64_t v200 = __dst[3];
  uint64_t v201 = LOBYTE(__dst[4]);
  long long v202 = *(_OWORD *)&__dst[5];
  long long v203 = *(_OWORD *)&__dst[7];
  __int16 v204 = v81 | LOBYTE(__dst[9]);
  Participant.screenInfo.getter(&v165);
  uint64_t v82 = Participant.captionInfo.getter();
  Participant.copresenceInfo.getter();
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v196);
  outlined consume of Participant.CaptionInfo?(v82);
  outlined release of LinearGradient((uint64_t)v195);
  outlined destroy of SystemUpdateNotice?((uint64_t)&v165, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  if ((v158 & 1) == 0)
  {
    uint64_t v29 = (uint64_t *)&v160[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
    swift_beginAccess();
    uint64_t v83 = *v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v29 = v83;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_44;
    }
    goto LABEL_57;
  }
  char v99 = v143 & 1;
  uint64_t v100 = v39;
  char v101 = v142 & 1;
  char v102 = v141 & 1;
  char v103 = v140 & 1;
  char v104 = v139 & 1;
  LODWORD(v158) = v138 & 1;
  double v105 = v160;
  char v106 = &v160[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  swift_beginAccess();
  outlined assign with copy of Participant.State(v100, (uint64_t)v106);
  swift_endAccess();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v107 = swift_allocObject();
  *(_OWORD *)(v107 + 16) = xmmword_1C37696D0;
  uint64_t v165 = v137;
  char v166 = v135;
  char v167 = v99;
  char v168 = v101;
  char v169 = v146;
  char v170 = v102;
  char v171 = v103;
  char v172 = v104;
  char v173 = v65;
  char v174 = v133;
  char v175 = v136;
  uint64_t v176 = v147;
  char v177 = v148;
  unint64_t v178 = v149;
  uint64_t v179 = v150;
  __int16 v180 = v152;
  uint64_t v181 = v159;
  char v182 = v144 & 1;
  char v183 = (char)v158;
  uint64_t v108 = String.init<A>(reflecting:)();
  uint64_t v110 = v109;
  uint64_t v111 = MEMORY[0x1E4FBB1A0];
  *(void *)(v107 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v112 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v107 + 64) = v112;
  *(void *)(v107 + 32) = v108;
  *(void *)(v107 + 40) = v110;
  uint64_t v113 = (uint64_t)v154;
  uint64_t v114 = (uint64_t)v155;
  _s15ConversationKit11ParticipantVWOcTm_19((uint64_t)v155, (uint64_t)v154);
  __swift_storeEnumTagSinglePayload(v113, 0, 1, v157);
  uint64_t v115 = specialized >> prefix<A>(_:)();
  uint64_t v117 = v116;
  outlined destroy of SystemUpdateNotice?(v113, &demangling cache variable for type metadata for Participant?);
  *(void *)(v107 + 96) = v111;
  *(void *)(v107 + 104) = v112;
  *(void *)(v107 + 72) = v115;
  *(void *)(v107 + 80) = v117;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  unint64_t v118 = &v105[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant];
  swift_beginAccess();
  uint64_t v119 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v118;
  if (*(void *)v118)
  {
    swift_endAccess();
    double v120 = &v105[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
    swift_beginAccess();
    uint64_t v121 = *(void *)v120;
    uint64_t v122 = *((void *)v120 + 1);
    uint64_t v123 = v120[16];
    swift_retain();
    v119(v114, v121, v122, v123);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v119);

    _s15ConversationKit11ParticipantVWOhTm_13(v114, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v161, (void (*)(void))type metadata accessor for Participant);
    uint64_t v98 = v163;
    goto LABEL_52;
  }
  _s15ConversationKit11ParticipantVWOhTm_13(v114, (void (*)(void))type metadata accessor for Participant);
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v161, (void (*)(void))type metadata accessor for Participant);
  v151(v163, v153);
  swift_endAccess();
}

BOOL closure #1 in closure #1 in ConversationController.scheduleResetVideoInfo(for:after:)(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[5];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  *(double *)&uint64_t v3 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2));
  if (v5) {
    return 0;
  }
  double v6 = *(double *)&v3;
  double v7 = v4;
  return (ConversationController.isOneToOneModeEnabled.getter() & 1) == 0 && v6 != v7;
}

uint64_t ConversationController.participantCaptionsProvider(_:didEnableCaptions:)()
{
  uint64_t v1 = (void (**)(uint64_t))(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  uint64_t result = OUTLINED_FUNCTION_2();
  uint64_t v3 = *v1;
  if (*v1)
  {
    OUTLINED_FUNCTION_101_7();
    uint64_t v4 = OUTLINED_FUNCTION_371_0();
    v3(v4);
    return OUTLINED_FUNCTION_124_5();
  }
  return result;
}

void ConversationController.participantCaptionsProvider(_:didUpdateCaptions:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v91 = v5;
  uint64_t v92 = v6;
  uint64_t v90 = v7;
  uint64_t v94 = v8;
  uint64_t v10 = v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  uint64_t v12 = OUTLINED_FUNCTION_8(v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = OUTLINED_FUNCTION_276_1();
  OUTLINED_FUNCTION_5_3();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_16_6();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v80 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationController.ParticipantInfo?);
  uint64_t v21 = OUTLINED_FUNCTION_8(v20);
  MEMORY[0x1F4188790](v21);
  uint64_t v22 = OUTLINED_FUNCTION_221();
  uint64_t v95 = type metadata accessor for ConversationController.ParticipantInfo(v22);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_287_1();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_54_2();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_49_11();
  if (!v28) {
    goto LABEL_23;
  }
  uint64_t v80 = v15;
  uint64_t v81 = v27;
  uint64_t v93 = v0;
  uint64_t v83 = v13;
  uint64_t v84 = v4;
  uint64_t v82 = v1;
  uint64_t v86 = v26;
  uint64_t v87 = v19;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v89 = static OS_os_log.conversationKit;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v30 = OUTLINED_FUNCTION_25_15();
  long long v88 = xmmword_1C3769620;
  *(_OWORD *)(v30 + 16) = xmmword_1C3769620;
  uint64_t v31 = (void *)v94;
  uint64_t v96 = v10;
  id v97 = (void *)v94;
  swift_unknownObjectRetain();
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCaptionsProvider);
  uint64_t v32 = String.init<A>(reflecting:)();
  uint64_t v34 = v33;
  *(void *)(v30 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v35 = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v30 + 64) = v35;
  *(void *)(v30 + 32) = v32;
  *(void *)(v30 + 40) = v34;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  unint64_t v36 = v31;
  swift_bridgeObjectRelease();
  uint64_t v37 = OUTLINED_FUNCTION_68_9();
  ConversationController.participantInfo(for:)(v37, v38, v39);
  OUTLINED_FUNCTION_33_0(v3, 1, v95);
  if (v28)
  {
    outlined destroy of SystemUpdateNotice?(v3, &demangling cache variable for type metadata for ConversationController.ParticipantInfo?);
    static os_log_type_t.error.getter();
    uint64_t v40 = OUTLINED_FUNCTION_25_15();
    *(_OWORD *)(v40 + 16) = v88;
    uint64_t v96 = v10;
    id v97 = v31;
    swift_unknownObjectRetain();
    uint64_t v41 = String.init<A>(reflecting:)();
    *(void *)(v40 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v40 + 64) = v35;
    *(void *)(v40 + 32) = v41;
    *(void *)(v40 + 40) = v42;
    OUTLINED_FUNCTION_13_51();
    swift_bridgeObjectRelease();
LABEL_23:
    OUTLINED_FUNCTION_28();
    return;
  }
  uint64_t v94 = v29;
  uint64_t v89 = v35;
  uint64_t v43 = v86;
  _s15ConversationKit11ParticipantVWObTm_6(v3, v86);
  uint64_t v44 = OUTLINED_FUNCTION_462();
  _s15ConversationKit11ParticipantVWOcTm_19(v44, v45);
  uint64_t v46 = (uint64_t)v87;
  _s15ConversationKit11ParticipantVWObTm_6(v2, (uint64_t)v87);
  char v47 = Participant.avInfo.getter();
  if (v47 == 2)
  {
    static os_log_type_t.error.getter();
    uint64_t v48 = (__n128 *)OUTLINED_FUNCTION_25_15();
    OUTLINED_FUNCTION_326_0(v48);
    uint64_t v49 = v84;
    _s15ConversationKit11ParticipantVWOcTm_19(v46, v84);
    OUTLINED_FUNCTION_169_3();
    OUTLINED_FUNCTION_40_20();
    outlined destroy of SystemUpdateNotice?(v49, &demangling cache variable for type metadata for Participant?);
    uint64_t v50 = v89;
    v36[7] = MEMORY[0x1E4FBB1A0];
    v36[8] = v50;
    v36[4] = v3;
    void v36[5] = v29;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOhTm_13(v46, (void (*)(void))type metadata accessor for Participant);
    char v51 = type metadata accessor for ConversationController.ParticipantInfo;
    uint64_t v52 = v43;
LABEL_22:
    _s15ConversationKit11ParticipantVWOhTm_13(v52, (void (*)(void))v51);
    goto LABEL_23;
  }
  Participant.videoInfo.getter();
  Participant.screenInfo.getter(&v96);
  Participant.captionInfo.getter();
  OUTLINED_FUNCTION_46_6();
  Participant.CaptionInfo.with(history:)();
  uint64_t v53 = OUTLINED_FUNCTION_200_1();
  uint64_t v54 = (uint64_t)v87;
  outlined consume of Participant.CaptionInfo?(v53);
  Participant.copresenceInfo.getter();
  uint64_t v55 = v82;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v99);
  uint64_t v56 = v86;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  outlined release of LinearGradient((uint64_t)&v98);
  outlined destroy of SystemUpdateNotice?((uint64_t)&v96, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  uint64_t v57 = v81;
  _s15ConversationKit11ParticipantVWOcTm_19(v56, v81);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v72 = v93;
    OUTLINED_FUNCTION_6_1();
    uint64_t v73 = OUTLINED_FUNCTION_45_9();
    outlined assign with copy of Participant.State(v73, v74);
    swift_endAccess();
    char v75 = (void (**)(uint64_t))((char *)v72
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
    OUTLINED_FUNCTION_2();
    BOOL v76 = *v75;
    if (*v75)
    {
      OUTLINED_FUNCTION_101_7();
      v76(v55);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v76);
    }
    unint64_t v77 = (__n128 *)OUTLINED_FUNCTION_25_15();
    OUTLINED_FUNCTION_326_0(v77);
    uint64_t v78 = v84;
    _s15ConversationKit11ParticipantVWOcTm_19(v55, v84);
    OUTLINED_FUNCTION_169_3();
    OUTLINED_FUNCTION_289();
    outlined destroy of SystemUpdateNotice?(v78, &demangling cache variable for type metadata for Participant?);
    uint64_t v79 = v89;
    v72[7] = MEMORY[0x1E4FBB1A0];
    uint64_t v72[8] = v79;
    v72[4] = v76;
    v72[5] = v55;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_156_5();
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOhTm_13(v55, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_13(v54, (void (*)(void))type metadata accessor for Participant);
    uint64_t v71 = v56;
    goto LABEL_21;
  }
  unint64_t v58 = *(void *)(v57
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int))
                           + 48));
  char v59 = (void *)((char *)v93 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_6_1();
  uint64_t v60 = *v59;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v59 = v60;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v60 = specialized _ArrayBuffer._consumeAndCreateNew()();
    uint64_t *v59 = v60;
  }
  uint64_t v62 = v82;
  uint64_t v63 = v94;
  if ((v58 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v58 < *(void *)(v60 + 16))
  {
    OUTLINED_FUNCTION_12_19();
    outlined assign with copy of Participant.State(v62, v60 + v64 + *(void *)(v65 + 72) * v58);
    swift_endAccess();
    uint64_t v66 = (void (**)(uint64_t))((char *)v93
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
    OUTLINED_FUNCTION_2();
    uint64_t v67 = *v66;
    if (*v66)
    {
      OUTLINED_FUNCTION_101_7();
      v67(v62);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v67);
    }
    uint64_t v68 = (__n128 *)OUTLINED_FUNCTION_25_15();
    OUTLINED_FUNCTION_326_0(v68);
    uint64_t v69 = v84;
    _s15ConversationKit11ParticipantVWOcTm_19(v62, v84);
    OUTLINED_FUNCTION_169_3();
    OUTLINED_FUNCTION_289();
    outlined destroy of SystemUpdateNotice?(v69, &demangling cache variable for type metadata for Participant?);
    uint64_t v70 = v89;
    *(void *)(v58 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v58 + 64) = v70;
    *(void *)(v58 + 32) = v67;
    *(void *)(v58 + 40) = v63;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_156_5();
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOhTm_13(v62, (void (*)(void))type metadata accessor for Participant);
    _s15ConversationKit11ParticipantVWOhTm_13(v54, (void (*)(void))type metadata accessor for Participant);
    uint64_t v71 = v56;
LABEL_21:
    _s15ConversationKit11ParticipantVWOhTm_13(v71, (void (*)(void))type metadata accessor for ConversationController.ParticipantInfo);
    uint64_t v52 = OUTLINED_FUNCTION_388();
    goto LABEL_22;
  }
  __break(1u);
}

uint64_t ConversationController.participantInfo(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Participant(0);
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  char v14 = v13;
  uint64_t v15 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_19(v15, (uint64_t)v10);
  uint64_t v16 = Participant.captionsProvider.getter();
  uint64_t v18 = v17;
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v10, (void (*)(void))type metadata accessor for Participant);
  if (!v16
    || (uint64_t v19 = swift_getObjectType(),
        uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v19, v18),
        char v22 = v21,
        swift_unknownObjectRelease(),
        (v22 & 1) != 0))
  {
    if (v14)
    {
LABEL_5:
      _s15ConversationKit11ParticipantVWOcTm_19(v15, a3);
      uint64_t v23 = type metadata accessor for ConversationController.ParticipantInfo(0);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = a3;
      uint64_t v30 = 0;
      uint64_t v31 = v23;
      return __swift_storeEnumTagSinglePayload(v29, v30, 1, v31);
    }
  }
  else if ((v14 & 1) == 0 && v20 == v12)
  {
    goto LABEL_5;
  }
  uint64_t v24 = ConversationController.remoteParticipantIndex(for:)(a1, a2);
  if (v25)
  {
    uint64_t v31 = type metadata accessor for ConversationController.ParticipantInfo(0);
    uint64_t v29 = a3;
    uint64_t v30 = 1;
    return __swift_storeEnumTagSinglePayload(v29, v30, 1, v31);
  }
  unint64_t v26 = v24;
  uint64_t v27 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  uint64_t result = swift_beginAccess();
  if ((v26 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v26 < *(void *)(*(void *)v27 + 16))
  {
    _s15ConversationKit11ParticipantVWOcTm_19(*(void *)v27+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v26, a3);
    *(void *)(a3
              + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int))
                       + 48)) = v26;
    uint64_t v23 = type metadata accessor for ConversationController.ParticipantInfo(0);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t ConversationController.remoteParticipantIndex(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a1;
  uint64_t v4 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  uint64_t v32 = type metadata accessor for Participant(0);
  uint64_t v10 = v8
      + ((*(unsigned __int8 *)(*(void *)(v32 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v32 - 8) + 80));
  uint64_t v31 = *(void *)(*(void *)(v32 - 8) + 72);
  uint64_t v29 = a2;
  v27[1] = v8;
  v27[2] = a2 + 8;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  uint64_t v28 = v9;
  do
  {
    if (*(void *)(v10 + *(int *)(v32 + 28)))
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v10, (uint64_t)v6);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        char v13 = &v6[*(int *)(v12 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(void *)&v6[*(int *)(v12 + 64)], *(void *)&v6[*(int *)(v12 + 64) + 8]);
        memcpy(v33, v13, sizeof(v33));
        uint64_t v14 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v6, v14);
        uint64_t v16 = v33[39];
        uint64_t v15 = v33[40];
        outlined copy of Participant.CaptionInfo?(v33[39]);
        outlined destroy of Participant.MediaInfo((uint64_t)v33);
        if (v16)
        {
          uint64_t v17 = v4;
          swift_bridgeObjectRelease();
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(ObjectType, v15);
          char v21 = v20;
          uint64_t v22 = swift_getObjectType();
          uint64_t v23 = (*(uint64_t (**)(uint64_t))(v29 + 8))(v22);
          char v25 = v24;
          swift_unknownObjectRelease();
          if (v21)
          {
            uint64_t v4 = v17;
            uint64_t v9 = v28;
            if (v25) {
              goto LABEL_14;
            }
          }
          else
          {
            uint64_t v4 = v17;
            uint64_t v9 = v28;
            if ((v25 & 1) == 0 && v19 == v23) {
              goto LABEL_14;
            }
          }
        }
      }
      else
      {
        _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v6, (void (*)(void))type metadata accessor for Participant.State);
      }
    }
    ++v11;
    v10 += v31;
  }
  while (v9 != v11);
  uint64_t v11 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t ConversationController.idsCapabilitiesChecker(_:didUpdate:)(uint64_t a1)
{
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_98_0(v3, (uint64_t)static Logger.conversationController);
  swift_retain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v7 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v6 = 136315138;
    v18[0] = v7;
    (*(void (**)(void))(*(void *)a1 + 120))();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UUID : IDSCapabilitiesChecker.Capabilities]);
    uint64_t v8 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v4, v5, "Received IDS participant capabilities: %s", v6, 0xCu);
    OUTLINED_FUNCTION_12_23();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  char v11 = ConversationController.isRemoteParticipantEligibleForVideoMessaging.getter();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x1C0))(v11 & 1);
  uint64_t v12 = (void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities);
  uint64_t result = OUTLINED_FUNCTION_2();
  uint64_t v14 = *v12;
  if (*v12)
  {
    uint64_t v15 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 120);
    uint64_t v16 = swift_retain();
    uint64_t v17 = v15(v16);
    v14(v17);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void ConversationController.updateVideoMessagingIDSStatusForParticipant(_:)()
{
  uint64_t v3 = v0;
  uint64_t v4 = OUTLINED_FUNCTION_27_3();
  uint64_t v5 = type metadata accessor for Participant(v4);
  uint64_t v6 = *(void **)(v1 + *(int *)(v5 + 28));
  if (!v6) {
    return;
  }
  uint64_t v7 = v5;
  uint64_t v8 = one-time initialization token for videoMessaging;
  id v9 = v6;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.videoMessaging);
  id v11 = v9;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_6_0(v13))
  {
    uint64_t v14 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v34 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v14 = 136315138;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    id v15 = v11;
    uint64_t v16 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v12, v2, "Checking IDS capabilities for %s for video messaging", v14, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }
  else
  {
  }
  uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker);
  unint64_t v19 = (*(uint64_t (**)(id))(*(void *)v18 + 224))(v11);
  if (v19 == 2)
  {
    char v25 = (void *)Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_2_12(v26))
    {
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_374(&dword_1C2F90000, v27, v28, "Already have a pending IDS query for video messaging");
      OUTLINED_FUNCTION_3();

      return;
    }

    goto LABEL_18;
  }
  if (v19 != 3)
  {
    uint64_t v29 = (void *)Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_2_12(v30))
    {
      *(_WORD *)OUTLINED_FUNCTION_8_0() = 0;
      OUTLINED_FUNCTION_374(&dword_1C2F90000, v31, v32, "Already have a completed IDS query for video messaging, using cached result");
      OUTLINED_FUNCTION_3();
    }

    OUTLINED_FUNCTION_0_3();
    (*(void (**)(unint64_t))(v33 + 448))((v19 >> 40) & 1);
LABEL_18:

    return;
  }
  char v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_8_0();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_1C2F90000, v20, v21, "Updating IDS capabilities to determine video messaging eligibility", v22, 2u);
    OUTLINED_FUNCTION_3();
  }

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  unint64_t v23 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C3769620;
  _s15ConversationKit11ParticipantVWOcTm_19(v1, v24 + v23);
  (*(void (**)(uint64_t))(*(void *)v18 + 232))(v24);

  swift_bridgeObjectRelease();
}

void ConversationController.handleCameraZoomBecameAvailable(_:)()
{
}

{
  uint64_t v0;
  void (**v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;

  OUTLINED_FUNCTION_9_83();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v1 = (void (**)(uint64_t))(v0
                                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange);
  OUTLINED_FUNCTION_2();
  os_log_type_t v2 = *v1;
  if (*v1)
  {
    OUTLINED_FUNCTION_101_7();
    uint64_t v3 = OUTLINED_FUNCTION_371_0();
    v2(v3);
    OUTLINED_FUNCTION_124_5();
  }
  OUTLINED_FUNCTION_10_73();
}

void ConversationController.handleCameraZoomBecameUnavailable(_:)()
{
}

uint64_t @objc ConversationController.handleCameraZoomBecameAvailable(_:)()
{
  OUTLINED_FUNCTION_485();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_242_2();
  id v3 = v1;
  v0();

  OUTLINED_FUNCTION_50_1();
  return v4();
}

uint64_t ConversationController.handlelocalCameraUIDDidChange(_:)()
{
  if (!Notification.userInfo.getter())
  {
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_10;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  specialized Dictionary.subscript.getter();
  swift_bridgeObjectRelease();
  outlined destroy of AnyHashable((uint64_t)v11);
  if (!*((void *)&v13 + 1))
  {
LABEL_10:
    outlined destroy of SystemUpdateNotice?((uint64_t)&v12, &demangling cache variable for type metadata for Any?);
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    uint64_t v1 = (void (**)(uint64_t))(v0
                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange);
    OUTLINED_FUNCTION_2();
    uint64_t v2 = *v1;
    if (*v1)
    {
      swift_retain();
      uint64_t v3 = OUTLINED_FUNCTION_41_0();
      v2(v3);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v2);
    }
    swift_bridgeObjectRelease();
  }
LABEL_11:
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_257_1();
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2_1();
  v5();
  OUTLINED_FUNCTION_57_11();
  v6();
  OUTLINED_FUNCTION_15_5();
  v7();
  OUTLINED_FUNCTION_69_10(v11, v11[3]);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_332_0();
  v8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  Swift::Bool IsUsingIPadExternal = ConversationController.updateIsUsingIPadExternalCamera()();
  return ConversationController.isUsingIPadExternalCamera.setter(IsUsingIPadExternal);
}

uint64_t ConversationController.handleCameraListDidChange(_:)()
{
  Swift::Bool IsUsingIPadExternal = ConversationController.updateIsUsingIPadExternalCamera()();
  ConversationController.isUsingIPadExternalCamera.setter(IsUsingIPadExternal);
  uint64_t v2 = (void (**)(uint64_t))(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange);
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *v2;
  if (*v2)
  {
    uint64_t v5 = swift_retain();
    v4(v5);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v4);
  }
  return result;
}

uint64_t @objc ConversationController.handlelocalCameraUIDDidChange(_:)()
{
  OUTLINED_FUNCTION_485();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_242_2();
  id v4 = v1;
  v0(v2);

  OUTLINED_FUNCTION_50_1();
  return v5();
}

void ConversationController.handleSystemPreferredCameraChanged(_:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction);
  swift_beginAccess();
  if (*v2 != 1)
  {
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static Logger.conversationController);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v6, v7)) {
      goto LABEL_17;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    id v9 = "Ignoring change to systemPreferredCamera because there's no pending start camera action";
    goto LABEL_16;
  }
  id v3 = objc_msgSend(self, sel_systemPreferredCamera);

  if (!v3)
  {
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)static Logger.conversationController);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v6, v7)) {
      goto LABEL_17;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    id v9 = "Ignoring change to systemPreferredCamera because it's nil";
    goto LABEL_16;
  }
  ConversationController.didDeferStartCameraAction.setter(0);
  uint64_t v4 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  swift_beginAccess();
  if ((*(char *)(v4 + 16) & 0x80000000) == 0)
  {
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationController);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v6, v7)) {
      goto LABEL_17;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    id v9 = "Ignoring change to systemPreferredCamera due to broadcastingState";
LABEL_16:
    _os_log_impl(&dword_1C2F90000, v6, v7, v9, v8, 2u);
    MEMORY[0x1C87760E0](v8, -1, -1);
LABEL_17:

    return;
  }
  uint64_t v12 = *(unsigned __int8 *)(v4 + 1);
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  __swift_project_value_buffer(v13, (uint64_t)static Logger.conversationController);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_1C2F90000, v14, v15, "Starting camera that was deferred due to systemPreferredCamera initialization", v16, 2u);
    MEMORY[0x1C87760E0](v16, -1, -1);
  }

  unint64_t v17 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  swift_beginAccess();
  uint64_t v18 = v17[3];
  uint64_t v19 = v17[4];
  char v20 = __swift_project_boxed_opaque_existential_1(v17, v18);
  uint64_t v21 = *(void *)(v18 - 8);
  __n128 v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = &v28[-v23];
  (*(void (**)(unsigned char *, __n128))(v21 + 16))(&v28[-v23], v22);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 32))(v29, v18, v19);
  (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v24, v18);
  uint64_t v25 = v30;
  uint64_t v26 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  uint64_t v27 = (void *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
  swift_beginAccess();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v26 + 32))(v12, *v27, 1, v25, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
}

void ConversationController.handleAudioUplinkChange(_:)()
{
  OUTLINED_FUNCTION_31();
  Notification.object.getter();
  if (v22)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if (OUTLINED_FUNCTION_213_1())
    {
      lazy protocol witness table accessor for type TUCall and conformance TUCall();
      uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
      OUTLINED_FUNCTION_2();
      uint64_t v3 = *v2;
      uint64_t ObjectType = swift_getObjectType();
      id v5 = v25;
      swift_unknownObjectRetain();
      uint64_t v6 = OUTLINED_FUNCTION_34_30();
      char v8 = specialized == infix(_:_:)(v6, v7, v3);

      swift_unknownObjectRelease();
      if (v8)
      {
        uint64_t v9 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        uint64_t v20 = static OS_dispatch_queue.main.getter();
        OUTLINED_FUNCTION_20();
        OUTLINED_FUNCTION_72_9();
        uint64_t v10 = OUTLINED_FUNCTION_26();
        *(void *)(v10 + 16) = v9;
        *(void *)(v10 + 24) = v5;
        uint64_t v23 = partial apply for closure #1 in ConversationController.handleAudioUplinkChange(_:);
        uint64_t v24 = v10;
        v21[0] = MEMORY[0x1E4F143A8];
        v21[1] = 1107296256;
        v21[2] = thunk for @escaping @callee_guaranteed () -> ();
        __n128 v22 = &block_descriptor_225;
        uint64_t v11 = _Block_copy(v21);
        id v18 = v5;
        swift_release();
        type metadata accessor for DispatchQoS();
        uint64_t v19 = v17;
        OUTLINED_FUNCTION_5_3();
        MEMORY[0x1F4188790](v12);
        OUTLINED_FUNCTION_29_36();
        type metadata accessor for DispatchWorkItemFlags();
        v17[1] = v17;
        OUTLINED_FUNCTION_5_3();
        MEMORY[0x1F4188790](v13);
        OUTLINED_FUNCTION_61();
        v21[0] = MEMORY[0x1E4FBC860];
        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        OUTLINED_FUNCTION_45_19();
        uint64_t v14 = (void *)v20;
        MEMORY[0x1C8773BA0](0, ObjectType, v1, v11);
        _Block_release(v11);

        OUTLINED_FUNCTION_4_1();
        v15();
        OUTLINED_FUNCTION_15_5();
        v16();
        OUTLINED_FUNCTION_256_0();
        OUTLINED_FUNCTION_10_80();
      }
      else
      {
      }
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v21, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConversationController.handleAudioUplinkChange(_:)(uint64_t a1, void *a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8776240](v3);
  if (v4)
  {
    id v5 = (void *)v4;
    swift_beginAccess();
    objc_msgSend(a2, sel_isUplinkMuted);
    ConversationController.broadcastingState.setter();
  }
}

uint64_t ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(uint64_t a1)
{
  return ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(a1, MEMORY[0x1E4FADFB0], &OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
}

uint64_t ConversationController.handleCameraCinematicFramingEnabledChanged(_:)(uint64_t a1)
{
  return ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(a1, MEMORY[0x1E4FADFB8], &OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
}

uint64_t ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3;
  if (!Notification.userInfo.getter())
  {
    long long v11 = 0u;
    long long v12 = 0u;
    return outlined destroy of SystemUpdateNotice?((uint64_t)&v11, &demangling cache variable for type metadata for Any?);
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  specialized Dictionary.subscript.getter();
  swift_bridgeObjectRelease();
  outlined destroy of AnyHashable((uint64_t)v10);
  if (!*((void *)&v12 + 1)) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)&v11, &demangling cache variable for type metadata for Any?);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v7 = v10[0];
    char v8 = (void (**)(uint64_t))(v5 + *a3);
    uint64_t result = OUTLINED_FUNCTION_2();
    uint64_t v9 = *v8;
    if (*v8)
    {
      swift_retain();
      v9(v7);
      return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v9);
    }
  }
  return result;
}

uint64_t ConversationController.handleCameraReactionEffectsEnabledChanged(_:)(uint64_t a1)
{
  return ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(a1, MEMORY[0x1E4FADF50], &OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
}

uint64_t ConversationController.handleCameraStudioLightEnabledChanged(_:)(uint64_t a1)
{
  return ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(a1, MEMORY[0x1E4FADFC0], &OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
}

uint64_t ConversationController.handleCameraBlurEnabledChanged(_:)(uint64_t a1)
{
  return ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(a1, MEMORY[0x1E4FADFA8], &OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
}

void ConversationController.handleLocalPreviewChanged(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v2 = OUTLINED_FUNCTION_25_15();
  *(_OWORD *)(v2 + 16) = xmmword_1C3769620;
  uint64_t v3 = &v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1(v3, *((void *)v3 + 3));
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_50_0();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v22 - v5;
  OUTLINED_FUNCTION_2_1();
  v7();
  OUTLINED_FUNCTION_57_11();
  v8();
  OUTLINED_FUNCTION_10_6();
  v9();
  uint64_t v10 = v26;
  OUTLINED_FUNCTION_109_5(v25);
  uint64_t v11 = OUTLINED_FUNCTION_1_11();
  char v24 = v12(v11) & 1;
  String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_46_6();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v2 + 32) = v6;
  *(void *)(v2 + 40) = v10;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_95_7();
  swift_bridgeObjectRelease();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v23 = static OS_dispatch_queue.main.getter();
  uint64_t v13 = OUTLINED_FUNCTION_20();
  *(void *)(v13 + 16) = v1;
  uint64_t v27 = partial apply for closure #1 in ConversationController.handleLocalPreviewChanged(_:);
  uint64_t v28 = v13;
  v25[0] = MEMORY[0x1E4F143A8];
  v25[1] = 1107296256;
  void v25[2] = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v26 = &block_descriptor_231;
  uint64_t v14 = _Block_copy(v25);
  id v15 = v1;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = (uint64_t)&v22;
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_5_1();
  v25[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_32_6();
  uint64_t v18 = OUTLINED_FUNCTION_484();
  uint64_t v19 = (void *)v23;
  MEMORY[0x1C8773BA0](v18);
  _Block_release(v14);

  OUTLINED_FUNCTION_29_4();
  v20();
  OUTLINED_FUNCTION_139();
  v21();
  OUTLINED_FUNCTION_177_1();
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConversationController.handleLocalPreviewChanged(_:)(uint64_t a1)
{
  uint64_t v1 = a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 184);
  swift_unknownObjectRetain();
  LODWORD(v2) = v4(ObjectType, v2);
  swift_unknownObjectRelease();
  if (v2 == 5
    || (uint64_t v5 = *(void *)(v1 + 8),
        uint64_t v6 = swift_getObjectType(),
        uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 184),
        swift_unknownObjectRetain(),
        LODWORD(v5) = v7(v6, v5),
        swift_unknownObjectRelease(),
        v5 == 6))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C3769620;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    uint64_t v9 = String.init<A>(reflecting:)();
    uint64_t v11 = v10;
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
  }
}

void ConversationController.handleLocalVideoPreviewFirstFrameArrived(_:)()
{
  OUTLINED_FUNCTION_31();
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  OUTLINED_FUNCTION_317_0();
  os_log(_:dso:log:type:_:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v10[1] = static OS_dispatch_queue.main.getter();
  uint64_t v2 = OUTLINED_FUNCTION_20();
  *(void *)(v2 + 16) = v0;
  void v11[4] = partial apply for closure #1 in ConversationController.handleLocalVideoPreviewFirstFrameArrived(_:);
  void v11[5] = v2;
  v11[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  v11[2] = thunk for @escaping @callee_guaranteed () -> ();
  v11[3] = &block_descriptor_237;
  uint64_t v3 = _Block_copy(v11);
  id v4 = v0;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_29_36();
  uint64_t v6 = (void *)type metadata accessor for DispatchWorkItemFlags();
  v10[0] = v10;
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_61();
  v11[0] = v1;
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OUTLINED_FUNCTION_358();
  _Block_release(v3);

  OUTLINED_FUNCTION_4_1();
  v8();
  OUTLINED_FUNCTION_27_49();
  v9();
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConversationController.handleLocalVideoPreviewFirstFrameArrived(_:)(char *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.State?);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v133 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Participant(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v157 = (uint64_t)&v133 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v133 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v133 - v15;
  uint64_t v17 = (uint64_t)&a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_19(v17, (uint64_t)v16);
  char v18 = Participant.isActive.getter();
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v16, (void (*)(void))type metadata accessor for Participant);
  if ((v18 & 1) == 0)
  {
    if (one-time initialization token for conversationKit == -1) {
      goto LABEL_22;
    }
    goto LABEL_73;
  }
  _s15ConversationKit11ParticipantVWOcTm_19(v17, (uint64_t)v13);
  Participant.videoInfo.getter();
  _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v13, (void (*)(void))type metadata accessor for Participant);
  outlined init with take of AspectRatio?((uint64_t)v162, (uint64_t)&v164, &demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v164)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_22:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_1C3769620;
      _s15ConversationKit11ParticipantVWOcTm_19(v17, (uint64_t)v4);
      uint64_t v50 = type metadata accessor for Participant.State(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v50);
      uint64_t v51 = specialized >> prefix<A>(_:)();
      uint64_t v53 = v52;
      outlined destroy of SystemUpdateNotice?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for Participant.State?);
      *(void *)(v49 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v49 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v49 + 32) = v51;
      *(void *)(v49 + 40) = v53;
      goto LABEL_27;
    }
LABEL_73:
    swift_once();
    goto LABEL_22;
  }
  __int16 v150 = v16;
  uint64_t v151 = v164;
  uint64_t v155 = v5;
  uint64_t v156 = v17;
  unsigned __int8 v192 = v165;
  unsigned __int8 v191 = v166;
  unsigned __int8 v190 = v167;
  uint64_t v145 = v6;
  uint64_t v146 = v168;
  unsigned __int8 v189 = v169;
  unsigned __int8 v188 = v170;
  unsigned __int8 v187 = v171;
  unsigned __int8 v186 = v172;
  unsigned __int8 v185 = v173;
  unsigned __int8 v184 = v174;
  uint64_t v152 = v177;
  uint64_t v153 = v176;
  int v148 = v175;
  unint64_t v149 = v178;
  unsigned __int8 v183 = v180;
  unsigned __int8 v182 = v181;
  __int16 v154 = a1;
  uint64_t v19 = &a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  uint64_t v147 = v179;
  swift_beginAccess();
  uint64_t v20 = *((void *)v19 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 184);
  outlined retain of [Participant]((uint64_t)v162);
  swift_unknownObjectRetain();
  LODWORD(ObjectType) = v22(ObjectType, v20);
  uint64_t v23 = swift_unknownObjectRelease();
  if (ObjectType == 5
    || (uint64_t v24 = *((void *)v19 + 1),
        uint64_t v25 = swift_getObjectType(),
        uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 184),
        swift_unknownObjectRetain(),
        LODWORD(v24) = v26(v25, v24),
        uint64_t v23 = swift_unknownObjectRelease(),
        v24 == 6))
  {
    uint64_t v27 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)&v154[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController])
                              + 0xF0);
    char v28 = ((uint64_t (*)(uint64_t))v27)(v23);
    if (VideoMessageController.State.rawValue.getter(v28) == 0x7964616552746F6ELL && v29 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0) {
        goto LABEL_10;
      }
    }
    outlined release of LinearGradient((uint64_t)v162);
    outlined release of LinearGradient((uint64_t)v162);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v157 = static OS_os_log.conversationKit;
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_1C37696D0;
    long long v158 = *(_OWORD *)v19;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    uint64_t v55 = String.init<A>(reflecting:)();
    uint64_t v57 = v56;
    uint64_t v58 = MEMORY[0x1E4FBB1A0];
    *(void *)(v54 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v59 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v54 + 64) = v59;
    *(void *)(v54 + 32) = v55;
    *(void *)(v54 + 40) = v57;
    LOBYTE(v158) = v27();
    uint64_t v60 = String.init<A>(reflecting:)();
    *(void *)(v54 + 96) = v58;
    *(void *)(v54 + 104) = v59;
    *(void *)(v54 + 72) = v60;
    *(void *)(v54 + 80) = v61;
LABEL_27:
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_10:
  uint64_t v32 = OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame;
  uint64_t v33 = v154;
  if ((v154[OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame] & 1) != 0
    || (uint64_t v34 = &v154[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame],
        swift_beginAccess(),
        (unint64_t v35 = *(uint64_t (**)(uint64_t))v34) != 0)
    && (uint64_t v36 = swift_retain(),
        char v37 = v35(v36),
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v35),
        (v37 & 1) != 0))
  {
    outlined release of LinearGradient((uint64_t)v162);
    outlined release of LinearGradient((uint64_t)v162);
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    __swift_project_value_buffer(v38, (uint64_t)static Logger.conversationKit);
    uint64_t v39 = v33;
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 67109376;
      char v43 = v33[v32];
      BOOL v44 = 1;
      LODWORD(v158) = (v43 & 1) == 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v42 + 8) = 1024;
      uint64_t v45 = (uint64_t (**)(uint64_t))((char *)v39
                                             + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame);
      swift_beginAccess();
      uint64_t v46 = *v45;
      if (*v45)
      {
        uint64_t v47 = swift_retain();
        char v48 = v46(v47);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v46);
        BOOL v44 = (v48 & 1) == 0;
      }
      LODWORD(v193) = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl(&dword_1C2F90000, v40, v41, "Pausing on local video and clearing state,\n!self.pauseOnFirstFrame: %{BOOL}d &&\n!(self.shouldPauseOnFirstLocalVideoFrame?() ?? false : %{BOOL}d", (uint8_t *)v42, 0xEu);
      MEMORY[0x1C87760E0](v42, -1, -1);
    }
    else
    {

      uint64_t v40 = v39;
    }

    ConversationController.pauseLocalVideoAndClearState()();
  }
  else
  {
    int v136 = v191;
    int v137 = v190;
    int v138 = v189;
    int v139 = v188;
    int v140 = v187;
    int v141 = v186;
    uint64_t v143 = v185;
    uint64_t v144 = v192;
    int v142 = v184;
    if ((v192 & 1) == 0)
    {
      uint64_t v62 = v156 + *(int *)(v155 + 20);
      uint64_t v63 = type metadata accessor for UUID();
      uint64_t v64 = *(void *)(v63 - 8);
      __n128 v65 = MEMORY[0x1F4188790](v63);
      uint64_t v67 = (char *)&v133 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v64 + 16))(v67, v62, v63, v65);
      ConversationController.scheduleResetVideoInfo(for:after:)();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v67, v63);
    }
    int v135 = v183;
    int v68 = v182;
    uint64_t v69 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    swift_beginAccess();
    uint64_t v70 = *((void *)v69 + 3);
    uint64_t v71 = *((void *)v69 + 4);
    uint64_t v134 = v69;
    uint64_t v72 = __swift_project_boxed_opaque_existential_1(v69, v70);
    uint64_t v73 = *(void *)(v70 - 8);
    __n128 v74 = MEMORY[0x1F4188790](v72);
    BOOL v76 = (char *)&v133 - v75;
    (*(void (**)(char *, __n128))(v73 + 16))((char *)&v133 - v75, v74);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v71 + 32))(&v158, v70, v71);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v70);
    uint64_t v77 = v160;
    uint64_t v78 = v161[0];
    __swift_project_boxed_opaque_existential_1(&v158, v160);
    uint64_t v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 8))(v77, v78);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v158);
    uint64_t v80 = v156;
    uint64_t v81 = v157;
    _s15ConversationKit11ParticipantVWOcTm_19(v156, v157);
    ConversationController.conversationIsAVLess.getter();
    if (v136) {
      uint64_t v82 = 256;
    }
    else {
      uint64_t v82 = 0;
    }
    uint64_t v83 = 0x10000;
    if (!v137) {
      uint64_t v83 = 0;
    }
    uint64_t v84 = 0x100000000;
    if (!v138) {
      uint64_t v84 = 0;
    }
    uint64_t v85 = 0x10000000000;
    if (!v139) {
      uint64_t v85 = 0;
    }
    uint64_t v86 = 0x1000000000000;
    if (!v140) {
      uint64_t v86 = 0;
    }
    uint64_t v87 = (v144 | (v146 << 24) | v82 | v83 | v84 | v85) + v86;
    uint64_t v88 = 0x100000000000000;
    if (!v141) {
      uint64_t v88 = 0;
    }
    uint64_t v193 = v151;
    uint64_t v194 = v87 | v88;
    if (v142) {
      uint64_t v89 = 256;
    }
    else {
      uint64_t v89 = 0;
    }
    uint64_t v195 = v89 | v143;
    uint64_t v146 = v79;
    id v196 = v148;
    uint64_t v197 = v79;
    uint64_t v198 = v153;
    uint64_t v199 = v152;
    uint64_t v200 = v149;
    uint64_t v201 = v147;
    if (v68) {
      __int16 v90 = 256;
    }
    else {
      __int16 v90 = 0;
    }
    __int16 v202 = v90 | v135;
    long long v158 = 0uLL;
    uint64_t v159 = 0;
    uint64_t v160 = 1;
    bzero(v161, 0xB1uLL);
    _s15ConversationKit11ParticipantVWOcTm_19(v80, (uint64_t)v8);
    uint64_t v91 = Participant.captionInfo.getter();
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)v8, (void (*)(void))type metadata accessor for Participant);
    Participant.copresenceInfo.getter();
    uint64_t v92 = (uint64_t)v150;
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?(v163);
    outlined consume of Participant.CaptionInfo?(v91);
    outlined release of LinearGradient((uint64_t)v162);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v158, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    _s15ConversationKit11ParticipantVWOhTm_13(v81, (void (*)(void))type metadata accessor for Participant);
    swift_beginAccess();
    outlined assign with take of Participant(v92, v80);
    swift_endAccess();
    uint64_t v93 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
    swift_beginAccess();
    if (v93[16] < 0)
    {
      uint64_t v157 = *((void *)v93 + 1);
      uint64_t v94 = *((void *)v134 + 3);
      uint64_t v95 = *((void *)v134 + 4);
      uint64_t v96 = __swift_project_boxed_opaque_existential_1(v134, v94);
      uint64_t v97 = *(void *)(v94 - 8);
      __n128 v98 = MEMORY[0x1F4188790](v96);
      uint64_t v100 = (char *)&v133 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v97 + 16))(v100, v98);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v95 + 32))(&v158, v94, v95);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v100, v94);
      uint64_t v80 = v156;
      uint64_t v101 = v160;
      uint64_t v102 = v161[0];
      __swift_project_boxed_opaque_existential_1(&v158, v160);
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v101, v102);
      uint64_t v33 = v154;
      ConversationController.broadcastingState.setter();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v158);
    }
    uint64_t v103 = ConversationController.visibleParticipants.getter();
    uint64_t v157 = *(void *)(v103 + 16);
    if (v157)
    {
      unint64_t v149 = v93;
      uint64_t v104 = *(unsigned __int8 *)(v145 + 80);
      uint64_t v147 = v103;
      uint64_t v105 = v103 + ((v104 + 32) & ~v104);
      uint64_t v152 = *(void *)(v145 + 72);
      uint64_t v106 = type metadata accessor for UUID();
      uint64_t v107 = v33;
      uint64_t v108 = v106;
      uint64_t v109 = *(void *)(v106 - 8);
      uint64_t v153 = *(void (**)(void, __n128))(v109 + 16);
      uint64_t v110 = *(void *)(v109 + 64);
      uint64_t v111 = (uint64_t (**)(char *, uint64_t))(v109 + 8);
      unint64_t v112 = v107;
      int v148 = v112;
      uint64_t v113 = 0;
      while (1)
      {
        __n128 v114 = MEMORY[0x1F4188790](v112);
        v153((char *)&v133 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0), v114);
        char v115 = static UUID.== infix(_:_:)();
        unint64_t v112 = (char *)(*v111)((char *)&v133 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0), v108);
        if (v115) {
          break;
        }
        ++v113;
        v105 += v152;
        if (v157 == v113)
        {
          swift_bridgeObjectRelease();

          uint64_t v33 = v154;
          uint64_t v80 = v156;
          uint64_t v93 = v149;
          uint64_t v92 = (uint64_t)v150;
          goto LABEL_60;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v116 = v148;

      uint64_t v117 = &v116[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant];
      swift_beginAccess();
      unint64_t v118 = *(void (**)(uint64_t, uint64_t))v117;
      uint64_t v80 = v156;
      uint64_t v92 = (uint64_t)v150;
      if (*(void *)v117)
      {
        _s15ConversationKit11ParticipantVWOcTm_19(v156, (uint64_t)v150);
        swift_retain();
        v118(v92, v113);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v118);
        _s15ConversationKit11ParticipantVWOhTm_13(v92, (void (*)(void))type metadata accessor for Participant);
      }
      uint64_t v119 = &v116[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant];
      swift_beginAccess();
      double v120 = *(void (**)(uint64_t, uint64_t))v119;
      uint64_t v33 = v154;
      uint64_t v93 = v149;
      if (*(void *)v119)
      {
        _s15ConversationKit11ParticipantVWOcTm_19(v80, v92);
        swift_retain();
        v120(v92, v113);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v120);
        _s15ConversationKit11ParticipantVWOhTm_13(v92, (void (*)(void))type metadata accessor for Participant);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_60:
      swift_bridgeObjectRelease();
    }
    if (v144)
    {
      if (v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame] == 1)
      {
        v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame] = 0;
        uint64_t v121 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition];
        swift_beginAccess();
        uint64_t v122 = *(void (**)(uint64_t))v121;
        if (*(void *)v121)
        {
          swift_retain();
          v122(v146);
          outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v122);
        }
      }
    }
    uint64_t v123 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant];
    swift_beginAccess();
    uint64_t v124 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v123;
    if (*(void *)v123)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v80, v92);
      uint64_t v125 = *(void *)v93;
      uint64_t v126 = *((void *)v93 + 1);
      uint64_t v127 = v93[16];
      swift_retain();
      v124(v92, v125, v126, v127);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v124);
      _s15ConversationKit11ParticipantVWOhTm_13(v92, (void (*)(void))type metadata accessor for Participant);
    }
    uint64_t v128 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant];
    swift_beginAccess();
    uint64_t v129 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v128;
    if (*(void *)v128)
    {
      _s15ConversationKit11ParticipantVWOcTm_19(v80, v92);
      uint64_t v130 = *(void *)v93;
      uint64_t v131 = *((void *)v93 + 1);
      uint64_t v132 = v93[16];
      swift_retain();
      v129(v92, v130, v131, v132);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v129);
      _s15ConversationKit11ParticipantVWOhTm_13(v92, (void (*)(void))type metadata accessor for Participant);
    }
  }
}

void ConversationController.handleLocalVideoAttributesChanged(_:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  void (*v9)(void);
  void v10[3];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_413();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  uint64_t v3 = OUTLINED_FUNCTION_20();
  *(void *)(v3 + 16) = v2;
  uint64_t v12 = v1;
  uint64_t v13 = v3;
  v10[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  void v10[2] = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v11 = v0;
  id v4 = _Block_copy(v10);
  uint64_t v5 = v2;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_1();
  v10[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_172();
  _Block_release(v4);

  OUTLINED_FUNCTION_4_1();
  v8();
  OUTLINED_FUNCTION_139();
  v9();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in ConversationController.handleLocalVideoAttributesChanged(_:)(uint64_t a1)
{
  uint64_t v2 = (long long *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  swift_beginAccess();
  uint64_t v3 = *((void *)v2 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 184);
  swift_unknownObjectRetain();
  LODWORD(v3) = v5(ObjectType, v3);
  swift_unknownObjectRelease();
  if (v3 == 5
    || (uint64_t v6 = *((void *)v2 + 1),
        uint64_t v7 = swift_getObjectType(),
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 184),
        swift_unknownObjectRetain(),
        LODWORD(v6) = v8(v7, v6),
        uint64_t result = swift_unknownObjectRelease(),
        v6 == 6))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C3769620;
    long long v34 = *v2;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    uint64_t v11 = String.init<A>(reflecting:)();
    uint64_t v13 = v12;
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v13;
    os_log(_:dso:log:type:_:)();
    return swift_bridgeObjectRelease();
  }
  else if (!*(unsigned char *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode))
  {
    uint64_t v14 = (void *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    swift_beginAccess();
    uint64_t v15 = v14[3];
    uint64_t v16 = v14[4];
    uint64_t v17 = __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v18 = *(void *)(v15 - 8);
    __n128 v19 = MEMORY[0x1F4188790](v17);
    uint64_t v21 = (char *)&v34 - v20;
    (*(void (**)(char *, __n128))(v18 + 16))((char *)&v34 - v20, v19);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v16 + 32))(&v34, v15, v16);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v15);
    uint64_t v22 = v35;
    uint64_t v23 = v36;
    __swift_project_boxed_opaque_existential_1(&v34, v35);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
    if ((v24 & 0x100000000) != 0)
    {
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
    }
    else
    {
      uint64_t v25 = VideoAttributeOrientation.deviceOrientation.getter(v24);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1C37696D0;
      *(void *)&long long v34 = v25;
      type metadata accessor for CNKDeviceOrientation(0);
      uint64_t v27 = String.init<A>(reflecting:)();
      uint64_t v29 = v28;
      uint64_t v30 = MEMORY[0x1E4FBB1A0];
      *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v31 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v26 + 64) = v31;
      *(void *)(v26 + 32) = v27;
      *(void *)(v26 + 40) = v29;
      *(void *)&long long v34 = v25;
      uint64_t v32 = String.init<A>(reflecting:)();
      *(void *)(v26 + 96) = v30;
      *(void *)(v26 + 104) = v31;
      *(void *)(v26 + 72) = v32;
      *(void *)(v26 + 80) = v33;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      return ConversationController.deviceOrientation.setter(v25);
    }
  }
  return result;
}

void ConversationController.handleSendingVideoChanged(_:)()
{
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);
  void (*v21)(void);
  void v22[6];

  OUTLINED_FUNCTION_31();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = v0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  uint64_t v7 = type metadata accessor for Notification();
  OUTLINED_FUNCTION_5_3();
  uint64_t v9 = v8;
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_355();
  OUTLINED_FUNCTION_2_1();
  v13();
  uint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v15 + v14, v1, v7);
  *(void *)(v15 + ((v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
  v22[4] = v5;
  void v22[5] = v15;
  v22[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_13_7(COERCE_DOUBLE(1107296256));
  void v22[2] = thunk for @escaping @callee_guaranteed () -> ();
  void v22[3] = v3;
  uint64_t v16 = _Block_copy(v22);
  uint64_t v17 = v6;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_5_1();
  v22[0] = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_172();
  _Block_release(v16);

  OUTLINED_FUNCTION_4_1();
  v20();
  OUTLINED_FUNCTION_139();
  v21();
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in ConversationController.handleSendingVideoChanged(_:)(uint64_t a1, uint64_t a2)
{
  void (*v7)(long long *__return_ptr);
  id v8;
  unsigned char *v9;
  long long v10;
  uint64_t v11;
  void v12[5];
  unsigned char v13[24];
  uint64_t v14;

  Notification.object.getter();
  if (!v14) {
    return outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for Any?);
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    id v4 = (void *)v12[0];
    uint64_t v5 = a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    swift_beginAccess();
    outlined init with copy of Conversation(v5, (uint64_t)v12);
    uint64_t v6 = v12[4];
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    lazy protocol witness table accessor for type TUCall and conformance TUCall();
    uint64_t v7 = *(void (**)(long long *__return_ptr))(v6 + 104);
    uint64_t v8 = v4;
    v7(&v10);

    if (v11)
    {
      outlined init with take of Notice(&v10, (uint64_t)v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      outlined init with copy of Conversation(v5, (uint64_t)v12);
      ConversationController.callCenter(_:localVideoToggledFor:)();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      uint64_t v9 = v13;
    }
    else
    {

      outlined destroy of SystemUpdateNotice?((uint64_t)&v10, &demangling cache variable for type metadata for Conversation?);
      uint64_t v9 = v12;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  return result;
}

void ConversationController.handleWindowDidFinishResize(_:)()
{
}

uint64_t closure #1 in ConversationController.migrate(to:with:isUpgrade:)(uint64_t a1, void *a2)
{
  uint64_t v2 = (void (**)(uint64_t))(a1 + *a2);
  uint64_t result = OUTLINED_FUNCTION_2();
  id v4 = *v2;
  if (*v2)
  {
    uint64_t v5 = swift_retain();
    v4(v5);
    return OUTLINED_FUNCTION_124_5();
  }
  return result;
}

uint64_t ConversationController.handleScreenConnectionDidUpdate(_:)()
{
  uint64_t v1 = (void (**)(void))(v0
                                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  uint64_t result = OUTLINED_FUNCTION_2();
  uint64_t v3 = *v1;
  if (*v1)
  {
    OUTLINED_FUNCTION_101_7();
    char v4 = ConversationController.isCarPlayConnected.getter();
    v3(v4 & 1);
    return OUTLINED_FUNCTION_186_4();
  }
  return result;
}

void ConversationController.handleScreenSharingDidChange(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  char v4 = v3;
  Notification.object.getter();
  if (v42)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if (OUTLINED_FUNCTION_213_1())
    {
      id v40 = v45;
      id v5 = objc_msgSend(v45, sel_uniqueProxyIdentifierUUID);
      OUTLINED_FUNCTION_297();
      uint64_t v39 = &v36;
      OUTLINED_FUNCTION_5_3();
      uint64_t v7 = v6;
      uint64_t v9 = *(void *)(v8 + 64);
      MEMORY[0x1F4188790](v10);
      OUTLINED_FUNCTION_240_1();

      char v37 = v2;
      uint64_t v11 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
      OUTLINED_FUNCTION_2();
      uint64_t v12 = *v11;
      uint64_t ObjectType = swift_getObjectType();
      OUTLINED_FUNCTION_428(ObjectType, v14, v15, v16, v17, v18, v19, v20, v36);
      MEMORY[0x1F4188790](v21);
      OUTLINED_FUNCTION_477();
      uint64_t v22 = *(void (**)(uint64_t))(v1 + 200);
      swift_unknownObjectRetain();
      uint64_t v23 = OUTLINED_FUNCTION_251_1();
      v22(v23);
      swift_unknownObjectRelease();
      LOBYTE(v11) = static UUID.== infix(_:_:)();
      uint64_t v24 = *(void (**)(void))(v7 + 8);
      OUTLINED_FUNCTION_4_1();
      v24();
      OUTLINED_FUNCTION_4_1();
      v24();
      OUTLINED_FUNCTION_177_1();
      OUTLINED_FUNCTION_10_80();
      if (v11)
      {
        unsigned __int8 v25 = objc_msgSend(v40, sel_isSharingScreen);
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v26 = OUTLINED_FUNCTION_25_15();
        *(_OWORD *)(v26 + 16) = xmmword_1C3769620;
        LOBYTE(v41[0]) = v25;
        String.init<A>(reflecting:)();
        OUTLINED_FUNCTION_281();
        *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v26 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v26 + 32) = v9;
        *(void *)(v26 + 40) = v12;
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_157_6();
        swift_bridgeObjectRelease();
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        uint64_t v39 = (uint64_t *)static OS_dispatch_queue.main.getter();
        uint64_t v27 = swift_allocObject();
        uint64_t v28 = v37;
        *(void *)(v27 + 16) = v37;
        *(unsigned char *)(v27 + 24) = v25;
        char v43 = partial apply for closure #1 in ConversationController.handleScreenSharingDidChange(_:);
        uint64_t v44 = v27;
        v41[0] = MEMORY[0x1E4F143A8];
        v41[1] = 1107296256;
        v41[2] = thunk for @escaping @callee_guaranteed () -> ();
        uint64_t v42 = &block_descriptor_261_0;
        uint64_t v29 = _Block_copy(v41);
        uint64_t v30 = v28;
        swift_release();
        type metadata accessor for DispatchQoS();
        OUTLINED_FUNCTION_425();
        uint64_t v38 = v31;
        OUTLINED_FUNCTION_5_3();
        MEMORY[0x1F4188790](v32);
        OUTLINED_FUNCTION_29_36();
        type metadata accessor for DispatchWorkItemFlags();
        char v37 = &v36;
        OUTLINED_FUNCTION_5_3();
        MEMORY[0x1F4188790](v33);
        OUTLINED_FUNCTION_61();
        v41[0] = MEMORY[0x1E4FBC860];
        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        OUTLINED_FUNCTION_45_19();
        OUTLINED_FUNCTION_357_0();
        _Block_release(v29);

        OUTLINED_FUNCTION_4_1();
        v34();
        OUTLINED_FUNCTION_3_8();
        v35();
        OUTLINED_FUNCTION_256_0();
        OUTLINED_FUNCTION_177_1();
      }
      else
      {
      }
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v41, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_28();
}

id closure #1 in ConversationController.handleScreenSharingDidChange(_:)(uint64_t a1, char a2)
{
  ConversationController.cameraStartPolicy.getter();
  if (!v4)
  {
    id result = objc_msgSend(self, sel_sharedInstance);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = result;
    unsigned __int8 v7 = objc_msgSend(result, sel_isGreenTea);

    uint64_t v8 = (unsigned __int8 *)(a1
                           + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable);
    swift_beginAccess();
    *uint64_t v8 = v7;
  }
  uint64_t v9 = (void (**)(void))(a1
                                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  id result = (id)swift_beginAccess();
  uint64_t v10 = *v9;
  if (*v9)
  {
    swift_retain();
    v10(a2 & 1);
    return (id)outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v10);
  }
  return result;
}

void ConversationController.handleScreenSharingAttributesChanged(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  Notification.object.getter();
  if (v24[3])
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if (swift_dynamicCast())
    {
      id v22 = v23;
      id v4 = objc_msgSend(v23, sel_uniqueProxyIdentifierUUID);
      OUTLINED_FUNCTION_297();
      OUTLINED_FUNCTION_362_0();
      void v21[3] = v5;
      OUTLINED_FUNCTION_5_3();
      uint64_t v7 = v6;
      MEMORY[0x1F4188790](v8);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v21[1] = v1;
      uint64_t v9 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
      OUTLINED_FUNCTION_2();
      uint64_t v10 = *(void *)(v9 + 8);
      uint64_t ObjectType = swift_getObjectType();
      v21[2] = v21;
      MEMORY[0x1F4188790](ObjectType);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v10 + 200);
      swift_unknownObjectRetain();
      v12(ObjectType, v10);
      swift_unknownObjectRelease();
      LOBYTE(v9) = static UUID.== infix(_:_:)();
      uint64_t v13 = *(void (**)(void))(v7 + 8);
      OUTLINED_FUNCTION_266_1();
      OUTLINED_FUNCTION_29_4();
      v13();
      OUTLINED_FUNCTION_29_4();
      v13();
      if (v9)
      {
        id v14 = v22;
        id v15 = objc_msgSend(v22, sel_screenShareAttributes);
        if (one-time initialization token for conversationKit != -1) {
          swift_once();
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v16 = OUTLINED_FUNCTION_25_15();
        *(_OWORD *)(v16 + 16) = xmmword_1C3769620;
        if (v15)
        {
          id v23 = v15;
          type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUCallScreenShareAttributes);
          id v17 = v15;
          uint64_t v18 = OUTLINED_FUNCTION_367_0();
          unint64_t v20 = v19;
        }
        else
        {
          unint64_t v20 = 0xE300000000000000;
          uint64_t v18 = 7104878;
        }
        *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v16 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v16 + 32) = v18;
        *(void *)(v16 + 40) = v20;
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_38_20();
        swift_bridgeObjectRelease();
        ConversationController.updateScreenSharingSession(with:)(v15);
      }
      else
      {
      }
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v24, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_28();
}

void ConversationController.handleCallStartedConnecting(_:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  void (*v9)(void);
  void v10[2];
  id v11;
  void *v12;
  uint64_t v13;
  void v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;

  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_413();
  Notification.object.getter();
  if (v15)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if (OUTLINED_FUNCTION_222_2())
    {
      uint64_t v2 = v18;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      uint64_t v13 = static OS_dispatch_queue.main.getter();
      uint64_t v3 = OUTLINED_FUNCTION_20();
      swift_unknownObjectWeakInit();
      id v4 = OUTLINED_FUNCTION_26();
      *(void *)(v4 + 16) = v3;
      *(void *)(v4 + 24) = v2;
      uint64_t v16 = v1;
      id v17 = v4;
      v14[0] = MEMORY[0x1E4F143A8];
      v14[1] = 1107296256;
      uint64_t v14[2] = thunk for @escaping @callee_guaranteed () -> ();
      id v15 = v0;
      uint64_t v5 = _Block_copy(v14);
      uint64_t v11 = v2;
      swift_release();
      type metadata accessor for DispatchQoS();
      uint64_t v12 = v10;
      OUTLINED_FUNCTION_5_3();
      MEMORY[0x1F4188790](v6);
      OUTLINED_FUNCTION_29_36();
      type metadata accessor for DispatchWorkItemFlags();
      v10[1] = v10;
      OUTLINED_FUNCTION_5_3();
      MEMORY[0x1F4188790](v7);
      OUTLINED_FUNCTION_61();
      v14[0] = MEMORY[0x1E4FBC860];
      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
      OUTLINED_FUNCTION_45_19();
      OUTLINED_FUNCTION_105_6();
      _Block_release(v5);

      OUTLINED_FUNCTION_4_1();
      v8();
      OUTLINED_FUNCTION_15_5();
      v9();
      OUTLINED_FUNCTION_148_5();
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v14, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_28();
}

void ConversationController.handleCallConnected(_:)()
{
}

uint64_t closure #1 in ConversationController.handleCallStartedConnecting(_:)(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  OUTLINED_FUNCTION_2();
  if (MEMORY[0x1C8776240](v2))
  {
    uint64_t v3 = (void *)OUTLINED_FUNCTION_198();
    ConversationController.processCurrentCall(_:)(v3);
  }
  OUTLINED_FUNCTION_2();
  uint64_t result = MEMORY[0x1C8776240](v2);
  if (result)
  {
    uint64_t v5 = (void *)result;
    uint64_t v6 = (uint64_t *)(result + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
    OUTLINED_FUNCTION_2();
    uint64_t v7 = *v6;
    swift_unknownObjectRetain();

    unint64_t v8 = lazy protocol witness table accessor for type TUCall and conformance TUCall();
    swift_getObjectType();
    uint64_t v9 = OUTLINED_FUNCTION_454();
    if (specialized == infix(_:_:)(v9, v8, v7))
    {
      OUTLINED_FUNCTION_2();
      uint64_t v10 = MEMORY[0x1C8776240](v2);
      if (v10)
      {
        uint64_t v11 = (void *)v10;
        uint64_t v12 = (void (**)(uint64_t))(v10
                                            + OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
        OUTLINED_FUNCTION_2();
        uint64_t v13 = *v12;
        if (*v12)
        {
          _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v13);

          uint64_t v14 = OUTLINED_FUNCTION_4_18();
          v13(v14);
          outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v13);
        }
        else
        {
        }
      }
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void ConversationController.handleVideoCallStatusDidChange(_:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_324_0();
  if (v14)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if (OUTLINED_FUNCTION_222_2())
    {
      uint64_t v1 = v17;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      uint64_t v12 = static OS_dispatch_queue.main.getter();
      uint64_t v2 = OUTLINED_FUNCTION_26();
      *(void *)(v2 + 16) = v0;
      *(void *)(v2 + 24) = v1;
      id v15 = partial apply for closure #1 in ConversationController.handleVideoCallStatusDidChange(_:);
      uint64_t v16 = v2;
      v13[0] = MEMORY[0x1E4F143A8];
      v13[1] = 1107296256;
      v13[2] = thunk for @escaping @callee_guaranteed () -> ();
      uint64_t v14 = &block_descriptor_281;
      uint64_t v3 = _Block_copy(v13);
      id v4 = v0;
      id v10 = v1;
      swift_release();
      type metadata accessor for DispatchQoS();
      uint64_t v11 = v9;
      OUTLINED_FUNCTION_5_3();
      MEMORY[0x1F4188790](v5);
      OUTLINED_FUNCTION_29_36();
      type metadata accessor for DispatchWorkItemFlags();
      v9[1] = v9;
      OUTLINED_FUNCTION_5_3();
      MEMORY[0x1F4188790](v6);
      OUTLINED_FUNCTION_61();
      v13[0] = MEMORY[0x1E4FBC860];
      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
      OUTLINED_FUNCTION_45_19();
      OUTLINED_FUNCTION_105_6();
      _Block_release(v3);

      OUTLINED_FUNCTION_4_1();
      v7();
      OUTLINED_FUNCTION_15_5();
      v8();
      OUTLINED_FUNCTION_148_5();
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConversationController.handleVideoCallStatusDidChange(_:)(uint64_t a1, void *a2)
{
  uint64_t v2 = (uint64_t)a2;
  ConversationController.processCurrentCall(_:)(a2);
  unint64_t v4 = lazy protocol witness table accessor for type TUCall and conformance TUCall();
  uint64_t v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  swift_beginAccess();
  uint64_t v6 = *v5;
  swift_getObjectType();
  swift_unknownObjectRetain();
  LOBYTE(v2) = specialized == infix(_:_:)(v2, v4, v6);
  swift_unknownObjectRelease();
  if (v2)
  {
    uint64_t v7 = (void (**)(uint64_t, uint64_t))(a1
                                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
    swift_beginAccess();
    unint64_t v8 = *v7;
    if (*v7)
    {
      uint64_t v9 = v5[1];
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v8);
      uint64_t v10 = swift_unknownObjectRetain();
      v8(v10, v9);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v8);
      swift_unknownObjectRelease();
    }
    ConversationController.updateIDSStatusForVideoMessaging()();
  }
}

void ConversationController.handleCallStatusDidChange(_:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_324_0();
  if (v14)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if (OUTLINED_FUNCTION_222_2())
    {
      uint64_t v1 = v17;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      uint64_t v12 = static OS_dispatch_queue.main.getter();
      uint64_t v2 = OUTLINED_FUNCTION_26();
      *(void *)(v2 + 16) = v1;
      *(void *)(v2 + 24) = v0;
      id v15 = partial apply for closure #1 in ConversationController.handleCallStatusDidChange(_:);
      uint64_t v16 = v2;
      v13[0] = MEMORY[0x1E4F143A8];
      v13[1] = 1107296256;
      v13[2] = thunk for @escaping @callee_guaranteed () -> ();
      uint64_t v14 = &block_descriptor_287;
      uint64_t v3 = _Block_copy(v13);
      id v10 = v1;
      id v4 = v0;
      swift_release();
      type metadata accessor for DispatchQoS();
      uint64_t v11 = v9;
      OUTLINED_FUNCTION_5_3();
      MEMORY[0x1F4188790](v5);
      OUTLINED_FUNCTION_29_36();
      type metadata accessor for DispatchWorkItemFlags();
      v9[1] = v9;
      OUTLINED_FUNCTION_5_3();
      MEMORY[0x1F4188790](v6);
      OUTLINED_FUNCTION_61();
      v13[0] = MEMORY[0x1E4FBC860];
      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
      OUTLINED_FUNCTION_45_19();
      OUTLINED_FUNCTION_105_6();
      _Block_release(v3);

      OUTLINED_FUNCTION_4_1();
      v7();
      OUTLINED_FUNCTION_15_5();
      v8();
      OUTLINED_FUNCTION_148_5();
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_28();
}

void closure #1 in ConversationController.handleCallStatusDidChange(_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type TUCall and conformance TUCall();
  uint64_t v5 = (uint64_t *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  swift_beginAccess();
  uint64_t v6 = *v5;
  swift_getObjectType();
  swift_unknownObjectRetain();
  LOBYTE(a1) = specialized == infix(_:_:)(a1, v4, v6);
  swift_unknownObjectRelease();
  if (a1)
  {
    uint64_t v7 = v5[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 160);
    swift_unknownObjectRetain();
    id v10 = (void *)v9(ObjectType, v7);
    swift_unknownObjectRelease();
    unsigned int v11 = objc_msgSend(v10, sel_supportsDynamicSystemUI);

    if (v11)
    {
      id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
      unsigned int v13 = objc_msgSend(v12, sel_groupConversations);

      if (v13)
      {
        if (TUDeviceHasChinaSKU())
        {
          uint64_t v14 = (void (**)(uint64_t, uint64_t))(a2
                                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
          swift_beginAccess();
          id v15 = *v14;
          if (*v14)
          {
            uint64_t v16 = v5[1];
            _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v15);
            uint64_t v17 = swift_unknownObjectRetain();
            v15(v17, v16);
            outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v15);
            swift_unknownObjectRelease();
          }
        }
      }
    }
  }
}

void ConversationController.handleHoldMusicDidChange(_:)()
{
}

void closure #1 in ConversationController.handleHoldMusicDidChange(_:)(uint64_t a1, uint64_t a2)
{
  Notification.object.getter();
  if (v24)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if (swift_dynamicCast())
    {
      unint64_t v20 = v22;
      uint64_t v3 = a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
      swift_beginAccess();
      uint64_t v4 = *(void *)(v3 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v5 = type metadata accessor for UUID();
      uint64_t v21 = &v17;
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v18 = a2;
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)(v6 + 64);
      MEMORY[0x1F4188790](v5);
      unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
      id v10 = *(void (**)(uint64_t, uint64_t))(v4 + 200);
      swift_unknownObjectRetain();
      v10(ObjectType, v4);
      unsigned int v11 = v20;
      swift_unknownObjectRelease();
      id v12 = objc_msgSend(v11, sel_uniqueProxyIdentifierUUID);
      MEMORY[0x1F4188790](v12);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v12) = static UUID.== infix(_:_:)();
      unsigned int v13 = *(void (**)(char *, uint64_t))(v7 + 8);
      v13((char *)&v17 - v9, v5);
      v13((char *)&v17 - v9, v5);
      if (v12)
      {
        uint64_t v14 = v18;
        if (ConversationController.isOneToOneModeEnabled.getter())
        {
          id v15 = (void (**)(id))(v14
                                         + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
          swift_beginAccess();
          uint64_t v16 = *v15;
          if (*v15)
          {
            swift_retain();
            v16(objc_msgSend(v11, sel_wantsHoldMusic));
            outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v16);
          }
        }
      }
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v23, &demangling cache variable for type metadata for Any?);
  }
}

void ConversationController.handleBluetoothAudioFormatChanged(_:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  Notification.object.getter();
  if (v37)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if (OUTLINED_FUNCTION_213_1())
    {
      uint64_t v35 = v40;
      id v5 = objc_msgSend(v40, sel_uniqueProxyIdentifierUUID);
      OUTLINED_FUNCTION_297();
      long long v34 = &v31;
      OUTLINED_FUNCTION_5_3();
      uint64_t v7 = v6;
      MEMORY[0x1F4188790](v8);
      OUTLINED_FUNCTION_240_1();

      OUTLINED_FUNCTION_2();
      uint64_t ObjectType = swift_getObjectType();
      OUTLINED_FUNCTION_428(ObjectType, v10, v11, v12, v13, v14, v15, v16, v31);
      MEMORY[0x1F4188790](v17);
      OUTLINED_FUNCTION_477();
      uint64_t v32 = v2;
      uint64_t v18 = *(void (**)(uint64_t))(v1 + 200);
      swift_unknownObjectRetain();
      uint64_t v19 = OUTLINED_FUNCTION_251_1();
      v18(v19);
      swift_unknownObjectRelease();
      char v20 = static UUID.== infix(_:_:)();
      uint64_t v21 = *(void (**)(void))(v7 + 8);
      OUTLINED_FUNCTION_27_49();
      v21();
      OUTLINED_FUNCTION_27_49();
      v21();
      OUTLINED_FUNCTION_177_1();
      id v22 = v35;
      if (v20)
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        long long v34 = (uint64_t *)static OS_dispatch_queue.main.getter();
        uint64_t v23 = OUTLINED_FUNCTION_26();
        uint64_t v24 = v32;
        *(void *)(v23 + 16) = v22;
        *(void *)(v23 + 24) = v24;
        uint64_t v38 = partial apply for closure #1 in ConversationController.handleBluetoothAudioFormatChanged(_:);
        uint64_t v39 = v23;
        v36[0] = MEMORY[0x1E4F143A8];
        v36[1] = 1107296256;
        v36[2] = thunk for @escaping @callee_guaranteed () -> ();
        char v37 = &block_descriptor_299;
        unsigned __int8 v25 = _Block_copy(v36);
        uint64_t v33 = v22;
        uint64_t v26 = v24;
        swift_release();
        type metadata accessor for DispatchQoS();
        uint64_t v35 = &v31;
        OUTLINED_FUNCTION_5_3();
        MEMORY[0x1F4188790](v27);
        OUTLINED_FUNCTION_29_36();
        type metadata accessor for DispatchWorkItemFlags();
        uint64_t v32 = &v31;
        OUTLINED_FUNCTION_5_3();
        MEMORY[0x1F4188790](v28);
        OUTLINED_FUNCTION_61();
        v36[0] = MEMORY[0x1E4FBC860];
        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        OUTLINED_FUNCTION_45_19();
        OUTLINED_FUNCTION_357_0();
        _Block_release(v25);

        OUTLINED_FUNCTION_3_8();
        v29();
        OUTLINED_FUNCTION_29_4();
        v30();
        OUTLINED_FUNCTION_256_0();
      }
      else
      {
      }
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v36, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in ConversationController.handleBluetoothAudioFormatChanged(_:)(void *a1, uint64_t a2)
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C3769620;
  objc_msgSend(a1, sel_bluetoothAudioFormat);
  type metadata accessor for TUCallBluetoothAudioFormat(0);
  uint64_t v5 = String.init<A>(reflecting:)();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void (**)(id))(a2
                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  uint64_t result = swift_beginAccess();
  uint64_t v10 = *v8;
  if (*v8)
  {
    swift_retain();
    v10(objc_msgSend(a1, sel_bluetoothAudioFormat));
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v10);
  }
  return result;
}

void ConversationController.handlePTTCallStatusDidChange(_:)()
{
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_324_0();
  if (v14)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if (OUTLINED_FUNCTION_222_2())
    {
      id v1 = v17;
      if (objc_msgSend(v17, sel_isPTT))
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        uint64_t v12 = static OS_dispatch_queue.main.getter();
        uint64_t v2 = OUTLINED_FUNCTION_26();
        *(void *)(v2 + 16) = v17;
        *(void *)(v2 + 24) = v0;
        uint64_t v15 = partial apply for closure #1 in ConversationController.handlePTTCallStatusDidChange(_:);
        uint64_t v16 = v2;
        v13[0] = MEMORY[0x1E4F143A8];
        v13[1] = 1107296256;
        v13[2] = thunk for @escaping @callee_guaranteed () -> ();
        uint64_t v14 = &block_descriptor_305;
        uint64_t v3 = _Block_copy(v13);
        id v10 = v1;
        id v4 = v0;
        swift_release();
        type metadata accessor for DispatchQoS();
        uint64_t v11 = v9;
        OUTLINED_FUNCTION_5_3();
        MEMORY[0x1F4188790](v5);
        OUTLINED_FUNCTION_29_36();
        type metadata accessor for DispatchWorkItemFlags();
        v9[1] = v9;
        OUTLINED_FUNCTION_5_3();
        MEMORY[0x1F4188790](v6);
        OUTLINED_FUNCTION_61();
        v13[0] = MEMORY[0x1E4FBC860];
        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        OUTLINED_FUNCTION_45_19();
        OUTLINED_FUNCTION_105_6();
        _Block_release(v3);

        OUTLINED_FUNCTION_4_1();
        v7();
        OUTLINED_FUNCTION_15_5();
        v8();
        OUTLINED_FUNCTION_148_5();
      }
      else
      {
      }
    }
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)v13, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_28();
}

uint64_t closure #1 in ConversationController.handlePTTCallStatusDidChange(_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type TUCall and conformance TUCall();
  uint64_t v5 = (uint64_t *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  swift_beginAccess();
  uint64_t v6 = *v5;
  swift_getObjectType();
  swift_unknownObjectRetain();
  LOBYTE(a1) = specialized == infix(_:_:)(a1, v4, v6);
  uint64_t result = swift_unknownObjectRelease();
  if (a1)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit) == 1) {
      ConversationController.pttStopTransmit()();
    }
    uint64_t v8 = (void (**)(uint64_t, uint64_t))(a2
                                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
    uint64_t result = swift_beginAccess();
    unint64_t v9 = *v8;
    if (*v8)
    {
      uint64_t v10 = v5[1];
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v9);
      uint64_t v11 = swift_unknownObjectRetain();
      v9(v11, v10);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v9);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

BOOL closure #1 in ConversationController.processCurrentCall(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 128))(ObjectType, a2))
  {
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 192))(ObjectType, a2);
    uint64_t v7 = v6;
    uint64_t v8 = a3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    uint64_t v9 = *(void *)(v8 + 8);
    uint64_t v10 = swift_getObjectType();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 192);
    swift_unknownObjectRetain();
    uint64_t v12 = v11(v10, v9);
    uint64_t v14 = v13;
    swift_unknownObjectRelease();
    if (v19 == v12 && v7 == v14)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if (v16) {
        return result;
      }
      uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t))(a2 + 184);
      if (v18(ObjectType, a2) != 6) {
        return v18(ObjectType, a2) != 5;
      }
    }
  }
  return 0;
}

Swift::Int specialized Set._Variant.filter(_:)(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0xC000000000000001) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = specialized _NativeSet.filter(_:)(a1, a2);
    swift_bridgeObjectRelease();
    return v4;
  }
  uint64_t v4 = MEMORY[0x1E4FBC870];
  uint64_t v26 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain();
  __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()())
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    swift_release();
    return v4;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  while (1)
  {
    swift_dynamicCast();
    uint64_t v5 = v25;
    uint64_t v6 = *(void *)(a2 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      id v7 = v25;
      uint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *(void **)(a2 + 8 * v8 + 32);
        if (v9)
        {
          id v10 = v7;
          id v11 = v9;
          char v12 = static NSObject.== infix(_:_:)();

          if (v12) {
            break;
          }
        }
        if (v6 == ++v8)
        {

          swift_bridgeObjectRelease();
          uint64_t v5 = v25;
          goto LABEL_10;
        }
      }

      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
LABEL_10:
    uint64_t v13 = v26;
    unint64_t v14 = *(void *)(v26 + 16);
    if (*(void *)(v26 + 24) <= v14)
    {
      specialized _NativeSet.resize(capacity:)(v14 + 1);
      uint64_t v13 = v26;
    }
    Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v13 + 40));
    uint64_t v16 = v13 + 56;
    uint64_t v17 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v13 + 56 + 8 * (v18 >> 6))) == 0) {
      break;
    }
    unint64_t v20 = __clz(__rbit64((-1 << v18) & ~*(void *)(v13 + 56 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
LABEL_21:
    *(void *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    *(void *)(*(void *)(v13 + 48) + 8 * v20) = v5;
    ++*(void *)(v13 + 16);
LABEL_23:
    if (!__CocoaSet.Iterator.next()())
    {
      uint64_t v4 = v26;
      goto LABEL_25;
    }
  }
  char v21 = 0;
  unint64_t v22 = (unint64_t)(63 - v17) >> 6;
  while (++v19 != v22 || (v21 & 1) == 0)
  {
    BOOL v23 = v19 == v22;
    if (v19 == v22) {
      unint64_t v19 = 0;
    }
    v21 |= v23;
    uint64_t v24 = *(void *)(v16 + 8 * v19);
    if (v24 != -1)
    {
      unint64_t v20 = __clz(__rbit64(~v24)) + (v19 << 6);
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t specialized closure #1 in _NativeSet.filter(_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = 0;
  int64_t v5 = 0;
  unsigned __int8 v25 = (unint64_t *)result;
  uint64_t v26 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  do
  {
    while (1)
    {
      if (v8)
      {
        unint64_t v9 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v10 = v9 | (v5 << 6);
      }
      else
      {
        int64_t v11 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_31;
        }
        if (v11 >= v27)
        {
LABEL_30:
          swift_retain();
          specialized _NativeSet.extractSubset(using:count:)(v25, a2, v29, a3);
          uint64_t v23 = v22;
          swift_bridgeObjectRelease();
          return v23;
        }
        unint64_t v12 = *(void *)(v26 + 8 * v11);
        ++v5;
        if (!v12)
        {
          int64_t v5 = v11 + 1;
          if (v11 + 1 >= v27) {
            goto LABEL_30;
          }
          unint64_t v12 = *(void *)(v26 + 8 * v5);
          if (!v12)
          {
            int64_t v5 = v11 + 2;
            if (v11 + 2 >= v27) {
              goto LABEL_30;
            }
            unint64_t v12 = *(void *)(v26 + 8 * v5);
            if (!v12)
            {
              int64_t v13 = v11 + 3;
              if (v13 >= v27) {
                goto LABEL_30;
              }
              unint64_t v12 = *(void *)(v26 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  int64_t v5 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_32;
                  }
                  if (v5 >= v27) {
                    goto LABEL_30;
                  }
                  unint64_t v12 = *(void *)(v26 + 8 * v5);
                  ++v13;
                  if (v12) {
                    goto LABEL_19;
                  }
                }
              }
              int64_t v5 = v13;
            }
          }
        }
LABEL_19:
        unint64_t v8 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v5 << 6);
      }
      uint64_t v14 = *(void *)(a4 + 16);
      if (!v14) {
        break;
      }
      unint64_t v30 = v8;
      int64_t v31 = v5;
      id v15 = *(id *)(*(void *)(a3 + 48) + 8 * v10);
      swift_bridgeObjectRetain();
      uint64_t v16 = 0;
      while (1)
      {
        uint64_t v17 = *(void **)(a4 + 8 * v16 + 32);
        if (v17)
        {
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
          id v18 = v15;
          id v19 = v17;
          char v20 = static NSObject.== infix(_:_:)();

          if (v20) {
            break;
          }
        }
        if (v14 == ++v16)
        {

          Swift::Int result = swift_bridgeObjectRelease();
          int64_t v5 = v31;
          unint64_t v8 = v30;
          goto LABEL_26;
        }
      }

      Swift::Int result = swift_bridgeObjectRelease();
      int64_t v5 = v31;
      unint64_t v8 = v30;
    }
LABEL_26:
    *(unint64_t *)((char *)v25 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
  }
  while (!__OFADD__(v29++, 1));
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t specialized MutableCollection._halfStablePartition(isSuffixElement:)(uint64_t *a1, void *a2)
{
  id v42 = a2;
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(*a1 + 16);
  uint64_t v38 = a1;
  unint64_t v39 = (unint64_t)v3;
  if (!v3)
  {
    unint64_t v6 = 0;
LABEL_9:

    return v6;
  }
  uint64_t v43 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v43 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v41 = *(void *)(v4 + 72);
  uint64_t v40 = v4 + 8;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  unint64_t v35 = v5;
  while (1)
  {
    id v7 = objc_msgSend(v42, sel_uniqueProxyIdentifierUUID);
    uint64_t v8 = *(void *)(v4 + 64);
    MEMORY[0x1F4188790](v7);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v7) = static UUID.== infix(_:_:)();
    unint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
    v9((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v43);
    if (v7) {
      break;
    }
    ++v6;
    v5 += v41;
    if (v39 == v6)
    {
      swift_bridgeObjectRelease();
      unint64_t v6 = *(void *)(v2 + 16);
      goto LABEL_9;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v6, 1))
  {
    int64_t v11 = *(void **)(v2 + 16);
    if ((void *)(v6 + 1) == v11) {
      goto LABEL_9;
    }
    uint64_t v12 = v41 + v5;
    int64_t v13 = (void *)(v6 + 1);
    int64_t v31 = (uint64_t (**)(char *, char *, uint64_t))(v4 + 40);
    uint64_t v37 = v4 + 16;
    while (v13 < v11)
    {
      unint64_t v39 = (unint64_t)&v30;
      __n128 v14 = MEMORY[0x1F4188790](result);
      id v15 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v36 = *v16;
      v36(v15, v14);
      id v17 = objc_msgSend(v42, sel_uniqueProxyIdentifierUUID);
      MEMORY[0x1F4188790](v17);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v17) = static UUID.== infix(_:_:)();
      v9(v15, v43);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v9)(v15, v43);
      if ((v17 & 1) == 0)
      {
        if (v13 != (void *)v6)
        {
          __n128 v19 = MEMORY[0x1F4188790](result);
          uint64_t result = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_29;
          }
          uint64_t v20 = *v38;
          unint64_t v21 = *(void *)(*v38 + 16);
          if (v6 >= v21) {
            goto LABEL_30;
          }
          uint64_t v33 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v34 = v18;
          uint64_t v22 = v36;
          unint64_t v39 = v6 * v41;
          uint64_t result = ((uint64_t (*)(__n128))v36)(v19);
          if ((unint64_t)v13 >= v21) {
            goto LABEL_31;
          }
          uint64_t v32 = &v30;
          __n128 v23 = MEMORY[0x1F4188790](result);
          v22((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v38 = v20;
          if ((result & 1) == 0)
          {
            uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()();
            uint64_t v20 = result;
            *uint64_t v38 = result;
          }
          if (v6 >= *(void *)(v20 + 16)) {
            goto LABEL_32;
          }
          uint64_t v24 = (char *)(v20 + v35 + v39);
          unsigned __int8 v25 = *v31;
          uint64_t v26 = v43;
          uint64_t result = (*v31)(v24, (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v43);
          uint64_t v27 = *v38;
          *uint64_t v38 = *v38;
          if ((unint64_t)v13 >= *(void *)(v27 + 16)) {
            goto LABEL_33;
          }
          uint64_t result = v25((char *)(v27 + v12), v33, v26);
        }
        if (__OFADD__(v6++, 1)) {
          goto LABEL_28;
        }
      }
      uint64_t v29 = (void *)((char *)v13 + 1);
      if (__OFADD__(v13, 1)) {
        goto LABEL_27;
      }
      int64_t v11 = *(void **)(*v38 + 16);
      int64_t v13 = (void *)((char *)v13 + 1);
      v12 += v41;
      if (v29 == v11) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t specialized _NativeSet.subtracting<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v3 = a1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = ~v4;
  uint64_t v7 = a1 + 56;
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v8 = -v4;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  uint64_t v57 = a1;
  uint64_t v58 = a1 + 56;
  unint64_t v10 = v9 & v6;
  uint64_t v59 = v5;
  int64_t v60 = 0;
  unint64_t v61 = v9 & v6;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  char v48 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v53 = v12 + 16;
  uint64_t v54 = (char *)(v2 + 56);
  uint64_t v55 = (uint64_t (**)(char *, uint64_t))(v12 + 8);
  swift_bridgeObjectRetain();
  uint64_t v51 = 0;
  uint64_t v52 = v2;
  uint64_t v46 = v12;
  uint64_t v47 = v13;
  while (1)
  {
    __n128 v14 = (uint64_t *)MEMORY[0x1F4188790](&demangling cache variable for type metadata for UUID?);
    uint64_t v56 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(v14);
    MEMORY[0x1F4188790](v15 - 8);
    id v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v49 = (uint64_t *)v10;
    uint64_t v50 = v18;
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      uint64_t v20 = (v10 - 1) & v10;
      int64_t v21 = v51;
      unint64_t v22 = v19 | (v51 << 6);
LABEL_8:
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v17, *(void *)(v3 + 48) + *(void *)(v12 + 72) * v22, v11);
      uint64_t v23 = 0;
      goto LABEL_9;
    }
    int64_t v21 = v51 + 1;
    if (__OFADD__(v51, 1)) {
      __break(1u);
    }
    int64_t v32 = (unint64_t)(v5 + 64) >> 6;
    if (v21 >= v32)
    {
      uint64_t v20 = 0;
      uint64_t v23 = 1;
      int64_t v21 = v51;
      goto LABEL_9;
    }
    unint64_t v33 = *(void *)(v7 + 8 * v21);
    if (v33) {
      goto LABEL_18;
    }
    int64_t v34 = v51 + 2;
    if (v51 + 2 >= v32) {
      goto LABEL_36;
    }
    unint64_t v33 = *(void *)(v7 + 8 * v34);
    if (v33) {
      goto LABEL_24;
    }
    if (v51 + 3 >= v32) {
      goto LABEL_37;
    }
    unint64_t v33 = *(void *)(v7 + 8 * (v51 + 3));
    if (v33)
    {
      int64_t v21 = v51 + 3;
      goto LABEL_18;
    }
    int64_t v34 = v51 + 4;
    if (v51 + 4 < v32)
    {
      unint64_t v33 = *(void *)(v7 + 8 * v34);
      if (v33)
      {
LABEL_24:
        int64_t v21 = v34;
LABEL_18:
        uint64_t v20 = (v33 - 1) & v33;
        unint64_t v22 = __clz(__rbit64(v33)) + (v21 << 6);
        goto LABEL_8;
      }
      int64_t v21 = v51 + 5;
      if (v51 + 5 < v32)
      {
        unint64_t v33 = *(void *)(v7 + 8 * v21);
        if (v33) {
          goto LABEL_18;
        }
        int64_t v21 = v32 - 1;
        int64_t v35 = v51 + 6;
        while (v35 < v32)
        {
          unint64_t v33 = *(void *)(v7 + 8 * v35++);
          if (v33)
          {
            int64_t v21 = v35 - 1;
            goto LABEL_18;
          }
        }
LABEL_36:
        uint64_t v20 = 0;
        uint64_t v23 = 1;
        goto LABEL_9;
      }
LABEL_37:
      uint64_t v20 = 0;
      uint64_t v23 = 1;
      int64_t v21 = v34;
      goto LABEL_9;
    }
    uint64_t v20 = 0;
    uint64_t v23 = 1;
    int64_t v21 = v51 + 3;
LABEL_9:
    __swift_storeEnumTagSinglePayload((uint64_t)v17, v23, 1, v11);
    uint64_t v57 = v3;
    uint64_t v58 = v7;
    uint64_t v59 = v5;
    int64_t v60 = v21;
    unint64_t v61 = v20;
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v11) == 1)
    {
      outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
      outlined destroy of SystemUpdateNotice?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      return v2;
    }
    uint64_t v49 = &v46;
    (*v48)(v56, v17, v11);
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
    uint64_t v24 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v25 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v26 = v24 & ~v25;
    if ((*(void *)&v54[(v26 >> 3) & 0xFFFFFFFFFFFFFF8] >> v26)) {
      break;
    }
    int64_t v31 = *v55;
    uint64_t v13 = v47;
LABEL_20:
    v31(v56, v11);
    uint64_t v3 = v57;
    uint64_t v7 = v58;
    uint64_t v5 = v59;
    uint64_t v51 = v60;
    unint64_t v10 = v61;
  }
  uint64_t v27 = v47;
  uint64_t v50 = (unint64_t)v55 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v51 = ~v25;
  uint64_t v28 = *(void *)(v12 + 72);
  uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
  while (1)
  {
    MEMORY[0x1F4188790](v24);
    v29((char *)&v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v52 + 48) + v28 * v26, v11);
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
    char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
    int64_t v31 = *v55;
    uint64_t v24 = (*v55)((char *)&v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
    if (v30) {
      break;
    }
    unint64_t v26 = (v26 + 1) & v51;
    if (((*(void *)&v54[(v26 >> 3) & 0xFFFFFFFFFFFFFF8] >> v26) & 1) == 0)
    {
      uint64_t v2 = v52;
      uint64_t v12 = v46;
      uint64_t v13 = v27;
      goto LABEL_20;
    }
  }
  uint64_t isStackAllocationSafe = v31(v56, v11);
  uint64_t v37 = v52;
  char v38 = *(unsigned char *)(v52 + 32);
  unint64_t v39 = (unint64_t)((1 << v38) + 63) >> 6;
  size_t v40 = 8 * v39;
  if ((v38 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v46 - ((v40 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v40);
    specialized closure #1 in _NativeSet.subtracting<A>(_:)((uint64_t)&v46 - ((v40 + 15) & 0x3FFFFFFFFFFFFFF0), v39, v37, v26, &v57);
    uint64_t v42 = v41;
    swift_release();
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
    return v42;
  }
  else
  {
    uint64_t v43 = (void *)swift_slowAlloc();
    memcpy(v43, v54, v40);
    specialized closure #1 in _NativeSet.subtracting<A>(_:)((uint64_t)v43, v39, v37, v26, &v57);
    uint64_t v2 = v44;
    swift_release();
    outlined consume of [NoticePriority : NoticeQueue].Iterator._Variant();
    MEMORY[0x1C87760E0](v43, -1, -1);
  }
  return v2;
}

void specialized closure #1 in _NativeSet.subtracting<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v43 = a2;
  uint64_t v7 = *(void *)(a3 + 16);
  *(void *)(a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v44 = a1;
  uint64_t v45 = v7 - 1;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = v10;
  uint64_t v50 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v56 = a3;
  uint64_t v53 = a3 + 56;
  uint64_t v54 = v10 + 16;
  uint64_t v57 = *(void *)(v10 + 64);
  unint64_t v49 = v10 + 8;
  uint64_t v46 = v10;
  uint64_t v47 = a5;
  uint64_t v55 = v8;
  while (1)
  {
    uint64_t v51 = &v43;
    MEMORY[0x1F4188790](v8);
    uint64_t v58 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    MEMORY[0x1F4188790](v13 - 8);
    uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v17 = *a5;
    uint64_t v16 = a5[1];
    uint64_t v19 = a5[2];
    int64_t v18 = a5[3];
    unint64_t v20 = a5[4];
    if (!v20) {
      break;
    }
    uint64_t v52 = (v20 - 1) & v20;
    unint64_t v21 = __clz(__rbit64(v20)) | (v18 << 6);
LABEL_4:
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v15, *(void *)(v17 + 48) + *(void *)(v11 + 72) * v21, v9);
    uint64_t v22 = 0;
LABEL_5:
    __swift_storeEnumTagSinglePayload((uint64_t)v15, v22, 1, v9);
    *a5 = v17;
    a5[1] = v16;
    a5[2] = v19;
    a5[3] = v18;
    a5[4] = v52;
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9) == 1)
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      swift_retain();
      specialized _NativeSet.extractSubset(using:count:)();
      return;
    }
    (*v50)(v58, v15, v9);
    uint64_t v23 = v56;
    _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
    uint64_t v24 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v25 = -1 << *(unsigned char *)(v23 + 32);
    unint64_t v26 = v24 & ~v25;
    if ((*(void *)(v53 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26))
    {
      uint64_t v48 = v49 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v27 = (uint64_t (**)(char *, uint64_t))v49;
      uint64_t v52 = ~v25;
      uint64_t v28 = *(void *)(v11 + 72);
      uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      while (1)
      {
        MEMORY[0x1F4188790](v24);
        int64_t v31 = (char *)&v43 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v32 = v55;
        v29(v31, *(void *)(v56 + 48) + v28 * v26, v55);
        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
        char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
        int64_t v34 = *v27;
        uint64_t v24 = (*v27)(v31, v32);
        if (v33) {
          break;
        }
        unint64_t v26 = (v26 + 1) & v52;
        if (((*(void *)(v53 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
        {
          uint64_t v11 = v46;
          a5 = v47;
          uint64_t v9 = v55;
          goto LABEL_16;
        }
      }
      uint64_t v8 = v34(v58, v55);
      uint64_t v38 = (v26 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v39 = *(void *)(v44 + v38);
      *(void *)(v44 + v38) = v39 & ~(1 << v26);
      if ((v39 & (1 << v26)) != 0)
      {
        uint64_t v40 = v45 - 1;
        if (__OFSUB__(v45, 1)) {
          goto LABEL_43;
        }
        --v45;
        uint64_t v11 = v46;
        a5 = v47;
        uint64_t v9 = v55;
        if (!v40) {
          return;
        }
      }
      else
      {
        uint64_t v11 = v46;
        a5 = v47;
        uint64_t v9 = v55;
      }
    }
    else
    {
      int64_t v34 = *(uint64_t (**)(char *, uint64_t))v49;
LABEL_16:
      uint64_t v8 = v34(v58, v9);
    }
  }
  int64_t v35 = v18 + 1;
  if (!__OFADD__(v18, 1))
  {
    int64_t v36 = (unint64_t)(v19 + 64) >> 6;
    if (v35 >= v36)
    {
      uint64_t v52 = 0;
      uint64_t v22 = 1;
      goto LABEL_5;
    }
    unint64_t v37 = *(void *)(v16 + 8 * v35);
    if (v37) {
      goto LABEL_14;
    }
    int64_t v41 = v18 + 2;
    if (v18 + 2 >= v36) {
      goto LABEL_38;
    }
    unint64_t v37 = *(void *)(v16 + 8 * v41);
    if (!v37)
    {
      if (v18 + 3 >= v36) {
        goto LABEL_39;
      }
      unint64_t v37 = *(void *)(v16 + 8 * (v18 + 3));
      if (v37)
      {
        int64_t v35 = v18 + 3;
        goto LABEL_14;
      }
      int64_t v41 = v18 + 4;
      if (v18 + 4 >= v36)
      {
        uint64_t v52 = 0;
        uint64_t v22 = 1;
        v18 += 3;
        goto LABEL_5;
      }
      unint64_t v37 = *(void *)(v16 + 8 * v41);
      if (!v37)
      {
        int64_t v35 = v18 + 5;
        if (v18 + 5 >= v36)
        {
LABEL_39:
          uint64_t v52 = 0;
          uint64_t v22 = 1;
          int64_t v18 = v41;
          goto LABEL_5;
        }
        unint64_t v37 = *(void *)(v16 + 8 * v35);
        if (!v37)
        {
          int64_t v35 = v36 - 1;
          int64_t v42 = v18 + 6;
          while (v42 < v36)
          {
            unint64_t v37 = *(void *)(v16 + 8 * v42++);
            if (v37)
            {
              int64_t v35 = v42 - 1;
              goto LABEL_14;
            }
          }
LABEL_38:
          uint64_t v52 = 0;
          uint64_t v22 = 1;
          int64_t v18 = v35;
          goto LABEL_5;
        }
        goto LABEL_14;
      }
    }
    int64_t v35 = v41;
LABEL_14:
    uint64_t v52 = (v37 - 1) & v37;
    unint64_t v21 = __clz(__rbit64(v37)) + (v35 << 6);
    int64_t v18 = v35;
    goto LABEL_4;
  }
  __break(1u);
LABEL_43:
  __break(1u);
}

void outlined bridged method (mnnbnn) of @objc NSNotificationCenter.post(name:object:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_postNotificationName_object_userInfo_, a1, a2, isa);
}

uint64_t outlined bridged method (ob) of @objc TUConversationMember.nickname.getter(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_47_6();
  }
  return OUTLINED_FUNCTION_41_0();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_3_74();
  uint64_t v11 = v5;
  uint64_t v12 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v10);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_318_0();
  OUTLINED_FUNCTION_46();
  v7();
  uint64_t v8 = *a3;
  *(void *)(v8 + 16) = v3 + 1;
  return outlined init with take of Notice(&v10, v8 + 40 * v3 + 32);
}

char *specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, objc_class *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, char *a9, uint64_t a10, unsigned char *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  void (*v138)(long long *__return_ptr, uint64_t, void, uint64_t, uint64_t);
  char v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  unsigned __int8 v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  long long v159;
  uint64_t v160;
  void *v161;
  void *v162;
  char *result;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  char v168;
  void (*v169)(long long *, void);
  uint64_t v170;
  objc_class *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _UNKNOWN **v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  void *v192;
  uint64_t v193;
  void *v194;
  id v195;
  id v196;
  uint64_t v197;
  _OWORD *v198;
  int v199;
  uint64_t v200;
  unsigned __int8 v201;
  int v202;
  objc_class *v203;
  char **v204;
  uint64_t v205;
  uint64_t v206;
  void *v207;
  void *v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  void (*v212)(long long *__return_ptr, uint64_t, void, uint64_t, uint64_t);
  char *v213;
  int v214;
  uint64_t v215;
  uint64_t *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(char *, char **, uint64_t, uint64_t);
  char *v225;
  void (*v226)(char *, _UNKNOWN **);
  void *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  objc_class *v259;
  uint64_t v260;
  uint64_t v261;
  void *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  objc_class *ObjectType;
  uint64_t v267;
  uint64_t *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t (*v273)(void);
  uint64_t v274;
  uint64_t v275;
  char *v276;
  objc_class *v277;
  uint64_t v278;
  int v279;
  char *v280;
  uint64_t v281;
  objc_class *v282;
  uint64_t v283;
  long long v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  long long v289;
  char v290;
  void v291[3];
  long long v292;
  uint64_t v293;
  char v294;
  objc_super v295;
  uint64_t v296;
  long long v297;
  unsigned __int8 v298;
  uint64_t v299;
  long long v300;
  long long v301;
  _UNKNOWN **v302;
  uint64_t v303[5];
  uint64_t v304[6];

  __int16 v279 = a8;
  uint64_t v278 = a7;
  HIDWORD(v269) = a6;
  v282 = a3;
  *(void *)&uint64_t v284 = a2;
  char v285 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v286 = (uint64_t)&ObjectType - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v275 = type metadata accessor for Participant.State(0);
  MEMORY[0x1F4188790](v275);
  v280 = (char *)&ObjectType - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Participant(0);
  uint64_t v272 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v276 = (char *)&ObjectType - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v304[3] = a12;
  v304[4] = a15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v304);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(boxed_opaque_existential_1, a4, a12);
  v303[3] = a14;
  v303[4] = a17;
  uint64_t v25 = __swift_allocate_boxed_opaque_existential_1(v303);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32))(v25, a5, a14);
  a11[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable] = 0;
  a11[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable] = 0;
  a11[OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable] = 0;
  *(void *)&a11[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController] = 0;
  unsigned __int8 v283 = OBJC_IVAR____TtC15ConversationKit22ConversationController_audioCallbackQueue;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v26 = type metadata accessor for DispatchQoS();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v27 = a11;
  static DispatchQoS.unspecified.getter();
  uint64_t v28 = type metadata accessor for OS_dispatch_queue.Attributes();
  MEMORY[0x1F4188790](v28);
  *(void *)&id v300 = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v29 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  __n128 v30 = MEMORY[0x1F4188790](v29);
  (*(void (**)(char *, void, __n128))(v32 + 104))((char *)&ObjectType - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FBCC50], v30);
  *(void *)&a11[v283] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didReceiveLatestRemoteAttributes] = 0;
  char v33 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes];
  *((_OWORD *)v33 + 4) = 0u;
  *((_OWORD *)v33 + 5) = 0u;
  *((_OWORD *)v33 + 2) = 0u;
  *((_OWORD *)v33 + 3) = 0u;
  *(_OWORD *)char v33 = 0u;
  *((_OWORD *)v33 + 1) = 0u;
  v33[96] = 1;
  *(void *)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController] = 0;
  *(void *)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider] = 0;
  uint64_t v34 = OBJC_IVAR____TtC15ConversationKit22ConversationController_recentPresentationContexts;
  uint64_t v35 = MEMORY[0x1E4FBC860];
  *(void *)&v27[v34] = Dictionary.init(dictionaryLiteral:)();
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame] = 0;
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit] = 0;
  uint64_t v36 = (uint64_t)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_pendingNoticeWaitingForRemoteScreenShareAttributes];
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
  __swift_storeEnumTagSinglePayload(v36, 1, 1, v37);
  uint64_t v38 = OBJC_IVAR____TtC15ConversationKit22ConversationController_scheduledVideoInfoResetDates;
  uint64_t v39 = type metadata accessor for UUID();
  uint64_t v40 = type metadata accessor for Date();
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  *(void *)&v27[v38] = Dictionary.init(dictionaryLiteral:)();
  *(void *)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState] = 0;
  *(void *)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState] = 0;
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests] = 0;
  *(void *)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount] = 0;
  long long v268 = (uint64_t *)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
  *(void *)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation] = 1;
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction] = 0;
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera] = 0;
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning] = 0;
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo] = 0;
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeDisabledByActivity] = 0;
  uint64_t v41 = OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags;
  *(void *)&v27[v41] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff] = 0;
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_waitForModeSwitchDuringUPlusOneHandoff] = 0;
  int64_t v42 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant];
  void *v42 = 0;
  v42[1] = 0;
  uint64_t v43 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant];
  void *v43 = 0;
  v43[1] = 0;
  uint64_t v44 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants];
  void *v44 = 0;
  v44[1] = 0;
  uint64_t v45 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations];
  void *v45 = 0;
  v45[1] = 0;
  uint64_t v46 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant];
  void *v46 = 0;
  v46[1] = 0;
  uint64_t v47 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive];
  void *v47 = 0;
  v47[1] = 0;
  uint64_t v48 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive];
  void *v48 = 0;
  v48[1] = 0;
  unint64_t v49 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange];
  void *v49 = 0;
  v49[1] = 0;
  uint64_t v50 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant];
  void *v50 = 0;
  v50[1] = 0;
  uint64_t v51 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo];
  void *v51 = 0;
  v51[1] = 0;
  uint64_t v52 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange];
  void *v52 = 0;
  v52[1] = 0;
  uint64_t v53 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact];
  void *v53 = 0;
  v53[1] = 0;
  uint64_t v54 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting];
  void *v54 = 0;
  v54[1] = 0;
  uint64_t v55 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange];
  *uint64_t v55 = 0;
  v55[1] = 0;
  uint64_t v56 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange];
  void *v56 = 0;
  v56[1] = 0;
  uint64_t v57 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange];
  void *v57 = 0;
  v57[1] = 0;
  uint64_t v58 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange];
  *uint64_t v58 = 0;
  v58[1] = 0;
  uint64_t v59 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange];
  void *v59 = 0;
  v59[1] = 0;
  int64_t v60 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange];
  void *v60 = 0;
  v60[1] = 0;
  unint64_t v61 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange];
  *unint64_t v61 = 0;
  v61[1] = 0;
  uint64_t v62 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot];
  void *v62 = 0;
  v62[1] = 0;
  uint64_t v63 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange];
  void *v63 = 0;
  v63[1] = 0;
  uint64_t v64 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange];
  *uint64_t v64 = 0;
  v64[1] = 0;
  __n128 v65 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange];
  void *v65 = 0;
  v65[1] = 0;
  uint64_t v66 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange];
  void *v66 = 0;
  v66[1] = 0;
  uint64_t v67 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange];
  *uint64_t v67 = 0;
  v67[1] = 0;
  int v68 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange];
  void *v68 = 0;
  v68[1] = 0;
  uint64_t v69 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange];
  void *v69 = 0;
  v69[1] = 0;
  uint64_t v70 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange];
  *uint64_t v70 = 0;
  v70[1] = 0;
  uint64_t v71 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange];
  void *v71 = 0;
  v71[1] = 0;
  uint64_t v72 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange];
  void *v72 = 0;
  v72[1] = 0;
  uint64_t v73 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange];
  *uint64_t v73 = 0;
  v73[1] = 0;
  __n128 v74 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted];
  void *v74 = 0;
  v74[1] = 0;
  uint64_t v75 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged];
  void *v75 = 0;
  v75[1] = 0;
  BOOL v76 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange];
  *BOOL v76 = 0;
  v76[1] = 0;
  uint64_t v77 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged];
  void *v77 = 0;
  v77[1] = 0;
  uint64_t v78 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant];
  *uint64_t v78 = 0;
  v78[1] = 0;
  uint64_t v79 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership];
  *uint64_t v79 = 0;
  v79[1] = 0;
  uint64_t v80 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition];
  *uint64_t v80 = 0;
  v80[1] = 0;
  uint64_t v81 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo];
  *uint64_t v81 = 0;
  v81[1] = 0;
  uint64_t v82 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize];
  *uint64_t v82 = 0;
  v82[1] = 0;
  uint64_t v83 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing];
  *uint64_t v83 = 0;
  v83[1] = 0;
  uint64_t v84 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls];
  *uint64_t v84 = 0;
  v84[1] = 0;
  uint64_t v85 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic];
  *uint64_t v85 = 0;
  v85[1] = 0;
  uint64_t v86 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant];
  *uint64_t v86 = 0;
  v86[1] = 0;
  uint64_t v87 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange];
  *uint64_t v87 = 0;
  v87[1] = 0;
  uint64_t v88 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange];
  *uint64_t v88 = 0;
  v88[1] = 0;
  uint64_t v89 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange];
  *uint64_t v89 = 0;
  v89[1] = 0;
  __int16 v90 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange];
  *__int16 v90 = 0;
  v90[1] = 0;
  uint64_t v91 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant];
  *uint64_t v91 = 0;
  v91[1] = 0;
  uint64_t v92 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant];
  *uint64_t v92 = 0;
  v92[1] = 0;
  uint64_t v93 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant];
  *uint64_t v93 = 0;
  v93[1] = 0;
  uint64_t v94 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode];
  *uint64_t v94 = 0;
  v94[1] = 0;
  uint64_t v95 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants];
  *uint64_t v95 = 0;
  v95[1] = 0;
  uint64_t v96 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange];
  *uint64_t v96 = 0;
  v96[1] = 0;
  uint64_t v97 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange];
  *uint64_t v97 = 0;
  v97[1] = 0;
  __n128 v98 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted];
  *__n128 v98 = 0;
  v98[1] = 0;
  uint64_t v99 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged];
  *uint64_t v99 = 0;
  v99[1] = 0;
  uint64_t v100 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment];
  *uint64_t v100 = 0;
  v100[1] = 0;
  uint64_t v101 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame];
  *uint64_t v101 = 0;
  v101[1] = 0;
  uint64_t v102 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange];
  *uint64_t v102 = 0;
  v102[1] = 0;
  uint64_t v103 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera];
  *uint64_t v103 = 0;
  v103[1] = 0;
  uint64_t v104 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange];
  *uint64_t v104 = 0;
  v104[1] = 0;
  uint64_t v105 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged];
  *uint64_t v105 = 0;
  v105[1] = 0;
  uint64_t v106 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange];
  void *v106 = 0;
  v106[1] = 0;
  uint64_t v107 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade];
  void *v107 = 0;
  v107[1] = 0;
  uint64_t v108 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions];
  *uint64_t v108 = 0;
  v108[1] = 0;
  uint64_t v109 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions];
  *uint64_t v109 = 0;
  v109[1] = 0;
  uint64_t v110 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities];
  void *v110 = 0;
  v110[1] = 0;
  uint64_t v111 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured];
  *uint64_t v111 = 0;
  v111[1] = 0;
  unint64_t v112 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange];
  *unint64_t v112 = 0;
  v112[1] = 0;
  uint64_t v113 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock];
  *uint64_t v113 = 0;
  v113[1] = 0;
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_enableVideoOnJoin] = 0;
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame] = 0;
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView] = 0;
  __swift_storeEnumTagSinglePayload((uint64_t)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID], 1, 1, v39);
  __swift_storeEnumTagSinglePayload((uint64_t)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageConversationUUID], 1, 1, v39);
  *(void *)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs] = v35;
  uint64_t v114 = MEMORY[0x1E4FBC870];
  *(void *)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsThatHaveReceivedFirstVideoFrame] = MEMORY[0x1E4FBC870];
  *(void *)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame] = v114;
  uint64_t v115 = OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrameTasks;
  type metadata accessor for DispatchWorkItem();
  *(void *)&v27[v115] = Dictionary.init(dictionaryLiteral:)();
  uint64_t v116 = __swift_storeEnumTagSinglePayload((uint64_t)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDResolvingCroppedAspectRatio], 1, 1, v39);
  uint64_t v117 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID];
  *uint64_t v117 = 0;
  v117[1] = 0;
  uint64_t v118 = (uint64_t)&v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession];
  *(_OWORD *)uint64_t v118 = 0u;
  *(_OWORD *)(v118 + 16) = 0u;
  long long v267 = v118;
  *(void *)(v118 + 32) = 0;
  uint64_t v119 = v40;
  uint64_t v120 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v122 = (objc_class *)((char *)&ObjectType - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0));
  Date.init()();
  uint64_t v123 = swift_getObjectType();
  uint64_t v124 = *(uint64_t (**)(void))(v284 + 168);
  id v281 = v123;
  uint64_t v273 = v124;
  uint64_t v274 = v284 + 168;
  uint64_t v125 = v124();
  uint64_t v126 = specialized Set.count.getter(v125);
  swift_bridgeObjectRelease();
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter] = v126 == 1;
  unsigned __int8 v283 = (uint64_t)v27;
  v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] = v279;
  uint64_t v270 = v120;
  uint64_t v271 = v119;
  uint64_t v127 = *(void (**)(char *, objc_class *, uint64_t))(v120 + 16);
  uint64_t v277 = v122;
  v127(v280, v122, v119);
  uint64_t v128 = swift_storeEnumTagMultiPayload();
  MEMORY[0x1F4188790](v128);
  uint64_t v130 = (char *)&ObjectType - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v131 = static Defaults.shared;
  char v132 = (*(uint64_t (**)(void))(*(void *)static Defaults.shared + 568))();
  uint64_t v133 = (char **)(*(uint64_t (**)(void))(*(void *)v131 + 168))();
  v302 = 0;
  id v300 = 0u;
  uint64_t v301 = 0u;
  if (one-time initialization token for default != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v134 = static Colors.ParticipantGradients.default;
  uint64_t v135 = type metadata accessor for Participant.CountdownInfo(0);
  __swift_storeEnumTagSinglePayload(v286, 1, 1, v135);
  uint64_t v136 = *((void *)v282 + 3);
  uint64_t v137 = *((void *)v282 + 4);
  __swift_project_boxed_opaque_existential_1(v282, v136);
  int v138 = *(void (**)(long long *__return_ptr, uint64_t, void, uint64_t, uint64_t))(v137 + 104);
  swift_bridgeObjectRetain();
  v138(&v297, v285, v284, v136, v137);
  int v139 = v299;
  if (v299)
  {
    __swift_project_boxed_opaque_existential_1(&v297, v299);
    int v139 = Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v297);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v297, &demangling cache variable for type metadata for Conversation?);
  }
  int v140 = (uint64_t)v280;
  int v141 = type metadata accessor for ParticipantContactDetailsCache();
  int v142 = (id)v285;
  uint64_t v275 = v141;
  uint64_t v143 = v281;
  uint64_t v144 = (char *)v284;
  uint64_t v145 = specialized static ParticipantContactDetailsCache.cache(for:)();
  if (v133) {
    uint64_t v146 = 0x100010100;
  }
  else {
    uint64_t v146 = 65792;
  }
  LOBYTE(v264) = v139 & 1;
  uint64_t v147 = (uint64_t)v276;
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(v140, (uint64_t)v130, v146 & 0xFFFFFFFFFFFFFFFELL | v132 & 1, (uint64_t)&v300, v134, 0, 0, v286, v264, v145, (uint64_t)ObjectType, v267, (uint64_t)v268, v269, v270, v271, v272, (uint64_t)v273, v274,
    v275,
    v276,
    (uint64_t)v277);
  _s15ConversationKit11ParticipantVWObTm_6(v147, v283 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant);
  int v148 = ((uint64_t (*)(uint64_t, char *))v273)(v143, v144);
  unint64_t v149 = specialized Set.count.getter(v148);
  if (!v149)
  {
    uint64_t v155 = swift_bridgeObjectRelease();
    uint64_t v156 = MEMORY[0x1E4FBC860];
LABEL_29:
    uint64_t v274 = a16;
    uint64_t v286 = a10;
    v280 = a9;
    MEMORY[0x1F4188790](v155);
    unsigned __int8 v170 = (uint64_t)v277;
    unsigned __int8 v171 = v282;
    *(&ObjectType - 4) = v277;
    *(&ObjectType - 3) = v171;
    unsigned __int8 v172 = v285;
    unsigned __int8 v173 = v284;
    long long v264 = v285;
    long long v265 = v284;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((uint64_t)partial apply for closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:), (uint64_t)(&ObjectType - 6), v156);
    char v175 = v174;
    swift_bridgeObjectRelease();
    *(void *)(v283 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants) = v175;
    uint64_t v176 = *((void *)v171 + 3);
    uint64_t v177 = *((void *)v171 + 4);
    __swift_project_boxed_opaque_existential_1(v171, v176);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v177 + 104))(&v300, v172, v173, v176, v177);
    unint64_t v178 = *((void *)&v301 + 1);
    if (*((void *)&v301 + 1))
    {
      uint64_t v179 = v302;
      __swift_project_boxed_opaque_existential_1(&v300, *((uint64_t *)&v301 + 1));
      unsigned __int8 v180 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v179[19])(v178, v179);
      MEMORY[0x1F4188790](v180);
      *(&ObjectType - 4) = (objc_class *)v170;
      *(&ObjectType - 3) = v171;
      long long v264 = v172;
      long long v265 = v173;
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFShySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((void (*)(void **))partial apply for closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:), (uint64_t)(&ObjectType - 6), v180);
      unsigned __int8 v182 = v181;
      uint64_t v276 = 0;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v300);
    }
    else
    {
      uint64_t v276 = 0;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v300, &demangling cache variable for type metadata for Conversation?);
      unsigned __int8 v182 = MEMORY[0x1E4FBC860];
    }
    unsigned __int8 v183 = v283;
    *(void *)(v283 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants) = v182;
    outlined init with copy of Conversation((uint64_t)v171, v183 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    unsigned __int8 v184 = (uint64_t *)(v183 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
    char *v184 = v172;
    v184[1] = v173;
    outlined init with copy of Conversation((uint64_t)v304, v183 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator);
    outlined init with copy of Conversation((uint64_t)v303, v183 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator);
    *(unsigned char *)(v183
             + OBJC_IVAR____TtC15ConversationKit22ConversationController_includeLocalParticipantInVisibleParticipants) = BYTE4(v269) & 1;
    outlined init with copy of Conversation((uint64_t)v171, (uint64_t)&v300);
    unsigned __int8 v185 = v268;
    swift_beginAccess();
    unsigned __int8 v186 = *v185;
    unsigned __int8 v187 = swift_unknownObjectRetain_n();
    unsigned __int8 v188 = specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v187, &v300, v186, 0, v281, v173);
    unsigned __int8 v189 = v183 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    *(void *)unsigned __int8 v189 = v188;
    *(void *)(v189 + 8) = v190;
    *(unsigned char *)(v189 + 16) = v191;
    *(void *)(v183 + OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker) = v280;
    unsigned __int8 v192 = (void *)(v183 + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults);
    uint64_t v193 = v274;
    *unsigned __int8 v192 = v286;
    v192[1] = v193;
    outlined init with copy of Conversation((uint64_t)v171, (uint64_t)&v300);
    uint64_t v194 = self;
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v195 = objc_msgSend(v194, sel_defaultCenter);
    id v196 = objc_allocWithZone((Class)type metadata accessor for VideoMessageController());
    VideoMessageController.init(callCenter:notificationCenter:)();
    *(void *)(v183 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController) = v197;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v278, (uint64_t)&v297, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    if (v299)
    {
      outlined init with take of Notice(&v297, (uint64_t)&v300);
    }
    else
    {
      *((void *)&v301 + 1) = &type metadata for SingleDisplaySharingSession;
      v302 = &protocol witness table for SingleDisplaySharingSession;
      uint64_t v198 = (_OWORD *)swift_allocObject();
      *(void *)&id v300 = v198;
      v198[1] = 0u;
      v198[2] = 0u;
      v198[3] = 0u;
      v198[4] = 0u;
      v198[5] = 0u;
      v198[6] = 0u;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v297, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    }
    uint64_t v199 = v279;
    uint64_t v200 = v267;
    swift_beginAccess();
    outlined assign with take of Participant?((uint64_t)&v300, v200, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    swift_endAccess();
    swift_beginAccess();
    uint64_t v201 = 0;
    __int16 v202 = *(char *)(v189 + 16);
    __int16 v279 = v199;
    if (v202 < 0)
    {
      long long v203 = ObjectType;
      __int16 v204 = &selRef_ringButton;
      if (v199 == 1)
      {
        uint64_t v205 = *((void *)v171 + 3);
        double v206 = *((void *)v171 + 4);
        __swift_project_boxed_opaque_existential_1(v171, v205);
        double v207 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v206 + 80))(v205, v206);
        uint64_t v201 = objc_msgSend(v207, sel_isPreviewRunning);
      }
    }
    else
    {
      long long v203 = ObjectType;
      __int16 v204 = &selRef_ringButton;
    }
    double v208 = (void *)v283;
    *(unsigned char *)(v283 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) = v201;

    v295.receiver = v208;
    v295.super_class = v203;
    long long v209 = objc_msgSendSuper2(&v295, v204[129]);
    uint64_t v210 = *((void *)v171 + 3);
    unsigned __int8 v211 = *((void *)v171 + 4);
    __swift_project_boxed_opaque_existential_1(v171, v210);
    long long v212 = *(void (**)(long long *__return_ptr, uint64_t, void, uint64_t, uint64_t))(v211 + 104);
    os_log_type_t v213 = (char *)v209;
    v212(&v297, v285, v284, v210, v211);
    if (v299)
    {
      outlined init with take of Notice(&v297, (uint64_t)&v300);
      ConversationController.updateIdentityClaimingAssociations(in:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v300);
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v297, &demangling cache variable for type metadata for Conversation?);
    }
    long long v214 = v279;
    uint64_t v215 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v216 = (uint64_t *)&v213[OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock];
    swift_beginAccess();
    unint64_t v217 = *v216;
    *uint64_t v216 = (uint64_t)_s15ConversationKit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalParticipantInVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSbycfU2_TA_0;
    v216[1] = v215;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v217);
    if ((v214 - 1) <= 1)
    {
      uint64_t v218 = (uint64_t)&v213[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator];
      swift_beginAccess();
      outlined init with copy of Conversation(v218, (uint64_t)&v300);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantMediaProviderCreator);
      if (swift_dynamicCast())
      {
        uint64_t v294 = 0;
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v293, (uint64_t)&v292);
        swift_unknownObjectWeakAssign();
        *((void *)&v301 + 1) = &type metadata for DefaultParticipantMediaProviderCreator;
        v302 = &protocol witness table for DefaultParticipantMediaProviderCreator;
        *(void *)&id v300 = swift_allocObject();
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v292, v300 + 16);
        swift_beginAccess();
        __swift_destroy_boxed_opaque_existential_1(v218);
        outlined init with take of Notice(&v300, v218);
        swift_endAccess();
      }
      else
      {
        uint64_t v293 = 0;
        uint64_t v294 = 1;
        outlined destroy of SystemUpdateNotice?((uint64_t)&v293, (uint64_t *)&demangling cache variable for type metadata for DefaultParticipantMediaProviderCreator?);
      }
    }
    uint64_t v219 = (uint64_t)&v213[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator];
    swift_beginAccess();
    outlined init with copy of Conversation(v219, (uint64_t)&v300);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCaptionsProviderCreator);
    if (swift_dynamicCast())
    {
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v292, (uint64_t)v291);
      v291[1] = &protocol witness table for ConversationController;
      swift_unknownObjectWeakAssign();
      *((void *)&v301 + 1) = &type metadata for DefaultParticipantCaptionsProviderCreator;
      v302 = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
      *(void *)&id v300 = swift_allocObject();
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)v291, v300 + 16);
      swift_beginAccess();
      __swift_destroy_boxed_opaque_existential_1(v219);
      outlined init with take of Notice(&v300, v219);
      swift_endAccess();
    }
    else
    {
      char v292 = xmmword_1C376E330;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v292, (uint64_t *)&demangling cache variable for type metadata for DefaultParticipantCaptionsProviderCreator?);
    }
    static ParticipantContactDetailsCache.resetAll()();
    uint64_t v220 = &v213[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
    swift_beginAccess();
    unsigned __int8 v283 = (uint64_t)v220;
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
    ConversationController.lookupActiveConversation()();
    ConversationController.update(with:)((uint64_t)&v300);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v300, &demangling cache variable for type metadata for Conversation?);
    uint64_t v221 = (uint64_t)&v213[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    swift_beginAccess();
    uint64_t v222 = *(void *)(v221 + 24);
    uint64_t v223 = *(void *)(v221 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v221, v222);
    uint64_t v224 = *(void (**)(char *, char **, uint64_t, uint64_t))(v223 + 56);
    unint64_t v225 = v213;
    v224(v213, &protocol witness table for ConversationController, v222, v223);
    swift_endAccess();
    char v226 = *(void (**)(char *, _UNKNOWN **))(**(void **)&v225[OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker]
                                                      + 176);
    uint64_t v144 = v225;
    swift_retain();
    v226(v213, &protocol witness table for ConversationController);
    swift_release();
    ConversationController.updateIDSStatusForVideoMessaging()();
    ConversationController.setupScreenSharingSessionCallbacks()();
    uint64_t v227 = (void *)(*(uint64_t (**)(uint64_t))(v284 + 176))(v281);
    ConversationController.updateScreenSharingSession(with:)(v227);

    LOBYTE(v221) = ConversationController.updateIsUsingIPadExternalCamera()();
    long long v228 = &v144[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera];
    swift_beginAccess();
    *long long v228 = v221 & 1;
    int v142 = objc_msgSend(v194, sel_defaultCenter);
    uint64_t v133 = &selRef_ringButton;
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleLocalVideoPreviewFirstFrameArrived_, *MEMORY[0x1E4FADFD8], 0);
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleLocalVideoAttributesChanged_, *MEMORY[0x1E4FADFC8], 0);
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleSendingVideoChanged_, *MEMORY[0x1E4FADE00], 0);
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleAudioUplinkChange_, *MEMORY[0x1E4FADE10], 0);
    if (v214 == 1)
    {
      objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleCameraZoomBecameAvailable_, *MEMORY[0x1E4FADFF0], 0);
      objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleCameraZoomBecameUnavailable_, *MEMORY[0x1E4FADFF8], 0);
      objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handlelocalCameraUIDDidChange_, *MEMORY[0x1E4FADF80], 0);
      objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleCameraCinematicFramingAvailabilityChanged_, *MEMORY[0x1E4FADF60], 0);
      objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleCameraCinematicFramingEnabledChanged_, *MEMORY[0x1E4FADF68], 0);
      objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleCameraReactionEffectsEnabledChanged_, *MEMORY[0x1E4FADFD0], 0);
      objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleCameraStudioLightEnabledChanged_, *MEMORY[0x1E4FADFE0], 0);
      objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleCameraBlurEnabledChanged_, *MEMORY[0x1E4FADF58], 0);
      objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleCameraListDidChange_, *MEMORY[0x1E4FADFA0], 0);
      objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleSystemPreferredCameraChanged_, *MEMORY[0x1E4FADFE8], 0);
    }
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleScreenSharingDidChange_, *MEMORY[0x1E4FADE08], 0);
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleVideoCallStatusDidChange_, *MEMORY[0x1E4FADDD8], 0);
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleCallStatusDidChange_, *MEMORY[0x1E4FADD90], 0);
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleCallConnected_, *MEMORY[0x1E4FADD70], 0);
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleCallStartedConnecting_, *MEMORY[0x1E4FADD80], 0);
    if (!v214) {
      objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleBluetoothAudioFormatChanged_, *MEMORY[0x1E4FADD60], 0);
    }
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleLocalPreviewChanged_, *MEMORY[0x1E4FADF90], 0);
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleLocalPreviewChanged_, *MEMORY[0x1E4FADF88], 0);
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleLocalPreviewChanged_, *MEMORY[0x1E4FADF98], 0);
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleHoldMusicDidChange_, *MEMORY[0x1E4FADD98], 0);
    objc_msgSend(v142, sel_addObserver_selector_name_object_, v144, sel_handleScreenSharingAttributesChanged_, *MEMORY[0x1E4FADE30], 0);
    if (static Platform.current.getter() != 3) {
      goto LABEL_56;
    }
    uint64_t v151 = sel_handleWindowDidFinishResize_;
    long long v229 = one-time initialization token for didEndWindowLiveResizeNotification;
    int v148 = v144;
    if (v229 == -1)
    {
LABEL_55:
      objc_msgSend(v142, v133[142], v148, v151, static Strings.Notifications.didEndWindowLiveResizeNotification, 0);

LABEL_56:
      objc_msgSend(v142, v133[142], v144, sel_handleScreenConnectionDidUpdate_, *MEMORY[0x1E4FB2EC0], 0);
      objc_msgSend(v142, v133[142], v144, sel_handleScreenConnectionDidUpdate_, *MEMORY[0x1E4FB2EC8], 0);
      objc_msgSend(v142, v133[142], v144, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E4FADCE8], 0);
      objc_msgSend(v142, v133[142], v144, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E4FADCE0], 0);
      objc_msgSend(v142, v133[142], v144, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E4FADCF0], 0);
      objc_msgSend(v142, v133[142], v144, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E4FADCF8], 0);
      objc_msgSend(v142, v133[142], v144, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E4FADCC0], 0);
      objc_msgSend(v142, v133[142], v144, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E4FADCC8], 0);
      objc_msgSend(v142, v133[142], v144, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E4FADCD0], 0);
      objc_msgSend(v142, v133[142], v144, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E4FADCD8], 0);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      *(void *)&uint64_t v284 = static OS_os_log.conversationKit;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v230 = swift_allocObject();
      *(_OWORD *)(v230 + 16) = xmmword_1C376A6F0;
      uint64_t v231 = (uint64_t)&v144[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID];
      swift_beginAccess();
      long long v232 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      MEMORY[0x1F4188790](v232 - 8);
      uint64_t v234 = (char *)&ObjectType - ((v233 + 15) & 0xFFFFFFFFFFFFFFF0);
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v231, (uint64_t)v234, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      char v235 = specialized >> prefix<A>(_:)((uint64_t)v234);
      uint64_t v237 = v236;
      outlined destroy of SystemUpdateNotice?((uint64_t)v234, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v238 = MEMORY[0x1E4FBB1A0];
      *(void *)(v230 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v239 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v230 + 64) = v239;
      *(void *)(v230 + 32) = v235;
      *(void *)(v230 + 40) = v237;
      uint64_t v240 = &v144[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
      swift_beginAccess();
      *(void *)&uint64_t v289 = *(void *)v240;
      type metadata accessor for TUConversationState(0);
      char v241 = String.init<A>(reflecting:)();
      *(void *)(v230 + 96) = v238;
      *(void *)(v230 + 104) = v239;
      *(void *)(v230 + 72) = v241;
      *(void *)(v230 + 80) = v242;
      uint64_t v243 = *(unsigned char *)(v283 + 16);
      uint64_t v289 = *(_OWORD *)v283;
      uint64_t v290 = v243;
      uint64_t v244 = String.init<A>(reflecting:)();
      *(void *)(v230 + 136) = v238;
      *(void *)(v230 + 144) = v239;
      *(void *)(v230 + 112) = v244;
      *(void *)(v230 + 120) = v245;
      LOBYTE(v289) = v279;
      uint64_t v246 = String.init<A>(reflecting:)();
      *(void *)(v230 + 176) = v238;
      *(void *)(v230 + 184) = v239;
      *(void *)(v230 + 152) = v246;
      *(void *)(v230 + 160) = v247;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      unint64_t v248 = swift_allocObject();
      uint64_t v284 = xmmword_1C3769620;
      *(_OWORD *)(v248 + 16) = xmmword_1C3769620;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      uint64_t v249 = (*(unsigned __int8 *)(v272 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v272 + 80);
      uint64_t v250 = swift_allocObject();
      *(_OWORD *)(v250 + 16) = v284;
      unint64_t v251 = (uint64_t)&v144[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
      swift_beginAccess();
      _s15ConversationKit11ParticipantVWOcTm_19(v251, v250 + v249);
      swift_beginAccess();
      uint64_t v287 = v250;
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit11ParticipantVGG_SSs5NeverOTg506_sSi15f5Kit11h34VSSIgyno_Si6offset_AC7elementtSSs5I355OIegnrzr_TR04_s15a103Kit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalC217InVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSSSi_AA0O0VtXEfU3_Tf3nnnpf_nTf1cn_n();
      uint64_t v253 = v252;
      swift_bridgeObjectRelease();
      uint64_t v287 = v253;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance [A]);
      double v254 = BidirectionalCollection<>.joined(separator:)();
      double v256 = v255;
      swift_bridgeObjectRelease();
      uint64_t v287 = v254;
      uint64_t v288 = v256;
      double v257 = String.init<A>(reflecting:)();
      *(void *)(v248 + 56) = v238;
      *(void *)(v248 + 64) = v239;
      *(void *)(v248 + 32) = v257;
      *(void *)(v248 + 40) = v258;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      ConversationController.fetchExistingScreenSharingAttributes()();
      if (v144[OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive] == 1)
      {
        double v259 = v282;
        long long v260 = *((void *)v282 + 3);
        long long v261 = *((void *)v282 + 4);
        __swift_project_boxed_opaque_existential_1(v282, v260);
        long long v262 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v261 + 80))(v260, v261);
        objc_msgSend(v262, sel_startPreview);
        swift_unknownObjectRelease();

        int v142 = v262;
      }
      else
      {
        swift_unknownObjectRelease();
        double v259 = v282;
      }
      long long v263 = (uint64_t)v277;

      swift_unknownObjectRelease();
      swift_release();
      outlined destroy of SystemUpdateNotice?(v278, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v303);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v304);
      (*(void (**)(uint64_t, uint64_t))(v270 + 8))(v263, v271);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v259);
      return v144;
    }
LABEL_63:
    swift_once();
    goto LABEL_55;
  }
  __int16 v150 = v149;
  char v296 = MEMORY[0x1E4FBC860];
  uint64_t v151 = (char *)&v296;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v148 & 0xC000000000000001) != 0)
  {
    uint64_t v152 = __CocoaSet.startIndex.getter();
    __int16 v154 = 1;
  }
  else
  {
    uint64_t v152 = specialized _NativeSet.startIndex.getter(v148);
    __int16 v154 = v157 & 1;
  }
  *(void *)&unint64_t v297 = v152;
  *((void *)&v297 + 1) = v153;
  uint64_t v298 = v154;
  if (v150 < 0)
  {
    __break(1u);
    goto LABEL_63;
  }
  long long v158 = v148 & 0xFFFFFFFFFFFFFF8;
  if (v148 < 0) {
    long long v158 = v148;
  }
  uint64_t v286 = v158;
  while (1)
  {
    uint64_t v159 = v297;
    uint64_t v160 = v298;
    specialized Set.subscript.getter(v297, SDWORD2(v297), v298, v148);
    unint64_t v162 = v161;
    uint64_t result = (char *)(id)TUNormalizedHandleForTUHandle();
    if (!result) {
      break;
    }

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    uint64_t result = (char *)specialized ContiguousArray._endMutation()();
    if ((v148 & 0xC000000000000001) != 0)
    {
      if ((v160 & 1) == 0) {
        goto LABEL_65;
      }
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
      unsigned __int8 v169 = (void (*)(long long *, void))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      v169(&v300, 0);
    }
    else
    {
      uint64_t v164 = specialized _NativeSet.index(after:)(v159, *((void *)&v159 + 1), v160, v148);
      unsigned __int8 v166 = v165;
      unsigned __int8 v168 = v167;
      outlined consume of Set<TUHandle>.Index._Variant(v159, *((uint64_t *)&v159 + 1), v160);
      *(void *)&unint64_t v297 = v164;
      *((void *)&v297 + 1) = v166;
      uint64_t v298 = v168 & 1;
    }
    if (!--v150)
    {
      outlined consume of Set<TUHandle>.Index._Variant(v297, *((uint64_t *)&v297 + 1), v298);
      uint64_t v156 = v296;
      uint64_t v155 = swift_bridgeObjectRelease();
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

void specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned char *a23,uint64_t a24,uint64_t a25)
{
  void (*v80)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(void);
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  long long v98;
  char v99;
  uint64_t v100;
  int v101;
  char v102;
  uint64_t v103;
  void *v104;
  void *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  void (*v113)(uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(void);
  uint64_t v120;
  uint64_t (*v121)(uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  void *v134;
  void *v135;
  id v136;
  id v137;
  uint64_t v138;
  _OWORD *v139;
  int v140;
  uint64_t v141;
  unsigned __int8 v142;
  int v143;
  BOOL v144;
  objc_class *v145;
  char **v146;
  uint64_t v147;
  uint64_t (*v148)(uint64_t);
  void *v149;
  void *v150;
  id v151;
  uint64_t v152;
  void (*v153)(void);
  char *v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  void (*v169)(char *, _UNKNOWN **);
  void *v170;
  char *v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  int v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  uint64_t v204;
  uint64_t v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  id v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  uint64_t v222;
  uint64_t v223;
  id v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  id v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  id v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  id v236;
  uint64_t v237;
  uint64_t v238;
  id v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  id v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  id v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  id v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  id v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  id v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  id v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  id v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  id v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  id v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t *v291;
  uint64_t v292;
  unint64_t v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  char v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t (*v305)(void);
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t (*v312)(uint64_t);
  void *v313;
  void (*v314)(void);
  objc_class *ObjectType;
  uint64_t v316;
  uint64_t *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t (*v323)(void);
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unsigned __int8 v327;
  int v328;
  uint64_t v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  long long v334;
  uint64_t (*v335)(void, void);
  uint64_t v336;
  long long v337;
  char v338;
  void v339[3];
  long long v340;
  uint64_t v341;
  char v342;
  objc_super v343;
  void v344[5];
  long long v345;
  char v346;
  uint64_t v347;
  long long v348;
  long long v349;
  _UNKNOWN **v350;
  void v351[5];
  void v352[5];
  uint64_t v353[3];
  uint64_t v354;
  uint64_t v355;

  OUTLINED_FUNCTION_31();
  uint64_t v328 = v25;
  v326 = v26;
  HIDWORD(v318) = v27;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  id v332 = v33;
  int v333 = v32;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  uint64_t v35 = OUTLINED_FUNCTION_8(v34);
  MEMORY[0x1F4188790](v35);
  OUTLINED_FUNCTION_2_3();
  *(void *)&unint64_t v334 = v36;
  unsigned __int8 v324 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v37);
  OUTLINED_FUNCTION_2_3();
  v329 = v38;
  uint64_t v39 = OUTLINED_FUNCTION_128_5();
  uint64_t v40 = OUTLINED_FUNCTION_1(v39);
  id v321 = v41;
  MEMORY[0x1F4188790](v40);
  OUTLINED_FUNCTION_281_1(v42, (uint64_t)ObjectType);
  v354 = a24;
  uint64_t v355 = a25;
  __swift_allocate_boxed_opaque_existential_1(v353);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_46();
  v43();
  v352[3] = &type metadata for DefaultParticipantMediaProviderCreator;
  v352[4] = &protocol witness table for DefaultParticipantMediaProviderCreator;
  v352[0] = OUTLINED_FUNCTION_20();
  outlined init with take of DefaultParticipantMediaProviderCreator(v31, v352[0] + 16);
  v351[3] = &type metadata for DefaultParticipantCaptionsProviderCreator;
  v351[4] = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
  v351[0] = OUTLINED_FUNCTION_26();
  outlined init with take of DefaultParticipantCaptionsProviderCreator(v29, v351[0] + 16);
  a23[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable] = 0;
  a23[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable] = 0;
  a23[OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable] = 0;
  *(void *)&a23[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController] = 0;
  id v331 = OBJC_IVAR____TtC15ConversationKit22ConversationController_audioCallbackQueue;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v44 = type metadata accessor for DispatchQoS();
  uint64_t v45 = OUTLINED_FUNCTION_8(v44);
  MEMORY[0x1F4188790](v45);
  OUTLINED_FUNCTION_64();
  uint64_t v46 = a23;
  static DispatchQoS.unspecified.getter();
  type metadata accessor for OS_dispatch_queue.Attributes();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v47);
  OUTLINED_FUNCTION_61();
  *(void *)&uint64_t v348 = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v48);
  OUTLINED_FUNCTION_60();
  uint64_t v49 = OUTLINED_FUNCTION_369_0();
  v50(v49);
  OUTLINED_FUNCTION_384();
  *(void *)&a23[v331] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_didReceiveLatestRemoteAttributes] = 0;
  OUTLINED_FUNCTION_377_0(&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes]);
  *(unsigned char *)(v51 + 96) = 1;
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController] = 0;
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider] = 0;
  uint64_t v52 = OBJC_IVAR____TtC15ConversationKit22ConversationController_recentPresentationContexts;
  uint64_t v53 = MEMORY[0x1E4FBC860];
  *(void *)&v46[v52] = Dictionary.init(dictionaryLiteral:)();
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit] = 0;
  uint64_t v54 = (uint64_t)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_pendingNoticeWaitingForRemoteScreenShareAttributes];
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
  OUTLINED_FUNCTION_25_1(v54, v56, v57, v55);
  uint64_t v58 = OBJC_IVAR____TtC15ConversationKit22ConversationController_scheduledVideoInfoResetDates;
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_27_3();
  uint64_t v59 = type metadata accessor for Date();
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  *(void *)&v46[v58] = Dictionary.init(dictionaryLiteral:)();
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState] = 0;
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests] = 0;
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount] = 0;
  unint64_t v317 = (uint64_t *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation] = 1;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeDisabledByActivity] = 0;
  uint64_t v60 = OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags;
  *(void *)&v46[v60] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_waitForModeSwitchDuringUPlusOneHandoff] = 0;
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock);
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_enableVideoOnJoin] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView] = 0;
  OUTLINED_FUNCTION_10_2((uint64_t)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID]);
  OUTLINED_FUNCTION_10_2((uint64_t)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageConversationUUID]);
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs] = v53;
  uint64_t v61 = MEMORY[0x1E4FBC870];
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsThatHaveReceivedFirstVideoFrame] = MEMORY[0x1E4FBC870];
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame] = v61;
  uint64_t v62 = OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrameTasks;
  type metadata accessor for DispatchWorkItem();
  *(void *)&v46[v62] = Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_10_2((uint64_t)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDResolvingCroppedAspectRatio]);
  OUTLINED_FUNCTION_12_73(OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID);
  uint64_t v63 = (uint64_t)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession];
  *(_OWORD *)uint64_t v63 = 0u;
  *(_OWORD *)(v63 + 16) = 0u;
  uint64_t v316 = v63;
  *(void *)(v63 + 32) = 0;
  OUTLINED_FUNCTION_5_3();
  uint64_t v65 = v64;
  MEMORY[0x1F4188790](v66);
  OUTLINED_FUNCTION_285_1();
  Date.init()();
  uint64_t v67 = swift_getObjectType();
  int v68 = *(uint64_t (**)(void))(v332 + 168);
  v330 = (char *)v67;
  id v323 = v68;
  uint64_t v69 = v68();
  specialized Set.count.getter(v69);
  OUTLINED_FUNCTION_5_2();
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter] = v62 == 1;
  id v331 = (uint64_t)v46;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] = v328;
  char v319 = v65;
  uint64_t v320 = v59;
  id v325 = v53;
  OUTLINED_FUNCTION_2_1();
  v70();
  uint64_t v71 = swift_storeEnumTagMultiPayload();
  MEMORY[0x1F4188790](v71);
  OUTLINED_FUNCTION_1_20();
  UUID.init()();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  unsigned __int8 v324 = (*(uint64_t (**)(void))(v72 + 568))();
  OUTLINED_FUNCTION_50();
  (*(void (**)(void))(v73 + 168))();
  id v350 = 0;
  uint64_t v348 = 0u;
  uint64_t v349 = 0u;
  if (one-time initialization token for default != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  __n128 v74 = (uint64_t *)static Colors.ParticipantGradients.default;
  uint64_t v75 = type metadata accessor for Participant.CountdownInfo(0);
  OUTLINED_FUNCTION_25_1(v334, v76, v77, v75);
  uint64_t v78 = v354;
  uint64_t v79 = v355;
  OUTLINED_FUNCTION_69_10(v353, v354);
  uint64_t v80 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 104);
  swift_bridgeObjectRetain();
  v80(&v345, v333, v332, v78, v79);
  if (v347)
  {
    __swift_project_boxed_opaque_existential_1(&v345, v347);
    OUTLINED_FUNCTION_45_4();
    Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v345);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v345, &demangling cache variable for type metadata for Conversation?);
  }
  uint64_t v81 = v322;
  uint64_t v82 = v333;
  char v322 = type metadata accessor for ParticipantContactDetailsCache();
  uint64_t v83 = v330;
  specialized static ParticipantContactDetailsCache.cache(for:)();
  OUTLINED_FUNCTION_245_1();
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(v329, (uint64_t)(a23 - 8), v84, v85, (uint64_t)v74, 0, 0, v334, (uint64_t)ObjectType, v316, (uint64_t)v317, v318, v319, v320, v321, v322, (uint64_t)v323, v324, v325,
    v326,
    v327,
    v329);
  _s15ConversationKit11ParticipantVWObTm_6(v81, v331 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant);
  uint64_t v86 = ((uint64_t (*)(char *, uint64_t))v323)(v330, v332);
  uint64_t v87 = specialized Set.count.getter(v86);
  if (!v87)
  {
    uint64_t v94 = swift_bridgeObjectRelease();
    uint64_t v95 = MEMORY[0x1E4FBC860];
LABEL_26:
    v329 = a22;
    MEMORY[0x1F4188790](v94);
    OUTLINED_FUNCTION_474();
    uint64_t v115 = v325;
    *(void *)(v116 - 32) = v325;
    *(void *)(v116 - 24) = v74;
    uint64_t v117 = v332;
    *(void *)(v116 - 16) = v82;
    *(void *)(v116 - 8) = v117;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((uint64_t)closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)partial apply, v118, v95);
    OUTLINED_FUNCTION_5_2();
    OUTLINED_FUNCTION_244_2(OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    OUTLINED_FUNCTION_141_5();
    v119();
    if (*((void *)&v349 + 1))
    {
      uint64_t v120 = OUTLINED_FUNCTION_176_4();
      uint64_t v122 = v121(v120);
      MEMORY[0x1F4188790](v122);
      *(&v317 - 4) = (uint64_t *)v115;
      *(&v317 - 3) = v74;
      uint64_t ObjectType = (objc_class *)v82;
      uint64_t v316 = v117;
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFShySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((void (*)(void **))closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)partial apply, (uint64_t)(&v317 - 6), v122);
      uint64_t v124 = v123;
      id v323 = 0;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v348);
    }
    else
    {
      id v323 = 0;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v348, &demangling cache variable for type metadata for Conversation?);
      uint64_t v124 = MEMORY[0x1E4FBC860];
    }
    uint64_t v125 = v331;
    *(void *)(v331 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants) = v124;
    outlined init with copy of Conversation((uint64_t)v353, v125 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    uint64_t v126 = (uint64_t *)(v125 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
    *uint64_t v126 = v82;
    v126[1] = v117;
    outlined init with copy of Conversation((uint64_t)v352, v125 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator);
    outlined init with copy of Conversation((uint64_t)v351, v125 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator);
    OUTLINED_FUNCTION_366_0(OBJC_IVAR____TtC15ConversationKit22ConversationController_includeLocalParticipantInVisibleParticipants);
    uint64_t v127 = v317;
    OUTLINED_FUNCTION_2();
    uint64_t v128 = *v127;
    uint64_t v129 = swift_unknownObjectRetain_n();
    uint64_t v130 = specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v129, &v348, v128, 0, (uint64_t)v330, v117);
    uint64_t v131 = v125 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    *(void *)uint64_t v131 = v130;
    *(void *)(v131 + 8) = v132;
    *(unsigned char *)(v131 + 16) = v133;
    *(void *)(v125 + OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker) = a21;
    uint64_t v134 = (void *)(v125 + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults);
    *uint64_t v134 = v329;
    v134[1] = &protocol witness table for Defaults;
    outlined init with copy of Conversation((uint64_t)v353, (uint64_t)&v348);
    uint64_t v135 = self;
    swift_retain();
    swift_retain();
    uint64_t v136 = objc_msgSend(v135, sel_defaultCenter);
    uint64_t v137 = objc_allocWithZone((Class)type metadata accessor for VideoMessageController());
    OUTLINED_FUNCTION_437();
    *(void *)(v125 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController) = v138;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v326, (uint64_t)&v345, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    if (v347)
    {
      outlined init with take of Notice(&v345, (uint64_t)&v348);
    }
    else
    {
      *((void *)&v349 + 1) = &type metadata for SingleDisplaySharingSession;
      id v350 = &protocol witness table for SingleDisplaySharingSession;
      int v139 = (_OWORD *)OUTLINED_FUNCTION_11_7();
      OUTLINED_FUNCTION_341_0(v139);
      outlined destroy of SystemUpdateNotice?((uint64_t)&v345, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    }
    int v140 = v328;
    int v141 = v316;
    OUTLINED_FUNCTION_6_1();
    outlined assign with take of Participant?((uint64_t)&v348, v141, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    swift_endAccess();
    OUTLINED_FUNCTION_2();
    int v142 = 0;
    uint64_t v143 = *(char *)(v131 + 16);
    LODWORD(v334) = v140;
    unsigned __int8 v324 = a21;
    if (v143 < 0)
    {
      uint64_t v144 = v140 == 1;
      uint64_t v145 = ObjectType;
      uint64_t v146 = &selRef_ringButton;
      if (v144)
      {
        OUTLINED_FUNCTION_109_5(v353);
        uint64_t v147 = OUTLINED_FUNCTION_1_11();
        unint64_t v149 = (void *)v148(v147);
        int v142 = objc_msgSend(v149, sel_isPreviewRunning);
      }
    }
    else
    {
      uint64_t v145 = ObjectType;
      uint64_t v146 = &selRef_ringButton;
    }
    __int16 v150 = (void *)v331;
    *(unsigned char *)(v331 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) = v142;

    v343.receiver = v150;
    v343.super_class = v145;
    uint64_t v151 = objc_msgSendSuper2(&v343, v146[129]);
    uint64_t v152 = v355;
    __swift_project_boxed_opaque_existential_1(v353, v354);
    uint64_t v153 = *(void (**)(void))(v152 + 104);
    __int16 v154 = (char *)v151;
    OUTLINED_FUNCTION_397();
    v153();
    if (v347)
    {
      outlined init with take of Notice(&v345, (uint64_t)&v348);
      ConversationController.updateIdentityClaimingAssociations(in:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v348);
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v345, &demangling cache variable for type metadata for Conversation?);
    }
    uint64_t v155 = OUTLINED_FUNCTION_20();
    swift_unknownObjectWeakInit();
    uint64_t v156 = (uint64_t *)&v154[OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock];
    OUTLINED_FUNCTION_11_0();
    uint64_t v157 = *v156;
    *uint64_t v156 = (uint64_t)_s15ConversationKit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalParticipantInVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSbycfU2_TA_0;
    v156[1] = v155;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v157);
    if ((v334 - 1) <= 1)
    {
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_372_0();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantMediaProviderCreator);
      if (swift_dynamicCast())
      {
        uint64_t v342 = 0;
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v341, (uint64_t)&v340);
        swift_unknownObjectWeakAssign();
        *((void *)&v349 + 1) = &type metadata for DefaultParticipantMediaProviderCreator;
        id v350 = &protocol witness table for DefaultParticipantMediaProviderCreator;
        long long v158 = OUTLINED_FUNCTION_20();
        OUTLINED_FUNCTION_422(v158);
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v340, v159);
        OUTLINED_FUNCTION_6_1();
        OUTLINED_FUNCTION_184_3();
        swift_endAccess();
      }
      else
      {
        uint64_t v341 = 0;
        uint64_t v342 = 1;
        outlined destroy of SystemUpdateNotice?((uint64_t)&v341, (uint64_t *)&demangling cache variable for type metadata for DefaultParticipantMediaProviderCreator?);
      }
    }
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_372_0();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCaptionsProviderCreator);
    if (swift_dynamicCast())
    {
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v340, (uint64_t)v339);
      v339[1] = &protocol witness table for ConversationController;
      swift_unknownObjectWeakAssign();
      *((void *)&v349 + 1) = &type metadata for DefaultParticipantCaptionsProviderCreator;
      id v350 = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
      uint64_t v160 = OUTLINED_FUNCTION_26();
      OUTLINED_FUNCTION_422(v160);
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)v339, v161);
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_184_3();
      swift_endAccess();
    }
    else
    {
      unsigned int v340 = xmmword_1C376E330;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v340, (uint64_t *)&demangling cache variable for type metadata for DefaultParticipantCaptionsProviderCreator?);
    }
    static ParticipantContactDetailsCache.resetAll()();
    unint64_t v162 = &v154[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
    OUTLINED_FUNCTION_2();
    id v331 = (uint64_t)v162;
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
    ConversationController.lookupActiveConversation()();
    ConversationController.update(with:)((uint64_t)&v348);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v348, &demangling cache variable for type metadata for Conversation?);
    uint64_t v163 = &v154[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    OUTLINED_FUNCTION_6_1();
    uint64_t v164 = *((void *)v163 + 4);
    unsigned __int8 v165 = OUTLINED_FUNCTION_200_1();
    __swift_mutable_project_boxed_opaque_existential_1(v165, v166);
    __int16 v90 = *(void (**)(void))(v164 + 56);
    unsigned __int8 v167 = v154;
    OUTLINED_FUNCTION_397();
    v90();
    swift_endAccess();
    OUTLINED_FUNCTION_50();
    unsigned __int8 v169 = *(void (**)(char *, _UNKNOWN **))(v168 + 176);
    uint64_t v83 = v167;
    swift_retain();
    v169(v154, &protocol witness table for ConversationController);
    swift_release();
    ConversationController.updateIDSStatusForVideoMessaging()();
    ConversationController.setupScreenSharingSessionCallbacks()();
    unsigned __int8 v170 = (void *)(*(uint64_t (**)(char *))(v332 + 176))(v330);
    ConversationController.updateScreenSharingSession(with:)(v170);

    LOBYTE(v163) = ConversationController.updateIsUsingIPadExternalCamera()();
    unsigned __int8 v171 = &v83[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera];
    OUTLINED_FUNCTION_11_0();
    *unsigned __int8 v171 = v163 & 1;
    __n128 v74 = (uint64_t *)objc_msgSend(v135, sel_defaultCenter);
    uint64_t v86 = (uint64_t)&selRef_ringButton;
    unsigned __int8 v172 = objc_msgSend(v74, sel_addObserver_selector_name_object_, v83, sel_handleLocalVideoPreviewFirstFrameArrived_, *MEMORY[0x1E4FADFD8], 0);
    char v175 = OUTLINED_FUNCTION_18_63((uint64_t)v172, v173, v174, (uint64_t)sel_handleLocalVideoAttributesChanged_, *MEMORY[0x1E4FADFC8]);
    unint64_t v178 = OUTLINED_FUNCTION_18_63((uint64_t)v175, v176, v177, (uint64_t)sel_handleSendingVideoChanged_, *MEMORY[0x1E4FADE00]);
    unsigned __int8 v181 = OUTLINED_FUNCTION_18_63((uint64_t)v178, v179, v180, (uint64_t)sel_handleAudioUplinkChange_, *MEMORY[0x1E4FADE10]);
    unsigned __int8 v184 = v334;
    if (v334 == 1)
    {
      unsigned __int8 v185 = OUTLINED_FUNCTION_18_63((uint64_t)v181, v182, v183, (uint64_t)sel_handleCameraZoomBecameAvailable_, *MEMORY[0x1E4FADFF0]);
      unsigned __int8 v188 = OUTLINED_FUNCTION_18_63((uint64_t)v185, v186, v187, (uint64_t)sel_handleCameraZoomBecameUnavailable_, *MEMORY[0x1E4FADFF8]);
      unsigned __int8 v191 = OUTLINED_FUNCTION_18_63((uint64_t)v188, v189, v190, (uint64_t)sel_handlelocalCameraUIDDidChange_, *MEMORY[0x1E4FADF80]);
      uint64_t v194 = OUTLINED_FUNCTION_18_63((uint64_t)v191, v192, v193, (uint64_t)sel_handleCameraCinematicFramingAvailabilityChanged_, *MEMORY[0x1E4FADF60]);
      uint64_t v197 = OUTLINED_FUNCTION_18_63((uint64_t)v194, v195, v196, (uint64_t)sel_handleCameraCinematicFramingEnabledChanged_, *MEMORY[0x1E4FADF68]);
      uint64_t v200 = OUTLINED_FUNCTION_18_63((uint64_t)v197, v198, v199, (uint64_t)sel_handleCameraReactionEffectsEnabledChanged_, *MEMORY[0x1E4FADFD0]);
      long long v203 = OUTLINED_FUNCTION_18_63((uint64_t)v200, v201, v202, (uint64_t)sel_handleCameraStudioLightEnabledChanged_, *MEMORY[0x1E4FADFE0]);
      double v206 = OUTLINED_FUNCTION_18_63((uint64_t)v203, v204, v205, (uint64_t)sel_handleCameraBlurEnabledChanged_, *MEMORY[0x1E4FADF58]);
      long long v209 = OUTLINED_FUNCTION_18_63((uint64_t)v206, v207, v208, (uint64_t)sel_handleCameraListDidChange_, *MEMORY[0x1E4FADFA0]);
      unsigned __int8 v181 = OUTLINED_FUNCTION_18_63((uint64_t)v209, v210, v211, (uint64_t)sel_handleSystemPreferredCameraChanged_, *MEMORY[0x1E4FADFE8]);
    }
    long long v212 = OUTLINED_FUNCTION_18_63((uint64_t)v181, v182, v183, (uint64_t)sel_handleScreenSharingDidChange_, *MEMORY[0x1E4FADE08]);
    uint64_t v215 = OUTLINED_FUNCTION_18_63((uint64_t)v212, v213, v214, (uint64_t)sel_handleVideoCallStatusDidChange_, *MEMORY[0x1E4FADDD8]);
    uint64_t v218 = OUTLINED_FUNCTION_18_63((uint64_t)v215, v216, v217, (uint64_t)sel_handleCallStatusDidChange_, *MEMORY[0x1E4FADD90]);
    uint64_t v221 = OUTLINED_FUNCTION_18_63((uint64_t)v218, v219, v220, (uint64_t)sel_handleCallConnected_, *MEMORY[0x1E4FADD70]);
    uint64_t v224 = OUTLINED_FUNCTION_18_63((uint64_t)v221, v222, v223, (uint64_t)sel_handleCallStartedConnecting_, *MEMORY[0x1E4FADD80]);
    if (!v184) {
      uint64_t v224 = OUTLINED_FUNCTION_18_63((uint64_t)v224, v225, v226, (uint64_t)sel_handleBluetoothAudioFormatChanged_, *MEMORY[0x1E4FADD60]);
    }
    long long v228 = OUTLINED_FUNCTION_22_51((uint64_t)v224, v225, v226, v227, *MEMORY[0x1E4FADF90]);
    long long v232 = OUTLINED_FUNCTION_22_51((uint64_t)v228, v229, v230, v231, *MEMORY[0x1E4FADF88]);
    uint64_t v236 = OUTLINED_FUNCTION_22_51((uint64_t)v232, v233, v234, v235, *MEMORY[0x1E4FADF98]);
    unint64_t v239 = OUTLINED_FUNCTION_18_63((uint64_t)v236, v237, v238, (uint64_t)sel_handleHoldMusicDidChange_, *MEMORY[0x1E4FADD98]);
    OUTLINED_FUNCTION_18_63((uint64_t)v239, v240, v241, (uint64_t)sel_handleScreenSharingAttributesChanged_, *MEMORY[0x1E4FADE30]);
    uint64_t v242 = static Platform.current.getter();
    if (v242 != 3) {
      goto LABEL_54;
    }
    uint64_t v89 = sel_handleWindowDidFinishResize_;
    uint64_t v246 = one-time initialization token for didEndWindowLiveResizeNotification;
    uint64_t v88 = v83;
    if (v246 == -1)
    {
LABEL_53:
      objc_msgSend(v74, *(SEL *)(v86 + 1136), v88, v89, static Strings.Notifications.didEndWindowLiveResizeNotification, 0);

LABEL_54:
      uint64_t v247 = OUTLINED_FUNCTION_22_51(v242, v243, v244, v245, *MEMORY[0x1E4FB2EC0]);
      unint64_t v251 = OUTLINED_FUNCTION_22_51((uint64_t)v247, v248, v249, v250, *MEMORY[0x1E4FB2EC8]);
      double v255 = OUTLINED_FUNCTION_22_51((uint64_t)v251, v252, v253, v254, *MEMORY[0x1E4FADCE8]);
      double v259 = OUTLINED_FUNCTION_22_51((uint64_t)v255, v256, v257, v258, *MEMORY[0x1E4FADCE0]);
      long long v263 = OUTLINED_FUNCTION_22_51((uint64_t)v259, v260, v261, v262, *MEMORY[0x1E4FADCF0]);
      long long v267 = OUTLINED_FUNCTION_22_51((uint64_t)v263, v264, v265, v266, *MEMORY[0x1E4FADCF8]);
      uint64_t v271 = OUTLINED_FUNCTION_22_51((uint64_t)v267, v268, v269, v270, *MEMORY[0x1E4FADCC0]);
      uint64_t v275 = OUTLINED_FUNCTION_22_51((uint64_t)v271, v272, v273, v274, *MEMORY[0x1E4FADCC8]);
      __int16 v279 = OUTLINED_FUNCTION_22_51((uint64_t)v275, v276, v277, v278, *MEMORY[0x1E4FADCD0]);
      OUTLINED_FUNCTION_22_51((uint64_t)v279, v280, v281, v282, *MEMORY[0x1E4FADCD8]);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      v330 = (char *)static OS_os_log.conversationKit;
      id v332 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      unsigned __int8 v283 = swift_allocObject();
      *(_OWORD *)(v283 + 16) = xmmword_1C376A6F0;
      uint64_t v284 = (uint64_t)&v83[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID];
      OUTLINED_FUNCTION_2();
      char v285 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v286 = OUTLINED_FUNCTION_8(v285);
      MEMORY[0x1F4188790](v286);
      OUTLINED_FUNCTION_61();
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v284, (uint64_t)v90, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v287 = specialized >> prefix<A>(_:)((uint64_t)v90);
      uint64_t v289 = v288;
      uint64_t v290 = OUTLINED_FUNCTION_69_3();
      outlined destroy of SystemUpdateNotice?(v290, v291);
      char v292 = MEMORY[0x1E4FBB1A0];
      *(void *)(v283 + 56) = MEMORY[0x1E4FBB1A0];
      uint64_t v293 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v283 + 64) = v293;
      *(void *)(v283 + 32) = v287;
      *(void *)(v283 + 40) = v289;
      uint64_t v294 = &v83[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
      OUTLINED_FUNCTION_2();
      *(void *)&uint64_t v337 = *(void *)v294;
      type metadata accessor for TUConversationState(0);
      uint64_t v295 = String.init<A>(reflecting:)();
      *(void *)(v283 + 96) = v292;
      *(void *)(v283 + 104) = v293;
      *(void *)(v283 + 72) = v295;
      *(void *)(v283 + 80) = v296;
      unint64_t v297 = *(unsigned char *)(v331 + 16);
      uint64_t v337 = *(_OWORD *)v331;
      uint64_t v338 = v297;
      uint64_t v298 = String.init<A>(reflecting:)();
      *(void *)(v283 + 136) = v292;
      *(void *)(v283 + 144) = v293;
      *(void *)(v283 + 112) = v298;
      *(void *)(v283 + 120) = v299;
      LOBYTE(v337) = v334;
      id v300 = String.init<A>(reflecting:)();
      *(void *)(v283 + 176) = v292;
      *(void *)(v283 + 184) = v293;
      *(void *)(v283 + 152) = v300;
      *(void *)(v283 + 160) = v301;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v302 = OUTLINED_FUNCTION_25_15();
      unint64_t v334 = xmmword_1C3769620;
      *(_OWORD *)(v302 + 16) = xmmword_1C3769620;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      uint64_t v303 = OUTLINED_FUNCTION_235_2();
      *(_OWORD *)(v303 + 16) = v334;
      uint64_t v304 = (uint64_t)&v83[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
      OUTLINED_FUNCTION_2();
      _s15ConversationKit11ParticipantVWOcTm_19(v304, (uint64_t)&v294[v303]);
      OUTLINED_FUNCTION_2();
      uint64_t v335 = (uint64_t (*)(void, void))v303;
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      uint64_t v305 = v323;
      _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit11ParticipantVGG_SSs5NeverOTg506_sSi15f5Kit11h34VSSIgyno_Si6offset_AC7elementtSSs5I355OIegnrzr_TR04_s15a103Kit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalC217InVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSSSi_AA0O0VtXEfU3_Tf3nnnpf_nTf1cn_n();
      OUTLINED_FUNCTION_23_32();
      uint64_t v335 = (uint64_t (*)(void, void))v305;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance [A]);
      uint64_t v306 = BidirectionalCollection<>.joined(separator:)();
      uint64_t v308 = v307;
      swift_bridgeObjectRelease();
      uint64_t v335 = (uint64_t (*)(void, void))v306;
      id v336 = v308;
      v309 = String.init<A>(reflecting:)();
      *(void *)(v302 + 56) = v292;
      *(void *)(v302 + 64) = v293;
      *(void *)(v302 + 32) = v309;
      *(void *)(v302 + 40) = v310;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      ConversationController.fetchExistingScreenSharingAttributes()();
      if (v83[OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive] == 1)
      {
        __swift_project_boxed_opaque_existential_1(v353, v354);
        id v311 = OUTLINED_FUNCTION_48_1();
        id v313 = (void *)v312(v311);
        objc_msgSend(v313, sel_startPreview);
        swift_release();

        __n128 v74 = (uint64_t *)v313;
      }
      else
      {
        swift_release();
      }

      swift_unknownObjectRelease();
      swift_release();
      outlined destroy of SystemUpdateNotice?(v326, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v351);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v352);
      OUTLINED_FUNCTION_26_2();
      v314();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v353);
      OUTLINED_FUNCTION_28();
      return;
    }
LABEL_61:
    swift_once();
    goto LABEL_53;
  }
  uint64_t v88 = v87;
  v344[0] = MEMORY[0x1E4FBC860];
  uint64_t v89 = (char *)v344;
  specialized ContiguousArray.reserveCapacity(_:)();
  __int16 v90 = (void (*)(void))(v86 & 0xC000000000000001);
  if ((v86 & 0xC000000000000001) != 0)
  {
    uint64_t v91 = __CocoaSet.startIndex.getter();
    uint64_t v93 = 1;
  }
  else
  {
    uint64_t v91 = specialized _NativeSet.startIndex.getter(v86);
    uint64_t v93 = v96 & 1;
  }
  *(void *)&uint64_t v345 = v91;
  *((void *)&v345 + 1) = v92;
  id v346 = v93;
  if (v88 < 0)
  {
    __break(1u);
    goto LABEL_61;
  }
  uint64_t v97 = v86 & 0xFFFFFFFFFFFFFF8;
  if (v86 < 0) {
    uint64_t v97 = v86;
  }
  *(void *)&unint64_t v334 = v97;
  while (1)
  {
    __n128 v98 = v345;
    uint64_t v99 = v346;
    uint64_t v100 = OUTLINED_FUNCTION_467();
    specialized Set.subscript.getter(v100, v101, v102, v103);
    uint64_t v105 = v104;
    uint64_t v106 = (uint64_t *)(id)TUNormalizedHandleForTUHandle();
    if (!v106) {
      break;
    }
    __n128 v74 = v106;

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    OUTLINED_FUNCTION_48_3();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (v90)
    {
      if ((v99 & 1) == 0) {
        goto LABEL_63;
      }
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
      uint64_t v113 = (void (*)(uint64_t))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      uint64_t v114 = OUTLINED_FUNCTION_375_0();
      v113(v114);
    }
    else
    {
      uint64_t v107 = OUTLINED_FUNCTION_467();
      specialized _NativeSet.index(after:)(v107, v108, v109, v110);
      OUTLINED_FUNCTION_188_3();
      unint64_t v112 = v111;
      outlined consume of Set<TUHandle>.Index._Variant(v98, *((uint64_t *)&v98 + 1), v99);
      *(void *)&uint64_t v345 = v344;
      *((void *)&v345 + 1) = v74;
      id v346 = v112 & 1;
    }
    if (!--v88)
    {
      outlined consume of Set<TUHandle>.Index._Variant(v345, *((uint64_t *)&v345 + 1), v346);
      uint64_t v95 = v344[0];
      uint64_t v94 = swift_bridgeObjectRelease();
      uint64_t v82 = v333;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_63:
  __break(1u);
}

void specialized ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,objc_class *a23,uint64_t a24,uint64_t a25)
{
  OUTLINED_FUNCTION_31();
  uint64_t v52 = v26;
  uint64_t v53 = v27;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v51 = v32;
  uint64_t v33 = objc_allocWithZone(a23);
  uint64_t v34 = *(void *)(v31 + 24);
  uint64_t v35 = *(void *)(v31 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v31, v34);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_458();
  v37();
  uint64_t v38 = *(void *)(v29 + 24);
  uint64_t v39 = *(void *)(v29 + 32);
  uint64_t v40 = OUTLINED_FUNCTION_248();
  __swift_mutable_project_boxed_opaque_existential_1(v40, v41);
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v42);
  OUTLINED_FUNCTION_243_1(v43, a22);
  OUTLINED_FUNCTION_458();
  v44();
  uint64_t ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_405(v51, a25, v52, v25, v46, v47, v48, v49, v53, a21, v33, v34, ObjectType, v38, v35, v50, v39);
  __swift_destroy_boxed_opaque_existential_1(v29);
  __swift_destroy_boxed_opaque_existential_1(v31);
  OUTLINED_FUNCTION_28();
}

uint64_t _s15ConversationKit11ParticipantVWOcTm_19(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_89();
  v4(v3);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_124();
  v5();
  return a2;
}

void specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned char *a22,uint64_t a23,uint64_t a24)
{
  void (*v84)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, _UNKNOWN **);
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  int v105;
  char v106;
  uint64_t v107;
  void *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118;
  void (*v119)(uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(void);
  uint64_t v126;
  uint64_t (*v127)(uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  void (**v140)(char *, char **, uint64_t, uint64_t);
  void *v141;
  id v142;
  id v143;
  uint64_t v144;
  _OWORD *v145;
  int v146;
  uint64_t v147;
  unsigned __int8 v148;
  int v149;
  uint64_t v150;
  uint64_t (*v151)(uint64_t);
  void *v152;
  void *v153;
  id v154;
  _UNKNOWN **v155;
  uint64_t v156;
  void (*v157)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, _UNKNOWN **);
  char *v158;
  int v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  void (*v175)(char *, _UNKNOWN **);
  void *v176;
  unsigned char *v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  uint64_t v185;
  uint64_t v186;
  id v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  uint64_t v204;
  uint64_t v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  id v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  uint64_t v222;
  uint64_t v223;
  id v224;
  uint64_t v225;
  uint64_t v226;
  id v227;
  uint64_t v228;
  uint64_t v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  id v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  id v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  id v242;
  uint64_t v243;
  uint64_t v244;
  id v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  id v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  id v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  id v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  id v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  id v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  id v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  id v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  id v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  id v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t *v298;
  uint64_t v299;
  unint64_t v300;
  void *v301;
  uint64_t v302;
  uint64_t v303;
  char v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t (*v319)(uint64_t);
  void *v320;
  void (*v321)(void);
  uint64_t v322;
  uint64_t *v323;
  uint64_t v324;
  objc_class *ObjectType;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t (*v330)(uint64_t);
  id v331;
  uint64_t v332;
  void (*v333)(char *, char **, uint64_t, uint64_t);
  char *v334;
  uint64_t v335;
  uint64_t v336;
  int v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  long long v342;
  uint64_t v343;
  uint64_t v344;
  long long v345;
  char v346;
  void v347[3];
  long long v348;
  uint64_t v349;
  char v350;
  objc_super v351;
  uint64_t v352;
  long long v353;
  char v354;
  uint64_t v355;
  long long v356;
  long long v357;
  _UNKNOWN **v358;
  void v359[5];
  void v360[5];
  void v361[3];
  uint64_t v362;
  _UNKNOWN **v363;

  OUTLINED_FUNCTION_31();
  uint64_t v335 = v25;
  id v336 = v24;
  uint64_t v337 = v26;
  HIDWORD(v324) = v27;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v341 = v34;
  unsigned int v340 = a24;
  uint64_t v339 = a23;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  uint64_t v36 = OUTLINED_FUNCTION_8(v35);
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_2_3();
  int v333 = (void (*)(char *, char **, uint64_t, uint64_t))v37;
  id v332 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v38);
  OUTLINED_FUNCTION_2_3();
  *(void *)&uint64_t v342 = v39;
  uint64_t v40 = OUTLINED_FUNCTION_128_5();
  uint64_t v41 = OUTLINED_FUNCTION_1(v40);
  uint64_t v328 = v42;
  MEMORY[0x1F4188790](v41);
  OUTLINED_FUNCTION_281_1(v43, v322);
  uint64_t v362 = type metadata accessor for CallCenter();
  uint64_t v363 = &protocol witness table for CallCenter;
  v361[0] = v33;
  v360[3] = &type metadata for DefaultParticipantMediaProviderCreator;
  v360[4] = &protocol witness table for DefaultParticipantMediaProviderCreator;
  v360[0] = OUTLINED_FUNCTION_20();
  outlined init with take of DefaultParticipantMediaProviderCreator(v31, v360[0] + 16);
  v359[3] = &type metadata for DefaultParticipantCaptionsProviderCreator;
  v359[4] = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
  v359[0] = OUTLINED_FUNCTION_26();
  outlined init with take of DefaultParticipantCaptionsProviderCreator(v29, v359[0] + 16);
  a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable] = 0;
  a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable] = 0;
  a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable] = 0;
  *(void *)&a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController] = 0;
  uint64_t v338 = OBJC_IVAR____TtC15ConversationKit22ConversationController_audioCallbackQueue;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_27_3();
  uint64_t v44 = type metadata accessor for DispatchQoS();
  uint64_t v45 = OUTLINED_FUNCTION_8(v44);
  MEMORY[0x1F4188790](v45);
  OUTLINED_FUNCTION_62();
  uint64_t v46 = a22;
  static DispatchQoS.unspecified.getter();
  type metadata accessor for OS_dispatch_queue.Attributes();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v47);
  OUTLINED_FUNCTION_64();
  *(void *)&v356 = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  OUTLINED_FUNCTION_5_3();
  MEMORY[0x1F4188790](v48);
  OUTLINED_FUNCTION_60();
  uint64_t v49 = OUTLINED_FUNCTION_369_0();
  v50(v49);
  OUTLINED_FUNCTION_384();
  *(void *)&a22[v338] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_didReceiveLatestRemoteAttributes] = 0;
  OUTLINED_FUNCTION_377_0(&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes]);
  *(unsigned char *)(v51 + 96) = 1;
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController] = 0;
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider] = 0;
  uint64_t v52 = OBJC_IVAR____TtC15ConversationKit22ConversationController_recentPresentationContexts;
  uint64_t v53 = MEMORY[0x1E4FBC860];
  *(void *)&v46[v52] = Dictionary.init(dictionaryLiteral:)();
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit] = 0;
  uint64_t v54 = (uint64_t)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_pendingNoticeWaitingForRemoteScreenShareAttributes];
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
  OUTLINED_FUNCTION_25_1(v54, v56, v57, v55);
  uint64_t v58 = OBJC_IVAR____TtC15ConversationKit22ConversationController_scheduledVideoInfoResetDates;
  uint64_t v59 = type metadata accessor for UUID();
  uint64_t v60 = type metadata accessor for Date();
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  OUTLINED_FUNCTION_449();
  *(void *)&v46[v58] = Dictionary.init(dictionaryLiteral:)();
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState] = 0;
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests] = 0;
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount] = 0;
  id v323 = (uint64_t *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation] = 1;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeDisabledByActivity] = 0;
  uint64_t v61 = OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags;
  *(void *)&v46[v61] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_waitForModeSwitchDuringUPlusOneHandoff] = 0;
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock);
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_enableVideoOnJoin] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame] = 0;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView] = 0;
  OUTLINED_FUNCTION_228_1(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID);
  OUTLINED_FUNCTION_228_1(OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageConversationUUID);
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs] = v53;
  uint64_t v62 = MEMORY[0x1E4FBC870];
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsThatHaveReceivedFirstVideoFrame] = MEMORY[0x1E4FBC870];
  *(void *)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame] = v62;
  uint64_t v63 = OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrameTasks;
  type metadata accessor for DispatchWorkItem();
  OUTLINED_FUNCTION_449();
  *(void *)&v46[v63] = Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_228_1(OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDResolvingCroppedAspectRatio);
  OUTLINED_FUNCTION_11_76(OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID);
  uint64_t v64 = (uint64_t)&v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession];
  *(_OWORD *)uint64_t v64 = 0u;
  *(_OWORD *)(v64 + 16) = 0u;
  char v322 = v64;
  *(void *)(v64 + 32) = 0;
  OUTLINED_FUNCTION_5_3();
  uint64_t v66 = v65;
  MEMORY[0x1F4188790](v67);
  uint64_t v69 = (char *)&v322 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  v330 = *(uint64_t (**)(uint64_t))(v340 + 168);
  id v331 = (id)(v340 + 168);
  uint64_t v70 = v330(v339);
  specialized Set.count.getter(v70);
  OUTLINED_FUNCTION_23_32();
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter] = v63 == 1;
  uint64_t v338 = (uint64_t)v46;
  v46[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] = v337;
  v326 = v66;
  uint64_t v327 = v60;
  unint64_t v334 = v69;
  OUTLINED_FUNCTION_2_1();
  v71();
  uint64_t v72 = swift_storeEnumTagMultiPayload();
  uint64_t v73 = v59 - 8;
  MEMORY[0x1F4188790](v72);
  OUTLINED_FUNCTION_285_1();
  UUID.init()();
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_50();
  id v332 = (*(uint64_t (**)(void))(v74 + 568))();
  OUTLINED_FUNCTION_50();
  id v76 = (id)(*(uint64_t (**)(void))(v75 + 168))();
  uint64_t v358 = 0;
  v356 = 0u;
  uint64_t v357 = 0u;
  if (one-time initialization token for default != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v77 = static Colors.ParticipantGradients.default;
  uint64_t v78 = type metadata accessor for Participant.CountdownInfo(0);
  uint64_t v79 = v333;
  OUTLINED_FUNCTION_25_1((uint64_t)v333, v80, v81, v78);
  uint64_t v82 = v362;
  uint64_t v83 = v363;
  OUTLINED_FUNCTION_69_10(v361, v362);
  uint64_t v84 = (void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v83[13];
  swift_bridgeObjectRetain();
  v84(&v353, v341, v340, v82, v83);
  if (v355)
  {
    __swift_project_boxed_opaque_existential_1(&v353, v355);
    OUTLINED_FUNCTION_435();
    Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v353);
  }
  else
  {
    outlined destroy of SystemUpdateNotice?((uint64_t)&v353, &demangling cache variable for type metadata for Conversation?);
  }
  uint64_t v85 = v329;
  uint64_t v86 = v341;
  uint64_t v87 = (id)swift_getObjectType();
  v329 = type metadata accessor for ParticipantContactDetailsCache();
  specialized static ParticipantContactDetailsCache.cache(for:)();
  OUTLINED_FUNCTION_245_1();
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(v342, v73, v88, v89, v77, 0, 0, (uint64_t)v79, v322, (uint64_t)v323, v324, (uint64_t)ObjectType, v326, v327, v328, v329, (uint64_t)v330, (uint64_t)v331, v332,
    (uint64_t)v333,
    v334,
    v335);
  _s15ConversationKit11ParticipantVWObTm_6(v85, v338 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant);
  __int16 v90 = OUTLINED_FUNCTION_43();
  uint64_t v91 = v330(v90);
  uint64_t v92 = specialized Set.count.getter(v91);
  if (!v92)
  {
    __n128 v98 = swift_bridgeObjectRelease();
    uint64_t v99 = MEMORY[0x1E4FBC860];
LABEL_26:
    int v333 = (void (*)(char *, char **, uint64_t, uint64_t))a21;
    MEMORY[0x1F4188790](v98);
    OUTLINED_FUNCTION_474();
    uint64_t v121 = (uint64_t)v334;
    *(void *)(v122 - 32) = v334;
    *(void *)(v122 - 24) = v76;
    uint64_t v123 = v340;
    *(void *)(v122 - 16) = v86;
    *(void *)(v122 - 8) = v123;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((uint64_t)closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)partial apply, v124, v99);
    OUTLINED_FUNCTION_5_2();
    OUTLINED_FUNCTION_244_2(OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    OUTLINED_FUNCTION_141_5();
    v125();
    if (*((void *)&v357 + 1))
    {
      uint64_t v126 = OUTLINED_FUNCTION_176_4();
      uint64_t v128 = v127(v126);
      MEMORY[0x1F4188790](v128);
      *(&v324 - 4) = v121;
      *(&v324 - 3) = (uint64_t)v76;
      char v322 = v86;
      id v323 = (uint64_t *)v123;
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFShySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((void (*)(void **))closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)partial apply, (uint64_t)(&v324 - 6), v128);
      uint64_t v130 = v129;
      id v332 = 0;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v356);
    }
    else
    {
      id v332 = 0;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v356, &demangling cache variable for type metadata for Conversation?);
      uint64_t v130 = MEMORY[0x1E4FBC860];
    }
    uint64_t v131 = v338;
    *(void *)(v338 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants) = v130;
    outlined init with copy of Conversation((uint64_t)v361, v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    char v132 = (uint64_t *)(v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
    *char v132 = v86;
    v132[1] = v123;
    outlined init with copy of Conversation((uint64_t)v360, v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator);
    outlined init with copy of Conversation((uint64_t)v359, v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator);
    OUTLINED_FUNCTION_366_0(OBJC_IVAR____TtC15ConversationKit22ConversationController_includeLocalParticipantInVisibleParticipants);
    uint64_t v133 = v323;
    OUTLINED_FUNCTION_2();
    uint64_t v134 = *v133;
    uint64_t v135 = swift_unknownObjectRetain_n();
    uint64_t v136 = specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v135, &v356, v134, 0, v339, v123);
    uint64_t v137 = v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    *(void *)uint64_t v137 = v136;
    *(void *)(v137 + 8) = v138;
    *(unsigned char *)(v137 + 16) = v139;
    *(void *)(v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker) = v335;
    int v140 = (void (**)(char *, char **, uint64_t, uint64_t))(v131
                                                                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults);
    *int v140 = v333;
    v140[1] = (void (*)(char *, char **, uint64_t, uint64_t))&protocol witness table for Defaults;
    outlined init with copy of Conversation((uint64_t)v361, (uint64_t)&v356);
    int v141 = self;
    swift_retain();
    swift_retain();
    int v142 = objc_msgSend(v141, sel_defaultCenter);
    uint64_t v143 = objc_allocWithZone((Class)type metadata accessor for VideoMessageController());
    OUTLINED_FUNCTION_437();
    *(void *)(v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController) = v144;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v336, (uint64_t)&v353, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    if (v355)
    {
      outlined init with take of Notice(&v353, (uint64_t)&v356);
    }
    else
    {
      *((void *)&v357 + 1) = &type metadata for SingleDisplaySharingSession;
      uint64_t v358 = &protocol witness table for SingleDisplaySharingSession;
      uint64_t v145 = (_OWORD *)OUTLINED_FUNCTION_11_7();
      OUTLINED_FUNCTION_341_0(v145);
      outlined destroy of SystemUpdateNotice?((uint64_t)&v353, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    }
    uint64_t v146 = v337;
    uint64_t v147 = v322;
    OUTLINED_FUNCTION_6_1();
    outlined assign with take of Participant?((uint64_t)&v356, v147, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    swift_endAccess();
    OUTLINED_FUNCTION_2();
    int v148 = 0;
    unint64_t v149 = *(char *)(v137 + 16);
    LODWORD(v342) = v146;
    id v331 = v141;
    if (v149 < 0 && v146 == 1)
    {
      OUTLINED_FUNCTION_250_2(v361);
      __int16 v150 = OUTLINED_FUNCTION_3_24();
      uint64_t v152 = (void *)v151(v150);
      int v148 = objc_msgSend(v152, sel_isPreviewRunning);
    }
    uint64_t v153 = (void *)v338;
    *(unsigned char *)(v338 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) = v148;

    v351.receiver = v153;
    v351.super_class = ObjectType;
    __int16 v154 = objc_msgSendSuper2(&v351, sel_init);
    uint64_t v156 = v362;
    uint64_t v155 = v363;
    __swift_project_boxed_opaque_existential_1(v361, v362);
    uint64_t v157 = (void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v155[13];
    long long v158 = (char *)v154;
    v157(&v353, v341, v340, v156, v155);
    if (v355)
    {
      outlined init with take of Notice(&v353, (uint64_t)&v356);
      ConversationController.updateIdentityClaimingAssociations(in:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v356);
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v353, &demangling cache variable for type metadata for Conversation?);
    }
    uint64_t v159 = v342;
    uint64_t v160 = OUTLINED_FUNCTION_20();
    swift_unknownObjectWeakInit();
    uint64_t v161 = (uint64_t *)&v158[OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock];
    OUTLINED_FUNCTION_11_0();
    unint64_t v162 = *v161;
    *uint64_t v161 = (uint64_t)_s15ConversationKit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalParticipantInVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSbycfU2_TA_0;
    v161[1] = v160;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v162);
    if ((v159 - 1) <= 1)
    {
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_372_0();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantMediaProviderCreator);
      if (swift_dynamicCast())
      {
        id v350 = 0;
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v349, (uint64_t)&v348);
        swift_unknownObjectWeakAssign();
        *((void *)&v357 + 1) = &type metadata for DefaultParticipantMediaProviderCreator;
        uint64_t v358 = &protocol witness table for DefaultParticipantMediaProviderCreator;
        uint64_t v163 = OUTLINED_FUNCTION_20();
        OUTLINED_FUNCTION_422(v163);
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v348, v164);
        OUTLINED_FUNCTION_6_1();
        OUTLINED_FUNCTION_184_3();
        swift_endAccess();
      }
      else
      {
        uint64_t v349 = 0;
        id v350 = 1;
        outlined destroy of SystemUpdateNotice?((uint64_t)&v349, (uint64_t *)&demangling cache variable for type metadata for DefaultParticipantMediaProviderCreator?);
      }
    }
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_372_0();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCaptionsProviderCreator);
    if (swift_dynamicCast())
    {
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v348, (uint64_t)v347);
      v347[1] = &protocol witness table for ConversationController;
      swift_unknownObjectWeakAssign();
      *((void *)&v357 + 1) = &type metadata for DefaultParticipantCaptionsProviderCreator;
      uint64_t v358 = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
      unsigned __int8 v165 = OUTLINED_FUNCTION_26();
      OUTLINED_FUNCTION_422(v165);
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)v347, v166);
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_184_3();
      swift_endAccess();
    }
    else
    {
      uint64_t v348 = xmmword_1C376E330;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v348, (uint64_t *)&demangling cache variable for type metadata for DefaultParticipantCaptionsProviderCreator?);
    }
    static ParticipantContactDetailsCache.resetAll()();
    unsigned __int8 v167 = &v158[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
    OUTLINED_FUNCTION_2();
    uint64_t v338 = (uint64_t)v167;
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
    ConversationController.lookupActiveConversation()();
    ConversationController.update(with:)((uint64_t)&v356);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v356, &demangling cache variable for type metadata for Conversation?);
    unsigned __int8 v168 = &v158[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    OUTLINED_FUNCTION_6_1();
    unsigned __int8 v169 = *((void *)v168 + 3);
    unsigned __int8 v170 = *((void *)v168 + 4);
    unsigned __int8 v171 = OUTLINED_FUNCTION_45_4();
    __swift_mutable_project_boxed_opaque_existential_1(v171, v172);
    uint64_t v79 = *(void (**)(char *, char **, uint64_t, uint64_t))(v170 + 56);
    unsigned __int8 v173 = v158;
    v79(v158, &protocol witness table for ConversationController, v169, v170);
    swift_endAccess();
    OUTLINED_FUNCTION_50();
    char v175 = *(void (**)(char *, _UNKNOWN **))(v174 + 176);
    uint64_t v93 = v173;
    swift_retain();
    v175(v158, &protocol witness table for ConversationController);
    swift_release();
    ConversationController.updateIDSStatusForVideoMessaging()();
    ConversationController.setupScreenSharingSessionCallbacks()();
    uint64_t v176 = (void *)(*(uint64_t (**)(uint64_t))(v340 + 176))(v339);
    ConversationController.updateScreenSharingSession(with:)(v176);

    LOBYTE(v168) = ConversationController.updateIsUsingIPadExternalCamera()();
    uint64_t v177 = (unsigned char *)(v93 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera);
    OUTLINED_FUNCTION_11_0();
    *uint64_t v177 = v168 & 1;
    uint64_t v87 = objc_msgSend(v331, sel_defaultCenter);
    uint64_t v91 = (uint64_t)&selRef_ringButton;
    unint64_t v178 = objc_msgSend(v87, sel_addObserver_selector_name_object_, v93, sel_handleLocalVideoPreviewFirstFrameArrived_, *MEMORY[0x1E4FADFD8], 0);
    unsigned __int8 v181 = OUTLINED_FUNCTION_19_54((uint64_t)v178, v179, v180, (uint64_t)sel_handleLocalVideoAttributesChanged_, *MEMORY[0x1E4FADFC8]);
    unsigned __int8 v184 = OUTLINED_FUNCTION_19_54((uint64_t)v181, v182, v183, (uint64_t)sel_handleSendingVideoChanged_, *MEMORY[0x1E4FADE00]);
    unsigned __int8 v187 = OUTLINED_FUNCTION_19_54((uint64_t)v184, v185, v186, (uint64_t)sel_handleAudioUplinkChange_, *MEMORY[0x1E4FADE10]);
    unsigned __int8 v190 = v342;
    if (v342 == 1)
    {
      unsigned __int8 v191 = OUTLINED_FUNCTION_19_54((uint64_t)v187, v188, v189, (uint64_t)sel_handleCameraZoomBecameAvailable_, *MEMORY[0x1E4FADFF0]);
      uint64_t v194 = OUTLINED_FUNCTION_19_54((uint64_t)v191, v192, v193, (uint64_t)sel_handleCameraZoomBecameUnavailable_, *MEMORY[0x1E4FADFF8]);
      uint64_t v197 = OUTLINED_FUNCTION_19_54((uint64_t)v194, v195, v196, (uint64_t)sel_handlelocalCameraUIDDidChange_, *MEMORY[0x1E4FADF80]);
      uint64_t v200 = OUTLINED_FUNCTION_19_54((uint64_t)v197, v198, v199, (uint64_t)sel_handleCameraCinematicFramingAvailabilityChanged_, *MEMORY[0x1E4FADF60]);
      long long v203 = OUTLINED_FUNCTION_19_54((uint64_t)v200, v201, v202, (uint64_t)sel_handleCameraCinematicFramingEnabledChanged_, *MEMORY[0x1E4FADF68]);
      double v206 = OUTLINED_FUNCTION_19_54((uint64_t)v203, v204, v205, (uint64_t)sel_handleCameraReactionEffectsEnabledChanged_, *MEMORY[0x1E4FADFD0]);
      long long v209 = OUTLINED_FUNCTION_19_54((uint64_t)v206, v207, v208, (uint64_t)sel_handleCameraStudioLightEnabledChanged_, *MEMORY[0x1E4FADFE0]);
      long long v212 = OUTLINED_FUNCTION_19_54((uint64_t)v209, v210, v211, (uint64_t)sel_handleCameraBlurEnabledChanged_, *MEMORY[0x1E4FADF58]);
      uint64_t v215 = OUTLINED_FUNCTION_19_54((uint64_t)v212, v213, v214, (uint64_t)sel_handleCameraListDidChange_, *MEMORY[0x1E4FADFA0]);
      unsigned __int8 v187 = OUTLINED_FUNCTION_19_54((uint64_t)v215, v216, v217, (uint64_t)sel_handleSystemPreferredCameraChanged_, *MEMORY[0x1E4FADFE8]);
    }
    uint64_t v218 = OUTLINED_FUNCTION_19_54((uint64_t)v187, v188, v189, (uint64_t)sel_handleScreenSharingDidChange_, *MEMORY[0x1E4FADE08]);
    uint64_t v221 = OUTLINED_FUNCTION_19_54((uint64_t)v218, v219, v220, (uint64_t)sel_handleVideoCallStatusDidChange_, *MEMORY[0x1E4FADDD8]);
    uint64_t v224 = OUTLINED_FUNCTION_19_54((uint64_t)v221, v222, v223, (uint64_t)sel_handleCallStatusDidChange_, *MEMORY[0x1E4FADD90]);
    uint64_t v227 = OUTLINED_FUNCTION_19_54((uint64_t)v224, v225, v226, (uint64_t)sel_handleCallConnected_, *MEMORY[0x1E4FADD70]);
    uint64_t v230 = OUTLINED_FUNCTION_19_54((uint64_t)v227, v228, v229, (uint64_t)sel_handleCallStartedConnecting_, *MEMORY[0x1E4FADD80]);
    if (!v190) {
      uint64_t v230 = OUTLINED_FUNCTION_19_54((uint64_t)v230, v231, v232, (uint64_t)sel_handleBluetoothAudioFormatChanged_, *MEMORY[0x1E4FADD60]);
    }
    uint64_t v234 = OUTLINED_FUNCTION_23_57((uint64_t)v230, v231, v232, v233, *MEMORY[0x1E4FADF90]);
    uint64_t v238 = OUTLINED_FUNCTION_23_57((uint64_t)v234, v235, v236, v237, *MEMORY[0x1E4FADF88]);
    uint64_t v242 = OUTLINED_FUNCTION_23_57((uint64_t)v238, v239, v240, v241, *MEMORY[0x1E4FADF98]);
    uint64_t v245 = OUTLINED_FUNCTION_19_54((uint64_t)v242, v243, v244, (uint64_t)sel_handleHoldMusicDidChange_, *MEMORY[0x1E4FADD98]);
    OUTLINED_FUNCTION_19_54((uint64_t)v245, v246, v247, (uint64_t)sel_handleScreenSharingAttributesChanged_, *MEMORY[0x1E4FADE30]);
    unint64_t v248 = static Platform.current.getter();
    if (v248 != 3) {
      goto LABEL_52;
    }
    uint64_t v94 = sel_handleWindowDidFinishResize_;
    uint64_t v252 = one-time initialization token for didEndWindowLiveResizeNotification;
    id v76 = (id)v93;
    if (v252 == -1)
    {
LABEL_51:
      objc_msgSend(v87, *(SEL *)(v91 + 1136), v76, v94, static Strings.Notifications.didEndWindowLiveResizeNotification, 0);

LABEL_52:
      uint64_t v253 = OUTLINED_FUNCTION_23_57(v248, v249, v250, v251, *MEMORY[0x1E4FB2EC0]);
      double v257 = OUTLINED_FUNCTION_23_57((uint64_t)v253, v254, v255, v256, *MEMORY[0x1E4FB2EC8]);
      long long v261 = OUTLINED_FUNCTION_23_57((uint64_t)v257, v258, v259, v260, *MEMORY[0x1E4FADCE8]);
      long long v265 = OUTLINED_FUNCTION_23_57((uint64_t)v261, v262, v263, v264, *MEMORY[0x1E4FADCE0]);
      unint64_t v269 = OUTLINED_FUNCTION_23_57((uint64_t)v265, v266, v267, v268, *MEMORY[0x1E4FADCF0]);
      uint64_t v273 = OUTLINED_FUNCTION_23_57((uint64_t)v269, v270, v271, v272, *MEMORY[0x1E4FADCF8]);
      uint64_t v277 = OUTLINED_FUNCTION_23_57((uint64_t)v273, v274, v275, v276, *MEMORY[0x1E4FADCC0]);
      id v281 = OUTLINED_FUNCTION_23_57((uint64_t)v277, v278, v279, v280, *MEMORY[0x1E4FADCC8]);
      char v285 = OUTLINED_FUNCTION_23_57((uint64_t)v281, v282, v283, v284, *MEMORY[0x1E4FADCD0]);
      OUTLINED_FUNCTION_23_57((uint64_t)v285, v286, v287, v288, *MEMORY[0x1E4FADCD8]);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      uint64_t v339 = static OS_os_log.conversationKit;
      unsigned int v340 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v289 = swift_allocObject();
      *(_OWORD *)(v289 + 16) = xmmword_1C376A6F0;
      OUTLINED_FUNCTION_2();
      uint64_t v290 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v291 = OUTLINED_FUNCTION_8(v290);
      MEMORY[0x1F4188790](v291);
      OUTLINED_FUNCTION_61();
      char v292 = OUTLINED_FUNCTION_273_1();
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v292, v293, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v294 = specialized >> prefix<A>(_:)((uint64_t)v79);
      char v296 = v295;
      unint64_t v297 = OUTLINED_FUNCTION_269_1();
      outlined destroy of SystemUpdateNotice?(v297, v298);
      v299 = MEMORY[0x1E4FBB1A0];
      *(void *)(v289 + 56) = MEMORY[0x1E4FBB1A0];
      id v300 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v289 + 64) = v300;
      *(void *)(v289 + 32) = v294;
      *(void *)(v289 + 40) = v296;
      uint64_t v301 = (void *)(v93 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
      OUTLINED_FUNCTION_2();
      *(void *)&uint64_t v345 = *v301;
      type metadata accessor for TUConversationState(0);
      v302 = String.init<A>(reflecting:)();
      *(void *)(v289 + 96) = v299;
      *(void *)(v289 + 104) = v300;
      *(void *)(v289 + 72) = v302;
      *(void *)(v289 + 80) = v303;
      uint64_t v304 = *(unsigned char *)(v338 + 16);
      uint64_t v345 = *(_OWORD *)v338;
      id v346 = v304;
      uint64_t v305 = String.init<A>(reflecting:)();
      *(void *)(v289 + 136) = v299;
      *(void *)(v289 + 144) = v300;
      *(void *)(v289 + 112) = v305;
      *(void *)(v289 + 120) = v306;
      LOBYTE(v345) = v342;
      uint64_t v307 = String.init<A>(reflecting:)();
      *(void *)(v289 + 176) = v299;
      *(void *)(v289 + 184) = v300;
      *(void *)(v289 + 152) = v307;
      *(void *)(v289 + 160) = v308;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v309 = OUTLINED_FUNCTION_25_15();
      uint64_t v342 = xmmword_1C3769620;
      *(_OWORD *)(v309 + 16) = xmmword_1C3769620;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      id v310 = OUTLINED_FUNCTION_235_2();
      *(_OWORD *)(v310 + 16) = v342;
      id v311 = v93 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      OUTLINED_FUNCTION_2();
      _s15ConversationKit11ParticipantVWOcTm_19(v311, (uint64_t)v301 + v310);
      OUTLINED_FUNCTION_2();
      uint64_t v343 = v310;
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      uint64_t v312 = v332;
      _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit11ParticipantVGG_SSs5NeverOTg506_sSi15f5Kit11h34VSSIgyno_Si6offset_AC7elementtSSs5I355OIegnrzr_TR04_s15a103Kit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalC217InVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSSSi_AA0O0VtXEfU3_Tf3nnnpf_nTf1cn_n();
      OUTLINED_FUNCTION_23_32();
      uint64_t v343 = v312;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance [A]);
      id v313 = BidirectionalCollection<>.joined(separator:)();
      Swift::Int v315 = v314;
      swift_bridgeObjectRelease();
      uint64_t v343 = v313;
      id v344 = v315;
      uint64_t v316 = String.init<A>(reflecting:)();
      *(void *)(v309 + 56) = v299;
      *(void *)(v309 + 64) = v300;
      *(void *)(v309 + 32) = v316;
      *(void *)(v309 + 40) = v317;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      ConversationController.fetchExistingScreenSharingAttributes()();
      if (*(unsigned char *)(v93 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) == 1)
      {
        __swift_project_boxed_opaque_existential_1(v361, v362);
        id v318 = OUTLINED_FUNCTION_351();
        uint64_t v320 = (void *)v319(v318);
        objc_msgSend(v320, sel_startPreview);
        swift_release();

        uint64_t v87 = v320;
      }
      else
      {
        swift_release();
      }

      swift_unknownObjectRelease();
      swift_release();
      outlined destroy of SystemUpdateNotice?(v336, (uint64_t *)&demangling cache variable for type metadata for ScreenSharingSessionProvider?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v359);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v360);
      OUTLINED_FUNCTION_26_2();
      v321();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v361);
      OUTLINED_FUNCTION_28();
      return;
    }
LABEL_59:
    swift_once();
    goto LABEL_51;
  }
  uint64_t v93 = v92;
  uint64_t v352 = MEMORY[0x1E4FBC860];
  uint64_t v94 = (char *)&v352;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v91 & 0xC000000000000001) != 0)
  {
    uint64_t v95 = __CocoaSet.startIndex.getter();
    uint64_t v97 = 1;
  }
  else
  {
    uint64_t v95 = specialized _NativeSet.startIndex.getter(v91);
    uint64_t v97 = v100 & 1;
  }
  *(void *)&uint64_t v353 = v95;
  *((void *)&v353 + 1) = v96;
  v354 = v97;
  if (v93 < 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v101 = v91 & 0xFFFFFFFFFFFFFF8;
  if (v91 < 0) {
    uint64_t v101 = v91;
  }
  *(void *)&uint64_t v342 = v101;
  while (1)
  {
    id v76 = (id)*((void *)&v353 + 1);
    uint64_t v102 = v353;
    uint64_t v103 = v354;
    uint64_t v104 = OUTLINED_FUNCTION_389();
    specialized Set.subscript.getter(v104, v105, v106, v107);
    uint64_t v109 = v108;
    if (!(id)TUNormalizedHandleForTUHandle()) {
      break;
    }

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    OUTLINED_FUNCTION_69_3();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if ((v91 & 0xC000000000000001) != 0)
    {
      if ((v103 & 1) == 0) {
        goto LABEL_61;
      }
      OUTLINED_FUNCTION_210_2();
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
      uint64_t v119 = (void (*)(uint64_t))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      uint64_t v120 = OUTLINED_FUNCTION_375_0();
      v119(v120);
    }
    else
    {
      uint64_t v110 = OUTLINED_FUNCTION_389();
      uint64_t v114 = specialized _NativeSet.index(after:)(v110, v111, v112, v113);
      uint64_t v116 = v115;
      uint64_t v118 = v117;
      outlined consume of Set<TUHandle>.Index._Variant(v102, (uint64_t)v76, v103);
      *(void *)&uint64_t v353 = v114;
      *((void *)&v353 + 1) = v116;
      v354 = v118 & 1;
    }
    if (!--v93)
    {
      outlined consume of Set<TUHandle>.Index._Variant(v353, *((uint64_t *)&v353 + 1), v354);
      uint64_t v99 = v352;
      __n128 v98 = swift_bridgeObjectRelease();
      uint64_t v86 = v341;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_61:
  __break(1u);
}

uint64_t _s15ConversationKit11ParticipantVWOhTm_13(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v3();
  return a1;
}

unint64_t lazy protocol witness table accessor for type TUConversationMember and conformance NSObject(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_6_6(a1);
  if (!result)
  {
    type metadata accessor for NSObject(255, v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

BOOL partial apply for closure #1 in ConversationController.requestScreenSharingSession(for:)(id *a1)
{
  return closure #1 in ConversationController.requestScreenSharingSession(for:)(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C3671A2C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.shareableLink(completionHandler:)(void *a1, void *a2)
{
  closure #1 in ConversationController.shareableLink(completionHandler:)(a1, a2, *(void (**)(void *, void *))(v2 + 16), *(void *)(v2 + 24), (void *)(v2 + 32));
}

uint64_t sub_1C3671A80()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.updateLayoutStyle(_:)()
{
  return closure #1 in ConversationController.updateLayoutStyle(_:)(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void partial apply for closure #2 in ConversationController.update(presentationContexts:forceUpdate:)(void *a1@<X0>, void *a2@<X8>)
{
  closure #2 in ConversationController.update(presentationContexts:forceUpdate:)(a1, *(void **)(v2 + 16), a2);
}

void partial apply for closure #1 in ConversationController.startRecordingLocalVideo()(uint64_t a1, uint64_t a2, void *a3)
{
  closure #1 in ConversationController.startRecordingLocalVideo()(a1, a2, a3, v3);
}

void partial apply for closure #1 in ConversationController.captureMoment(for:)(uint64_t a1, void *a2, void *a3)
{
  closure #1 in ConversationController.captureMoment(for:)(a1, a2, a3, v3);
}

uint64_t sub_1C3671AF0()
{
  swift_unknownObjectRelease();
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.resetRecordingVideoMessage(completion:)()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_10(v2);
  void *v3 = v4;
  v3[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v5 = OUTLINED_FUNCTION_35_21();
  return closure #1 in ConversationController.resetRecordingVideoMessage(completion:)(v5, v6, v7, v8, v9, v1);
}

uint64_t sub_1C3671BEC()
{
  return objectdestroy_22Tm_0(MEMORY[0x1E4FBC8F8]);
}

uint64_t partial apply for closure #1 in ConversationController.saveRecordedVideoMessage()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  *uint64_t v1 = v2;
  v1[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ConversationController.saveRecordedVideoMessage()(v3, v4, v5, v6);
}

uint64_t partial apply for closure #1 in ConversationController.discardRecordedVideoMessage()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  *uint64_t v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ConversationController.discardRecordedVideoMessage()(v3, v4, v5, v6);
}

uint64_t objectdestroy_26Tm()
{
  swift_unknownObjectRelease();

  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.pauseRecordingVideoMessage()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  *uint64_t v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ConversationController.pauseRecordingVideoMessage()(v3, v4, v5, v6);
}

uint64_t sub_1C3671DF4()
{
  return objectdestroy_22Tm_0(MEMORY[0x1E4FBC8F8]);
}

uint64_t partial apply for closure #1 in ConversationController.startRecordingVideoMessage()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  *uint64_t v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ConversationController.startRecordingVideoMessage()(v3, v4, v5, v6);
}

uint64_t sub_1C3671E9C()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:)()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_10(v4);
  void *v5 = v6;
  v5[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v7 = OUTLINED_FUNCTION_35_21();
  return closure #1 in ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:)(v7, v8, v9, v10, v11, v1, v2, v3);
}

uint64_t sub_1C3671FBC()
{
  return objectdestroy_22Tm_0(MEMORY[0x1E4FBC8F8]);
}

uint64_t partial apply for closure #1 in ConversationController.stopRecordingVideoMessage()()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_120();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10(v0);
  *uint64_t v1 = v2;
  v1[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  uint64_t v3 = OUTLINED_FUNCTION_10_4();
  return closure #1 in ConversationController.stopRecordingVideoMessage()(v3, v4, v5, v6);
}

void partial apply for closure #1 in ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()()
{
  closure #1 in ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()(v0);
}

void partial apply for closure #6 in ConversationController.setupScreenSharingSessionCallbacks()()
{
  closure #3 in ConversationController.setupScreenSharingSessionCallbacks()(v0);
}

void partial apply for closure #5 in ConversationController.setupScreenSharingSessionCallbacks()(uint64_t a1)
{
  closure #1 in ConversationController.setupScreenSharingSessionCallbacks()(a1, v1);
}

void partial apply for closure #2 in ConversationController.setupScreenSharingSessionCallbacks()(uint64_t a1)
{
  closure #2 in ConversationController.setupScreenSharingSessionCallbacks()(a1, v1);
}

uint64_t sub_1C36720AC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.deinit()
{
  closure #1 in ConversationController.deinit((void *)(v0 + 16));
}

uint64_t sub_1C36720EC()
{
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.unregisterForMoments()()
{
  closure #1 in ConversationController.unregisterForMoments()(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t partial apply for closure #2 in ConversationController.updateBuzzedMember(_:)()
{
  return partial apply for closure #2 in ConversationController.updateBuzzedMember(_:)(type metadata accessor for Participant, (uint64_t (*)(uint64_t, uint64_t))closure #2 in ConversationController.updateBuzzedMember(_:));
}

void partial apply for closure #1 in ConversationController.registerForMoments()()
{
  closure #1 in ConversationController.registerForMoments()(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C367216C()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.endRequest(for:)(void *a1)
{
}

uint64_t sub_1C36721A4()
{
  swift_release();

  swift_release();
  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.callCenter(_:oneToOneModeChangedFor:)()
{
  closure #1 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C36721F0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ConversationController.callCenter(_:oneToOneModeChangedFor:)()
{
  return closure #2 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(*(unsigned char **)(v0 + 16), (void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_1C367225C()
{
  return objectdestroy_22Tm_0(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_22Tm_0(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();
  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

void partial apply for closure #3 in ConversationController.callCenter(_:oneToOneModeChangedFor:)()
{
  closure #3 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C36722C0()
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_5_3();
  swift_release();
  OUTLINED_FUNCTION_1_19();
  v0();
  OUTLINED_FUNCTION_41_0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.scheduleResetVideoInfo(for:after:)()
{
  return partial apply for closure #2 in ConversationController.updateBuzzedMember(_:)(MEMORY[0x1F418BBE0], (uint64_t (*)(uint64_t, uint64_t))closure #1 in ConversationController.scheduleResetVideoInfo(for:after:));
}

uint64_t objectdestroy_123Tm()
{
  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)()
{
  return closure #1 in ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)(*(void **)(v0 + 16), *(int **)(v0 + 24), *(char **)(v0 + 32));
}

void specialized ConversationController.migrate(to:with:isUpgrade:)(void *a1, NSObject *a2, int a3, char *a4)
{
  void (*v93)(long long *__return_ptr);
  id v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  __n128 v104;
  char *v105;
  char v106;
  void (*v107)(char *, uint64_t);
  id v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t, uint64_t);
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t);
  os_log_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(uint64_t, uint64_t);
  uint64_t v121;
  void *v122;
  uint64_t v123;
  char *v124;
  NSObject *v125;
  os_log_type_t v126;
  int v127;
  uint64_t v128;
  NSObject *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t (*v137)();
  void *v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  os_log_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  char *v150;
  NSObject *v151;
  os_log_type_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  void *v163;
  uint64_t (*v164)();
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  NSObject *v168;
  uint64_t v169;
  char *v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  Class isa;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  const void *v192;
  NSObject *v193;
  void *v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void *v200;
  char *v201;
  Class v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  NSObject *v209;
  os_log_type_t v210;
  int v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  unint64_t v218;
  unint64_t v219;
  uint64_t v220;
  void *v221;
  uint64_t (*v222)();
  uint64_t v223;
  unint64_t v224;
  unint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  int v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  unint64_t v233;
  id v234;
  unint64_t v235;
  uint64_t *v236;
  void *v237;
  uint64_t v238;
  void *v239;
  os_log_t v240;
  os_log_t v241;
  NSObject *v242;
  long long v243;
  uint64_t (*v244)(uint64_t);
  void *v245;
  uint64_t (*v246)();
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  long long v250;
  uint64_t v251;
  uint64_t v252[3];
  uint64_t v253;
  uint64_t v254;

  long long v229 = a3;
  uint64_t v242 = a2;
  uint64_t v240 = (os_log_t)lazy protocol witness table accessor for type TUCall and conformance TUCall();
  uint64_t v230 = a4;
  uint64_t v6 = (uint64_t)&a4[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID];
  swift_beginAccess();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = (char *)&v226 - v9;
  long long v228 = v6;
  uint64_t v11 = outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v6, (uint64_t)&v226 - v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = (char *)&v226 - v9;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  uint64_t v237 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  uint64_t v15 = type metadata accessor for UUID();
  __swift_storeEnumTagSinglePayload((uint64_t)&v226 - v9, 0, 1, v15);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1F4188790](v16 - 8);
  int64_t v18 = (char *)&v226 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v18[*(int *)(v19 + 56)];
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)&v226 - v9, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)&v226 - v9, v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v15);
  unint64_t v239 = (void *)v15;
  uint64_t v231 = v8;
  if (EnumTagSinglePayload != 1)
  {
    MEMORY[0x1F4188790](EnumTagSinglePayload);
    uint64_t v22 = (char *)&v226 - v9;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v18, (uint64_t)&v226 - v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v23 = __swift_getEnumTagSinglePayload(v20, 1, v15);
    if (v23 != 1)
    {
      char v241 = (os_log_t)&v226;
      uint64_t v38 = *(void *)(v15 - 8);
      __n128 v39 = MEMORY[0x1F4188790](v23);
      uint64_t v41 = (char *)&v226 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, void *, __n128))(v38 + 32))(v41, v20, v239, v39);
      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
      char v42 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v43 = *(void (**)(char *, void *))(v38 + 8);
      v43(v41, v239);
      outlined destroy of SystemUpdateNotice?((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v43(v22, v239);
      uint64_t v15 = (uint64_t)v239;
      outlined destroy of SystemUpdateNotice?((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if ((v42 & 1) == 0) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)&v226 - v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v226 - v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))((char *)&v226 - v9, v15);
LABEL_6:
    outlined destroy of SystemUpdateNotice?((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_7;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)&v226 - v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of SystemUpdateNotice?((uint64_t)&v226 - v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload(v20, 1, v15) != 1) {
    goto LABEL_6;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_13:
  uint64_t v44 = &v230[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  uint64_t v45 = *((void *)v44 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 48);
  swift_unknownObjectRetain();
  uint64_t v48 = v47(ObjectType, v45);
  uint64_t v50 = v49;
  swift_unknownObjectRelease();
  id v51 = [v242 callUUID];
  uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v54 = v53;

  if (v48 == v52 && v50 == v54)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
  char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t)v239;
  if (v56)
  {
LABEL_20:
    uint64_t v57 = *((void *)v44 + 1);
    uint64_t v58 = swift_getObjectType();
    uint64_t v59 = *(uint64_t (**)(uint64_t, uint64_t))(v57 + 48);
    swift_unknownObjectRetain();
    uint64_t v60 = v59(v58, v57);
    uint64_t v62 = v61;
    swift_unknownObjectRelease();
    id v63 = [v242 callUUID];
    uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v66 = v65;

    if (v60 == v64 && v62 == v66)
    {
      swift_bridgeObjectRelease_n();
      int v69 = 0;
    }
    else
    {
      int v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v69 = v68 ^ 1;
    }
    uint64_t v122 = v237;
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v123 = type metadata accessor for Logger();
    __swift_project_value_buffer(v123, (uint64_t)static Logger.conversationController);
    outlined init with copy of Conversation((uint64_t)v122, (uint64_t)&v243);
    uint64_t v124 = v230;
    uint64_t v125 = Logger.logObject.getter();
    uint64_t v126 = static os_log_type_t.error.getter();
    uint64_t v127 = v126;
    if (os_log_type_enabled(v125, v126))
    {
      uint64_t v128 = swift_slowAlloc();
      uint64_t v129 = swift_slowAlloc();
      uint64_t v242 = v129;
      v252[0] = (uint64_t)v129;
      *(_DWORD *)uint64_t v128 = 136315650;
      char v241 = v125;
      uint64_t v237 = (void *)(v128 + 4);
      LODWORD(v240) = v127;
      uint64_t v130 = v231;
      MEMORY[0x1F4188790](v129);
      LODWORD(v238) = v69;
      uint64_t v131 = (v130 + 15) & 0xFFFFFFFFFFFFFFF0;
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v228, (uint64_t)&v226 - v131, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      char v132 = specialized >> prefix<A>(_:)((uint64_t)&v226 - v131);
      uint64_t v134 = v133;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v226 - v131, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(void *)&uint64_t v250 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v132, v134, v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v135 = swift_bridgeObjectRelease();
      *(_WORD *)(v128 + 12) = 2080;
      uint64_t v237 = (void *)(v128 + 14);
      MEMORY[0x1F4188790](v135);
      uint64_t v136 = (char *)&v226 - v131;
      int v138 = v245;
      uint64_t v137 = v246;
      __swift_project_boxed_opaque_existential_1(&v243, (uint64_t)v245);
      (*((void (**)(void *, uint64_t (*)()))v137 + 1))(v138, v137);
      __swift_storeEnumTagSinglePayload((uint64_t)&v226 - v131, 0, 1, (uint64_t)v239);
      int v139 = specialized >> prefix<A>(_:)((uint64_t)&v226 - v131);
      int v141 = v140;
      outlined destroy of SystemUpdateNotice?((uint64_t)v136, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(void *)&uint64_t v250 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v139, v141, v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v243);
      *(_WORD *)(v128 + 22) = 2080;
      LOBYTE(v250) = v238 & 1;
      int v142 = String.init<A>(reflecting:)();
      *(void *)&uint64_t v250 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v142, v143, v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v125 = v241;
      _os_log_impl(&dword_1C2F90000, v241, (os_log_type_t)v240, "Unable to migrate from conversation uuid %s to %s. Calls differ: %s.", (uint8_t *)v128, 0x20u);
      uint64_t v144 = v242;
LABEL_73:
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v144, -1, -1);
      MEMORY[0x1C87760E0](v128, -1, -1);
LABEL_76:

      return;
    }
    goto LABEL_75;
  }
LABEL_7:
  uint64_t v24 = v231;
  if (v229) {
    goto LABEL_56;
  }
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)static Logger.conversationController);
  int v27 = v230;
  char v226 = v26;
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v227 = v27;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v252[0] = v32;
    *(_DWORD *)uint64_t v31 = 136315394;
    LOBYTE(v243) = v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    uint64_t v33 = String.init<A>(reflecting:)();
    *(void *)&uint64_t v243 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    uint64_t v35 = &v27[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    swift_beginAccess();
    uint64_t v243 = *(_OWORD *)v35;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    uint64_t v36 = String.init<A>(reflecting:)();
    *(void *)&uint64_t v243 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v28, v29, "%s Going to migrate from oldCall: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v32, -1, -1);
    MEMORY[0x1C87760E0](v31, -1, -1);
  }
  else
  {
  }
  uint64_t v70 = v242;
  swift_unknownObjectRetain_n();
  uint64_t v71 = Logger.logObject.getter();
  os_log_type_t v72 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = (uint8_t *)swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    v252[0] = v74;
    *(_DWORD *)uint64_t v73 = 136315138;
    *(void *)&uint64_t v243 = v70;
    *((void *)&v243 + 1) = v240;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    uint64_t v75 = String.init<A>(reflecting:)();
    *(void *)&uint64_t v243 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v76, v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v71, v72, "... to newCall: %s", v73, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v74, -1, -1);
    MEMORY[0x1C87760E0](v73, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = (uint64_t)v239;
  uint64_t v77 = &v227[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
  swift_beginAccess();
  uint64_t v78 = *((void *)v77 + 3);
  uint64_t v79 = *((void *)v77 + 4);
  uint64_t v238 = (uint64_t)v77;
  uint64_t v80 = __swift_project_boxed_opaque_existential_1(v77, v78);
  uint64_t v81 = *(void *)(v78 - 8);
  __n128 v82 = MEMORY[0x1F4188790](v80);
  uint64_t v84 = (char *)&v226 - v83;
  (*(void (**)(char *, __n128))(v81 + 16))((char *)&v226 - v83, v82);
  uint64_t v85 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v79 + 24))(v78, v79);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v84, v78);
  id v86 = objc_msgSend(v85, sel_currentVideoCalls);
  swift_unknownObjectRelease();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  unint64_t v87 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v87 >> 62))
  {
    uint64_t v88 = *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v88) {
      goto LABEL_31;
    }
LABEL_70:
    swift_bridgeObjectRelease();
    goto LABEL_71;
  }
  swift_bridgeObjectRetain();
  uint64_t v88 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v88) {
    goto LABEL_70;
  }
LABEL_31:
  if (v88 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v89 = 0;
  uint64_t v234 = 0;
  char v235 = v87 & 0xC000000000000001;
  long long v232 = v15 - 8;
  uint64_t v233 = v87;
  uint64_t v236 = (uint64_t *)v88;
  do
  {
    if (v235) {
      id v90 = (id)MEMORY[0x1C87744F0](v89, v87);
    }
    else {
      id v90 = *(id *)(v87 + 8 * (void)v89 + 32);
    }
    uint64_t v91 = v90;
    outlined init with copy of Conversation(v238, (uint64_t)v252);
    uint64_t v92 = v254;
    __swift_project_boxed_opaque_existential_1(v252, v253);
    uint64_t v93 = *(void (**)(long long *__return_ptr))(v92 + 104);
    uint64_t v94 = v91;
    v93(&v243);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v252);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)&v243, (uint64_t)&v250, &demangling cache variable for type metadata for Conversation?);
    if (v251)
    {
      outlined init with take of Notice(&v250, (uint64_t)v252);
      uint64_t v95 = v253;
      uint64_t v96 = v254;
      uint64_t v97 = __swift_project_boxed_opaque_existential_1(v252, v253);
      uint64_t v242 = &v226;
      __n128 v98 = *(void *)(v15 - 8);
      uint64_t v99 = *(void *)(v98 + 64);
      uint64_t v100 = MEMORY[0x1F4188790](v97);
      (*(void (**)(uint64_t, uint64_t, __n128))(v96 + 8))(v95, v96, v100);
      uint64_t v101 = v237[3];
      uint64_t v102 = v237[4];
      uint64_t v103 = __swift_project_boxed_opaque_existential_1(v237, v101);
      char v241 = (os_log_t)&v226;
      uint64_t v104 = MEMORY[0x1F4188790](v103);
      uint64_t v105 = (char *)&v226 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v15 = (uint64_t)v239;
      (*(void (**)(uint64_t, uint64_t, __n128))(v102 + 8))(v101, v102, v104);
      uint64_t v106 = static UUID.== infix(_:_:)();
      uint64_t v107 = *(void (**)(char *, uint64_t))(v98 + 8);
      v107(v105, v15);
      v107(v105, v15);
      outlined destroy of SystemUpdateNotice?((uint64_t)&v243, &demangling cache variable for type metadata for Conversation?);
      if (v106)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v252);
        uint64_t v234 = v94;
      }
      else
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v252);
      }
      unint64_t v87 = v233;
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v243, &demangling cache variable for type metadata for Conversation?);

      outlined destroy of SystemUpdateNotice?((uint64_t)&v250, &demangling cache variable for type metadata for Conversation?);
    }
    uint64_t v89 = (uint64_t *)((char *)v89 + 1);
  }
  while (v236 != v89);
  swift_bridgeObjectRelease();
  if (!v234)
  {
LABEL_71:
    outlined init with copy of Conversation((uint64_t)v237, (uint64_t)&v243);
    uint64_t v124 = v227;
    uint64_t v125 = Logger.logObject.getter();
    uint64_t v210 = static os_log_type_t.default.getter();
    unsigned __int8 v211 = v210;
    if (os_log_type_enabled(v125, v210))
    {
      uint64_t v128 = swift_slowAlloc();
      char v241 = (os_log_t)swift_slowAlloc();
      v252[0] = (uint64_t)v241;
      *(_DWORD *)uint64_t v128 = 136315650;
      uint64_t v240 = v125;
      LOBYTE(v250) = v124[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
      long long v212 = String.init<A>(reflecting:)();
      *(void *)&uint64_t v250 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v212, v213, v252);
      uint64_t v242 = &v250 + 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      long long v214 = swift_bridgeObjectRelease();
      *(_WORD *)(v128 + 12) = 2080;
      uint64_t v237 = (void *)(v128 + 14);
      uint64_t v215 = v231;
      MEMORY[0x1F4188790](v214);
      LODWORD(v238) = v211;
      uint64_t v216 = (v215 + 15) & 0xFFFFFFFFFFFFFFF0;
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v228, (uint64_t)&v226 - v216, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      unint64_t v217 = specialized >> prefix<A>(_:)((uint64_t)&v226 - v216);
      uint64_t v219 = v218;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v226 - v216, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(void *)&uint64_t v250 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v217, v219, v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v220 = swift_bridgeObjectRelease();
      *(_WORD *)(v128 + 22) = 2080;
      uint64_t v237 = (void *)(v128 + 24);
      MEMORY[0x1F4188790](v220);
      uint64_t v221 = v245;
      uint64_t v222 = v246;
      __swift_project_boxed_opaque_existential_1(&v243, (uint64_t)v245);
      (*((void (**)(void *, uint64_t (*)()))v222 + 1))(v221, v222);
      __swift_storeEnumTagSinglePayload((uint64_t)&v226 - v216, 0, 1, (uint64_t)v239);
      uint64_t v223 = specialized >> prefix<A>(_:)((uint64_t)&v226 - v216);
      unint64_t v225 = v224;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v226 - v216, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(void *)&uint64_t v250 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v223, v225, v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v243);
      uint64_t v125 = v240;
      _os_log_impl(&dword_1C2F90000, v240, (os_log_type_t)v238, "%s Unable to migration from conversation uuid %s to %s because cannot find call with same backing conversation", (uint8_t *)v128, 0x20u);
      uint64_t v144 = v241;
      goto LABEL_73;
    }

LABEL_75:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v243);
    goto LABEL_76;
  }
  uint64_t v108 = v234;
  uint64_t v109 = &v227[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  uint64_t v110 = *((void *)v109 + 1);
  uint64_t v111 = swift_getObjectType();
  unint64_t v112 = *(uint64_t (**)(uint64_t, uint64_t))(v110 + 184);
  uint64_t v113 = v108;
  swift_unknownObjectRetain();
  LODWORD(v110) = v112(v111, v110);
  swift_unknownObjectRelease();
  if (v110 != 6)
  {
    type metadata accessor for PlaceholderCall();
    if (!swift_dynamicCastClass())
    {
      uint64_t v114 = *((void *)v109 + 1);
      uint64_t v115 = swift_getObjectType();
      uint64_t v116 = *(uint64_t (**)(uint64_t, uint64_t))(v114 + 352);
      swift_unknownObjectRetain();
      LOBYTE(v114) = v116(v115, v114);
      swift_unknownObjectRelease();
      objc_msgSend(v113, sel_setUplinkMuted_, v114 & 1);
    }
  }
  uint64_t v117 = v240;
  *(void *)uint64_t v109 = v113;
  *((void *)v109 + 1) = v117;
  swift_unknownObjectRelease();
  uint64_t v118 = *((void *)v109 + 1);
  uint64_t v119 = swift_getObjectType();
  uint64_t v120 = *(uint64_t (**)(uint64_t, uint64_t))(v118 + 304);
  swift_unknownObjectRetain();
  LOBYTE(v118) = v120(v119, v118);
  swift_unknownObjectRelease();
  uint64_t v121 = (uint64_t)v227;
  if (v118) {
    ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
  }
  else {
    ConversationController.stopLocalVideo()();
  }
  uint64_t v24 = v231;
  uint64_t v145 = *((void *)v109 + 1);
  uint64_t v146 = swift_getObjectType();
  uint64_t v147 = swift_unknownObjectRetain();
  specialized ConversationController.updateAudioState(with:)(v147, v121, v146, v145);
  swift_unknownObjectRelease();

LABEL_56:
  int v148 = v237;
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  unint64_t v149 = type metadata accessor for Logger();
  __swift_project_value_buffer(v149, (uint64_t)static Logger.conversationController);
  outlined init with copy of Conversation((uint64_t)v148, (uint64_t)&v243);
  __int16 v150 = v230;
  uint64_t v151 = Logger.logObject.getter();
  uint64_t v152 = static os_log_type_t.default.getter();
  uint64_t v153 = v152;
  if (os_log_type_enabled(v151, v152))
  {
    __int16 v154 = swift_slowAlloc();
    uint64_t v242 = swift_slowAlloc();
    v252[0] = (uint64_t)v242;
    *(_DWORD *)__int16 v154 = 136315650;
    char v241 = v151;
    LOBYTE(v248) = v150[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    LODWORD(v240) = v153;
    uint64_t v155 = String.init<A>(reflecting:)();
    unint64_t v248 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v155, v156, v252);
    uint64_t v236 = &v249;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v157 = swift_bridgeObjectRelease();
    *(_WORD *)(v154 + 12) = 2080;
    MEMORY[0x1F4188790](v157);
    long long v158 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v228, (uint64_t)&v226 - v158, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v159 = specialized >> prefix<A>(_:)((uint64_t)&v226 - v158);
    uint64_t v161 = v160;
    outlined destroy of SystemUpdateNotice?((uint64_t)&v226 - v158, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    unint64_t v248 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v159, v161, v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    unint64_t v162 = swift_bridgeObjectRelease();
    *(_WORD *)(v154 + 22) = 2080;
    uint64_t v238 = v154 + 24;
    MEMORY[0x1F4188790](v162);
    uint64_t v163 = v245;
    uint64_t v164 = v246;
    __swift_project_boxed_opaque_existential_1(&v243, (uint64_t)v245);
    (*((void (**)(void *, uint64_t (*)()))v164 + 1))(v163, v164);
    __swift_storeEnumTagSinglePayload((uint64_t)&v226 - v158, 0, 1, (uint64_t)v239);
    unsigned __int8 v165 = specialized >> prefix<A>(_:)((uint64_t)&v226 - v158);
    unsigned __int8 v167 = v166;
    outlined destroy of SystemUpdateNotice?((uint64_t)&v226 - v158, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    unint64_t v248 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v165, v167, v252);
    uint64_t v15 = (uint64_t)v239;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v231;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v243);
    uint64_t v151 = v241;
    _os_log_impl(&dword_1C2F90000, v241, (os_log_type_t)v240, "%s Migrating conversation UUID from %s to %s", (uint8_t *)v154, 0x20u);
    unsigned __int8 v168 = v242;
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v168, -1, -1);
    MEMORY[0x1C87760E0](v154, -1, -1);
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v243);
  }

  MEMORY[0x1F4188790](v169);
  unsigned __int8 v170 = (char *)&v226 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v171 = v237;
  unsigned __int8 v172 = v237[3];
  unsigned __int8 v173 = v237[4];
  __swift_project_boxed_opaque_existential_1(v237, v172);
  (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v172, v173);
  __swift_storeEnumTagSinglePayload((uint64_t)v170, 0, 1, v15);
  ConversationController.conversationUUID.setter((uint64_t)v170);
  unsigned __int8 v174 = v171[3];
  char v175 = v171[4];
  __swift_project_boxed_opaque_existential_1(v171, v174);
  uint64_t v176 = (*(uint64_t (**)(uint64_t, uint64_t))(v175 + 56))(v174, v175);
  ConversationController.conversationState.setter(v176);
  uint64_t v177 = &v150[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  swift_beginAccess();
  unint64_t v178 = *(void *)(*(void *)v177 + 16);
  ConversationController.removeAllParticipants()();
  outlined init with copy of Conversation((uint64_t)v171, (uint64_t)v252);
  if (v229)
  {
    uint64_t v179 = v253;
    unsigned __int8 v180 = v254;
    __swift_project_boxed_opaque_existential_1(v252, v253);
    unsigned __int8 v181 = (*(uint64_t (**)(uint64_t, uint64_t))(v180 + 88))(v179, v180);
    unsigned __int8 v182 = specialized Set.count.getter(v181);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v252);
    if (v178 != v182) {
      goto LABEL_66;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v252);
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v242 = static OS_dispatch_queue.main.getter();
  unsigned __int8 v183 = swift_allocObject();
  *(void *)(v183 + 16) = v150;
  uint64_t v246 = closure #1 in ConversationController.migrate(to:with:isUpgrade:)partial apply;
  uint64_t v247 = v183;
  *(void *)&uint64_t v243 = MEMORY[0x1E4F143A8];
  *((void *)&v243 + 1) = 1107296256;
  uint64_t v244 = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v245 = &block_descriptor_1033;
  unint64_t v239 = _Block_copy(&v243);
  unsigned __int8 v184 = v150;
  swift_release();
  uint64_t v240 = (os_log_t)type metadata accessor for DispatchQoS();
  char v241 = (os_log_t)&v226;
  Class isa = v240[-1].isa;
  MEMORY[0x1F4188790](v240);
  unsigned __int8 v187 = (char *)&v226 - ((v186 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  unsigned __int8 v188 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v238 = (uint64_t)&v226;
  unsigned __int8 v189 = *(void *)(v188 - 8);
  MEMORY[0x1F4188790](v188);
  unsigned __int8 v191 = (char *)&v226 - ((v190 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&uint64_t v243 = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unsigned __int8 v192 = v239;
  uint64_t v193 = v242;
  MEMORY[0x1C8773BA0](0, v187, v191, v239);
  _Block_release(v192);

  (*(void (**)(char *, uint64_t))(v189 + 8))(v191, v188);
  (*((void (**)(char *, os_log_t))isa + 1))(v187, v240);
LABEL_66:
  uint64_t v194 = v237;
  ConversationController.createNewParticipants(with:)(v237);
  ConversationController.updateRemoteParticipantsStates(with:)(v194);
  ConversationController.updateRemoteParticipantsNames(with:)(v194);
  ConversationController.updateLocalMemberAuthorizedToChangeGroupMembership(with:)(v194);
  ConversationController.updateOtherInvitedParticipants()();
  uint64_t v195 = ConversationController.isOneToOneModeEnabled.getter() & 1;
  id v196 = v194[3];
  uint64_t v197 = v194[4];
  __swift_project_boxed_opaque_existential_1(v194, v196);
  if (v195 != ((*(uint64_t (**)(uint64_t, uint64_t))(v197 + 200))(v196, v197) & 1))
  {
    uint64_t v198 = (uint64_t)&v150[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    swift_beginAccess();
    outlined init with copy of Conversation(v198, (uint64_t)&v243);
    ConversationController.callCenter(_:oneToOneModeChangedFor:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v243);
  }
  outlined init with copy of Conversation((uint64_t)v194, (uint64_t)&v243);
  ConversationController.mostRecentActiveConversation.setter((uint64_t)&v243);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v242 = static OS_dispatch_queue.main.getter();
  uint64_t v199 = swift_allocObject();
  *(void *)(v199 + 16) = v150;
  uint64_t v246 = closure #2 in ConversationController.migrate(to:with:isUpgrade:)partial apply;
  uint64_t v247 = v199;
  *(void *)&uint64_t v243 = MEMORY[0x1E4F143A8];
  *((void *)&v243 + 1) = 1107296256;
  uint64_t v244 = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v245 = &block_descriptor_1040;
  uint64_t v200 = _Block_copy(&v243);
  uint64_t v201 = v150;
  swift_release();
  uint64_t v240 = (os_log_t)type metadata accessor for DispatchQoS();
  char v241 = (os_log_t)&v226;
  __int16 v202 = v240[-1].isa;
  MEMORY[0x1F4188790](v240);
  __int16 v204 = (char *)&v226 - ((v203 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v205 = type metadata accessor for DispatchWorkItemFlags();
  unint64_t v239 = &v226;
  double v206 = *(void *)(v205 - 8);
  MEMORY[0x1F4188790](v205);
  double v208 = (char *)&v226 - ((v207 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&uint64_t v243 = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  long long v209 = v242;
  MEMORY[0x1C8773BA0](0, v204, v208, v200);
  _Block_release(v200);

  (*(void (**)(char *, uint64_t))(v206 + 8))(v208, v205);
  (*((void (**)(char *, os_log_t))v202 + 1))(v204, v240);
}

void specialized ConversationController.migrate(to:with:isUpgrade:)(void *a1, void *a2, int a3, char *a4, uint64_t a5, NSObject *a6)
{
  void (*v91)(long long *__return_ptr);
  id v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  __n128 v102;
  char *v103;
  char v104;
  void (*v105)(char *, uint64_t);
  id v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t, uint64_t);
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t);
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(uint64_t, uint64_t);
  uint64_t v121;
  void *v122;
  uint64_t v123;
  char *v124;
  NSObject *v125;
  os_log_type_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t (*v138)();
  void *v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  const char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  NSObject *v153;
  os_log_type_t v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  void *v165;
  uint64_t (*v166)();
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  void *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  const void *v195;
  void *v196;
  void *v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  void *v212;
  char *v213;
  os_log_type_t v214;
  int v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  unint64_t v222;
  unint64_t v223;
  uint64_t v224;
  void *v225;
  uint64_t (*v226)();
  uint64_t v227;
  unint64_t v228;
  unint64_t v229;
  void *v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  char *v236;
  uint64_t v237;
  id v238;
  void *v239;
  unint64_t v240;
  void *v241;
  char *v242;
  uint64_t v243;
  void *v244;
  uint64_t v245;
  os_log_t v246;
  void *v247;
  long long v248;
  uint64_t (*v249)(uint64_t);
  void *v250;
  uint64_t (*v251)();
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  long long v255;
  uint64_t v256;
  uint64_t v257[3];
  uint64_t v258;
  uint64_t v259;

  uint64_t v246 = a6;
  uint64_t v247 = a2;
  uint64_t v244 = (void *)a5;
  char v235 = a3;
  uint64_t v236 = a4;
  uint64_t v7 = (uint64_t)&a4[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID];
  swift_beginAccess();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (char *)&v231 - v10;
  uint64_t v233 = v7;
  uint64_t v12 = outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v7, (uint64_t)&v231 - v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = (char *)&v231 - v10;
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  unint64_t v239 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  uint64_t v16 = type metadata accessor for UUID();
  __swift_storeEnumTagSinglePayload((uint64_t)&v231 - v10, 0, 1, v16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v231 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (uint64_t)&v19[*(int *)(v20 + 56)];
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)&v231 - v10, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)&v231 - v10, v21, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v16);
  uint64_t v245 = v16;
  uint64_t v234 = v9;
  if (EnumTagSinglePayload != 1)
  {
    MEMORY[0x1F4188790](EnumTagSinglePayload);
    uint64_t v25 = (char *)&v231 - v10;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v19, (uint64_t)&v231 - v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v26 = __swift_getEnumTagSinglePayload(v21, 1, v16);
    if (v26 != 1)
    {
      uint64_t v243 = (uint64_t)&v231;
      uint64_t v40 = *(void *)(v16 - 8);
      __n128 v41 = MEMORY[0x1F4188790](v26);
      uint64_t v43 = (char *)&v231 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v40 + 32))(v43, v21, v245, v41);
      _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
      char v44 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v45 = *(void (**)(char *, uint64_t))(v40 + 8);
      v45(v43, v245);
      outlined destroy of SystemUpdateNotice?((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of SystemUpdateNotice?((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v45(v25, v245);
      uint64_t v16 = v245;
      outlined destroy of SystemUpdateNotice?((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v24 = v247;
      if ((v44 & 1) == 0) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }
    outlined destroy of SystemUpdateNotice?((uint64_t)&v231 - v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of SystemUpdateNotice?((uint64_t)&v231 - v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))((char *)&v231 - v10, v16);
    uint64_t v24 = v247;
LABEL_6:
    outlined destroy of SystemUpdateNotice?((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_7;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)&v231 - v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of SystemUpdateNotice?((uint64_t)&v231 - v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  int v23 = __swift_getEnumTagSinglePayload(v21, 1, v16);
  uint64_t v24 = v247;
  if (v23 != 1) {
    goto LABEL_6;
  }
  outlined destroy of SystemUpdateNotice?((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_13:
  uint64_t v46 = &v236[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  uint64_t v47 = *((void *)v46 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v49 = *(uint64_t (**)(uint64_t, uint64_t))(v47 + 48);
  swift_unknownObjectRetain();
  uint64_t v50 = v49(ObjectType, v47);
  uint64_t v52 = v51;
  swift_unknownObjectRelease();
  Class isa = v246[6].isa;
  if (v50 == ((uint64_t (*)(void *))isa)(v244) && v52 == v54)
  {
    swift_bridgeObjectRelease_n();
LABEL_20:
    uint64_t v57 = swift_getObjectType();
    uint64_t v58 = *((void *)v46 + 1);
    uint64_t v59 = swift_getObjectType();
    uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t))(v58 + 48);
    swift_unknownObjectRetain();
    uint64_t v61 = v60(v59, v58);
    uint64_t v63 = v62;
    swift_unknownObjectRelease();
    if (v61 == ((uint64_t (*)(uint64_t, os_log_t))isa)(v57, v246) && v63 == v64)
    {
      swift_bridgeObjectRelease_n();
      int v67 = 0;
    }
    else
    {
      int v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v67 = v66 ^ 1;
    }
    uint64_t v122 = v239;
    if (one-time initialization token for conversationController != -1) {
      swift_once();
    }
    uint64_t v123 = type metadata accessor for Logger();
    __swift_project_value_buffer(v123, (uint64_t)static Logger.conversationController);
    outlined init with copy of Conversation((uint64_t)v122, (uint64_t)&v248);
    uint64_t v124 = v236;
    uint64_t v125 = Logger.logObject.getter();
    uint64_t v126 = static os_log_type_t.error.getter();
    uint64_t v127 = v126;
    if (os_log_type_enabled(v125, v126))
    {
      uint64_t v128 = swift_slowAlloc();
      LODWORD(v243) = v67;
      uint64_t v129 = v128;
      uint64_t v130 = swift_slowAlloc();
      uint64_t v247 = (void *)v130;
      v257[0] = v130;
      *(_DWORD *)uint64_t v129 = 136315650;
      uint64_t v246 = v125;
      uint64_t v242 = (char *)(v129 + 4);
      LODWORD(v244) = v127;
      uint64_t v131 = v234;
      MEMORY[0x1F4188790](v130);
      char v132 = (v131 + 15) & 0xFFFFFFFFFFFFFFF0;
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v233, (uint64_t)&v231 - v132, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v133 = specialized >> prefix<A>(_:)((uint64_t)&v231 - v132);
      uint64_t v135 = v134;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v231 - v132, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(void *)&double v255 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v135, v257);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v136 = swift_bridgeObjectRelease();
      *(_WORD *)(v129 + 12) = 2080;
      MEMORY[0x1F4188790](v136);
      uint64_t v137 = (char *)&v231 - v132;
      int v139 = v250;
      int v138 = v251;
      __swift_project_boxed_opaque_existential_1(&v248, (uint64_t)v250);
      (*((void (**)(void *, uint64_t (*)()))v138 + 1))(v139, v138);
      __swift_storeEnumTagSinglePayload((uint64_t)v137, 0, 1, v245);
      int v140 = specialized >> prefix<A>(_:)((uint64_t)v137);
      int v142 = v141;
      outlined destroy of SystemUpdateNotice?((uint64_t)v137, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(void *)&double v255 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v140, v142, v257);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v248);
      *(_WORD *)(v129 + 22) = 2080;
      LOBYTE(v255) = v243 & 1;
      uint64_t v143 = String.init<A>(reflecting:)();
      *(void *)&double v255 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v143, v144, v257);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v145 = "Unable to migrate from conversation uuid %s to %s. Calls differ: %s.";
LABEL_73:
      uint64_t v125 = v246;
      _os_log_impl(&dword_1C2F90000, v246, (os_log_type_t)v244, v145, (uint8_t *)v129, 0x20u);
      uint64_t v230 = v247;
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v230, -1, -1);
      MEMORY[0x1C87760E0](v129, -1, -1);
LABEL_76:

      return;
    }

    goto LABEL_75;
  }
  char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v56) {
    goto LABEL_20;
  }
LABEL_7:
  if (v235) {
    goto LABEL_56;
  }
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)static Logger.conversationController);
  os_log_type_t v29 = v236;
  uint64_t v231 = v28;
  BOOL v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  BOOL v32 = os_log_type_enabled(v30, v31);
  long long v232 = v29;
  if (v32)
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    v257[0] = v34;
    *(_DWORD *)uint64_t v33 = 136315394;
    LOBYTE(v248) = v29[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    uint64_t v35 = String.init<A>(reflecting:)();
    *(void *)&unint64_t v248 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, v257);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    unint64_t v37 = &v29[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    swift_beginAccess();
    unint64_t v248 = *(_OWORD *)v37;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    uint64_t v38 = String.init<A>(reflecting:)();
    *(void *)&unint64_t v248 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, v257);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v30, v31, "%s Going to migrate from oldCall: %s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v34, -1, -1);
    MEMORY[0x1C87760E0](v33, -1, -1);
  }
  else
  {
  }
  swift_unknownObjectRetain_n();
  int v68 = Logger.logObject.getter();
  os_log_type_t v69 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v68, v69))
  {
    uint64_t v70 = (uint8_t *)swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    v257[0] = v71;
    *(_DWORD *)uint64_t v70 = 136315138;
    *(void *)&unint64_t v248 = v24;
    *((void *)&v248 + 1) = v246;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    uint64_t v72 = String.init<A>(reflecting:)();
    *(void *)&unint64_t v248 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v73, v257);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v68, v69, "... to newCall: %s", v70, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v71, -1, -1);
    MEMORY[0x1C87760E0](v70, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v16 = v245;
  uint64_t v74 = &v232[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
  swift_beginAccess();
  uint64_t v75 = *((void *)v74 + 3);
  uint64_t v76 = *((void *)v74 + 4);
  uint64_t v244 = v74;
  uint64_t v77 = __swift_project_boxed_opaque_existential_1(v74, v75);
  uint64_t v78 = *(void *)(v75 - 8);
  __n128 v79 = MEMORY[0x1F4188790](v77);
  uint64_t v81 = (char *)&v231 - v80;
  (*(void (**)(char *, __n128))(v78 + 16))((char *)&v231 - v80, v79);
  __n128 v82 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v76 + 24))(v75, v76);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v81, v75);
  id v83 = objc_msgSend(v82, sel_currentVideoCalls);
  swift_unknownObjectRelease();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  unint64_t v84 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v84 >> 62))
  {
    uint64_t v85 = *(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v85) {
      goto LABEL_31;
    }
LABEL_70:
    swift_bridgeObjectRelease();
    goto LABEL_71;
  }
  swift_bridgeObjectRetain();
  uint64_t v85 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v85) {
    goto LABEL_70;
  }
LABEL_31:
  if (v85 < 1)
  {
    __break(1u);
    return;
  }
  id v86 = 0;
  char v241 = (void *)(v84 & 0xC000000000000001);
  uint64_t v242 = (char *)v85;
  uint64_t v237 = v16 - 8;
  uint64_t v238 = 0;
  uint64_t v243 = v84;
  do
  {
    if (v241) {
      id v87 = (id)MEMORY[0x1C87744F0](v86, v84);
    }
    else {
      id v87 = *(id *)(v84 + 8 * (void)v86 + 32);
    }
    uint64_t v88 = v87;
    outlined init with copy of Conversation((uint64_t)v244, (uint64_t)v257);
    uint64_t v89 = v259;
    __swift_project_boxed_opaque_existential_1(v257, v258);
    unint64_t v90 = lazy protocol witness table accessor for type TUCall and conformance TUCall();
    uint64_t v91 = *(void (**)(long long *__return_ptr))(v89 + 104);
    uint64_t v92 = v88;
    uint64_t v240 = v90;
    v91(&v248);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v257);
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)&v248, (uint64_t)&v255, &demangling cache variable for type metadata for Conversation?);
    if (v256)
    {
      outlined init with take of Notice(&v255, (uint64_t)v257);
      uint64_t v93 = v258;
      uint64_t v94 = v259;
      uint64_t v95 = __swift_project_boxed_opaque_existential_1(v257, v258);
      uint64_t v247 = &v231;
      uint64_t v96 = *(void *)(v16 - 8);
      uint64_t v97 = *(void *)(v96 + 64);
      __n128 v98 = MEMORY[0x1F4188790](v95);
      (*(void (**)(uint64_t, uint64_t, __n128))(v94 + 8))(v93, v94, v98);
      uint64_t v99 = v239[3];
      uint64_t v100 = v239[4];
      uint64_t v101 = __swift_project_boxed_opaque_existential_1(v239, v99);
      uint64_t v246 = (os_log_t)&v231;
      uint64_t v102 = MEMORY[0x1F4188790](v101);
      uint64_t v103 = (char *)&v231 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v16 = v245;
      (*(void (**)(uint64_t, uint64_t, __n128))(v100 + 8))(v99, v100, v102);
      uint64_t v104 = static UUID.== infix(_:_:)();
      uint64_t v105 = *(void (**)(char *, uint64_t))(v96 + 8);
      v105(v103, v16);
      v105(v103, v16);
      outlined destroy of SystemUpdateNotice?((uint64_t)&v248, &demangling cache variable for type metadata for Conversation?);
      if (v104)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v257);
        uint64_t v238 = v92;
      }
      else
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v257);
      }
    }
    else
    {
      outlined destroy of SystemUpdateNotice?((uint64_t)&v248, &demangling cache variable for type metadata for Conversation?);

      outlined destroy of SystemUpdateNotice?((uint64_t)&v255, &demangling cache variable for type metadata for Conversation?);
    }
    ++v86;
    unint64_t v84 = v243;
  }
  while (v242 != v86);
  swift_bridgeObjectRelease();
  uint64_t v106 = v238;
  if (!v238)
  {
LABEL_71:
    outlined init with copy of Conversation((uint64_t)v239, (uint64_t)&v248);
    os_log_type_t v213 = v232;
    uint64_t v125 = Logger.logObject.getter();
    long long v214 = static os_log_type_t.default.getter();
    uint64_t v215 = v214;
    if (os_log_type_enabled(v125, v214))
    {
      uint64_t v129 = swift_slowAlloc();
      uint64_t v247 = (void *)swift_slowAlloc();
      v257[0] = (uint64_t)v247;
      *(_DWORD *)uint64_t v129 = 136315650;
      uint64_t v246 = v125;
      LOBYTE(v255) = v213[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
      uint64_t v216 = String.init<A>(reflecting:)();
      *(void *)&double v255 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v216, v217, v257);
      uint64_t v242 = (char *)&v255 + 8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v218 = swift_bridgeObjectRelease();
      *(_WORD *)(v129 + 12) = 2080;
      uint64_t v243 = v129 + 14;
      uint64_t v219 = v234;
      MEMORY[0x1F4188790](v218);
      LODWORD(v244) = v215;
      uint64_t v220 = (v219 + 15) & 0xFFFFFFFFFFFFFFF0;
      outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v233, (uint64_t)&v231 - v220, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      uint64_t v221 = specialized >> prefix<A>(_:)((uint64_t)&v231 - v220);
      uint64_t v223 = v222;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v231 - v220, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(void *)&double v255 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v221, v223, v257);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v224 = swift_bridgeObjectRelease();
      *(_WORD *)(v129 + 22) = 2080;
      uint64_t v243 = v129 + 24;
      MEMORY[0x1F4188790](v224);
      unint64_t v225 = v250;
      char v226 = v251;
      __swift_project_boxed_opaque_existential_1(&v248, (uint64_t)v250);
      (*((void (**)(void *, uint64_t (*)()))v226 + 1))(v225, v226);
      __swift_storeEnumTagSinglePayload((uint64_t)&v231 - v220, 0, 1, v245);
      uint64_t v227 = specialized >> prefix<A>(_:)((uint64_t)&v231 - v220);
      long long v229 = v228;
      outlined destroy of SystemUpdateNotice?((uint64_t)&v231 - v220, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(void *)&double v255 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v227, v229, v257);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v248);
      uint64_t v145 = "%s Unable to migration from conversation uuid %s to %s because cannot find call with same backing conversation";
      goto LABEL_73;
    }

LABEL_75:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v248);
    goto LABEL_76;
  }
  uint64_t v107 = &v232[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  uint64_t v108 = *((void *)v107 + 1);
  uint64_t v109 = swift_getObjectType();
  uint64_t v110 = v106;
  uint64_t v111 = v109;
  unint64_t v112 = *(uint64_t (**)(uint64_t, uint64_t))(v108 + 184);
  uint64_t v113 = v110;
  swift_unknownObjectRetain();
  LODWORD(v108) = v112(v111, v108);
  swift_unknownObjectRelease();
  if (v108 != 6)
  {
    type metadata accessor for PlaceholderCall();
    if (!swift_dynamicCastClass())
    {
      uint64_t v114 = *((void *)v107 + 1);
      uint64_t v115 = swift_getObjectType();
      uint64_t v116 = *(uint64_t (**)(uint64_t, uint64_t))(v114 + 352);
      swift_unknownObjectRetain();
      LOBYTE(v114) = v116(v115, v114);
      swift_unknownObjectRelease();
      objc_msgSend(v113, sel_setUplinkMuted_, v114 & 1);
    }
  }
  uint64_t v117 = v240;
  *(void *)uint64_t v107 = v113;
  *((void *)v107 + 1) = v117;
  swift_unknownObjectRelease();
  uint64_t v118 = *((void *)v107 + 1);
  uint64_t v119 = swift_getObjectType();
  uint64_t v120 = *(uint64_t (**)(uint64_t, uint64_t))(v118 + 304);
  swift_unknownObjectRetain();
  LOBYTE(v118) = v120(v119, v118);
  swift_unknownObjectRelease();
  uint64_t v121 = (uint64_t)v232;
  if (v118) {
    ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
  }
  else {
    ConversationController.stopLocalVideo()();
  }
  uint64_t v146 = *((void *)v107 + 1);
  uint64_t v147 = swift_getObjectType();
  int v148 = swift_unknownObjectRetain();
  specialized ConversationController.updateAudioState(with:)(v148, v121, v147, v146);
  swift_unknownObjectRelease();

LABEL_56:
  unint64_t v149 = v239;
  __int16 v150 = v234;
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v151 = type metadata accessor for Logger();
  __swift_project_value_buffer(v151, (uint64_t)static Logger.conversationController);
  outlined init with copy of Conversation((uint64_t)v149, (uint64_t)&v248);
  uint64_t v152 = v236;
  uint64_t v153 = Logger.logObject.getter();
  __int16 v154 = static os_log_type_t.default.getter();
  uint64_t v155 = v154;
  if (os_log_type_enabled(v153, v154))
  {
    uint64_t v156 = swift_slowAlloc();
    uint64_t v247 = (void *)swift_slowAlloc();
    v257[0] = (uint64_t)v247;
    *(_DWORD *)uint64_t v156 = 136315650;
    uint64_t v246 = v153;
    LOBYTE(v253) = v152[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    LODWORD(v244) = v155;
    uint64_t v157 = String.init<A>(reflecting:)();
    uint64_t v253 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v157, v158, v257);
    uint64_t v242 = (char *)&v254;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v159 = swift_bridgeObjectRelease();
    *(_WORD *)(v156 + 12) = 2080;
    uint64_t v243 = v156 + 14;
    MEMORY[0x1F4188790](v159);
    uint64_t v160 = (v150 + 15) & 0xFFFFFFFFFFFFFFF0;
    outlined init with copy of RecentCallDetailControllerFactoryProtocol?(v233, (uint64_t)&v231 - v160, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v161 = specialized >> prefix<A>(_:)((uint64_t)&v231 - v160);
    uint64_t v163 = v162;
    outlined destroy of SystemUpdateNotice?((uint64_t)&v231 - v160, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v253 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v161, v163, v257);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v164 = swift_bridgeObjectRelease();
    char v241 = &v231;
    *(_WORD *)(v156 + 22) = 2080;
    uint64_t v243 = v156 + 24;
    MEMORY[0x1F4188790](v164);
    unsigned __int8 v165 = v250;
    unsigned __int8 v166 = v251;
    __swift_project_boxed_opaque_existential_1(&v248, (uint64_t)v250);
    (*((void (**)(void *, uint64_t (*)()))v166 + 1))(v165, v166);
    __swift_storeEnumTagSinglePayload((uint64_t)&v231 - v160, 0, 1, v245);
    unsigned __int8 v167 = specialized >> prefix<A>(_:)((uint64_t)&v231 - v160);
    unsigned __int8 v169 = v168;
    outlined destroy of SystemUpdateNotice?((uint64_t)&v231 - v160, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v253 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v167, v169, v257);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v16 = v245;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v248);
    uint64_t v153 = v246;
    _os_log_impl(&dword_1C2F90000, v246, (os_log_type_t)v244, "%s Migrating conversation UUID from %s to %s", (uint8_t *)v156, 0x20u);
    unsigned __int8 v170 = v247;
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v170, -1, -1);
    unsigned __int8 v171 = v156;
    unint64_t v149 = v239;
    MEMORY[0x1C87760E0](v171, -1, -1);
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v248);
  }

  MEMORY[0x1F4188790](v172);
  unsigned __int8 v173 = (char *)&v231 - ((v150 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v174 = v149;
  char v175 = v149[3];
  uint64_t v176 = v174[4];
  __swift_project_boxed_opaque_existential_1(v174, v175);
  (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v175, v176);
  __swift_storeEnumTagSinglePayload((uint64_t)v173, 0, 1, v16);
  ConversationController.conversationUUID.setter((uint64_t)v173);
  uint64_t v177 = v174[3];
  unint64_t v178 = v174[4];
  __swift_project_boxed_opaque_existential_1(v174, v177);
  uint64_t v179 = (*(uint64_t (**)(uint64_t, uint64_t))(v178 + 56))(v177, v178);
  ConversationController.conversationState.setter(v179);
  unsigned __int8 v180 = &v152[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  swift_beginAccess();
  unsigned __int8 v181 = *(void *)(*(void *)v180 + 16);
  ConversationController.removeAllParticipants()();
  outlined init with copy of Conversation((uint64_t)v174, (uint64_t)v257);
  if (v235)
  {
    unsigned __int8 v182 = v258;
    unsigned __int8 v183 = v259;
    __swift_project_boxed_opaque_existential_1(v257, v258);
    unsigned __int8 v184 = (*(uint64_t (**)(uint64_t, uint64_t))(v183 + 88))(v182, v183);
    unsigned __int8 v185 = specialized Set.count.getter(v184);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v257);
    if (v181 != v185) {
      goto LABEL_66;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v257);
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v247 = (void *)static OS_dispatch_queue.main.getter();
  unsigned __int8 v186 = swift_allocObject();
  *(void *)(v186 + 16) = v152;
  unint64_t v251 = partial apply for closure #1 in ConversationController.migrate(to:with:isUpgrade:);
  uint64_t v252 = v186;
  *(void *)&unint64_t v248 = MEMORY[0x1E4F143A8];
  *((void *)&v248 + 1) = 1107296256;
  uint64_t v249 = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v250 = &block_descriptor_1018;
  uint64_t v244 = _Block_copy(&v248);
  unsigned __int8 v187 = v152;
  swift_release();
  uint64_t v245 = type metadata accessor for DispatchQoS();
  uint64_t v246 = (os_log_t)&v231;
  unsigned __int8 v188 = *(void *)(v245 - 8);
  MEMORY[0x1F4188790](v245);
  unsigned __int8 v190 = (char *)&v231 - ((v189 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  unsigned __int8 v191 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v243 = (uint64_t)&v231;
  unsigned __int8 v192 = *(void *)(v191 - 8);
  MEMORY[0x1F4188790](v191);
  uint64_t v194 = (char *)&v231 - ((v193 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&unint64_t v248 = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v195 = v244;
  id v196 = v247;
  MEMORY[0x1C8773BA0](0, v190, v194, v244);
  _Block_release(v195);

  (*(void (**)(char *, uint64_t))(v192 + 8))(v194, v191);
  (*(void (**)(char *, uint64_t))(v188 + 8))(v190, v245);
LABEL_66:
  uint64_t v197 = v239;
  ConversationController.createNewParticipants(with:)(v239);
  ConversationController.updateRemoteParticipantsStates(with:)(v197);
  ConversationController.updateRemoteParticipantsNames(with:)(v197);
  ConversationController.updateLocalMemberAuthorizedToChangeGroupMembership(with:)(v197);
  ConversationController.updateOtherInvitedParticipants()();
  uint64_t v198 = ConversationController.isOneToOneModeEnabled.getter() & 1;
  uint64_t v199 = v197[3];
  uint64_t v200 = v197[4];
  __swift_project_boxed_opaque_existential_1(v197, v199);
  if (v198 != ((*(uint64_t (**)(uint64_t, uint64_t))(v200 + 200))(v199, v200) & 1))
  {
    uint64_t v201 = (uint64_t)&v152[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    swift_beginAccess();
    outlined init with copy of Conversation(v201, (uint64_t)&v248);
    ConversationController.callCenter(_:oneToOneModeChangedFor:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v248);
  }
  outlined init with copy of Conversation((uint64_t)v197, (uint64_t)&v248);
  ConversationController.mostRecentActiveConversation.setter((uint64_t)&v248);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v247 = (void *)static OS_dispatch_queue.main.getter();
  __int16 v202 = swift_allocObject();
  *(void *)(v202 + 16) = v152;
  unint64_t v251 = partial apply for closure #2 in ConversationController.migrate(to:with:isUpgrade:);
  uint64_t v252 = v202;
  *(void *)&unint64_t v248 = MEMORY[0x1E4F143A8];
  *((void *)&v248 + 1) = 1107296256;
  uint64_t v249 = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v250 = &block_descriptor_1024;
  long long v203 = _Block_copy(&v248);
  __int16 v204 = v152;
  swift_release();
  uint64_t v245 = type metadata accessor for DispatchQoS();
  uint64_t v246 = (os_log_t)&v231;
  uint64_t v205 = *(void *)(v245 - 8);
  MEMORY[0x1F4188790](v245);
  double v207 = (char *)&v231 - ((v206 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  double v208 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v244 = &v231;
  long long v209 = *(void *)(v208 - 8);
  MEMORY[0x1F4188790](v208);
  unsigned __int8 v211 = (char *)&v231 - ((v210 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&unint64_t v248 = MEMORY[0x1E4FBC860];
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_3((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  long long v212 = v247;
  MEMORY[0x1C8773BA0](0, v207, v211, v203);
  _Block_release(v203);

  (*(void (**)(char *, uint64_t))(v209 + 8))(v211, v208);
  (*(void (**)(char *, uint64_t))(v205 + 8))(v207, v245);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Activity, @unowned TUConversationActivitySessionApplicationState) -> ()(uint64_t a1, uint64_t a2, void *a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 16))(a1, a2, *a3);
}

void partial apply for closure #1 in ConversationController.callCenter(_:collaborationsChangedFor:)()
{
  closure #1 in ConversationController.callCenter(_:collaborationsChangedFor:)(v0);
}

uint64_t sub_1C36762C8()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.frequencyController(_:audioPowerChanged:forParticipantWithStreamToken:)()
{
  return closure #1 in ConversationController.frequencyController(_:audioPowerChanged:forParticipantWithStreamToken:)(*(void *)(v0 + 16), *(void *)(v0 + 24), *(float *)(v0 + 32));
}

uint64_t partial apply for closure #1 in ConversationController.remoteVideoClientDidReceiveFirstFrame(_:)()
{
  return closure #1 in ConversationController.remoteVideoClientDidReceiveFirstFrame(_:)(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C3676314()
{
  OUTLINED_FUNCTION_23_5();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.remoteVideoClient(_:videoDidSuspend:)()
{
  return closure #1 in ConversationController.remoteVideoClient(_:videoDidSuspend:)(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t partial apply for closure #1 in ConversationController.remoteVideoClient(_:remoteVideoDidPause:)()
{
  return closure #1 in ConversationController.remoteVideoClient(_:remoteVideoDidPause:)(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C367636C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.remoteVideoClient(_:networkQualityDidDegrade:info:)()
{
  return closure #1 in ConversationController.remoteVideoClient(_:networkQualityDidDegrade:info:)(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t partial apply for closure #1 in ConversationController.remoteVideoClient(_:videoDidDegrade:)()
{
  return closure #1 in ConversationController.remoteVideoClient(_:videoDidDegrade:)(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t partial apply for closure #1 in ConversationController.remoteVideoClient(_:remoteMediaDidStall:)()
{
  return closure #1 in ConversationController.remoteVideoClient(_:remoteMediaDidStall:)(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t partial apply for closure #1 in ConversationController.remoteVideoClient(_:remoteScreenAttributesDidChange:)()
{
  return closure #1 in ConversationController.remoteVideoClient(_:remoteScreenAttributesDidChange:)(*(void *)(v0 + 16));
}

uint64_t type metadata accessor for ConversationController.ParticipantInfo(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConversationController.ParticipantInfo);
}

uint64_t _s15ConversationKit11ParticipantVWObTm_6(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_89();
  v4(v3);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_46();
  v5();
  return a2;
}

uint64_t outlined assign with copy of Participant.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_89();
  v5(v4);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(a2, v2);
  return a2;
}

void partial apply for closure #1 in ConversationController.handleAudioUplinkChange(_:)()
{
  closure #1 in ConversationController.handleAudioUplinkChange(_:)(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void partial apply for closure #1 in ConversationController.handleLocalPreviewChanged(_:)()
{
  closure #1 in ConversationController.handleLocalPreviewChanged(_:)(*(void *)(v0 + 16));
}

void partial apply for closure #1 in ConversationController.handleLocalVideoPreviewFirstFrameArrived(_:)()
{
  closure #1 in ConversationController.handleLocalVideoPreviewFirstFrameArrived(_:)(*(char **)(v0 + 16));
}

uint64_t partial apply for closure #1 in ConversationController.handleLocalVideoAttributesChanged(_:)()
{
  return closure #1 in ConversationController.handleLocalVideoAttributesChanged(_:)(*(void *)(v0 + 16));
}

uint64_t partial apply for closure #1 in ConversationController.handleSendingVideoChanged(_:)()
{
  return partial apply for closure #1 in ConversationController.handleSendingVideoChanged(_:)(MEMORY[0x1F418AE60], (uint64_t (*)(unint64_t, uint64_t))closure #1 in ConversationController.handleSendingVideoChanged(_:));
}

uint64_t partial apply for closure #1 in ConversationController.handleWindowDidFinishResize(_:)()
{
  return closure #1 in ConversationController.migrate(to:with:isUpgrade:)(*(void *)(v0 + 16), &OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize);
}

uint64_t sub_1C367652C()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in ConversationController.handleScreenSharingDidChange(_:)()
{
  return closure #1 in ConversationController.handleScreenSharingDidChange(_:)(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t partial apply for closure #1 in ConversationController.handleCallConnected(_:)()
{
  return closure #1 in ConversationController.handleCallStartedConnecting(_:)(*(void *)(v0 + 16));
}

void partial apply for closure #1 in ConversationController.handleVideoCallStatusDidChange(_:)()
{
  closure #1 in ConversationController.handleVideoCallStatusDidChange(_:)(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void partial apply for closure #1 in ConversationController.handleCallStatusDidChange(_:)()
{
  closure #1 in ConversationController.handleCallStatusDidChange(_:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t objectdestroy_245Tm()
{
  type metadata accessor for Notification();
  OUTLINED_FUNCTION_0();
  unint64_t v2 = (*(void *)(v1 + 64)
      + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_26_2();
  v3();

  OUTLINED_FUNCTION_318_0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.handleHoldMusicDidChange(_:)()
{
  return partial apply for closure #1 in ConversationController.handleSendingVideoChanged(_:)(MEMORY[0x1F418AE60], (uint64_t (*)(unint64_t, uint64_t))closure #1 in ConversationController.handleHoldMusicDidChange(_:));
}

uint64_t partial apply for closure #1 in ConversationController.handleBluetoothAudioFormatChanged(_:)()
{
  return closure #1 in ConversationController.handleBluetoothAudioFormatChanged(_:)(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t partial apply for closure #1 in ConversationController.handlePTTCallStatusDidChange(_:)()
{
  return closure #1 in ConversationController.handlePTTCallStatusDidChange(_:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t lazy protocol witness table accessor for type ConversationController.ControlsMode and conformance ConversationController.ControlsMode()
{
  unint64_t result = lazy protocol witness table cache variable for type ConversationController.ControlsMode and conformance ConversationController.ControlsMode;
  if (!lazy protocol witness table cache variable for type ConversationController.ControlsMode and conformance ConversationController.ControlsMode)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationController.ControlsMode and conformance ConversationController.ControlsMode);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ConversationController.OneToOneModeChangeSource and conformance ConversationController.OneToOneModeChangeSource()
{
  unint64_t result = lazy protocol witness table cache variable for type ConversationController.OneToOneModeChangeSource and conformance ConversationController.OneToOneModeChangeSource;
  if (!lazy protocol witness table cache variable for type ConversationController.OneToOneModeChangeSource and conformance ConversationController.OneToOneModeChangeSource)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationController.OneToOneModeChangeSource and conformance ConversationController.OneToOneModeChangeSource);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ConversationController.CameraStartPolicy and conformance ConversationController.CameraStartPolicy()
{
  unint64_t result = lazy protocol witness table cache variable for type ConversationController.CameraStartPolicy and conformance ConversationController.CameraStartPolicy;
  if (!lazy protocol witness table cache variable for type ConversationController.CameraStartPolicy and conformance ConversationController.CameraStartPolicy)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationController.CameraStartPolicy and conformance ConversationController.CameraStartPolicy);
  }
  return result;
}

id sub_1C367675C@<X0>(void *a1@<X8>)
{
  id result = ConversationController.momentsController.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C3676790(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_400(a1);
  return ConversationController.conversationState.setter(v1);
}

uint64_t sub_1C36767B8(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_400(a1);
  return ConversationController.conversationLetMeInRequestState.setter(v1);
}

uint64_t sub_1C36767E0(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return ConversationController.ignoreLetMeInRequests.setter(v1);
}

uint64_t sub_1C3676808(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_400(a1);
  return ConversationController.rejectedParticipantsCount.setter(v1);
}

uint64_t sub_1C3676830(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_400(a1);
  return ConversationController.deviceOrientation.setter(v1);
}

uint64_t sub_1C3676858(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return ConversationController.didDeferStartCameraAction.setter(v1);
}

uint64_t sub_1C3676880(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return ConversationController.isUsingIPadExternalCamera.setter(v1);
}

uint64_t sub_1C36768A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = ConversationController.captionsRecognizerShouldBeRunning.getter();
  *a1 = result & 1;
  return result;
}

void sub_1C36768D4(unsigned __int8 *a1)
{
}

uint64_t sub_1C3676B44(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_34(a1);
  return ConversationController.isSplitView.setter(v1);
}

uint64_t sub_1C3676B68()
{
  return ConversationController.mostRecentActiveConversation.getter();
}

uint64_t ObjC metadata update function for ConversationController()
{
  return type metadata accessor for ConversationController(0);
}

uint64_t type metadata accessor for ConversationController(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConversationController);
}

void type metadata completion function for ConversationController()
{
  type metadata accessor for Participant(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?();
    if (v1 <= 0x3F)
    {
      type metadata accessor for UUID?();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for ConversationController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConversationController);
}

uint64_t dispatch thunk of ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
  return (*(uint64_t (**)(void))(v0 + 1088))();
}

void type metadata accessor for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?()
{
  if (!lazy cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ConversationController.ControlsMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3677018);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ConversationController.ControlsMode()
{
}

void type metadata accessor for ConversationController.OneToOneModeChangeSource()
{
}

unsigned char *storeEnumTagSinglePayload for ConversationController.OneToOneModeChangeSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3677128);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for ConversationController.CameraStartPolicy()
{
}

void *initializeBufferWithCopyOfBuffer for ConversationController.ParticipantInfo(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = type metadata accessor for Participant.State(0);
    int v8 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      switch(v8)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
          uint64_t v9 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
          goto LABEL_26;
        case 4:
          uint64_t v12 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v14 = *(int *)(v13 + 48);
          uint64_t v15 = (char *)a1 + v14;
          uint64_t v16 = (char *)a2 + v14;
          *(_OWORD *)uint64_t v15 = *(_OWORD *)((char *)a2 + v14);
          uint64_t v17 = *(void *)((char *)a2 + v14 + 16);
          uint64_t v18 = *(void *)((char *)a2 + v14 + 24);
          *((void *)v15 + 2) = v17;
          *((void *)v15 + 3) = v18;
          *((_WORD *)v15 + 16) = *((_WORD *)v16 + 16);
          *((void *)v15 + 5) = *((void *)v16 + 5);
          v15[48] = v16[48];
          *(_OWORD *)(v15 + 56) = *(_OWORD *)(v16 + 56);
          *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
          v15[88] = v16[88];
          v15[89] = v16[89];
          uint64_t v19 = *((void *)v16 + 15);
          swift_bridgeObjectRetain();
          if (v19)
          {
            if (v19 == 1)
            {
              uint64_t v20 = v15 + 96;
              uint64_t v21 = v16 + 96;
              size_t v22 = 209;
              goto LABEL_20;
            }
            uint64_t v36 = *((void *)v16 + 16);
            *((void *)v15 + 15) = v19;
            *((void *)v15 + 16) = v36;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8))((uint64_t)(v15 + 96), (uint64_t)(v16 + 96), v19);
          }
          else
          {
            long long v34 = *((_OWORD *)v16 + 7);
            *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
            *((_OWORD *)v15 + 7) = v34;
            *((void *)v15 + 16) = *((void *)v16 + 16);
          }
          *((_DWORD *)v15 + 34) = *((_DWORD *)v16 + 34);
          long long v37 = *((_OWORD *)v16 + 10);
          *((_OWORD *)v15 + 9) = *((_OWORD *)v16 + 9);
          *((_OWORD *)v15 + 10) = v37;
          *((_OWORD *)v15 + 11) = *((_OWORD *)v16 + 11);
          v15[192] = v16[192];
          uint64_t v20 = v15 + 208;
          uint64_t v21 = v16 + 208;
          *((void *)v15 + 25) = *((void *)v16 + 25);
          size_t v22 = 97;
LABEL_20:
          memcpy(v20, v21, v22);
          uint64_t v38 = *((void *)v16 + 39);
          if (v38)
          {
            uint64_t v39 = *((void *)v16 + 40);
            uint64_t v40 = *((void *)v16 + 41);
            *((void *)v15 + 39) = v38;
            *((void *)v15 + 40) = v39;
            *((void *)v15 + 41) = v40;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v15 + 312) = *(_OWORD *)(v16 + 312);
            *((void *)v15 + 41) = *((void *)v16 + 41);
          }
          uint64_t v41 = *(int *)(v13 + 64);
          uint64_t v42 = (char *)a1 + v41;
          uint64_t v43 = (char *)a2 + v41;
          uint64_t v44 = *((void *)v43 + 1);
          if (v44)
          {
            *(void *)uint64_t v42 = *(void *)v43;
            *((void *)v42 + 1) = v44;
            uint64_t v45 = *((void *)v43 + 3);
            *((void *)v42 + 2) = *((void *)v43 + 2);
            *((void *)v42 + 3) = v45;
            v42[32] = v43[32];
            *(_OWORD *)(v42 + 40) = *(_OWORD *)(v43 + 40);
            *((void *)v42 + 7) = *((void *)v43 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v46 = *((_OWORD *)v43 + 1);
            *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
            *((_OWORD *)v42 + 1) = v46;
            long long v47 = *((_OWORD *)v43 + 3);
            *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
            *((_OWORD *)v42 + 3) = v47;
          }
LABEL_26:
          swift_storeEnumTagMultiPayload();
LABEL_27:
          uint64_t v48 = (int *)type metadata accessor for Participant(0);
          uint64_t v49 = v48[5];
          uint64_t v50 = (char *)a1 + v49;
          uint64_t v51 = (char *)a2 + v49;
          uint64_t v52 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
          uint64_t v53 = v48[6];
          uint64_t v54 = (char *)a1 + v53;
          uint64_t v55 = (char *)a2 + v53;
          v54[4] = v55[4];
          *(_DWORD *)uint64_t v54 = *(_DWORD *)v55;
          uint64_t v56 = v48[7];
          uint64_t v57 = (char *)a1 + v56;
          uint64_t v58 = (char *)a2 + v56;
          uint64_t v59 = *(void **)v58;
          if (*(void *)v58)
          {
            uint64_t v60 = *((void *)v58 + 1);
            *(void *)uint64_t v57 = v59;
            *((void *)v57 + 1) = v60;
            v57[16] = v58[16];
            uint64_t v61 = *((void *)v58 + 4);
            *((void *)v57 + 3) = *((void *)v58 + 3);
            *((void *)v57 + 4) = v61;
            id v62 = v59;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v63 = *((_OWORD *)v58 + 1);
            *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
            *((_OWORD *)v57 + 1) = v63;
            *((void *)v57 + 4) = *((void *)v58 + 4);
          }
          *(void *)((char *)a1 + v48[8]) = *(void *)((char *)a2 + v48[8]);
          uint64_t v64 = v48[9];
          uint64_t v65 = (void *)((char *)a1 + v64);
          int v66 = (void *)((char *)a2 + v64);
          uint64_t v67 = v66[1];
          void *v65 = *v66;
          v65[1] = v67;
          *((unsigned char *)a1 + v48[10]) = *((unsigned char *)a2 + v48[10]);
          *(void *)((char *)a1 + v48[11]) = *(void *)((char *)a2 + v48[11]);
          uint64_t v68 = v48[12];
          os_log_type_t v69 = *(void **)((char *)a2 + v68);
          *(void *)((char *)a1 + v68) = v69;
          *((unsigned char *)a1 + v48[13]) = *((unsigned char *)a2 + v48[13]);
          uint64_t v70 = v48[14];
          uint64_t v71 = (char *)a1 + v70;
          uint64_t v72 = (char *)a2 + v70;
          uint64_t v73 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v74 = v69;
          if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73))
          {
            uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
            __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v73);
          }
          uint64_t v76 = type metadata accessor for Participant.CountdownInfo(0);
          uint64_t v77 = *(int *)(v76 + 20);
          uint64_t v78 = &v71[v77];
          __n128 v79 = &v72[v77];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v72[v77], 1, v73))
          {
            uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v78, v79, v73);
            __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v73);
          }
          v71[*(int *)(v76 + 24)] = v72[*(int *)(v76 + 24)];
          *((unsigned char *)a1 + v48[15]) = *((unsigned char *)a2 + v48[15]);
          *(void *)((char *)a1 + v48[16]) = *(void *)((char *)a2 + v48[16]);
          swift_retain();
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int));
          *(void *)((char *)a1 + *(int *)(v81 + 48)) = *(void *)((char *)a2 + *(int *)(v81 + 48));
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          goto LABEL_27;
      }
    }
    else
    {
      switch(v8)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
          uint64_t v11 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          goto LABEL_45;
        case 4:
          uint64_t v23 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v25 = *(int *)(v24 + 48);
          uint64_t v26 = (char *)a1 + v25;
          uint64_t v27 = (char *)a2 + v25;
          *(_OWORD *)uint64_t v26 = *(_OWORD *)((char *)a2 + v25);
          uint64_t v28 = *(void *)((char *)a2 + v25 + 16);
          uint64_t v29 = *(void *)((char *)a2 + v25 + 24);
          *((void *)v26 + 2) = v28;
          *((void *)v26 + 3) = v29;
          *((_WORD *)v26 + 16) = *((_WORD *)v27 + 16);
          *((void *)v26 + 5) = *((void *)v27 + 5);
          v26[48] = v27[48];
          *(_OWORD *)(v26 + 56) = *(_OWORD *)(v27 + 56);
          *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
          v26[88] = v27[88];
          v26[89] = v27[89];
          uint64_t v30 = *((void *)v27 + 15);
          swift_bridgeObjectRetain();
          if (v30)
          {
            if (v30 == 1)
            {
              os_log_type_t v31 = v26 + 96;
              BOOL v32 = v27 + 96;
              size_t v33 = 209;
              goto LABEL_39;
            }
            uint64_t v82 = *((void *)v27 + 16);
            *((void *)v26 + 15) = v30;
            *((void *)v26 + 16) = v82;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v30 - 8))((uint64_t)(v26 + 96), (uint64_t)(v27 + 96), v30);
          }
          else
          {
            long long v35 = *((_OWORD *)v27 + 7);
            *((_OWORD *)v26 + 6) = *((_OWORD *)v27 + 6);
            *((_OWORD *)v26 + 7) = v35;
            *((void *)v26 + 16) = *((void *)v27 + 16);
          }
          *((_DWORD *)v26 + 34) = *((_DWORD *)v27 + 34);
          long long v83 = *((_OWORD *)v27 + 10);
          *((_OWORD *)v26 + 9) = *((_OWORD *)v27 + 9);
          *((_OWORD *)v26 + 10) = v83;
          *((_OWORD *)v26 + 11) = *((_OWORD *)v27 + 11);
          v26[192] = v27[192];
          os_log_type_t v31 = v26 + 208;
          BOOL v32 = v27 + 208;
          *((void *)v26 + 25) = *((void *)v27 + 25);
          size_t v33 = 97;
LABEL_39:
          memcpy(v31, v32, v33);
          uint64_t v84 = *((void *)v27 + 39);
          if (v84)
          {
            uint64_t v85 = *((void *)v27 + 40);
            uint64_t v86 = *((void *)v27 + 41);
            *((void *)v26 + 39) = v84;
            *((void *)v26 + 40) = v85;
            *((void *)v26 + 41) = v86;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v26 + 312) = *(_OWORD *)(v27 + 312);
            *((void *)v26 + 41) = *((void *)v27 + 41);
          }
          uint64_t v87 = *(int *)(v24 + 64);
          uint64_t v88 = (char *)a1 + v87;
          uint64_t v89 = (char *)a2 + v87;
          uint64_t v90 = *((void *)v89 + 1);
          if (v90)
          {
            *(void *)uint64_t v88 = *(void *)v89;
            *((void *)v88 + 1) = v90;
            uint64_t v91 = *((void *)v89 + 3);
            *((void *)v88 + 2) = *((void *)v89 + 2);
            *((void *)v88 + 3) = v91;
            v88[32] = v89[32];
            *(_OWORD *)(v88 + 40) = *(_OWORD *)(v89 + 40);
            *((void *)v88 + 7) = *((void *)v89 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v92 = *((_OWORD *)v89 + 1);
            *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
            *((_OWORD *)v88 + 1) = v92;
            long long v93 = *((_OWORD *)v89 + 3);
            *((_OWORD *)v88 + 2) = *((_OWORD *)v89 + 2);
            *((_OWORD *)v88 + 3) = v93;
          }
LABEL_45:
          swift_storeEnumTagMultiPayload();
LABEL_46:
          uint64_t v94 = (int *)type metadata accessor for Participant(0);
          uint64_t v95 = v94[5];
          uint64_t v96 = (char *)a1 + v95;
          uint64_t v97 = (char *)a2 + v95;
          uint64_t v98 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
          uint64_t v99 = v94[6];
          uint64_t v100 = (char *)a1 + v99;
          uint64_t v101 = (char *)a2 + v99;
          v100[4] = v101[4];
          *(_DWORD *)uint64_t v100 = *(_DWORD *)v101;
          uint64_t v102 = v94[7];
          uint64_t v103 = (char *)a1 + v102;
          uint64_t v104 = (char *)a2 + v102;
          uint64_t v105 = *(void **)v104;
          if (*(void *)v104)
          {
            uint64_t v106 = *((void *)v104 + 1);
            *(void *)uint64_t v103 = v105;
            *((void *)v103 + 1) = v106;
            v103[16] = v104[16];
            uint64_t v107 = *((void *)v104 + 4);
            *((void *)v103 + 3) = *((void *)v104 + 3);
            *((void *)v103 + 4) = v107;
            id v108 = v105;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v109 = *((_OWORD *)v104 + 1);
            *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
            *((_OWORD *)v103 + 1) = v109;
            *((void *)v103 + 4) = *((void *)v104 + 4);
          }
          *(void *)((char *)a1 + v94[8]) = *(void *)((char *)a2 + v94[8]);
          uint64_t v110 = v94[9];
          uint64_t v111 = (void *)((char *)a1 + v110);
          unint64_t v112 = (void *)((char *)a2 + v110);
          uint64_t v113 = v112[1];
          *uint64_t v111 = *v112;
          v111[1] = v113;
          *((unsigned char *)a1 + v94[10]) = *((unsigned char *)a2 + v94[10]);
          *(void *)((char *)a1 + v94[11]) = *(void *)((char *)a2 + v94[11]);
          uint64_t v114 = v94[12];
          uint64_t v115 = *(void **)((char *)a2 + v114);
          *(void *)((char *)a1 + v114) = v115;
          *((unsigned char *)a1 + v94[13]) = *((unsigned char *)a2 + v94[13]);
          uint64_t v116 = v94[14];
          uint64_t v117 = (char *)a1 + v116;
          uint64_t v118 = (char *)a2 + v116;
          uint64_t v119 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v120 = v115;
          if (__swift_getEnumTagSinglePayload((uint64_t)v118, 1, v119))
          {
            uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v117, v118, *(void *)(*(void *)(v121 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
            __swift_storeEnumTagSinglePayload((uint64_t)v117, 0, 1, v119);
          }
          uint64_t v122 = type metadata accessor for Participant.CountdownInfo(0);
          uint64_t v123 = *(int *)(v122 + 20);
          uint64_t v124 = &v117[v123];
          uint64_t v125 = &v118[v123];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v118[v123], 1, v119))
          {
            uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v124, v125, v119);
            __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v119);
          }
          v117[*(int *)(v122 + 24)] = v118[*(int *)(v122 + 24)];
          *((unsigned char *)a1 + v94[15]) = *((unsigned char *)a2 + v94[15]);
          *(void *)((char *)a1 + v94[16]) = *(void *)((char *)a2 + v94[16]);
          swift_retain();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          goto LABEL_46;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ConversationController.ParticipantInfo(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  type metadata accessor for Participant.State(0);
  int v3 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v3)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 5:
        goto LABEL_3;
      case 4:
        goto LABEL_14;
      default:
        break;
    }
  }
  else
  {
    switch(v3)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 5:
LABEL_3:
        uint64_t v4 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
        break;
      case 4:
LABEL_14:
        uint64_t v13 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v15 = a1 + *(int *)(v14 + 48);
        swift_bridgeObjectRelease();
        if (*(void *)(v15 + 120) >= 2uLL) {
          __swift_destroy_boxed_opaque_existential_1(v15 + 96);
        }
        if (*(void *)(v15 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + *(int *)(v14 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
  }
  int v5 = (int *)type metadata accessor for Participant(0);
  uint64_t v6 = a1 + v5[5];
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  int v8 = (id *)(a1 + v5[7]);
  if (*v8)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v9 = a1 + v5[14];
  uint64_t v10 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = v9 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v11, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v11, v10);
  }
  return swift_release();
}

unsigned char *initializeWithCopy for ConversationController.ParticipantInfo(unsigned char *a1, unsigned char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for Participant.State(0);
  int v6 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v6)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 5:
        uint64_t v7 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_23;
      case 4:
        uint64_t v9 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v11 = *(int *)(v10 + 48);
        uint64_t v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        *(_OWORD *)uint64_t v12 = *(_OWORD *)&a2[v11];
        uint64_t v14 = *(void *)&a2[v11 + 16];
        uint64_t v15 = *(void *)&a2[v11 + 24];
        *((void *)v12 + 2) = v14;
        *((void *)v12 + 3) = v15;
        *((_WORD *)v12 + 16) = *((_WORD *)v13 + 16);
        *((void *)v12 + 5) = *((void *)v13 + 5);
        v12[48] = v13[48];
        *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
        *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
        v12[88] = v13[88];
        v12[89] = v13[89];
        uint64_t v16 = *((void *)v13 + 15);
        swift_bridgeObjectRetain();
        if (v16)
        {
          if (v16 == 1)
          {
            uint64_t v17 = v12 + 96;
            uint64_t v18 = v13 + 96;
            size_t v19 = 209;
            goto LABEL_17;
          }
          uint64_t v32 = *((void *)v13 + 16);
          *((void *)v12 + 15) = v16;
          *((void *)v12 + 16) = v32;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))((uint64_t)(v12 + 96), (uint64_t)(v13 + 96), v16);
        }
        else
        {
          long long v31 = *((_OWORD *)v13 + 7);
          *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
          *((_OWORD *)v12 + 7) = v31;
          *((void *)v12 + 16) = *((void *)v13 + 16);
        }
        *((_DWORD *)v12 + 34) = *((_DWORD *)v13 + 34);
        long long v33 = *((_OWORD *)v13 + 10);
        *((_OWORD *)v12 + 9) = *((_OWORD *)v13 + 9);
        *((_OWORD *)v12 + 10) = v33;
        *((_OWORD *)v12 + 11) = *((_OWORD *)v13 + 11);
        v12[192] = v13[192];
        uint64_t v17 = v12 + 208;
        uint64_t v18 = v13 + 208;
        *((void *)v12 + 25) = *((void *)v13 + 25);
        size_t v19 = 97;
LABEL_17:
        memcpy(v17, v18, v19);
        uint64_t v34 = *((void *)v13 + 39);
        if (v34)
        {
          uint64_t v35 = *((void *)v13 + 40);
          uint64_t v36 = *((void *)v13 + 41);
          *((void *)v12 + 39) = v34;
          *((void *)v12 + 40) = v35;
          *((void *)v12 + 41) = v36;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v12 + 312) = *(_OWORD *)(v13 + 312);
          *((void *)v12 + 41) = *((void *)v13 + 41);
        }
        uint64_t v37 = *(int *)(v10 + 64);
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        uint64_t v40 = *((void *)v39 + 1);
        if (v40)
        {
          *(void *)uint64_t v38 = *(void *)v39;
          *((void *)v38 + 1) = v40;
          uint64_t v41 = *((void *)v39 + 3);
          *((void *)v38 + 2) = *((void *)v39 + 2);
          *((void *)v38 + 3) = v41;
          v38[32] = v39[32];
          *(_OWORD *)(v38 + 40) = *(_OWORD *)(v39 + 40);
          *((void *)v38 + 7) = *((void *)v39 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v42 = *((_OWORD *)v39 + 1);
          *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
          *((_OWORD *)v38 + 1) = v42;
          long long v43 = *((_OWORD *)v39 + 3);
          *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
          *((_OWORD *)v38 + 3) = v43;
        }
LABEL_23:
        swift_storeEnumTagMultiPayload();
LABEL_24:
        uint64_t v44 = (int *)type metadata accessor for Participant(0);
        uint64_t v45 = v44[5];
        long long v46 = &a1[v45];
        long long v47 = &a2[v45];
        uint64_t v48 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
        uint64_t v49 = v44[6];
        uint64_t v50 = &a1[v49];
        uint64_t v51 = &a2[v49];
        v50[4] = v51[4];
        *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
        uint64_t v52 = v44[7];
        uint64_t v53 = &a1[v52];
        uint64_t v54 = &a2[v52];
        uint64_t v55 = *(void **)v54;
        if (*(void *)v54)
        {
          uint64_t v56 = *((void *)v54 + 1);
          *(void *)uint64_t v53 = v55;
          *((void *)v53 + 1) = v56;
          v53[16] = v54[16];
          uint64_t v57 = *((void *)v54 + 4);
          *((void *)v53 + 3) = *((void *)v54 + 3);
          *((void *)v53 + 4) = v57;
          id v58 = v55;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v59 = *((_OWORD *)v54 + 1);
          *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
          *((_OWORD *)v53 + 1) = v59;
          *((void *)v53 + 4) = *((void *)v54 + 4);
        }
        *(void *)&a1[v44[8]] = *(void *)&a2[v44[8]];
        uint64_t v60 = v44[9];
        uint64_t v61 = &a1[v60];
        id v62 = &a2[v60];
        uint64_t v63 = v62[1];
        *uint64_t v61 = *v62;
        v61[1] = v63;
        a1[v44[10]] = a2[v44[10]];
        *(void *)&a1[v44[11]] = *(void *)&a2[v44[11]];
        uint64_t v64 = v44[12];
        uint64_t v65 = *(void **)&a2[v64];
        *(void *)&a1[v64] = v65;
        a1[v44[13]] = a2[v44[13]];
        uint64_t v66 = v44[14];
        uint64_t v67 = &a1[v66];
        uint64_t v68 = &a2[v66];
        uint64_t v69 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v70 = v65;
        if (__swift_getEnumTagSinglePayload((uint64_t)v68, 1, v69))
        {
          uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
          __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v69);
        }
        uint64_t v72 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v73 = *(int *)(v72 + 20);
        id v74 = &v67[v73];
        uint64_t v75 = &v68[v73];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v73], 1, v69))
        {
          uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v74, v75, v69);
          __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v69);
        }
        v67[*(int *)(v72 + 24)] = v68[*(int *)(v72 + 24)];
        a1[v44[15]] = a2[v44[15]];
        *(void *)&a1[v44[16]] = *(void *)&a2[v44[16]];
        swift_retain();
        uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int));
        *(void *)&a1[*(int *)(v77 + 48)] = *(void *)&a2[*(int *)(v77 + 48)];
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
        goto LABEL_24;
    }
  }
  else
  {
    switch(v6)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 5:
        uint64_t v8 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_43;
      case 4:
        uint64_t v20 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v22 = *(int *)(v21 + 48);
        uint64_t v23 = &a1[v22];
        uint64_t v24 = &a2[v22];
        *(_OWORD *)uint64_t v23 = *(_OWORD *)&a2[v22];
        uint64_t v25 = *(void *)&a2[v22 + 16];
        uint64_t v26 = *(void *)&a2[v22 + 24];
        *((void *)v23 + 2) = v25;
        *((void *)v23 + 3) = v26;
        *((_WORD *)v23 + 16) = *((_WORD *)v24 + 16);
        *((void *)v23 + 5) = *((void *)v24 + 5);
        v23[48] = v24[48];
        *(_OWORD *)(v23 + 56) = *(_OWORD *)(v24 + 56);
        *(_OWORD *)(v23 + 72) = *(_OWORD *)(v24 + 72);
        v23[88] = v24[88];
        v23[89] = v24[89];
        uint64_t v27 = *((void *)v24 + 15);
        swift_bridgeObjectRetain();
        if (v27)
        {
          if (v27 == 1)
          {
            uint64_t v28 = v23 + 96;
            uint64_t v29 = v24 + 96;
            size_t v30 = 209;
            goto LABEL_37;
          }
          uint64_t v79 = *((void *)v24 + 16);
          *((void *)v23 + 15) = v27;
          *((void *)v23 + 16) = v79;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))((uint64_t)(v23 + 96), (uint64_t)(v24 + 96), v27);
        }
        else
        {
          long long v78 = *((_OWORD *)v24 + 7);
          *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
          *((_OWORD *)v23 + 7) = v78;
          *((void *)v23 + 16) = *((void *)v24 + 16);
        }
        *((_DWORD *)v23 + 34) = *((_DWORD *)v24 + 34);
        long long v80 = *((_OWORD *)v24 + 10);
        *((_OWORD *)v23 + 9) = *((_OWORD *)v24 + 9);
        *((_OWORD *)v23 + 10) = v80;
        *((_OWORD *)v23 + 11) = *((_OWORD *)v24 + 11);
        v23[192] = v24[192];
        uint64_t v28 = v23 + 208;
        uint64_t v29 = v24 + 208;
        *((void *)v23 + 25) = *((void *)v24 + 25);
        size_t v30 = 97;
LABEL_37:
        memcpy(v28, v29, v30);
        uint64_t v81 = *((void *)v24 + 39);
        if (v81)
        {
          uint64_t v82 = *((void *)v24 + 40);
          uint64_t v83 = *((void *)v24 + 41);
          *((void *)v23 + 39) = v81;
          *((void *)v23 + 40) = v82;
          *((void *)v23 + 41) = v83;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v23 + 312) = *(_OWORD *)(v24 + 312);
          *((void *)v23 + 41) = *((void *)v24 + 41);
        }
        uint64_t v84 = *(int *)(v21 + 64);
        uint64_t v85 = &a1[v84];
        uint64_t v86 = &a2[v84];
        uint64_t v87 = *((void *)v86 + 1);
        if (v87)
        {
          *(void *)uint64_t v85 = *(void *)v86;
          *((void *)v85 + 1) = v87;
          uint64_t v88 = *((void *)v86 + 3);
          *((void *)v85 + 2) = *((void *)v86 + 2);
          *((void *)v85 + 3) = v88;
          v85[32] = v86[32];
          *(_OWORD *)(v85 + 40) = *(_OWORD *)(v86 + 40);
          *((void *)v85 + 7) = *((void *)v86 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v89 = *((_OWORD *)v86 + 1);
          *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
          *((_OWORD *)v85 + 1) = v89;
          long long v90 = *((_OWORD *)v86 + 3);
          *((_OWORD *)v85 + 2) = *((_OWORD *)v86 + 2);
          *((_OWORD *)v85 + 3) = v90;
        }
LABEL_43:
        swift_storeEnumTagMultiPayload();
LABEL_44:
        uint64_t v91 = (int *)type metadata accessor for Participant(0);
        uint64_t v92 = v91[5];
        long long v93 = &a1[v92];
        uint64_t v94 = &a2[v92];
        uint64_t v95 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
        uint64_t v96 = v91[6];
        uint64_t v97 = &a1[v96];
        uint64_t v98 = &a2[v96];
        v97[4] = v98[4];
        *(_DWORD *)uint64_t v97 = *(_DWORD *)v98;
        uint64_t v99 = v91[7];
        uint64_t v100 = &a1[v99];
        uint64_t v101 = &a2[v99];
        uint64_t v102 = *(void **)v101;
        if (*(void *)v101)
        {
          uint64_t v103 = *((void *)v101 + 1);
          *(void *)uint64_t v100 = v102;
          *((void *)v100 + 1) = v103;
          v100[16] = v101[16];
          uint64_t v104 = *((void *)v101 + 4);
          *((void *)v100 + 3) = *((void *)v101 + 3);
          *((void *)v100 + 4) = v104;
          id v105 = v102;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v106 = *((_OWORD *)v101 + 1);
          *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
          *((_OWORD *)v100 + 1) = v106;
          *((void *)v100 + 4) = *((void *)v101 + 4);
        }
        *(void *)&a1[v91[8]] = *(void *)&a2[v91[8]];
        uint64_t v107 = v91[9];
        id v108 = &a1[v107];
        long long v109 = &a2[v107];
        uint64_t v110 = v109[1];
        *id v108 = *v109;
        v108[1] = v110;
        a1[v91[10]] = a2[v91[10]];
        *(void *)&a1[v91[11]] = *(void *)&a2[v91[11]];
        uint64_t v111 = v91[12];
        unint64_t v112 = *(void **)&a2[v111];
        *(void *)&a1[v111] = v112;
        a1[v91[13]] = a2[v91[13]];
        uint64_t v113 = v91[14];
        uint64_t v114 = &a1[v113];
        uint64_t v115 = &a2[v113];
        uint64_t v116 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v117 = v112;
        if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v116))
        {
          uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v114, v115, *(void *)(*(void *)(v118 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
          __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v116);
        }
        uint64_t v119 = type metadata accessor for Participant.CountdownInfo(0);
        uint64_t v120 = *(int *)(v119 + 20);
        uint64_t v121 = &v114[v120];
        uint64_t v122 = &v115[v120];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v115[v120], 1, v116))
        {
          uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v121, v122, v116);
          __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v116);
        }
        v114[*(int *)(v119 + 24)] = v115[*(int *)(v119 + 24)];
        a1[v91[15]] = a2[v91[15]];
        *(void *)&a1[v91[16]] = *(void *)&a2[v91[16]];
        swift_retain();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
        goto LABEL_44;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithCopy for ConversationController.ParticipantInfo(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)a1, (void (*)(void))type metadata accessor for ConversationController.ParticipantInfo);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for Participant.State(0);
    int v6 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      switch(v6)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
          uint64_t v7 = type metadata accessor for Date();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
          goto LABEL_24;
        case 4:
          uint64_t v9 = type metadata accessor for Date();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
          uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v11 = *(int *)(v10 + 48);
          uint64_t v12 = &a1[v11];
          uint64_t v13 = &a2[v11];
          *(_OWORD *)uint64_t v12 = *(_OWORD *)&a2[v11];
          *((void *)v12 + 2) = *(void *)&a2[v11 + 16];
          uint64_t v14 = *(void *)&a2[v11 + 24];
          *((_WORD *)v12 + 16) = *((_WORD *)v13 + 16);
          *((void *)v12 + 3) = v14;
          *((void *)v12 + 5) = *((void *)v13 + 5);
          v12[48] = v13[48];
          long long v15 = *(_OWORD *)(v13 + 72);
          long long v16 = *(_OWORD *)(v13 + 56);
          v12[88] = v13[88];
          *(_OWORD *)(v12 + 56) = v16;
          *(_OWORD *)(v12 + 72) = v15;
          v12[89] = v13[89];
          uint64_t v17 = *((void *)v13 + 15);
          swift_bridgeObjectRetain();
          if (v17)
          {
            if (v17 == 1)
            {
              uint64_t v18 = v12 + 96;
              size_t v19 = v13 + 96;
              size_t v20 = 209;
              goto LABEL_18;
            }
            *((void *)v12 + 15) = v17;
            *((void *)v12 + 16) = *((void *)v13 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))((uint64_t)(v12 + 96), (uint64_t)(v13 + 96), v17);
          }
          else
          {
            long long v33 = *((_OWORD *)v13 + 6);
            long long v34 = *((_OWORD *)v13 + 7);
            *((void *)v12 + 16) = *((void *)v13 + 16);
            *((_OWORD *)v12 + 6) = v33;
            *((_OWORD *)v12 + 7) = v34;
          }
          *((_DWORD *)v12 + 34) = *((_DWORD *)v13 + 34);
          *((void *)v12 + 18) = *((void *)v13 + 18);
          *((void *)v12 + 19) = *((void *)v13 + 19);
          long long v35 = *((_OWORD *)v13 + 10);
          long long v36 = *((_OWORD *)v13 + 11);
          v12[192] = v13[192];
          *((_OWORD *)v12 + 10) = v35;
          *((_OWORD *)v12 + 11) = v36;
          *((void *)v12 + 25) = *((void *)v13 + 25);
          uint64_t v18 = v12 + 208;
          size_t v19 = v13 + 208;
          size_t v20 = 97;
LABEL_18:
          memcpy(v18, v19, v20);
          uint64_t v37 = *((void *)v13 + 39);
          if (v37)
          {
            uint64_t v38 = *((void *)v13 + 40);
            *((void *)v12 + 39) = v37;
            *((void *)v12 + 40) = v38;
            *((void *)v12 + 41) = *((void *)v13 + 41);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v39 = *(_OWORD *)(v13 + 312);
            *((void *)v12 + 41) = *((void *)v13 + 41);
            *(_OWORD *)(v12 + 312) = v39;
          }
          uint64_t v40 = *(int *)(v10 + 64);
          uint64_t v41 = &a1[v40];
          long long v42 = &a2[v40];
          if (*((void *)v42 + 1))
          {
            *(void *)uint64_t v41 = *(void *)v42;
            *((void *)v41 + 1) = *((void *)v42 + 1);
            *((void *)v41 + 2) = *((void *)v42 + 2);
            *((void *)v41 + 3) = *((void *)v42 + 3);
            v41[32] = v42[32];
            *((void *)v41 + 5) = *((void *)v42 + 5);
            *((void *)v41 + 6) = *((void *)v42 + 6);
            *((void *)v41 + 7) = *((void *)v42 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v43 = *(_OWORD *)v42;
            long long v44 = *((_OWORD *)v42 + 1);
            long long v45 = *((_OWORD *)v42 + 3);
            *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
            *((_OWORD *)v41 + 3) = v45;
            *(_OWORD *)uint64_t v41 = v43;
            *((_OWORD *)v41 + 1) = v44;
          }
LABEL_24:
          swift_storeEnumTagMultiPayload();
LABEL_25:
          long long v46 = (int *)type metadata accessor for Participant(0);
          uint64_t v47 = v46[5];
          uint64_t v48 = &a1[v47];
          uint64_t v49 = &a2[v47];
          uint64_t v50 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
          uint64_t v51 = v46[6];
          uint64_t v52 = &a1[v51];
          uint64_t v53 = &a2[v51];
          int v54 = *(_DWORD *)v53;
          v52[4] = v53[4];
          *(_DWORD *)uint64_t v52 = v54;
          uint64_t v55 = v46[7];
          uint64_t v56 = &a1[v55];
          uint64_t v57 = &a2[v55];
          id v58 = *(void **)v57;
          if (*(void *)v57)
          {
            *(void *)uint64_t v56 = v58;
            uint64_t v59 = *((void *)v57 + 1);
            v56[16] = v57[16];
            *((void *)v56 + 1) = v59;
            *((void *)v56 + 3) = *((void *)v57 + 3);
            *((void *)v56 + 4) = *((void *)v57 + 4);
            id v60 = v58;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v61 = *(_OWORD *)v57;
            long long v62 = *((_OWORD *)v57 + 1);
            *((void *)v56 + 4) = *((void *)v57 + 4);
            *(_OWORD *)uint64_t v56 = v61;
            *((_OWORD *)v56 + 1) = v62;
          }
          *(void *)&a1[v46[8]] = *(void *)&a2[v46[8]];
          uint64_t v63 = v46[9];
          uint64_t v64 = &a1[v63];
          uint64_t v65 = &a2[v63];
          *uint64_t v64 = *v65;
          v64[1] = v65[1];
          a1[v46[10]] = a2[v46[10]];
          *(void *)&a1[v46[11]] = *(void *)&a2[v46[11]];
          uint64_t v66 = v46[12];
          uint64_t v67 = *(void **)&a2[v66];
          *(void *)&a1[v66] = v67;
          a1[v46[13]] = a2[v46[13]];
          uint64_t v68 = v46[14];
          uint64_t v69 = &a1[v68];
          id v70 = &a2[v68];
          uint64_t v71 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v72 = v67;
          if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71))
          {
            uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
            __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v71);
          }
          uint64_t v74 = type metadata accessor for Participant.CountdownInfo(0);
          uint64_t v75 = *(int *)(v74 + 20);
          uint64_t v76 = &v69[v75];
          uint64_t v77 = &v70[v75];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v70[v75], 1, v71))
          {
            uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v76, v77, v71);
            __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v71);
          }
          v69[*(int *)(v74 + 24)] = v70[*(int *)(v74 + 24)];
          a1[v46[15]] = a2[v46[15]];
          *(void *)&a1[v46[16]] = *(void *)&a2[v46[16]];
          swift_retain();
          uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int));
          *(void *)&a1[*(int *)(v79 + 48)] = *(void *)&a2[*(int *)(v79 + 48)];
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
          goto LABEL_25;
      }
    }
    else
    {
      switch(v6)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
          uint64_t v8 = type metadata accessor for Date();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
          goto LABEL_44;
        case 4:
          uint64_t v21 = type metadata accessor for Date();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          uint64_t v23 = *(int *)(v22 + 48);
          uint64_t v24 = &a1[v23];
          uint64_t v25 = &a2[v23];
          *(_OWORD *)uint64_t v24 = *(_OWORD *)&a2[v23];
          *((void *)v24 + 2) = *(void *)&a2[v23 + 16];
          uint64_t v26 = *(void *)&a2[v23 + 24];
          *((_WORD *)v24 + 16) = *((_WORD *)v25 + 16);
          *((void *)v24 + 3) = v26;
          *((void *)v24 + 5) = *((void *)v25 + 5);
          v24[48] = v25[48];
          long long v27 = *(_OWORD *)(v25 + 72);
          long long v28 = *(_OWORD *)(v25 + 56);
          v24[88] = v25[88];
          *(_OWORD *)(v24 + 56) = v28;
          *(_OWORD *)(v24 + 72) = v27;
          v24[89] = v25[89];
          uint64_t v29 = *((void *)v25 + 15);
          swift_bridgeObjectRetain();
          if (v29)
          {
            if (v29 == 1)
            {
              size_t v30 = v24 + 96;
              long long v31 = v25 + 96;
              size_t v32 = 209;
              goto LABEL_38;
            }
            *((void *)v24 + 15) = v29;
            *((void *)v24 + 16) = *((void *)v25 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v29 - 8))((uint64_t)(v24 + 96), (uint64_t)(v25 + 96), v29);
          }
          else
          {
            long long v80 = *((_OWORD *)v25 + 6);
            long long v81 = *((_OWORD *)v25 + 7);
            *((void *)v24 + 16) = *((void *)v25 + 16);
            *((_OWORD *)v24 + 6) = v80;
            *((_OWORD *)v24 + 7) = v81;
          }
          *((_DWORD *)v24 + 34) = *((_DWORD *)v25 + 34);
          *((void *)v24 + 18) = *((void *)v25 + 18);
          *((void *)v24 + 19) = *((void *)v25 + 19);
          long long v82 = *((_OWORD *)v25 + 10);
          long long v83 = *((_OWORD *)v25 + 11);
          v24[192] = v25[192];
          *((_OWORD *)v24 + 10) = v82;
          *((_OWORD *)v24 + 11) = v83;
          *((void *)v24 + 25) = *((void *)v25 + 25);
          size_t v30 = v24 + 208;
          long long v31 = v25 + 208;
          size_t v32 = 97;
LABEL_38:
          memcpy(v30, v31, v32);
          uint64_t v84 = *((void *)v25 + 39);
          if (v84)
          {
            uint64_t v85 = *((void *)v25 + 40);
            *((void *)v24 + 39) = v84;
            *((void *)v24 + 40) = v85;
            *((void *)v24 + 41) = *((void *)v25 + 41);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v86 = *(_OWORD *)(v25 + 312);
            *((void *)v24 + 41) = *((void *)v25 + 41);
            *(_OWORD *)(v24 + 312) = v86;
          }
          uint64_t v87 = *(int *)(v22 + 64);
          uint64_t v88 = &a1[v87];
          long long v89 = &a2[v87];
          if (*((void *)v89 + 1))
          {
            *(void *)uint64_t v88 = *(void *)v89;
            *((void *)v88 + 1) = *((void *)v89 + 1);
            *((void *)v88 + 2) = *((void *)v89 + 2);
            *((void *)v88 + 3) = *((void *)v89 + 3);
            v88[32] = v89[32];
            *((void *)v88 + 5) = *((void *)v89 + 5);
            *((void *)v88 + 6) = *((void *)v89 + 6);
            *((void *)v88 + 7) = *((void *)v89 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v90 = *(_OWORD *)v89;
            long long v91 = *((_OWORD *)v89 + 1);
            long long v92 = *((_OWORD *)v89 + 3);
            *((_OWORD *)v88 + 2) = *((_OWORD *)v89 + 2);
            *((_OWORD *)v88 + 3) = v92;
            *(_OWORD *)uint64_t v88 = v90;
            *((_OWORD *)v88 + 1) = v91;
          }
LABEL_44:
          swift_storeEnumTagMultiPayload();
LABEL_45:
          long long v93 = (int *)type metadata accessor for Participant(0);
          uint64_t v94 = v93[5];
          uint64_t v95 = &a1[v94];
          uint64_t v96 = &a2[v94];
          uint64_t v97 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
          uint64_t v98 = v93[6];
          uint64_t v99 = &a1[v98];
          uint64_t v100 = &a2[v98];
          int v101 = *(_DWORD *)v100;
          v99[4] = v100[4];
          *(_DWORD *)uint64_t v99 = v101;
          uint64_t v102 = v93[7];
          uint64_t v103 = &a1[v102];
          uint64_t v104 = &a2[v102];
          id v105 = *(void **)v104;
          if (*(void *)v104)
          {
            *(void *)uint64_t v103 = v105;
            uint64_t v106 = *((void *)v104 + 1);
            v103[16] = v104[16];
            *((void *)v103 + 1) = v106;
            *((void *)v103 + 3) = *((void *)v104 + 3);
            *((void *)v103 + 4) = *((void *)v104 + 4);
            id v107 = v105;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v108 = *(_OWORD *)v104;
            long long v109 = *((_OWORD *)v104 + 1);
            *((void *)v103 + 4) = *((void *)v104 + 4);
            *(_OWORD *)uint64_t v103 = v108;
            *((_OWORD *)v103 + 1) = v109;
          }
          *(void *)&a1[v93[8]] = *(void *)&a2[v93[8]];
          uint64_t v110 = v93[9];
          uint64_t v111 = &a1[v110];
          unint64_t v112 = &a2[v110];
          *uint64_t v111 = *v112;
          v111[1] = v112[1];
          a1[v93[10]] = a2[v93[10]];
          *(void *)&a1[v93[11]] = *(void *)&a2[v93[11]];
          uint64_t v113 = v93[12];
          uint64_t v114 = *(void **)&a2[v113];
          *(void *)&a1[v113] = v114;
          a1[v93[13]] = a2[v93[13]];
          uint64_t v115 = v93[14];
          uint64_t v116 = &a1[v115];
          id v117 = &a2[v115];
          uint64_t v118 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v119 = v114;
          if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v118))
          {
            uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v116, v117, *(void *)(*(void *)(v120 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
            __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v118);
          }
          uint64_t v121 = type metadata accessor for Participant.CountdownInfo(0);
          uint64_t v122 = *(int *)(v121 + 20);
          uint64_t v123 = &v116[v122];
          uint64_t v124 = &v117[v122];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v117[v122], 1, v118))
          {
            uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v123, v124, v118);
            __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, v118);
          }
          v116[*(int *)(v121 + 24)] = v117[*(int *)(v121 + 24)];
          a1[v93[15]] = a2[v93[15]];
          *(void *)&a1[v93[16]] = *(void *)&a2[v93[16]];
          swift_retain();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
          goto LABEL_45;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for ConversationController.ParticipantInfo(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for Participant.State(0);
  int v6 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v6)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 5:
        uint64_t v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        goto LABEL_7;
      case 4:
        uint64_t v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
        uint64_t v9 = *(int *)(v8 + 64);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        long long v12 = *((_OWORD *)v11 + 1);
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v12;
        long long v13 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v13;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
        break;
    }
    long long v15 = (int *)type metadata accessor for Participant(0);
    uint64_t v16 = v15[5];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    uint64_t v20 = v15[6];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    void v21[4] = v22[4];
    uint64_t v23 = v15[7];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    long long v26 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v26;
    *((void *)v24 + 4) = *((void *)v25 + 4);
    *(void *)&a1[v15[8]] = *(void *)&a2[v15[8]];
    *(_OWORD *)&a1[v15[9]] = *(_OWORD *)&a2[v15[9]];
    a1[v15[10]] = a2[v15[10]];
    *(void *)&a1[v15[11]] = *(void *)&a2[v15[11]];
    *(void *)&a1[v15[12]] = *(void *)&a2[v15[12]];
    a1[v15[13]] = a2[v15[13]];
    uint64_t v27 = v15[14];
    long long v28 = &a1[v27];
    uint64_t v29 = &a2[v27];
    uint64_t v30 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
    }
    uint64_t v32 = type metadata accessor for Participant.CountdownInfo(0);
    uint64_t v33 = *(int *)(v32 + 20);
    long long v34 = &v28[v33];
    long long v35 = &v29[v33];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v29[v33], 1, v30))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v34, v35, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v30);
    }
    v28[*(int *)(v32 + 24)] = v29[*(int *)(v32 + 24)];
    a1[v15[15]] = a2[v15[15]];
    *(void *)&a1[v15[16]] = *(void *)&a2[v15[16]];
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int));
    *(void *)&a1[*(int *)(v37 + 48)] = *(void *)&a2[*(int *)(v37 + 48)];
  }
  else
  {
    switch(v6)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 5:
        uint64_t v45 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
        goto LABEL_18;
      case 4:
        uint64_t v38 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(a1, a2, v38);
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v39 + 48)], &a2[*(int *)(v39 + 48)], 0x150uLL);
        uint64_t v40 = *(int *)(v39 + 64);
        uint64_t v41 = &a1[v40];
        long long v42 = &a2[v40];
        long long v43 = *((_OWORD *)v42 + 1);
        *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
        *((_OWORD *)v41 + 1) = v43;
        long long v44 = *((_OWORD *)v42 + 3);
        *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
        *((_OWORD *)v41 + 3) = v44;
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
        break;
    }
    long long v46 = (int *)type metadata accessor for Participant(0);
    uint64_t v47 = v46[5];
    uint64_t v48 = &a1[v47];
    uint64_t v49 = &a2[v47];
    uint64_t v50 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
    uint64_t v51 = v46[6];
    uint64_t v52 = &a1[v51];
    uint64_t v53 = &a2[v51];
    *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
    v52[4] = v53[4];
    uint64_t v54 = v46[7];
    uint64_t v55 = &a1[v54];
    uint64_t v56 = &a2[v54];
    long long v57 = *((_OWORD *)v56 + 1);
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
    *((_OWORD *)v55 + 1) = v57;
    *((void *)v55 + 4) = *((void *)v56 + 4);
    *(void *)&a1[v46[8]] = *(void *)&a2[v46[8]];
    *(_OWORD *)&a1[v46[9]] = *(_OWORD *)&a2[v46[9]];
    a1[v46[10]] = a2[v46[10]];
    *(void *)&a1[v46[11]] = *(void *)&a2[v46[11]];
    *(void *)&a1[v46[12]] = *(void *)&a2[v46[12]];
    a1[v46[13]] = a2[v46[13]];
    uint64_t v58 = v46[14];
    uint64_t v59 = &a1[v58];
    id v60 = &a2[v58];
    uint64_t v61 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
    {
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
      __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
    }
    uint64_t v63 = type metadata accessor for Participant.CountdownInfo(0);
    uint64_t v64 = *(int *)(v63 + 20);
    uint64_t v65 = &v59[v64];
    uint64_t v66 = &v60[v64];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v60[v64], 1, v61))
    {
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v65, v66, v61);
      __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v61);
    }
    v59[*(int *)(v63 + 24)] = v60[*(int *)(v63 + 24)];
    a1[v46[15]] = a2[v46[15]];
    *(void *)&a1[v46[16]] = *(void *)&a2[v46[16]];
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithTake for ConversationController.ParticipantInfo(char *a1, char *a2)
{
  if (a1 != a2)
  {
    _s15ConversationKit11ParticipantVWOhTm_13((uint64_t)a1, (void (*)(void))type metadata accessor for ConversationController.ParticipantInfo);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for Participant.State(0);
    int v6 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      switch(v6)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
          uint64_t v14 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
          goto LABEL_8;
        case 4:
          uint64_t v7 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
          uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
          uint64_t v9 = *(int *)(v8 + 64);
          uint64_t v10 = &a1[v9];
          uint64_t v11 = &a2[v9];
          long long v12 = *((_OWORD *)v11 + 1);
          *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v12;
          long long v13 = *((_OWORD *)v11 + 3);
          *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
          *((_OWORD *)v10 + 3) = v13;
LABEL_8:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
          break;
      }
      long long v15 = (int *)type metadata accessor for Participant(0);
      uint64_t v16 = v15[5];
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      uint64_t v19 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      uint64_t v20 = v15[6];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
      void v21[4] = v22[4];
      uint64_t v23 = v15[7];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      long long v26 = *((_OWORD *)v25 + 1);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v26;
      *((void *)v24 + 4) = *((void *)v25 + 4);
      *(void *)&a1[v15[8]] = *(void *)&a2[v15[8]];
      *(_OWORD *)&a1[v15[9]] = *(_OWORD *)&a2[v15[9]];
      a1[v15[10]] = a2[v15[10]];
      *(void *)&a1[v15[11]] = *(void *)&a2[v15[11]];
      *(void *)&a1[v15[12]] = *(void *)&a2[v15[12]];
      a1[v15[13]] = a2[v15[13]];
      uint64_t v27 = v15[14];
      long long v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = type metadata accessor for Date();
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
      }
      uint64_t v32 = type metadata accessor for Participant.CountdownInfo(0);
      uint64_t v33 = *(int *)(v32 + 20);
      long long v34 = &v28[v33];
      long long v35 = &v29[v33];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v29[v33], 1, v30))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v34, v35, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v30);
      }
      v28[*(int *)(v32 + 24)] = v29[*(int *)(v32 + 24)];
      a1[v15[15]] = a2[v15[15]];
      *(void *)&a1[v15[16]] = *(void *)&a2[v15[16]];
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int));
      *(void *)&a1[*(int *)(v37 + 48)] = *(void *)&a2[*(int *)(v37 + 48)];
    }
    else
    {
      switch(v6)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
          uint64_t v45 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
          goto LABEL_19;
        case 4:
          uint64_t v38 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(a1, a2, v38);
          uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          memcpy(&a1[*(int *)(v39 + 48)], &a2[*(int *)(v39 + 48)], 0x150uLL);
          uint64_t v40 = *(int *)(v39 + 64);
          uint64_t v41 = &a1[v40];
          long long v42 = &a2[v40];
          long long v43 = *((_OWORD *)v42 + 1);
          *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
          *((_OWORD *)v41 + 1) = v43;
          long long v44 = *((_OWORD *)v42 + 3);
          *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
          *((_OWORD *)v41 + 3) = v44;
LABEL_19:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
          break;
      }
      long long v46 = (int *)type metadata accessor for Participant(0);
      uint64_t v47 = v46[5];
      uint64_t v48 = &a1[v47];
      uint64_t v49 = &a2[v47];
      uint64_t v50 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
      uint64_t v51 = v46[6];
      uint64_t v52 = &a1[v51];
      uint64_t v53 = &a2[v51];
      *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
      v52[4] = v53[4];
      uint64_t v54 = v46[7];
      uint64_t v55 = &a1[v54];
      uint64_t v56 = &a2[v54];
      long long v57 = *((_OWORD *)v56 + 1);
      *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
      *((_OWORD *)v55 + 1) = v57;
      *((void *)v55 + 4) = *((void *)v56 + 4);
      *(void *)&a1[v46[8]] = *(void *)&a2[v46[8]];
      *(_OWORD *)&a1[v46[9]] = *(_OWORD *)&a2[v46[9]];
      a1[v46[10]] = a2[v46[10]];
      *(void *)&a1[v46[11]] = *(void *)&a2[v46[11]];
      *(void *)&a1[v46[12]] = *(void *)&a2[v46[12]];
      a1[v46[13]] = a2[v46[13]];
      uint64_t v58 = v46[14];
      uint64_t v59 = &a1[v58];
      id v60 = &a2[v58];
      uint64_t v61 = type metadata accessor for Date();
      if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
      {
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
      }
      uint64_t v63 = type metadata accessor for Participant.CountdownInfo(0);
      uint64_t v64 = *(int *)(v63 + 20);
      uint64_t v65 = &v59[v64];
      uint64_t v66 = &v60[v64];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v60[v64], 1, v61))
      {
        uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v65, v66, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v61);
      }
      v59[*(int *)(v63 + 24)] = v60[*(int *)(v63 + 24)];
      a1[v46[15]] = a2[v46[15]];
      *(void *)&a1[v46[16]] = *(void *)&a2[v46[16]];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata completion function for ConversationController.ParticipantInfo()
{
  uint64_t result = type metadata accessor for Participant(319);
  if (v1 <= 0x3F)
  {
    v2[4] = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t _sSbIegr_SbIegd_TRTA_0()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t _sSbIegd_SbIegr_TRTA_0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result & 1;
  return result;
}

uint64_t _sSbIegy_SbytIegnr_TRTA_0(unsigned __int8 *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_410(a1);
  return v2(v1);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned VideoMessageController.UnrecoverableErrors) -> ()(unsigned __int8 *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_410(a1);
  return v2(v1);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed Call) -> ()(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Call) -> (@out ())()
{
  OUTLINED_FUNCTION_411();
  return v0();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Activity, @in_guaranteed TUConversationActivitySessionApplicationState) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v3 + 16);
  uint64_t v6 = a3;
  return v4(a1, a2, &v6);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Participant, @in_guaranteed TUConversationNotice, @in_guaranteed TUScreenShareDeviceFamily?) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Participant, @in_guaranteed TUConversationNotice, @in_guaranteed TUScreenShareDeviceFamily?) -> (@out ())(a1, a2, a3, a4, a5 & 1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t *))(v5 + 16));
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Participant, @guaranteed TUConversationNotice, @unowned TUScreenShareDeviceFamily?) -> ()(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void))(v4 + 16))(a1, a2, *a3, *(void *)a4, *(unsigned __int8 *)(a4 + 8));
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Data?) -> (@out ())()
{
  OUTLINED_FUNCTION_408();
  return v0();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @guaranteed Data?) -> ()(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void, void))(v2 + 16))(a1, *a2, a2[1]);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed CameraPosition) -> (@out ())()
{
  OUTLINED_FUNCTION_412();
  return v0();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned CameraPosition) -> ()(uint64_t a1, unsigned __int8 *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, *a2);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant]) -> ()(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_121_5(a1);
  return v2(v1);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Int) -> ()(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_121_5(a1);
  return v2(v1);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned TUConversationLetMeInRequestState) -> ()(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_121_5(a1);
  return v2(v1);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed TUConversationState, @in_guaranteed TUConversationState) -> (@out ())(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *, uint64_t *))(v2 + 16);
  uint64_t v5 = a2;
  uint64_t v6 = a1;
  return v3(&v6, &v5);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned TUConversationState, @unowned TUConversationState) -> ()(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_121_5(a1);
  return v3(v1, *v2);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CameraPosition) -> (@out ())()
{
  OUTLINED_FUNCTION_409();
  return v0();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned CameraPosition) -> ()(unsigned __int8 *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_410(a1);
  return v2(v1);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed BroadcastingState) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, void *))(v4 + 16);
  v7[0] = a2;
  v7[1] = a3;
  char v8 = a4;
  return v5(a1, v7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned BroadcastingState) -> ()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void, void, void))(v2 + 16))(a1, *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned TUCallBluetoothAudioFormat) -> ()(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_121_5(a1);
  return v2(v1);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Bool) -> ()(uint64_t a1, unsigned __int8 *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, *a2);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed Set<TUScreenSharingRequest>?) -> ()(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_121_5(a1);
  return v2(v1);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed TUCollaborationNotice, @in_guaranteed Participant, @in_guaranteed Conversation) -> (@out ())(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TUCollaborationNotice, @in_guaranteed Participant, @in_guaranteed Conversation) -> ()(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_121_5(a1);
  return v2(v1);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [TUConversationActivitySession]?) -> ()(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_121_5(a1);
  return v2(v1);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned TUConversationAVMode) -> ()(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_121_5(a1);
  return v2(v1);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Bool, @in_guaranteed ConversationController.OneToOneModeChangeSource) -> (@out ())(char a1, char a2)
{
  return thunk for @escaping @callee_guaranteed (@in_guaranteed Bool, @in_guaranteed ConversationController.OneToOneModeChangeSource) -> (@out ())(a1, a2 & 1, *(uint64_t (**)(char *, char *))(v2 + 16));
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool, @unowned ConversationController.OneToOneModeChangeSource) -> ()(unsigned __int8 *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_410(a1);
  return v3(v1, *v2);
}

uint64_t _sSSIegg_SSytIegnr_TRTA_0(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TURoute?) -> ()(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_121_5(a1);
  return v2(v1);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Float) -> (@out ())(uint64_t a1, float a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, float *))(v2 + 16);
  float v5 = a2;
  return v3(a1, &v5);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Float) -> ()(uint64_t a1, float *a2)
{
  return (*(uint64_t (**)(float))(v2 + 16))(*a2);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @guaranteed String) -> ()(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void, void))(v2 + 16))(a1, *a2, a2[1]);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t *))(v2 + 16);
  uint64_t v5 = a2;
  return v3(a1, &v5);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, *a2);
}

uint64_t sub_1C367BA80()
{
  swift_release();
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

uint64_t sub_1C367BAB0()
{
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v0();
  swift_release();
  OUTLINED_FUNCTION_318_0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset()
{
  return partial apply for closure #1 in ConversationController.handleSendingVideoChanged(_:)(MEMORY[0x1F418BBD8], (uint64_t (*)(unint64_t, uint64_t))closure #1 in closure #2 in ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset);
}

uint64_t partial apply for closure #1 in ConversationController.handleSendingVideoChanged(_:)(uint64_t (*a1)(void), uint64_t (*a2)(unint64_t, uint64_t))
{
  uint64_t v3 = a1(0);
  OUTLINED_FUNCTION_1(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(void *)(v2 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a2(v2 + v8, v9);
}

void specialized ConversationController.updateAudioState(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1C367BCD4()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.migrate(to:with:isUpgrade:)()
{
  return closure #1 in ConversationController.migrate(to:with:isUpgrade:)(*(void *)(v0 + 16), &OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants);
}

uint64_t partial apply for closure #2 in ConversationController.migrate(to:with:isUpgrade:)()
{
  return closure #1 in ConversationController.migrate(to:with:isUpgrade:)(*(void *)(v0 + 16), &OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
}

void partial apply for closure #3 in ConversationController.updateOtherInvitedParticipants()(void **a1)
{
  closure #3 in ConversationController.updateOtherInvitedParticipants()(a1, *(void **)(v1 + 16));
}

uint64_t partial apply for closure #5 in ConversationController.createNewParticipants(with:)(uint64_t a1)
{
  return closure #5 in ConversationController.createNewParticipants(with:)(a1, *(void *)(v1 + 16)) & 1;
}

BOOL partial apply for closure #1 in ConversationController.processCurrentCall(_:)(uint64_t a1, uint64_t a2)
{
  return closure #1 in ConversationController.processCurrentCall(_:)(a1, a2, *(void *)(v2 + 16));
}

uint64_t partial apply for closure #1 in ConversationController.handleRingingCallChangedToActiveIfNecessary()()
{
  return static UUID.== infix(_:_:)() & 1;
}

uint64_t partial apply for closure #1 in closure #1 in ConversationController.registerForMoments()(void *a1)
{
  return closure #1 in closure #1 in ConversationController.registerForMoments()(a1, v1);
}

uint64_t sub_1C367BDD4()
{
  if (v0[2]) {
    swift_release();
  }
  if (v0[4]) {
    swift_release();
  }
  if (v0[6]) {
    swift_release();
  }
  if (v0[8]) {
    swift_release();
  }
  if (v0[10]) {
    swift_release();
  }
  if (v0[12]) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1C367BE68()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

uint64_t sub_1C367BE98()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.fetchExistingScreenSharingAttributes()(uint64_t a1)
{
  return closure #1 in ConversationController.fetchExistingScreenSharingAttributes()(a1, v1);
}

uint64_t sub_1C367BED8()
{
  swift_release();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_75();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in ConversationController.fetchExistingScreenSharingAttributes()()
{
  closure #1 in closure #1 in ConversationController.fetchExistingScreenSharingAttributes()(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t objectdestroy_117Tm()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = (int *)type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_5_7();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  uint64_t v4 = v0 + v3;
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      uint64_t v5 = OUTLINED_FUNCTION_334_0();
      v6(v5);
      break;
    case 4u:
      type metadata accessor for Date();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_26_2();
      v16();
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      uint64_t v18 = v4 + *(int *)(v17 + 48);
      swift_bridgeObjectRelease();
      if (*(void *)(v18 + 120) >= 2uLL) {
        __swift_destroy_boxed_opaque_existential_1(v18 + 96);
      }
      if (*(void *)(v18 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v4 + *(int *)(v17 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_26_2();
  v7();
  unint64_t v8 = (id *)(v4 + v1[7]);
  if (*v8)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v9 = v4 + v1[14];
  uint64_t v10 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
  {
    OUTLINED_FUNCTION_48();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v9 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v12, 1, v10))
  {
    OUTLINED_FUNCTION_48();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v10);
  }
  swift_release();
  OUTLINED_FUNCTION_200_1();
  OUTLINED_FUNCTION_15_0();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.scheduleKickabilityUpdate(for:)()
{
  return partial apply for closure #2 in ConversationController.updateBuzzedMember(_:)(type metadata accessor for Participant, (uint64_t (*)(uint64_t, uint64_t))closure #1 in ConversationController.scheduleKickabilityUpdate(for:));
}

uint64_t partial apply for closure #2 in ConversationController.updateBuzzedMember(_:)(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4, v5);
}

void closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)partial apply()
{
}

void closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)partial apply()
{
}

BOOL OUTLINED_FUNCTION_75_9()
{
  return (v0 & 1) == 0;
}

uint64_t OUTLINED_FUNCTION_86_11()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return specialized >> prefix<A>(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_91_6(uint64_t a1)
{
  v2[8] = a1;
  v2[4] = v1;
  v2[5] = v3;
  return outlined init with copy of Conversation(v4 - 120, v4 - 160);
}

uint64_t OUTLINED_FUNCTION_93_4()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_95_7()
{
  return os_log(_:dso:log:type:_:)();
}

void OUTLINED_FUNCTION_105_6()
{
  JUMPOUT(0x1C8773BA0);
}

void *OUTLINED_FUNCTION_109_5(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_118_5()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_120_6()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_121_5(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_128_5()
{
  return type metadata accessor for Participant(0);
}

char *OUTLINED_FUNCTION_129_6@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_134_3()
{
  return outlined destroy of SystemUpdateNotice?(v1 - 160, v0);
}

uint64_t OUTLINED_FUNCTION_136_2()
{
  return os_log(_:dso:log:type:_:)();
}

void *OUTLINED_FUNCTION_144_6(void *result)
{
  return outlined consume of Participant.RemoteIdentifiers?(result);
}

uint64_t OUTLINED_FUNCTION_152_3()
{
  return outlined init with take of Notice((long long *)(v0 - 168), v0 - 128);
}

uint64_t OUTLINED_FUNCTION_156_5()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_157_6()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_158_5(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  uint64_t v3 = v2[3];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  return v3;
}

uint64_t OUTLINED_FUNCTION_160_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_164_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_167_1()
{
  return static UUID.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_169_3()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, *(void *)(v0 + 24));
  return specialized >> prefix<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_176_4()
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 - 256), v0);
  return v0;
}

uint64_t OUTLINED_FUNCTION_184_3()
{
  __swift_destroy_boxed_opaque_existential_1(v0);
  return outlined init with take of Notice((long long *)(v1 - 256), v0);
}

uint64_t OUTLINED_FUNCTION_186_4()
{
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v0);
}

uint64_t OUTLINED_FUNCTION_191_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_195_3()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_197_2(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 - 168) = a2;
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_198_4()
{
  return outlined init with copy of Conversation(v0, v1 - 160);
}

uint64_t OUTLINED_FUNCTION_200_2()
{
  return outlined init with take of Notice((long long *)(v0 - 160), v0 - 120);
}

uint64_t OUTLINED_FUNCTION_208_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_209_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_210_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_211_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_212_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_213_1()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_214_1()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_215_1()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_216_3()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_217_2(uint64_t a1)
{
  *(void *)(v1 - 312) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_219_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_220_0()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_222_2()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_226_0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_228_1@<X0>(uint64_t a1@<X8>)
{
  return __swift_storeEnumTagSinglePayload(v1 + a1, 1, 1, v2);
}

uint64_t OUTLINED_FUNCTION_229_2()
{
  __swift_project_boxed_opaque_existential_1((void *)(v2 - 160), v1);
  return Conversation.containsAuthorizedToChangeGroupMembership(participantWithHandle:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_231_1()
{
  return v0;
}

void OUTLINED_FUNCTION_232(uint64_t a1@<X8>)
{
  *(void *)(v1 - 264) = a1;
}

uint64_t OUTLINED_FUNCTION_233_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_234_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_235_2()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_236_0(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_237_0()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_240_1()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_241_1()
{
  return type metadata accessor for Date();
}

uint64_t OUTLINED_FUNCTION_242_2()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

void *OUTLINED_FUNCTION_244_2@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + a1) = v2;
  return __swift_project_boxed_opaque_existential_1((void *)(v3 - 128), *(void *)(v3 - 104));
}

uint64_t OUTLINED_FUNCTION_246_1()
{
  return swift_getObjectType();
}

void *OUTLINED_FUNCTION_250_2(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_251_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_252_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_253_0()
{
  return String.init<A>(reflecting:)();
}

void *OUTLINED_FUNCTION_257_1()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_259_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_261_1(char a1)
{
  *(void *)(v2 + 96) = v3;
  *(void *)(v2 + 104) = v4;
  *(unsigned char *)(v2 + 72) = a1 & 1;
  *(void *)(v2 + 136) = v3;
  *(void *)(v2 + 144) = v4;
  *(unsigned char *)(v2 + 112) = v1 & 1;
  return static os_log_type_t.default.getter();
}

uint64_t OUTLINED_FUNCTION_266_1()
{
  return v0;
}

void OUTLINED_FUNCTION_268_1(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(void *)(v3 - 72) = v2;
  *(void *)(v3 - 176) = a1;
  *(void *)(v3 - 168) = a2;
}

uint64_t OUTLINED_FUNCTION_269_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_273_1()
{
  return v0;
}

char *OUTLINED_FUNCTION_275_1@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_276_1()
{
  return type metadata accessor for Participant(0);
}

void OUTLINED_FUNCTION_281_1(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 56) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_282_0()
{
  ConversationController.lookupActiveConversation()();
}

uint64_t OUTLINED_FUNCTION_284_0()
{
  return type metadata accessor for Participant.State(0);
}

uint64_t OUTLINED_FUNCTION_286_0()
{
  return UUID.init()();
}

uint64_t OUTLINED_FUNCTION_288_0()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t OUTLINED_FUNCTION_290_1(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_291_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_292_1(uint64_t a1)
{
  *(void *)(v1 - 184) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_297_1(void *a1)
{
  _os_log_impl(a1, v2, v4, v1, v3, 0xCu);
}

uint64_t OUTLINED_FUNCTION_299_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_300_1()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_303_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_304_1()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_305_1()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_306_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_307_0(uint64_t a1)
{
  *(void *)(v1 - 208) = a1;
  return v1 - 208;
}

uint64_t OUTLINED_FUNCTION_308_0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_309_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return outlined init with take of Notice(&a9, (uint64_t)&a13);
}

uint64_t OUTLINED_FUNCTION_311_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return outlined init with copy of Conversation(v4, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_314_1()
{
  return outlined destroy of SystemUpdateNotice?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_321()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_324_0()
{
  return Notification.object.getter();
}

__n128 OUTLINED_FUNCTION_326_0(__n128 *a1)
{
  __n128 result = v1[4];
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_328()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_334_0()
{
  return v0;
}

id OUTLINED_FUNCTION_337_0()
{
  return outlined copy of Participant.RemoteIdentifiers?(v0);
}

id OUTLINED_FUNCTION_339()
{
  return outlined copy of Participant.RemoteIdentifiers?(v0);
}

id OUTLINED_FUNCTION_340_0()
{
  return outlined copy of Participant.RemoteIdentifiers?(v0);
}

double OUTLINED_FUNCTION_341_0(_OWORD *a1)
{
  *(void *)(v1 - 256) = a1;
  double result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_343()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_344()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_347(uint64_t result)
{
  v3[8] = result;
  v3[4] = v1;
  v3[5] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_348_0(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_350_0()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return ConversationController.conversationUUID.setter(v1);
}

void OUTLINED_FUNCTION_357_0()
{
  JUMPOUT(0x1C8773BA0);
}

void OUTLINED_FUNCTION_358()
{
  JUMPOUT(0x1C8773BA0);
}

void OUTLINED_FUNCTION_363_0()
{
  ConversationController.lookupActiveConversation()();
}

uint64_t OUTLINED_FUNCTION_366_0@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v2 + a1) = v1 & 1;
  return outlined init with copy of Conversation(v3 - 128, v3 - 256);
}

uint64_t OUTLINED_FUNCTION_367_0()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_368_0()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_369_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_370_0()
{
  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_371_0()
{
  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_372_0()
{
  return outlined init with copy of Conversation(v0, v1 - 256);
}

uint64_t OUTLINED_FUNCTION_374_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_375_0()
{
  return v0 - 256;
}

void OUTLINED_FUNCTION_376(float a1)
{
  *uint64_t v1 = a1;
  *(unsigned char *)(v3 - 96) = v2;
}

double OUTLINED_FUNCTION_377_0@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

unint64_t OUTLINED_FUNCTION_384()
{
  return 0xD000000000000012;
}

uint64_t OUTLINED_FUNCTION_385()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_388()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_390()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_394()
{
  return swift_unknownObjectRetain();
}

id OUTLINED_FUNCTION_395(uint64_t a1)
{
  v3[8] = a1;
  v3[4] = v1;
  v3[5] = v4;
  *(void *)(v5 - 160) = v2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  long long v6 = va_arg(va1, __int128);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  return outlined init with take of Notice((long long *)va, (uint64_t)va1);
}

void *OUTLINED_FUNCTION_399(void *a1, uint64_t a2)
{
  return __swift_project_boxed_opaque_existential_1(a1, a2);
}

uint64_t OUTLINED_FUNCTION_400(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_401()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_402()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_403(uint64_t result)
{
  v2[8] = result;
  v2[4] = v1;
  v2[5] = v3;
  return result;
}

id OUTLINED_FUNCTION_404(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  *(void *)(v3 - 120) = v2;
  return v2;
}

char *OUTLINED_FUNCTION_405(uint64_t a1, uint64_t a2, objc_class *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10, unsigned char *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v20 = *(_DWORD *)(v18 - 100);
  uint64_t v21 = *(void *)(v18 - 96);
  int v22 = *(_DWORD *)(v18 - 84);
  return specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(a1, a2, a3, a4, v17, v20, v21, v22, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t OUTLINED_FUNCTION_407()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_410(unsigned __int8 *a1)
{
  return *a1;
}

void OUTLINED_FUNCTION_414()
{
  *(_WORD *)(v1 + 22) = 2080;
  *(void *)(v2 - 184) = v0;
}

uint64_t OUTLINED_FUNCTION_415(uint64_t a1)
{
  *(void *)(v1 - 176) = a1;
  return v1 - 176;
}

uint64_t OUTLINED_FUNCTION_416()
{
  return outlined init with copy of Conversation(v0 - 152, v0 - 216);
}

uint64_t OUTLINED_FUNCTION_418()
{
  return static UUID.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_419()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_420()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return specialized >> prefix<A>(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_422(uint64_t result)
{
  *(void *)(v1 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_426()
{
  return swift_unknownObjectRetain();
}

void OUTLINED_FUNCTION_428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 176) = &a9;
}

uint64_t OUTLINED_FUNCTION_429()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_430()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_432()
{
  return v0;
}

void *OUTLINED_FUNCTION_433()
{
  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

uint64_t OUTLINED_FUNCTION_434()
{
  return specialized static ParticipantContactDetailsCache.cache(for:)();
}

uint64_t OUTLINED_FUNCTION_435()
{
  return v0;
}

void OUTLINED_FUNCTION_436()
{
  Conversation.displayableActiveParticipants.getter(v0, v1);
}

void OUTLINED_FUNCTION_437()
{
  VideoMessageController.init(callCenter:notificationCenter:)();
}

uint64_t OUTLINED_FUNCTION_438()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_439()
{
  return _s15ConversationKit11ParticipantVWOcTm_19(v0, v1);
}

uint64_t OUTLINED_FUNCTION_440()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_443()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_445()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return specialized >> prefix<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_446()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_447()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_448()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return specialized >> prefix<A>(_:)(v1);
}

uint64_t OUTLINED_FUNCTION_449()
{
  return v0;
}

void OUTLINED_FUNCTION_450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21,uint64_t a22)
{
  uint64_t v25 = *(void *)(v23 - 184);
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(a1, a2, a3, a4, v25, 0, 0, v22, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22);
}

uint64_t OUTLINED_FUNCTION_452()
{
  return outlined destroy of SystemUpdateNotice?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_454()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_455()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_456(uint64_t result, uint64_t a2)
{
  *(void *)(v2 - 312) = result;
  *(void *)(v2 - 304) = a2;
  return result;
}

void OUTLINED_FUNCTION_459(uint64_t a1@<X8>)
{
  *(void *)(v1 - 264) = a1;
}

uint64_t OUTLINED_FUNCTION_461()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_462()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_463()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return specialized >> prefix<A>(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_465()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_466()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_467()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_469()
{
  return v0;
}

void OUTLINED_FUNCTION_471()
{
  v1[12] = v4;
  v1[13] = v3;
  v1[9] = v0;
  v1[10] = v2;
}

uint64_t OUTLINED_FUNCTION_472()
{
  return outlined destroy of SystemUpdateNotice?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_475()
{
  return type metadata accessor for DispatchPredicate();
}

void OUTLINED_FUNCTION_476(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 272) = &a9;
}

uint64_t OUTLINED_FUNCTION_478()
{
  return static DispatchTime.now()();
}

void OUTLINED_FUNCTION_482(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 144) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_485()
{
  return type metadata accessor for Notification();
}

uint64_t NoticeViewModel.title.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t NoticeViewModel.subtitle.getter()
{
  return OUTLINED_FUNCTION_35();
}

id NoticeViewModel.image.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t NoticeViewModel.primaryActionTitle.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t NoticeViewModel.secondaryActionTitle.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t NoticeViewModel.uuid.getter()
{
  type metadata accessor for NoticeViewModel();
  type metadata accessor for UUID();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  return v1(v0);
}

uint64_t type metadata accessor for NoticeViewModel()
{
  uint64_t result = type metadata singleton initialization cache for NoticeViewModel;
  if (!type metadata singleton initialization cache for NoticeViewModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t NoticeViewModel.needsIconBleedAdjustment.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NoticeViewModel() + 40));
}

uint64_t NoticeViewModel.type.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NoticeViewModel() + 44));
}

uint64_t NoticeViewModel.primaryAction.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t NoticeViewModel.secondaryAction.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t NoticeViewModel.init(title:subtitle:image:primaryActionTitle:secondaryActionTitle:uuid:needsIconBleedAdjustment:type:primaryAction:secondaryAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  uint64_t v18 = (int *)type metadata accessor for NoticeViewModel();
  uint64_t v19 = (char *)a9 + v18[9];
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a11, v20);
  *((unsigned char *)a9 + v18[10]) = a12;
  *(void *)((char *)a9 + v18[11]) = a13;
  uint64_t v22 = (void *)((char *)a9 + v18[12]);
  *uint64_t v22 = a14;
  v22[1] = a15;
  uint64_t v23 = (void *)((char *)a9 + v18[13]);
  *uint64_t v23 = a16;
  v23[1] = a17;
  return result;
}

uint64_t CNKNoticeRecipe.viewModelWithPrimaryAction(_:andSecondaryAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  long long v6 = v5;
  id v8 = objc_msgSend(v5, sel_title);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v10;
  uint64_t v29 = v9;

  id v11 = objc_msgSend(v5, sel_subtitle);
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  id v14 = objc_msgSend(v5, sel_image);
  uint64_t v15 = outlined bridged method (pb) of @objc CNKNoticeRecipe.primaryActionTitle.getter(v5, (SEL *)&selRef_primaryActionTitle);
  uint64_t v17 = v16;
  uint64_t v18 = outlined bridged method (pb) of @objc CNKNoticeRecipe.primaryActionTitle.getter(v5, (SEL *)&selRef_secondaryActionTitle);
  uint64_t v20 = v19;
  id v21 = objc_msgSend(v5, sel_uuid);
  uint64_t v22 = (int *)type metadata accessor for NoticeViewModel();
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  id v23 = objc_msgSend(v6, sel_type);
  *a5 = v29;
  a5[1] = v28;
  a5[2] = v27;
  a5[3] = v13;
  a5[4] = (uint64_t)v14;
  a5[5] = v15;
  a5[6] = v17;
  a5[7] = v18;
  a5[8] = v20;
  *((unsigned char *)a5 + v22[10]) = 1;
  *(uint64_t *)((char *)a5 + v22[11]) = (uint64_t)v23;
  uint64_t v24 = (uint64_t *)((char *)a5 + v22[12]);
  *uint64_t v24 = a1;
  v24[1] = a2;
  uint64_t v25 = (uint64_t *)((char *)a5 + v22[13]);
  *uint64_t v25 = a3;
  v25[1] = a4;
  swift_retain();
  return swift_retain();
}

uint64_t outlined bridged method (pb) of @objc CNKNoticeRecipe.primaryActionTitle.getter(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (v2)
  {
    uint64_t v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return OUTLINED_FUNCTION_35();
}

void *initializeBufferWithCopyOfBuffer for NoticeViewModel(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v10 = (void *)a2[4];
    uint64_t v9 = a2[5];
    a1[4] = v10;
    a1[5] = v9;
    uint64_t v11 = a2[7];
    a1[6] = a2[6];
    a1[7] = v11;
    uint64_t v12 = a3[9];
    uint64_t v27 = (char *)a2 + v12;
    uint64_t v28 = (char *)a1 + v12;
    a1[8] = a2[8];
    uint64_t v13 = type metadata accessor for UUID();
    long long v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v28, v27, v13);
    uint64_t v15 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *(void *)((char *)v4 + v15) = *(void *)((char *)a2 + v15);
    uint64_t v16 = a3[12];
    uint64_t v17 = a3[13];
    uint64_t v18 = (void *)((char *)v4 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    id v21 = (void *)((char *)v4 + v17);
    uint64_t v22 = (void *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *id v21 = *v22;
    v21[1] = v23;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for NoticeViewModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_release();
}

void *initializeWithCopy for NoticeViewModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v9 = (void *)a2[4];
  uint64_t v8 = a2[5];
  a1[4] = v9;
  a1[5] = v8;
  uint64_t v10 = a2[7];
  a1[6] = a2[6];
  a1[7] = v10;
  uint64_t v11 = a3[9];
  uint64_t v25 = (char *)a2 + v11;
  long long v26 = (char *)a1 + v11;
  a1[8] = a2[8];
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v26, v25, v12);
  uint64_t v14 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v15 = a3[12];
  uint64_t v16 = a3[13];
  uint64_t v17 = (void *)((char *)a1 + v15);
  uint64_t v18 = (void *)((char *)a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)((char *)a1 + v16);
  id v21 = (void *)((char *)a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for NoticeViewModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[4];
  uint64_t v7 = (void *)a1[4];
  a1[4] = v6;
  id v8 = v6;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[9];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v13 = a3[12];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  uint64_t v17 = a3[13];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for NoticeViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

void *assignWithTake for NoticeViewModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)a1[4];
  a1[4] = a2[4];

  uint64_t v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[8];
  a1[7] = a2[7];
  a1[8] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[9];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  swift_release();
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C367EA04);
}

uint64_t sub_1C367EA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for NoticeViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C367EAA0);
}

uint64_t sub_1C367EAA0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for NoticeViewModel()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of RecentsCollectionViewCellProtocol.avatarViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCellProtocol.configure(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t specialized _resumeUnsafeThrowingContinuationWithError<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  uint64_t v4 = swift_allocError();
  void *v5 = a2;
  return MEMORY[0x1F4188208](a1, v4);
}

uint64_t specialized _resumeUnsafeThrowingContinuation<A>(_:_:)()
{
  return MEMORY[0x1F4188200]();
}

uint64_t specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(a1 + 64) + 40) = a2;
  return MEMORY[0x1F4188200]();
}

uint64_t specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  **(void **)(*(void *)(a1 + 64) + 40) = a2;
  return MEMORY[0x1F4188200]();
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t vars8;

  uint64_t v4 = *(void *)(*(void *)(a1 + 64) + 40);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(v4, a2, v5);
  return MEMORY[0x1F4188200](a1);
}

uint64_t specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void **)(*(void *)(a1 + 64) + 40);
  void *v5 = a2;
  v5[1] = a3;
  v5[2] = a4;
  v5[3] = a5;
  return MEMORY[0x1F4188200]();
}

uint64_t CKContainerSetupInfo.collaborationInitiator.getter()
{
  OUTLINED_FUNCTION_17_2();
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = CKContainerSetupInfo.collaborationInitiator.getter;
  return CKContainerSetupInfo.userNameAndEmail.getter();
}

uint64_t CKContainerSetupInfo.collaborationInitiator.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_0_5();
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v12 = v11;
  uint64_t v13 = *v5;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v14 = v13;
  swift_task_dealloc();
  if (v4)
  {
    OUTLINED_FUNCTION_85_4();
    __asm { BRAA            X1, X16 }
  }
  v11[3] = a4;
  void v11[4] = a3;
  void v11[5] = a2;
  void v11[6] = a1;
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_85_4();
  return MEMORY[0x1F4188298](v17, v18, v19);
}

id _SWPendingCollaboration.collaborationInitiator.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v2 = *(void *)(*(void *)(v1 - 8) + 64);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v4 = objc_msgSend(v0, sel_collaborationMetadata);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_initiatorNameComponents);

    MEMORY[0x1F4188790](v7);
    if (v6)
    {
      static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v8 = type metadata accessor for PersonNameComponents();
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v8 = type metadata accessor for PersonNameComponents();
      uint64_t v9 = 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)&v14 - v3, v9, 1, v8);
    outlined init with take of PersonNameComponents?((uint64_t)&v14 - v3, (uint64_t)&v14 - v3);
  }
  else
  {
    uint64_t v10 = type metadata accessor for PersonNameComponents();
    __swift_storeEnumTagSinglePayload((uint64_t)&v14 - v3, 1, 1, v10);
  }
  id v11 = objc_msgSend(v0, sel_collaborationMetadata);
  if (v11) {
    outlined bridged method (ob) of @objc _SWCollaborationMetadata.initiatorHandle.getter(v11);
  }
  id v12 = objc_allocWithZone(MEMORY[0x1E4FADAF0]);
  return OUTLINED_FUNCTION_3_134();
}

uint64_t URL.collaborationInitiator.getter()
{
  OUTLINED_FUNCTION_17_2();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = URL.collaborationInitiator.getter;
  return URL.userNameAndEmail.getter();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t (*v8)(id);
  uint64_t v10;

  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  id v4 = v0[3];
  uint64_t v3 = v0[4];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v5 = swift_task_alloc();
  PersonNameComponents.init(formattedName:)(v2, v1, v5);
  id v6 = objc_allocWithZone(MEMORY[0x1E4FADAF0]);
  uint64_t v7 = @nonobjc TUCollaborationInitiator.init(nameComponents:handle:)(v5, v3, v4);
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(id))v0[1];
  return v8(v7);
}

uint64_t URL.collaborationInitiator.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_0_5();
  id v11 = v10;
  OUTLINED_FUNCTION_13_1();
  *id v12 = v11;
  uint64_t v13 = *v5;
  OUTLINED_FUNCTION_13_1();
  *uint64_t v14 = v13;
  swift_task_dealloc();
  if (v4)
  {
    OUTLINED_FUNCTION_85_4();
    __asm { BRAA            X1, X16 }
  }
  v11[3] = a4;
  void v11[4] = a3;
  void v11[5] = a2;
  void v11[6] = a1;
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_85_4();
  return MEMORY[0x1F4188298](v17, v18, v19);
}

id SWShareableContent.collaborationInitiator.getter()
{
  id v1 = objc_msgSend(v0, sel_initiatorNameComponents);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1)
  {
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = type metadata accessor for PersonNameComponents();
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v5 = type metadata accessor for PersonNameComponents();
    uint64_t v6 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v4, v6, 1, v5);
  outlined bridged method (pb) of @objc SWShareableContent.initiatorHandle.getter(v0);
  id v7 = objc_allocWithZone(MEMORY[0x1E4FADAF0]);
  return OUTLINED_FUNCTION_3_134();
}

uint64_t CKContainerSetupInfo.userNameAndEmail.getter()
{
  *(void *)(v1 + 152) = v0;
  return OUTLINED_FUNCTION_17_7((uint64_t)CKContainerSetupInfo.userNameAndEmail.getter);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = v0[19];
  uint64_t v2 = self;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = CKContainerSetupInfo.userNameAndEmail.getter;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSString?, @unowned NSString?, @unowned NSError?) -> () with result type (String, String);
  v0[13] = &block_descriptor_3;
  v0[14] = v3;
  objc_msgSend(v2, sel_userNameAndEmail_containerSetupInfo_completionHandler_, 0, v1, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_13_1();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 160) = *(void *)(v3 + 48);
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void, void, void, void))(v0 + 8))(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144));
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSString?, @unowned NSString?, @unowned NSError?) -> () with result type (String, String)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a4) {
    return specialized _resumeUnsafeThrowingContinuationWithError<A>(_:_:)(v4, (uint64_t)a4);
  }
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(v4, v6, v8, v10, v9);
}

uint64_t URL.userNameAndEmail.getter()
{
  *(void *)(v1 + 152) = v0;
  return OUTLINED_FUNCTION_17_7((uint64_t)URL.userNameAndEmail.getter);
}

{
  void *v0;
  void *v1;
  NSURL *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  uint64_t v1 = self;
  URL._bridgeToObjectiveC()(v2);
  uint64_t v4 = v3;
  v0[20] = v3;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = URL.userNameAndEmail.getter;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSString?, @unowned NSString?, @unowned NSError?) -> () with result type (String, String);
  v0[13] = &block_descriptor_6;
  v0[14] = v5;
  objc_msgSend(v1, sel_userNameAndEmail_containerSetupInfo_completionHandler_, v4, 0, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_13_1();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 168) = *(void *)(v3 + 48);
  OUTLINED_FUNCTION_5_8();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 144);

  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v5(v2, v1, v3, v4);
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  uint64_t v1 = *(void **)(v0 + 160);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t outlined bridged method (pb) of @objc SWShareableContent.initiatorHandle.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_initiatorHandle);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined bridged method (ob) of @objc _SWCollaborationMetadata.initiatorHandle.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_initiatorHandle);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined init with take of PersonNameComponents?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo18NSAttributedStringCG_So6CGSizeVs5NeverOTg50131_s15ConversationKit38SystemApertureIncomingCallControlsViewC28maxSubtitleLabelSizeThatFits33_085E1321DC3A0050D89D5085A314C15FLLySo6f10VAGFAGSo18dE6CXEfU_0I3Kit0klmnoP0CAJTf1cn_n(unint64_t a1, char *a2, double a3, double a4)
{
  unint64_t v6 = a1;
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      uint64_t v24 = MEMORY[0x1E4FBC860];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v7 < 0) {
        break;
      }
      uint64_t v8 = 0;
      unint64_t v22 = v6 & 0xC000000000000001;
      uint64_t v21 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel;
      unint64_t v9 = v6;
      while (v7 != v8)
      {
        if (v22) {
          id v10 = (id)MEMORY[0x1C87744F0](v8, v6);
        }
        else {
          id v10 = *(id *)(v6 + 8 * v8 + 32);
        }
        id v11 = v10;
        id v12 = *(void **)&a2[v21];
        uint64_t v13 = *(void (**)(id))((*MEMORY[0x1E4FBC8C8] & *v12) + 0x80);
        id v14 = v10;
        v13(v11);
        objc_msgSend(v12, sel_sizeThatFits_, a3, a4);
        uint64_t v16 = v15;
        uint64_t v18 = v17;

        unint64_t v19 = *(void *)(v24 + 16);
        if (v19 >= *(void *)(v24 + 24) >> 1) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        ++v8;
        *(void *)(v24 + 16) = v19 + 1;
        uint64_t v20 = v24 + 16 * v19;
        *(void *)(v20 + 32) = v16;
        *(void *)(v20 + 40) = v18;
        unint64_t v6 = v9;
        if (v7 == v8) {
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v7) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
  }
}

long long *SystemApertureIncomingCallControlsView.Constants.leadingViewSize.unsafeMutableAddressor()
{
  if (one-time initialization token for leadingViewSize != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.leadingViewSize;
}

double static SystemApertureIncomingCallControlsView.Constants.leadingViewSize.getter()
{
  if (one-time initialization token for leadingViewSize != -1) {
    swift_once();
  }
  return *(double *)&static SystemApertureIncomingCallControlsView.Constants.leadingViewSize;
}

long long *SystemApertureIncomingCallControlsView.Constants.avatarMargins.unsafeMutableAddressor()
{
  if (one-time initialization token for avatarMargins != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.avatarMargins;
}

double static SystemApertureIncomingCallControlsView.Constants.avatarMargins.getter()
{
  if (one-time initialization token for avatarMargins != -1) {
    swift_once();
  }
  return *(double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMargins;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.brandedCallMargins.unsafeMutableAddressor()
{
  if (one-time initialization token for brandedCallMargins != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.brandedCallMargins;
}

double static SystemApertureIncomingCallControlsView.Constants.brandedCallMargins.getter()
{
  if (one-time initialization token for brandedCallMargins != -1) {
    swift_once();
  }
  return *(double *)&static SystemApertureIncomingCallControlsView.Constants.brandedCallMargins;
}

double one-time initialization function for avatarMissingSpacer()
{
  if (one-time initialization token for textNoAvatarMinX != -1) {
    swift_once();
  }
  double v0 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX;
  if (one-time initialization token for avatarMargins != -1) {
    swift_once();
  }
  double result = v0
         - *((double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMargins + 1)
         - *((double *)&xmmword_1EA37E960 + 1);
  *(double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMissingSpacer = result;
  return result;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX.unsafeMutableAddressor()
{
  if (one-time initialization token for textNoAvatarMinX != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.avatarMissingSpacer.unsafeMutableAddressor()
{
  if (one-time initialization token for avatarMissingSpacer != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.avatarMissingSpacer;
}

double static SystemApertureIncomingCallControlsView.Constants.avatarMissingSpacer.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for avatarMissingSpacer, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.avatarMissingSpacer);
}

void one-time initialization function for textNoAvatarMinX()
{
  static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX = 0x403D000000000000;
}

double static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for textNoAvatarMinX, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX);
}

void one-time initialization function for brandedCallImageCornerRadius()
{
  static SystemApertureIncomingCallControlsView.Constants.brandedCallImageCornerRadius = 0x4028000000000000;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.brandedCallImageCornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for brandedCallImageCornerRadius != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.brandedCallImageCornerRadius;
}

double static SystemApertureIncomingCallControlsView.Constants.brandedCallImageCornerRadius.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for brandedCallImageCornerRadius, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.brandedCallImageCornerRadius);
}

double one-time initialization function for textTopInset(uint64_t a1)
{
  return one-time initialization function for textTopInset(a1, &one-time initialization token for sensorRegionHeight, (double *)&static SystemApertureConstants.sensorRegionHeight, &static SystemApertureIncomingCallControlsView.Constants.textTopInset);
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.textTopInset.unsafeMutableAddressor()
{
  if (one-time initialization token for textTopInset != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.textTopInset;
}

double static SystemApertureIncomingCallControlsView.Constants.textTopInset.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for textTopInset, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.textTopInset);
}

double one-time initialization function for textBottomInset(uint64_t a1)
{
  return one-time initialization function for textTopInset(a1, &one-time initialization token for actionMargins, (double *)&qword_1EA37E9F0, &static SystemApertureIncomingCallControlsView.Constants.textBottomInset);
}

double one-time initialization function for textTopInset(uint64_t a1, void *a2, double *a3, void *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  double result = *a3;
  *a4 = *(void *)a3;
  return result;
}

long long *SystemApertureIncomingCallControlsView.Constants.actionMargins.unsafeMutableAddressor()
{
  if (one-time initialization token for actionMargins != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.actionMargins;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.textBottomInset.unsafeMutableAddressor()
{
  if (one-time initialization token for textBottomInset != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.textBottomInset;
}

double static SystemApertureIncomingCallControlsView.Constants.textBottomInset.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for textBottomInset, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.textBottomInset);
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.minimumTextWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for minimumTextWidth != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.minimumTextWidth;
}

double static SystemApertureIncomingCallControlsView.Constants.minimumTextWidth.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for minimumTextWidth, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.minimumTextWidth);
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold.unsafeMutableAddressor()
{
  if (one-time initialization token for secondaryShortTextWidthThreshold != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold;
}

double static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for secondaryShortTextWidthThreshold, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold);
}

double one-time initialization function for secondaryShortTextWidthWithoutAvatarThreshold()
{
  if (one-time initialization token for secondaryShortTextWidthThreshold != -1) {
    swift_once();
  }
  double v0 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold;
  if (one-time initialization token for avatarMargins != -1) {
    swift_once();
  }
  double v1 = *((double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMargins + 1);
  if (one-time initialization token for leadingViewSize != -1) {
    swift_once();
  }
  double v2 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.leadingViewSize;
  double v3 = *((double *)&xmmword_1EA37E960 + 1);
  if (one-time initialization token for textNoAvatarMinX != -1) {
    swift_once();
  }
  double result = v0
         + v1
         + v2
         + v3
         - *(double *)&static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX
         + 2.22507386e-308;
  *(double *)&static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthWithoutAvatarThreshold = result;
  return result;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthWithoutAvatarThreshold.unsafeMutableAddressor()
{
  if (one-time initialization token for secondaryShortTextWidthWithoutAvatarThreshold != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthWithoutAvatarThreshold;
}

double static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthWithoutAvatarThreshold.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for secondaryShortTextWidthWithoutAvatarThreshold, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthWithoutAvatarThreshold);
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.actionDiameter.unsafeMutableAddressor()
{
  if (one-time initialization token for actionDiameter != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.actionDiameter;
}

double static SystemApertureIncomingCallControlsView.Constants.actionDiameter.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for actionDiameter, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter);
}

double static SystemApertureIncomingCallControlsView.Constants.actionMargins.getter()
{
  if (one-time initialization token for actionMargins != -1) {
    swift_once();
  }
  return *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionMargins;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.interActionPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for interActionPadding != -1) {
    swift_once();
  }
  return &static SystemApertureIncomingCallControlsView.Constants.interActionPadding;
}

double static SystemApertureIncomingCallControlsView.Constants.interActionPadding.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for interActionPadding, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.interActionPadding);
}

void SystemApertureIncomingCallControlsView.leadingView.setter(uint64_t a1)
{
  double v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView) = a1;
}

uint64_t SystemApertureIncomingCallControlsView.alternatingLabelController.setter(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_alternatingLabelController) = a1;
  return swift_release();
}

char *SystemApertureIncomingCallControlsView.__allocating_init(recipe:controlsManager:menuHostViewController:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return SystemApertureIncomingCallControlsView.init(recipe:controlsManager:menuHostViewController:)(a1, a2, a3, a4);
}

char *SystemApertureIncomingCallControlsView.init(recipe:controlsManager:menuHostViewController:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v88 = a4;
  id v89 = a3;
  long long v83 = (void *)a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAction?);
  MEMORY[0x1F4188790](v6 - 8);
  OUTLINED_FUNCTION_36();
  uint64_t v85 = v7 - v8;
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&ObjectType - v10;
  id v87 = (id)type metadata accessor for ConversationControlsAction();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_36();
  uint64_t v15 = (unsigned char *)(v13 - v14);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&ObjectType - v17;
  uint64_t v19 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_features;
  uint64_t v20 = one-time initialization token for shared;
  uint64_t v21 = v4;
  if (v20 != -1) {
    swift_once();
  }
  unint64_t v22 = static Features.shared;
  *(void *)&v4[v19] = static Features.shared;
  *(void *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView] = 0;
  uint64_t v23 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel;
  type metadata accessor for UILabel();
  uint64_t v24 = self;
  double v25 = *MEMORY[0x1E4FB09D0];
  id v26 = v22;
  id v27 = objc_msgSend(v24, sel_systemFontOfSize_weight_, 16.67, v25);
  uint64_t v28 = self;
  v93.value.super.Class isa = (Class)objc_msgSend(v28, sel_whiteColor);
  UILabel.init(font:textColor:)(v29, (UIFont)v27, v93);
  uint64_t v86 = v23;
  *(void *)&v21[v23] = v30;
  *(void *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryBadge] = 0;
  uint64_t v31 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel;
  uint64_t v32 = type metadata accessor for BadgedLabel();
  *(void *)&v21[v31] = BadgedLabel.__allocating_init(font:textColor:badge:)(objc_msgSend(v24, sel_systemFontOfSize_, 14.0), objc_msgSend(v28, sel_secondaryLabelColor));
  *(void *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_alternatingLabelController] = 0;
  v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_context] = 0;
  *(void *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_cnkContentAlpha] = 0x3FF0000000000000;
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_recipe]);
  uint64_t v33 = v83;
  *(void *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_controlsManager] = v83;
  uint64_t v34 = type metadata accessor for ConversationControlsRecipe();
  uint64_t v84 = v34;
  uint64_t v39 = a1;
  uint64_t v40 = a1 + *(int *)(v34 + 60);
  uint64_t v41 = *(char *)(v40 + 40);
  if ((v41 & 0x80000000) != 0) {
    uint64_t v32 = MEMORY[0x1E4FBC860];
  }
  else {
    OUTLINED_FUNCTION_41_27(v34, v35, v36, v37, v38, v41);
  }
  specialized Collection.first.getter(v32, (uint64_t)v11);
  long long v42 = v33;
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v87) == 1)
  {
    static ConversationControlsAction.rejectCall(controlsManager:)(v42, v18);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for ConversationControlsAction?);
  }
  else
  {
    outlined init with take of ConversationControlsAction((uint64_t)v11, (uint64_t)v18);
  }
  ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)();
  uint64_t v44 = v43;
  uint64_t v45 = outlined destroy of ConversationControlsAction((uint64_t)v18, (void (*)(void))type metadata accessor for ConversationControlsAction);
  *(void *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_rejectButton] = v44;
  uint64_t v50 = *(char *)(v40 + 40);
  if ((v50 & 0x80000000) != 0) {
    uint64_t v44 = MEMORY[0x1E4FBC860];
  }
  else {
    OUTLINED_FUNCTION_41_27(v45, v46, v47, v48, v49, v50);
  }
  uint64_t v51 = v85;
  specialized BidirectionalCollection.last.getter(v44, v85);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v51, 1, (uint64_t)v87) == 1)
  {
    static ConversationControlsAction.acceptCall(controlsManager:)(v42, v15);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v51, &demangling cache variable for type metadata for ConversationControlsAction?);
  }
  else
  {
    outlined init with take of ConversationControlsAction(v51, (uint64_t)v15);
  }
  uint64_t v52 = v42;
  uint64_t v53 = v39;
  id v87 = v52;
  ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)();
  uint64_t v55 = v54;
  outlined destroy of ConversationControlsAction((uint64_t)v15, (void (*)(void))type metadata accessor for ConversationControlsAction);
  *(void *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_acceptButton] = v55;
  uint64_t v56 = *(void *)(v39 + 80);
  id v57 = *(id *)&v21[v86];
  objc_msgSend(v57, sel_setAttributedText_, v56);

  uint64_t v58 = (objc_class *)type metadata accessor for SystemApertureIncomingCallControlsView();
  v92.receiver = v21;
  v92.super_class = v58;
  uint64_t v59 = (char *)objc_msgSendSuper2(&v92, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  SystemApertureIncomingCallControlsView.updateLeadingView()();
  id v60 = SystemApertureIncomingCallControlsView.updateSecondaryBadge()();
  SystemApertureIncomingCallControlsView.updateSecondaryLabel()((uint64_t)v60, v61, v62, v63, v64, v65, v66, v67, ObjectType, (uint64_t)v83, v84, v85, v86, (uint64_t)v87, v88, (uint64_t)v89, v90, v91, (uint64_t)v92.receiver,
    (uint64_t)v92.super_class);
  uint64_t v68 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel;
  id v69 = objc_msgSend(*(id *)&v59[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel], sel_layer);
  uint64_t v70 = *(unsigned __int8 *)(v39 + *(int *)(v84 + 64));
  objc_msgSend(v69, sel_setAllowsHitTesting_, v70);

  uint64_t v71 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel;
  id v72 = objc_msgSend(*(id *)&v59[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel], sel_layer);
  objc_msgSend(v72, sel_setAllowsHitTesting_, v70);

  uint64_t v73 = *(void **)&v59[v68];
  objc_msgSend(v73, sel_setUserInteractionEnabled_, v70);
  uint64_t v74 = *(void **)&v59[v71];
  objc_msgSend(v74, sel_setUserInteractionEnabled_, v70);
  objc_msgSend(v59, sel_addSubview_, v73);
  objc_msgSend(v59, sel_addSubview_, v74);
  objc_msgSend(v59, sel_addSubview_, *(void *)&v59[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_rejectButton]);
  objc_msgSend(v59, sel_addSubview_, *(void *)&v59[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_acceptButton]);
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v75 = type metadata accessor for Logger();
  __swift_project_value_buffer(v75, (uint64_t)static Logger.conversationControls);
  uint64_t v76 = Logger.logObject.getter();
  os_log_type_t v77 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v76, v77))
  {
    uint64_t v78 = (uint8_t *)OUTLINED_FUNCTION_37();
    uint64_t v91 = OUTLINED_FUNCTION_9_0();
    *(_DWORD *)uint64_t v78 = 136446210;
    uint64_t v79 = _typeName(_:qualified:)();
    uint64_t v90 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v80, &v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v76, v77, "[%{public}s] created", v78, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  outlined destroy of ConversationControlsAction(v53, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  return v59;
}

uint64_t type metadata accessor for SystemApertureIncomingCallControlsView()
{
  uint64_t result = type metadata singleton initialization cache for SystemApertureIncomingCallControlsView;
  if (!type metadata singleton initialization cache for SystemApertureIncomingCallControlsView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id SystemApertureIncomingCallControlsView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SystemApertureIncomingCallControlsView.init(coder:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_features;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  id v3 = static Features.shared;
  *(void *)&v1[v2] = static Features.shared;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView] = 0;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel;
  type metadata accessor for UILabel();
  uint64_t v5 = self;
  double v6 = *MEMORY[0x1E4FB09D0];
  id v7 = v3;
  id v8 = objc_msgSend(v5, sel_systemFontOfSize_weight_, 16.67, v6);
  uint64_t v9 = self;
  v13.value.super.Class isa = (Class)objc_msgSend(v9, sel_whiteColor);
  UILabel.init(font:textColor:)(v10, (UIFont)v8, v13);
  *(void *)&v1[v4] = v11;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryBadge] = 0;
  uint64_t v12 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel;
  type metadata accessor for BadgedLabel();
  *(void *)&v1[v12] = BadgedLabel.__allocating_init(font:textColor:badge:)(objc_msgSend(v5, sel_systemFontOfSize_, 14.0), objc_msgSend(v9, sel_secondaryLabelColor));
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_alternatingLabelController] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_context] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_cnkContentAlpha] = 0x3FF0000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id SystemApertureIncomingCallControlsView.controlsManager.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_controlsManager));
}

uint64_t SystemApertureIncomingCallControlsView.context.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_context);
}

void key path getter for SystemApertureIncomingCallControlsView.cnkContentAlpha : SystemApertureIncomingCallControlsView(void **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x100))();
}

uint64_t key path setter for SystemApertureIncomingCallControlsView.cnkContentAlpha : SystemApertureIncomingCallControlsView(double *a1, void **a2)
{
  return (*(uint64_t (**)(double))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x108))(*a1);
}

id SystemApertureIncomingCallControlsView.cnkContentAlpha.didset()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView];
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v0, sel_alpha);
    objc_msgSend(v2, sel_setAlpha_);
  }
  id v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel];
  objc_msgSend(v0, sel_alpha);
  objc_msgSend(v3, sel_setAlpha_);
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel];
  objc_msgSend(v0, sel_alpha);
  objc_msgSend(v4, sel_setAlpha_);
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_rejectButton];
  objc_msgSend(v0, sel_alpha);
  objc_msgSend(v5, sel_setAlpha_);
  double v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_acceptButton];
  objc_msgSend(v0, sel_alpha);
  return objc_msgSend(v6, sel_setAlpha_);
}

double SystemApertureIncomingCallControlsView.cnkContentAlpha.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_cnkContentAlpha;
  swift_beginAccess();
  return *(double *)v1;
}

id SystemApertureIncomingCallControlsView.cnkContentAlpha.setter(double a1)
{
  id v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_cnkContentAlpha);
  swift_beginAccess();
  double *v3 = a1;
  return SystemApertureIncomingCallControlsView.cnkContentAlpha.didset();
}

uint64_t (*SystemApertureIncomingCallControlsView.cnkContentAlpha.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return SystemApertureIncomingCallControlsView.cnkContentAlpha.modify;
}

uint64_t SystemApertureIncomingCallControlsView.cnkContentAlpha.modify(uint64_t a1, char a2)
{
  return SystemApertureIncomingCallControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))SystemApertureIncomingCallControlsView.cnkContentAlpha.didset);
}

uint64_t key path getter for SystemApertureIncomingCallControlsView.recipe : SystemApertureIncomingCallControlsView(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x118))();
}

uint64_t key path setter for SystemApertureIncomingCallControlsView.recipe : SystemApertureIncomingCallControlsView(uint64_t a1, void **a2)
{
  uint64_t v4 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1F4188790](v4 - 8);
  double v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x120))(v6);
}

id SystemApertureIncomingCallControlsView.recipe.didset()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.conversationControls);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  uint64_t v39 = ObjectType;
  if (os_log_type_enabled(v4, v5))
  {
    double v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    v44[0] = v7;
    *(_DWORD *)double v6 = 136446210;
    uint64_t v8 = _typeName(_:qualified:)();
    uint64_t v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v4, v5, "[%{public}s.recipe.didSet] Updating recipe on existing instance may not result in the expected experience.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v7, -1, -1);
    MEMORY[0x1C87760E0](v6, -1, -1);
  }

  uint64_t v10 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_recipe];
  swift_beginAccess();
  outlined init with copy of ConversationControlsType(v10, (uint64_t)v44);
  uint64_t v40 = 6;
  long long v41 = 0u;
  long long v42 = 0u;
  LOBYTE(v43) = 6;
  char v11 = static ConversationControlsType.== infix(_:_:)((uint64_t)v44);
  outlined destroy of ConversationControlsType((uint64_t)&v40);
  outlined destroy of ConversationControlsType((uint64_t)v44);
  if ((v11 & 1) == 0)
  {
    outlined init with copy of ConversationControlsType(v10, (uint64_t)v44);
    uint64_t v40 = 8;
    long long v41 = 0u;
    long long v42 = 0u;
    LOBYTE(v43) = 6;
    char v12 = static ConversationControlsType.== infix(_:_:)((uint64_t)v44);
    outlined destroy of ConversationControlsType((uint64_t)&v40);
    outlined destroy of ConversationControlsType((uint64_t)v44);
    if ((v12 & 1) == 0)
    {
      UIColor_optional v13 = v0;
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        uint64_t v40 = v38;
        *(_DWORD *)uint64_t v16 = 136446466;
        uint64_t v17 = _typeName(_:qualified:)();
        v44[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2080;
        outlined init with copy of ConversationControlsType(v10, (uint64_t)v44);
        uint64_t v19 = specialized >> prefix<A>(_:)((uint64_t)v44);
        unint64_t v21 = v20;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v44, &demangling cache variable for type metadata for ConversationControlsType?);
        v44[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2F90000, v14, v15, "[%{public}s.recipe.didSet] Applied invalid recipe type %s", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C87760E0](v38, -1, -1);
        MEMORY[0x1C87760E0](v16, -1, -1);
      }
      else
      {
      }
    }
  }
  if (*(void *)(v10 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 40)))
  {
    unint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      v44[0] = v25;
      *(_DWORD *)uint64_t v24 = 136446210;
      uint64_t v26 = _typeName(_:qualified:)();
      uint64_t v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v22, v23, "[%{public}s.recipe.didSet] Ignoring recipe subtitleLeadingBadge which is unsupported for the latest telephony design", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87760E0](v25, -1, -1);
      MEMORY[0x1C87760E0](v24, -1, -1);
    }
  }
  SystemApertureIncomingCallControlsView.updateLeadingView()();
  id v28 = SystemApertureIncomingCallControlsView.updateSecondaryBadge()();
  SystemApertureIncomingCallControlsView.updateSecondaryLabel()((uint64_t)v28, v29, v30, v31, v32, v33, v34, v35, v37, v38, v39, v40, v41, *((uint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43, v44[0], v44[1],
    v44[2]);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel], sel_setAttributedText_, *(void *)(v10 + 80));
  return objc_msgSend(v1, sel_setNeedsLayout);
}

uint64_t SystemApertureIncomingCallControlsView.recipe.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_recipe;
  swift_beginAccess();
  return outlined init with copy of ConversationControlsRecipe(v3, a1);
}

uint64_t SystemApertureIncomingCallControlsView.recipe.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_recipe;
  swift_beginAccess();
  outlined assign with copy of ConversationControlsRecipe(a1, v3);
  swift_endAccess();
  SystemApertureIncomingCallControlsView.recipe.didset();
  return outlined destroy of ConversationControlsAction(a1, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
}

uint64_t (*SystemApertureIncomingCallControlsView.recipe.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return SystemApertureIncomingCallControlsView.recipe.modify;
}

uint64_t SystemApertureIncomingCallControlsView.recipe.modify(uint64_t a1, char a2)
{
  return SystemApertureIncomingCallControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))SystemApertureIncomingCallControlsView.recipe.didset);
}

uint64_t SystemApertureIncomingCallControlsView.cnkContentAlpha.modify(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t SystemApertureIncomingCallControlsView.systemAperturePreferredContentSize.getter()
{
  id v1 = objc_msgSend(v0, sel_window);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_frame);
    CGFloat v4 = v3;
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;

    v14.origin.x = v4;
    v14.origin.y = v6;
    v14.size.width = v8;
    v14.size.height = v10;
    CGFloat Width = CGRectGetWidth(v14);
  }
  else
  {
    CGFloat Width = 1.79769313e308;
  }
  id v12 = objc_msgSend(v0, sel_SBUISA_systemApertureLeadingConcentricContentLayoutGuide);
  objc_msgSend(v12, sel_layoutFrame);

  return *(void *)&Width;
}

Swift::Void __swiftcall SystemApertureIncomingCallControlsView.layoutSubviews()()
{
  OUTLINED_FUNCTION_18_1();
  swift_getObjectType();
  uint64_t v3 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_62();
  v164.receiver = v1;
  v164.super_class = (Class)type metadata accessor for SystemApertureIncomingCallControlsView();
  objc_msgSendSuper2(&v164, sel_layoutSubviews);
  uint64_t v5 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView;
  uint64_t v156 = (char *)v1;
  uint64_t v151 = *(void *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView);
  if (v151)
  {
    if (one-time initialization token for leadingViewSize != -1) {
      swift_once();
    }
    CGFloat v6 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.leadingViewSize;
  }
  else
  {
    if (one-time initialization token for avatarMissingSpacer != -1) {
      swift_once();
    }
    CGFloat v6 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMissingSpacer;
    if (one-time initialization token for leadingViewSize != -1) {
      swift_once();
    }
  }
  double MaxY = *((double *)&static SystemApertureIncomingCallControlsView.Constants.leadingViewSize + 1);
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x118))();
  uint64_t v8 = v2 + *(int *)(v3 + 68);
  id v9 = *(id *)v8;
  uint64_t v10 = *(void *)(v8 + 8);
  int v11 = *(unsigned __int8 *)(v8 + 16);
  outlined copy of LeadingViewType?(*(id *)v8, v10, *(unsigned char *)(v8 + 16));
  outlined destroy of ConversationControlsAction(v2, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  if (v11 != 255 && (outlined consume of LeadingViewType?(v9, v10, v11), (v11 & 1) != 0))
  {
    if (one-time initialization token for brandedCallMargins != -1) {
      swift_once();
    }
    double v12 = *(double *)&qword_1EA37E978;
    uint64_t v131 = *(void **)&v156[v5];
    if (v131)
    {
      id v132 = objc_msgSend(v131, sel_layer);
      if (one-time initialization token for brandedCallImageCornerRadius != -1) {
        swift_once();
      }
      objc_msgSend(v132, sel_setCornerRadius_, *(double *)&static SystemApertureIncomingCallControlsView.Constants.brandedCallImageCornerRadius);

      uint64_t v133 = *(void **)&v156[v5];
      if (v133)
      {
        id v134 = objc_msgSend(v133, sel_layer);
        objc_msgSend(v134, sel_setMasksToBounds_, 1);
      }
    }
  }
  else
  {
    if (one-time initialization token for avatarMargins != -1) {
      swift_once();
    }
    double v12 = *((double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMargins + 1);
  }
  UIColor_optional v13 = &selRef_ringButton;
  OUTLINED_FUNCTION_5_114();
  double v155 = (CGRectGetHeight(v167) - MaxY) * 0.5;
  objc_msgSend(*(id *)(v0 + v5), sel_setFrame_, v12);
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static Logger.conversationControls);
  os_log_type_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  uint64_t v149 = v5;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = OUTLINED_FUNCTION_15_1();
    uint64_t v18 = OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_22_52(v18);
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v19 = _typeName(_:qualified:)();
    OUTLINED_FUNCTION_33_35(v19, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v159 = *(void *)&v155;
    uint64_t v160 = *(uint64_t (**)(uint64_t))&v6;
    double v161 = MaxY;
    type metadata accessor for CGRect(0);
    uint64_t v21 = String.init<A>(reflecting:)();
    double v158 = COERCE_DOUBLE(OUTLINED_FUNCTION_33_35(v21, v22));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    UIColor_optional v13 = &selRef_ringButton;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v15, v16, "[%{public}s][layout] leadingFrame is %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  CGFloat v154 = v12;
  if (one-time initialization token for actionDiameter != -1) {
    swift_once();
  }
  [v156 v13[203]];
  double Width = CGRectGetWidth(v168);
  if (one-time initialization token for actionMargins != -1) {
    swift_once();
  }
  double v24 = Width - *(double *)&qword_1EA37E9F8;
  double v25 = v24 - OUTLINED_FUNCTION_14_74() * 0.5;
  OUTLINED_FUNCTION_5_114();
  double v26 = CGRectGetHeight(v169) * 0.5;
  unint64_t v27 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_acceptButton);
  uint64_t v153 = v27;
  OUTLINED_FUNCTION_17_61();
  objc_msgSend(v27, sel_setCenter_, v25, v26);
  id v28 = OUTLINED_FUNCTION_24_54();
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = OUTLINED_FUNCTION_15_1();
    uint64_t v31 = OUTLINED_FUNCTION_14_3();
    uint64_t v0 = 0x1F714D000;
    OUTLINED_FUNCTION_22_52(v31);
    *(_DWORD *)uint64_t v30 = 136446466;
    uint64_t v32 = _typeName(_:qualified:)();
    uint64_t v34 = OUTLINED_FUNCTION_33_35(v32, v33);
    OUTLINED_FUNCTION_20_60(v34);
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2080;
    uint64_t v159 = *(void *)&v26;
    type metadata accessor for CGPoint(0);
    uint64_t v35 = String.init<A>(reflecting:)();
    double v158 = COERCE_DOUBLE(OUTLINED_FUNCTION_33_35(v35, v36));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2F90000, v28, v29, "[%{public}s][layout] acceptCenter is %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  double v37 = v25 + OUTLINED_FUNCTION_14_74() * -0.5;
  if (one-time initialization token for interActionPadding != -1) {
    swift_once();
  }
  double v38 = v37 - *(double *)&static SystemApertureIncomingCallControlsView.Constants.interActionPadding;
  double v39 = v38 - OUTLINED_FUNCTION_14_74() * 0.5;
  OUTLINED_FUNCTION_5_114();
  double v40 = CGRectGetHeight(v170) * 0.5;
  long long v41 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_rejectButton);
  OUTLINED_FUNCTION_17_61();
  uint64_t v152 = v41;
  objc_msgSend(v41, sel_setCenter_, v39, v40);
  long long v42 = OUTLINED_FUNCTION_24_54();
  os_log_type_t v43 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_6_0(v43))
  {
    uint64_t v44 = OUTLINED_FUNCTION_15_1();
    uint64_t v45 = OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_22_52(v45);
    uint64_t v46 = OUTLINED_FUNCTION_37_30(4.8752e-34);
    uint64_t v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, v157);
    OUTLINED_FUNCTION_20_60(v48);
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2080;
    double v158 = v39;
    uint64_t v159 = *(void *)&v40;
    type metadata accessor for CGPoint(0);
    uint64_t v49 = String.init<A>(reflecting:)();
    double v158 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, v157));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_205(&dword_1C2F90000, v42, v51, "[%{public}s][layout] rejectCenter is %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  uint64_t v52 = self;
  id v53 = objc_msgSend(v52, sel_conversationKit);
  v165._id object = (void *)0xE000000000000000;
  OUTLINED_FUNCTION_4_6();
  v54._countAndFlagsBits = 0;
  v54._id object = (void *)0xE000000000000000;
  v165._countAndFlagsBits = 0;
  Swift::String v57 = NSLocalizedString(_:tableName:bundle:value:comment:)(v55, v56, (NSBundle)v53, v54, v165);

  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v57._countAndFlagsBits, (uint64_t)v57._object, v152);
  id v58 = objc_msgSend(v52, sel_conversationKit);
  v166._id object = (void *)0xE000000000000000;
  OUTLINED_FUNCTION_4_6();
  v59._countAndFlagsBits = 0;
  v59._id object = (void *)0xE000000000000000;
  v166._countAndFlagsBits = 0;
  Swift::String v62 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, v61, (NSBundle)v58, v59, v166);

  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v62._countAndFlagsBits, (uint64_t)v62._object, v153);
  if (v151)
  {
    v171.origin.x = v12;
    v171.origin.y = v155;
    v171.size.width = v6;
    v171.size.height = MaxY;
    double MaxX = CGRectGetMaxX(v171);
    uint64_t v64 = (SEL *)&selRef_ringButton;
    if (one-time initialization token for avatarMargins != -1) {
      swift_once();
    }
    double v65 = MaxX + *((double *)&xmmword_1EA37E960 + 1);
  }
  else
  {
    uint64_t v64 = (SEL *)&selRef_ringButton;
    if (one-time initialization token for textNoAvatarMinX != -1) {
      swift_once();
    }
    double v65 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX;
  }
  CGFloat v66 = v6;
  double v67 = *(double *)&qword_1EA37E9F8
      + *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter
      + *((double *)&static SystemApertureIncomingCallControlsView.Constants.actionMargins + 1)
      + *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter
      + *(double *)&static SystemApertureIncomingCallControlsView.Constants.interActionPadding;
  OUTLINED_FUNCTION_5_114();
  double v68 = CGRectGetWidth(v172) - v67 - v65;
  if (v68 > 0.0) {
    double v69 = v68;
  }
  else {
    double v69 = 0.0;
  }
  uint64_t v70 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel);
  id v71 = objc_msgSend(v70, sel_font);
  if (!v71)
  {
    __break(1u);
    return;
  }
  id v72 = v71;
  objc_msgSend(v71, sel_lineHeight);
  double v74 = v73;

  [v156 v64[203]];
  CGFloat Height = CGRectGetHeight(v173);
  double v76 = SystemApertureIncomingCallControlsView.maxSubtitleLabelSizeThatFits(_:)(v69, Height - v74);
  uint64_t v78 = v77;
  if (v151)
  {
    if (one-time initialization token for secondaryShortTextWidthThreshold != -1) {
      swift_once();
    }
    uint64_t v79 = &static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold;
  }
  else
  {
    if (one-time initialization token for secondaryShortTextWidthWithoutAvatarThreshold != -1) {
      swift_once();
    }
    uint64_t v79 = &static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthWithoutAvatarThreshold;
  }
  double v80 = *(double *)v79;
  long long v81 = OUTLINED_FUNCTION_24_54();
  os_log_type_t v82 = static os_log_type_t.debug.getter();
  long long v83 = (void *)v82;
  if (os_log_type_enabled(v81, v82))
  {
    uint64_t v84 = swift_slowAlloc();
    double v158 = COERCE_DOUBLE(OUTLINED_FUNCTION_9_0());
    uint64_t v85 = OUTLINED_FUNCTION_37_30(4.8755e-34);
    uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v85, v86, (uint64_t *)&v158);
    OUTLINED_FUNCTION_22_52(v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v84 + 12) = 1024;
    LODWORD(v157[0]) = v76 <= v80;
    uint64_t v64 = (SEL *)&selRef_ringButton;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v84 + 18) = 2048;
    *(double *)uint64_t v157 = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v84 + 28) = 2048;
    *(double *)uint64_t v157 = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1C2F90000, v81, (os_log_type_t)v83, "[%{public}s][layout] secondaryNextToSensor: %{BOOL}d, textWidth: %f, secondaryShortTextWidthThreshold: %f", (uint8_t *)v84, 0x26u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  uint64_t v88 = self;
  uint64_t v89 = swift_allocObject();
  *(void *)(v89 + 16) = v156;
  *(double *)(v89 + 24) = v76;
  *(void *)(v89 + 32) = v78;
  uint64_t v90 = swift_allocObject();
  *(void *)(v90 + 16) = partial apply for closure #1 in SystemApertureIncomingCallControlsView.layoutSubviews();
  *(void *)(v90 + 24) = v89;
  unint64_t v162 = partial apply for thunk for @callee_guaranteed () -> ();
  uint64_t v163 = v90;
  double v158 = MEMORY[0x1E4F143A8];
  uint64_t v159 = 1107296256;
  uint64_t v160 = thunk for @escaping @callee_guaranteed () -> ();
  double v161 = COERCE_DOUBLE(&block_descriptor_105);
  uint64_t v91 = _Block_copy(&v158);
  objc_super v92 = v156;
  swift_retain();
  swift_release();
  objc_msgSend((id)v88, sel_performWithoutAnimation_, v91);
  _Block_release(v91);
  LOBYTE(v88) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v88)
  {
    __break(1u);
  }
  else
  {
    double v150 = v80;
    if (v76 > v80)
    {
      if (one-time initialization token for textTopInset != -1) {
        swift_once();
      }
      UIColor_optional v93 = v92;
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)&v92[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel])
                        + 0x98))();
    }
    else
    {
      UIColor_optional v93 = v92;
      [v92 v64[203]];
      CGRectGetHeight(v174);
    }
    uint64_t v94 = OUTLINED_FUNCTION_24_54();
    os_log_type_t v95 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v94, v95))
    {
      uint64_t v96 = OUTLINED_FUNCTION_15_1();
      double v158 = COERCE_DOUBLE(OUTLINED_FUNCTION_14_3());
      *(_DWORD *)uint64_t v96 = 136446466;
      uint64_t v97 = OUTLINED_FUNCTION_43_25();
      v157[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v97, v98, (uint64_t *)&v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v96 + 12) = 2080;
      OUTLINED_FUNCTION_36_29();
      uint64_t v99 = CGRect.description.getter();
      uint64_t v101 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v99, v100, (uint64_t *)&v158);
      OUTLINED_FUNCTION_22_52(v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v94, v95, "[%{public}s][layout] secondaryFrame: %s", (uint8_t *)v96, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();

      unint64_t v102 = 0x1EA345000;
    }
    else
    {

      unint64_t v102 = 0x1EA345000uLL;
    }
    objc_super v92 = v93;
    uint64_t v64 = *(SEL **)&v93[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel];
    double v103 = OUTLINED_FUNCTION_35_27();
    objc_msgSend(v104, v105, v103);
    v175.origin.x = OUTLINED_FUNCTION_35_27();
    CGRectGetMaxY(v175);
    long long v83 = v70;
    double v106 = OUTLINED_FUNCTION_34_38();
    objc_msgSend(v107, v108, v106);
    v176.origin.x = v154;
    v176.origin.y = v155;
    v176.size.width = v66;
    v176.size.height = MaxY;
    double MaxY = CGRectGetMaxY(v176);
    if (*(void *)(v102 + 2704) == -1) {
      goto LABEL_58;
    }
  }
  swift_once();
LABEL_58:
  double v109 = *(double *)&xmmword_1EA37E960;
  v177.origin.x = OUTLINED_FUNCTION_34_38();
  double v110 = CGRectGetMaxY(v177);
  if (v76 > v150)
  {
    if (one-time initialization token for textBottomInset != -1) {
      swift_once();
    }
    double MinY = *(double *)&static SystemApertureIncomingCallControlsView.Constants.textBottomInset;
  }
  else
  {
    v178.origin.x = OUTLINED_FUNCTION_36_29();
    v178.size.height = *(CGFloat *)(v111 - 256);
    double MinY = CGRectGetMinY(v178);
  }
  double v113 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionMargins;
  double v114 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter;
  double v115 = *(double *)&qword_1EA37E9F0;
  uint64_t v116 = OUTLINED_FUNCTION_24_54();
  os_log_type_t v117 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v116, v117))
  {
    uint64_t v118 = swift_slowAlloc();
    double v158 = COERCE_DOUBLE(OUTLINED_FUNCTION_9_0());
    *(_DWORD *)uint64_t v118 = 136446978;
    uint64_t v119 = OUTLINED_FUNCTION_43_25();
    v157[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v119, v120, (uint64_t *)&v158);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v118 + 12) = 2048;
    *(double *)uint64_t v157 = MaxY + v109;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v118 + 22) = 2048;
    *(double *)uint64_t v157 = v110 + MinY;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v118 + 32) = 2048;
    *(double *)uint64_t v157 = v113 + v114 + v115;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1C2F90000, v116, v117, "[%{public}s][layout] leadingViewMaxY: %f, textMaxY: %f, %f", (uint8_t *)v118, 0x2Au);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  if (objc_msgSend(v92, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
    *(double *)&uint64_t v121 = COERCE_DOUBLE(swift_initStackObject());
    *(_OWORD *)(v121 + 16) = xmmword_1C376BA00;
    uint64_t v122 = *(void **)&v156[v149];
    *(void *)(v121 + 32) = v122;
    *(void *)(v121 + 40) = v64;
    *(void *)(v121 + 48) = v83;
    *(void *)(v121 + 56) = v152;
    *(void *)(v121 + 64) = v153;
    double v158 = *(double *)&v121;
    specialized Array._endMutation()();
    double v123 = v158;
    double v158 = MEMORY[0x1E4FBC860];
    uint64_t v124 = *(void **)(*(void *)&v123 + 32);
    if (v124)
    {
      id v125 = v124;
      id v126 = v122;
      uint64_t v127 = v64;
      id v128 = v83;
      id v129 = v152;
      MEMORY[0x1C87733A0](v153);
      OUTLINED_FUNCTION_4_125();
      if (v130) {
        OUTLINED_FUNCTION_3_135();
      }
      OUTLINED_FUNCTION_28_45();
      specialized Array._endMutation()();
    }
    else
    {
      id v135 = v122;
      uint64_t v136 = v64;
      id v137 = v83;
      id v138 = v152;
      id v139 = v153;
    }
    int v140 = *(void **)(*(void *)&v123 + 40);
    if (v140)
    {
      id v141 = v140;
      MEMORY[0x1C87733A0]();
      OUTLINED_FUNCTION_4_125();
      if (v130) {
        OUTLINED_FUNCTION_3_135();
      }
      OUTLINED_FUNCTION_28_45();
      specialized Array._endMutation()();
    }
    int v142 = *(void **)(*(void *)&v123 + 48);
    if (v142)
    {
      id v143 = v142;
      MEMORY[0x1C87733A0]();
      OUTLINED_FUNCTION_4_125();
      if (v130) {
        OUTLINED_FUNCTION_3_135();
      }
      OUTLINED_FUNCTION_28_45();
      specialized Array._endMutation()();
    }
    uint64_t v144 = *(void **)(*(void *)&v123 + 56);
    if (v144)
    {
      id v145 = v144;
      MEMORY[0x1C87733A0]();
      OUTLINED_FUNCTION_4_125();
      if (v130) {
        OUTLINED_FUNCTION_3_135();
      }
      OUTLINED_FUNCTION_28_45();
      specialized Array._endMutation()();
    }
    uint64_t v146 = *(void **)(*(void *)&v123 + 64);
    if (v146)
    {
      id v147 = v146;
      MEMORY[0x1C87733A0]();
      OUTLINED_FUNCTION_4_125();
      if (v130) {
        OUTLINED_FUNCTION_3_135();
      }
      OUTLINED_FUNCTION_28_45();
      specialized Array._endMutation()();
    }
    unint64_t v148 = *(void *)&v158;
    swift_bridgeObjectRelease();
    specialized Sequence.forEach(_:)(v148, v92);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_28_1();
}

id closure #1 in SystemApertureIncomingCallControlsView.layoutSubviews()(uint64_t a1, double a2, double a3)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel);
  objc_msgSend(v3, sel_setFrame_, 0.0, 0.0, a2, a3);
  objc_msgSend(v3, sel_setNeedsLayout);
  return objc_msgSend(v3, sel_layoutIfNeeded);
}

CGSize __swiftcall SystemApertureIncomingCallControlsView.sizeThatFits(_:)(CGSize a1)
{
  OUTLINED_FUNCTION_18_1();
  uint64_t v3 = v1;
  double v5 = v4;
  uint64_t v7 = v6;
  uint64_t ObjectType = swift_getObjectType();
  double v9 = COERCE_DOUBLE(type metadata accessor for ConversationControlsRecipe());
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10);
  double v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v5 <= 2.22507386e-308) {
    double v5 = 1.79769313e308;
  }
  v96[3] = v7;
  double v97 = v5;
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)static Logger.conversationControls);
  os_log_type_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v85 = ObjectType;
  uint64_t v87 = v12;
  double v86 = v9;
  if (v17)
  {
    uint64_t v18 = OUTLINED_FUNCTION_15_1();
    v96[0] = OUTLINED_FUNCTION_14_3();
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v19 = _typeName(_:qualified:)();
    uint64_t v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, v96);
    OUTLINED_FUNCTION_27_50(v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    double v89 = *(double *)&v7;
    uint64_t v90 = *(void *)&v5;
    type metadata accessor for CGSize(0);
    uint64_t v22 = String.init<A>(reflecting:)();
    double v89 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, v96));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_205(&dword_1C2F90000, v15, v24, "[%{public}s][sizing] sizingThatFits %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  if (one-time initialization token for actionDiameter != -1) {
    swift_once();
  }
  double v25 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter;
  double v26 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter;
  if (one-time initialization token for interActionPadding != -1)
  {
    swift_once();
    double v26 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter;
  }
  double v27 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.interActionPadding;
  id v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v84 = v14;
  if (v30)
  {
    uint64_t v31 = OUTLINED_FUNCTION_15_1();
    v96[0] = OUTLINED_FUNCTION_14_3();
    *(_DWORD *)uint64_t v31 = 136446466;
    uint64_t v32 = OUTLINED_FUNCTION_43_25();
    uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, v96);
    OUTLINED_FUNCTION_27_50(v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    double v89 = v25 + v27 + v26;
    uint64_t v90 = *(void *)&v26;
    type metadata accessor for CGSize(0);
    uint64_t v35 = String.init<A>(reflecting:)();
    double v89 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, v96));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_205(&dword_1C2F90000, v28, v37, "[%{public}s][sizing] actionsSize is  %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  uint64_t v38 = (uint64_t)v87;
  double v39 = v86;
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x118))();
  uint64_t v40 = v38 + *(int *)(*(void *)&v39 + 68);
  id v41 = *(id *)v40;
  uint64_t v42 = *(void *)(v40 + 8);
  int v43 = *(unsigned __int8 *)(v40 + 16);
  outlined copy of LeadingViewType?(*(id *)v40, v42, *(unsigned char *)(v40 + 16));
  outlined destroy of ConversationControlsAction(v38, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  if (v43 != 255 && (outlined consume of LeadingViewType?(v41, v42, v43), (v43 & 1) != 0))
  {
    if (one-time initialization token for brandedCallMargins != -1) {
      swift_once();
    }
    uint64_t v44 = (double *)&qword_1EA37E978;
  }
  else
  {
    if (one-time initialization token for avatarMargins != -1) {
      swift_once();
    }
    uint64_t v44 = (double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMargins + 1;
  }
  double v45 = *v44;
  if (one-time initialization token for leadingViewSize != -1) {
    swift_once();
  }
  double v46 = v45 + *(double *)&static SystemApertureIncomingCallControlsView.Constants.leadingViewSize;
  if (one-time initialization token for avatarMargins != -1) {
    swift_once();
  }
  double v47 = v46 + *((double *)&xmmword_1EA37E960 + 1);
  if (one-time initialization token for actionMargins != -1) {
    swift_once();
  }
  double v48 = *(double *)&qword_1EA37E9F8
      + *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter
      + *((double *)&static SystemApertureIncomingCallControlsView.Constants.actionMargins + 1)
      + *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter
      + *(double *)&static SystemApertureIncomingCallControlsView.Constants.interActionPadding;
  swift_beginAccess();
  double v49 = v97;
  objc_msgSend(*(id *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel), sel_sizeThatFits_, *(double *)&v7 - v48 - v47, v97);
  double v51 = v50;
  double v53 = v52;
  objc_msgSend(*(id *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel), sel_sizeThatFits_, *(double *)&v7 - v48 - v47, v49 - v52);
  double v55 = v54;
  double v57 = v56;
  double v95 = 0.0;
  id v58 = self;
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = v3;
  *(double *)(v59 + 24) = v55;
  *(double *)(v59 + 32) = v57;
  *(void *)(v59 + 40) = &v95;
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = partial apply for closure #1 in SystemApertureIncomingCallControlsView.sizeThatFits(_:);
  *(void *)(v60 + 24) = v59;
  UIColor_optional v93 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  uint64_t v94 = v60;
  double v89 = MEMORY[0x1E4F143A8];
  uint64_t v90 = 1107296256;
  uint64_t v91 = thunk for @escaping @callee_guaranteed () -> ();
  objc_super v92 = &block_descriptor_13_4;
  Swift::String_optional v61 = _Block_copy(&v89);
  Swift::String v62 = v3;
  swift_retain();
  swift_release();
  objc_msgSend(v58, sel_performWithoutAnimation_, v61);
  _Block_release(v61);
  LOBYTE(v61) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v61)
  {
    __break(1u);
LABEL_42:
    swift_once();
    goto LABEL_32;
  }
  double v83 = v48;
  double v86 = v47;
  uint64_t v87 = (char *)v7;
  if (v51 > v55) {
    double v2 = v51;
  }
  else {
    double v2 = v55;
  }
  double v53 = v53 + v57 - v95;
  double v57 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMargins;
  double v47 = *((double *)&static SystemApertureIncomingCallControlsView.Constants.leadingViewSize + 1);
  double v51 = *(double *)&xmmword_1EA37E960;
  uint64_t v7 = *(uint64_t *)&static SystemApertureIncomingCallControlsView.Constants.actionMargins;
  double v48 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter;
  double v55 = *(double *)&qword_1EA37E9F0;
  if (one-time initialization token for textTopInset != -1) {
    goto LABEL_42;
  }
LABEL_32:
  double v63 = v57 + v47;
  double v64 = *(double *)&v7 + v48;
  double v65 = v53 + *(double *)&static SystemApertureIncomingCallControlsView.Constants.textTopInset;
  if (one-time initialization token for textBottomInset != -1) {
    swift_once();
  }
  double v66 = v63 + v51;
  double v67 = v64 + v55;
  double v68 = v65 + *(double *)&static SystemApertureIncomingCallControlsView.Constants.textBottomInset;
  double v69 = v83;
  if (one-time initialization token for minimumTextWidth != -1) {
    swift_once();
  }
  double v70 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.minimumTextWidth;
  if (v2 > *(double *)&static SystemApertureIncomingCallControlsView.Constants.minimumTextWidth) {
    double v70 = v2;
  }
  double v71 = v69 + v86 + v70;
  specialized max<A>(_:_:_:_:)(MEMORY[0x1E4FBC860], v66, v68, v67);
  uint64_t v73 = v72;
  double v74 = Logger.logObject.getter();
  os_log_type_t v75 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = OUTLINED_FUNCTION_9_0();
    double v89 = COERCE_DOUBLE(OUTLINED_FUNCTION_9_0());
    *(_DWORD *)uint64_t v76 = 136446722;
    uint64_t v77 = OUTLINED_FUNCTION_43_25();
    uint64_t v88 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, (uint64_t *)&v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 12) = 2048;
    uint64_t v88 = *(void *)&v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v76 + 22) = 2048;
    uint64_t v88 = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1C2F90000, v74, v75, "[%{public}s][sizing] measuredWidth: %f, measuredHeight: %f", (uint8_t *)v76, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  swift_release();
  OUTLINED_FUNCTION_28_1();
  result.height = v80;
  result.width = v79;
  return result;
}

id closure #1 in SystemApertureIncomingCallControlsView.sizeThatFits(_:)(uint64_t a1, double *a2, double a3, double a4)
{
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel);
  objc_msgSend(v7, sel_frame);
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  objc_msgSend(v7, sel_setFrame_, 0.0, 0.0, a3, a4);
  objc_msgSend(v7, sel_setNeedsLayout);
  id v16 = objc_msgSend(v7, sel_layoutIfNeeded);
  *a2 = (*(double (**)(id))((*MEMORY[0x1E4FBC8C8] & *v7) + 0x98))(v16);
  return objc_msgSend(v7, sel_setFrame_, v9, v11, v13, v15);
}

CGSize __swiftcall SystemApertureIncomingCallControlsView.systemLayoutSizeFitting(_:withHorizontalFittingPriority:verticalFittingPriority:)(CGSize _, __C::UILayoutPriority withHorizontalFittingPriority, __C::UILayoutPriority verticalFittingPriority)
{
  objc_msgSend(v3, sel_sizeThatFits_, _.width, _.height, *(double *)&withHorizontalFittingPriority.rawValue, *(double *)&verticalFittingPriority.rawValue);
  result.height = v5;
  result.width = v4;
  return result;
}

id SystemApertureIncomingCallControlsView.intrinsicContentSize.getter()
{
  return objc_msgSend(v0, sel_sizeThatFits_, 1.79769313e308, 1.79769313e308);
}

void SystemApertureIncomingCallControlsView.updateLeadingView()()
{
  OUTLINED_FUNCTION_31();
  double v2 = v0;
  swift_getObjectType();
  uint64_t v3 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_62();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.conversationControls);
  uint64_t v6 = (void *)Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  double v8 = (void *)&protocol conformance descriptor for RejectedRemoteControlRequesetContext;
  if (OUTLINED_FUNCTION_6_0(v7))
  {
    double v9 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v25 = OUTLINED_FUNCTION_9_0();
    _DWORD *v9 = 136446210;
    uint64_t v10 = _typeName(_:qualified:)();
    uint64_t v12 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v25);
    OUTLINED_FUNCTION_32_4(v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_10_12(&dword_1C2F90000, v13, v14, "[%{public}s] updateLeadingView");
    swift_arrayDestroy();
    double v8 = &protocol conformance descriptor for RejectedRemoteControlRequesetContext;
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView), sel_removeFromSuperview);
  SystemApertureIncomingCallControlsView.leadingView.setter(0);
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x118))();
  uint64_t v15 = v1 + *(int *)(v3 + 68);
  id v17 = *(id *)v15;
  uint64_t v16 = *(void *)(v15 + 8);
  int v18 = *(unsigned __int8 *)(v15 + 16);
  outlined copy of LeadingViewType?(*(id *)v15, v16, *(unsigned char *)(v15 + 16));
  outlined destroy of ConversationControlsAction(v1, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  if (v18 == 255)
  {
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_37();
      uint64_t v25 = OUTLINED_FUNCTION_9_0();
      *(_DWORD *)uint64_t v21 = v8[264];
      uint64_t v22 = _typeName(_:qualified:)();
      uint64_t v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v25);
      OUTLINED_FUNCTION_23_2(v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2F90000, v19, v20, "[%{public}s] omitting leading view", v21, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
    }
  }
  else
  {
    if (v18) {
      SystemApertureIncomingCallControlsView.updateBrandedImageIcon(using:)();
    }
    else {
      SystemApertureIncomingCallControlsView.updateAvatar(using:)();
    }
    outlined consume of LeadingViewType?(v17, v16, v18);
  }
  OUTLINED_FUNCTION_28();
}

void SystemApertureIncomingCallControlsView.updateAvatar(using:)()
{
  OUTLINED_FUNCTION_31();
  double v2 = v0;
  uint64_t v4 = v3;
  swift_getObjectType();
  uint64_t v5 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.conversationControls);
  double v8 = (void *)Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_6_0(v9))
  {
    uint64_t v10 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v21 = OUTLINED_FUNCTION_9_0();
    _DWORD *v10 = 136446210;
    uint64_t v11 = _typeName(_:qualified:)();
    uint64_t v13 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v21);
    OUTLINED_FUNCTION_23_2(v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_10_12(&dword_1C2F90000, v14, v15, "[%{public}s] showing avatar");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  id v16 = v4;
  SystemApertureIncomingCallControlsView.leadingView.setter((uint64_t)v4);
  id v17 = objc_msgSend(v16, sel_layer);
  OUTLINED_FUNCTION_1_12();
  uint64_t v19 = *(void (**)(void))(v18 + 280);
  v19();
  uint64_t v20 = *(unsigned __int8 *)(v1 + *(int *)(v5 + 64));
  outlined destroy of ConversationControlsAction(v1, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  objc_msgSend(v17, sel_setAllowsHitTesting_, v20);

  OUTLINED_FUNCTION_39_31();
  v19();
  OUTLINED_FUNCTION_36_2();
  objc_msgSend(v16, sel_setUserInteractionEnabled_, v20);
  objc_msgSend(v2, sel_addSubview_, v16);
  objc_msgSend(v2, sel_setNeedsLayout);
  OUTLINED_FUNCTION_28();
}

void SystemApertureIncomingCallControlsView.updateBrandedImageIcon(using:)()
{
  OUTLINED_FUNCTION_31();
  double v2 = v0;
  uint64_t v4 = v3;
  swift_getObjectType();
  uint64_t v5 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_62();
  if (one-time initialization token for conversationControls != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.conversationControls);
  double v8 = (void *)Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_6_0(v9))
  {
    uint64_t v10 = (_DWORD *)OUTLINED_FUNCTION_37();
    uint64_t v22 = OUTLINED_FUNCTION_9_0();
    _DWORD *v10 = 136446210;
    uint64_t v11 = _typeName(_:qualified:)();
    uint64_t v13 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v22);
    OUTLINED_FUNCTION_32_4(v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_10_12(&dword_1C2F90000, v14, v15, "[%{public}s] updateBrandedImageIcon");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
  }

  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v4);
  id v17 = v16;
  SystemApertureIncomingCallControlsView.leadingView.setter((uint64_t)v16);
  id v18 = objc_msgSend(v17, sel_layer);
  OUTLINED_FUNCTION_1_12();
  uint64_t v20 = *(void (**)(void))(v19 + 280);
  v20();
  uint64_t v21 = *(unsigned __int8 *)(v1 + *(int *)(v5 + 64));
  outlined destroy of ConversationControlsAction(v1, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  objc_msgSend(v18, sel_setAllowsHitTesting_, v21);

  OUTLINED_FUNCTION_39_31();
  v20();
  OUTLINED_FUNCTION_36_2();
  objc_msgSend(v17, sel_setUserInteractionEnabled_, v21);
  objc_msgSend(v2, sel_addSubview_, v17);
  objc_msgSend(v2, sel_setNeedsLayout);

  OUTLINED_FUNCTION_28();
}

id SystemApertureIncomingCallControlsView.updateSecondaryBadge()()
{
  double v2 = v0;
  uint64_t v3 = type metadata accessor for ConversationControlsRecipe();
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_62();
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel];
  uint64_t v6 = (void *)MEMORY[0x1E4FBC8C8];
  OUTLINED_FUNCTION_6_113();
  (*(void (**)(void))(v7 + 280))();
  double v8 = *(void **)(v1 + *(int *)(v4 + 48));
  if (v8) {
    id v9 = v8;
  }
  outlined destroy of ConversationControlsAction(v1, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  (*(void (**)(void *))((*v6 & *v5) + 0x68))(v8);
  return objc_msgSend(v2, sel_setNeedsLayout);
}

void SystemApertureIncomingCallControlsView.updateSecondaryLabel()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_31();
  a19 = v21;
  a20 = v22;
  unint64_t v23 = v20;
  uint64_t v24 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1F4188790](v24 - 8);
  OUTLINED_FUNCTION_36();
  uint64_t v27 = v25 - v26;
  MEMORY[0x1F4188790](v28);
  BOOL v30 = (char *)&a9 - v29;
  MEMORY[0x1F4188790](v31);
  unint64_t v33 = (char *)&a9 - v32;
  uint64_t v34 = *(void *)((char *)v20
                  + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_alternatingLabelController);
  if (v34)
  {
    uint64_t v35 = *(void (**)(uint64_t))(*(void *)v34 + 264);
    uint64_t v36 = swift_retain();
    v35(v36);
    swift_release();
  }
  uint64_t v37 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v38 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v23) + 0x118);
  OUTLINED_FUNCTION_31_40();
  v38();
  unint64_t v39 = *((void *)v33 + 11);
  swift_bridgeObjectRetain();
  outlined destroy of ConversationControlsAction((uint64_t)v33, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  if (v39 >> 62)
  {
    OUTLINED_FUNCTION_14_4();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v41 = *(void **)((char *)v23
                   + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel);
  if (v40 < 2)
  {
    OUTLINED_FUNCTION_31_40();
    v38();
    unint64_t v47 = *(void *)(v27 + 88);
    swift_bridgeObjectRetain();
    outlined destroy of ConversationControlsAction(v27, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
    if (v47 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v48) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v48)
      {
LABEL_9:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v47 & 0xC000000000000001) == 0, v47);
        if ((v47 & 0xC000000000000001) != 0) {
          id v49 = (id)MEMORY[0x1C87744F0](0, v47);
        }
        else {
          id v49 = *(id *)(v47 + 32);
        }
        uint64_t v48 = (uint64_t)v49;
      }
    }
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))((*v37 & *v41) + 0x80))(v48);
    goto LABEL_13;
  }
  uint64_t v42 = v41;
  OUTLINED_FUNCTION_31_40();
  v38();
  unint64_t v43 = *((void *)v30 + 11);
  swift_bridgeObjectRetain();
  outlined destroy of ConversationControlsAction((uint64_t)v30, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  type metadata accessor for AlternatingLabelController();
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = *(void *)specialized AlternatingLabelController.init(label:timeInterval:alternatingBetween:observer:)(v42, v43, 2.5, 0, 0, v44);
  (*(void (**)(void))(v45 + 256))();
  uint64_t v46 = swift_retain();
  SystemApertureIncomingCallControlsView.alternatingLabelController.setter(v46);
  swift_release();
LABEL_13:
  objc_msgSend(v23, sel_setNeedsLayout);
  OUTLINED_FUNCTION_28();
}

double SystemApertureIncomingCallControlsView.maxSubtitleLabelSizeThatFits(_:)(double a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1F4188790](v6 - 8);
  OUTLINED_FUNCTION_36();
  uint64_t v9 = v7 - v8;
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = &v40[-v11];
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel], sel_sizeThatFits_, a1, a2);
  double v14 = v13;
  OUTLINED_FUNCTION_6_113();
  id v16 = *(void (**)(void))(v15 + 280);
  v16();
  unint64_t v17 = *((void *)v12 + 11);
  swift_bridgeObjectRetain();
  outlined destroy of ConversationControlsAction((uint64_t)v12, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
  if (v17 >> 62)
  {
    OUTLINED_FUNCTION_14_4();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v18 >= 2)
  {
    OUTLINED_FUNCTION_23_8();
    uint64_t v20 = (void *)(*(uint64_t (**)(void))(v19 + 120))();
    v16();
    uint64_t v21 = v3;
    unint64_t v22 = swift_bridgeObjectRetain();
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo18NSAttributedStringCG_So6CGSizeVs5NeverOTg50131_s15ConversationKit38SystemApertureIncomingCallControlsViewC28maxSubtitleLabelSizeThatFits33_085E1321DC3A0050D89D5085A314C15FLLySo6f10VAGFAGSo18dE6CXEfU_0I3Kit0klmnoP0CAJTf1cn_n(v22, v21, a1, a2);
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    outlined destroy of ConversationControlsAction(v9, (void (*)(void))type metadata accessor for ConversationControlsRecipe);
    OUTLINED_FUNCTION_23_8();
    uint64_t v26 = *(void (**)(void *))(v25 + 128);
    id v27 = v20;
    v26(v20);
    uint64_t v28 = *(void *)(v24 + 16);
    if (v28)
    {
      double v14 = *(double *)(v24 + 32);
      uint64_t v29 = v28 - 1;
      if (v29)
      {
        BOOL v30 = (double *)(v24 + 48);
        uint64_t v31 = v29;
        double v32 = *(double *)(v24 + 32);
        do
        {
          double v33 = *v30;
          v30 += 2;
          double v34 = v33;
          if (v32 < v33)
          {
            double v14 = v34;
            double v32 = v34;
          }
          --v31;
        }
        while (v31);
        uint64_t v35 = (double *)(v24 + 56);
        double v36 = *(double *)(v24 + 40);
        do
        {
          double v37 = *v35;
          v35 += 2;
          double v38 = v37;
          if (v36 < v37) {
            double v36 = v38;
          }
          --v29;
        }
        while (v29);
      }
    }
    swift_bridgeObjectRelease();
  }
  return v14;
}

id SystemApertureIncomingCallControlsView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void SystemApertureIncomingCallControlsView.init(frame:)()
{
}

id SystemApertureIncomingCallControlsView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SystemApertureIncomingCallControlsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for ControlsView.cnkContentAlpha.getter in conformance SystemApertureIncomingCallControlsView()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t protocol witness for ControlsView.cnkContentAlpha.setter in conformance SystemApertureIncomingCallControlsView()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t (*protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureIncomingCallControlsView(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x110))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ControlsView.recipe.getter in conformance SystemApertureIncomingCallControlsView()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t protocol witness for ControlsView.recipe.setter in conformance SystemApertureIncomingCallControlsView()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t (*protocol witness for ControlsView.recipe.modify in conformance SystemApertureIncomingCallControlsView(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x128))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for SystemAperturePreferredContentSizeProvider.systemAperturePreferredContentSize.getter in conformance SystemApertureIncomingCallControlsView()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x130))();
}

uint64_t sub_1C3685214()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in SystemApertureIncomingCallControlsView.layoutSubviews()()
{
  return closure #1 in SystemApertureIncomingCallControlsView.layoutSubviews()(*(void *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1C368525C()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in SystemApertureIncomingCallControlsView.sizeThatFits(_:)()
{
  return closure #1 in SystemApertureIncomingCallControlsView.sizeThatFits(_:)(*(void *)(v0 + 16), *(double **)(v0 + 40), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t ObjC metadata update function for SystemApertureIncomingCallControlsView()
{
  return type metadata accessor for SystemApertureIncomingCallControlsView();
}

uint64_t type metadata completion function for SystemApertureIncomingCallControlsView()
{
  uint64_t result = type metadata accessor for ConversationControlsRecipe();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SystemApertureIncomingCallControlsView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SystemApertureIncomingCallControlsView);
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.__allocating_init(recipe:controlsManager:menuHostViewController:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.cnkContentAlpha.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.cnkContentAlpha.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.cnkContentAlpha.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.recipe.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.recipe.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.recipe.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.systemAperturePreferredContentSize.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

ValueMetadata *type metadata accessor for SystemApertureIncomingCallControlsView.Constants()
{
  return &type metadata for SystemApertureIncomingCallControlsView.Constants;
}

uint64_t specialized AlternatingLabelController.init(label:timeInterval:alternatingBetween:observer:)(void *a1, unint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + 16) = 0;
  *(void *)(a6 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a6 + 56) = 0;
  *(void *)(a6 + 72) = 0;
  swift_unknownObjectWeakInit();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_6;
    }
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0) {
    id v12 = (id)MEMORY[0x1C87744F0](0, a2);
  }
  else {
    id v12 = *(id *)(a2 + 32);
  }
  uint64_t v11 = (uint64_t)v12;
LABEL_6:
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x80))(v11);
  *(void *)(a6 + 32) = &protocol witness table for BadgedLabel;
  swift_unknownObjectWeakAssign();

  *(void *)(a6 + 48) = a2;
  *(double *)(a6 + 40) = a3;
  *(void *)(a6 + 72) = a5;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return a6;
}

uint64_t OUTLINED_FUNCTION_41_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = v6[3];
  uint64_t v9 = v6[4];
  uint64_t v10 = v6[1];
  uint64_t v11 = v6[2];
  uint64_t v12 = *v6;
  return outlined copy of ConversationControlsRecipe.Actions(v12, v10, v11, v8, v9, a6);
}

void SharedContentView.isPaused.setter(char a1)
{
  OUTLINED_FUNCTION_4_10();
  *unint64_t v1 = a1;
  SharedContentView.isPaused.didset();
}

Swift::Int SharedContentView.configure(with:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = type metadata accessor for SharedContentViewModel(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
  MEMORY[0x1F4188790](v10 - 8);
  OUTLINED_FUNCTION_16_0();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SharedContentViewModel?);
  MEMORY[0x1F4188790](v11 - 8);
  double v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  SharedContentViewModel.hash(into:)((uint64_t)__dst);
  Swift::Int result = Hasher._finalize()();
  if ((v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_mostRecentViewModelHash + 8] & 1) != 0
    || *(void *)&v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_mostRecentViewModelHash] != result)
  {
    id v49 = (Swift::Int *)&v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_mostRecentViewModelHash];
    Swift::Int v50 = result;
    uint64_t v55 = ObjectType;
    double v56 = v9;
    uint64_t v15 = v6;
    uint64_t v16 = a1;
    uint64_t v57 = v2;
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v48 = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C376BA10;
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    MEMORY[0x1F4188790](v18 - 8);
    uint64_t v54 = v19;
    uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v21 = &v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_loggingIdentifier];
    uint64_t v22 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_0();
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v51 = v23 + 16;
    double v52 = v24;
    v24(v20, (uint64_t)v21, v22);
    uint64_t v53 = v22;
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    uint64_t v25 = specialized >> prefix<A>(_:)((uint64_t)v20);
    uint64_t v27 = v26;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    uint64_t v28 = MEMORY[0x1E4FBB1A0];
    *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v29 = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v17 + 64) = v29;
    *(void *)(v17 + 32) = v25;
    *(void *)(v17 + 40) = v27;
    outlined init with copy of SharedContentViewModel(v16, (uint64_t)v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    uint64_t v30 = specialized >> prefix<A>(_:)();
    uint64_t v32 = v31;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for SharedContentViewModel?);
    *(void *)(v17 + 96) = v28;
    *(void *)(v17 + 104) = v29;
    *(void *)(v17 + 72) = v30;
    *(void *)(v17 + 80) = v32;
    __dst[0] = v3;
    double v33 = v3;
    uint64_t v34 = String.init<A>(reflecting:)();
    *(void *)(v17 + 136) = v28;
    *(void *)(v17 + 144) = v29;
    *(void *)(v17 + 112) = v34;
    *(void *)(v17 + 120) = v35;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    double v36 = v49;
    Swift::Int *v49 = v50;
    *((unsigned char *)v36 + 8) = 0;
    SharedContentView.configureViewVisibility(for:)(v16);
    uint64_t v37 = (uint64_t)v56;
    outlined init with copy of SharedContentViewModel(v16, (uint64_t)v56);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      OUTLINED_FUNCTION_11_77();
      uint64_t v39 = v37 + *(int *)(v38 + 80);
      uint64_t v40 = v37;
      uint64_t v41 = v57;
      outlined init with take of SharedContentViewModel.ParticipantDetails(v40, v57);
      memcpy(__dst, v33, 0xA8uLL);
      uint64_t v42 = outlined init with take of ParticipantVideoOverlayView.ViewModel(v39, (uint64_t)v60);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
      OUTLINED_FUNCTION_11_77();
      uint64_t v43 = v37;
      uint64_t v41 = v57;
      outlined init with take of SharedContentViewModel.ParticipantDetails(v43, v57);
      uint64_t v42 = (uint64_t)memcpy(__dst, v33, 0xA8uLL);
      memset(v60, 0, sizeof(v60));
      uint64_t v61 = 0;
      char v62 = -1;
    }
    MEMORY[0x1F4188790](v42);
    uint64_t v45 = (char *)&v48 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v46 = v53;
    v52(v45, v41, v53);
    __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v46);
    uint64_t v47 = (uint64_t)&v33[OBJC_IVAR____TtC15ConversationKit17SharedContentView_participantIdentifier];
    swift_beginAccess();
    outlined assign with take of UUID?((uint64_t)v45, v47);
    swift_endAccess();
    *(void *)&v33[OBJC_IVAR____TtC15ConversationKit17SharedContentView_deviceOrientation] = v32;
    SharedContentView.updateVideoViewTransform()();
    outlined init with copy of Environment<DynamicTypeSize>.Content((uint64_t)__dst, (uint64_t)v58, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
    if (v58[3] == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v58, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
    }
    else
    {
      memcpy(v59, v58, sizeof(v59));
      SharedContentVideoView.configure(with:)((uint64_t)v59);
      outlined destroy of SharedContentVideoView.ViewModel((uint64_t)v59);
    }
    outlined init with copy of Environment<DynamicTypeSize>.Content((uint64_t)v60, (uint64_t)v58, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
    if (LOBYTE(v58[13]) == 255)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v60, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)__dst, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
      outlined destroy of SharedContentViewModel.ParticipantDetails(v41);
      return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v58, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
    }
    else
    {
      outlined init with take of ParticipantVideoOverlayView.ViewModel((uint64_t)v58, (uint64_t)v59);
      ParticipantVideoOverlayView.configure(with:)((uint64_t)v59);
      outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)v59);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v60, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)__dst, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
      return outlined destroy of SharedContentViewModel.ParticipantDetails(v41);
    }
  }
  return result;
}

id SharedContentView.customCornerRadius.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius);
  swift_beginAccess();
  double *v3 = a1;
  return SharedContentView.customCornerRadius.didset();
}

void SharedContentView.systemRootLayerTransform.setter(_OWORD *a1)
{
  OUTLINED_FUNCTION_4_10();
  long long v3 = a1[1];
  *uint64_t v1 = *a1;
  v1[1] = v3;
  v1[2] = a1[2];
  SharedContentView.updateVideoViewTransform()();
}

uint64_t specialized Collection.firstIndex(where:)(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    type metadata accessor for NSObject();
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1C87744F0](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      if (static NSObject.== infix(_:_:)())
      {

        a2 = v7;
        goto LABEL_17;
      }
      char v8 = static NSObject.== infix(_:_:)();

      if (v8) {
        goto LABEL_17;
      }
      uint64_t v9 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        break;
      }
      ++v5;
      if (v9 == v4)
      {
        uint64_t v5 = 0;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = 0;
LABEL_17:

  return v5;
}

{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v9;

  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t v5 = 0;
    goto LABEL_15;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_14;
  }
LABEL_3:
  type metadata accessor for NSObject();
  uint64_t v5 = 0;
  while (1)
  {
    id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87744F0](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
    uint64_t v7 = v6;
    char v8 = static NSObject.== infix(_:_:)();

    if (v8) {
      break;
    }
    uint64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4)
    {
      uint64_t v5 = 0;
      break;
    }
  }
LABEL_15:

  return v5;
}

{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v9;

  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t v5 = 0;
    goto LABEL_15;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_14;
  }
LABEL_3:
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  uint64_t v5 = 0;
  while (1)
  {
    id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87744F0](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
    uint64_t v7 = v6;
    char v8 = static NSObject.== infix(_:_:)();

    if (v8) {
      break;
    }
    uint64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4)
    {
      uint64_t v5 = 0;
      break;
    }
  }
LABEL_15:

  return v5;
}

uint64_t SharedContentView.participantIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_participantIdentifier;
  OUTLINED_FUNCTION_2();
  return outlined init with copy of Environment<DynamicTypeSize>.Content(v3, a1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
}

uint64_t key path getter for SharedContentView.delegate : SharedContentView@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8776240](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for SharedContentView.delegate : SharedContentView(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t SharedContentView.delegate.getter()
{
  OUTLINED_FUNCTION_5_4();
  return MEMORY[0x1C8776240](v0);
}

uint64_t SharedContentView.delegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_1();
  *(void *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*SharedContentView.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  void v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

double SharedContentView.customCornerRadius.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *(double *)v0;
}

double key path getter for SharedContentView.customCornerRadius : SharedContentView@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (double *)(*a1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

id SharedContentView.customCornerRadius.didset()
{
  OUTLINED_FUNCTION_5_4();
  objc_msgSend(v1, sel__setContinuousCornerRadius_, *v0);
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView];
  double v3 = *v0;
  id v4 = *(id *)&v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView];
  id v5 = v2;
  objc_msgSend(v4, sel__setContinuousCornerRadius_, v3);
  objc_msgSend(v5, sel__setContinuousCornerRadius_, *v0);

  id result = *(id *)&v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot];
  if (result) {
    return objc_msgSend(result, sel__setContinuousCornerRadius_, *v0);
  }
  return result;
}

uint64_t (*SharedContentView.customCornerRadius.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return SharedContentView.customCornerRadius.modify;
}

uint64_t SharedContentView.customCornerRadius.modify(uint64_t a1, char a2)
{
  return SharedContentView.customCornerRadius.modify(a1, a2, (uint64_t (*)(uint64_t))SharedContentView.customCornerRadius.didset);
}

uint64_t SharedContentView.isPaused.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t key path getter for SharedContentView.isPaused : SharedContentView@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  double v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_isPaused);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void SharedContentView.isPaused.didset()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_isPaused];
  OUTLINED_FUNCTION_2();
  if (*v1 == 1)
  {
    id v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView], sel_snapshotViewAfterScreenUpdates_, 0);
    uint64_t v3 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot;
    id v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot];
    *(void *)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot] = v2;

    id v5 = *(void **)&v0[v3];
    if (v5)
    {
      objc_msgSend(v5, sel_setClipsToBounds_, 1);
      uint64_t v6 = *(void **)&v0[v3];
      if (v6)
      {
        uint64_t v7 = (double *)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius];
        OUTLINED_FUNCTION_2();
        objc_msgSend(v6, sel__setContinuousCornerRadius_, *v7);
        if (*(void *)&v0[v3]) {
          objc_msgSend(v0, sel_addSubview_);
        }
      }
    }
    objc_msgSend(v0, sel_setNeedsLayout);
  }
  else
  {
    char v8 = self;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v0;
    uint64_t v19 = partial apply for closure #1 in SharedContentView.isPaused.didset;
    uint64_t v20 = v9;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v16 = 1107296256;
    uint64_t v17 = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v18 = &block_descriptor_106;
    uint64_t v10 = _Block_copy(&aBlock);
    uint64_t v11 = v0;
    swift_release();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    uint64_t v19 = partial apply for closure #2 in SharedContentView.isPaused.didset;
    uint64_t v20 = v12;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v16 = 1107296256;
    uint64_t v17 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    uint64_t v18 = &block_descriptor_14_1;
    double v13 = _Block_copy(&aBlock);
    double v14 = v11;
    swift_release();
    objc_msgSend(v8, sel_animateWithDuration_animations_completion_, v10, v13, 0.3);
    _Block_release(v13);
    _Block_release(v10);
  }
}

id closure #1 in SharedContentView.isPaused.didset(uint64_t a1)
{
  id result = *(id *)(a1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot);
  if (result) {
    return objc_msgSend(result, sel_setAlpha_, 0.0);
  }
  return result;
}

void closure #2 in SharedContentView.isPaused.didset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot;
  id v4 = *(void **)(a2 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot);
  if (v4)
  {
    objc_msgSend(v4, sel_removeFromSuperview);
    id v4 = *(void **)(a2 + v3);
  }
  *(void *)(a2 + v3) = 0;
}

uint64_t (*SharedContentView.isPaused.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return SharedContentView.isPaused.modify;
}

uint64_t SharedContentView.isPaused.modify(uint64_t a1, char a2)
{
  return SharedContentView.customCornerRadius.modify(a1, a2, (uint64_t (*)(uint64_t))SharedContentView.isPaused.didset);
}

uint64_t SharedContentView.customCornerRadius.modify(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t SharedContentView.isScreenSharing.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t SharedContentView.isScreenSharing.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_0_1();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*SharedContentView.isScreenSharing.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

void SharedContentView.updateVideoViewTransform()()
{
  uint64_t v1 = v0;
  id v2 = (_OWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform);
  OUTLINED_FUNCTION_2();
  long long v3 = v2[1];
  *(_OWORD *)&v18.a = *v2;
  long long v4 = v2[2];
  *(_OWORD *)&v18.c = v3;
  *(_OWORD *)&v18.tx = v4;
  CGAffineTransformInvert(&v17, &v18);
  CGAffineTransform v18 = v17;
  if (static Platform.current.getter()) {
    CGAffineTransform.rotatingTranslationComponent(for:)(*(void *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_deviceOrientation), v5, v6, v7, v8, v9, v10, v11, &v17);
  }
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView);
  id v13 = *(id *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView);
  id v14 = v12;
  OUTLINED_FUNCTION_9_90();
  [v13 v15];
  OUTLINED_FUNCTION_9_90();
  [v14 v16];
}

__n128 SharedContentView.systemRootLayerTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform;
  OUTLINED_FUNCTION_2();
  long long v4 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 key path getter for SharedContentView.systemRootLayerTransform : SharedContentView@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform;
  swift_beginAccess();
  long long v4 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v4;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a2 + 32) = result;
  return result;
}

void (*SharedContentView.systemRootLayerTransform.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_24();
  return SharedContentView.systemRootLayerTransform.modify;
}

void SharedContentView.systemRootLayerTransform.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    SharedContentView.updateVideoViewTransform()();
  }
}

id SharedContentView.__allocating_init(frame:)()
{
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

char *SharedContentView.init(frame:)()
{
  id v1 = v0;
  uint64_t v2 = OUTLINED_FUNCTION_7_104();
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_contentView;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  uint64_t v5 = v0;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot] = 0;
  uint64_t v6 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView;
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SharedContentVideoView()), sel_init);
  uint64_t v7 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView;
  *(void *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantVideoOverlayView()), sel_init);
  uint64_t v8 = &v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_mostRecentViewModelHash];
  *(void *)uint64_t v8 = 0;
  v8[8] = 1;
  UUID.init()();
  uint64_t v9 = (uint64_t)&v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_participantIdentifier];
  uint64_t v10 = type metadata accessor for UUID();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius] = 0;
  v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_isPaused] = 0;
  v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_isScreenSharing] = 1;
  *(void *)&v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_deviceOrientation] = 1;
  OUTLINED_FUNCTION_8_84(OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform);
  double v11 = OUTLINED_FUNCTION_6_2();
  id v14 = (char *)objc_msgSendSuper2(v12, v13, v11, v5, v2);
  uint64_t v15 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView;
  SEL v16 = *(void **)&v14[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView];
  id v17 = *(id *)&v14[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView];
  CGAffineTransform v18 = v14;
  id v19 = v16;
  objc_msgSend(v17, sel_setHidden_, 1);
  objc_msgSend(v17, sel_setClipsToBounds_, 1);

  id v20 = v19;
  objc_msgSend(v20, sel_setHidden_, 1);
  objc_msgSend(v20, sel_setClipsToBounds_, 1);

  objc_msgSend(v18, sel_setClipsToBounds_, 1);
  uint64_t v21 = self;
  uint64_t v22 = v18;
  id v23 = objc_msgSend(v21, sel_clearColor);
  objc_msgSend(v22, sel_setBackgroundColor_, v23);

  uint64_t v24 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_contentView;
  uint64_t v25 = one-time initialization token for shared;
  id v26 = *(id *)&v22[OBJC_IVAR____TtC15ConversationKit17SharedContentView_contentView];
  if (v25 != -1) {
    swift_once();
  }
  if ((*(uint64_t (**)(void))(*(void *)static Defaults.shared + 320))())
  {
    if (one-time initialization token for background != -1) {
      swift_once();
    }
    id v27 = (id)static Colors.ParticipantViews.background;
  }
  else
  {
    id v27 = objc_msgSend(v21, sel_clearColor);
  }
  uint64_t v28 = v27;
  objc_msgSend(v26, sel_setBackgroundColor_, v27);

  unint64_t v29 = *(void **)&v22[v24];
  objc_msgSend(v22, sel_addSubview_, v29);
  objc_msgSend(v29, sel_addSubview_, *(void *)&v14[v15]);
  uint64_t v30 = v22;
  id v31 = objc_msgSend(v30, sel_layer);
  objc_msgSend(v31, sel_setShadowPathIsBounds_, 1);

  return v30;
}

id SharedContentView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SharedContentView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_contentView;
  *(void *)(v0 + v1) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot) = 0;
  uint64_t v2 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView;
  *(void *)(v0 + v2) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SharedContentVideoView()), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView;
  *(void *)(v0 + v3) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantVideoOverlayView()), sel_init);
  uint64_t v4 = v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_mostRecentViewModelHash;
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  UUID.init()();
  uint64_t v5 = v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_participantIdentifier;
  uint64_t v6 = type metadata accessor for UUID();
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
  *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_isPaused) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_isScreenSharing) = 1;
  *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_deviceOrientation) = 1;
  OUTLINED_FUNCTION_8_84(OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform);
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall SharedContentView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  SharedContentView._layout()();
}

void SharedContentView._layout()()
{
  objc_msgSend(v0, sel_bounds);
  if (!CGRectIsInfinite(v19))
  {
    objc_msgSend(v0, sel_bounds);
    if (!CGRectIsEmpty(v20))
    {
      objc_msgSend(v0, sel_bounds);
      double v2 = v1;
      double v4 = v3;
      uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView];
      uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView];
      id v7 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_contentView];
      id v8 = v5;
      id v9 = v6;
      objc_msgSend(v7, sel_setBounds_, 0.0, 0.0, v2, v4);
      objc_msgSend(v0, sel_bounds);
      double MidX = CGRectGetMidX(v21);
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v7, sel_setCenter_, MidX, CGRectGetMidY(v22));

      id v11 = v8;
      objc_msgSend(v11, sel_setBounds_, 0.0, 0.0, v2, v4);
      objc_msgSend(v0, sel_bounds);
      double v12 = CGRectGetMidX(v23);
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v11, sel_setCenter_, v12, CGRectGetMidY(v24));

      id v13 = v9;
      objc_msgSend(v13, sel_setBounds_, 0.0, 0.0, v2, v4);
      objc_msgSend(v0, sel_bounds);
      double v14 = CGRectGetMidX(v25);
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v13, sel_setCenter_, v14, CGRectGetMidY(v26));

      uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot];
      if (v15)
      {
        id v17 = v15;
        objc_msgSend(v17, sel_setBounds_, 0.0, 0.0, v2, v4);
        objc_msgSend(v0, sel_bounds);
        double v16 = CGRectGetMidX(v27);
        objc_msgSend(v0, sel_bounds);
        objc_msgSend(v17, sel_setCenter_, v16, CGRectGetMidY(v28));
      }
    }
  }
}

id SharedContentView.convert(_:to:)(uint64_t a1)
{
  id v7 = (objc_class *)OUTLINED_FUNCTION_7_104();
  id v8 = &v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform];
  OUTLINED_FUNCTION_2();
  long long v9 = *((_OWORD *)v8 + 1);
  *(_OWORD *)&v15.a = *(_OWORD *)v8;
  *(_OWORD *)&v15.c = v9;
  *(_OWORD *)&v15.tx = *((_OWORD *)v8 + 2);
  if (CGAffineTransformIsIdentity(&v15))
  {
    v14.receiver = v1;
    v14.super_class = v7;
    return objc_msgSendSuper2(&v14, sel_convertRect_toCoordinateSpace_, a1, v5, v4, v3, v2);
  }
  else
  {
    double v11 = OUTLINED_FUNCTION_6_2();
    return objc_msgSend(v12, v13, a1, v11);
  }
}

unint64_t SharedContentView.configureViewVisibility(for:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SharedContentViewModel(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v6 = swift_allocObject();
  long long v44 = xmmword_1C3769610;
  *(_OWORD *)(v6 + 16) = xmmword_1C3769610;
  id v7 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView];
  id v8 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView];
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v8;
  unint64_t v46 = v6;
  specialized Array._endMutation()();
  outlined init with copy of SharedContentViewModel(a1, v5);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v10 = v1;
  id v11 = v7;
  id v12 = v8;
  if (EnumCaseMultiPayload != 1)
  {
    unint64_t result = specialized MutableCollection._halfStablePartition(isSuffixElement:)((uint64_t *)&v46, v10);
    uint64_t v14 = result;
    if (v46 >> 62) {
      goto LABEL_35;
    }
    uint64_t v30 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_8;
  }
  SEL v13 = v12;
  uint64_t v14 = specialized MutableCollection._halfStablePartition(isSuffixElement:)((uint64_t *)&v46, v10);
  if (v46 >> 62) {
    goto LABEL_33;
  }
  uint64_t v15 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v15 >= v14)
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      uint64_t v17 = v5 + *(int *)(v16 + 80);
      int v18 = *(_DWORD *)(v16 + 64);
      specialized Array.replaceSubrange<A>(_:with:)(v14, v15, v19, v20, v21, v22, v23, v24, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v44, *((unint64_t **)&v44 + 1));
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = v44;
      *(void *)(v25 + 32) = v11;
      *(void *)(v25 + 40) = v13;
      uint64_t v45 = v25;
      specialized Array._endMutation()();
      unint64_t v26 = v45;
      id v27 = v11;
      CGRect v28 = v13;
      outlined destroy of ParticipantVideoOverlayView.ViewModel(v17);
      goto LABEL_10;
    }
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
LABEL_8:
    if (v30 < v14) {
      break;
    }
    int v18 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel))
                    + 64);
    specialized Array.replaceSubrange<A>(_:with:)(v14, v30, v31, v32, v33, v34, v35, v36, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v44, *((unint64_t **)&v44 + 1));
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1C3769830;
    *(void *)(v37 + 32) = v11;
    uint64_t v45 = v37;
    specialized Array._endMutation()();
    unint64_t v26 = v45;
    id v38 = v11;
LABEL_10:
    outlined destroy of SharedContentVideoView.ViewModel(v5 + v18);
    outlined destroy of SharedContentViewModel.ParticipantDetails(v5);
    uint64_t v5 = v46;
    if (v46 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    SEL v13 = &selRef_ringButton;
    if (v14)
    {
      if (v14 < 1)
      {
        __break(1u);
        goto LABEL_32;
      }
      for (uint64_t i = 0; i != v14; ++i)
      {
        if ((v5 & 0xC000000000000001) != 0) {
          id v40 = (id)MEMORY[0x1C87744F0](i, v5);
        }
        else {
          id v40 = *(id *)(v5 + 8 * i + 32);
        }
        id v11 = v40;
        objc_msgSend(v40, sel_setHidden_, 1);
      }
    }
    swift_bridgeObjectRelease();
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v5) {
        return swift_bridgeObjectRelease();
      }
    }
    if (v5 >= 1)
    {
      for (uint64_t j = 0; j != v5; ++j)
      {
        if ((v26 & 0xC000000000000001) != 0) {
          id v42 = (id)MEMORY[0x1C87744F0](j, v26);
        }
        else {
          id v42 = *(id *)(v26 + 8 * j + 32);
        }
        uint64_t v43 = v42;
        objc_msgSend(v42, sel_setHidden_, 0);
      }
      return swift_bridgeObjectRelease();
    }
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t SharedContentView.registerVideoLayers(with:)(uint64_t a1)
{
  type metadata accessor for SharedContentViewModel(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16_0();
  if (objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView), sel_isHidden))
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    return os_log(_:dso:log:type:_:)();
  }
  else
  {
    outlined init with copy of SharedContentViewModel(a1, v2);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      uint64_t v7 = v2 + *(int *)(v6 + 80);
      memcpy(v11, (const void *)(v2 + *(int *)(v6 + 64)), sizeof(v11));
      outlined destroy of ParticipantVideoOverlayView.ViewModel(v7);
    }
    else
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
      memcpy(v11, (const void *)(v2 + *(int *)(v8 + 64)), sizeof(v11));
    }
    outlined destroy of SharedContentViewModel.ParticipantDetails(v2);
    memcpy(__dst, v11, sizeof(__dst));
    outlined init with copy of Environment<DynamicTypeSize>.Content((uint64_t)__dst, (uint64_t)v9, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
    if (v9[3] == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
      if (one-time initialization token for conversationKit != -1) {
        swift_once();
      }
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
    }
    else
    {
      memcpy(v10, v9, sizeof(v10));
      SharedContentVideoView.registerVideoLayers(with:)((uint64_t)v10);
      outlined destroy of SharedContentVideoView.ViewModel((uint64_t)v10);
    }
    return outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)__dst, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
  }
}

id SharedContentView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t outlined init with copy of SharedContentViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedContentViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SharedContentViewModel.ParticipantDetails(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1C3687E74(double *a1)
{
  return SharedContentView.customCornerRadius.setter(*a1);
}

void sub_1C3687EA0(char *a1)
{
}

void sub_1C3687ECC(_OWORD *a1)
{
}

uint64_t dispatch thunk of SharedContentViewDelegate.sharedContentViewDidTapFullScreen(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SharedContentViewDelegate.sharedContentViewOverrideView(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t ObjC metadata update function for SharedContentView()
{
  return type metadata accessor for SharedContentView();
}

uint64_t type metadata accessor for SharedContentView()
{
  uint64_t result = type metadata singleton initialization cache for SharedContentView;
  if (!type metadata singleton initialization cache for SharedContentView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void type metadata completion function for SharedContentView()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID?();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

unint64_t specialized MutableCollection._halfStablePartition(isSuffixElement:)(uint64_t *a1, void *a2)
{
  id v5 = a2;
  unint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = specialized Collection.firstIndex(where:)(v6, v5);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v3 = v7;
    char v9 = v8;
    swift_bridgeObjectRelease();
    if (v9)
    {
      if ((unint64_t)*a1 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v3 = _CocoaArrayWrapper.endIndex.getter();

        swift_bridgeObjectRelease();
        return v3;
      }
      unint64_t v3 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    else
    {
      unint64_t v10 = v3 + 1;
      if (__OFADD__(v3, 1)) {
        goto LABEL_58;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_59:
        swift_bridgeObjectRetain();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v11 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10 != v11)
      {
        type metadata accessor for NSObject();
        unint64_t v10 = v3 + 5;
        do
        {
          unint64_t v12 = v10 - 4;
          uint64_t v13 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            id v14 = (id)MEMORY[0x1C87744F0](v10 - 4);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
            if (v12 >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_49;
            }
            id v14 = *(id *)(v13 + 8 * v10);
          }
          uint64_t v15 = v14;
          char v16 = static NSObject.== infix(_:_:)();

          if ((v16 & 1) == 0)
          {
            if (v12 != v3)
            {
              uint64_t v17 = *a1;
              if ((*a1 & 0xC000000000000001) != 0)
              {
                id v18 = (id)MEMORY[0x1C87744F0](v3, *a1);
                uint64_t v17 = *a1;
              }
              else
              {
                if ((v3 & 0x8000000000000000) != 0) {
                  goto LABEL_52;
                }
                if (v3 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_53;
                }
                id v18 = *(id *)(v17 + 8 * v3 + 32);
              }
              if ((v17 & 0xC000000000000001) != 0)
              {
                id v19 = (id)MEMORY[0x1C87744F0](v10 - 4, v17);
                uint64_t v17 = *a1;
              }
              else
              {
                if ((v12 & 0x8000000000000000) != 0) {
                  goto LABEL_54;
                }
                if (v12 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_55;
                }
                id v19 = *(id *)(v17 + 8 * v10);
              }
              int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v17;
              if (!isUniquelyReferenced_nonNull_bridgeObject || v17 < 0 || (v17 & 0x4000000000000000) != 0)
              {
                uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew()(v17);
                *a1 = v17;
              }
              uint64_t v21 = *(void **)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20);
              *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v19;

              specialized Array._endMutation()();
              uint64_t v22 = *a1;
              int v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v22;
              if (!v23 || v22 < 0 || (v22 & 0x4000000000000000) != 0)
              {
                uint64_t v22 = specialized _ArrayBuffer._consumeAndCreateNew()(v22);
                *a1 = v22;
              }
              if ((v12 & 0x8000000000000000) != 0) {
                goto LABEL_56;
              }
              uint64_t v24 = v22 & 0xFFFFFFFFFFFFFF8;
              if (v12 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_57;
              }
              uint64_t v25 = *(void **)(v24 + 8 * v10);
              *(void *)(v24 + 8 * v10) = v18;

              specialized Array._endMutation()();
            }
            if (__OFADD__(v3++, 1)) {
              goto LABEL_51;
            }
          }
          unint64_t v27 = v10 - 3;
          if (__OFADD__(v12, 1)) {
            goto LABEL_50;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v28 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          ++v10;
        }
        while (v27 != v28);
      }
    }
  }
  return v3;
}

{
  uint64_t v2;
  unint64_t v3;
  id v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  char v16;
  uint64_t v17;
  id v18;
  id v19;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void *v25;
  unint64_t v27;
  uint64_t v28;

  id v5 = a2;
  unint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = specialized Collection.firstIndex(where:)(v6, v5);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v3 = v7;
    char v9 = v8;
    swift_bridgeObjectRelease();
    if (v9)
    {
      if ((unint64_t)*a1 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v3 = _CocoaArrayWrapper.endIndex.getter();

        swift_bridgeObjectRelease();
        return v3;
      }
      unint64_t v3 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    else
    {
      unint64_t v10 = v3 + 1;
      if (__OFADD__(v3, 1)) {
        goto LABEL_60;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_61:
        swift_bridgeObjectRetain();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v11 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10 != v11)
      {
        type metadata accessor for NSObject();
        unint64_t v10 = v3 + 5;
        do
        {
          unint64_t v12 = v10 - 4;
          uint64_t v13 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            id v14 = (id)MEMORY[0x1C87744F0](v10 - 4);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
              goto LABEL_61;
            }
            if (v12 >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_51;
            }
            id v14 = *(id *)(v13 + 8 * v10);
          }
          uint64_t v15 = v14;
          if (static NSObject.== infix(_:_:)())
          {
          }
          else
          {
            char v16 = static NSObject.== infix(_:_:)();

            if ((v16 & 1) == 0)
            {
              if (v12 != v3)
              {
                uint64_t v17 = *a1;
                if ((*a1 & 0xC000000000000001) != 0)
                {
                  id v18 = (id)MEMORY[0x1C87744F0](v3, *a1);
                  uint64_t v17 = *a1;
                }
                else
                {
                  if ((v3 & 0x8000000000000000) != 0) {
                    goto LABEL_54;
                  }
                  if (v3 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_55;
                  }
                  id v18 = *(id *)(v17 + 8 * v3 + 32);
                }
                if ((v17 & 0xC000000000000001) != 0)
                {
                  id v19 = (id)MEMORY[0x1C87744F0](v10 - 4, v17);
                  uint64_t v17 = *a1;
                }
                else
                {
                  if ((v12 & 0x8000000000000000) != 0) {
                    goto LABEL_56;
                  }
                  if (v12 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_57;
                  }
                  id v19 = *(id *)(v17 + 8 * v10);
                }
                int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
                *a1 = v17;
                if (!isUniquelyReferenced_nonNull_bridgeObject || v17 < 0 || (v17 & 0x4000000000000000) != 0)
                {
                  uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew()(v17);
                  *a1 = v17;
                }
                uint64_t v21 = *(void **)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20);
                *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v19;

                specialized Array._endMutation()();
                uint64_t v22 = *a1;
                int v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
                *a1 = v22;
                if (!v23 || v22 < 0 || (v22 & 0x4000000000000000) != 0)
                {
                  uint64_t v22 = specialized _ArrayBuffer._consumeAndCreateNew()(v22);
                  *a1 = v22;
                }
                if ((v12 & 0x8000000000000000) != 0) {
                  goto LABEL_58;
                }
                uint64_t v24 = v22 & 0xFFFFFFFFFFFFFF8;
                if (v12 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_59;
                }
                uint64_t v25 = *(void **)(v24 + 8 * v10);
                *(void *)(v24 + 8 * v10) = v18;

                specialized Array._endMutation()();
              }
              if (__OFADD__(v3++, 1)) {
                goto LABEL_53;
              }
            }
          }
          unint64_t v27 = v10 - 3;
          if (__OFADD__(v12, 1)) {
            goto LABEL_52;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v28 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          ++v10;
        }
        while (v27 != v28);
      }
    }
  }
  return v3;
}

{
  uint64_t v2;
  unint64_t v3;
  id v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  id v20;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  void *v26;
  unint64_t v28;
  uint64_t v29;

  id v5 = a2;
  unint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = specialized Collection.firstIndex(where:)(v6, v5);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v3 = v7;
    char v9 = v8;
    swift_bridgeObjectRelease();
    if (v9)
    {
      if ((unint64_t)*a1 >> 62)
      {
        OUTLINED_FUNCTION_66();
        unint64_t v3 = _CocoaArrayWrapper.endIndex.getter();

        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v3 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      unint64_t v10 = v3 + 1;
      if (__OFADD__(v3, 1)) {
        goto LABEL_58;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_59:
        swift_bridgeObjectRetain();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v11 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10 != v11)
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
        unint64_t v10 = v3 + 5;
        do
        {
          uint64_t v13 = v10 - 4;
          id v14 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = (id)MEMORY[0x1C87744F0](v10 - 4);
          }
          else
          {
            if ((v13 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
            if (v13 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_49;
            }
            uint64_t v15 = *(id *)(v14 + 8 * v10);
          }
          char v16 = v15;
          uint64_t v17 = static NSObject.== infix(_:_:)();

          if ((v17 & 1) == 0)
          {
            if (v13 != v3)
            {
              id v18 = *a1;
              if ((*a1 & 0xC000000000000001) != 0)
              {
                id v19 = (id)MEMORY[0x1C87744F0](v3, *a1);
                id v18 = *a1;
              }
              else
              {
                if ((v3 & 0x8000000000000000) != 0) {
                  goto LABEL_52;
                }
                if (v3 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_53;
                }
                id v19 = *(id *)(v18 + 8 * v3 + 32);
              }
              if ((v18 & 0xC000000000000001) != 0)
              {
                uint64_t v20 = (id)MEMORY[0x1C87744F0](v10 - 4, v18);
                id v18 = *a1;
              }
              else
              {
                if ((v13 & 0x8000000000000000) != 0) {
                  goto LABEL_54;
                }
                if (v13 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_55;
                }
                uint64_t v20 = *(id *)(v18 + 8 * v10);
              }
              int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v18;
              if (!isUniquelyReferenced_nonNull_bridgeObject || v18 < 0 || (v18 & 0x4000000000000000) != 0)
              {
                id v18 = specialized _ArrayBuffer._consumeAndCreateNew()(v18);
                *a1 = v18;
              }
              uint64_t v22 = *(void **)((v18 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20);
              *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v20;

              specialized Array._endMutation()();
              int v23 = *a1;
              uint64_t v24 = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v23;
              if (!v24 || v23 < 0 || (v23 & 0x4000000000000000) != 0)
              {
                int v23 = specialized _ArrayBuffer._consumeAndCreateNew()(v23);
                *a1 = v23;
              }
              if ((v13 & 0x8000000000000000) != 0) {
                goto LABEL_56;
              }
              uint64_t v25 = v23 & 0xFFFFFFFFFFFFFF8;
              if (v13 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_57;
              }
              unint64_t v26 = *(void **)(v25 + 8 * v10);
              *(void *)(v25 + 8 * v10) = v19;

              specialized Array._endMutation()();
            }
            if (__OFADD__(v3++, 1)) {
              goto LABEL_51;
            }
          }
          uint64_t v28 = v10 - 3;
          if (__OFADD__(v13, 1)) {
            goto LABEL_50;
          }
          if ((unint64_t)*a1 >> 62)
          {
            OUTLINED_FUNCTION_66();
            unint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            unint64_t v29 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          ++v10;
        }
        while (v28 != v29);
      }
    }
  }
  return v3;
}

uint64_t sub_1C3688794()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in SharedContentView.isPaused.didset()
{
  return closure #1 in SharedContentView.isPaused.didset(*(void *)(v0 + 16));
}

void partial apply for closure #2 in SharedContentView.isPaused.didset(uint64_t a1)
{
  closure #2 in SharedContentView.isPaused.didset(a1, *(void *)(v1 + 16));
}

uint64_t LeaveButtonViewModel.__allocating_init(service:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 56) = 0;
  outlined init with take of Notice(a1, v2 + 16);
  return v2;
}

uint64_t LeaveButtonViewModel.init(service:)(long long *a1)
{
  *(void *)(v1 + 56) = 0;
  outlined init with take of Notice(a1, v1 + 16);
  return v1;
}

uint64_t LeaveButtonViewModel.controlType.getter()
{
  return LeaveButtonViewModel.config.getter();
}

uint64_t LeaveButtonViewModel.config.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Font.Leading();
  OUTLINED_FUNCTION_4();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Image.Scale();
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + 56))
  {
    uint64_t v14 = *(void *)(v1 + 56);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(self, sel_systemRedColor);
    uint64_t v16 = MEMORY[0x1C87725F0](v15);
    static Font.Weight.bold.getter();
    uint64_t v18 = v17;
    uint64_t v19 = static Color.white.getter();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, *MEMORY[0x1E4F3EC70], v8);
    uint64_t v20 = static Font.body.getter();
    static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:scale:font:weight:)(0x6B72616D78, 0xE500000000000000, v19, v16, (uint64_t)v13, v20, v43, v18);
    long long v42 = v43[3];
    long long v41 = v43[4];
    uint64_t v40 = v44;
    uint64_t v39 = v45;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v10 + 8);
    long long v38 = v43[0];
    long long v37 = v43[1];
    long long v36 = v43[2];
    v21(v13, v8);
    uint64_t v22 = static Color.white.getter();
    static Font.subheadline.getter();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4F3E0F8], v2);
    uint64_t v23 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
    long long v46 = xmmword_1C376AA10;
    uint64_t v47 = 0x401C000000000000;
    uint64_t v48 = v22;
    long long v50 = v38;
    long long v51 = v37;
    long long v52 = v36;
    long long v53 = v42;
    long long v54 = v41;
    uint64_t v49 = v23;
    uint64_t v55 = v40;
    uint64_t v56 = v39;
    uint64_t v24 = self;
    id v25 = objc_msgSend(v24, sel_conversationKit);
    v57._id object = (void *)0xE000000000000000;
    OUTLINED_FUNCTION_4_6();
    v26._countAndFlagsBits = 0;
    v26._id object = (void *)0xE000000000000000;
    v57._countAndFlagsBits = 0;
    Swift::String v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v25, v26, v57);

    id v30 = objc_msgSend(v24, sel_conversationKit);
    v58._id object = (void *)0xE000000000000000;
    OUTLINED_FUNCTION_4_6();
    v31._countAndFlagsBits = 0;
    v31._id object = (void *)0xE000000000000000;
    v58._countAndFlagsBits = 0;
    Swift::String v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v30, v31, v58);

    swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<()>);
    swift_allocObject();
    uint64_t v14 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)((uint64_t)&v46, v29._countAndFlagsBits, (uint64_t)v29._object, 0, v34._countAndFlagsBits, (uint64_t)v34._object, 0x747542657661656CLL, 0xEB000000006E6F74, 1);
    *(void *)(v1 + 56) = v14;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v14;
}

BOOL LeaveButtonViewModel.enabled(for:)(unint64_t a1)
{
  uint64_t v2 = (a1 >> 37) & 7;
  BOOL result = 0;
  switch(v2)
  {
    case 1:
      BOOL result = (a1 & 0x100000000) == 0;
      break;
    case 2:
    case 3:
    case 4:
      return result;
    default:
      BOOL result = 1;
      break;
  }
  return result;
}

Swift::Void __swiftcall LeaveButtonViewModel.didTap()()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 152))(v1, v2);
}

uint64_t sub_1C3688DD4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t key path setter for LeaveButtonViewModel.config : LeaveButtonViewModel()
{
  uint64_t v0 = swift_retain();
  return LeaveButtonViewModel.config.setter(v0);
}

uint64_t LeaveButtonViewModel.config.setter(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return swift_release();
}

void *closure #1 in LeaveButtonViewModel.config.getter()
{
  swift_beginAccess();
  BOOL result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result[5];
    uint64_t v2 = result[6];
    __swift_project_boxed_opaque_existential_1(result + 2, v1);
    (*(void (**)(uint64_t, uint64_t))(v2 + 152))(v1, v2);
    return (void *)swift_release();
  }
  return result;
}

void *partial apply for closure #1 in LeaveButtonViewModel.config.getter()
{
  return closure #1 in LeaveButtonViewModel.config.getter();
}

uint64_t LeaveButtonViewModel.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t LeaveButtonViewModel.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

BOOL protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance LeaveButtonViewModel(uint64_t a1)
{
  return LeaveButtonViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL);
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance LeaveButtonViewModel()
{
  return LeaveButtonViewModel.controlType.getter();
}

uint64_t sub_1C3688F94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LeaveButtonViewModel.config.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for LeaveButtonViewModel()
{
  return self;
}

uint64_t method lookup function for LeaveButtonViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LeaveButtonViewModel);
}

uint64_t dispatch thunk of LeaveButtonViewModel.__allocating_init(service:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t InCallControlsTitleCellViewModel.init(groupName:groupPhotoData:participants:mode:linksEnabled:shouldUseGroupHeader:conversation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unsigned __int8 a6@<W5>, int a7@<W7>, uint64_t *a8@<X8>, char *a9)
{
  int v166 = a7;
  uint64_t v175 = a5;
  unint64_t v172 = a4;
  uint64_t v171 = a3;
  CGRect v167 = a8;
  unsigned int v11 = a6;
  uint64_t v177 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v12);
  uint64_t v176 = (uint64_t)&v190._object - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v190._object - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_4();
  uint64_t v168 = v17;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_4_5();
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v190._object - v23;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x1F4188790](v25);
  countAndFlagsBits = (char *)&v190._object - v26;
  unsigned int v169 = v11;
  unsigned int v170 = v11 >> 5;
  Swift::String_optional v28 = (int *)&selRef_ringButton;
  unsigned __int8 v182 = v24;
  if (a2)
  {
    if (String.count.getter() > 0) {
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  unsigned int v29 = v169 & 0xFFFFFFE1;
  id v30 = objc_msgSend(self, sel_conversationKit);
  if (v29 == 1)
  {
    uint64_t v164 = OUTLINED_FUNCTION_0_23(0x414C504552414853, 0xE900000000000059);
    uint64_t v165 = v31;

    goto LABEL_8;
  }
  a1 = OUTLINED_FUNCTION_0_23(0x454D495445434146, 0xE800000000000000);
  a2 = v32;

LABEL_7:
  uint64_t v165 = a2;
  uint64_t v164 = a1;
  if (((1 << v170) & 0x33) != 0) {
    goto LABEL_8;
  }
  if (v170 == 2)
  {
    id v52 = objc_msgSend(self, sel_conversationKit);
    if (v169)
    {
      OUTLINED_FUNCTION_13_22();
      long long v54 = "Waiting to be let in";
    }
    else
    {
      OUTLINED_FUNCTION_13_22();
      long long v54 = "IN_CALL_CONTROLS_JOIN_GROUP_CALL";
    }
    unint64_t v76 = (unint64_t)(v54 - 32) | 0x8000000000000000;
  }
  else
  {
    if (v169 != 96)
    {
LABEL_8:
      uint64_t v33 = MEMORY[0x1E4FBB1A0];
      a1 = 0xD000000000000022;
      Swift::String v34 = *(int **)(v175 + 16);
      if (v34 != (int *)1)
      {
LABEL_11:
        if (one-time initialization token for participantCountFormatter != -1) {
          swift_once();
        }
        long long v36 = (void *)static InCallControlsTitleCellViewModel.participantCountFormatter;
        id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EC8]), sel_initWithInteger_, v34);
        id v38 = objc_msgSend(v36, sel_stringFromNumber_, v37);

        if (v38)
        {
          uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v41 = v40;
        }
        else
        {
          unsigned __int8 v185 = v34;
          uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v41 = v42;
        }
        id v43 = objc_msgSend(self, sel_conversationKit);
        OUTLINED_FUNCTION_13_22();
        v44._id object = (void *)0x80000001C37BD110;
        v45.value._countAndFlagsBits = 0x61737265766E6F43;
        v45.value._id object = (void *)0xEF74694B6E6F6974;
        v46._countAndFlagsBits = 0;
        v46._id object = (void *)0xE000000000000000;
        v190._countAndFlagsBits = 0;
        countAndFlagsBits = (char *)NSLocalizedString(_:tableName:bundle:value:comment:)(v44, v45, (NSBundle)v43, v46, v190)._countAndFlagsBits;

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = xmmword_1C37696D0;
        *(void *)(v47 + 56) = v33;
        unint64_t v48 = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v47 + 32) = v39;
        *(void *)(v47 + 40) = v41;
        uint64_t v49 = MEMORY[0x1E4FBB5C8];
        *(void *)(v47 + 96) = MEMORY[0x1E4FBB550];
        *(void *)(v47 + 104) = v49;
        *(void *)(v47 + 64) = v48;
        *(void *)(v47 + 72) = v34;
        uint64_t v50 = String.init(format:arguments:)();
        OUTLINED_FUNCTION_5_115(v50, v51);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_8_85();
        goto LABEL_35;
      }
      specialized Collection.first.getter(v175, (uint64_t)v16);
      uint64_t v35 = v184;
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v184) == 1)
      {
        outlined destroy of Participant?((uint64_t)v16);
        goto LABEL_11;
      }
      outlined init with take of Participant((uint64_t)v16, (uint64_t)countAndFlagsBits);
      id v55 = objc_msgSend(self, sel_conversationKit);
      OUTLINED_FUNCTION_13_22();
      unint64_t v56 = OUTLINED_FUNCTION_11_78();
      uint64_t v181 = OUTLINED_FUNCTION_11_1(v56, v57);
      a1 = v58;

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v180 = swift_allocObject();
      *(_OWORD *)(v180 + 16) = xmmword_1C3769620;
      uint64_t v59 = *(void **)&countAndFlagsBits[*(int *)(v35 + 28)];
      Swift::String_optional v28 = (int *)v35;
      if (v59)
      {
        id v60 = v59;
        uint64_t v61 = outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v60);
        if (v62)
        {
          double v63 = (uint64_t *)v61;
          double v64 = v62;
          if (objc_msgSend(v60, sel_shouldHideContact))
          {
            CGRect v174 = v63;
            Swift::String_optional v28 = (int *)type metadata accessor for PersonNameComponents();
            CGRect v173 = &v164;
            OUTLINED_FUNCTION_4();
            uint64_t v66 = v65;
            MEMORY[0x1F4188790](v67);
            OUTLINED_FUNCTION_3_136();
            PersonNameComponents.init()();
            PersonNameComponents.givenName.setter();
            PersonNameComponents.familyName.setter();
            if (one-time initialization token for initials != -1) {
              swift_once();
            }
            swift_beginAccess();
            id v68 = (id)static NSPersonNameComponentsFormatter.initials;
            Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            id v70 = objc_msgSend(v68, sel_stringFromPersonNameComponents_, isa);

            double v71 = (int *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v73 = v72;

            (*(void (**)(uint64_t *, int *))(v66 + 8))(v63, v28);
            unsigned __int8 v185 = v71;
            unsigned __int8 v186 = v73;
            lazy protocol witness table accessor for type String and conformance String();
            StringProtocol.localizedUppercase.getter();

            swift_bridgeObjectRelease();
            double v74 = 0;
            OUTLINED_FUNCTION_8_85();
            os_log_type_t v75 = v174;
            goto LABEL_34;
          }

          swift_bridgeObjectRelease();
        }
        else
        {
        }
      }
      uint64_t v79 = v179;
      _s15ConversationKit11ParticipantVWOcTm_13((uint64_t)countAndFlagsBits, v179, (void (*)(void))type metadata accessor for Participant);
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:)();
      os_log_type_t v75 = v186;
      double v64 = (uint64_t *)v187;
      double v74 = v185;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      outlined destroy of Participant(v79);
LABEL_34:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      unsigned __int8 v185 = (int *)v75;
      unsigned __int8 v186 = v64;
      uint64_t v80 = MEMORY[0x1E4FBB1A0];
      uint64_t v81 = String.init<A>(_:)();
      uint64_t v83 = v82;
      uint64_t v84 = (void *)v180;
      *(void *)(v180 + 56) = v80;
      v84[8] = lazy protocol witness table accessor for type String and conformance String();
      v84[4] = v81;
      v84[5] = v83;
      uint64_t v85 = String.init(format:_:)();
      OUTLINED_FUNCTION_5_115(v85, v86);
      swift_bridgeObjectRelease();
      outlined destroy of Participant((uint64_t)countAndFlagsBits);
LABEL_35:
      uint64_t v24 = v182;
      goto LABEL_36;
    }
    id v52 = objc_msgSend(self, sel_conversationKit);
    OUTLINED_FUNCTION_13_22();
    unint64_t v53 = OUTLINED_FUNCTION_11_78();
  }
  uint64_t v77 = OUTLINED_FUNCTION_11_1(v53, v76);
  OUTLINED_FUNCTION_5_115(v77, v78);

  OUTLINED_FUNCTION_8_85();
LABEL_36:
  uint64_t v87 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v189 = MEMORY[0x1E4FBC860];
  uint64_t v88 = *(void *)(v175 + 16);
  uint64_t v180 = v88;
  if (!v88) {
    goto LABEL_68;
  }
  OUTLINED_FUNCTION_7_105();
  uint64_t v181 = *(void *)(v89 + 72);
  swift_bridgeObjectRetain();
  uint64_t v90 = v88;
  do
  {
    _s15ConversationKit11ParticipantVWOcTm_13((uint64_t)countAndFlagsBits, (uint64_t)v24, (void (*)(void))type metadata accessor for Participant);
    a1 = v28[7];
    uint64_t v91 = *(void **)&v24[a1];
    if (v91)
    {
      objc_super v92 = v91;
      if (objc_msgSend(v92, sel_shouldHideContact))
      {
        type metadata accessor for CNContact();
        id v93 = @nonobjc CNContact.init(displayName:handle:)(0, 0, 0);
        uint64_t v87 = &v189;
        MEMORY[0x1C87733A0]();
        if (*(void *)((v189 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v189 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        goto LABEL_66;
      }

      uint64_t v94 = v92;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v94);
      if (v95)
      {
        if (objc_msgSend(v94, sel_shouldHideContact))
        {
          uint64_t v96 = type metadata accessor for PersonNameComponents();
          CGRect v174 = &v164;
          CGRect v173 = (uint64_t *)v96;
          OUTLINED_FUNCTION_4();
          uint64_t v98 = v97;
          MEMORY[0x1F4188790](v99);
          OUTLINED_FUNCTION_3_136();
          PersonNameComponents.init()();
          PersonNameComponents.givenName.setter();
          PersonNameComponents.familyName.setter();
          if (one-time initialization token for initials != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v100 = (id)static NSPersonNameComponentsFormatter.initials;
          Class v101 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          id v102 = objc_msgSend(v100, sel_stringFromPersonNameComponents_, v101);

          double v103 = (int *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          SEL v105 = v104;

          (*(void (**)(void *, uint64_t *))(v98 + 8))(v87, v173);
          unsigned __int8 v185 = v103;
          unsigned __int8 v186 = v105;
          lazy protocol witness table accessor for type String and conformance String();
          StringProtocol.localizedUppercase.getter();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
LABEL_52:
          uint64_t v110 = (uint64_t)v182;
          uint64_t v111 = *(void **)&v182[a1];
          uint64_t v112 = v184;
          if (v111)
          {
            id v113 = v111;
            uint64_t v114 = outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v113);
            if (v115)
            {
              uint64_t v116 = v114;
              uint64_t v117 = v115;
              if (objc_msgSend(v113, sel_shouldHideContact))
              {
                uint64_t v118 = type metadata accessor for PersonNameComponents();
                CGRect v174 = &v164;
                CGRect v173 = (uint64_t *)v118;
                OUTLINED_FUNCTION_4();
                uint64_t v120 = v119;
                MEMORY[0x1F4188790](v121);
                OUTLINED_FUNCTION_3_136();
                PersonNameComponents.init()();
                PersonNameComponents.givenName.setter();
                PersonNameComponents.familyName.setter();
                if (one-time initialization token for initials != -1) {
                  swift_once();
                }
                swift_beginAccess();
                id v122 = (id)static NSPersonNameComponentsFormatter.initials;
                Class v123 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
                id v124 = objc_msgSend(v122, sel_stringFromPersonNameComponents_, v123);

                Swift::String_optional v28 = (int *)static String._unconditionallyBridgeFromObjectiveC(_:)();
                id v126 = v125;

                (*(void (**)(uint64_t, uint64_t *))(v120 + 8))(v112, v173);
                unsigned __int8 v185 = v28;
                unsigned __int8 v186 = v126;
                lazy protocol witness table accessor for type String and conformance String();
                StringProtocol.localizedUppercase.getter();

                swift_bridgeObjectRelease();
                a1 = 0;
                goto LABEL_62;
              }

              swift_bridgeObjectRelease();
            }
            else
            {
            }
            uint64_t v110 = (uint64_t)v182;
          }
          uint64_t v127 = v179;
          _s15ConversationKit11ParticipantVWOcTm_13(v110, v179, (void (*)(void))type metadata accessor for Participant);
          Swift::String_optional v28 = *(int **)(v110 + *(int *)(v112 + 64));
          swift_retain();
          ParticipantContactDetailsCache.contactDetails(for:)();
          a1 = (uint64_t)v185;
          uint64_t v116 = (uint64_t)v186;
          uint64_t v117 = v187;
          id v128 = v185;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_release();
          outlined destroy of Participant(v127);
LABEL_62:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          type metadata accessor for CNContact();

          double v109 = (int *)@nonobjc CNContact.init(displayName:handle:)(v116, v117, 0);
          goto LABEL_63;
        }

        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    uint64_t v106 = v179;
    _s15ConversationKit11ParticipantVWOcTm_13((uint64_t)v24, v179, (void (*)(void))type metadata accessor for Participant);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)();
    id v107 = v185;
    Swift::String_optional v28 = v188;
    SEL v108 = v185;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    outlined destroy of Participant(v106);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v107) {
      goto LABEL_52;
    }
    double v109 = v108;
LABEL_63:
    objc_super v92 = v109;
    uint64_t v87 = &v189;
    MEMORY[0x1C87733A0]();
    if (*(void *)((v189 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v189 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    OUTLINED_FUNCTION_8_85();
    uint64_t v24 = v182;
LABEL_66:

    outlined destroy of Participant((uint64_t)v24);
    countAndFlagsBits += v181;
    --v90;
  }
  while (v90);
  swift_bridgeObjectRelease();
  uint64_t v87 = (void *)v189;
LABEL_68:
  id v129 = a9;
  LOBYTE(v185) = v166 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(InCallControlsTitleCellViewModel.TitleCellButton, Bool)>);
  uint64_t inited = swift_initStackObject();
  uint64_t v131 = (char *)inited;
  *(_OWORD *)(inited + 16) = xmmword_1C37696D0;
  *(unsigned char *)(inited + 32) = 0;
  unsigned int v132 = v170;
  BOOL v133 = v170 != 2;
  BOOL v134 = v169 == 96;
  if (v170 == 3) {
    BOOL v133 = v169 != 96;
  }
  *(unsigned char *)(inited + 33) = v133;
  *(unsigned char *)(inited + 34) = 1;
  BOOL v135 = v132 == 3 && v134;
  *(unsigned char *)(inited + 35) = v135;
  swift_bridgeObjectRetain();
  outlined copy of Data?(v171, v172);
  lazy protocol witness table accessor for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton();
  uint64_t v136 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v137 = v136;
  if (!v180)
  {
    char v156 = 0;
    OUTLINED_FUNCTION_13_78();
    goto LABEL_95;
  }
  uint64_t v181 = v136;
  unsigned __int8 v182 = a9;
  OUTLINED_FUNCTION_7_105();
  uint64_t v139 = *(void *)(v138 + 72);
  swift_bridgeObjectRetain();
  a1 = (uint64_t)&selRef_trailingBarAlpha;
  OUTLINED_FUNCTION_12_74();
  while (2)
  {
    uint64_t v140 = v183;
    _s15ConversationKit11ParticipantVWOcTm_13((uint64_t)countAndFlagsBits, v183, (void (*)(void))type metadata accessor for Participant);
    id v141 = *(void **)(v140 + v28[7]);
    if (v141)
    {
      uint64_t v131 = (char *)objc_msgSend(v141, sel_value);
      if (!v131)
      {
        uint64_t v142 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v131 = (char *)MEMORY[0x1C87730B0](v142);
        swift_bridgeObjectRelease();
      }
      unsigned __int8 v143 = objc_msgSend(v131, sel_destinationIdIsTemporary, v164, v165);

      uint64_t v144 = v178;
      _s15ConversationKit11ParticipantVWOcTm_13(v183, v178, (void (*)(void))type metadata accessor for Participant);
      OUTLINED_FUNCTION_12_74();
      if (v143)
      {
LABEL_87:
        outlined destroy of Participant(v144);
        uint64_t v153 = v183;
        _s15ConversationKit11ParticipantVWOcTm_13(v183, (uint64_t)v131, (void (*)(void))type metadata accessor for Participant);
        outlined destroy of Participant((uint64_t)v131);
        outlined destroy of Participant(v153);
        goto LABEL_88;
      }
    }
    else
    {
      uint64_t v144 = v178;
      _s15ConversationKit11ParticipantVWOcTm_13(v140, v178, (void (*)(void))type metadata accessor for Participant);
    }
    uint64_t v145 = v176;
    _s15ConversationKit11ParticipantVWOcTm_13(v144, v176, (void (*)(void))type metadata accessor for Participant.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_0();
        (*(void (**)(uint64_t))(v152 + 8))(v145);
        uint64_t v144 = v178;
        goto LABEL_87;
      case 4u:
        uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        uint64_t v131 = (char *)(v145 + *(int *)(v154 + 48));
        outlined consume of Participant.CopresenceInfo?(*(void *)(v145 + *(int *)(v154 + 64)), *(void *)(v145 + *(int *)(v154 + 64) + 8));
        OUTLINED_FUNCTION_12_74();
        outlined destroy of Participant.MediaInfo(v155);
        goto LABEL_82;
      case 6u:
        goto LABEL_83;
      default:
LABEL_82:
        type metadata accessor for Date();
        OUTLINED_FUNCTION_0();
        (*(void (**)(uint64_t))(v146 + 8))(v145);
LABEL_83:
        outlined destroy of Participant(v178);
        uint64_t v147 = v183;
        _s15ConversationKit11ParticipantVWOcTm_13(v183, (uint64_t)v131, (void (*)(void))type metadata accessor for Participant);
        unint64_t v148 = *(void **)&v131[v28[7]];
        if (v148)
        {
          id v149 = objc_msgSend(v148, sel_value);
          uint64_t v150 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          Swift::String_optional v28 = v151;

          uint64_t v131 = (char *)MEMORY[0x1C87730B0](v150, v28);
          OUTLINED_FUNCTION_8_85();
          swift_bridgeObjectRelease();
          LOBYTE(v150) = objc_msgSend(v131, sel_destinationIdIsPseudonym);

          OUTLINED_FUNCTION_12_74();
          outlined destroy of Participant((uint64_t)v131);
          outlined destroy of Participant(v147);
          if ((v150 & 1) == 0) {
            goto LABEL_93;
          }
LABEL_88:
          countAndFlagsBits += v139;
          if (!--v180)
          {
            char v156 = 0;
            goto LABEL_94;
          }
          continue;
        }
        outlined destroy of Participant((uint64_t)v131);
        outlined destroy of Participant(v147);
LABEL_93:
        char v156 = 1;
LABEL_94:
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_13_78();
        id v129 = v182;
        uint64_t v137 = v181;
LABEL_95:
        uint64_t v157 = v171;
        unint64_t v158 = v172;
        outlined consume of Data?(v171, v172);
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        char v160 = (char)v185;
        double v161 = v167;
        *CGRect v167 = a1;
        v161[1] = (uint64_t)countAndFlagsBits;
        id object = v190._object;
        v161[2] = v163;
        v161[3] = (uint64_t)object;
        void v161[4] = (uint64_t)v87;
        v161[5] = v157;
        v161[6] = v158;
        *((unsigned char *)v161 + 56) = v160;
        v161[8] = v137;
        *((unsigned char *)v161 + 72) = v156;
        uint64_t v161[10] = (uint64_t)v129;
        return result;
    }
  }
}

BOOL static InCallControlsTitleCellViewModel.TitleCellButton.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void InCallControlsTitleCellViewModel.TitleCellButton.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int InCallControlsTitleCellViewModel.TitleCellButton.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsTitleCellViewModel.TitleCellButton(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static InCallControlsTitleCellViewModel.TitleCellButton.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance InCallControlsTitleCellViewModel.TitleCellButton()
{
  return InCallControlsTitleCellViewModel.TitleCellButton.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance InCallControlsTitleCellViewModel.TitleCellButton(uint64_t a1)
{
  InCallControlsTitleCellViewModel.TitleCellButton.hash(into:)(a1, *v1);
}

uint64_t InCallControlsTitleCellViewModel.title.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t InCallControlsTitleCellViewModel.subtitle.getter()
{
  return OUTLINED_FUNCTION_35();
}

uint64_t InCallControlsTitleCellViewModel.contacts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InCallControlsTitleCellViewModel.groupPhotoData.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_35();
  outlined copy of Data?(v0, v1);
  return OUTLINED_FUNCTION_35();
}

uint64_t InCallControlsTitleCellViewModel.shouldUseGroupHeader.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t InCallControlsTitleCellViewModel.buttonsShowing.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InCallControlsTitleCellViewModel.shouldEnableMessagesButton.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

void *InCallControlsTitleCellViewModel.conversation.getter()
{
  unint64_t v1 = *(void **)(v0 + 80);
  id v2 = v1;
  return v1;
}

id one-time initialization function for participantCountFormatter()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED8]), sel_init);
  static InCallControlsTitleCellViewModel.participantCountFormatter = (uint64_t)result;
  return result;
}

id @nonobjc CNContact.init(displayName:handle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    uint64_t v4 = 0;
    if (a3) {
      goto LABEL_3;
    }
LABEL_5:
    v5.super.Class isa = 0;
    goto LABEL_6;
  }
  uint64_t v4 = (void *)MEMORY[0x1C87730B0]();
  swift_bridgeObjectRelease();
  if (!a3) {
    goto LABEL_5;
  }
LABEL_3:
  v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
LABEL_6:
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_contactWithDisplayName_handleStrings_, v4, v5.super.isa);

  return v6;
}

unint64_t lazy protocol witness table accessor for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton()
{
  unint64_t result = lazy protocol witness table cache variable for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton;
  if (!lazy protocol witness table cache variable for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton;
  if (!lazy protocol witness table cache variable for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton);
  }
  return result;
}

void destroy for InCallControlsTitleCellViewModel(uint64_t *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = a1[6];
  if (v2 >> 60 != 15) {
    outlined consume of Data._Representation(a1[5], v2);
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)a1[10];
}

uint64_t initializeWithCopy for InCallControlsTitleCellViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v6 = (uint64_t *)(a2 + 40);
  unint64_t v7 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    outlined copy of Data._Representation(*v6, v7);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v7;
  }
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRetain();
  id v10 = v9;
  return a1;
}

uint64_t assignWithCopy for InCallControlsTitleCellViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a2 + 40);
  unint64_t v5 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      outlined copy of Data._Representation(*v4, *(void *)(a2 + 48));
      uint64_t v8 = *(void *)(a1 + 40);
      unint64_t v9 = *(void *)(a1 + 48);
      *(void *)(a1 + 40) = v7;
      *(void *)(a1 + 48) = v5;
      outlined consume of Data._Representation(v8, v9);
      goto LABEL_8;
    }
    outlined destroy of Data(a1 + 40);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  outlined copy of Data._Representation(*v4, *(void *)(a2 + 48));
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v5;
LABEL_8:
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  id v10 = *(void **)(a1 + 80);
  unsigned int v11 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v11;
  id v12 = v11;

  return a1;
}

uint64_t outlined destroy of Data(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for InCallControlsTitleCellViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)(a2 + 40);
  unint64_t v7 = *(void *)(a1 + 48);
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 48);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *(void *)(a1 + 40);
      *(void *)(a1 + 40) = *v6;
      *(void *)(a1 + 48) = v8;
      outlined consume of Data._Representation(v9, v7);
      goto LABEL_6;
    }
    outlined destroy of Data(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
LABEL_6:
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  id v10 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlsTitleCellViewModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InCallControlsTitleCellViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsTitleCellViewModel()
{
  return &type metadata for InCallControlsTitleCellViewModel;
}

unsigned char *storeEnumTagSinglePayload for InCallControlsTitleCellViewModel.TitleCellButton(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C368AC7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsTitleCellViewModel.TitleCellButton()
{
  return &type metadata for InCallControlsTitleCellViewModel.TitleCellButton;
}

id TapToRadarBannerViewController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id PLPillView.__allocating_init(leadingAccessoryView:trailingAccessoryView:)(void *a1, void *a2)
{
  id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithLeadingAccessoryView_trailingAccessoryView_, a1, a2);

  return v4;
}

uint64_t key path getter for TapToRadarBannerViewController.isBannerPresent : TapToRadarBannerViewController@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x120))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for TapToRadarBannerViewController.isBannerPresent : TapToRadarBannerViewController(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x128))(*a1);
}

uint64_t TapToRadarBannerViewController.isBannerPresent.getter()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_isBannerPresent);
  swift_beginAccess();
  return *v1;
}

uint64_t TapToRadarBannerViewController.isBannerPresent.setter(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_isBannerPresent);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*TapToRadarBannerViewController.isBannerPresent.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t TapToRadarBannerViewController.groupUUIDString.setter(uint64_t a1, uint64_t a2)
{
  int v3 = (void *)(v2 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_groupUUIDString);
  void *v3 = a1;
  v3[1] = a2;
  return OUTLINED_FUNCTION_2_110();
}

uint64_t TapToRadarBannerViewController.addressList.setter(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_addressList) = a1;
  return OUTLINED_FUNCTION_2_110();
}

id TapToRadarBannerViewController.bannerSource.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController____lazy_storage___bannerSource;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController____lazy_storage___bannerSource];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController____lazy_storage___bannerSource];
LABEL_5:
    id v9 = v2;
    return v3;
  }
  id v4 = v0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for BNBannerSource);
  uint64_t v5 = outlined bridged method (pb) of @objc TapToRadarBannerViewController.requesterIdentifier.getter(v0);
  id result = @nonobjc BNBannerSource.__allocating_init(for:forRequesterIdentifier:)(0, v5, v6);
  if (result)
  {
    unint64_t v8 = *(void **)&v0[v1];
    *(void *)&v4[v1] = result;
    id v3 = result;

    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void TapToRadarBannerViewController.init()()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_groupUUIDString];
  *uint64_t v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_fullLogArchive] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController____lazy_storage___bannerSource] = 0;
  uint64_t v2 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_4();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = v0;
  UUID.init()();
  uint64_t v9 = UUID.uuidString.getter();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  id v12 = (uint64_t *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_requestID];
  *id v12 = v9;
  v12[1] = v11;
  v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_isBannerPresent] = 0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  id v13 = @nonobjc UIImage.init(_systemName:)(0x7261646172, 0xE500000000000000);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v13);

  uint64_t v15 = OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillLeadingImageView;
  *(void *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillLeadingImageView] = v14;
  uint64_t v16 = self;
  id v17 = v14;
  id v18 = objc_msgSend(v16, sel_systemPurpleColor);
  objc_msgSend(v17, sel_setTintColor_, v18);

  OUTLINED_FUNCTION_47();
  id v21 = @nonobjc UIImage.init(_systemName:)(v19, v20);
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v21);

  uint64_t v23 = OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillTrailingImageView;
  *(void *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillTrailingImageView] = v22;
  id v24 = v22;
  id v25 = objc_msgSend(v16, sel_systemPurpleColor);
  objc_msgSend(v24, sel_setTintColor_, v25);

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for PLPillContentItem);
  uint64_t v26 = self;
  id v27 = objc_msgSend(v26, sel_conversationKit);
  OUTLINED_FUNCTION_47();
  uint64_t v29 = OUTLINED_FUNCTION_0_23(0xD000000000000010, v28);
  uint64_t v31 = v30;

  id v32 = PLPillContentItem.__allocating_init(text:)(v29, v31);
  uint64_t v33 = OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillViewTitle;
  *(void *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillViewTitle] = v32;
  id v34 = objc_msgSend(v26, sel_conversationKit);
  OUTLINED_FUNCTION_47();
  uint64_t v37 = OUTLINED_FUNCTION_0_23(v35, v36);
  uint64_t v39 = v38;

  id v40 = PLPillContentItem.__allocating_init(text:style:)(v37, v39, 5);
  uint64_t v41 = OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillViewSubtitle;
  *(void *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillViewSubtitle] = v40;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for PLPillView);
  uint64_t v42 = *(void **)&v8[v15];
  id v43 = *(void **)&v8[v23];
  id v44 = v42;
  id v45 = v43;
  id v46 = PLPillView.__allocating_init(leadingAccessoryView:trailingAccessoryView:)(v42, v43);
  *(void *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillView] = v46;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1C3769610;
  unint64_t v48 = *(void **)&v8[v33];
  *(void *)(v47 + 32) = v48;
  uint64_t v49 = *(void **)&v8[v41];
  *(void *)(v47 + 40) = v49;
  v60[0] = v47;
  specialized Array._endMutation()();
  id v50 = v46;
  id v51 = v48;
  id v52 = v49;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_setCenterContentItems_, isa);

  *(void *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_addressList] = MEMORY[0x1E4FBC870];
  long long v54 = (objc_class *)type metadata accessor for TapToRadarBannerViewController();
  v61.receiver = v8;
  v61.super_class = v54;
  id v55 = objc_msgSendSuper2(&v61, sel_initWithNibName_bundle_, 0, 0);
  v60[3] = v54;
  v60[0] = v55;
  objc_allocWithZone(MEMORY[0x1E4FB1D38]);
  id v56 = v55;
  id v57 = @nonobjc UITapGestureRecognizer.init(target:action:)(v60, (uint64_t)sel_handleTap_);
  id v58 = objc_msgSend(v56, sel_view);
  if (v58)
  {
    uint64_t v59 = v58;
    objc_msgSend(v58, sel_addGestureRecognizer_, v57);

    OUTLINED_FUNCTION_28();
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for TapToRadarBannerViewController()
{
  return self;
}

id TapToRadarBannerViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void TapToRadarBannerViewController.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_groupUUIDString];
  *uint64_t v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_fullLogArchive] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController____lazy_storage___bannerSource] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall TapToRadarBannerViewController.viewDidLoad()()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillView], sel_setAutoresizingMask_, 18);
  id v2 = *(id *)&v0[v1];
  id v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = v3;
  objc_msgSend(v3, sel_bounds);
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;

  objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
  id v13 = objc_msgSend(v0, sel_view);
  if (!v13)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v14 = v13;
  objc_msgSend(v13, sel_addSubview_, *(void *)&v0[v1]);
}

Swift::Void __swiftcall TapToRadarBannerViewController.handleTap(_:)(UITapGestureRecognizer_optional *a1)
{
  OUTLINED_FUNCTION_31();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static OS_dispatch_queue.main.getter();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  void v11[4] = partial apply for closure #1 in TapToRadarBannerViewController.handleTap(_:);
  void v11[5] = v2;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = thunk for @escaping @callee_guaranteed () -> ();
  v11[3] = &block_descriptor_107;
  id v3 = _Block_copy(v11);
  id v4 = v1;
  swift_release();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_5_1();
  v11[0] = MEMORY[0x1E4FBC860];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_172();
  _Block_release(v3);

  uint64_t v7 = OUTLINED_FUNCTION_21_3();
  v8(v7);
  uint64_t v9 = OUTLINED_FUNCTION_20_26();
  v10(v9);
  OUTLINED_FUNCTION_28();
}

void closure #1 in TapToRadarBannerViewController.handleTap(_:)(void *a1)
{
  uint64_t v66 = a1;
  uint64_t v1 = type metadata accessor for URLQueryItem();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  URLQueryItem.init(name:value:)();
  uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v7 = *(void *)(v5 + 16);
  unint64_t v6 = *(void *)(v5 + 24);
  if (v7 >= v6 >> 1) {
    uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1, v5);
  }
  *(void *)(v5 + 16) = v7 + 1;
  uint64_t v9 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32);
  uint64_t v8 = v2 + 32;
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48);
  uint64_t v11 = *(void *)(v8 + 40);
  uint64_t v67 = v9;
  uint64_t v12 = v9(v5 + v10 + v11 * v7, (char *)v64 - v4, v1);
  MEMORY[0x1F4188790](v12);
  id v13 = (char *)v64 - v4;
  URLQueryItem.init(name:value:)();
  unint64_t v15 = *(void *)(v5 + 16);
  unint64_t v14 = *(void *)(v5 + 24);
  if (v15 >= v14 >> 1) {
    uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1, v5);
  }
  *(void *)(v5 + 16) = v15 + 1;
  uint64_t v65 = v1;
  uint64_t v16 = v67(v5 + v10 + v15 * v11, v13, v1);
  MEMORY[0x1F4188790](v16);
  unint64_t v17 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  URLQueryItem.init(name:value:)();
  unint64_t v19 = *(void *)(v5 + 16);
  unint64_t v18 = *(void *)(v5 + 24);
  if (v19 >= v18 >> 1) {
    uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1, v5);
  }
  *(void *)(v5 + 16) = v19 + 1;
  unint64_t v20 = v5 + v10 + v19 * v11;
  uint64_t v21 = v65;
  uint64_t v22 = v67(v20, (char *)v64 - v17, v65);
  MEMORY[0x1F4188790](v22);
  uint64_t v23 = (char *)v64 - v17;
  URLQueryItem.init(name:value:)();
  unint64_t v25 = *(void *)(v5 + 16);
  unint64_t v24 = *(void *)(v5 + 24);
  if (v25 >= v24 >> 1) {
    uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1, v5);
  }
  *(void *)(v5 + 16) = v25 + 1;
  uint64_t v26 = v67(v5 + v10 + v25 * v11, v23, v21);
  MEMORY[0x1F4188790](v26);
  unint64_t v27 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  URLQueryItem.init(name:value:)();
  unint64_t v29 = *(void *)(v5 + 16);
  unint64_t v28 = *(void *)(v5 + 24);
  if (v29 >= v28 >> 1) {
    uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1, v5);
  }
  *(void *)(v5 + 16) = v29 + 1;
  unint64_t v30 = v5 + v10 + v29 * v11;
  uint64_t v31 = v65;
  uint64_t v32 = v67(v30, (char *)v64 - v27, v65);
  MEMORY[0x1F4188790](v32);
  uint64_t v33 = (char *)v64 - v27;
  URLQueryItem.init(name:value:)();
  unint64_t v35 = *(void *)(v5 + 16);
  unint64_t v34 = *(void *)(v5 + 24);
  if (v35 >= v34 >> 1) {
    uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1, v5);
  }
  *(void *)(v5 + 16) = v35 + 1;
  uint64_t v36 = v67(v5 + v10 + v35 * v11, v33, v31);
  if (*(void *)((char *)v66 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_groupUUIDString + 8))
  {
    MEMORY[0x1F4188790](v36);
    swift_bridgeObjectRetain();
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    unint64_t v38 = *(void *)(v5 + 16);
    unint64_t v37 = *(void *)(v5 + 24);
    if (v38 >= v37 >> 1) {
      uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1, v5);
    }
    *(void *)(v5 + 16) = v38 + 1;
    uint64_t v36 = v67(v5 + v10 + v38 * v11, (char *)v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v31);
  }
  v64[1] = v64;
  MEMORY[0x1F4188790](v36);
  uint64_t v68 = *(void *)((char *)v66 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_addressList);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<String>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Set<String> and conformance Set<A>, &demangling cache variable for type metadata for Set<String>);
  lazy protocol witness table accessor for type String and conformance String();
  Sequence<>.joined(separator:)();
  swift_bridgeObjectRelease();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  unint64_t v40 = *(void *)(v5 + 16);
  unint64_t v39 = *(void *)(v5 + 24);
  if (v40 >= v39 >> 1) {
    uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1, v5);
  }
  uint64_t v41 = v65;
  *(void *)(v5 + 16) = v40 + 1;
  uint64_t v42 = v67(v5 + v10 + v40 * v11, (char *)v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v41);
  if (*((unsigned char *)v66 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_fullLogArchive) == 1)
  {
    MEMORY[0x1F4188790](v42);
    URLQueryItem.init(name:value:)();
    unint64_t v44 = *(void *)(v5 + 16);
    unint64_t v43 = *(void *)(v5 + 24);
    if (v44 >= v43 >> 1) {
      uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1, v5);
    }
    *(void *)(v5 + 16) = v44 + 1;
    v67(v5 + v10 + v44 * v11, (char *)v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v41);
  }
  id v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29080]), sel_init);
  outlined bridged method (mbnn) of @objc UIViewController.title.setter(0x722D6F742D706174, 0xEC00000072616461, v45, (SEL *)&selRef_setScheme_);
  outlined bridged method (mbnn) of @objc UIViewController.title.setter(7824750, 0xE300000000000000, v45, (SEL *)&selRef_setHost_);
  outlined bridged method (mbnn) of @objc NSURLComponents.queryItems.setter(v5, v45);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1C3769620;
  id v47 = objc_msgSend(v45, sel_URL);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v49 = *(void *)(*(void *)(v48 - 8) + 64);
  MEMORY[0x1F4188790](v48 - 8);
  unint64_t v50 = (v49 + 15) & 0xFFFFFFFFFFFFFFF0;
  if (v47)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v51 = 0;
  }
  else
  {
    uint64_t v51 = 1;
  }
  uint64_t v52 = type metadata accessor for URL();
  __swift_storeEnumTagSinglePayload((uint64_t)v64 - v50, v51, 1, v52);
  uint64_t v53 = specialized >> prefix<A>(_:)((uint64_t)v64 - v50);
  uint64_t v55 = v54;
  outlined destroy of URL?((uint64_t)v64 - v50);
  *(void *)(v46 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v46 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v46 + 32) = v53;
  *(void *)(v46 + 40) = v55;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  id v56 = objc_msgSend(self, sel_sharedApplication);
  id v57 = objc_msgSend(v45, sel_URL);
  MEMORY[0x1F4188790](v57);
  if (v58)
  {
    uint64_t v59 = *(void *)(v52 - 8);
    MEMORY[0x1F4188790](v58);
    objc_super v61 = (char *)v64 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v59 + 32))((char *)v64 - v50, v61, v52);
    __swift_storeEnumTagSinglePayload((uint64_t)v64 - v50, 0, 1, v52);
    if (__swift_getEnumTagSinglePayload((uint64_t)v64 - v50, 1, v52) == 1)
    {
      id v57 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v62);
      id v57 = v63;
      (*(void (**)(char *, uint64_t))(v59 + 8))((char *)v64 - v50, v52);
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v64 - v50, 1, 1, v52);
  }
  objc_msgSend(v56, sel_openURL_withCompletionHandler_, v57, 0);

  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v66) + 0x1A8))();
}

Swift::Void __swiftcall TapToRadarBannerViewController.showBanner()()
{
  OUTLINED_FUNCTION_31();
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FADBD0]), sel_init);
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))() & 1) != 0
    || (objc_msgSend(v17, sel_TTRBannerEnabled) & 1) == 0
    || (type metadata accessor for SpringBoardUtilities(),
        OUTLINED_FUNCTION_47(),
        static SpringBoardUtilities.checkSpringBoardState(for:)()))
  {
    OUTLINED_FUNCTION_28();
  }
  else
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v16 = static OS_dispatch_queue.main.getter();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v0;
    void v18[4] = partial apply for closure #1 in TapToRadarBannerViewController.showBanner();
    void v18[5] = v5;
    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 1107296256;
    void v18[2] = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v18[3] = &block_descriptor_6_8;
    unint64_t v6 = _Block_copy(v18);
    unint64_t v7 = v0;
    swift_release();
    type metadata accessor for DispatchQoS();
    v15[1] = v15;
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v8);
    OUTLINED_FUNCTION_59_0();
    type metadata accessor for DispatchWorkItemFlags();
    v15[0] = v15;
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v9);
    OUTLINED_FUNCTION_5_1();
    v18[0] = MEMORY[0x1E4FBC860];
    lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    OUTLINED_FUNCTION_42_0();
    unint64_t v10 = (void *)v16;
    MEMORY[0x1C8773BA0](0, v1, v2, v6);

    _Block_release(v6);
    uint64_t v11 = OUTLINED_FUNCTION_21_3();
    v12(v11);
    uint64_t v13 = OUTLINED_FUNCTION_20_26();
    v14(v13);
    OUTLINED_FUNCTION_28();
  }
}

void closure #1 in TapToRadarBannerViewController.showBanner()(void *a1)
{
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  id v2 = TapToRadarBannerViewController.bannerSource.getter();
  v17[0] = 0;
  id v3 = objc_msgSend(v2, sel_layoutDescriptionWithError_, v17);

  if (v3)
  {
    id v4 = v17[0];
    objc_msgSend(v3, sel_presentationSize);
    double v6 = v5;
    double v8 = v7;
    objc_msgSend(v3, sel_containerSize);
    objc_msgSend(a1, sel_preferredContentSizeWithPresentationSize_containerSize_, v6, v8, v9, v10);
    objc_msgSend(a1, sel_setPreferredContentSize_);
    id v11 = TapToRadarBannerViewController.bannerSource.getter();
    v17[0] = 0;
    unsigned int v12 = objc_msgSend(v11, sel_postPresentable_options_userInfo_error_, a1, 1, 0, v17);

    if (v12)
    {
      id v13 = v17[0];

      return;
    }
    id v16 = v17[0];
    unint64_t v15 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
  else
  {
    id v14 = v17[0];
    unint64_t v15 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
}

Swift::Void __swiftcall TapToRadarBannerViewController.dismissBanner()()
{
  OUTLINED_FUNCTION_31();
  if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))())
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    void v10[3] = static OS_dispatch_queue.main.getter();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v0;
    void v11[4] = partial apply for closure #1 in TapToRadarBannerViewController.dismissBanner();
    void v11[5] = v1;
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 1107296256;
    v11[2] = thunk for @escaping @callee_guaranteed () -> ();
    v11[3] = &block_descriptor_12_5;
    id v2 = _Block_copy(v11);
    id v3 = v0;
    swift_release();
    type metadata accessor for DispatchQoS();
    void v10[2] = v10;
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v4);
    OUTLINED_FUNCTION_59_0();
    type metadata accessor for DispatchWorkItemFlags();
    v10[1] = v10;
    OUTLINED_FUNCTION_4();
    MEMORY[0x1F4188790](v5);
    OUTLINED_FUNCTION_5_1();
    v11[0] = MEMORY[0x1E4FBC860];
    lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    OUTLINED_FUNCTION_42_0();
    OUTLINED_FUNCTION_172();
    _Block_release(v2);

    uint64_t v6 = OUTLINED_FUNCTION_21_3();
    v7(v6);
    uint64_t v8 = OUTLINED_FUNCTION_20_26();
    v9(v8);
  }
  OUTLINED_FUNCTION_28();
}

void closure #1 in TapToRadarBannerViewController.dismissBanner()(uint64_t a1)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  id v2 = TapToRadarBannerViewController.bannerSource.getter();
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_requestID);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_requestID + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)MEMORY[0x1C87730B0](0xD000000000000013, 0x80000001C37BD3C0);
  v9[0] = 0;
  uint64_t v6 = outlined bridged method (mbgnnnnnn) of @objc BNBannerSource.revokePresentable(withRequestIdentifier:reason:animated:userInfo:)(v3, v4, (uint64_t)v5, 1, 0, (uint64_t)v9, v2);

  swift_bridgeObjectRelease();
  id v7 = v9[0];
  if (!v6)
  {
    uint64_t v8 = v7;
    uint64_t v6 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
}

uint64_t TapToRadarBannerViewController.addMessagesBubbleRecipientsList(groupMessageUUID:with:)(uint64_t a1, uint64_t a2)
{
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v4 = swift_bridgeObjectRetain();
  TapToRadarBannerViewController.addressList.setter(v4);
  swift_bridgeObjectRetain();
  return TapToRadarBannerViewController.groupUUIDString.setter(a1, a2);
}

Swift::Void __swiftcall TapToRadarBannerViewController.useFullLogArchive()()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_fullLogArchive) = 1;
}

uint64_t TapToRadarBannerViewController.presentableWillAppear(asBanner:)()
{
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))(1);
}

uint64_t TapToRadarBannerViewController.presentableWillDisappear(asBanner:withReason:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))(0);
}

Swift::Bool __swiftcall TapToRadarBannerViewController._canShowWhileLocked()()
{
  return 1;
}

id TapToRadarBannerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)MEMORY[0x1C87730B0]();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void TapToRadarBannerViewController.init(nibName:bundle:)()
{
}

id TapToRadarBannerViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TapToRadarBannerViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t TapToRadarBannerViewController.requestIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_requestID);
  swift_bridgeObjectRetain();
  return v1;
}

void *TapToRadarBannerViewController.viewController.getter()
{
  id v1 = v0;
  return v0;
}

uint64_t TapToRadarBannerViewController.requesterIdentifier.getter()
{
  type metadata accessor for TapToRadarBannerViewController();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  return outlined bridged method (ob) of @objc NSBundle.bundleIdentifier.getter(v1);
}

CGSize __swiftcall TapToRadarBannerViewController.preferredContentSize(withPresentationSize:containerSize:)(CGSize withPresentationSize, CGSize containerSize)
{
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillView), sel_systemLayoutSizeFittingSize_, withPresentationSize.width, withPresentationSize.height, containerSize.width, containerSize.height);
  result.height = v4;
  result.width = v3;
  return result;
}

id TapToRadarBannerViewController.bannerContentOutsets.getter()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillView), sel_shadowOutsets);
}

uint64_t outlined bridged method (ob) of @objc NSBundle.bundleIdentifier.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_bundleIdentifier);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined bridged method (pb) of @objc TapToRadarBannerViewController.requesterIdentifier.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_requesterIdentifier);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void outlined bridged method (mbnn) of @objc NSURLComponents.queryItems.setter(uint64_t a1, void *a2)
{
  type metadata accessor for URLQueryItem();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setQueryItems_, isa);
}

id outlined bridged method (mbgnnnnnn) of @objc BNBannerSource.revokePresentable(withRequestIdentifier:reason:animated:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7)
{
  unsigned int v12 = (void *)MEMORY[0x1C87730B0]();
  id v13 = objc_msgSend(a7, sel_revokePresentableWithRequestIdentifier_reason_animated_userInfo_error_, v12, a3, a4 & 1, a5, a6);

  return v13;
}

uint64_t sub_1C368D6C8()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in TapToRadarBannerViewController.handleTap(_:)()
{
  closure #1 in TapToRadarBannerViewController.handleTap(_:)(*(void **)(v0 + 16));
}

void partial apply for closure #1 in TapToRadarBannerViewController.showBanner()()
{
  closure #1 in TapToRadarBannerViewController.showBanner()(*(void **)(v0 + 16));
}

void partial apply for closure #1 in TapToRadarBannerViewController.dismissBanner()()
{
  closure #1 in TapToRadarBannerViewController.dismissBanner()(*(void *)(v0 + 16));
}

uint64_t method lookup function for TapToRadarBannerViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TapToRadarBannerViewController);
}

uint64_t dispatch thunk of TapToRadarBannerViewController.isBannerPresent.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.isBannerPresent.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.isBannerPresent.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.handleTap(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.showBanner()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.dismissBanner()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.addMessagesBubbleRecipientsList(groupMessageUUID:with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.useFullLogArchive()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.presentableWillAppear(asBanner:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.presentableWillDisappear(asBanner:withReason:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C8))();
}

uint64_t SidebarStateStream.states.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<SidebarState, Never>>);
  OUTLINED_FUNCTION_4();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<SidebarState, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<SidebarState, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<SidebarState, Never>);
  lazy protocol witness table accessor for type SidebarState and conformance SidebarState();
  Publisher<>.removeDuplicates()();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<SidebarState, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<SidebarState, Never>>);
  uint64_t v7 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  return v7;
}

unint64_t lazy protocol witness table accessor for type SidebarState and conformance SidebarState()
{
  unint64_t result = lazy protocol witness table cache variable for type SidebarState and conformance SidebarState;
  if (!lazy protocol witness table cache variable for type SidebarState and conformance SidebarState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SidebarState and conformance SidebarState);
  }
  return result;
}

uint64_t SidebarStateStream.__allocating_init(initial:)()
{
  OUTLINED_FUNCTION_25_0();
  uint64_t v0 = swift_allocObject();
  SidebarStateStream.init(initial:)();
  return v0;
}

uint64_t SidebarStateStream.currentState.getter()
{
  CurrentValueSubject.value.getter();
  return v1;
}

BOOL static SidebarState.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t SidebarButtonViewModel.__allocating_init(service:stream:isScreenLocked:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  SidebarButtonViewModel.init(service:stream:isScreenLocked:)(a1, a2, a3);
  return v6;
}

Swift::Void __swiftcall SidebarStateStream.update(_:)(ConversationKit::SidebarState a1)
{
}

uint64_t one-time initialization function for showDetailsSideBar()
{
  uint64_t result = MEMORY[0x1C87730B0](0xD000000000000012, 0x80000001C37BD560);
  static NSNotificationName.showDetailsSideBar = result;
  return result;
}

id static NSNotificationName.showDetailsSideBar.getter()
{
  if (one-time initialization token for showDetailsSideBar != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSNotificationName.showDetailsSideBar;
  return v0;
}

void SidebarState.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int SidebarState.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SidebarState(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static SidebarState.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SidebarState()
{
  return SidebarState.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance SidebarState(uint64_t a1)
{
  SidebarState.hash(into:)(a1, *v1);
}

uint64_t SidebarStateStream.init(initial:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<SidebarState, Never>);
  swift_allocObject();
  *(void *)(v0 + 16) = CurrentValueSubject.init(_:)();
  return v0;
}

uint64_t SidebarStateStream.deinit()
{
  swift_release();
  return v0;
}

uint64_t SidebarStateStream.__deallocating_deinit()
{
  swift_release();
  OUTLINED_FUNCTION_25_0();
  return swift_deallocClassInstance();
}

void *SidebarButtonViewModel.init(service:stream:isScreenLocked:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = MEMORY[0x1E4FBC860];
  v3[9] = 0;
  v3[10] = v7;
  outlined init with copy of IDSLookupManager(a1, (uint64_t)(v3 + 3));
  v3[8] = a2;
  v3[2] = a3;
  swift_retain();
  swift_retain();
  SidebarButtonViewModel.observeState()();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v3;
}

uint64_t SidebarButtonViewModel.observeState()()
{
  uint64_t v46 = v0 + 10;
  swift_beginAccess();
  unint64_t v44 = v0;
  v0[10] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  id v45 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, OS_dispatch_queue>);
  uint64_t v43 = *(v45 - 1);
  MEMORY[0x1F4188790](v45);
  uint64_t v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_defaultCenter);
  if (one-time initialization token for showDetailsSideBar != -1) {
    swift_once();
  }
  NSNotificationCenter.publisher(for:object:)();

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  id v48 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  MEMORY[0x1F4188790](v8 - 8);
  double v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)();
  outlined destroy of Conversation?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_allocObject();
  swift_weakInit();
  uint64_t v36 = MEMORY[0x1E4F1AAB8];
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type Publishers.ReceiveOn<NSNotificationCenter.Publisher, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, OS_dispatch_queue>);
  unsigned int v12 = v45;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t *))(v43 + 8))(v2, v12);
  swift_beginAccess();
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  uint64_t v43 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<SidebarState, Never>, NSRunLoop>);
  id v45 = &v31;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v48 = (id)SidebarStateStream.states.getter();
  id v42 = self;
  id v47 = objc_msgSend(v42, sel_mainRunLoop);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  uint64_t v40 = *(void *)(*(void *)(v17 - 8) + 64);
  MEMORY[0x1F4188790](v17 - 8);
  unint64_t v41 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v19 = (char *)&v31 - v41;
  uint64_t v39 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v39);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<SidebarState, Never>);
  uint64_t v38 = type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  uint64_t v34 = MEMORY[0x1E4F1AAE8];
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<SidebarState, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<SidebarState, Never>);
  uint64_t v37 = lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((unint64_t *)&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  Publisher.receive<A>(on:options:)();
  outlined destroy of Conversation?((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  swift_release();
  swift_allocObject();
  unint64_t v20 = v44;
  swift_weakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<SidebarState, Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<SidebarState, Never>, NSRunLoop>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>);
  uint64_t v32 = &v31;
  id v45 = *(uint64_t **)(v21 - 8);
  uint64_t v22 = v45[8];
  MEMORY[0x1F4188790](v21);
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v48 = (id)v20[2];
  swift_retain();
  id v47 = objc_msgSend(v42, sel_mainRunLoop);
  MEMORY[0x1F4188790](v47);
  unint64_t v24 = (char *)&v31 - v41;
  __swift_storeEnumTagSinglePayload((uint64_t)&v31 - v41, 1, 1, v39);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  uint64_t v34 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, (uint64_t *)&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  Publisher.receive<A>(on:options:)();
  outlined destroy of Conversation?((uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  uint64_t v36 = lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  unint64_t v25 = (void (*)(char *, uint64_t))v45[1];
  ++v45;
  v25((char *)&v31 - v23, v21);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  uint64_t v26 = swift_release();
  uint64_t v32 = &v31;
  MEMORY[0x1F4188790](v26);
  uint64_t v27 = v20[6];
  uint64_t v28 = v20[7];
  __swift_project_boxed_opaque_existential_1(v20 + 3, v27);
  id v48 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 88))(v27, v28);
  id v47 = objc_msgSend(v42, sel_mainRunLoop);
  MEMORY[0x1F4188790](v47);
  unint64_t v29 = (char *)&v31 - v41;
  __swift_storeEnumTagSinglePayload((uint64_t)&v31 - v41, 1, 1, v39);
  Publisher.receive<A>(on:options:)();
  outlined destroy of Conversation?((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v25((char *)&v31 - v23, v21);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t SidebarButtonViewModel.controlType.getter()
{
  return SidebarButtonViewModel.config.getter();
}

uint64_t SidebarButtonViewModel.config.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Font.Leading();
  OUTLINED_FUNCTION_4();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[9])
  {
    uint64_t v8 = v1[9];
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 0x2E72616265646973;
    *(void *)(v9 + 24) = 0xEF676E696461656CLL;
    uint64_t v10 = static Color.white.getter();
    static Font.subheadline.getter();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4F3E0F8], v2);
    uint64_t v11 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
    long long v25 = xmmword_1C376AA10;
    uint64_t v26 = 0x401C000000000000;
    uint64_t v27 = v10;
    uint64_t v28 = v11;
    unint64_t v29 = _s15ConversationKit12SystemSymbolVAASbRszlE19catalystCallControl4name5color15backgroundColorACySbGSS_7SwiftUI0K0VSbcAKSbctFZSSSbcfU_TA_0;
    uint64_t v30 = v9;
    uint64_t v31 = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
    uint64_t v32 = 0;
    uint64_t v33 = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
    uint64_t v34 = 0;
    uint64_t v35 = closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
    uint64_t v36 = 0;
    uint64_t v37 = partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
    uint64_t v38 = 0;
    uint64_t v39 = partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
    uint64_t v40 = 0;
    unsigned int v12 = self;
    id v13 = objc_msgSend(v12, sel_conversationKit);
    uint64_t v14 = OUTLINED_FUNCTION_0_23(0xD000000000000018, 0x80000001C37BD490);
    uint64_t v16 = v15;

    uint64_t v17 = v1[6];
    uint64_t v18 = v1[7];
    __swift_project_boxed_opaque_existential_1(v1 + 3, v17);
    LOBYTE(v17) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 80))(v17, v18);
    id v19 = objc_msgSend(v12, sel_conversationKit);
    uint64_t v20 = OUTLINED_FUNCTION_0_23(0xD000000000000011, 0x80000001C37BD4B0);
    uint64_t v22 = v21;

    char v23 = SidebarStateStream.currentState.getter() != 0;
    swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<Bool>);
    swift_allocObject();
    uint64_t v8 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)((uint64_t)&v25, v14, v16, v17 & 1, v20, v22, 0xD000000000000013, 0x80000001C3797330, v23, 1);
    v1[9] = v8;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v8;
}

uint64_t sub_1C368ECE4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C368ED1C()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_25_0();
  return swift_deallocObject();
}

BOOL SidebarButtonViewModel.enabled(for:)(uint64_t a1)
{
  return (BYTE4(a1) == 128 || (BYTE4(a1) & 0xE0) != 0x80) && a1 != 3;
}

Swift::Void __swiftcall SidebarButtonViewModel.didTap()()
{
  ((void (*)(void))SidebarButtonViewModel.config.getter)();
  char v0 = specialized StateHolder.state.getter();
  specialized StateHolder.state.setter((v0 & 1) == 0);
  uint64_t v1 = swift_release();
  SidebarButtonViewModel.config.getter(v1);
  char v2 = specialized StateHolder.state.getter();
  swift_release();
  SidebarStateStream.update(_:)((ConversationKit::SidebarState)(v2 & 1));
}

Swift::Void __swiftcall SidebarButtonViewModel.onDisappear()()
{
}

uint64_t key path setter for SidebarButtonViewModel.config : SidebarButtonViewModel()
{
  uint64_t v0 = swift_retain();
  return SidebarButtonViewModel.config.setter(v0);
}

uint64_t SidebarButtonViewModel.config.setter(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return swift_release();
}

uint64_t closure #1 in SidebarButtonViewModel.config.getter()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    SidebarButtonViewModel.didTap()();
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in SidebarButtonViewModel.config.getter()
{
  return closure #1 in SidebarButtonViewModel.config.getter();
}

uint64_t closure #1 in SidebarButtonViewModel.observeState()()
{
  if (one-time initialization token for conversationController != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logger.conversationController);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1C2F90000, v1, v2, "Received notification about showing details side bar.", v3, 2u);
    MEMORY[0x1C87760E0](v3, -1, -1);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    SidebarButtonViewModel.config.getter();
    specialized StateHolder.state.setter(1);
    swift_release();
    swift_retain();
    SidebarStateStream.update(_:)(ConversationKit_SidebarState_visible);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #2 in SidebarButtonViewModel.observeState()(unsigned __int8 *a1)
{
  int v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    SidebarButtonViewModel.config.getter();
    int v3 = specialized StateHolder.state.getter() & 1;
    swift_release();
    if (v1 != v3)
    {
      SidebarButtonViewModel.config.getter();
      specialized StateHolder.state.setter(v1);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t closure #3 in SidebarButtonViewModel.observeState()()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    SidebarButtonViewModel.config.getter();
    specialized IconButtonConfig.enabled.setter();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #4 in SidebarButtonViewModel.observeState()(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    SidebarButtonViewModel.config.getter();
    specialized StateHolder.state.setter(v1);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t SidebarButtonViewModel.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SidebarButtonViewModel.__deallocating_deinit()
{
  SidebarButtonViewModel.deinit();
  return swift_deallocClassInstance();
}

BOOL protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance SidebarButtonViewModel(uint64_t a1)
{
  return SidebarButtonViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL);
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance SidebarButtonViewModel()
{
  return SidebarButtonViewModel.controlType.getter();
}

void protocol witness for CallControlsButtonViewModel.onAppear() in conformance SidebarButtonViewModel()
{
}

void protocol witness for CallControlsButtonViewModel.onDisappear() in conformance SidebarButtonViewModel()
{
}

uint64_t sub_1C368F2C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SidebarButtonViewModel.config.getter();
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for SidebarState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C368F3C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SidebarState()
{
  return &type metadata for SidebarState;
}

uint64_t type metadata accessor for SidebarStateStream()
{
  return self;
}

uint64_t method lookup function for SidebarStateStream(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SidebarStateStream);
}

uint64_t dispatch thunk of SidebarStateStream.__allocating_init(initial:)(char a1)
{
  return (*(uint64_t (**)(void))(v1 + 88))(a1 & 1);
}

uint64_t type metadata accessor for SidebarButtonViewModel()
{
  return self;
}

uint64_t method lookup function for SidebarButtonViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SidebarButtonViewModel);
}

uint64_t dispatch thunk of SidebarButtonViewModel.__allocating_init(service:stream:isScreenLocked:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t partial apply for closure #1 in SidebarButtonViewModel.observeState()()
{
  return closure #1 in SidebarButtonViewModel.observeState()();
}

uint64_t partial apply for closure #2 in SidebarButtonViewModel.observeState()(unsigned __int8 *a1)
{
  return closure #2 in SidebarButtonViewModel.observeState()(a1);
}

uint64_t partial apply for closure #3 in SidebarButtonViewModel.observeState()()
{
  return closure #3 in SidebarButtonViewModel.observeState()();
}

uint64_t partial apply for closure #4 in SidebarButtonViewModel.observeState()(char *a1)
{
  return closure #4 in SidebarButtonViewModel.observeState()(a1);
}

unint64_t InCallControlsTitleCell.ButtonType.debugDescription.getter(char a1)
{
  unint64_t result = 0x6567617373656D2ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t InCallControlsTitleCell.ButtonType.init(rawValue:)(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

uint64_t InCallControlsTitleCell.ButtonType.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t lazy protocol witness table accessor for type InCallControlsTitleCell.ButtonType and conformance InCallControlsTitleCell.ButtonType()
{
  unint64_t result = lazy protocol witness table cache variable for type InCallControlsTitleCell.ButtonType and conformance InCallControlsTitleCell.ButtonType;
  if (!lazy protocol witness table cache variable for type InCallControlsTitleCell.ButtonType and conformance InCallControlsTitleCell.ButtonType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsTitleCell.ButtonType and conformance InCallControlsTitleCell.ButtonType);
  }
  return result;
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance InCallControlsTitleCell.ButtonType@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = InCallControlsTitleCell.ButtonType.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance InCallControlsTitleCell.ButtonType@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = InCallControlsTitleCell.ButtonType.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

unint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance InCallControlsTitleCell.ButtonType()
{
  return InCallControlsTitleCell.ButtonType.debugDescription.getter(*v0);
}

unsigned char *storeEnumTagSinglePayload for InCallControlsTitleCell.ButtonType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C368F71CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsTitleCell.ButtonType()
{
  return &type metadata for InCallControlsTitleCell.ButtonType;
}

uint64_t dispatch thunk of InCallControlsTitleCellDelegate.inCallControlsTitleCell(_:didTap:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t CancelButtonViewModel.__allocating_init(service:letMeInViewModel:)(long long *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  CancelButtonViewModel.init(service:letMeInViewModel:)(a1, a2);
  return v4;
}

uint64_t CancelButtonViewModel.init(service:letMeInViewModel:)(long long *a1, uint64_t a2)
{
  *(unsigned char *)(v2 + 64) = 1;
  *(void *)(v2 + 72) = 0;
  outlined init with take of Notice(a1, v2 + 16);
  *(void *)(v2 + 56) = a2;
  return v2;
}

uint64_t CancelButtonViewModel.controlType.getter()
{
  return CancelButtonViewModel.config.getter();
}

uint64_t CancelButtonViewModel.config.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CallControlTextButtonStyle(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v1 + 72))
  {
    uint64_t v5 = *(void *)(v1 + 72);
  }
  else
  {
    if (one-time initialization token for callControlBackgroundOff != -1) {
      swift_once();
    }
    uint64_t v6 = static SystemSymbol<A>.callControlBackgroundOff;
    uint64_t v7 = (uint64_t)v4 + *(int *)(v2 + 20);
    swift_retain();
    static ButtonRole.cancel.getter();
    uint64_t v8 = type metadata accessor for ButtonRole();
    __swift_storeEnumTagSinglePayload(v7, 0, 1, v8);
    *uint64_t v4 = v6;
    uint64_t v9 = self;
    id v10 = objc_msgSend(v9, sel_conversationKit);
    v23._id object = (void *)0xE000000000000000;
    OUTLINED_FUNCTION_4_6();
    v11._countAndFlagsBits = 0;
    v11._id object = (void *)0xE000000000000000;
    v23._countAndFlagsBits = 0;
    Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v10, v11, v23);

    id v15 = objc_msgSend(v9, sel_conversationKit);
    v24._id object = (void *)0xE000000000000000;
    OUTLINED_FUNCTION_4_6();
    v16._countAndFlagsBits = 0;
    v16._id object = (void *)0xE000000000000000;
    v24._countAndFlagsBits = 0;
    Swift::String v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v15, v16, v24);

    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for CallControlsTextButtonConfiguration(0);
    swift_allocObject();
    uint64_t v5 = CallControlsTextButtonConfiguration.init(buttonStyle:text:accessibilityLabel:accessibilityIdentifier:enabled:didTap:)((uint64_t)v4, v14._countAndFlagsBits, (uint64_t)v14._object, v19._countAndFlagsBits, (uint64_t)v19._object, 0x75426C65636E6163, 0xEC0000006E6F7474, 1, (uint64_t)partial apply for closure #1 in LeaveButtonViewModel.config.getter, v20);
    *(void *)(v1 + 72) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t sub_1C368FA98()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t CancelButtonViewModel.enabled(for:)(uint64_t a1, uint64_t a2, char a3)
{
  BOOL v4 = (a1 & 0xE100000000) == 0x4100000000 && a2 == 2;
  uint64_t v5 = v4;
  if (v4)
  {
    *(unsigned char *)(v3 + 64) = a3 & 1;
    CancelButtonViewModel.isAppFrontMost.didset();
  }
  return v5;
}

Swift::Void __swiftcall CancelButtonViewModel.didTap()()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 152))(v1, v2);
}

void CancelButtonViewModel.isAppFrontMost.didset()
{
  if ((*(unsigned char *)(v0 + 64) & 1) == 0) {
    LetMeInCountdownViewModel.skipCountdown()();
  }
}

uint64_t CancelButtonViewModel.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  return v0;
}

uint64_t CancelButtonViewModel.__deallocating_deinit()
{
  CancelButtonViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance CancelButtonViewModel(uint64_t a1, uint64_t a2, char a3)
{
  return CancelButtonViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL, a2, a3) & 1;
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance CancelButtonViewModel()
{
  return CancelButtonViewModel.controlType.getter();
}

uint64_t sub_1C368FC54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CancelButtonViewModel.config.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for CancelButtonViewModel()
{
  return self;
}

uint64_t method lookup function for CancelButtonViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CancelButtonViewModel);
}

uint64_t dispatch thunk of CancelButtonViewModel.__allocating_init(service:letMeInViewModel:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

double CGRect.rounded(originRule:sizeRule:toScale:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  double v13 = CGFloat.rounded(_:toScale:)(a1, a3, a4);
  CGFloat.rounded(_:toScale:)(a1, a3, a5);
  CGFloat.rounded(_:toScale:)(a2, a3, a6);
  CGFloat.rounded(_:toScale:)(a2, a3, a7);
  return v13;
}

double CGRect.rounded(originRule:sizeRule:toScaleOf:)()
{
  OUTLINED_FUNCTION_7();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  objc_msgSend(v8, sel_displayScale);
  double v10 = v9;
  double v11 = CGFloat.rounded(_:toScale:)(v7, v9, v3);
  CGFloat.rounded(_:toScale:)(v7, v10, v2);
  CGFloat.rounded(_:toScale:)(v5, v10, v1);
  CGFloat.rounded(_:toScale:)(v5, v10, v0);
  return v11;
}

{
  double v0;
  double v1;
  double v2;
  double v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t vars8;

  OUTLINED_FUNCTION_7();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  double v9 = v8;
  swift_getObjectType();
  return specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(v9, v7, v5, v3, v2, v1, v0);
}

double specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(uint64_t a1, uint64_t a2, id a3, double a4, double a5, double a6, double a7)
{
  id v13 = objc_msgSend(a3, sel_traitCollection);
  objc_msgSend(v13, sel_displayScale);
  double v15 = v14;
  double v16 = CGFloat.rounded(_:toScale:)(a1, v14, a4);
  CGFloat.rounded(_:toScale:)(a1, v15, a5);
  CGFloat.rounded(_:toScale:)(a2, v15, a6);
  CGFloat.rounded(_:toScale:)(a2, v15, a7);

  return v16;
}

uint64_t ScreenShareButtonViewModel.__allocating_init(service:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  ScreenShareButtonViewModel.init(service:)(a1);
  return v2;
}

uint64_t specialized IconButtonConfig.enabled.setter()
{
  return specialized IconButtonConfig.enabled.setter();
}

{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_7_106(KeyPath, v1, v2, v3, v4, v5, v6, v7, v9);
  return swift_release();
}

uint64_t specialized IconButtonConfig.accessibilityLabel.setter()
{
  return specialized IconButtonConfig.accessibilityLabel.setter();
}

{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_7_106(KeyPath, v1, v2, v3, v4, v5, v6, v7, v9);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t specialized IconButtonConfig.withMutation<A, B>(keyPath:_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void *ScreenShareButtonViewModel.init(service:)(long long *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  v1[8] = 0;
  v1[9] = 0;
  v1[7] = v2;
  outlined init with take of Notice(a1, (uint64_t)(v1 + 2));
  return v1;
}

uint64_t (*ScreenShareButtonViewModel.controlType.getter())()
{
  return partial apply for closure #1 in ScreenShareButtonViewModel.controlType.getter;
}

uint64_t closure #1 in ScreenShareButtonViewModel.controlType.getter()
{
  return AnyView.init<A>(_:)();
}

uint64_t partial apply for closure #1 in ScreenShareButtonViewModel.controlType.getter()
{
  return closure #1 in ScreenShareButtonViewModel.controlType.getter();
}

void *ScreenShareButtonViewModel.shareButtonConfig.getter()
{
  if (v0[8])
  {
    double v1 = (void *)v0[8];
  }
  else
  {
    uint64_t v2 = v0;
    ScreenShareButtonViewModel.iconButtonConfig.getter();
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_19_7();
    type metadata accessor for ShareScreenButtonConfig();
    swift_allocObject();
    double v1 = ShareScreenButtonConfig.init(buttonConfig:menuItems:didTapAskToScreenShare:)();
    v2[8] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

BOOL ScreenShareButtonViewModel.enabled(for:)(unint64_t a1)
{
  uint64_t v1 = (a1 >> 37) & 7;
  unsigned int v2 = v1 - 2;
  if (v1) {
    BOOL v3 = (a1 & 0x100000000) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v2 < 4) {
    BOOL v3 = 0;
  }
  return a1 != 3 && v3;
}

Swift::Void __swiftcall ScreenShareButtonViewModel.onAppear()()
{
  swift_beginAccess();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  ScreenShareButtonViewModel.observeShareMenuState()();
  ScreenShareButtonViewModel.observeParticipantState()();
}

Swift::Void __swiftcall ScreenShareButtonViewModel.observeShareMenuState()()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<ShareMenuActionState, Never>, NSRunLoop>);
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x1F4188790](v1);
  uint64_t v2 = *(void *)(v0 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v2);
  uint64_t v3 = OUTLINED_FUNCTION_7_3();
  v4(v3);
  id v9 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = OUTLINED_FUNCTION_3_17();
  OUTLINED_FUNCTION_6_72(v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<ShareMenuActionState, Never>);
  type metadata accessor for NSRunLoop();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<ShareMenuActionState, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<ShareMenuActionState, Never>);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  OUTLINED_FUNCTION_2_78();
  outlined destroy of NSRunLoop.SchedulerOptions?(v2);

  swift_release();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_19_7();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<ShareMenuActionState, Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<ShareMenuActionState, Never>, NSRunLoop>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v7 = OUTLINED_FUNCTION_5_15();
  v8(v7);
  OUTLINED_FUNCTION_4_20();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
}

Swift::Void __swiftcall ScreenShareButtonViewModel.observeParticipantState()()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<(), Never>, NSRunLoop>);
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x1F4188790](v1);
  uint64_t v2 = *(void *)(v0 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v2);
  uint64_t v3 = OUTLINED_FUNCTION_7_3();
  v4(v3);
  id v11 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = OUTLINED_FUNCTION_3_17();
  OUTLINED_FUNCTION_6_72(v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<(), Never>);
  type metadata accessor for NSRunLoop();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<(), Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<(), Never>);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  OUTLINED_FUNCTION_2_78();
  outlined destroy of NSRunLoop.SchedulerOptions?(v2);

  swift_release();
  uint64_t v7 = OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_19_7();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = partial apply for closure #1 in ScreenShareButtonViewModel.observeParticipantState();
  *(void *)(v8 + 24) = v7;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<(), Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<(), Never>, NSRunLoop>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v9 = OUTLINED_FUNCTION_5_15();
  v10(v9);
  OUTLINED_FUNCTION_4_20();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>((unint64_t *)&lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
}

Swift::Void __swiftcall ScreenShareButtonViewModel.didTapScreenShare()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.conversationKit);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1C2F90000, v3, v4, "didTapScreenShare", v5, 2u);
    MEMORY[0x1C87760E0](v5, -1, -1);
  }

  uint64_t v6 = v1 + 2;
  uint64_t v8 = v1[5];
  uint64_t v7 = v1[6];
  __swift_project_boxed_opaque_existential_1(v6, v8);
  (*(void (**)(void, uint64_t, uint64_t))(v7 + 40))(0, v8, v7);
}

uint64_t ScreenShareButtonViewModel.didTapAskToScreenShare(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = type metadata accessor for Participant(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.conversationKit);
  outlined init with copy of Participant(a1, (uint64_t)v6);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    double v10 = (uint8_t *)swift_slowAlloc();
    id v11 = (void *)swift_slowAlloc();
    *(_DWORD *)double v10 = 138412290;
    Swift::String v12 = *(void **)&v6[*(int *)(v4 + 28)];
    if (v12)
    {
      v18[1] = v10 + 12;
      Swift::String v19 = v12;
      id v13 = v12;
    }
    else
    {
      Swift::String v19 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v11 = v12;
    outlined destroy of Participant((uint64_t)v6);
    _os_log_impl(&dword_1C2F90000, v8, v9, "Requesting participant with handle: %@ to screen share", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C87760E0](v11, -1, -1);
    MEMORY[0x1C87760E0](v10, -1, -1);
  }
  else
  {
    outlined destroy of Participant((uint64_t)v6);
  }

  double v14 = v2 + 2;
  uint64_t v16 = v2[5];
  uint64_t v15 = v2[6];
  __swift_project_boxed_opaque_existential_1(v14, v16);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a1, v16, v15);
}

uint64_t closure #1 in ScreenShareButtonViewModel.observeShareMenuState()(unsigned __int8 *a1)
{
  __int16 v1 = *a1;
  int v2 = a1[1];
  uint64_t v3 = *((void *)a1 + 1);
  __int16 v4 = a1[16];
  int v5 = a1[17];
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    ScreenShareButtonViewModel.shareButtonConfig.getter();
    swift_release();
    ShareScreenButtonConfig.buttonConfig.getter();
    swift_release();
    if (v2) {
      __int16 v6 = 256;
    }
    else {
      __int16 v6 = 0;
    }
    if (v5) {
      __int16 v7 = 256;
    }
    else {
      __int16 v7 = 0;
    }
    specialized StateHolder.state.setter(v6 | v1, v3, v7 | v4);
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    ScreenShareButtonViewModel.shareButtonConfig.getter();
    swift_release();
    ShareScreenButtonConfig.buttonConfig.getter();
    swift_release();
    specialized IconButtonConfig.enabled.setter();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    ScreenShareButtonViewModel.updateLabels()();
    return swift_release();
  }
  return result;
}

uint64_t ScreenShareButtonViewModel.updateLabels()()
{
  ScreenShareButtonViewModel.shareButtonConfig.getter();
  ShareScreenButtonConfig.buttonConfig.getter();
  swift_release();
  __int16 v0 = specialized StateHolder.state.getter();
  swift_release();
  ScreenShareButtonViewModel.shareButtonConfig.getter();
  ShareScreenButtonConfig.buttonConfig.getter();
  swift_release();
  id v1 = objc_msgSend(self, sel_conversationKit);
  if ((v0 & 0x100) != 0)
  {
    unint64_t v8 = 0xE000000000000000;
    unint64_t v3 = 0x80000001C37BD6D0;
    unint64_t v2 = 0xD00000000000001BLL;
  }
  else
  {
    unint64_t v2 = 0xD00000000000001CLL;
    unint64_t v8 = 0xE000000000000000;
    unint64_t v3 = 0x80000001C37BD610;
  }
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._id object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._id object = (void *)0xE000000000000000;
  uint64_t v6 = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, v4, (NSBundle)v1, v5, *(Swift::String *)(&v8 - 1));

  specialized IconButtonConfig.accessibilityLabel.setter();
  return swift_release();
}

uint64_t closure #1 in ScreenShareButtonViewModel.observeParticipantState()()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    ScreenShareButtonViewModel.updateMenuItems()();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    ScreenShareButtonViewModel.updateLabels()();
    return swift_release();
  }
  return result;
}

uint64_t ScreenShareButtonViewModel.updateMenuItems()()
{
  ScreenShareButtonViewModel.shareButtonConfig.getter();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
  ShareScreenButtonConfig.menuItems.setter(v3);
  return swift_release();
}

double ScreenShareButtonViewModel.buttonStyle()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  uint64_t v15 = *(void *)(v2 - 8);
  uint64_t v16 = v2;
  MEMORY[0x1F4188790](v2);
  double v14 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0xE000000000000000;
  Swift::String v5 = (void *)swift_allocObject();
  v5[2] = _s15ConversationKit12SystemSymbolVAASbRszlE19catalystCallControl4name5color15backgroundColorACySbGSS_7SwiftUI0K0VSbcAKSbctFZSSSbcfU_TA_0;
  v5[3] = v4;
  v5[4] = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
  v5[5] = 0;
  void v5[6] = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
  v5[7] = 0;
  v5[8] = closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  v5[9] = 0;
  v5[10] = partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  v5[11] = 0;
  v5[12] = partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  v5[13] = 0;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = _s15ConversationKit12SystemSymbolVAASbRszlE19catalystCallControl4name5color15backgroundColorACySbGSS_7SwiftUI0K0VSbcAKSbctFZSSSbcfU_TA_0;
  void v6[3] = v4;
  v6[4] = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
  v6[5] = 0;
  void v6[6] = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
  v6[7] = 0;
  v6[8] = closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  v6[9] = 0;
  v6[10] = partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  v6[11] = 0;
  v6[12] = partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  v6[13] = 0;
  swift_retain_n();
  uint64_t v7 = static Color.white.getter();
  static Font.subheadline.getter();
  os_log_type_t v9 = v14;
  uint64_t v8 = v15;
  uint64_t v10 = v16;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v14, *MEMORY[0x1E4F3E0F8], v16);
  uint64_t v11 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v9, v10);
  swift_release();
  double result = 6.0;
  *(_OWORD *)a1 = xmmword_1C376AA10;
  *(void *)(a1 + 16) = 0x401C000000000000;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = closure #1 in ScreenShareButtonViewModel.buttonStyle();
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = partial apply for closure #2 in ScreenShareButtonViewModel.buttonStyle();
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = partial apply for closure #3 in ScreenShareButtonViewModel.buttonStyle();
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 88) = specialized closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = specialized closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = specialized closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  *(void *)(a1 + 128) = 0;
  return result;
}

unint64_t closure #1 in ScreenShareButtonViewModel.buttonStyle()(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1) & 1 | ((*(unsigned char *)(a1 + 17) & 1) == 0)) {
    unint64_t v1 = 0xD000000000000028;
  }
  else {
    unint64_t v1 = 0x616C706572616873;
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t closure #2 in ScreenShareButtonViewModel.buttonStyle()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(char *))(a2 + 16);
  char v4 = (*(unsigned char *)(a1 + 1) | *(unsigned char *)(a1 + 17)) & 1;
  return v2(&v4);
}

uint64_t closure #3 in ScreenShareButtonViewModel.buttonStyle()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(char *))(a2 + 32);
  char v4 = (*(unsigned char *)(a1 + 1) | *(unsigned char *)(a1 + 17)) & 1;
  return v2(&v4);
}

uint64_t key path setter for ScreenShareButtonViewModel.shareButtonConfig : ScreenShareButtonViewModel()
{
  uint64_t v0 = swift_retain();
  return ScreenShareButtonViewModel.shareButtonConfig.setter(v0);
}

uint64_t ScreenShareButtonViewModel.shareButtonConfig.setter(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  return OUTLINED_FUNCTION_3_137();
}

uint64_t ScreenShareButtonViewModel.iconButtonConfig.getter()
{
  if (v0[9])
  {
    uint64_t v1 = v0[9];
  }
  else
  {
    uint64_t v2 = v0;
    ScreenShareButtonViewModel.buttonStyle()((uint64_t)v24);
    uint64_t v3 = self;
    id v4 = objc_msgSend(v3, sel_conversationKit);
    v25._id object = (void *)0xE000000000000000;
    v5._countAndFlagsBits = OUTLINED_FUNCTION_1_145();
    v6._countAndFlagsBits = 0;
    v6._id object = (void *)0xE000000000000000;
    v25._countAndFlagsBits = 0;
    Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v7, (NSBundle)v4, v6, v25);

    v9.super.Class isa = (Class)objc_msgSend(v3, sel_conversationKit);
    v26._id object = (void *)0xE000000000000000;
    v10._countAndFlagsBits = OUTLINED_FUNCTION_1_145();
    v11._countAndFlagsBits = 0;
    v11._id object = (void *)0xE000000000000000;
    v26._countAndFlagsBits = 0;
    Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v12, v9, v11, v26);

    uint64_t v14 = v2[5];
    uint64_t v15 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v14);
    LOWORD(v15) = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    uint64_t v17 = v16;
    __int16 v19 = v18;
    uint64_t v20 = v2[5];
    uint64_t v21 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v20);
    LOBYTE(v9.super.isa) = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
    uint64_t v22 = OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_19_7();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<ShareMenuActionState>);
    swift_allocObject();
    uint64_t v1 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)(v24, v8._countAndFlagsBits, (uint64_t)v8._object, 0, v13._countAndFlagsBits, (uint64_t)v13._object, 0xD000000000000016, 0x80000001C3797210, v15 & 1, (unsigned __int16)(v15 & 0x101) >> 8, v17, v19 & 1, (unsigned __int16)(v19 & 0x101) >> 8, (uint64_t)v9.super.isa & 1, (uint64_t)partial apply for closure #1 in ScreenShareButtonViewModel.iconButtonConfig.getter, v22);
    v2[9] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C3691694()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in ScreenShareButtonViewModel.shareButtonConfig.getter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    ScreenShareButtonViewModel.didTapAskToScreenShare(_:)(a1);
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in ScreenShareButtonViewModel.shareButtonConfig.getter(uint64_t a1)
{
  return closure #1 in ScreenShareButtonViewModel.shareButtonConfig.getter(a1);
}

uint64_t key path setter for ScreenShareButtonViewModel.iconButtonConfig : ScreenShareButtonViewModel()
{
  uint64_t v0 = swift_retain();
  return ScreenShareButtonViewModel.iconButtonConfig.setter(v0);
}

uint64_t ScreenShareButtonViewModel.iconButtonConfig.setter(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return OUTLINED_FUNCTION_3_137();
}

uint64_t closure #1 in ScreenShareButtonViewModel.iconButtonConfig.getter()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    ScreenShareButtonViewModel.didTapScreenShare()();
    return swift_release();
  }
  return result;
}

uint64_t ScreenShareButtonViewModel.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ScreenShareButtonViewModel.__deallocating_deinit()
{
  ScreenShareButtonViewModel.deinit();
  return swift_deallocClassInstance();
}

BOOL protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance ScreenShareButtonViewModel(uint64_t a1)
{
  return ScreenShareButtonViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL);
}

uint64_t (*protocol witness for CallControlsButtonViewModel.controlType.getter in conformance ScreenShareButtonViewModel())()
{
  return partial apply for closure #1 in ScreenShareButtonViewModel.controlType.getter;
}

void protocol witness for CallControlsButtonViewModel.onAppear() in conformance ScreenShareButtonViewModel()
{
}

uint64_t partial apply for closure #1 in ScreenShareButtonViewModel.observeShareMenuState()(unsigned __int8 *a1)
{
  return closure #1 in ScreenShareButtonViewModel.observeShareMenuState()(a1);
}

uint64_t partial apply for closure #1 in ScreenShareButtonViewModel.observeParticipantState()()
{
  return closure #1 in ScreenShareButtonViewModel.observeParticipantState()();
}

uint64_t sub_1C36918C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenShareButtonViewModel.iconButtonConfig.getter()
{
  return closure #1 in ScreenShareButtonViewModel.iconButtonConfig.getter();
}

void *sub_1C3691904@<X0>(void *a1@<X8>)
{
  uint64_t result = ScreenShareButtonViewModel.shareButtonConfig.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C3691934@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ScreenShareButtonViewModel.iconButtonConfig.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for ScreenShareButtonViewModel()
{
  return self;
}

uint64_t method lookup function for ScreenShareButtonViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScreenShareButtonViewModel);
}

uint64_t dispatch thunk of ScreenShareButtonViewModel.__allocating_init(service:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C36919B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ScreenShareButtonViewModel.buttonStyle()(uint64_t a1)
{
  return closure #2 in ScreenShareButtonViewModel.buttonStyle()(a1, v1 + 16);
}

uint64_t objectdestroy_15Tm_2()
{
  swift_release();
  swift_release();
  swift_release();
  if (v0[8]) {
    swift_release();
  }
  if (v0[10]) {
    swift_release();
  }
  if (v0[12]) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in ScreenShareButtonViewModel.buttonStyle()(uint64_t a1)
{
  return closure #3 in ScreenShareButtonViewModel.buttonStyle()(a1, v1 + 16);
}

uint64_t specialized closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)(a1);
}

uint64_t specialized closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)(unsigned __int8 *a1)
{
  uint64_t v1 = *((void *)a1 + 1);
  unsigned int v2 = a1[16];
  int v3 = a1[17];
  if (a1[1]) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  uint64_t v5 = v4 | *a1;
  if (v3) {
    int v6 = 256;
  }
  else {
    int v6 = 0;
  }
  return partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)(v5, v1, v6 | v2);
}

uint64_t specialized closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)(unsigned __int8 *a1)
{
  uint64_t v1 = *((void *)a1 + 1);
  unsigned int v2 = a1[16];
  int v3 = a1[17];
  if (a1[1]) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  uint64_t v5 = v4 | *a1;
  if (v3) {
    int v6 = 256;
  }
  else {
    int v6 = 0;
  }
  return partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)(v5, v1, v6 | v2);
}

void *sub_1C3691B3C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t lazy protocol witness table accessor for type ShareScreenButton and conformance ShareScreenButton()
{
  unint64_t result = lazy protocol witness table cache variable for type ShareScreenButton and conformance ShareScreenButton;
  if (!lazy protocol witness table cache variable for type ShareScreenButton and conformance ShareScreenButton)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareScreenButton and conformance ShareScreenButton);
  }
  return result;
}

uint64_t partial apply for specialized closure #1 in IconButtonConfig.enabled.setter()
{
  return partial apply for closure #1 in IconButtonConfig.enabled.setter();
}

uint64_t partial apply for specialized closure #1 in IconButtonConfig.accessibilityLabel.setter()
{
  return partial apply for closure #1 in IconButtonConfig.accessibilityLabel.setter();
}

uint64_t ShutterButtonStyle.init(shutterModel:)()
{
  type metadata accessor for ShutterModel();
  lazy protocol witness table accessor for type ShutterModel and conformance ShutterModel(&lazy protocol witness table cache variable for type ShutterModel and conformance ShutterModel, (void (*)(uint64_t))type metadata accessor for ShutterModel);
  uint64_t v0 = ObservedObject.init(wrappedValue:)();
  State.init(wrappedValue:)();
  return v0;
}

BOOL static ShutterButtonStyle.InnerStyle.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void ShutterButtonStyle.InnerStyle.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int ShutterButtonStyle.InnerStyle.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ShutterButtonStyle.InnerStyle(char *a1, char *a2)
{
  return static ShutterButtonStyle.InnerStyle.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ShutterButtonStyle.InnerStyle()
{
  return ShutterButtonStyle.InnerStyle.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ShutterButtonStyle.InnerStyle(uint64_t a1)
{
  ShutterButtonStyle.InnerStyle.hash(into:)(a1, *v1);
}

uint64_t ShutterButtonStyle.shutterModel.getter()
{
  return swift_retain();
}

uint64_t key path getter for ShutterButtonStyle.shutterModel : ShutterButtonStyle@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = ShutterButtonStyle.shutterModel.getter();
  *a2 = v3;
  return result;
}

uint64_t key path setter for ShutterButtonStyle.shutterModel : ShutterButtonStyle()
{
  uint64_t v0 = swift_retain();
  return ShutterButtonStyle.shutterModel.setter(v0);
}

uint64_t ShutterButtonStyle.shutterModel.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*ShutterButtonStyle.shutterModel.modify())(void)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShutterButtonStyle.$shutterModel.getter()
{
  type metadata accessor for ShutterModel();
  lazy protocol witness table accessor for type ShutterModel and conformance ShutterModel(&lazy protocol witness table cache variable for type ShutterModel and conformance ShutterModel, (void (*)(uint64_t))type metadata accessor for ShutterModel);
  return ObservedObject.projectedValue.getter();
}

uint64_t ShutterButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v47 = type metadata accessor for AccessibilityChildBehavior();
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_21();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier>);
  MEMORY[0x1F4188790](v17 - 8);
  OUTLINED_FUNCTION_21();
  uint64_t v50 = v19 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.accessibilityElement(children:)>>.0);
  OUTLINED_FUNCTION_4();
  uint64_t v48 = v21;
  uint64_t v49 = v20;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_21();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout>);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_21();
  uint64_t v29 = v28 - v27;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>);
  MEMORY[0x1F4188790](v30 - 8);
  OUTLINED_FUNCTION_21();
  uint64_t v33 = (uint64_t *)(v32 - v31);
  *uint64_t v33 = static Alignment.center.getter();
  v33[1] = v34;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>);
  closure #1 in ShutterButtonStyle.makeBody(configuration:)(a2, a3, a4, a1, (uint64_t *)((char *)v33 + *(int *)(v35 + 44)), a6);
  OUTLINED_FUNCTION_3_138();
  OUTLINED_FUNCTION_3_138();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of Environment<DynamicTypeSize>.Content((uint64_t)v33, v29, &demangling cache variable for type metadata for ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>);
  uint64_t v36 = (_OWORD *)(v29 + *(int *)(v25 + 36));
  *uint64_t v36 = v52;
  v36[1] = v53;
  v36[2] = v54;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v33, &demangling cache variable for type metadata for ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>);
  static AccessibilityChildBehavior.ignore.getter();
  lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
  View.accessibilityElement(children:)();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v47);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout>);
  uint64_t v37 = *(uint64_t (**)(uint64_t))(*(void *)a3 + 224);
  uint64_t v38 = swift_retain();
  LOBYTE(v37) = v37(v38);
  swift_release();
  id v39 = objc_msgSend(self, sel_conversationKit);
  if (v37)
  {
    unint64_t v40 = 0xD00000000000001DLL;
    unint64_t v46 = 0xE000000000000000;
    unint64_t v41 = 0x80000001C37BD710;
  }
  else
  {
    unint64_t v46 = 0xE000000000000000;
    unint64_t v41 = 0x80000001C37BD6F0;
    unint64_t v40 = 0xD00000000000001CLL;
  }
  v42.value._countAndFlagsBits = 0x61737265766E6F43;
  v42.value._id object = (void *)0xEF74694B6E6F6974;
  v43._countAndFlagsBits = 0;
  v43._id object = (void *)0xE000000000000000;
  uint64_t v44 = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v40, v42, (NSBundle)v39, v43, *(Swift::String *)(&v46 - 1));

  swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type String and conformance String();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v24, v49);
  return outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v50, a5, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier>);
}

uint64_t closure #1 in ShutterButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>)
{
  uint64_t v129 = a4;
  uint64_t v140 = a5;
  uint64_t v128 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1F4188790](v128);
  BOOL v134 = (double *)((char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<Rectangle, TintShapeStyle>);
  MEMORY[0x1F4188790](v118);
  id v124 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>);
  MEMORY[0x1F4188790](v121);
  uint64_t v127 = (uint64_t)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
  MEMORY[0x1F4188790](v125);
  char v130 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>);
  MEMORY[0x1F4188790](v126);
  uint64_t v132 = (uint64_t)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>);
  MEMORY[0x1F4188790](v131);
  uint64_t v136 = (uint64_t)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>);
  MEMORY[0x1F4188790](v133);
  uint64_t v147 = (uint64_t)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v146 = (uint64_t)&v107 - v18;
  uint64_t v19 = type metadata accessor for TintShapeStyle();
  uint64_t v143 = *(void *)(v19 - 8);
  uint64_t v144 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StrokeShapeView<_TrimmedShape<Path>, TintShapeStyle, EmptyView>);
  MEMORY[0x1F4188790](v117);
  uint64_t v23 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = (uint64_t *)a1;
  uint64_t v149 = a1;
  uint64_t v150 = a2;
  double v151 = a6;
  uint64_t v152 = a3;
  Path.init(_:)();
  uint64_t v141 = v154;
  uint64_t v142 = v153;
  uint64_t v137 = v155;
  uint64_t v139 = v156;
  int v138 = v157;
  uint64_t v24 = (void (**)(uint64_t))(*(void *)a2 + 368);
  uint64_t v25 = *v24;
  uint64_t v26 = swift_retain();
  uint64_t v116 = v24;
  v25(v26);
  swift_release();
  uint64_t v27 = 1;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v28 = v158;
  uint64_t v29 = v159;
  uint64_t v30 = v160;
  uint64_t v135 = v161;
  uint64_t v31 = v162;
  uint64_t v32 = static Alignment.center.getter();
  uint64_t v122 = v33;
  uint64_t v123 = v32;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?);
  MEMORY[0x1F4188790](v34 - 8);
  unint64_t v119 = (v35 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v120 = v35;
  uint64_t v148 = (uint64_t)&v107 - v119;
  uint64_t v36 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 512);
  uint64_t v37 = swift_retain();
  uint64_t v38 = a3;
  LOBYTE(a1) = v36(v37);
  swift_release();
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  uint64_t v40 = v39;
  if (a1)
  {
    uint64_t v114 = &v107;
    uint64_t v113 = *(void *)(v39 - 8);
    MEMORY[0x1F4188790](v39);
    uint64_t v112 = (char *)&v107 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x1F4188790](v42);
    *(&v107 - 4) = (uint64_t)v145;
    *(&v107 - 3) = a2;
    *((double *)&v107 - 2) = a6;
    *(&v107 - 1) = v38;
    Path.init(_:)();
    long long v111 = v163;
    uint64_t v43 = v164;
    uint64_t v110 = v165;
    int v109 = v166;
    *(double *)&long long v172 = a6;
    *((void *)&v172 + 1) = v38;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
    State.wrappedValue.getter();
    uint64_t v108 = v167;
    TintShapeStyle.init()();
    uint64_t v44 = swift_retain();
    v25(v44);
    uint64_t v116 = v28;
    swift_release();
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    uint64_t v45 = v167;
    uint64_t v46 = v169;
    uint64_t v47 = v170;
    uint64_t v48 = v171;
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<_StrokedShape<_TrimmedShape<Path>>, TintShapeStyle>);
    uint64_t v50 = &v23[*(int *)(v49 + 52)];
    uint64_t v115 = v40;
    uint64_t v51 = v143;
    uint64_t v52 = v144;
    uint64_t v53 = v31;
    uint64_t v54 = v30;
    uint64_t v55 = v168;
    (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v50, v21, v144);
    *(_OWORD *)uint64_t v23 = v111;
    uint64_t v56 = v110;
    *((void *)v23 + 2) = v43;
    *((void *)v23 + 3) = v56;
    v23[32] = v109;
    *((void *)v23 + 5) = 0;
    *((void *)v23 + 6) = v108;
    *((void *)v23 + 7) = v45;
    *((void *)v23 + 8) = v55;
    *((void *)v23 + 9) = v46;
    uint64_t v30 = v54;
    uint64_t v31 = v53;
    *((void *)v23 + 10) = v47;
    *((void *)v23 + 11) = v48;
    *(_WORD *)&v23[*(int *)(v49 + 56)] = 256;
    outlined init with take of Path.Storage((uint64_t)&v163, (uint64_t)v175);
    outlined retain of Path.Storage((uint64_t)v175, (void (*)(void, void, void, void, void))outlined copy of Path.Storage);
    uint64_t v57 = static Alignment.center.getter();
    uint64_t v59 = v58;
    uint64_t v60 = (uint64_t *)&v23[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<_StrokedShape<_TrimmedShape<Path>>, TintShapeStyle>, _BackgroundModifier<EmptyView>>)
                                 + 36)];
    uint64_t *v60 = v57;
    v60[1] = v59;
    uint64_t v61 = v51;
    uint64_t v40 = v115;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v21, v52);
    outlined retain of Path.Storage((uint64_t)&v163, (void (*)(void, void, void, void, void))outlined consume of Path.Storage);
    char v62 = *(double (**)(uint64_t))(*(void *)a2 + 176);
    uint64_t v63 = swift_retain();
    double v64 = v62(v63);
    swift_release();
    *(double *)&long long v172 = v64;
    uint64_t v28 = v116;
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = v145;
    *(void *)(v65 + 24) = a2;
    *(double *)(v65 + 32) = a6;
    *(void *)(v65 + 40) = v38;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type StrokeShapeView<_TrimmedShape<Path>, TintShapeStyle, EmptyView> and conformance StrokeShapeView<A, B, C>, &demangling cache variable for type metadata for StrokeShapeView<_TrimmedShape<Path>, TintShapeStyle, EmptyView>);
    lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
    swift_retain();
    swift_retain();
    uint64_t v66 = v112;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v23, &demangling cache variable for type metadata for StrokeShapeView<_TrimmedShape<Path>, TintShapeStyle, EmptyView>);
    (*(void (**)(uint64_t, char *, uint64_t))(v113 + 32))(v148, v66, v40);
    uint64_t v27 = 0;
  }
  __swift_storeEnumTagSinglePayload(v148, v27, 1, v40);
  TintShapeStyle.init()();
  uint64_t v68 = v143;
  uint64_t v67 = v144;
  uint64_t v69 = (uint64_t)v124;
  (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v124, v21, v144);
  *(_WORD *)(v69 + *(int *)(v118 + 56)) = 256;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v21, v67);
  uint64_t v70 = v129;
  uint64_t v71 = (uint64_t)v145;
  ShutterButtonStyle.rectangleSize(from:)(v129, (uint64_t)v145, a2);
  ShutterButtonStyle.rectangleSize(from:)(v70, v71, a2);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v72 = v127;
  outlined init with copy of Environment<DynamicTypeSize>.Content(v69, v127, &demangling cache variable for type metadata for _ShapeView<Rectangle, TintShapeStyle>);
  uint64_t v73 = (_OWORD *)(v72 + *(int *)(v121 + 36));
  long long v74 = v173;
  *uint64_t v73 = v172;
  v73[1] = v74;
  v73[2] = v174;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v69, &demangling cache variable for type metadata for _ShapeView<Rectangle, TintShapeStyle>);
  double v75 = ShutterButtonStyle.cornerRadius(from:)(v70, v71, a2);
  unint64_t v76 = v134;
  uint64_t v77 = (char *)v134 + *(int *)(v128 + 20);
  uint64_t v78 = *MEMORY[0x1E4F3D4A0];
  uint64_t v79 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v79 - 8) + 104))(v77, v78, v79);
  *unint64_t v76 = v75;
  v76[1] = v75;
  uint64_t v80 = (uint64_t)v130;
  uint64_t v81 = (uint64_t)&v130[*(int *)(v125 + 36)];
  outlined init with copy of RoundedRectangle((uint64_t)v76, v81);
  *(_WORD *)(v81
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>)
                    + 36)) = 256;
  outlined init with copy of Environment<DynamicTypeSize>.Content(v72, v80, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>);
  outlined destroy of RoundedRectangle((uint64_t)v76);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v72, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>);
  uint64_t v82 = static Animation.spring(response:dampingFraction:blendDuration:)();
  LOBYTE(v81) = ButtonStyleConfiguration.isPressed.getter();
  uint64_t v83 = v132;
  outlined init with copy of Environment<DynamicTypeSize>.Content(v80, v132, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
  uint64_t v84 = v83 + *(int *)(v126 + 36);
  *(void *)uint64_t v84 = v82;
  *(unsigned char *)(v84 + 8) = v81 & 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v80, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
  uint64_t v85 = static Animation.easeInOut(duration:)();
  uint64_t v86 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 272);
  uint64_t v87 = swift_retain();
  LOBYTE(v81) = v86(v87);
  swift_release();
  uint64_t v88 = v136;
  outlined init with copy of Environment<DynamicTypeSize>.Content(v83, v136, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>);
  uint64_t v89 = v88 + *(int *)(v131 + 36);
  *(void *)uint64_t v89 = v85;
  *(unsigned char *)(v89 + 8) = v81;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v83, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>);
  uint64_t v90 = static Animation.easeInOut(duration:)();
  uint64_t v91 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 224);
  uint64_t v92 = swift_retain();
  LOBYTE(v81) = v91(v92);
  swift_release();
  uint64_t v93 = v147;
  outlined init with copy of Environment<DynamicTypeSize>.Content(v88, v147, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>);
  uint64_t v94 = v93 + *(int *)(v133 + 36);
  *(void *)uint64_t v94 = v90;
  *(unsigned char *)(v94 + 8) = v81 & 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v88, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>);
  uint64_t v95 = v146;
  uint64_t v96 = outlined init with take of ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>(v93, v146, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>);
  uint64_t v145 = &v107;
  MEMORY[0x1F4188790](v96);
  uint64_t v97 = (char *)&v107 - v119;
  uint64_t v144 = (uint64_t)&v107 - v119;
  outlined init with copy of Environment<DynamicTypeSize>.Content(v148, (uint64_t)&v107 - v119, &demangling cache variable for type metadata for (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?);
  outlined init with copy of Environment<DynamicTypeSize>.Content(v95, v93, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>);
  uint64_t v98 = v141;
  uint64_t v99 = v142;
  uint64_t v100 = v139;
  Class v101 = v140;
  *uint64_t v140 = v142;
  v101[1] = v98;
  uint64_t v102 = v137;
  v101[2] = v137;
  v101[3] = v100;
  LOBYTE(v69) = v138;
  *((unsigned char *)v101 + 32) = v138;
  v101[5] = (uint64_t)v28;
  v101[6] = v29;
  v101[7] = v30;
  v101[8] = v135;
  v101[9] = v31;
  *((_WORD *)v101 + 40) = 256;
  uint64_t v103 = v122;
  v101[11] = v123;
  v101[12] = v103;
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>));
  outlined init with copy of Environment<DynamicTypeSize>.Content((uint64_t)v97, (uint64_t)v101 + *(int *)(v104 + 48), &demangling cache variable for type metadata for (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?);
  uint64_t v105 = v147;
  outlined init with copy of Environment<DynamicTypeSize>.Content(v147, (uint64_t)v101 + *(int *)(v104 + 64), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>);
  outlined copy of Path.Storage(v99, v98, v102, v100, v69);
  swift_bridgeObjectRetain();
  outlined copy of Path.Storage(v99, v98, v102, v100, v69);
  swift_bridgeObjectRetain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v146, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v148, &demangling cache variable for type metadata for (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?);
  outlined consume of Path.Storage(v99, v98, v102, v100, v69);
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v105, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v144, &demangling cache variable for type metadata for (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?);
  outlined consume of Path.Storage(v99, v98, v102, v100, v69);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in closure #1 in ShutterButtonStyle.makeBody(configuration:)(double *a1, double *a2, uint64_t a3, double *a4)
{
  return swift_release();
}

double ShutterButtonStyle.duration(from:to:)(double a1, double a2, uint64_t a3, double *a4)
{
  double v4 = 0.0;
  if (a1 < a2)
  {
    Swift::String v8 = *(uint64_t (**)(uint64_t))(*(void *)a4 + 224);
    uint64_t v9 = swift_retain();
    LOBYTE(v8) = v8(v9);
    swift_release();
    if ((v8 & 1) == 0) {
      return (a2 - a1) * a4[2];
    }
  }
  return v4;
}

uint64_t closure #1 in closure #1 in closure #1 in ShutterButtonStyle.makeBody(configuration:)()
{
  return State.wrappedValue.setter();
}

double ShutterButtonStyle.rectangleSize(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = *(double (**)(uint64_t))(*(void *)a3 + 416);
  uint64_t v7 = swift_retain();
  double v8 = v6(v7);
  swift_release();
  uint64_t v9 = *(double (**)(uint64_t))(*(void *)a3 + 368);
  uint64_t v10 = swift_retain();
  double v11 = v9(v10);
  swift_release();
  char v12 = ButtonStyleConfiguration.isPressed.getter();
  double v13 = 0.0;
  if (v12) {
    double v13 = 3.0;
  }
  double v14 = v8 + v11 + v13;
  if (ShutterButtonStyle.resolvedMode(from:)(a1, a2, a3) != 1)
  {
    uint64_t v15 = *(double (**)(uint64_t))(*(void *)a3 + 320);
    uint64_t v16 = swift_retain();
    double v17 = v15(v16);
    swift_release();
    double v14 = v14 + v17 * 0.24;
  }
  return ShutterButtonStyle.resolvedSize.getter(a2, a3) - (v14 + v14);
}

double ShutterButtonStyle.cornerRadius(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = ShutterButtonStyle.resolvedMode(from:)(a1, a2, a3);
  double v7 = ShutterButtonStyle.rectangleSize(from:)(a1, a2, a3);
  double v8 = 0.125;
  if (v6 == 1) {
    double v8 = 0.5;
  }
  return v7 * v8;
}

double ShutterButtonStyle.resolvedSize.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(double (**)(uint64_t))(*(void *)a2 + 320);
  uint64_t v4 = swift_retain();
  double v5 = v3(v4);
  swift_release();
  int v6 = *(double (**)(uint64_t))(*(void *)a2 + 368);
  uint64_t v7 = swift_retain();
  double v8 = v6(v7);
  swift_release();
  uint64_t v9 = swift_retain();
  v3(v9);
  swift_release();
  uint64_t v10 = swift_retain();
  v6(v10);
  swift_release();
  return v5 + v8 + v8;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShutterButtonStyle.InnerStyle and conformance ShutterButtonStyle.InnerStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type ShutterButtonStyle.InnerStyle and conformance ShutterButtonStyle.InnerStyle;
  if (!lazy protocol witness table cache variable for type ShutterButtonStyle.InnerStyle and conformance ShutterButtonStyle.InnerStyle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShutterButtonStyle.InnerStyle and conformance ShutterButtonStyle.InnerStyle);
  }
  return result;
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in ShutterButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for ButtonStyle.makeBody(configuration:) in conformance ShutterButtonStyle@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ShutterButtonStyle.makeBody(configuration:)(a1, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 24), a2, *(double *)(v2 + 16));
}

void *initializeWithCopy for ShutterButtonStyle(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ShutterButtonStyle(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for ShutterButtonStyle(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ShutterButtonStyle()
{
  return &type metadata for ShutterButtonStyle;
}

unsigned char *storeEnumTagSinglePayload for ShutterButtonStyle.InnerStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C369389CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShutterButtonStyle.InnerStyle()
{
  return &type metadata for ShutterButtonStyle.InnerStyle;
}

uint64_t lazy protocol witness table accessor for type ShutterModel and conformance ShutterModel(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double ShutterButtonStyle.centerPoint.getter(uint64_t a1, uint64_t a2)
{
  int v3 = *(double (**)(uint64_t))(*(void *)a2 + 320);
  uint64_t v4 = swift_retain();
  double v5 = v3(v4);
  swift_release();
  double v6 = v5 * 0.5;
  uint64_t v7 = *(double (**)(uint64_t))(*(void *)a2 + 368);
  uint64_t v8 = swift_retain();
  double v9 = v7(v8);
  swift_release();
  uint64_t v10 = swift_retain();
  v3(v10);
  swift_release();
  uint64_t v11 = swift_retain();
  v7(v11);
  swift_release();
  return v6 + v9;
}

uint64_t closure #1 in ShutterButtonStyle.circlePath()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ShutterButtonStyle.centerPoint.getter(a2, a3);
  uint64_t v4 = *(void (**)(uint64_t))(*(void *)a3 + 320);
  uint64_t v5 = swift_retain();
  v4(v5);
  swift_release();
  double v6 = *(void (**)(uint64_t))(*(void *)a3 + 368);
  uint64_t v7 = swift_retain();
  v6(v7);
  swift_release();
  return Path.addArc(center:radius:startAngle:endAngle:clockwise:transform:)();
}

uint64_t partial apply for closure #1 in ShutterButtonStyle.circlePath()(uint64_t a1)
{
  return closure #1 in ShutterButtonStyle.circlePath()(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t outlined copy of Path.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_retain();
  }
  return result;
}

uint64_t outlined consume of Path.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_release();
  }
  return result;
}

uint64_t outlined init with take of Path.Storage(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined retain of Path.Storage(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1C3693D44()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ShutterButtonStyle.makeBody(configuration:)(double *a1, double *a2)
{
  return closure #1 in closure #1 in ShutterButtonStyle.makeBody(configuration:)(a1, a2, *(void *)(v2 + 16), *(double **)(v2 + 24));
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ShutterButtonStyle.makeBody(configuration:)()
{
  return closure #1 in closure #1 in closure #1 in ShutterButtonStyle.makeBody(configuration:)();
}

uint64_t ShutterButtonStyle.resolvedMode(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(unsigned __int8 (**)(uint64_t))(*(void *)a3 + 272);
  uint64_t v5 = swift_retain();
  int v6 = v4(v5);
  swift_release();
  if (v6 == 2)
  {
    int v7 = ButtonStyleConfiguration.isPressed.getter();
    uint64_t v8 = *(uint64_t (**)(uint64_t))(*(void *)a3 + 224);
    uint64_t v9 = swift_retain();
    int v10 = v8(v9);
    swift_release();
    return v10 & ~v7 & 1;
  }
  else
  {
    uint64_t v12 = swift_retain();
    uint64_t v13 = ((uint64_t (*)(uint64_t))v4)(v12);
    swift_release();
    return v13;
  }
}

char *PeoplePickerActionBar.__allocating_init(frame:buttonsStyle:)(char a1)
{
  OUTLINED_FUNCTION_7();
  id v3 = objc_allocWithZone(v1);
  OUTLINED_FUNCTION_6_2();
  return PeoplePickerActionBar.init(frame:buttonsStyle:)(a1);
}

ConversationKit::RTTType_optional __swiftcall RTTType.init(rawValue:)(Swift::String rawValue)
{
  id object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._id object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of RTTType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (ConversationKit::RTTType_optional)3;
  }
  else {
    return (ConversationKit::RTTType_optional)v3;
  }
}

uint64_t RTTType.rawValue.getter(char a1)
{
  if (!a1) {
    return 1701736302;
  }
  if (a1 == 1) {
    return 0x746365726964;
  }
  return 0x79616C6572;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance RTTType(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance RTTType()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance RTTType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance RTTType()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

ConversationKit::RTTType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance RTTType@<W0>(Swift::String *a1@<X0>, ConversationKit::RTTType_optional *a2@<X8>)
{
  result.value = RTTType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance RTTType@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RTTType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t PeoplePickerAction.description.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  unint64_t result = 0xD000000000000017;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x695674726174732ELL;
      break;
    case 2:
      unint64_t result = 0x737265506464612ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0x654D69646E65732ELL;
      break;
    case 5:
      unint64_t result = 0x6C65636E61632ELL;
      break;
    default:
      if (0xC37BD7D0)
      {
        if (0xC37BD7D0 == 1) {
          unint64_t result = 0xD000000000000025;
        }
        else {
          unint64_t result = 0xD000000000000024;
        }
      }
      else
      {
        unint64_t result = 0xD000000000000013;
      }
      break;
  }
  return result;
}

BOOL ActionBarButtonsStyle.isAdd.getter(unsigned __int8 a1)
{
  return a1 - 5 < 0xFFFFFFFD;
}

uint64_t static ActionBarButtonsStyle.== infix(_:_:)(char a1, unsigned __int8 a2)
{
  switch(a1)
  {
    case 2:
      if (a2 != 2) {
        goto LABEL_11;
      }
      break;
    case 3:
      if (a2 != 3) {
        goto LABEL_11;
      }
      break;
    case 4:
      if (a2 != 4)
      {
LABEL_11:
        char v2 = 0;
        return v2 & 1;
      }
      break;
    default:
      if (a2 - 2 >= 3)
      {
        char v2 = ((a1 & 1) == 0) ^ a2;
        return v2 & 1;
      }
      goto LABEL_11;
  }
  char v2 = 1;
  return v2 & 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ActionBarButtonsStyle(char *a1, unsigned __int8 *a2)
{
  return static ActionBarButtonsStyle.== infix(_:_:)(*a1, *a2);
}

void one-time initialization function for buttonImageTitlePadding()
{
  static LayoutConstants.buttonImageTitlePadding = 0x4010000000000000;
}

void one-time initialization function for buttonBottomPadding()
{
  static LayoutConstants.buttonBottomPadding = 0x4020000000000000;
}

void one-time initialization function for buttonLeftRightPadding()
{
  static LayoutConstants.buttonLeftRightPadding = 0x4024000000000000;
}

void one-time initialization function for stackViewInterItemSpacing()
{
  static LayoutConstants.stackViewInterItemSpacing = 0x4024000000000000;
}

void one-time initialization function for buttonTopPadding()
{
  static LayoutConstants.buttonTopPadding = 0x4028000000000000;
}

void one-time initialization function for buttonVerticalInset()
{
  static LayoutConstants.buttonVerticalInset = 0x4024000000000000;
}

void one-time initialization function for buttonHorizontalInset()
{
  static LayoutConstants.buttonHorizontalInset = 0x402E000000000000;
}

uint64_t key path getter for PeoplePickerActionBar.delegate : PeoplePickerActionBar@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x120))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for PeoplePickerActionBar.delegate : PeoplePickerActionBar(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x128);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t PeoplePickerActionBar.delegate.getter()
{
  OUTLINED_FUNCTION_5_4();
  return MEMORY[0x1C8776240](v0);
}

uint64_t PeoplePickerActionBar.delegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_1();
  *(void *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*PeoplePickerActionBar.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  unint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  OUTLINED_FUNCTION_6_1();
  uint64_t v6 = MEMORY[0x1C8776240](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  void v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

uint64_t key path getter for PeoplePickerActionBar.buttonsStyle : PeoplePickerActionBar@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x138))();
  *a2 = result;
  return result;
}

uint64_t key path setter for PeoplePickerActionBar.buttonsStyle : PeoplePickerActionBar(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x140))(*a1);
}

uint64_t PeoplePickerActionBar.buttonsStyle.didset(unsigned __int8 a1)
{
  int v2 = a1;
  unint64_t v3 = (unsigned __int8 *)v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_buttonsStyle;
  uint64_t result = swift_beginAccess();
  int v5 = *v3;
  switch(v5)
  {
    case 2:
      if (v2 == 2) {
        return result;
      }
      break;
    case 3:
      if (v2 == 3) {
        return result;
      }
      break;
    case 4:
      if (v2 == 4) {
        return result;
      }
      break;
    default:
      if (v2 - 2) >= 3 && ((v2 ^ ((v5 & 1) == 0))) {
        return result;
      }
      break;
  }
  if (one-time initialization token for conversationKit != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C3769620;
  uint64_t v7 = String.init<A>(reflecting:)();
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v10 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x408))(v10);
}

uint64_t PeoplePickerActionBar.buttonsStyle.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t PeoplePickerActionBar.buttonsStyle.setter(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_4_10();
  unsigned __int8 v3 = *v1;
  *uint64_t v1 = a1;
  return PeoplePickerActionBar.buttonsStyle.didset(v3);
}

void (*PeoplePickerActionBar.buttonsStyle.modify())(uint64_t a1)
{
  int v2 = malloc(0x28uLL);
  OUTLINED_FUNCTION_16_2((uint64_t)v2);
  unsigned __int8 v3 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_buttonsStyle);
  OUTLINED_FUNCTION_2();
  *(unsigned char *)(v1 + 32) = *v3;
  return PeoplePickerActionBar.buttonsStyle.modify;
}

void PeoplePickerActionBar.buttonsStyle.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  PeoplePickerActionBar.buttonsStyle.setter(*(unsigned char *)(*(void *)a1 + 32));
  free(v1);
}

uint64_t key path getter for PeoplePickerActionBar.handleToDisplay : PeoplePickerActionBar@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x150))();
  *a2 = result;
  return result;
}

uint64_t key path setter for PeoplePickerActionBar.handleToDisplay : PeoplePickerActionBar(id *a1, void **a2)
{
  id v2 = *a1;
  unsigned __int8 v3 = *(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x158);
  id v4 = *a1;
  return v3(v2);
}

void *PeoplePickerActionBar.handleToDisplay.getter()
{
  OUTLINED_FUNCTION_5_4();
  uint64_t v1 = *v0;
  id v2 = v1;
  return v1;
}

void PeoplePickerActionBar.handleToDisplay.setter(void *a1)
{
  OUTLINED_FUNCTION_0_1();
  unsigned __int8 v3 = *v1;
  *uint64_t v1 = a1;
}

uint64_t (*PeoplePickerActionBar.handleToDisplay.modify())()
{
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path getter for PeoplePickerActionBar.generatingLinksEnabled : PeoplePickerActionBar@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x168))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for PeoplePickerActionBar.generatingLinksEnabled : PeoplePickerActionBar(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x170))(*a1);
}

uint64_t PeoplePickerActionBar.generatingLinksEnabled.didset(char a1)
{
  int v2 = a1 & 1;
  unsigned __int8 v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_generatingLinksEnabled);
  uint64_t result = swift_beginAccess();
  if (*v3 != v2) {
    return PeoplePickerActionBar.updateLinkButtonsEnabled()();
  }
  return result;
}

uint64_t PeoplePickerActionBar.generatingLinksEnabled.getter()
{
  OUTLINED_FUNCTION_5_4();
  return *v0;
}

uint64_t PeoplePickerActionBar.generatingLinksEnabled.setter(char a1)
{
  OUTLINED_FUNCTION_4_10();
  char v3 = *v1;
  *uint64_t v1 = a1;
  return PeoplePickerActionBar.generatingLinksEnabled.didset(v3);
}

void (*PeoplePickerActionBar.generatingLinksEnabled.modify())(uint64_t a1)
{
  int v2 = malloc(0x28uLL);
  OUTLINED_FUNCTION_16_2((uint64_t)v2);
  char v3 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_generatingLinksEnabled);
  OUTLINED_FUNCTION_2();
  *(unsigned char *)(v1 + 32) = *v3;
  return PeoplePickerActionBar.generatingLinksEnabled.modify;
}

void PeoplePickerActionBar.generatingLinksEnabled.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  PeoplePickerActionBar.generatingLinksEnabled.setter(*(unsigned char *)(*(void *)a1 + 32));
  free(v1);
}

int8x8_t key path getter for PeoplePickerActionBar.serviceAvailability : PeoplePickerActionBar@<D0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x180))();
  *(unsigned char *)a2 = v3 & 1;
  uint64x2_t v4 = (uint64x2_t)vdupq_n_s64(v3);
  int16x8_t v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1C3782D50), (int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1C3782D40));
  *(int8x8_t *)v5.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v5), (int8x8_t)0x1000100010001);
  int8x8_t result = vmovn_s16(v5);
  *(_DWORD *)(a2 + 1) = result.i32[0];
  *(unsigned char *)(a2 + 5) = BYTE5(v3) & 1;
  return result;
}

uint64_t key path setter for PeoplePickerActionBar.serviceAvailability : PeoplePickerActionBar(unsigned __int8 *a1, void **a2)
{
  uint64_t v2 = 0x10000000000;
  if (!a1[5]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x100000000;
  if (!a1[4]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x1000000;
  if (!a1[3]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = 0x10000;
  if (!a1[2]) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = 256;
  if (!a1[1]) {
    uint64_t v6 = 0;
  }
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x188))(v6 | *a1 | v5 | v4 | v3 | v2);
}

uint64_t PeoplePickerActionBar.serviceAvailability.didset(unint64_t a1)
{
  uint64_t v3 = (unsigned __int8 *)v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_serviceAvailability;
  uint64_t result = swift_beginAccess();
  if (((a1 ^ *v3) & 1) != 0
    || (((a1 >> 8) & 1 ^ v3[1]) & 1) != 0
    || (((a1 >> 16) & 1 ^ v3[2]) & 1) != 0
    || (((a1 >> 24) & 1 ^ v3[3]) & 1) != 0
    || ((BYTE4(a1) & 1 ^ v3[4]) & 1) != 0
    || (((a1 >> 40) & 1 ^ v3[5]) & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C3769620;
    uint64_t v6 = String.init<A>(reflecting:)();
    uint64_t v8 = v7;
    *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v5 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 40) = v8;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    uint64_t v9 = swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x408))(v9);
  }
  return result;
}

uint64_t PeoplePickerActionBar.serviceAvailability.getter()
{
  OUTLINED_FUNCTION_5_4();
  return OUTLINED_FUNCTION_8_86(*v0);
}

uint64_t PeoplePickerActionBar.serviceAvailability.setter(unint64_t a1)
{
  OUTLINED_FUNCTION_4_10();
  uint64_t v3 = *v1;
  *uint64_t v1 = a1 & 1;
  uint64x2_t v4 = (uint64x2_t)vdupq_n_s64(a1);
  int16x8_t v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1C3782D50), (int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1C3782D40));
  *(int8x8_t *)v5.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v5), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v1 + 1) = vmovn_s16(v5).u32[0];
  v1[5] = BYTE5(a1) & 1;
  unint64_t v6 = OUTLINED_FUNCTION_8_86(v3);
  return PeoplePickerActionBar.serviceAvailability.didset(v6);
}

void (*PeoplePickerActionBar.serviceAvailability.modify())(uint64_t a1)
{
  uint64_t v2 = malloc(0x28uLL);
  OUTLINED_FUNCTION_16_2((uint64_t)v2);
  uint64_t v3 = (unsigned char *)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_serviceAvailability);
  OUTLINED_FUNCTION_2();
  char v4 = v3[1];
  char v5 = v3[2];
  char v6 = v3[3];
  char v7 = v3[4];
  char v8 = v3[5];
  *(unsigned char *)(v1 + 32) = *v3;
  uint64_t v9 = (unsigned char *)(v1 + 32);
  v9[1] = v4;
  void v9[2] = v5;
  void v9[3] = v6;
  v9[4] = v7;
  void v9[5] = v8;
  return PeoplePickerActionBar.serviceAvailability.modify;
}

void PeoplePickerActionBar.serviceAvailability.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  unint64_t v2 = OUTLINED_FUNCTION_8_86(*(unsigned __int8 *)(*(void *)a1 + 32));
  PeoplePickerActionBar.serviceAvailability.setter(v2);
  free(v1);
}

id PeoplePickerActionBar.videoButton.getter()
{
  return PeoplePickerActionBar.videoButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___videoButton, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerActionBar.videoButton.getter);
}

id closure #1 in PeoplePickerActionBar.videoButton.getter()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  v7._id object = (void *)0xE000000000000000;
  v1._countAndFlagsBits = 0x454D495445434146;
  v1._id object = (void *)0xE800000000000000;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._id object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._id object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0;
  Swift::String v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v7);

  id v5 = static PeoplePickerActionBar.createPeoplePickerButton(title:symbolName:)(v4._countAndFlagsBits, (uint64_t)v4._object, 0x69662E6F65646976, 0xEA00000000006C6CLL);
  swift_bridgeObjectRelease();
  return v5;
}

id static PeoplePickerActionBar.createPeoplePickerButton(title:symbolName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(self, sel_buttonWithType_, 1);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v11, sel_setShowsLargeContentViewer_, 1);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1938]), sel_init);
  objc_msgSend(v11, sel_addInteraction_, v12);

  static PeoplePickerActionBar.createButtonBaseConfiguration(title:symbolName:titleLineBreakMode:)(a1, a2, a3, a4, 5, 0);
  uint64_t v13 = type metadata accessor for UIButton.Configuration();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v13);
  UIButton.configuration.setter();
  objc_msgSend(v11, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v11, sel_setPreferredBehavioralStyle_, 1);
  return v11;
}

uint64_t PeoplePickerActionBar.audioButtonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return PeoplePickerActionBar.audioButtonConfiguration.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioButtonConfiguration, (void (*)(uint64_t))closure #1 in PeoplePickerActionBar.audioButtonConfiguration.getter, a1);
}

uint64_t closure #1 in PeoplePickerActionBar.audioButtonConfiguration.getter()
{
  uint64_t v0 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  Swift::String v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.tinted()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  @nonobjc UIImage.__allocating_init(systemName:)();
  UIButton.Configuration.image.setter();
  id v4 = objc_msgSend(self, sel_configurationWithTextStyle_scale_, *MEMORY[0x1E4FB28C8], 2);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FB1218], v0);
  UIButton.Configuration.cornerStyle.setter();
  if (one-time initialization token for activeButtonBackgroundColor != -1) {
    swift_once();
  }
  id v5 = (id)static Colors.PeoplePickerViewController.activeButtonBackgroundColor;
  UIButton.Configuration.baseForegroundColor.setter();
  id v6 = v5;
  return UIButton.Configuration.baseBackgroundColor.setter();
}

id PeoplePickerActionBar.audioButton.getter()
{
  return PeoplePickerActionBar.audioButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioButton, (void (*)(void))PeoplePickerActionBar.audioButtonConfiguration.getter, 1);
}

void PeoplePickerActionBar.audioButtonLeadingConstraint.setter(uint64_t a1)
{
}

uint64_t PeoplePickerActionBar.cancelButtonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return PeoplePickerActionBar.audioButtonConfiguration.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___cancelButtonConfiguration, (void (*)(uint64_t))closure #1 in PeoplePickerActionBar.cancelButtonConfiguration.getter, a1);
}

uint64_t PeoplePickerActionBar.audioButtonConfiguration.getter@<X0>(void *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  uint64_t v9 = OUTLINED_FUNCTION_8(v8);
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_196();
  MEMORY[0x1F4188790](v10);
  id v12 = &v19[-v11];
  uint64_t v13 = v4 + *a1;
  OUTLINED_FUNCTION_2();
  outlined init with copy of LinkShareCoordinatorProtocol?(v13, (uint64_t)v12, &demangling cache variable for type metadata for UIButton.Configuration?);
  uint64_t v14 = type metadata accessor for UIButton.Configuration();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14) == 1)
  {
    uint64_t v15 = outlined destroy of Any?((uint64_t)v12, &demangling cache variable for type metadata for UIButton.Configuration?);
    a2(v15);
    OUTLINED_FUNCTION_48();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v3, a3, v14);
    __swift_storeEnumTagSinglePayload(v3, 0, 1, v14);
    OUTLINED_FUNCTION_6_1();
    outlined assign with take of UIListContentConfiguration?(v3, v13, &demangling cache variable for type metadata for UIButton.Configuration?);
    return swift_endAccess();
  }
  else
  {
    OUTLINED_FUNCTION_48();
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v18 + 32))(a3, v12, v14);
  }
}

uint64_t closure #1 in PeoplePickerActionBar.cancelButtonConfiguration.getter()
{
  uint64_t v0 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  Swift::String v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.gray()();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FB1270], v4);
  UIButton.Configuration.buttonSize.setter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FB11F8], v0);
  UIButton.Configuration.cornerStyle.setter();
  id v8 = objc_msgSend(self, sel_conversationKit);
  v14._id object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0x4C45434E4143;
  v9._id object = (void *)0xE600000000000000;
  v10.value._countAndFlagsBits = 0x61737265766E6F43;
  v10.value._id object = (void *)0xEF74694B6E6F6974;
  v11._countAndFlagsBits = 0;
  v11._id object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v14);

  return UIButton.Configuration.title.setter();
}

id PeoplePickerActionBar.cancelButton.getter()
{
  return PeoplePickerActionBar.audioButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___cancelButton, (void (*)(void))PeoplePickerActionBar.cancelButtonConfiguration.getter, 2);
}

id PeoplePickerActionBar.audioButton.getter(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    id v7 = closure #1 in PeoplePickerActionBar.audioButton.getter(v3, a2, a3);
    id v6 = OUTLINED_FUNCTION_25_54(v7);

    uint64_t v5 = 0;
  }
  id v8 = v5;
  return v6;
}

id closure #1 in PeoplePickerActionBar.audioButton.getter(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  uint64_t v7 = OUTLINED_FUNCTION_8(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_63();
  id v8 = objc_msgSend(self, sel_buttonWithType_, 1);
  a2();
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v9);
  UIButton.configuration.setter();
  objc_msgSend(v8, sel_setPointerInteractionEnabled_, 1);
  id v10 = objc_msgSend(v8, sel_layer);
  objc_msgSend(v10, sel_setMasksToBounds_, 1);

  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v8, sel_setContentCompressionResistancePriority_forAxis_, 0, v11);
  objc_msgSend(v8, sel_setPreferredBehavioralStyle_, a3);
  return v8;
}

id PeoplePickerActionBar.isMessagesAppInstalled.getter()
{
  id result = objc_msgSend(self, sel_defaultWorkspace);
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = (void *)MEMORY[0x1C87730B0](0xD000000000000013, 0x80000001C37AAE90);
    id v3 = objc_msgSend(v1, sel_applicationIsInstalled_, v2);

    if (one-time initialization token for conversationControls != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)static Logger.conversationControls);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1C2F90000, v5, v6, "PeoplePickerActionBar: messagesAppInstalled = %{BOOL}d", v7, 8u);
      MEMORY[0x1C87760E0](v7, -1, -1);
    }

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PeoplePickerActionBar.faceTimeAddPersonButton.getter()
{
  return PeoplePickerActionBar.sharePlayAddPersonButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___faceTimeAddPersonButton, 0x69662E6F65646976, 0xEA00000000006C6CLL);
}

id PeoplePickerActionBar.sharePlayAddPersonButton.getter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    id v10 = closure #1 in PeoplePickerActionBar.faceTimeAddPersonButton.getter(ObjectType, a2, a3);
    double v11 = *(void **)(v3 + v4);
    *(void *)(v3 + v4) = v10;
    id v6 = v10;

    uint64_t v5 = 0;
  }
  id v12 = v5;
  return v6;
}

id PeoplePickerActionBar.sharePlayAddPersonButton.getter()
{
  return PeoplePickerActionBar.sharePlayAddPersonButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___sharePlayAddPersonButton, 0x616C706572616873, 0xE900000000000079);
}

id closure #1 in PeoplePickerActionBar.faceTimeAddPersonButton.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend(self, sel_conversationKit);
  v12._id object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0x504F45505F444441;
  v6._id object = (void *)0xEA0000000000454CLL;
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._id object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._id object = (void *)0xE000000000000000;
  v12._countAndFlagsBits = 0;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v12);

  id v10 = static PeoplePickerActionBar.createPeoplePickerButton(title:symbolName:)(v9._countAndFlagsBits, (uint64_t)v9._object, a2, a3);
  swift_bridgeObjectRelease();
  return v10;
}

void __swiftcall PeoplePickerActionBar.addPersonButton(avLess:)(UIButton *__return_ptr retstr, Swift::Bool avLess)
{
  if (avLess) {
    PeoplePickerActionBar.sharePlayAddPersonButton.getter();
  }
  else {
    PeoplePickerActionBar.faceTimeAddPersonButton.getter();
  }
}

uint64_t key path getter for PeoplePickerActionBar.inviteWithMessagesButton : PeoplePickerActionBar@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x268))();
  *a2 = result;
  return result;
}

void key path setter for PeoplePickerActionBar.inviteWithMessagesButton : PeoplePickerActionBar(id *a1)
{
}

id PeoplePickerActionBar.inviteWithMessagesButton.getter()
{
  return PeoplePickerActionBar.videoButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___inviteWithMessagesButton, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerActionBar.inviteWithMessagesButton.getter);
}

id PeoplePickerActionBar.videoButton.getter(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    Swift::String v8 = (void *)a2(ObjectType);
    Swift::String v9 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v8;
    id v5 = v8;

    uint64_t v4 = 0;
  }
  id v10 = v4;
  return v5;
}

id closure #1 in PeoplePickerActionBar.inviteWithMessagesButton.getter()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  v13._id object = (void *)0xE000000000000000;
  v1._id object = (void *)0x80000001C37BDD00;
  v1._countAndFlagsBits = 0xD000000000000014;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._id object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._id object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 0;
  Swift::String v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v13);

  id v5 = static PeoplePickerActionBar.createPeoplePickerButton(title:symbolName:)(v4._countAndFlagsBits, (uint64_t)v4._object, 0x2E6567617373656DLL, 0xEC0000006C6C6966);
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v5, sel_titleLabel);
  if (v6)
  {
    Swift::String_optional v7 = v6;
    objc_msgSend(v6, sel_setNumberOfLines_, 1);
  }
  id v8 = objc_msgSend(v5, sel_titleLabel);
  if (v8)
  {
    Swift::String v9 = v8;
    objc_msgSend(v8, sel_setAdjustsFontSizeToFitWidth_, 1);
  }
  id v10 = objc_msgSend(v5, sel_titleLabel);
  if (v10)
  {
    double v11 = v10;
    objc_msgSend(v10, sel_setMinimumScaleFactor_, 0.4);
  }
  return v5;
}

void PeoplePickerActionBar.inviteWithMessagesButton.setter(uint64_t a1)
{
}

id PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter()
{
  return PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___inviteWithMessagesButtonStackView, 2);
}

id PeoplePickerActionBar.messagesButton.getter()
{
  Swift::String_optional v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messagesButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messagesButton);
  }
  else
  {
    swift_getObjectType();
    id v4 = closure #1 in PeoplePickerActionBar.messagesButton.getter();
    id v3 = OUTLINED_FUNCTION_25_54(v4);

    Swift::String_optional v2 = 0;
  }
  id v5 = v2;
  return v3;
}

id closure #1 in PeoplePickerActionBar.messagesButton.getter()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  v14._id object = (void *)0xE000000000000000;
  v1._countAndFlagsBits = 0x534547415353454DLL;
  v1._id object = (void *)0xE800000000000000;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._id object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._id object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  Swift::String v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v14);

  id v5 = static PeoplePickerActionBar.createPeoplePickerButton(title:symbolName:)(v4._countAndFlagsBits, (uint64_t)v4._object, 0x2E6567617373656DLL, 0xEC0000006C6C6966);
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v5, sel_titleLabel);
  if (v6)
  {
    Swift::String_optional v7 = v6;
    objc_msgSend(v6, sel_setNumberOfLines_, 1);
  }
  id v8 = objc_msgSend(v5, sel_titleLabel);
  if (v8)
  {
    Swift::String v9 = v8;
    objc_msgSend(v8, sel_setAdjustsFontSizeToFitWidth_, 1);
  }
  id v10 = objc_msgSend(v5, sel_titleLabel);
  if (v10)
  {
    double v11 = v10;
    objc_msgSend(v10, sel_setMinimumScaleFactor_, 0.4);
  }
  id v12 = v5;
  objc_msgSend(v12, sel_setEnabled_, (unint64_t)PeoplePickerActionBar.isMessagesAppInstalled.getter() & 1);

  return v12;
}

id PeoplePickerActionBar.messageAndFaceTimeStackView.getter()
{
  return PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messageAndFaceTimeStackView, 1);
}

id PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter(void *a1, uint64_t a2)
{
  Swift::String v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = closure #1 in PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter(a2);
    id v5 = OUTLINED_FUNCTION_25_54(v6);

    Swift::String v4 = 0;
  }
  id v7 = v4;
  return v5;
}

id closure #1 in PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setDistribution_, a1);
  objc_msgSend(v2, sel_setAxis_, 0);
  if (one-time initialization token for stackViewInterItemSpacing != -1) {
    swift_once();
  }
  objc_msgSend(v2, sel_setSpacing_, *(double *)&static LayoutConstants.stackViewInterItemSpacing);
  return v2;
}

objc_class *PeoplePickerActionBar.audioVideoCallMenu.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoCallMenu;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoCallMenu];
  if (v2)
  {
    Swift::String v3 = *(objc_class **)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoCallMenu];
  }
  else
  {
    Swift::String v4 = v0;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
    id v5 = self;
    id v6 = objc_msgSend(v5, sel_conversationKit);
    uint64_t v7 = OUTLINED_FUNCTION_16_60();
    OUTLINED_FUNCTION_3_139(v7, 0x4F454449565FLL);

    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    id v8 = @nonobjc UIImage.__allocating_init(systemName:)();
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v10 = OUTLINED_FUNCTION_11_79();
    id v11 = objc_msgSend(v5, sel_conversationKit, 0, 0, 0, partial apply for closure #1 in closure #1 in PeoplePickerActionBar.audioVideoCallMenu.getter, v9);
    uint64_t v12 = OUTLINED_FUNCTION_16_60();
    OUTLINED_FUNCTION_3_139(v12, 0x4F494455415FLL);

    @nonobjc UIImage.__allocating_init(systemName:)();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = OUTLINED_FUNCTION_11_79();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIMenu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C3769610;
    *(void *)(v14 + 32) = v10;
    *(void *)(v14 + 40) = v13;
    UIMenuElementSize preferredElementSize = v14;
    specialized Array._endMutation()();
    v15._countAndFlagsBits = 0;
    v15._id object = (void *)0xE000000000000000;
    v21.value.super.Class isa = 0;
    v21.is_nil = 0;
    v16.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v15, (Swift::String_optional)0, v21, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;
    double v17 = *(void **)&v4[v1];
    *(UIMenu *)&v4[v1] = v16;
    Swift::String v3 = v16.super.super.isa;

    id v2 = 0;
  }
  id v18 = v2;
  return v3;
}

id PeoplePickerActionBar.audioCallDisambiguationMenu.getter()
{
  return PeoplePickerActionBar.audioVideoDropdownButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioCallDisambiguationMenu, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter);
}

id PeoplePickerActionBar.audioVideoDropdownButton.getter(void *a1, uint64_t (*a2)(uint64_t))
{
  Swift::String v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    id v5 = OUTLINED_FUNCTION_25_54(v6);

    Swift::String v4 = 0;
  }
  id v7 = v4;
  return v5;
}

UIMenu closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter()
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  id v0 = self;
  id v1 = objc_msgSend(v0, sel_conversationKit);
  uint64_t v2 = (void *)0xE000000000000000;
  swift__string._id object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 1280065859;
  v3._id object = (void *)0xE400000000000000;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._id object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._id object = (void *)0xE000000000000000;
  swift__string._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v1, v5, swift__string);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  @nonobjc UIImage.__allocating_init(systemName:)();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v8 = objc_msgSend(v0, sel_conversationKit, 0, 2, 1, partial apply for closure #1 in closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter, v6);
  swift__stringa._id object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0x454D495445434146;
  v9._id object = (void *)0xEE004F494455415FLL;
  v10.value._countAndFlagsBits = 0x61737265766E6F43;
  v10.value._id object = (void *)0xEF74694B6E6F6974;
  v11._countAndFlagsBits = 0;
  v11._id object = (void *)0xE000000000000000;
  swift__stringa._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, swift__stringa);

  @nonobjc UIImage.__allocating_init(systemName:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v13 = objc_msgSend(self, sel_faceTimeSupplementalDialTelephonyCallStringIncludingFTA_, 1, 0);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v2 = v16;
  }
  else
  {
    uint64_t v15 = 0;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIMenu);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C3769610;
  *(void *)(v17 + 32) = v7;
  *(void *)(v17 + 40) = v12;
  UIMenuElementSize preferredElementSize = v17;
  specialized Array._endMutation()();
  v18._countAndFlagsBits = v15;
  v18._id object = v2;
  v21.value.super.Class isa = 0;
  v21.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v18, (Swift::String_optional)0, v21, (UIMenuIdentifier_optional)2, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)2);
}

void closure #1 in closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  Swift::String v3 = (void *)MEMORY[0x1C8776240](v2);
  if (v3)
  {
    Swift::String_optional v4 = v3;
    Swift::String v5 = (void *)MEMORY[0x1E4FBC8C8];
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x120))())
    {
      uint64_t v7 = v6;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v9 = (*(uint64_t (**)(void))((*v5 & *v4) + 0x150))();
      (*(void (**)(void *, uint64_t, void, uint64_t, uint64_t))(v7 + 8))(v4, v9, 0, ObjectType, v7);

      swift_unknownObjectRelease();
      Swift::String_optional v4 = (void *)v9;
    }
  }
}

void closure #1 in closure #1 in PeoplePickerActionBar.audioVideoCallMenu.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 + 16;
  OUTLINED_FUNCTION_2();
  Swift::String v5 = (void *)MEMORY[0x1C8776240](v4);
  if (v5)
  {
    uint64_t v6 = v5;
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v5) + 0x120))())
    {
      uint64_t v8 = v7;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, void, uint64_t, uint64_t))(v8 + 8))(v6, a3, 0, ObjectType, v8);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

id PeoplePickerActionBar.backgroundView.getter()
{
  return PeoplePickerActionBar.audioVideoDropdownButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundView, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerActionBar.backgroundView.getter);
}

id closure #1 in PeoplePickerActionBar.backgroundView.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  id v1 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v1);

  id v2 = objc_msgSend(v0, sel_layer);
  id v3 = PeoplePickerActionBar.backgroundGradientLayer.getter();
  objc_msgSend(v2, sel_setMask_, v3);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

id PeoplePickerActionBar.backgroundGradientLayer.getter()
{
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundGradientLayer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundGradientLayer);
  }
  else
  {
    id v4 = closure #1 in PeoplePickerActionBar.backgroundGradientLayer.getter();
    id v3 = OUTLINED_FUNCTION_25_54(v4);

    id v2 = 0;
  }
  id v5 = v2;
  return v3;
}

id closure #1 in PeoplePickerActionBar.backgroundGradientLayer.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39BD0]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C37696D0;
  id v2 = self;
  id v3 = objc_msgSend(v2, sel_clearColor);
  id v4 = objc_msgSend(v3, sel_CGColor);

  type metadata accessor for CGColorRef(0);
  uint64_t v6 = v5;
  *(void *)(v1 + 56) = v5;
  *(void *)(v1 + 32) = v4;
  id v7 = objc_msgSend(v2, sel_whiteColor);
  id v8 = objc_msgSend(v7, sel_CGColor);

  *(void *)(v1 + 88) = v6;
  *(void *)(v1 + 64) = v8;
  outlined bridged method (mbnn) of @objc CAGradientLayer.colors.setter(v1, v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C3769610;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  *(NSNumber *)(v9 + 32) = NSNumber.init(floatLiteral:)(0.0);
  *(NSNumber *)(v9 + 40) = NSNumber.init(floatLiteral:)(0.1);
  specialized Array._endMutation()();
  outlined bridged method (mbnn) of @objc CAGradientLayer.locations.setter(v9, v0);
  return v0;
}

uint64_t key path getter for PeoplePickerActionBar.audioVideoDropdownViewModel : PeoplePickerActionBar@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x340))();
  *a2 = result;
  return result;
}

uint64_t key path setter for PeoplePickerActionBar.audioVideoDropdownViewModel : PeoplePickerActionBar()
{
  uint64_t v0 = swift_retain();
  return PeoplePickerActionBar.audioVideoDropdownViewModel.setter(v0);
}

uint64_t PeoplePickerActionBar.audioVideoDropdownViewModel.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownViewModel;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownViewModel))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownViewModel);
  }
  else
  {
    uint64_t v2 = closure #1 in PeoplePickerActionBar.audioVideoDropdownViewModel.getter();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t closure #1 in PeoplePickerActionBar.audioVideoDropdownViewModel.getter()
{
  id v0 = objc_msgSend(self, sel_conversationKit);
  v5._id object = (void *)0xE000000000000000;
  v1._countAndFlagsBits = 0x454D495445434146;
  v1._id object = (void *)0xE800000000000000;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._id object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._id object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v5);

  static Color.green.getter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for DropdownViewModel(0);
  swift_allocObject();
  return DropdownViewModel.init(primaryText:primaryColor:symbolName:primaryAction:menuItems:isEnabled:)();
}

void closure #1 in closure #1 in PeoplePickerActionBar.audioVideoDropdownViewModel.getter(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  Swift::String_optional v2 = (void *)MEMORY[0x1C8776240](v1);
  if (v2)
  {
    Swift::String v3 = v2;
    objc_msgSend(v2, sel_videoButtonTapped);
  }
}

uint64_t PeoplePickerActionBar.audioVideoDropdownViewModel.setter(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownViewModel) = a1;
  return swift_release();
}

id PeoplePickerActionBar.audioVideoDropdownButton.getter()
{
  return PeoplePickerActionBar.audioVideoDropdownButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownButton, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerActionBar.audioVideoDropdownButton.getter);
}

void *closure #1 in PeoplePickerActionBar.audioVideoDropdownButton.getter(void *a1)
{
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x340))();
  type metadata accessor for DropdownViewModel(0);
  State.init(wrappedValue:)();
  id v1 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SelfSizingHostingView<DropdownMenuButton>));
  Swift::String_optional v2 = (void *)_UIHostingView.init(rootView:)();
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

uint64_t key path getter for PeoplePickerActionBar.faceTimeAudioDropdownMenuItem : PeoplePickerActionBar(void **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x370))();
}

uint64_t key path setter for PeoplePickerActionBar.faceTimeAudioDropdownMenuItem : PeoplePickerActionBar(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DropdownViewModel.MenuItem(0);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of DropdownViewModel.MenuItem(a1, (uint64_t)v4);
  return PeoplePickerActionBar.faceTimeAudioDropdownMenuItem.setter((uint64_t)v4);
}

uint64_t PeoplePickerActionBar.faceTimeAudioDropdownMenuItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DropdownViewModel.MenuItem?);
  uint64_t v5 = OUTLINED_FUNCTION_8(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_196();
  MEMORY[0x1F4188790](v6);
  id v8 = &v12[-v7];
  uint64_t v9 = (uint64_t)v2
     + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___faceTimeAudioDropdownMenuItem;
  OUTLINED_FUNCTION_2();
  outlined init with copy of LinkShareCoordinatorProtocol?(v9, (uint64_t)v8, &demangling cache variable for type metadata for DropdownViewModel.MenuItem?);
  uint64_t v10 = type metadata accessor for DropdownViewModel.MenuItem(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10) != 1) {
    return outlined init with take of DropdownViewModel.MenuItem((uint64_t)v8, a1);
  }
  outlined destroy of Any?((uint64_t)v8, &demangling cache variable for type metadata for DropdownViewModel.MenuItem?);
  closure #1 in PeoplePickerActionBar.faceTimeAudioDropdownMenuItem.getter(v2, a1);
  outlined init with copy of DropdownViewModel.MenuItem(a1, v1);
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v10);
  OUTLINED_FUNCTION_6_1();
  outlined assign with take of UIListContentConfiguration?(v1, v9, &demangling cache variable for type metadata for DropdownViewModel.MenuItem?);
  return swift_endAccess();
}

int *closure #1 in PeoplePickerActionBar.faceTimeAudioDropdownMenuItem.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_conversationKit);
  v14._id object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x454D495445434146;
  v5._id object = (void *)0xEE004F494455415FLL;
  v6.value._countAndFlagsBits = 0x61737265766E6F43;
  v6.value._id object = (void *)0xEF74694B6E6F6974;
  v7._countAndFlagsBits = 0;
  v7._id object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v14);

  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  id v10 = a1;
  UUID.init()();
  uint64_t result = (int *)type metadata accessor for DropdownViewModel.MenuItem(0);
  *(Swift::String *)(a2 + result[5]) = v8;
  uint64_t v12 = (uint64_t (**)())(a2 + result[6]);
  *uint64_t v12 = partial apply for closure #1 in closure #1 in PeoplePickerActionBar.faceTimeAudioDropdownMenuItem.getter;
  v12[1] = (uint64_t (*)())v9;
  id v13 = (char *)(a2 + result[7]);
  strcpy(v13, "facetime-audio");
  v13[15] = -18;
  *(unsigned char *)(a2 + result[8]) = 1;
  return result;
}

uint64_t closure #1 in closure #1 in PeoplePickerActionBar.faceTimeAudioDropdownMenuItem.getter(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x120))();
  if (result)
  {
    uint64_t v4 = v3;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, void, uint64_t, uint64_t))(v4 + 8))(a1, 1, 0, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t PeoplePickerActionBar.faceTimeAudioDropdownMenuItem.setter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DropdownViewModel.MenuItem?);
  uint64_t v4 = OUTLINED_FUNCTION_8(v3);
  MEMORY[0x1F4188790](v4);
  Swift::String_optional v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with take of DropdownViewModel.MenuItem(a1, (uint64_t)v6);
  uint64_t v7 = type metadata accessor for DropdownViewModel.MenuItem(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  uint64_t v8 = v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___faceTimeAudioDropdownMenuItem;
  OUTLINED_FUNCTION_6_1();
  outlined assign with take of UIListContentConfiguration?((uint64_t)v6, v8, &demangling cache variable for type metadata for DropdownViewModel.MenuItem?);
  return swift_endAccess();
}

char *PeoplePickerActionBar.init(frame:buttonsStyle:)(char a1)
{
  OUTLINED_FUNCTION_7();
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_handleToDisplay) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_generatingLinksEnabled) = 1;
  uint64_t v3 = v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_serviceAvailability;
  *(_WORD *)(v3 + 4) = 0;
  *(_DWORD *)uint64_t v3 = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___videoButton) = 0;
  uint64_t v4 = v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioButtonConfiguration;
  type metadata accessor for UIButton.Configuration();
  OUTLINED_FUNCTION_53(v4);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioButton) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_audioButtonLeadingConstraint) = 0;
  OUTLINED_FUNCTION_53(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___cancelButtonConfiguration);
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___cancelButton) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___faceTimeAddPersonButton) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___sharePlayAddPersonButton) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___inviteWithMessagesButton) = 0;
  *(void *)(v1
            + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___inviteWithMessagesButtonStackView) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messagesButton) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messageAndFaceTimeStackView) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoCallMenu) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioCallDisambiguationMenu) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundView) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundGradientLayer) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_allButtons) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownViewModel) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownButton) = 0;
  uint64_t v5 = v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___faceTimeAudioDropdownMenuItem;
  type metadata accessor for DropdownViewModel.MenuItem(0);
  OUTLINED_FUNCTION_53(v5);
  OUTLINED_FUNCTION_53(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___callUsingIPhoneDescriptiveMenuItem);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_buttonsStyle) = a1;
  type metadata accessor for PeoplePickerActionBar();
  double v6 = OUTLINED_FUNCTION_6_2();
  uint64_t v9 = (char *)objc_msgSendSuper2(v7, v8, v6);
  objc_msgSend(v9, sel_setPreservesSuperviewLayoutMargins_, 1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C37709C0;
  *(void *)(v10 + 32) = PeoplePickerActionBar.videoButton.getter();
  *(void *)(v10 + 40) = PeoplePickerActionBar.audioButton.getter();
  *(void *)(v10 + 48) = PeoplePickerActionBar.faceTimeAddPersonButton.getter();
  *(void *)(v10 + 56) = PeoplePickerActionBar.sharePlayAddPersonButton.getter();
  OUTLINED_FUNCTION_1_12();
  *(void *)(v10 + 64) = (*(uint64_t (**)(void))(v11 + 616))();
  *(void *)(v10 + 72) = PeoplePickerActionBar.messagesButton.getter();
  *(void *)(v10 + 80) = PeoplePickerActionBar.cancelButton.getter();
  *(void *)(v10 + 88) = PeoplePickerActionBar.audioVideoDropdownButton.getter();
  specialized Array._endMutation()();
  *(void *)&v9[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_allButtons] = v10;
  swift_bridgeObjectRelease();
  PeoplePickerActionBar.configureBackgroundView()();
  PeoplePickerActionBar.configureButtonActions()();
  PeoplePickerActionBar.configureViewHierarchy()();
  OUTLINED_FUNCTION_1_12();
  (*(void (**)(void))(v12 + 1032))();
  id v13 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v13, sel_addObserver_selector_name_object_, v9, sel_rttEnablementDidChange, *MEMORY[0x1E4F946A8], 0);

  return v9;
}

uint64_t outlined init with take of DropdownViewModel.MenuItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DropdownViewModel.MenuItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PeoplePickerActionBar()
{
  uint64_t result = type metadata singleton initialization cache for PeoplePickerActionBar;
  if (!type metadata singleton initialization cache for PeoplePickerActionBar) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id PeoplePickerActionBar.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PeoplePickerActionBar.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_handleToDisplay] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_generatingLinksEnabled] = 1;
  uint64_t v1 = &v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_serviceAvailability];
  *((_WORD *)v1 + 2) = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___videoButton] = 0;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioButtonConfiguration];
  type metadata accessor for UIButton.Configuration();
  OUTLINED_FUNCTION_10_2(v2);
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_audioButtonLeadingConstraint] = 0;
  OUTLINED_FUNCTION_10_2((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___cancelButtonConfiguration]);
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___cancelButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___faceTimeAddPersonButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___sharePlayAddPersonButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___inviteWithMessagesButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___inviteWithMessagesButtonStackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messagesButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messageAndFaceTimeStackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoCallMenu] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioCallDisambiguationMenu] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundGradientLayer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_allButtons] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownViewModel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownButton] = 0;
  uint64_t v3 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___faceTimeAudioDropdownMenuItem];
  type metadata accessor for DropdownViewModel.MenuItem(0);
  OUTLINED_FUNCTION_10_2(v3);
  OUTLINED_FUNCTION_10_2((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___callUsingIPhoneDescriptiveMenuItem]);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall PeoplePickerActionBar.layoutSubviews()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PeoplePickerActionBar();
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  id v1 = PeoplePickerActionBar.backgroundGradientLayer.getter();
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
}

void PeoplePickerActionBar.configureBackgroundView()()
{
  id v1 = PeoplePickerActionBar.backgroundView.getter();
  OUTLINED_FUNCTION_29_2((uint64_t)v1, sel_addSubview_);

  objc_super v2 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C3769580;
  id v4 = PeoplePickerActionBar.backgroundView.getter();
  id v5 = objc_msgSend(v4, sel_topAnchor);

  id v6 = objc_msgSend(v0, sel_topAnchor);
  id v7 = OUTLINED_FUNCTION_26_48();

  *(void *)(v3 + 32) = v7;
  id v8 = PeoplePickerActionBar.backgroundView.getter();
  id v9 = objc_msgSend(v8, sel_bottomAnchor);

  id v10 = objc_msgSend(v0, sel_bottomAnchor);
  id v11 = OUTLINED_FUNCTION_26_48();

  *(void *)(v3 + 40) = v11;
  id v12 = PeoplePickerActionBar.backgroundView.getter();
  id v13 = objc_msgSend(v12, sel_leadingAnchor);

  id v14 = objc_msgSend(v0, sel_leadingAnchor);
  id v15 = OUTLINED_FUNCTION_26_48();

  *(void *)(v3 + 48) = v15;
  id v16 = PeoplePickerActionBar.backgroundView.getter();
  id v17 = objc_msgSend(v16, sel_trailingAnchor);

  id v18 = objc_msgSend(v0, sel_trailingAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(void *)(v3 + 56) = v19;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_40_27();
  objc_msgSend(v2, sel_activateConstraints_, v22);
  OUTLINED_FUNCTION_1_0();
}

void PeoplePickerActionBar.configureButtonActions()()
{
  id v0 = PeoplePickerActionBar.cancelButton.getter();
  OUTLINED_FUNCTION_7_107(v0, v1, v2, (uint64_t)sel_cancelButtonTapped_);

  id v3 = OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_7_107(v3, v4, v5, (uint64_t)sel_audioButtonTapped_);

  id v6 = PeoplePickerActionBar.videoButton.getter();
  OUTLINED_FUNCTION_7_107(v6, v7, v8, (uint64_t)sel_videoButtonTapped);

  id v9 = PeoplePickerActionBar.faceTimeAddPersonButton.getter();
  OUTLINED_FUNCTION_37_31(v9);

  id v10 = PeoplePickerActionBar.sharePlayAddPersonButton.getter();
  OUTLINED_FUNCTION_37_31(v10);

  OUTLINED_FUNCTION_0_3();
  id v12 = (void *)(*(uint64_t (**)(void))(v11 + 616))();
  OUTLINED_FUNCTION_7_107(v12, v13, v14, (uint64_t)sel_inviteWithMessagesButtonTapped_);

  id v17 = PeoplePickerActionBar.messagesButton.getter();
  OUTLINED_FUNCTION_7_107(v17, v15, v16, (uint64_t)sel_messagesButtonTapped_);
}

void PeoplePickerActionBar.configureViewHierarchy()()
{
  OUTLINED_FUNCTION_0_20();
  int v1 = (*(unsigned __int8 (**)(void))(v0 + 312))();
  if (v1 == 2)
  {
    PeoplePickerActionBar.configureViewForInviteFlow()();
  }
  else if (v1 != 3)
  {
    if (v1 == 4)
    {
      PeoplePickerActionBar.configureViewForSharePlayFlow()();
      return;
    }
    PeoplePickerActionBar.configureViewForAddPersonFlow(avLess:)();
  }
  PeoplePickerActionBar.configureViewWithInviteWithMessagesButton()();
}

void PeoplePickerActionBar.configureViewForInviteFlow()()
{
  id v2 = OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_29_2((uint64_t)v2, sel_addSubview_);

  id v3 = PeoplePickerActionBar.videoButton.getter();
  OUTLINED_FUNCTION_29_2((uint64_t)v3, sel_addSubview_);

  uint64_t v42 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C37709C0;
  id v5 = PeoplePickerActionBar.videoButton.getter();
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = PeoplePickerActionBar.audioButton.getter();
  id v8 = objc_msgSend(v7, sel_trailingAnchor);

  if (one-time initialization token for buttonLeftRightPadding != -1) {
    swift_once();
  }
  id v9 = objc_msgSend(v6, sel_constraintGreaterThanOrEqualToAnchor_constant_, v8, *(double *)&static LayoutConstants.buttonLeftRightPadding);

  *(void *)(v4 + 32) = v9;
  id v10 = PeoplePickerActionBar.videoButton.getter();
  id v11 = objc_msgSend(v10, sel_trailingAnchor);

  id v12 = objc_msgSend(v1, sel_layoutMarginsGuide);
  id v13 = objc_msgSend(v12, sel_trailingAnchor);

  id v14 = objc_msgSend(v11, sel_constraintLessThanOrEqualToAnchor_constant_, v13, -*(double *)&static LayoutConstants.buttonLeftRightPadding);
  *(void *)(v4 + 40) = v14;
  id v15 = PeoplePickerActionBar.videoButton.getter();
  id v16 = objc_msgSend(v15, sel_centerXAnchor);

  id v17 = OUTLINED_FUNCTION_36_30((uint64_t)objc_msgSend(v1, sel_centerXAnchor));
  *(void *)(v4 + 48) = v17;
  id v18 = PeoplePickerActionBar.videoButton.getter();
  id v19 = objc_msgSend(v18, sel_topAnchor);

  id v20 = objc_msgSend(v1, sel_topAnchor);
  if (one-time initialization token for buttonTopPadding != -1) {
    swift_once();
  }
  id v21 = OUTLINED_FUNCTION_19_55();

  *(void *)(v4 + 56) = v21;
  id v22 = PeoplePickerActionBar.videoButton.getter();
  id v23 = objc_msgSend(v22, sel_bottomAnchor);

  id v24 = objc_msgSend(v1, sel_bottomAnchor);
  if (one-time initialization token for buttonBottomPadding != -1) {
    swift_once();
  }
  id v25 = OUTLINED_FUNCTION_19_55();

  *(void *)(v4 + 64) = v25;
  id v26 = PeoplePickerActionBar.audioButton.getter();
  id v27 = objc_msgSend(v26, sel_heightAnchor);

  id v28 = PeoplePickerActionBar.videoButton.getter();
  id v29 = objc_msgSend(v28, sel_heightAnchor);

  id v31 = OUTLINED_FUNCTION_32_32(v30, (const char *)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6);
  *(void *)(v4 + 72) = v31;
  id v32 = PeoplePickerActionBar.audioButton.getter();
  id v33 = objc_msgSend(v32, sel_widthAnchor);

  id v34 = PeoplePickerActionBar.audioButton.getter();
  id v35 = objc_msgSend(v34, sel_heightAnchor);

  id v37 = OUTLINED_FUNCTION_32_32(v36, (const char *)&selRef_initializeCountdownWithInitialValue_fullValue_ + 6);
  *(void *)(v4 + 80) = v37;
  id v38 = PeoplePickerActionBar.audioButton.getter();
  id v39 = objc_msgSend(v38, sel_bottomAnchor);

  id v40 = objc_msgSend(v1, sel_bottomAnchor);
  id v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_constant_, v40, -*(double *)&static LayoutConstants.buttonBottomPadding);

  *(void *)(v4 + 88) = v41;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = OUTLINED_FUNCTION_6_5().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_activateConstraints_, isa);
}

void PeoplePickerActionBar.configureViewForAddPersonFlow(avLess:)()
{
  int v1 = v0;
  OUTLINED_FUNCTION_0_20();
  id v3 = (void *)(*(uint64_t (**)(void))(v2 + 608))();
  OUTLINED_FUNCTION_29_2((uint64_t)v3, sel_addSubview_);
  uint64_t v4 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C3769600;
  id v6 = objc_msgSend(v3, sel_leadingAnchor);
  id v7 = objc_msgSend(v1, sel_layoutMarginsGuide);
  id v8 = objc_msgSend(v7, sel_leadingAnchor);

  if (one-time initialization token for buttonLeftRightPadding != -1) {
    swift_once();
  }
  id v9 = objc_msgSend(v6, sel_constraintGreaterThanOrEqualToAnchor_constant_, v8, *(double *)&static LayoutConstants.buttonLeftRightPadding);

  *(void *)(v5 + 32) = v9;
  id v10 = objc_msgSend(v3, sel_trailingAnchor);
  id v11 = objc_msgSend(v1, sel_layoutMarginsGuide);
  id v12 = objc_msgSend(v11, sel_trailingAnchor);

  id v13 = objc_msgSend(v10, sel_constraintLessThanOrEqualToAnchor_constant_, v12, -*(double *)&static LayoutConstants.buttonLeftRightPadding);
  *(void *)(v5 + 40) = v13;
  id v14 = objc_msgSend(v3, sel_centerXAnchor);
  id v15 = objc_msgSend(v1, sel_centerXAnchor);
  id v16 = OUTLINED_FUNCTION_32_32((uint64_t)v15, sel_constraintEqualToAnchor_);

  *(void *)(v5 + 48) = v16;
  id v17 = objc_msgSend(v3, sel_topAnchor);
  id v18 = objc_msgSend(v1, sel_topAnchor);
  if (one-time initialization token for buttonTopPadding != -1) {
    swift_once();
  }
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, *(double *)&static LayoutConstants.buttonTopPadding);

  *(void *)(v5 + 56) = v19;
  id v20 = objc_msgSend(v3, sel_bottomAnchor);
  id v21 = objc_msgSend(v1, sel_bottomAnchor);
  if (one-time initialization token for buttonBottomPadding != -1) {
    swift_once();
  }
  id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v21, -*(double *)&static LayoutConstants.buttonBottomPadding);

  *(void *)(v5 + 64) = v22;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_40_27();
  objc_msgSend(v4, sel_activateConstraints_, v23);
}

void PeoplePickerActionBar.configureViewWithInviteWithMessagesButton()()
{
  int v1 = v0;
  id v2 = PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
  OUTLINED_FUNCTION_1_12();
  uint64_t v5 = *(uint64_t (**)(void))(v4 + 616);
  id v6 = (void *)v5();
  objc_msgSend(v3, sel_addArrangedSubview_, v6);

  id v7 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C3769600;
  id v9 = PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
  id v10 = objc_msgSend(v9, sel_centerXAnchor);

  id v11 = objc_msgSend(v1, sel_centerXAnchor);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(void *)(v8 + 32) = v12;
  id v13 = PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
  id v14 = objc_msgSend(v13, sel_topAnchor);

  id v15 = objc_msgSend(v1, sel_topAnchor);
  if (one-time initialization token for buttonTopPadding != -1) {
    swift_once();
  }
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, *(double *)&static LayoutConstants.buttonTopPadding);

  *(void *)(v8 + 40) = v16;
  id v17 = PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
  id v18 = objc_msgSend(v17, sel_bottomAnchor);

  id v19 = objc_msgSend(v1, sel_bottomAnchor);
  if (one-time initialization token for buttonBottomPadding != -1) {
    swift_once();
  }
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, -*(double *)&static LayoutConstants.buttonBottomPadding);

  *(void *)(v8 + 48) = v20;
  OUTLINED_FUNCTION_23_58();
  id v21 = (void *)v5();
  id v22 = objc_msgSend(v21, sel_leadingAnchor);

  id v23 = objc_msgSend(v1, sel_layoutMarginsGuide);
  id v24 = objc_msgSend(v23, sel_leadingAnchor);

  id v25 = objc_msgSend(v22, sel_constraintGreaterThanOrEqualToAnchor_, v24);
  *(void *)(v8 + 56) = v25;
  OUTLINED_FUNCTION_23_58();
  id v26 = (void *)v5();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = objc_msgSend(v1, sel_layoutMarginsGuide);
  id v29 = objc_msgSend(v28, sel_trailingAnchor);

  id v31 = OUTLINED_FUNCTION_32_32(v30, sel_constraintLessThanOrEqualToAnchor_);
  *(void *)(v8 + 64) = v31;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = OUTLINED_FUNCTION_6_5().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_activateConstraints_, isa);

  OUTLINED_FUNCTION_23_58();
  id v34 = (id)v5();
  LODWORD(v33) = 1148846080;
  objc_msgSend(v34, sel_setContentCompressionResistancePriority_forAxis_, 1, v33);
}

void PeoplePickerActionBar.configureViewForSharePlayFlow()()
{
  id v2 = PeoplePickerActionBar.messageAndFaceTimeStackView.getter();
  OUTLINED_FUNCTION_29_2((uint64_t)v2, sel_addSubview_);

  id v3 = PeoplePickerActionBar.messageAndFaceTimeStackView.getter();
  id v4 = PeoplePickerActionBar.messagesButton.getter();
  OUTLINED_FUNCTION_29_37((uint64_t)v4, sel_addArrangedSubview_);

  OUTLINED_FUNCTION_0_3();
  if (((*(uint64_t (**)(void))(v5 + 384))() & 0x100) != 0)
  {
    id v6 = PeoplePickerActionBar.videoButton.getter();
    objc_msgSend(v6, sel_removeTarget_action_forControlEvents_, v0, 0, 64);

    id v7 = PeoplePickerActionBar.videoButton.getter();
    uint64_t v8 = PeoplePickerActionBar.audioVideoCallMenu.getter();
    OUTLINED_FUNCTION_29_37((uint64_t)v8, sel_setMenu_);

    id v9 = PeoplePickerActionBar.videoButton.getter();
    objc_msgSend(v9, sel_setShowsMenuAsPrimaryAction_, 1);
  }
  id v10 = PeoplePickerActionBar.messageAndFaceTimeStackView.getter();
  id v11 = PeoplePickerActionBar.videoButton.getter();
  OUTLINED_FUNCTION_29_37((uint64_t)v11, sel_addArrangedSubview_);

  id v12 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C3769600;
  id v14 = PeoplePickerActionBar.messageAndFaceTimeStackView.getter();
  id v15 = objc_msgSend(v14, sel_centerXAnchor);

  id v16 = OUTLINED_FUNCTION_36_30((uint64_t)objc_msgSend(v0, sel_centerXAnchor));
  *(void *)(v13 + 32) = v16;
  id v17 = PeoplePickerActionBar.messageAndFaceTimeStackView.getter();
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = objc_msgSend(v0, sel_topAnchor);
  if (one-time initialization token for buttonTopPadding != -1) {
    swift_once();
  }
  id v20 = OUTLINED_FUNCTION_19_55();

  *(void *)(v13 + 40) = v20;
  id v21 = PeoplePickerActionBar.messageAndFaceTimeStackView.getter();
  id v22 = objc_msgSend(v21, sel_bottomAnchor);

  id v23 = objc_msgSend(v0, sel_bottomAnchor);
  if (one-time initialization token for buttonBottomPadding != -1) {
    swift_once();
  }
  id v24 = OUTLINED_FUNCTION_19_55();

  *(void *)(v13 + 48) = v24;
  id v25 = PeoplePickerActionBar.messageAndFaceTimeStackView.getter();
  id v26 = objc_msgSend(v25, sel_leadingAnchor);

  id v27 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v28 = objc_msgSend(v27, sel_leadingAnchor);

  id v30 = OUTLINED_FUNCTION_32_32(v29, (const char *)(v1 + 750));
  *(void *)(v13 + 56) = v30;
  id v31 = PeoplePickerActionBar.messageAndFaceTimeStackView.getter();
  id v32 = objc_msgSend(v31, sel_trailingAnchor);

  id v33 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v34 = objc_msgSend(v33, sel_trailingAnchor);

  id v35 = objc_msgSend(v32, (SEL)(v1 + 750), v34);
  *(void *)(v13 + 64) = v35;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_40_27();
  objc_msgSend(v12, sel_activateConstraints_, v38);
  OUTLINED_FUNCTION_1_0();
}

Swift::Void __swiftcall PeoplePickerActionBar.updateButtonsState()()
{
  OUTLINED_FUNCTION_4_13();
  int v1 = (*(unsigned __int8 (**)(void))(v0 + 312))();
  switch(v1)
  {
    case 2:
      OUTLINED_FUNCTION_4_13();
      id v3 = *(void (**)(void))(v4 + 1040);
      goto LABEL_12;
    case 3:
      OUTLINED_FUNCTION_4_13();
      id v3 = *(void (**)(void))(v5 + 1048);
      goto LABEL_12;
    case 4:
      OUTLINED_FUNCTION_4_13();
      id v3 = *(void (**)(void))(v2 + 1064);
LABEL_12:
      v3();
      return;
  }
  OUTLINED_FUNCTION_4_13();
  id v7 = *(void (**)(uint64_t))(v6 + 1056);
  uint64_t v9 = v8 & 1;
  v7(v9);
}

Swift::Void __swiftcall PeoplePickerActionBar.updateStateForAudioVideoButtons()()
{
  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_0_20();
  v1 += 48;
  uint64_t v2 = *v1;
  __int16 v3 = (*v1)();
  OUTLINED_FUNCTION_38_29(v3);

  id v4 = PeoplePickerActionBar.videoButton.getter();
  uint64_t v5 = v2();
  PeoplePickerActionBar.updateButton(_:isEnabled:)(v4, BYTE2(v5) & 1);

  PeoplePickerActionBar.updateAudioButtonAction()();
  PeoplePickerActionBar.showAudioAndVideoButtons()();
  PeoplePickerActionBar.updateAudioButtonLeadingConstraint()();
}

Swift::Void __swiftcall PeoplePickerActionBar.updateStateForInviteWithButton()()
{
  id v2 = OUTLINED_FUNCTION_22_53();
  __int16 v3 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x180);
  __int16 v4 = ((uint64_t (*)(id))v3)(v2);
  OUTLINED_FUNCTION_38_29(v4);

  OUTLINED_FUNCTION_0_3();
  uint64_t v6 = (void *)(*(uint64_t (**)(void))(v5 + 616))();
  uint64_t v7 = v3();
  PeoplePickerActionBar.updateButton(_:isEnabled:)(v6, BYTE2(v7) & 1);

  PeoplePickerActionBar.updateAudioButtonAction()();
  PeoplePickerActionBar.showInviteWithMessagesButton()();
  PeoplePickerActionBar.updateAudioButtonLeadingConstraint()();
}

Swift::Void __swiftcall PeoplePickerActionBar.updateStateForAddPersonButton(avLess:)(Swift::Bool avLess)
{
  BOOL v1 = avLess;
  OUTLINED_FUNCTION_161();
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 384))();
  uint64_t v4 = 0x1000000;
  if (v1) {
    uint64_t v4 = 0x100000000;
  }
  char v5 = (v3 & v4) != 0;
  OUTLINED_FUNCTION_0_3();
  uint64_t v7 = (void *)(*(uint64_t (**)(BOOL))(v6 + 608))(v1);
  PeoplePickerActionBar.updateButton(_:isEnabled:)(v7, v5);

  PeoplePickerActionBar.showAddPersonButton(avLess:)(v1);
}

Swift::Void __swiftcall PeoplePickerActionBar.updateStateForSharePlayButtons()()
{
  id v0 = PeoplePickerActionBar.messagesButton.getter();
  OUTLINED_FUNCTION_0_20();
  v1 += 48;
  uint64_t v2 = *v1;
  uint64_t v3 = (*v1)();
  PeoplePickerActionBar.updateButton(_:isEnabled:)(v0, BYTE4(v3) & 1);

  id v4 = PeoplePickerActionBar.videoButton.getter();
  uint64_t v5 = v2();
  PeoplePickerActionBar.updateButton(_:isEnabled:)(v4, BYTE2(v5) & 1);

  PeoplePickerActionBar.showMessagesAndVideoButtons()();
}

id PeoplePickerActionBar.updateButton(_:isEnabled:)(void *a1, char a2)
{
  uint64_t v3 = a2 & 1;
  id result = objc_msgSend(a1, sel_isEnabled);
  if (result != v3)
  {
    return objc_msgSend(a1, sel_setEnabled_, v3);
  }
  return result;
}

void PeoplePickerActionBar.updateAudioButtonAction()()
{
  if (PeoplePickerActionBar.audioCallsRequireDisambiguation()())
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    BOOL v1 = (void *)static OS_os_log.conversationKit;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    objc_msgSend(OUTLINED_FUNCTION_22_53(), sel_removeTarget_action_forControlEvents_, v0, 0, 64);

    OUTLINED_FUNCTION_22_53();
    id v2 = PeoplePickerActionBar.audioCallDisambiguationMenu.getter();
    OUTLINED_FUNCTION_29_37((uint64_t)v2, sel_setMenu_);

    id v4 = PeoplePickerActionBar.audioButton.getter();
    objc_msgSend(v4, sel_setShowsMenuAsPrimaryAction_, 1);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)static OS_os_log.conversationKit;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    objc_msgSend(OUTLINED_FUNCTION_22_53(), sel_addTarget_action_forControlEvents_, v0, sel_audioButtonTapped_, 64);

    objc_msgSend(OUTLINED_FUNCTION_22_53(), sel_setMenu_, 0);
    id v4 = PeoplePickerActionBar.audioButton.getter();
    objc_msgSend(v4, sel_setShowsMenuAsPrimaryAction_, 0);
  }
}

unint64_t PeoplePickerActionBar.audioCallsRequireDisambiguation()()
{
  OUTLINED_FUNCTION_0_20();
  v0 += 48;
  BOOL v1 = *v0;
  if ((*v0)()) {
    return ((unint64_t)v1() >> 8) & 1;
  }
  else {
    return 0;
  }
}

uint64_t PeoplePickerActionBar.hideAllButtons()()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_allButtons);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x1C87744F0](i, v1);
      }
      else {
        id v5 = *(id *)(v1 + 8 * i + 32);
      }
      uint64_t v6 = v5;
      objc_msgSend(v5, sel_setHidden_, 1);
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void PeoplePickerActionBar.showInviteWithMessagesButton()()
{
  PeoplePickerActionBar.hideAllButtons()();
  OUTLINED_FUNCTION_161();
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(v1 + 616))();
  OUTLINED_FUNCTION_21_54(v2);

  OUTLINED_FUNCTION_0_3();
  if (((*(uint64_t (**)(void))(v3 + 384))() & 0x101) != 0
    && (OUTLINED_FUNCTION_161(), ((*(uint64_t (**)(void))(v4 + 312))() - 2) <= 2u))
  {
    id v5 = PeoplePickerActionBar.audioButton.getter();
    OUTLINED_FUNCTION_21_54(v5);

    id v6 = PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
    id v10 = PeoplePickerActionBar.audioButton.getter();
    objc_msgSend(v6, sel_insertArrangedSubview_atIndex_);
  }
  else
  {
    id v7 = PeoplePickerActionBar.audioButton.getter();
    objc_msgSend(v7, sel_setHidden_, 1);

    id v8 = PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
    id v9 = PeoplePickerActionBar.audioButton.getter();
    OUTLINED_FUNCTION_29_37((uint64_t)v9, sel_removeArrangedSubview_);

    id v10 = PeoplePickerActionBar.audioButton.getter();
    objc_msgSend(v0, sel_addSubview_);
  }
}

void PeoplePickerActionBar.updateAudioButtonLeadingConstraint()()
{
  uint64_t v1 = v0;
  id v2 = PeoplePickerActionBar.audioButton.getter();
  id v3 = objc_msgSend(v2, sel_superview);

  if (!v3) {
    goto LABEL_9;
  }
  uint64_t v4 = OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_audioButtonLeadingConstraint;
  id v5 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_audioButtonLeadingConstraint];
  if (v5)
  {
    id v6 = self;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C3769830;
    *(void *)(v7 + 32) = v5;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    id v8 = v5;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_deactivateConstraints_, isa);
  }
  id v10 = PeoplePickerActionBar.audioButton.getter();
  unsigned int v11 = objc_msgSend(v10, sel_isHidden);

  OUTLINED_FUNCTION_1_12();
  uint64_t v13 = (void *)(*(uint64_t (**)(void))(v12 + 616))();
  unsigned int v14 = objc_msgSend(v13, sel_isHidden);

  if (v11 == v14)
  {
LABEL_9:
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    id v15 = PeoplePickerActionBar.audioButton.getter();
    id v16 = objc_msgSend(v15, sel_leadingAnchor);

    id v17 = objc_msgSend(v1, sel_layoutMarginsGuide);
    id v18 = objc_msgSend(v17, sel_leadingAnchor);

    id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
    PeoplePickerActionBar.audioButtonLeadingConstraint.setter((uint64_t)v19);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C3769830;
    id v21 = *(void **)&v1[v4];
    if (v21)
    {
      uint64_t v22 = v20;
      id v23 = self;
      *(void *)(v22 + 32) = v21;
      specialized Array._endMutation()();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      id v24 = v21;
      Array._bridgeToObjectiveC()();
      OUTLINED_FUNCTION_40_27();
      objc_msgSend(v23, sel_activateConstraints_, v27);
      OUTLINED_FUNCTION_1_0();
    }
    else
    {
      __break(1u);
    }
  }
}

void PeoplePickerActionBar.showAudioAndVideoButtons()()
{
  PeoplePickerActionBar.hideAllButtons()();
  id v0 = PeoplePickerActionBar.audioButton.getter();
  OUTLINED_FUNCTION_21_54(v0);

  id v1 = PeoplePickerActionBar.videoButton.getter();
  OUTLINED_FUNCTION_21_54(v1);

  id v2 = PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
  id v3 = PeoplePickerActionBar.audioButton.getter();
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIStackView);
  LOBYTE(v1) = UIFocusEnvironment.contains(_:)();

  if (v1)
  {
    id v4 = PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
    id v5 = PeoplePickerActionBar.audioButton.getter();
    objc_msgSend(v4, sel_removeArrangedSubview_, v5);
  }
}

void PeoplePickerActionBar.showAddPersonButton(avLess:)(uint64_t a1)
{
  PeoplePickerActionBar.hideAllButtons()();
  OUTLINED_FUNCTION_0_20();
  id v3 = (id)(*(uint64_t (**)(uint64_t))(v2 + 608))(a1);
  objc_msgSend(v3, sel_setHidden_, 0);
}

void PeoplePickerActionBar.showMessagesAndVideoButtons()()
{
  PeoplePickerActionBar.hideAllButtons()();
  id v0 = PeoplePickerActionBar.messagesButton.getter();
  OUTLINED_FUNCTION_21_54(v0);

  id v1 = PeoplePickerActionBar.videoButton.getter();
  OUTLINED_FUNCTION_21_54(v1);
}

uint64_t PeoplePickerActionBar.updateLinkButtonsEnabled()()
{
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  id v1 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in PeoplePickerActionBar.updateLinkButtonsEnabled();
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  void aBlock[3] = &block_descriptor_108;
  id v3 = _Block_copy(aBlock);
  swift_release();
  uint64_t v4 = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_4();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_63();
  static DispatchQoS.unspecified.getter();
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x1E4FBC860];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C8773BA0](0, v0, v13, v3);
  _Block_release(v3);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v0, v4);
}

void closure #1 in PeoplePickerActionBar.updateLinkButtonsEnabled()(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x1C8776240](v1);
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v5 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x268))();
    objc_msgSend(v5, sel_setEnabled_, (*(uint64_t (**)(void))((*v4 & *v3) + 0x168))() & 1);
  }
}

id PeoplePickerActionBar.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_7();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_6_2();
  return objc_msgSend(v2, v3, v4);
}

void PeoplePickerActionBar.init(frame:)()
{
}

id PeoplePickerActionBar.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PeoplePickerActionBar();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void PeoplePickerActionBar.audioButtonTapped(_:)()
{
  id v1 = (void *)MEMORY[0x1E4FBC8C8];
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))() & 1) != 0
    && (uint64_t v2 = (*(uint64_t (**)(void))((*v1 & *v0) + 0x150))()) != 0)
  {
    id v12 = (id)v2;
    if ((*(uint64_t (**)(void))((*v1 & *v0) + 0x120))())
    {
      uint64_t v4 = v3;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v6 = *(void (**)(void *, id, void, uint64_t, uint64_t))(v4 + 8);
      id v11 = v12;
      v6(v0, v12, 0, ObjectType, v4);
      swift_unknownObjectRelease();

      uint64_t v7 = v11;
    }
    else
    {
      uint64_t v7 = v12;
    }
  }
  else if ((*(uint64_t (**)(void))((*v1 & *v0) + 0x120))())
  {
    uint64_t v9 = v8;
    uint64_t v10 = swift_getObjectType();
    (*(void (**)(void *, uint64_t, void, uint64_t, uint64_t))(v9 + 8))(v0, 1, 0, v10, v9);
    swift_unknownObjectRelease();
  }
}

uint64_t PeoplePickerActionBar.videoButtonTapped()()
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
  if (result)
  {
    uint64_t v3 = v2;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, void, uint64_t, uint64_t))(v3 + 8))(v0, 2, 0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t PeoplePickerActionBar.cancelButtonTapped(_:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_20();
  uint64_t result = (*(uint64_t (**)(void))(v4 + 288))();
  if (result)
  {
    uint64_t v7 = v6;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v7 + 8))(v2, a2, 0, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t static PeoplePickerActionBar.createButtonBaseConfiguration(title:symbolName:titleLineBreakMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v27 = a6;
  uint64_t v25 = a5;
  uint64_t v26 = a3;
  uint64_t v6 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FB1270], v10);
  UIButton.Configuration.buttonSize.setter();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FB11F8], v6);
  UIButton.Configuration.cornerStyle.setter();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AttributeContainer();
  MEMORY[0x1F4188790](v17 - 8);
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t v18 = type metadata accessor for AttributedString();
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  UIButton.Configuration.attributedTitle.setter();
  id v19 = (void (*)(unsigned char *, void))UIButton.Configuration.attributedTitle.modify();
  if (!__swift_getEnumTagSinglePayload(v20, 1, v18))
  {
    uint64_t KeyPath = swift_getKeyPath();
    *(&v25 - 2) = MEMORY[0x1F4188790](KeyPath);
    swift_getKeyPath();
    id v28 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2908], v25, v26);
    lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
    AttributedString.subscript.setter();
  }
  v19(v29, 0);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  swift_bridgeObjectRetain();
  @nonobjc UIImage.__allocating_init(systemName:)();
  UIButton.Configuration.image.setter();
  id v22 = objc_msgSend(self, sel_configurationWithTextStyle_scale_, *MEMORY[0x1E4FB28C8], 2);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  if (one-time initialization token for buttonImageTitlePadding != -1) {
    swift_once();
  }
  UIButton.Configuration.imagePadding.setter();
  if (one-time initialization token for buttonVerticalInset != -1) {
    swift_once();
  }
  if (one-time initialization token for buttonHorizontalInset != -1) {
    swift_once();
  }
  UIButton.Configuration.contentInsets.setter();
  if (one-time initialization token for activeButtonBackgroundColor != -1) {
    swift_once();
  }
  id v23 = (id)static Colors.PeoplePickerViewController.activeButtonBackgroundColor;
  uint64_t result = UIButton.Configuration.baseBackgroundColor.setter();
  if ((v27 & 1) == 0) {
    return UIButton.Configuration.titleLineBreakMode.setter();
  }
  return result;
}

Swift::Void __swiftcall PeoplePickerActionBar.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for PeoplePickerActionBar();
  objc_msgSendSuper2(&v11, sel_traitCollectionDidChange_, isa);
  if (isa) {
    Class isa = (Class)[(objc_class *)isa preferredContentSizeCategory];
  }
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!isa)
  {

    goto LABEL_11;
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
LABEL_11:
  }
    PeoplePickerActionBar.updateFonts()();
}

uint64_t PeoplePickerActionBar.updateFonts()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v26 = (uint64_t)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v22 - v4;
  unint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_allButtons);
  if (v6 >> 62) {
    goto LABEL_19;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v8 = v6 & 0xC000000000000001;
    uint64_t v9 = 4;
    uint64_t v22 = *MEMORY[0x1E4FB2908];
    unint64_t v23 = v6;
    unint64_t v25 = v6 & 0xC000000000000001;
    while (1)
    {
      id v10 = v8 ? (id)MEMORY[0x1C87744F0](v9 - 4, v6) : *(id *)(v6 + 8 * v9);
      objc_super v11 = v10;
      if (__OFADD__(v9 - 4, 1)) {
        break;
      }
      self;
      uint64_t v12 = swift_dynamicCastObjCClass();
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        UIButton.configuration.getter();
        uint64_t v14 = type metadata accessor for UIButton.Configuration();
        if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v14))
        {
          outlined init with copy of LinkShareCoordinatorProtocol?((uint64_t)v5, v26, &demangling cache variable for type metadata for UIButton.Configuration?);
          UIButton.configuration.setter();
          outlined destroy of Any?((uint64_t)v5, &demangling cache variable for type metadata for UIButton.Configuration?);
        }
        else
        {
          uint64_t v15 = (void (*)(unsigned char *, void))UIButton.Configuration.attributedTitle.modify();
          uint64_t v17 = v16;
          uint64_t v18 = type metadata accessor for AttributedString();
          if (__swift_getEnumTagSinglePayload(v17, 1, v18))
          {
            v15(v28, 0);
            outlined init with copy of LinkShareCoordinatorProtocol?((uint64_t)v5, v26, &demangling cache variable for type metadata for UIButton.Configuration?);
            UIButton.configuration.setter();
            outlined destroy of Any?((uint64_t)v5, &demangling cache variable for type metadata for UIButton.Configuration?);
          }
          else
          {
            uint64_t KeyPath = swift_getKeyPath();
            MEMORY[0x1F4188790](KeyPath);
            *(&v22 - 2) = v20;
            uint64_t v24 = swift_getKeyPath();
            unint64_t v6 = v23;
            id v27 = objc_msgSend(self, sel_preferredFontForTextStyle_, v22);
            lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
            AttributedString.subscript.setter();
            v15(v28, 0);
            UIButton.configuration.setter();
          }
          unint64_t v8 = v25;
        }
        objc_msgSend(v13, sel_setNeedsUpdateConfiguration, v22);
      }

      if (v9 - 3 == v7) {
        return swift_bridgeObjectRelease_n();
      }
      ++v9;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain_n();
  }
  return swift_bridgeObjectRelease_n();
}